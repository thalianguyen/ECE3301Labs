

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun May 02 22:40:21 2021

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    93                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    94  0000                     
    95                           	psect	idataCOMRAM
    96  002334                     __pidataCOMRAM:
    97                           	opt stack 0
    98                           
    99                           ;initializer for _setup_fan_temp
   100  002334  4B                 	db	75
   101                           
   102                           ;initializer for _tempSecond
   103  002335  FF                 	db	255
   104                           
   105                           ;initializer for _wrap
   106  002336  01                 	db	1
   107                           
   108                           	psect	idataBANK0
   109  001B44                     __pidataBANK0:
   110                           	opt stack 0
   111                           
   112                           ;initializer for _array1
   113  001B44  A2                 	db	162
   114  001B45  62                 	db	98
   115  001B46  E2                 	db	226
   116  001B47  22                 	db	34
   117  001B48  02                 	db	2
   118  001B49  C2                 	db	194
   119  001B4A  E0                 	db	224
   120  001B4B  A8                 	db	168
   121  001B4C  90                 	db	144
   122  001B4D  68                 	db	104
   123  001B4E  98                 	db	152
   124  001B4F  B0                 	db	176
   125  001B50  30                 	db	48
   126  001B51  18                 	db	24
   127  001B52  7A                 	db	122
   128  001B53  10                 	db	16
   129  001B54  38                 	db	56
   130  001B55  5A                 	db	90
   131  001B56  42                 	db	66
   132  001B57  4A                 	db	74
   133  001B58  52                 	db	82
   134                           
   135                           ;initializer for _alarm_time
   136  001B59  30                 	db	48
   137  001B5A  30                 	db	48
   138  001B5B  3A                 	db	58
   139  001B5C  30                 	db	48
   140  001B5D  30                 	db	48
   141  001B5E  3A                 	db	58
   142  001B5F  30                 	db	48
   143  001B60  30                 	db	48
   144  001B61  00                 	db	0
   145                           
   146                           ;initializer for _setup_alarm_time
   147  001B62  30                 	db	48
   148  001B63  30                 	db	48
   149  001B64  3A                 	db	58
   150  001B65  30                 	db	48
   151  001B66  30                 	db	48
   152  001B67  3A                 	db	58
   153  001B68  30                 	db	48
   154  001B69  30                 	db	48
   155  001B6A  00                 	db	0
   156                           
   157                           ;initializer for _setup_date
   158  001B6B  30                 	db	48
   159  001B6C  31                 	db	49
   160  001B6D  2F                 	db	47
   161  001B6E  30                 	db	48
   162  001B6F  31                 	db	49
   163  001B70  2F                 	db	47
   164  001B71  30                 	db	48
   165  001B72  30                 	db	48
   166  001B73  00                 	db	0
   167                           
   168                           ;initializer for _setup_time
   169  001B74  30                 	db	48
   170  001B75  30                 	db	48
   171  001B76  3A                 	db	58
   172  001B77  30                 	db	48
   173  001B78  30                 	db	48
   174  001B79  3A                 	db	58
   175  001B7A  30                 	db	48
   176  001B7B  30                 	db	48
   177  001B7C  00                 	db	0
   178                           
   179                           ;initializer for _setup_fan_text
   180  001B7D  30                 	db	48
   181  001B7E  37                 	db	55
   182  001B7F  35                 	db	53
   183  001B80  46                 	db	70
   184  001B81  00                 	db	0
   185                           
   186                           ;initializer for _Alarm_SW_Txt
   187  001B82  4F                 	db	79
   188  001B83  46                 	db	70
   189  001B84  46                 	db	70
   190  001B85  00                 	db	0
   191                           
   192                           ;initializer for _RTC_ALARM_Txt
   193  001B86  30                 	db	48
   194  001B87  00                 	db	0
   195                           
   196                           ;initializer for _date
   197  001B88  30                 	db	48
   198  001B89  30                 	db	48
   199  001B8A  2F                 	db	47
   200  001B8B  30                 	db	48
   201  001B8C  30                 	db	48
   202  001B8D  2F                 	db	47
   203  001B8E  30                 	db	48
   204  001B8F  30                 	db	48
   205  001B90  00                 	db	0
   206                           
   207                           ;initializer for _time
   208  001B91  30                 	db	48
   209  001B92  30                 	db	48
   210  001B93  3A                 	db	58
   211  001B94  30                 	db	48
   212  001B95  30                 	db	48
   213  001B96  3A                 	db	58
   214  001B97  30                 	db	48
   215  001B98  30                 	db	48
   216  001B99  00                 	db	0
   217                           
   218                           ;initializer for _RPM_Txt
   219  001B9A  30                 	db	48
   220  001B9B  30                 	db	48
   221  001B9C  30                 	db	48
   222  001B9D  30                 	db	48
   223  001B9E  00                 	db	0
   224                           
   225                           ;initializer for _DC_Txt
   226  001B9F  30                 	db	48
   227  001BA0  30                 	db	48
   228  001BA1  30                 	db	48
   229  001BA2  00                 	db	0
   230                           
   231                           ;initializer for _Fan_SW_Txt
   232  001BA3  4F                 	db	79
   233  001BA4  46                 	db	70
   234  001BA5  46                 	db	70
   235  001BA6  00                 	db	0
   236                           
   237                           ;initializer for _tempC
   238  001BA7  2B                 	db	43
   239  001BA8  32                 	db	50
   240  001BA9  35                 	db	53
   241  001BAA  00                 	db	0
   242                           
   243                           ;initializer for _tempF
   244  001BAB  2B                 	db	43
   245  001BAC  37                 	db	55
   246  001BAD  37                 	db	55
   247  001BAE  00                 	db	0
   248                           
   249                           	psect	idataBANK1
   250  0020F6                     __pidataBANK1:
   251                           	opt stack 0
   252                           
   253                           ;initializer for _buffer
   254  0020F6  20                 	db	32
   255  0020F7  45                 	db	69
   256  0020F8  43                 	db	67
   257  0020F9  45                 	db	69
   258  0020FA  33                 	db	51
   259  0020FB  33                 	db	51
   260  0020FC  30                 	db	48
   261  0020FD  31                 	db	49
   262  0020FE  4C                 	db	76
   263  0020FF  20                 	db	32
   264  002100  53                 	db	83
   265  002101  70                 	db	112
   266  002102  27                 	db	39
   267  002103  32                 	db	50
   268  002104  31                 	db	49
   269  002105  20                 	db	32
   270  002106  4C                 	db	76
   271  002107  31                 	db	49
   272  002108  32                 	db	50
   273  002109  00                 	db	0
   274  00210A  00                 	db	0
   275  00210B  00                 	db	0
   276  00210C  00                 	db	0
   277  00210D  00                 	db	0
   278  00210E  00                 	db	0
   279  00210F  00                 	db	0
   280  002110  00                 	db	0
   281  002111  00                 	db	0
   282  002112  00                 	db	0
   283  002113  00                 	db	0
   284  002114  00                 	db	0
   285  002115  00                 	db	0
   286  002116  00                 	db	0
   287                           
   288                           	psect	mediumconst
   289  00FD0C                     __pmediumconst:
   290                           	opt stack 0
   291  00FD0C  00                 	db	0
   292  00FD0D                     _font:
   293                           	opt stack 0
   294  00FD0D  00                 	db	0
   295  00FD0E  00                 	db	0
   296  00FD0F  00                 	db	0
   297  00FD10  00                 	db	0
   298  00FD11  00                 	db	0
   299  00FD12  00                 	db	0
   300  00FD13  00                 	db	0
   301  00FD14  5F                 	db	95
   302  00FD15  00                 	db	0
   303  00FD16  00                 	db	0
   304  00FD17  00                 	db	0
   305  00FD18  07                 	db	7
   306  00FD19  00                 	db	0
   307  00FD1A  07                 	db	7
   308  00FD1B  00                 	db	0
   309  00FD1C  14                 	db	20
   310  00FD1D  7F                 	db	127
   311  00FD1E  14                 	db	20
   312  00FD1F  7F                 	db	127
   313  00FD20  14                 	db	20
   314  00FD21  24                 	db	36
   315  00FD22  2A                 	db	42
   316  00FD23  7F                 	db	127
   317  00FD24  2A                 	db	42
   318  00FD25  12                 	db	18
   319  00FD26  23                 	db	35
   320  00FD27  13                 	db	19
   321  00FD28  08                 	db	8
   322  00FD29  64                 	db	100
   323  00FD2A  62                 	db	98
   324  00FD2B  36                 	db	54
   325  00FD2C  49                 	db	73
   326  00FD2D  56                 	db	86
   327  00FD2E  20                 	db	32
   328  00FD2F  50                 	db	80
   329  00FD30  00                 	db	0
   330  00FD31  08                 	db	8
   331  00FD32  07                 	db	7
   332  00FD33  03                 	db	3
   333  00FD34  00                 	db	0
   334  00FD35  00                 	db	0
   335  00FD36  1C                 	db	28
   336  00FD37  22                 	db	34
   337  00FD38  41                 	db	65
   338  00FD39  00                 	db	0
   339  00FD3A  00                 	db	0
   340  00FD3B  41                 	db	65
   341  00FD3C  22                 	db	34
   342  00FD3D  1C                 	db	28
   343  00FD3E  00                 	db	0
   344  00FD3F  2A                 	db	42
   345  00FD40  1C                 	db	28
   346  00FD41  7F                 	db	127
   347  00FD42  1C                 	db	28
   348  00FD43  2A                 	db	42
   349  00FD44  08                 	db	8
   350  00FD45  08                 	db	8
   351  00FD46  3E                 	db	62
   352  00FD47  08                 	db	8
   353  00FD48  08                 	db	8
   354  00FD49  00                 	db	0
   355  00FD4A  80                 	db	128
   356  00FD4B  70                 	db	112
   357  00FD4C  30                 	db	48
   358  00FD4D  00                 	db	0
   359  00FD4E  08                 	db	8
   360  00FD4F  08                 	db	8
   361  00FD50  08                 	db	8
   362  00FD51  08                 	db	8
   363  00FD52  08                 	db	8
   364  00FD53  00                 	db	0
   365  00FD54  00                 	db	0
   366  00FD55  60                 	db	96
   367  00FD56  60                 	db	96
   368  00FD57  00                 	db	0
   369  00FD58  20                 	db	32
   370  00FD59  10                 	db	16
   371  00FD5A  08                 	db	8
   372  00FD5B  04                 	db	4
   373  00FD5C  02                 	db	2
   374  00FD5D  3E                 	db	62
   375  00FD5E  51                 	db	81
   376  00FD5F  49                 	db	73
   377  00FD60  45                 	db	69
   378  00FD61  3E                 	db	62
   379  00FD62  00                 	db	0
   380  00FD63  42                 	db	66
   381  00FD64  7F                 	db	127
   382  00FD65  40                 	db	64
   383  00FD66  00                 	db	0
   384  00FD67  72                 	db	114
   385  00FD68  49                 	db	73
   386  00FD69  49                 	db	73
   387  00FD6A  49                 	db	73
   388  00FD6B  46                 	db	70
   389  00FD6C  21                 	db	33
   390  00FD6D  41                 	db	65
   391  00FD6E  49                 	db	73
   392  00FD6F  4D                 	db	77
   393  00FD70  33                 	db	51
   394  00FD71  18                 	db	24
   395  00FD72  14                 	db	20
   396  00FD73  12                 	db	18
   397  00FD74  7F                 	db	127
   398  00FD75  10                 	db	16
   399  00FD76  27                 	db	39
   400  00FD77  45                 	db	69
   401  00FD78  45                 	db	69
   402  00FD79  45                 	db	69
   403  00FD7A  39                 	db	57
   404  00FD7B  3C                 	db	60
   405  00FD7C  4A                 	db	74
   406  00FD7D  49                 	db	73
   407  00FD7E  49                 	db	73
   408  00FD7F  31                 	db	49
   409  00FD80  41                 	db	65
   410  00FD81  21                 	db	33
   411  00FD82  11                 	db	17
   412  00FD83  09                 	db	9
   413  00FD84  07                 	db	7
   414  00FD85  36                 	db	54
   415  00FD86  49                 	db	73
   416  00FD87  49                 	db	73
   417  00FD88  49                 	db	73
   418  00FD89  36                 	db	54
   419  00FD8A  46                 	db	70
   420  00FD8B  49                 	db	73
   421  00FD8C  49                 	db	73
   422  00FD8D  29                 	db	41
   423  00FD8E  1E                 	db	30
   424  00FD8F  00                 	db	0
   425  00FD90  00                 	db	0
   426  00FD91  14                 	db	20
   427  00FD92  00                 	db	0
   428  00FD93  00                 	db	0
   429  00FD94  00                 	db	0
   430  00FD95  40                 	db	64
   431  00FD96  34                 	db	52
   432  00FD97  00                 	db	0
   433  00FD98  00                 	db	0
   434  00FD99  00                 	db	0
   435  00FD9A  08                 	db	8
   436  00FD9B  14                 	db	20
   437  00FD9C  22                 	db	34
   438  00FD9D  41                 	db	65
   439  00FD9E  14                 	db	20
   440  00FD9F  14                 	db	20
   441  00FDA0  14                 	db	20
   442  00FDA1  14                 	db	20
   443  00FDA2  14                 	db	20
   444  00FDA3  00                 	db	0
   445  00FDA4  41                 	db	65
   446  00FDA5  22                 	db	34
   447  00FDA6  14                 	db	20
   448  00FDA7  08                 	db	8
   449  00FDA8  02                 	db	2
   450  00FDA9  01                 	db	1
   451  00FDAA  59                 	db	89
   452  00FDAB  09                 	db	9
   453  00FDAC  06                 	db	6
   454  00FDAD  3E                 	db	62
   455  00FDAE  41                 	db	65
   456  00FDAF  5D                 	db	93
   457  00FDB0  59                 	db	89
   458  00FDB1  4E                 	db	78
   459  00FDB2  7C                 	db	124
   460  00FDB3  12                 	db	18
   461  00FDB4  11                 	db	17
   462  00FDB5  12                 	db	18
   463  00FDB6  7C                 	db	124
   464  00FDB7  7F                 	db	127
   465  00FDB8  49                 	db	73
   466  00FDB9  49                 	db	73
   467  00FDBA  49                 	db	73
   468  00FDBB  36                 	db	54
   469  00FDBC  3E                 	db	62
   470  00FDBD  41                 	db	65
   471  00FDBE  41                 	db	65
   472  00FDBF  41                 	db	65
   473  00FDC0  22                 	db	34
   474  00FDC1  7F                 	db	127
   475  00FDC2  41                 	db	65
   476  00FDC3  41                 	db	65
   477  00FDC4  41                 	db	65
   478  00FDC5  3E                 	db	62
   479  00FDC6  7F                 	db	127
   480  00FDC7  49                 	db	73
   481  00FDC8  49                 	db	73
   482  00FDC9  49                 	db	73
   483  00FDCA  41                 	db	65
   484  00FDCB  7F                 	db	127
   485  00FDCC  09                 	db	9
   486  00FDCD  09                 	db	9
   487  00FDCE  09                 	db	9
   488  00FDCF  01                 	db	1
   489  00FDD0  3E                 	db	62
   490  00FDD1  41                 	db	65
   491  00FDD2  41                 	db	65
   492  00FDD3  51                 	db	81
   493  00FDD4  73                 	db	115
   494  00FDD5  7F                 	db	127
   495  00FDD6  08                 	db	8
   496  00FDD7  08                 	db	8
   497  00FDD8  08                 	db	8
   498  00FDD9  7F                 	db	127
   499  00FDDA  00                 	db	0
   500  00FDDB  41                 	db	65
   501  00FDDC  7F                 	db	127
   502  00FDDD  41                 	db	65
   503  00FDDE  00                 	db	0
   504  00FDDF  20                 	db	32
   505  00FDE0  40                 	db	64
   506  00FDE1  41                 	db	65
   507  00FDE2  3F                 	db	63
   508  00FDE3  01                 	db	1
   509  00FDE4  7F                 	db	127
   510  00FDE5  08                 	db	8
   511  00FDE6  14                 	db	20
   512  00FDE7  22                 	db	34
   513  00FDE8  41                 	db	65
   514  00FDE9  7F                 	db	127
   515  00FDEA  40                 	db	64
   516  00FDEB  40                 	db	64
   517  00FDEC  40                 	db	64
   518  00FDED  40                 	db	64
   519  00FDEE  7F                 	db	127
   520  00FDEF  02                 	db	2
   521  00FDF0  1C                 	db	28
   522  00FDF1  02                 	db	2
   523  00FDF2  7F                 	db	127
   524  00FDF3  7F                 	db	127
   525  00FDF4  04                 	db	4
   526  00FDF5  08                 	db	8
   527  00FDF6  10                 	db	16
   528  00FDF7  7F                 	db	127
   529  00FDF8  3E                 	db	62
   530  00FDF9  41                 	db	65
   531  00FDFA  41                 	db	65
   532  00FDFB  41                 	db	65
   533  00FDFC  3E                 	db	62
   534  00FDFD  7F                 	db	127
   535  00FDFE  09                 	db	9
   536  00FDFF  09                 	db	9
   537  00FE00  09                 	db	9
   538  00FE01  06                 	db	6
   539  00FE02  3E                 	db	62
   540  00FE03  41                 	db	65
   541  00FE04  51                 	db	81
   542  00FE05  21                 	db	33
   543  00FE06  5E                 	db	94
   544  00FE07  7F                 	db	127
   545  00FE08  09                 	db	9
   546  00FE09  19                 	db	25
   547  00FE0A  29                 	db	41
   548  00FE0B  46                 	db	70
   549  00FE0C                     __end_of_font:
   550                           	opt stack 0
   551  00FE0C                     _font2:
   552                           	opt stack 0
   553  00FE0C  26                 	db	38
   554  00FE0D  49                 	db	73
   555  00FE0E  49                 	db	73
   556  00FE0F  49                 	db	73
   557  00FE10  32                 	db	50
   558  00FE11  03                 	db	3
   559  00FE12  01                 	db	1
   560  00FE13  7F                 	db	127
   561  00FE14  01                 	db	1
   562  00FE15  03                 	db	3
   563  00FE16  3F                 	db	63
   564  00FE17  40                 	db	64
   565  00FE18  40                 	db	64
   566  00FE19  40                 	db	64
   567  00FE1A  3F                 	db	63
   568  00FE1B  1F                 	db	31
   569  00FE1C  20                 	db	32
   570  00FE1D  40                 	db	64
   571  00FE1E  20                 	db	32
   572  00FE1F  1F                 	db	31
   573  00FE20  3F                 	db	63
   574  00FE21  40                 	db	64
   575  00FE22  38                 	db	56
   576  00FE23  40                 	db	64
   577  00FE24  3F                 	db	63
   578  00FE25  63                 	db	99
   579  00FE26  14                 	db	20
   580  00FE27  08                 	db	8
   581  00FE28  14                 	db	20
   582  00FE29  63                 	db	99
   583  00FE2A  03                 	db	3
   584  00FE2B  04                 	db	4
   585  00FE2C  78                 	db	120
   586  00FE2D  04                 	db	4
   587  00FE2E  03                 	db	3
   588  00FE2F  61                 	db	97
   589  00FE30  59                 	db	89
   590  00FE31  49                 	db	73
   591  00FE32  4D                 	db	77
   592  00FE33  43                 	db	67
   593  00FE34  00                 	db	0
   594  00FE35  7F                 	db	127
   595  00FE36  41                 	db	65
   596  00FE37  41                 	db	65
   597  00FE38  41                 	db	65
   598  00FE39  02                 	db	2
   599  00FE3A  04                 	db	4
   600  00FE3B  08                 	db	8
   601  00FE3C  10                 	db	16
   602  00FE3D  20                 	db	32
   603  00FE3E  00                 	db	0
   604  00FE3F  41                 	db	65
   605  00FE40  41                 	db	65
   606  00FE41  41                 	db	65
   607  00FE42  7F                 	db	127
   608  00FE43  04                 	db	4
   609  00FE44  02                 	db	2
   610  00FE45  01                 	db	1
   611  00FE46  02                 	db	2
   612  00FE47  04                 	db	4
   613  00FE48  40                 	db	64
   614  00FE49  40                 	db	64
   615  00FE4A  40                 	db	64
   616  00FE4B  40                 	db	64
   617  00FE4C  40                 	db	64
   618  00FE4D  00                 	db	0
   619  00FE4E  03                 	db	3
   620  00FE4F  07                 	db	7
   621  00FE50  08                 	db	8
   622  00FE51  00                 	db	0
   623  00FE52  20                 	db	32
   624  00FE53  54                 	db	84
   625  00FE54  54                 	db	84
   626  00FE55  78                 	db	120
   627  00FE56  40                 	db	64
   628  00FE57  7F                 	db	127
   629  00FE58  28                 	db	40
   630  00FE59  44                 	db	68
   631  00FE5A  44                 	db	68
   632  00FE5B  38                 	db	56
   633  00FE5C  38                 	db	56
   634  00FE5D  44                 	db	68
   635  00FE5E  44                 	db	68
   636  00FE5F  44                 	db	68
   637  00FE60  28                 	db	40
   638  00FE61  38                 	db	56
   639  00FE62  44                 	db	68
   640  00FE63  44                 	db	68
   641  00FE64  28                 	db	40
   642  00FE65  7F                 	db	127
   643  00FE66  38                 	db	56
   644  00FE67  54                 	db	84
   645  00FE68  54                 	db	84
   646  00FE69  54                 	db	84
   647  00FE6A  18                 	db	24
   648  00FE6B  00                 	db	0
   649  00FE6C  08                 	db	8
   650  00FE6D  7E                 	db	126
   651  00FE6E  09                 	db	9
   652  00FE6F  02                 	db	2
   653  00FE70  18                 	db	24
   654  00FE71  A4                 	db	164
   655  00FE72  A4                 	db	164
   656  00FE73  9C                 	db	156
   657  00FE74  78                 	db	120
   658  00FE75  7F                 	db	127
   659  00FE76  08                 	db	8
   660  00FE77  04                 	db	4
   661  00FE78  04                 	db	4
   662  00FE79  78                 	db	120
   663  00FE7A  00                 	db	0
   664  00FE7B  44                 	db	68
   665  00FE7C  7D                 	db	125
   666  00FE7D  40                 	db	64
   667  00FE7E  00                 	db	0
   668  00FE7F  20                 	db	32
   669  00FE80  40                 	db	64
   670  00FE81  40                 	db	64
   671  00FE82  3D                 	db	61
   672  00FE83  00                 	db	0
   673  00FE84  7F                 	db	127
   674  00FE85  10                 	db	16
   675  00FE86  28                 	db	40
   676  00FE87  44                 	db	68
   677  00FE88  00                 	db	0
   678  00FE89  00                 	db	0
   679  00FE8A  41                 	db	65
   680  00FE8B  7F                 	db	127
   681  00FE8C  40                 	db	64
   682  00FE8D  00                 	db	0
   683  00FE8E  7C                 	db	124
   684  00FE8F  04                 	db	4
   685  00FE90  78                 	db	120
   686  00FE91  04                 	db	4
   687  00FE92  78                 	db	120
   688  00FE93  7C                 	db	124
   689  00FE94  08                 	db	8
   690  00FE95  04                 	db	4
   691  00FE96  04                 	db	4
   692  00FE97  78                 	db	120
   693  00FE98  38                 	db	56
   694  00FE99  44                 	db	68
   695  00FE9A  44                 	db	68
   696  00FE9B  44                 	db	68
   697  00FE9C  38                 	db	56
   698  00FE9D  FC                 	db	252
   699  00FE9E  18                 	db	24
   700  00FE9F  24                 	db	36
   701  00FEA0  24                 	db	36
   702  00FEA1  18                 	db	24
   703  00FEA2  18                 	db	24
   704  00FEA3  24                 	db	36
   705  00FEA4  24                 	db	36
   706  00FEA5  18                 	db	24
   707  00FEA6  FC                 	db	252
   708  00FEA7  7C                 	db	124
   709  00FEA8  08                 	db	8
   710  00FEA9  04                 	db	4
   711  00FEAA  04                 	db	4
   712  00FEAB  08                 	db	8
   713  00FEAC  48                 	db	72
   714  00FEAD  54                 	db	84
   715  00FEAE  54                 	db	84
   716  00FEAF  54                 	db	84
   717  00FEB0  24                 	db	36
   718  00FEB1  04                 	db	4
   719  00FEB2  04                 	db	4
   720  00FEB3  3F                 	db	63
   721  00FEB4  44                 	db	68
   722  00FEB5  24                 	db	36
   723  00FEB6  3C                 	db	60
   724  00FEB7  40                 	db	64
   725  00FEB8  40                 	db	64
   726  00FEB9  20                 	db	32
   727  00FEBA  7C                 	db	124
   728  00FEBB  1C                 	db	28
   729  00FEBC  20                 	db	32
   730  00FEBD  40                 	db	64
   731  00FEBE  20                 	db	32
   732  00FEBF  1C                 	db	28
   733  00FEC0  3C                 	db	60
   734  00FEC1  40                 	db	64
   735  00FEC2  30                 	db	48
   736  00FEC3  40                 	db	64
   737  00FEC4  3C                 	db	60
   738  00FEC5  44                 	db	68
   739  00FEC6  28                 	db	40
   740  00FEC7  10                 	db	16
   741  00FEC8  28                 	db	40
   742  00FEC9  44                 	db	68
   743  00FECA  4C                 	db	76
   744  00FECB  90                 	db	144
   745  00FECC  90                 	db	144
   746  00FECD  90                 	db	144
   747  00FECE  7C                 	db	124
   748  00FECF  44                 	db	68
   749  00FED0  64                 	db	100
   750  00FED1  54                 	db	84
   751  00FED2  4C                 	db	76
   752  00FED3  44                 	db	68
   753  00FED4  00                 	db	0
   754  00FED5  08                 	db	8
   755  00FED6  36                 	db	54
   756  00FED7  41                 	db	65
   757  00FED8  00                 	db	0
   758  00FED9  00                 	db	0
   759  00FEDA  00                 	db	0
   760  00FEDB  77                 	db	119
   761  00FEDC  00                 	db	0
   762  00FEDD  00                 	db	0
   763  00FEDE  00                 	db	0
   764  00FEDF  41                 	db	65
   765  00FEE0  36                 	db	54
   766  00FEE1  08                 	db	8
   767  00FEE2  00                 	db	0
   768  00FEE3  02                 	db	2
   769  00FEE4  01                 	db	1
   770  00FEE5  02                 	db	2
   771  00FEE6  04                 	db	4
   772  00FEE7  02                 	db	2
   773  00FEE8                     __end_of_font2:
   774                           	opt stack 0
   775  00FEE8                     _dpowers:
   776                           	opt stack 0
   777  00FEE8  0001               	dw	1
   778  00FEEA  000A               	dw	10
   779  00FEEC  0064               	dw	100
   780  00FEEE  03E8               	dw	1000
   781  00FEF0  2710               	dw	10000
   782  00FEF2                     __end_of_dpowers:
   783                           	opt stack 0
   784  00FEF2                     _hexpowers:
   785                           	opt stack 0
   786  00FEF2  0001               	dw	1
   787  00FEF4  0010               	dw	16
   788  00FEF6  0100               	dw	256
   789  00FEF8  1000               	dw	4096
   790  00FEFA                     __end_of_hexpowers:
   791                           	opt stack 0
   792  0000                     _ADCON1	set	4033
   793  0000                     _CCP1CON	set	4029
   794  0000                     _CCP2CON	set	4026
   795  0000                     _CCPR1L	set	4030
   796  0000                     _CCPR2L	set	4027
   797  0000                     _INTCON2bits	set	4081
   798  0000                     _INTCONbits	set	4082
   799  0000                     _OSCCON	set	4051
   800  0000                     _PIE1bits	set	3997
   801  0000                     _PIR1bits	set	3998
   802  0000                     _PORTAbits	set	3968
   803  0000                     _PORTBbits	set	3969
   804  0000                     _PORTDbits	set	3971
   805  0000                     _PORTEbits	set	3972
   806  0000                     _PR2	set	4043
   807  0000                     _RCSTA	set	4011
   808  0000                     _RCSTAbits	set	4011
   809  0000                     _SPBRG	set	4015
   810  0000                     _SPBRGH	set	4016
   811  0000                     _SSPBUF	set	4041
   812  0000                     _SSPCON1	set	4038
   813  0000                     _SSPSTAT	set	4039
   814  0000                     _SSPSTATbits	set	4039
   815  0000                     _T0CON	set	4053
   816  0000                     _T0CONbits	set	4053
   817  0000                     _T1CON	set	4045
   818  0000                     _T1CONbits	set	4045
   819  0000                     _T2CON	set	4042
   820  0000                     _T3CON	set	4017
   821  0000                     _TMR0H	set	4055
   822  0000                     _TMR0L	set	4054
   823  0000                     _TMR1H	set	4047
   824  0000                     _TMR1L	set	4046
   825  0000                     _TMR3L	set	4018
   826  0000                     _TRISA	set	3986
   827  0000                     _TRISB	set	3987
   828  0000                     _TRISC	set	3988
   829  0000                     _TRISCbits	set	3988
   830  0000                     _TRISD	set	3989
   831  0000                     _TRISDbits	set	3989
   832  0000                     _TRISE	set	3990
   833  0000                     _TXREG	set	4013
   834  0000                     _TXSTA	set	4012
   835  0000                     _TXSTAbits	set	4012
   836  0000                     _RBPU	set	32655
   837  0000                     _TRMT	set	32097
   838  00FEFA                     STR_13:
   839  00FEFA  25                 	db	37
   840  00FEFB  30                 	db	48	;'0'
   841  00FEFC  32                 	db	50	;'2'
   842  00FEFD  78                 	db	120	;'x'
   843  00FEFE  3A                 	db	58	;':'
   844  00FEFF  25                 	db	37
   845  00FF00  30                 	db	48	;'0'
   846  00FF01  32                 	db	50	;'2'
   847  00FF02  78                 	db	120	;'x'
   848  00FF03  3A                 	db	58	;':'
   849  00FF04  25                 	db	37
   850  00FF05  30                 	db	48	;'0'
   851  00FF06  32                 	db	50	;'2'
   852  00FF07  78                 	db	120	;'x'
   853  00FF08  20                 	db	32
   854  00FF09  25                 	db	37
   855  00FF0A  30                 	db	48	;'0'
   856  00FF0B  32                 	db	50	;'2'
   857  00FF0C  78                 	db	120	;'x'
   858  00FF0D  2F                 	db	47
   859  00FF0E  25                 	db	37
   860  00FF0F  30                 	db	48	;'0'
   861  00FF10  32                 	db	50	;'2'
   862  00FF11  78                 	db	120	;'x'
   863  00FF12  2F                 	db	47
   864  00FF13  25                 	db	37
   865  00FF14  30                 	db	48	;'0'
   866  00FF15  32                 	db	50	;'2'
   867  00FF16  78                 	db	120	;'x'
   868  00FF17  00                 	db	0
   869  00FF18                     STR_17:
   870  00FF18  43                 	db	67	;'C'
   871  00FF19  61                 	db	97	;'a'
   872  00FF1A  6E                 	db	110	;'n'
   873  00FF1B  6E                 	db	110	;'n'
   874  00FF1C  6F                 	db	111	;'o'
   875  00FF1D  74                 	db	116	;'t'
   876  00FF1E  20                 	db	32
   877  00FF1F  66                 	db	102	;'f'
   878  00FF20  69                 	db	105	;'i'
   879  00FF21  6E                 	db	110	;'n'
   880  00FF22  64                 	db	100	;'d'
   881  00FF23  20                 	db	32
   882  00FF24  62                 	db	98	;'b'
   883  00FF25  75                 	db	117	;'u'
   884  00FF26  74                 	db	116	;'t'
   885  00FF27  74                 	db	116	;'t'
   886  00FF28  6F                 	db	111	;'o'
   887  00FF29  6E                 	db	110	;'n'
   888  00FF2A  20                 	db	32
   889  00FF2B  0D                 	db	13
   890  00FF2C  0A                 	db	10
   891  00FF2D  00                 	db	0
   892  00FF2E                     STR_20:
   893  00FF2E  0A                 	db	10
   894  00FF2F  20                 	db	32
   895  00FF30  46                 	db	70	;'F'
   896  00FF31  61                 	db	97	;'a'
   897  00FF32  6E                 	db	110	;'n'
   898  00FF33  20                 	db	32
   899  00FF34  69                 	db	105	;'i'
   900  00FF35  73                 	db	115	;'s'
   901  00FF36  20                 	db	32
   902  00FF37  74                 	db	116	;'t'
   903  00FF38  75                 	db	117	;'u'
   904  00FF39  72                 	db	114	;'r'
   905  00FF3A  6E                 	db	110	;'n'
   906  00FF3B  65                 	db	101	;'e'
   907  00FF3C  64                 	db	100	;'d'
   908  00FF3D  20                 	db	32
   909  00FF3E  6F                 	db	111	;'o'
   910  00FF3F  66                 	db	102	;'f'
   911  00FF40  66                 	db	102	;'f'
   912  00FF41  2E                 	db	46
   913  00FF42  0A                 	db	10
   914  00FF43  00                 	db	0
   915  00FF44                     STR_1:
   916  00FF44  45                 	db	69	;'E'
   917  00FF45  43                 	db	67	;'C'
   918  00FF46  45                 	db	69	;'E'
   919  00FF47  33                 	db	51	;'3'
   920  00FF48  33                 	db	51	;'3'
   921  00FF49  30                 	db	48	;'0'
   922  00FF4A  31                 	db	49	;'1'
   923  00FF4B  4C                 	db	76	;'L'
   924  00FF4C  20                 	db	32
   925  00FF4D  53                 	db	83	;'S'
   926  00FF4E  70                 	db	112	;'p'
   927  00FF4F  72                 	db	114	;'r'
   928  00FF50  69                 	db	105	;'i'
   929  00FF51  6E                 	db	110	;'n'
   930  00FF52  67                 	db	103	;'g'
   931  00FF53  20                 	db	32
   932  00FF54  32                 	db	50	;'2'
   933  00FF55  31                 	db	49	;'1'
   934  00FF56  2D                 	db	45
   935  00FF57  53                 	db	83	;'S'
   936  00FF58  33                 	db	51	;'3'
   937  00FF59  00                 	db	0
   938  00FF5A                     STR_19:
   939  00FF5A  0A                 	db	10
   940  00FF5B  20                 	db	32
   941  00FF5C  46                 	db	70	;'F'
   942  00FF5D  61                 	db	97	;'a'
   943  00FF5E  6E                 	db	110	;'n'
   944  00FF5F  20                 	db	32
   945  00FF60  69                 	db	105	;'i'
   946  00FF61  73                 	db	115	;'s'
   947  00FF62  20                 	db	32
   948  00FF63  74                 	db	116	;'t'
   949  00FF64  75                 	db	117	;'u'
   950  00FF65  72                 	db	114	;'r'
   951  00FF66  6E                 	db	110	;'n'
   952  00FF67  65                 	db	101	;'e'
   953  00FF68  64                 	db	100	;'d'
   954  00FF69  20                 	db	32
   955  00FF6A  6F                 	db	111	;'o'
   956  00FF6B  6E                 	db	110	;'n'
   957  00FF6C  2E                 	db	46
   958  00FF6D  0A                 	db	10
   959  00FF6E  00                 	db	0
   960  00FF6F                     STR_14:
   961  00FF6F  20                 	db	32
   962  00FF70  54                 	db	84	;'T'
   963  00FF71  65                 	db	101	;'e'
   964  00FF72  6D                 	db	109	;'m'
   965  00FF73  70                 	db	112	;'p'
   966  00FF74  20                 	db	32
   967  00FF75  3D                 	db	61	;'='
   968  00FF76  20                 	db	32
   969  00FF77  25                 	db	37
   970  00FF78  64                 	db	100	;'d'
   971  00FF79  20                 	db	32
   972  00FF7A  43                 	db	67	;'C'
   973  00FF7B  20                 	db	32
   974  00FF7C  3D                 	db	61	;'='
   975  00FF7D  20                 	db	32
   976  00FF7E  25                 	db	37
   977  00FF7F  64                 	db	100	;'d'
   978  00FF80  20                 	db	32
   979  00FF81  46                 	db	70	;'F'
   980  00FF82  20                 	db	32
   981  00FF83  00                 	db	0
   982  00FF84                     STR_15:
   983  00FF84  52                 	db	82	;'R'
   984  00FF85  50                 	db	80	;'P'
   985  00FF86  4D                 	db	77	;'M'
   986  00FF87  20                 	db	32
   987  00FF88  3D                 	db	61	;'='
   988  00FF89  20                 	db	32
   989  00FF8A  25                 	db	37
   990  00FF8B  64                 	db	100	;'d'
   991  00FF8C  20                 	db	32
   992  00FF8D  20                 	db	32
   993  00FF8E  64                 	db	100	;'d'
   994  00FF8F  63                 	db	99	;'c'
   995  00FF90  20                 	db	32
   996  00FF91  3D                 	db	61	;'='
   997  00FF92  20                 	db	32
   998  00FF93  25                 	db	37
   999  00FF94  64                 	db	100	;'d'
  1000  00FF95  0D                 	db	13
  1001  00FF96  0A                 	db	10
  1002  00FF97  00                 	db	0
  1003  00FF98                     STR_21:
  1004  00FF98  30                 	db	48	;'0'
  1005  00FF99  31                 	db	49	;'1'
  1006  00FF9A  32                 	db	50	;'2'
  1007  00FF9B  33                 	db	51	;'3'
  1008  00FF9C  34                 	db	52	;'4'
  1009  00FF9D  35                 	db	53	;'5'
  1010  00FF9E  36                 	db	54	;'6'
  1011  00FF9F  37                 	db	55	;'7'
  1012  00FFA0  38                 	db	56	;'8'
  1013  00FFA1  39                 	db	57	;'9'
  1014  00FFA2  61                 	db	97	;'a'
  1015  00FFA3  62                 	db	98	;'b'
  1016  00FFA4  63                 	db	99	;'c'
  1017  00FFA5  64                 	db	100	;'d'
  1018  00FFA6  65                 	db	101	;'e'
  1019  00FFA7  66                 	db	102	;'f'
  1020  00FFA8  00                 	db	0
  1021  00FFA9                     STR_16:
  1022  00FFA9  4E                 	db	78	;'N'
  1023  00FFAA  45                 	db	69	;'E'
  1024  00FFAB  43                 	db	67	;'C'
  1025  00FFAC  5F                 	db	95	;'_'
  1026  00FFAD  43                 	db	67	;'C'
  1027  00FFAE  6F                 	db	111	;'o'
  1028  00FFAF  64                 	db	100	;'d'
  1029  00FFB0  65                 	db	101	;'e'
  1030  00FFB1  20                 	db	32
  1031  00FFB2  3D                 	db	61	;'='
  1032  00FFB3  20                 	db	32
  1033  00FFB4  25                 	db	37
  1034  00FFB5  78                 	db	120	;'x'
  1035  00FFB6  0D                 	db	13
  1036  00FFB7  0A                 	db	10
  1037  00FFB8  00                 	db	0
  1038  00FFB9                     STR_18:
  1039  00FFB9  62                 	db	98	;'b'
  1040  00FFBA  75                 	db	117	;'u'
  1041  00FFBB  74                 	db	116	;'t'
  1042  00FFBC  74                 	db	116	;'t'
  1043  00FFBD  6F                 	db	111	;'o'
  1044  00FFBE  6E                 	db	110	;'n'
  1045  00FFBF  20                 	db	32
  1046  00FFC0  3D                 	db	61	;'='
  1047  00FFC1  20                 	db	32
  1048  00FFC2  25                 	db	37
  1049  00FFC3  64                 	db	100	;'d'
  1050  00FFC4  20                 	db	32
  1051  00FFC5  0D                 	db	13
  1052  00FFC6  0A                 	db	10
  1053  00FFC7  00                 	db	0
  1054  00FFC8                     STR_2:
  1055  00FFC8  54                 	db	84	;'T'
  1056  00FFC9  65                 	db	101	;'e'
  1057  00FFCA  6D                 	db	109	;'m'
  1058  00FFCB  70                 	db	112	;'p'
  1059  00FFCC  65                 	db	101	;'e'
  1060  00FFCD  72                 	db	114	;'r'
  1061  00FFCE  61                 	db	97	;'a'
  1062  00FFCF  74                 	db	116	;'t'
  1063  00FFD0  75                 	db	117	;'u'
  1064  00FFD1  72                 	db	114	;'r'
  1065  00FFD2  65                 	db	101	;'e'
  1066  00FFD3  3A                 	db	58	;':'
  1067  00FFD4  00                 	db	0
  1068  00FFD5                     STR_12:
  1069  00FFD5  68                 	db	104	;'h'
  1070  00FFD6  65                 	db	101	;'e'
  1071  00FFD7  6C                 	db	108	;'l'
  1072  00FFD8  6C                 	db	108	;'l'
  1073  00FFD9  6F                 	db	111	;'o'
  1074  00FFDA  0D                 	db	13
  1075  00FFDB  0A                 	db	10
  1076  00FFDC  00                 	db	0
  1077  00FFDD                     STR_7:
  1078  00FFDD  20                 	db	32
  1079  00FFDE  20                 	db	32
  1080  00FFDF  46                 	db	70	;'F'
  1081  00FFE0  41                 	db	65	;'A'
  1082  00FFE1  4E                 	db	78	;'N'
  1083  00FFE2  00                 	db	0
  1084  00FFE3                     STR_5:
  1085  00FFE3  54                 	db	84	;'T'
  1086  00FFE4  69                 	db	105	;'i'
  1087  00FFE5  6D                 	db	109	;'m'
  1088  00FFE6  65                 	db	101	;'e'
  1089  00FFE7  00                 	db	0
  1090  00FFE8                     STR_6:
  1091  00FFE8  44                 	db	68	;'D'
  1092  00FFE9  61                 	db	97	;'a'
  1093  00FFEA  74                 	db	116	;'t'
  1094  00FFEB  65                 	db	101	;'e'
  1095  00FFEC  00                 	db	0
  1096  00FFED                     STR_10:
  1097  00FFED  4F                 	db	79	;'O'
  1098  00FFEE  4E                 	db	78	;'N'
  1099  00FFEF  20                 	db	32
  1100  00FFF0  00                 	db	0
  1101  00FFF1                     STR_11:
  1102  00FFF1  4F                 	db	79	;'O'
  1103  00FFF2  46                 	db	70	;'F'
  1104  00FFF3  46                 	db	70	;'F'
  1105  00FFF4  00                 	db	0
  1106  00FFF5                     STR_9:
  1107  00FFF5  52                 	db	82	;'R'
  1108  00FFF6  50                 	db	80	;'P'
  1109  00FFF7  4D                 	db	77	;'M'
  1110  00FFF8  00                 	db	0
  1111  00FFF9                     STR_3:
  1112  00FFF9  43                 	db	67	;'C'
  1113  00FFFA  2F                 	db	47
  1114  00FFFB  00                 	db	0
  1115  00FFFC                     STR_8:
  1116  00FFFC  44                 	db	68	;'D'
  1117  00FFFD  43                 	db	67	;'C'
  1118  00FFFE  00                 	db	0
  1119  0000                     
  1120                           ; #config settings
  1121  00FFFF  00                 	db	0	; dummy byte at the end
  1122  0000                     
  1123                           	psect	cinit
  1124  0019D8                     __pcinit:
  1125                           	opt stack 0
  1126  0019D8                     start_initialization:
  1127                           	opt stack 0
  1128  0019D8                     __initialization:
  1129                           	opt stack 0
  1130                           
  1131                           ; Clear objects allocated to BANK0 (8 bytes)
  1132  0019D8  EE00  F0F8         	lfsr	0,__pbssBANK0
  1133  0019DC  0E08               	movlw	8
  1134  0019DE                     clear_0:
  1135  0019DE  6AEE               	clrf	postinc0,c
  1136  0019E0  06E8               	decf	wreg,f,c
  1137  0019E2  E1FD               	bnz	clear_0
  1138                           
  1139                           ; Clear objects allocated to COMRAM (43 bytes)
  1140  0019E4  EE00  F042         	lfsr	0,__pbssCOMRAM
  1141  0019E8  0E2B               	movlw	43
  1142  0019EA                     clear_1:
  1143  0019EA  6AEE               	clrf	postinc0,c
  1144  0019EC  06E8               	decf	wreg,f,c
  1145  0019EE  E1FD               	bnz	clear_1
  1146                           
  1147                           ; Initialize objects allocated to BANK1 (33 bytes)
  1148                           ; load TBLPTR registers with __pidataBANK1
  1149  0019F0  0EF6               	movlw	low __pidataBANK1
  1150  0019F2  6EF6               	movwf	tblptrl,c
  1151  0019F4  0E20               	movlw	high __pidataBANK1
  1152  0019F6  6EF7               	movwf	tblptrh,c
  1153  0019F8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1154  0019FA  6EF8               	movwf	tblptru,c
  1155  0019FC  EE01  F000         	lfsr	0,__pdataBANK1
  1156  001A00  EE10 F021          	lfsr	1,33
  1157  001A04                     copy_data0:
  1158  001A04  0009               	tblrd		*+
  1159  001A06  CFF5 FFEE          	movff	tablat,postinc0
  1160  001A0A  50E5               	movf	postdec1,w,c
  1161  001A0C  50E1               	movf	fsr1l,w,c
  1162  001A0E  E1FA               	bnz	copy_data0
  1163                           
  1164                           ; Initialize objects allocated to BANK0 (107 bytes)
  1165                           ; load TBLPTR registers with __pidataBANK0
  1166  001A10  0E44               	movlw	low __pidataBANK0
  1167  001A12  6EF6               	movwf	tblptrl,c
  1168  001A14  0E1B               	movlw	high __pidataBANK0
  1169  001A16  6EF7               	movwf	tblptrh,c
  1170  001A18  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1171  001A1A  6EF8               	movwf	tblptru,c
  1172  001A1C  EE00  F080         	lfsr	0,__pdataBANK0
  1173  001A20  EE10 F06B          	lfsr	1,107
  1174  001A24                     copy_data1:
  1175  001A24  0009               	tblrd		*+
  1176  001A26  CFF5 FFEE          	movff	tablat,postinc0
  1177  001A2A  50E5               	movf	postdec1,w,c
  1178  001A2C  50E1               	movf	fsr1l,w,c
  1179  001A2E  E1FA               	bnz	copy_data1
  1180                           
  1181                           ; Initialize objects allocated to COMRAM (3 bytes)
  1182                           ; load TBLPTR registers with __pidataCOMRAM
  1183  001A30  0E34               	movlw	low __pidataCOMRAM
  1184  001A32  6EF6               	movwf	tblptrl,c
  1185  001A34  0E23               	movlw	high __pidataCOMRAM
  1186  001A36  6EF7               	movwf	tblptrh,c
  1187  001A38  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1188  001A3A  6EF8               	movwf	tblptru,c
  1189  001A3C  0009               	tblrd		*+	;fetch initializer
  1190  001A3E  CFF5 F06D          	movff	tablat,__pdataCOMRAM
  1191  001A42  0009               	tblrd		*+	;fetch initializer
  1192  001A44  CFF5 F06E          	movff	tablat,__pdataCOMRAM+1
  1193  001A48  0009               	tblrd		*+	;fetch initializer
  1194  001A4A  CFF5 F06F          	movff	tablat,__pdataCOMRAM+2
  1195  001A4E                     end_of_initialization:
  1196                           	opt stack 0
  1197  001A4E                     __end_of__initialization:
  1198                           	opt stack 0
  1199  001A4E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1200  001A50  6EF8               	movwf	tblptru,c
  1201  001A52  0100               	movlb	0
  1202  001A54  EFD0  F004         	goto	_main	;jump to C main() function
  1203                           tblptru	equ	0xFF8
  1204                           tblptrh	equ	0xFF7
  1205                           tblptrl	equ	0xFF6
  1206                           tablat	equ	0xFF5
  1207                           postinc0	equ	0xFEE
  1208                           wreg	equ	0xFE8
  1209                           postdec1	equ	0xFE5
  1210                           fsr1l	equ	0xFE1
  1211                           
  1212                           	psect	bssCOMRAM
  1213  000042                     __pbssCOMRAM:
  1214                           	opt stack 0
  1215  000042                     _Nec_code:
  1216                           	opt stack 0
  1217  000042                     	ds	4
  1218  000046                     _DS1621_tempC:
  1219                           	opt stack 0
  1220  000046                     	ds	2
  1221  000048                     _DS1621_tempF:
  1222                           	opt stack 0
  1223  000048                     	ds	2
  1224  00004A                     _Time_Elapsed:
  1225                           	opt stack 0
  1226  00004A                     	ds	2
  1227  00004C                     _rpm:
  1228                           	opt stack 0
  1229  00004C                     	ds	2
  1230  00004E                     _txt:
  1231                           	opt stack 0
  1232  00004E                     	ds	2
  1233  000050                     _FAN:
  1234                           	opt stack 0
  1235  000050                     	ds	1
  1236  000051                     _Nec_code1:
  1237                           	opt stack 0
  1238  000051                     	ds	1
  1239  000052                     _Nec_state:
  1240                           	opt stack 0
  1241  000052                     	ds	1
  1242  000053                     __tft_type:
  1243                           	opt stack 0
  1244  000053                     	ds	1
  1245  000054                     _alarm_date:
  1246                           	opt stack 0
  1247  000054                     	ds	1
  1248  000055                     _alarm_hour:
  1249                           	opt stack 0
  1250  000055                     	ds	1
  1251  000056                     _alarm_minute:
  1252                           	opt stack 0
  1253  000056                     	ds	1
  1254  000057                     _alarm_second:
  1255                           	opt stack 0
  1256  000057                     	ds	1
  1257  000058                     _bit_count:
  1258                           	opt stack 0
  1259  000058                     	ds	1
  1260  000059                     _colstart:
  1261                           	opt stack 0
  1262  000059                     	ds	1
  1263  00005A                     _day:
  1264                           	opt stack 0
  1265  00005A                     	ds	1
  1266  00005B                     _dow:
  1267                           	opt stack 0
  1268  00005B                     	ds	1
  1269  00005C                     _duty_cycle:
  1270                           	opt stack 0
  1271  00005C                     	ds	1
  1272  00005D                     _found:
  1273                           	opt stack 0
  1274  00005D                     	ds	1
  1275  00005E                     _hour:
  1276                           	opt stack 0
  1277  00005E                     	ds	1
  1278  00005F                     _minute:
  1279                           	opt stack 0
  1280  00005F                     	ds	1
  1281  000060                     _month:
  1282                           	opt stack 0
  1283  000060                     	ds	1
  1284  000061                     _rowstart:
  1285                           	opt stack 0
  1286  000061                     	ds	1
  1287  000062                     _second:
  1288                           	opt stack 0
  1289  000062                     	ds	1
  1290  000063                     _setup_alarm_hour:
  1291                           	opt stack 0
  1292  000063                     	ds	1
  1293  000064                     _setup_alarm_minute:
  1294                           	opt stack 0
  1295  000064                     	ds	1
  1296  000065                     _setup_alarm_second:
  1297                           	opt stack 0
  1298  000065                     	ds	1
  1299  000066                     _setup_day:
  1300                           	opt stack 0
  1301  000066                     	ds	1
  1302  000067                     _setup_hour:
  1303                           	opt stack 0
  1304  000067                     	ds	1
  1305  000068                     _setup_minute:
  1306                           	opt stack 0
  1307  000068                     	ds	1
  1308  000069                     _setup_month:
  1309                           	opt stack 0
  1310  000069                     	ds	1
  1311  00006A                     _setup_second:
  1312                           	opt stack 0
  1313  00006A                     	ds	1
  1314  00006B                     _setup_year:
  1315                           	opt stack 0
  1316  00006B                     	ds	1
  1317  00006C                     _year:
  1318                           	opt stack 0
  1319  00006C                     	ds	1
  1320                           tblptru	equ	0xFF8
  1321                           tblptrh	equ	0xFF7
  1322                           tblptrl	equ	0xFF6
  1323                           tablat	equ	0xFF5
  1324                           postinc0	equ	0xFEE
  1325                           wreg	equ	0xFE8
  1326                           postdec1	equ	0xFE5
  1327                           fsr1l	equ	0xFE1
  1328                           
  1329                           	psect	dataCOMRAM
  1330  00006D                     __pdataCOMRAM:
  1331                           	opt stack 0
  1332  00006D                     _setup_fan_temp:
  1333                           	opt stack 0
  1334  00006D                     	ds	1
  1335  00006E                     _tempSecond:
  1336                           	opt stack 0
  1337  00006E                     	ds	1
  1338  00006F                     _wrap:
  1339                           	opt stack 0
  1340  00006F                     	ds	1
  1341                           tblptru	equ	0xFF8
  1342                           tblptrh	equ	0xFF7
  1343                           tblptrl	equ	0xFF6
  1344                           tablat	equ	0xFF5
  1345                           postinc0	equ	0xFEE
  1346                           wreg	equ	0xFE8
  1347                           postdec1	equ	0xFE5
  1348                           fsr1l	equ	0xFE1
  1349                           
  1350                           	psect	bssBANK0
  1351  0000F8                     __pbssBANK0:
  1352                           	opt stack 0
  1353  0000F8                     _ALARMEN:
  1354                           	opt stack 0
  1355  0000F8                     	ds	2
  1356  0000FA                     _nbr:
  1357                           	opt stack 0
  1358  0000FA                     	ds	2
  1359  0000FC                     _nec_ok:
  1360                           	opt stack 0
  1361  0000FC                     	ds	2
  1362  0000FE                     _rps:
  1363                           	opt stack 0
  1364  0000FE                     	ds	2
  1365                           tblptru	equ	0xFF8
  1366                           tblptrh	equ	0xFF7
  1367                           tblptrl	equ	0xFF6
  1368                           tablat	equ	0xFF5
  1369                           postinc0	equ	0xFEE
  1370                           wreg	equ	0xFE8
  1371                           postdec1	equ	0xFE5
  1372                           fsr1l	equ	0xFE1
  1373                           
  1374                           	psect	dataBANK0
  1375  000080                     __pdataBANK0:
  1376                           	opt stack 0
  1377  000080                     _array1:
  1378                           	opt stack 0
  1379  000080                     	ds	21
  1380  000095                     _alarm_time:
  1381                           	opt stack 0
  1382  000095                     	ds	9
  1383  00009E                     _setup_alarm_time:
  1384                           	opt stack 0
  1385  00009E                     	ds	9
  1386  0000A7                     _setup_date:
  1387                           	opt stack 0
  1388  0000A7                     	ds	9
  1389  0000B0                     _setup_time:
  1390                           	opt stack 0
  1391  0000B0                     	ds	9
  1392  0000B9                     _setup_fan_text:
  1393                           	opt stack 0
  1394  0000B9                     	ds	5
  1395  0000BE                     _Alarm_SW_Txt:
  1396                           	opt stack 0
  1397  0000BE                     	ds	4
  1398  0000C2                     _RTC_ALARM_Txt:
  1399                           	opt stack 0
  1400  0000C2                     	ds	2
  1401  0000C4                     _date:
  1402                           	opt stack 0
  1403  0000C4                     	ds	9
  1404  0000CD                     _time:
  1405                           	opt stack 0
  1406  0000CD                     	ds	9
  1407  0000D6                     _RPM_Txt:
  1408                           	opt stack 0
  1409  0000D6                     	ds	5
  1410  0000DB                     _DC_Txt:
  1411                           	opt stack 0
  1412  0000DB                     	ds	4
  1413  0000DF                     _Fan_SW_Txt:
  1414                           	opt stack 0
  1415  0000DF                     	ds	4
  1416  0000E3                     _tempC:
  1417                           	opt stack 0
  1418  0000E3                     	ds	4
  1419  0000E7                     _tempF:
  1420                           	opt stack 0
  1421  0000E7                     	ds	4
  1422                           tblptru	equ	0xFF8
  1423                           tblptrh	equ	0xFF7
  1424                           tblptrl	equ	0xFF6
  1425                           tablat	equ	0xFF5
  1426                           postinc0	equ	0xFEE
  1427                           wreg	equ	0xFE8
  1428                           postdec1	equ	0xFE5
  1429                           fsr1l	equ	0xFE1
  1430                           
  1431                           	psect	dataBANK1
  1432  000100                     __pdataBANK1:
  1433                           	opt stack 0
  1434  000100                     _buffer:
  1435                           	opt stack 0
  1436  000100                     	ds	33
  1437                           tblptru	equ	0xFF8
  1438                           tblptrh	equ	0xFF7
  1439                           tblptrl	equ	0xFF6
  1440                           tablat	equ	0xFF5
  1441                           postinc0	equ	0xFEE
  1442                           wreg	equ	0xFE8
  1443                           postdec1	equ	0xFE5
  1444                           fsr1l	equ	0xFE1
  1445                           
  1446                           	psect	cstackBANK1
  1447  000121                     __pcstackBANK1:
  1448                           	opt stack 0
  1449  000121                     main@j:
  1450                           	opt stack 0
  1451                           
  1452                           ; 2 bytes @ 0x0
  1453  000121                     	ds	2
  1454                           tblptru	equ	0xFF8
  1455                           tblptrh	equ	0xFF7
  1456                           tblptrl	equ	0xFF6
  1457                           tablat	equ	0xFF5
  1458                           postinc0	equ	0xFEE
  1459                           wreg	equ	0xFE8
  1460                           postdec1	equ	0xFE5
  1461                           fsr1l	equ	0xFE1
  1462                           
  1463                           	psect	cstackBANK0
  1464  0000EB                     __pcstackBANK0:
  1465                           	opt stack 0
  1466  0000EB                     ??_drawtext:
  1467  0000EB                     do_update_pwm@dc_f:
  1468                           	opt stack 0
  1469                           
  1470                           ; 3 bytes @ 0x0
  1471  0000EB                     	ds	2
  1472  0000ED                     drawtext@x:
  1473                           	opt stack 0
  1474                           
  1475                           ; 1 bytes @ 0x2
  1476  0000ED                     	ds	1
  1477  0000EE                     do_update_pwm@duty_cycle:
  1478                           	opt stack 0
  1479  0000EE                     drawtext@textsize:
  1480                           	opt stack 0
  1481                           
  1482                           ; 2 bytes @ 0x3
  1483  0000EE                     	ds	1
  1484  0000EF                     do_update_pwm@dc_I:
  1485                           	opt stack 0
  1486                           
  1487                           ; 2 bytes @ 0x4
  1488  0000EF                     	ds	1
  1489  0000F0                     drawtext@i:
  1490                           	opt stack 0
  1491                           
  1492                           ; 2 bytes @ 0x5
  1493  0000F0                     	ds	2
  1494  0000F2                     drawtext@cursor_y:
  1495                           	opt stack 0
  1496                           
  1497                           ; 1 bytes @ 0x7
  1498  0000F2                     	ds	1
  1499  0000F3                     drawtext@cursor_x:
  1500                           	opt stack 0
  1501                           
  1502                           ; 1 bytes @ 0x8
  1503  0000F3                     	ds	1
  1504  0000F4                     ??_Update_Screen:
  1505                           
  1506                           ; 0 bytes @ 0x9
  1507  0000F4                     	ds	2
  1508  0000F6                     Update_Screen@neg_tempF:
  1509                           	opt stack 0
  1510                           
  1511                           ; 2 bytes @ 0xB
  1512  0000F6                     	ds	2
  1513                           tblptru	equ	0xFF8
  1514                           tblptrh	equ	0xFF7
  1515                           tblptrl	equ	0xFF6
  1516                           tablat	equ	0xFF5
  1517                           postinc0	equ	0xFEE
  1518                           wreg	equ	0xFE8
  1519                           postdec1	equ	0xFE5
  1520                           fsr1l	equ	0xFE1
  1521                           
  1522                           	psect	cstackCOMRAM
  1523  000001                     __pcstackCOMRAM:
  1524                           	opt stack 0
  1525  000001                     ??_INT0_isr:
  1526  000001                     
  1527                           ; 1 bytes @ 0x0
  1528  000001                     	ds	2
  1529  000003                     ??_chkisr:
  1530                           
  1531                           ; 0 bytes @ 0x2
  1532  000003                     	ds	14
  1533  000011                     ??_isdigit:
  1534  000011                     ?_strlen:
  1535                           	opt stack 0
  1536  000011                     ?___wmul:
  1537                           	opt stack 0
  1538  000011                     ?___lwdiv:
  1539                           	opt stack 0
  1540  000011                     ?___ftpack:
  1541                           	opt stack 0
  1542  000011                     ?___fttol:
  1543                           	opt stack 0
  1544  000011                     I2C_Read@ack:
  1545                           	opt stack 0
  1546  000011                     I2C_Write@outByte:
  1547                           	opt stack 0
  1548  000011                     spiwrite@x:
  1549                           	opt stack 0
  1550  000011                     putch@c:
  1551                           	opt stack 0
  1552  000011                     Wait_One_Sec@k:
  1553                           	opt stack 0
  1554  000011                     OpenUSART@spbrg:
  1555                           	opt stack 0
  1556  000011                     ___wmul@multiplier:
  1557                           	opt stack 0
  1558  000011                     ___lwdiv@dividend:
  1559                           	opt stack 0
  1560  000011                     strcpy@to:
  1561                           	opt stack 0
  1562  000011                     strlen@s:
  1563                           	opt stack 0
  1564  000011                     ___ftpack@arg:
  1565                           	opt stack 0
  1566  000011                     ___fttol@f1:
  1567                           	opt stack 0
  1568  000011                     I2C_Init@c:
  1569                           	opt stack 0
  1570                           
  1571                           ; 4 bytes @ 0x10
  1572  000011                     	ds	1
  1573  000012                     I2C_Read@n:
  1574                           	opt stack 0
  1575  000012                     I2C_Write@n:
  1576                           	opt stack 0
  1577  000012                     spiwrite@spidata:
  1578                           	opt stack 0
  1579  000012                     _isdigit$2306:
  1580                           	opt stack 0
  1581                           
  1582                           ; 1 bytes @ 0x11
  1583  000012                     	ds	1
  1584  000013                     ??_strlen:
  1585  000013                     I2C_Read@inByte:
  1586                           	opt stack 0
  1587  000013                     I2C_Write_Cmd_Only@Cmd:
  1588                           	opt stack 0
  1589  000013                     I2C_Write_Cmd_Write_Data@Cmd:
  1590                           	opt stack 0
  1591  000013                     DS3231_Setup_Time@Device:
  1592                           	opt stack 0
  1593  000013                     write_command@cmd_:
  1594                           	opt stack 0
  1595  000013                     write_data@data_:
  1596                           	opt stack 0
  1597  000013                     OpenUSART@config:
  1598                           	opt stack 0
  1599  000013                     isdigit@c:
  1600                           	opt stack 0
  1601  000013                     ___wmul@multiplicand:
  1602                           	opt stack 0
  1603  000013                     ___lwdiv@divisor:
  1604                           	opt stack 0
  1605  000013                     strcpy@from:
  1606                           	opt stack 0
  1607                           
  1608                           ; 2 bytes @ 0x12
  1609  000013                     	ds	1
  1610  000014                     ?_DS1621_Read_Temp:
  1611                           	opt stack 0
  1612  000014                     I2C_Write_Cmd_Only@Device:
  1613                           	opt stack 0
  1614  000014                     I2C_Write_Cmd_Write_Data@Data_Out:
  1615                           	opt stack 0
  1616  000014                     DS3231_Read_Time@Address:
  1617                           	opt stack 0
  1618  000014                     DS3231_Setup_Time@Address:
  1619                           	opt stack 0
  1620  000014                     setAddrWindow@y0:
  1621                           	opt stack 0
  1622  000014                     ___ftpack@exp:
  1623                           	opt stack 0
  1624                           
  1625                           ; 1 bytes @ 0x13
  1626  000014                     	ds	1
  1627  000015                     ??___fttol:
  1628  000015                     I2C_Write_Cmd_Write_Data@Device:
  1629                           	opt stack 0
  1630  000015                     DS3231_Read_Time@Device:
  1631                           	opt stack 0
  1632  000015                     setAddrWindow@x1:
  1633                           	opt stack 0
  1634  000015                     ___ftpack@sign:
  1635                           	opt stack 0
  1636  000015                     ___lwdiv@counter:
  1637                           	opt stack 0
  1638  000015                     ___wmul@product:
  1639                           	opt stack 0
  1640  000015                     strcpy@cp:
  1641                           	opt stack 0
  1642  000015                     strlen@cp:
  1643                           	opt stack 0
  1644                           
  1645                           ; 2 bytes @ 0x14
  1646  000015                     	ds	1
  1647  000016                     ??___ftpack:
  1648  000016                     DS1621_Init@Device:
  1649                           	opt stack 0
  1650  000016                     DS1621_Read_Temp@Cmd:
  1651                           	opt stack 0
  1652  000016                     setAddrWindow@y1:
  1653                           	opt stack 0
  1654  000016                     ___lwdiv@quotient:
  1655                           	opt stack 0
  1656                           
  1657                           ; 2 bytes @ 0x15
  1658  000016                     	ds	1
  1659  000017                     ?___awdiv:
  1660                           	opt stack 0
  1661  000017                     DS1621_Read_Temp@Data_Ret:
  1662                           	opt stack 0
  1663  000017                     setAddrWindow@x0:
  1664                           	opt stack 0
  1665  000017                     delay_ms@ms:
  1666                           	opt stack 0
  1667  000017                     ___awdiv@dividend:
  1668                           	opt stack 0
  1669                           
  1670                           ; 2 bytes @ 0x16
  1671  000017                     	ds	1
  1672  000018                     ?___lwmod:
  1673                           	opt stack 0
  1674  000018                     DS1621_Read_Temp@Device:
  1675                           	opt stack 0
  1676  000018                     drawPixel@y:
  1677                           	opt stack 0
  1678  000018                     drawFastVLine@y:
  1679                           	opt stack 0
  1680  000018                     fillRectangle@y:
  1681                           	opt stack 0
  1682  000018                     ___lwmod@dividend:
  1683                           	opt stack 0
  1684                           
  1685                           ; 2 bytes @ 0x17
  1686  000018                     	ds	1
  1687  000019                     ??_delay_ms:
  1688  000019                     ?___lbtoft:
  1689                           	opt stack 0
  1690  000019                     drawFastVLine@h:
  1691                           	opt stack 0
  1692  000019                     fillRectangle@w:
  1693                           	opt stack 0
  1694  000019                     drawPixel@color:
  1695                           	opt stack 0
  1696  000019                     ___awdiv@divisor:
  1697                           	opt stack 0
  1698                           
  1699                           ; 2 bytes @ 0x18
  1700  000019                     	ds	1
  1701  00001A                     fillRectangle@h:
  1702                           	opt stack 0
  1703  00001A                     ___fttol@sign1:
  1704                           	opt stack 0
  1705  00001A                     drawFastVLine@color:
  1706                           	opt stack 0
  1707  00001A                     ___lwmod@divisor:
  1708                           	opt stack 0
  1709                           
  1710                           ; 2 bytes @ 0x19
  1711  00001A                     	ds	1
  1712  00001B                     drawPixel@x:
  1713                           	opt stack 0
  1714  00001B                     ___awdiv@counter:
  1715                           	opt stack 0
  1716  00001B                     delay_ms@count:
  1717                           	opt stack 0
  1718  00001B                     fillRectangle@color:
  1719                           	opt stack 0
  1720  00001B                     ___fttol@lval:
  1721                           	opt stack 0
  1722                           
  1723                           ; 4 bytes @ 0x1A
  1724  00001B                     	ds	1
  1725  00001C                     ??_drawFastVLine:
  1726  00001C                     ___awdiv@sign:
  1727                           	opt stack 0
  1728  00001C                     ___lbtoft@c:
  1729                           	opt stack 0
  1730  00001C                     ___lwmod@counter:
  1731                           	opt stack 0
  1732  00001C                     drawCircle@x0:
  1733                           	opt stack 0
  1734                           
  1735                           ; 2 bytes @ 0x1B
  1736  00001C                     	ds	1
  1737  00001D                     ??_fillRectangle:
  1738  00001D                     ?_printf:
  1739                           	opt stack 0
  1740  00001D                     ?___ftmul:
  1741                           	opt stack 0
  1742  00001D                     printf@f:
  1743                           	opt stack 0
  1744  00001D                     ___awdiv@quotient:
  1745                           	opt stack 0
  1746  00001D                     ___ftmul@f1:
  1747                           	opt stack 0
  1748                           
  1749                           ; 3 bytes @ 0x1C
  1750  00001D                     	ds	1
  1751  00001E                     drawCircle@y0:
  1752                           	opt stack 0
  1753                           
  1754                           ; 2 bytes @ 0x1D
  1755  00001E                     	ds	1
  1756  00001F                     ?_get_RPM:
  1757                           	opt stack 0
  1758  00001F                     ?___awmod:
  1759                           	opt stack 0
  1760  00001F                     ___fttol@exp1:
  1761                           	opt stack 0
  1762  00001F                     ___awmod@dividend:
  1763                           	opt stack 0
  1764                           
  1765                           ; 2 bytes @ 0x1E
  1766  00001F                     	ds	1
  1767  000020                     drawFastVLine@hi:
  1768                           	opt stack 0
  1769  000020                     drawCircle@r:
  1770                           	opt stack 0
  1771  000020                     ___ftmul@f2:
  1772                           	opt stack 0
  1773                           
  1774                           ; 3 bytes @ 0x1F
  1775  000020                     	ds	1
  1776  000021                     drawFastVLine@lo:
  1777                           	opt stack 0
  1778  000021                     fillRectangle@hi:
  1779                           	opt stack 0
  1780  000021                     get_RPM@RPS:
  1781                           	opt stack 0
  1782  000021                     ___awmod@divisor:
  1783                           	opt stack 0
  1784                           
  1785                           ; 2 bytes @ 0x20
  1786  000021                     	ds	1
  1787  000022                     drawFastVLine@x:
  1788                           	opt stack 0
  1789  000022                     fillRectangle@lo:
  1790                           	opt stack 0
  1791  000022                     drawCircle@color:
  1792                           	opt stack 0
  1793                           
  1794                           ; 2 bytes @ 0x21
  1795  000022                     	ds	1
  1796  000023                     ??___ftmul:
  1797  000023                     fillRect@y:
  1798                           	opt stack 0
  1799  000023                     fillRectangle@x:
  1800                           	opt stack 0
  1801  000023                     ___awmod@counter:
  1802                           	opt stack 0
  1803                           
  1804                           ; 1 bytes @ 0x22
  1805  000023                     	ds	1
  1806  000024                     ??_drawCircle:
  1807  000024                     fillRect@w:
  1808                           	opt stack 0
  1809  000024                     ___awmod@sign:
  1810                           	opt stack 0
  1811  000024                     fillScreen@color:
  1812                           	opt stack 0
  1813                           
  1814                           ; 2 bytes @ 0x23
  1815  000024                     	ds	1
  1816  000025                     fillRect@h:
  1817                           	opt stack 0
  1818                           
  1819                           ; 1 bytes @ 0x24
  1820  000025                     	ds	1
  1821  000026                     ___ftmul@exp:
  1822                           	opt stack 0
  1823  000026                     fillRect@color:
  1824                           	opt stack 0
  1825  000026                     drawCircle@ddF_x:
  1826                           	opt stack 0
  1827                           
  1828                           ; 2 bytes @ 0x25
  1829  000026                     	ds	1
  1830  000027                     ___ftmul@f3_as_product:
  1831                           	opt stack 0
  1832                           
  1833                           ; 3 bytes @ 0x26
  1834  000027                     	ds	1
  1835  000028                     ??_fillRect:
  1836  000028                     drawCircle@ddF_y:
  1837                           	opt stack 0
  1838                           
  1839                           ; 2 bytes @ 0x27
  1840  000028                     	ds	2
  1841  00002A                     ___ftmul@cntr:
  1842                           	opt stack 0
  1843  00002A                     drawCircle@f:
  1844                           	opt stack 0
  1845                           
  1846                           ; 2 bytes @ 0x29
  1847  00002A                     	ds	1
  1848  00002B                     ??_printf:
  1849  00002B                     fillRect@x:
  1850                           	opt stack 0
  1851  00002B                     ___ftmul@sign:
  1852                           	opt stack 0
  1853                           
  1854                           ; 1 bytes @ 0x2A
  1855  00002B                     	ds	1
  1856  00002C                     ?___ftdiv:
  1857                           	opt stack 0
  1858  00002C                     fillRect@i:
  1859                           	opt stack 0
  1860  00002C                     drawCircle@x:
  1861                           	opt stack 0
  1862  00002C                     ___ftdiv@f1:
  1863                           	opt stack 0
  1864                           
  1865                           ; 3 bytes @ 0x2B
  1866  00002C                     	ds	2
  1867  00002E                     drawChar@y:
  1868                           	opt stack 0
  1869  00002E                     drawCircle@y:
  1870                           	opt stack 0
  1871                           
  1872                           ; 2 bytes @ 0x2D
  1873  00002E                     	ds	1
  1874  00002F                     drawChar@c:
  1875                           	opt stack 0
  1876  00002F                     printf@idx:
  1877                           	opt stack 0
  1878  00002F                     ___ftdiv@f2:
  1879                           	opt stack 0
  1880                           
  1881                           ; 3 bytes @ 0x2E
  1882  00002F                     	ds	1
  1883  000030                     drawChar@color:
  1884                           	opt stack 0
  1885  000030                     printf@ap:
  1886                           	opt stack 0
  1887                           
  1888                           ; 2 bytes @ 0x2F
  1889  000030                     	ds	2
  1890  000032                     ??___ftdiv:
  1891  000032                     printf@prec:
  1892                           	opt stack 0
  1893  000032                     drawChar@bg:
  1894                           	opt stack 0
  1895                           
  1896                           ; 2 bytes @ 0x31
  1897  000032                     	ds	1
  1898  000033                     printf@val:
  1899                           	opt stack 0
  1900                           
  1901                           ; 2 bytes @ 0x32
  1902  000033                     	ds	1
  1903  000034                     drawChar@size:
  1904                           	opt stack 0
  1905                           
  1906                           ; 1 bytes @ 0x33
  1907  000034                     	ds	1
  1908  000035                     drawChar@line:
  1909                           	opt stack 0
  1910  000035                     printf@flag:
  1911                           	opt stack 0
  1912  000035                     ___ftdiv@cntr:
  1913                           	opt stack 0
  1914                           
  1915                           ; 1 bytes @ 0x34
  1916  000035                     	ds	1
  1917  000036                     drawChar@x:
  1918                           	opt stack 0
  1919  000036                     printf@width:
  1920                           	opt stack 0
  1921  000036                     ___ftdiv@f3:
  1922                           	opt stack 0
  1923                           
  1924                           ; 3 bytes @ 0x35
  1925  000036                     	ds	1
  1926  000037                     drawChar@j:
  1927                           	opt stack 0
  1928                           
  1929                           ; 1 bytes @ 0x36
  1930  000037                     	ds	1
  1931  000038                     drawChar@i:
  1932                           	opt stack 0
  1933  000038                     printf@c:
  1934                           	opt stack 0
  1935                           
  1936                           ; 1 bytes @ 0x37
  1937  000038                     	ds	1
  1938  000039                     drawtext@y:
  1939                           	opt stack 0
  1940  000039                     ___ftdiv@exp:
  1941                           	opt stack 0
  1942                           
  1943                           ; 1 bytes @ 0x38
  1944  000039                     	ds	1
  1945  00003A                     ___ftdiv@sign:
  1946                           	opt stack 0
  1947  00003A                     drawtext@_text:
  1948                           	opt stack 0
  1949                           
  1950                           ; 2 bytes @ 0x39
  1951  00003A                     	ds	1
  1952  00003B                     ??_do_update_pwm:
  1953                           
  1954                           ; 0 bytes @ 0x3A
  1955  00003B                     	ds	1
  1956  00003C                     drawtext@color:
  1957                           	opt stack 0
  1958                           
  1959                           ; 2 bytes @ 0x3B
  1960  00003C                     	ds	2
  1961  00003E                     drawtext@bg:
  1962                           	opt stack 0
  1963                           
  1964                           ; 2 bytes @ 0x3D
  1965  00003E                     	ds	2
  1966  000040                     drawtext@size:
  1967                           	opt stack 0
  1968                           
  1969                           ; 1 bytes @ 0x3F
  1970  000040                     	ds	1
  1971  000041                     
  1972                           ; 0 bytes @ 0x40
  1973  000041                     	ds	1
  1974                           tblptru	equ	0xFF8
  1975                           tblptrh	equ	0xFF7
  1976                           tblptrl	equ	0xFF6
  1977                           tablat	equ	0xFF5
  1978                           postinc0	equ	0xFEE
  1979                           wreg	equ	0xFE8
  1980                           postdec1	equ	0xFE5
  1981                           fsr1l	equ	0xFE1
  1982                           
  1983 ;;
  1984 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1985 ;;
  1986 ;; *************** function _main *****************
  1987 ;; Defined at:
  1988 ;;		line 110 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/Lab12_1.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;		None
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;  j               2    0[BANK1 ] int 
  1993 ;; Return value:  Size  Location     Type
  1994 ;;		None               void
  1995 ;; Registers used:
  1996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2003 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2004 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2005 ;;      Totals:         1       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2006 ;;Total ram usage:        3 bytes
  2007 ;; Hardware stack levels required when called:   11
  2008 ;; This function calls:
  2009 ;;		_DS1621_Read_Temp
  2010 ;;		_DS3231_Read_Time
  2011 ;;		_DS3231_Setup_Time
  2012 ;;		_Decrease_Speed
  2013 ;;		_Do_Beep
  2014 ;;		_Do_Init
  2015 ;;		_Increase_Speed
  2016 ;;		_Initialize_Screen
  2017 ;;		_Toggle_Fan
  2018 ;;		_Update_Screen
  2019 ;;		___awdiv
  2020 ;;		___wmul
  2021 ;;		_get_RPM
  2022 ;;		_printf
  2023 ;; This function is called by:
  2024 ;;		Startup code after reset
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           	psect	text0
  2029  0009A0                     __ptext0:
  2030                           	opt stack 0
  2031  0009A0                     _main:
  2032                           	opt stack 20
  2033                           
  2034                           ;Lab12_1.c: 112: Do_Init();
  2035                           
  2036                           ;incstack = 0
  2037  0009A0  ECBB  F00E         	call	_Do_Init	;wreg free
  2038                           
  2039                           ;Lab12_1.c: 113: printf ("hello\r\n");
  2040  0009A4  0ED5               	movlw	low STR_12
  2041  0009A6  6E1D               	movwf	printf@f,c
  2042  0009A8  0EFF               	movlw	high STR_12
  2043  0009AA  6E1E               	movwf	printf@f+1,c
  2044  0009AC  ECEE  F001         	call	_printf	;wreg free
  2045                           
  2046                           ;Lab12_1.c: 114: Initialize_Screen();
  2047  0009B0  EC9B  F003         	call	_Initialize_Screen	;wreg free
  2048                           
  2049                           ;Lab12_1.c: 171: duty_cycle = 50;
  2050  0009B4  0E32               	movlw	50
  2051  0009B6  6E5C               	movwf	_duty_cycle,c
  2052                           
  2053                           ;Lab12_1.c: 172: PORTAbits.RA5=0;
  2054  0009B8  9A80               	bcf	3968,5,c	;volatile
  2055  0009BA  D000               	goto	l6935
  2056  0009BC                     l6935:
  2057                           
  2058                           ;Lab12_1.c: 174: {
  2059                           ;Lab12_1.c: 176: DS3231_Read_Time();
  2060  0009BC  EC0B  F00E         	call	_DS3231_Read_Time	;wreg free
  2061                           
  2062                           ;Lab12_1.c: 178: if(tempSecond != second)
  2063  0009C0  5062               	movf	_second,w,c
  2064  0009C2  186E               	xorwf	_tempSecond,w,c
  2065  0009C4  B4D8               	btfsc	status,2,c
  2066  0009C6  D05E               	goto	l6955
  2067                           
  2068                           ;Lab12_1.c: 179: {
  2069                           ;Lab12_1.c: 180: tempSecond = second;
  2070  0009C8  C062  F06E         	movff	_second,_tempSecond
  2071                           
  2072                           ;Lab12_1.c: 181: DS1621_tempC = DS1621_Read_Temp();
  2073  0009CC  ECCD  F00F         	call	_DS1621_Read_Temp	;wreg free
  2074  0009D0  C014  F046         	movff	?_DS1621_Read_Temp,_DS1621_tempC
  2075  0009D4  C015  F047         	movff	?_DS1621_Read_Temp+1,_DS1621_tempC+1
  2076                           
  2077                           ;Lab12_1.c: 182: DS1621_tempF = (DS1621_tempC * 9 / 5) + 32;
  2078  0009D8  C046  F011         	movff	_DS1621_tempC,___wmul@multiplier
  2079  0009DC  C047  F012         	movff	_DS1621_tempC+1,___wmul@multiplier+1
  2080  0009E0  0E00               	movlw	0
  2081  0009E2  6E14               	movwf	___wmul@multiplicand+1,c
  2082  0009E4  0E09               	movlw	9
  2083  0009E6  6E13               	movwf	___wmul@multiplicand,c
  2084  0009E8  EC31  F010         	call	___wmul	;wreg free
  2085  0009EC  C011  F017         	movff	?___wmul,___awdiv@dividend
  2086  0009F0  C012  F018         	movff	?___wmul+1,___awdiv@dividend+1
  2087  0009F4  0E00               	movlw	0
  2088  0009F6  6E1A               	movwf	___awdiv@divisor+1,c
  2089  0009F8  0E05               	movlw	5
  2090  0009FA  6E19               	movwf	___awdiv@divisor,c
  2091  0009FC  EC1C  F00C         	call	___awdiv	;wreg free
  2092  000A00  0E20               	movlw	32
  2093  000A02  2417               	addwf	?___awdiv,w,c
  2094  000A04  6E48               	movwf	_DS1621_tempF,c
  2095  000A06  0E00               	movlw	0
  2096  000A08  2018               	addwfc	?___awdiv+1,w,c
  2097  000A0A  6E49               	movwf	_DS1621_tempF+1,c
  2098                           
  2099                           ;Lab12_1.c: 183: rpm = get_RPM();
  2100  000A0C  EC51  F00F         	call	_get_RPM	;wreg free
  2101  000A10  C01F  F04C         	movff	?_get_RPM,_rpm
  2102  000A14  C020  F04D         	movff	?_get_RPM+1,_rpm+1
  2103                           
  2104                           ;Lab12_1.c: 184: printf ("%02x:%02x:%02x %02x/%02x/%02x",hour,minute,second,month,day,ye
      +                          ar);
  2105  000A18  0EFA               	movlw	low STR_13
  2106  000A1A  6E1D               	movwf	printf@f,c
  2107  000A1C  0EFE               	movlw	high STR_13
  2108  000A1E  6E1E               	movwf	printf@f+1,c
  2109  000A20  C05E  F01F         	movff	_hour,?_printf+2
  2110  000A24  6A20               	clrf	?_printf+3,c
  2111  000A26  C05F  F021         	movff	_minute,?_printf+4
  2112  000A2A  6A22               	clrf	?_printf+5,c
  2113  000A2C  C062  F023         	movff	_second,?_printf+6
  2114  000A30  6A24               	clrf	?_printf+7,c
  2115  000A32  C060  F025         	movff	_month,?_printf+8
  2116  000A36  6A26               	clrf	?_printf+9,c
  2117  000A38  C05A  F027         	movff	_day,?_printf+10
  2118  000A3C  6A28               	clrf	?_printf+11,c
  2119  000A3E  C06C  F029         	movff	_year,?_printf+12
  2120  000A42  6A2A               	clrf	?_printf+13,c
  2121  000A44  ECEE  F001         	call	_printf	;wreg free
  2122                           
  2123                           ;Lab12_1.c: 185: printf (" Temp = %d C = %d F ", DS1621_tempC, DS1621_tempF);
  2124  000A48  0E6F               	movlw	low STR_14
  2125  000A4A  6E1D               	movwf	printf@f,c
  2126  000A4C  0EFF               	movlw	high STR_14
  2127  000A4E  6E1E               	movwf	printf@f+1,c
  2128  000A50  C046  F01F         	movff	_DS1621_tempC,?_printf+2
  2129  000A54  C047  F020         	movff	_DS1621_tempC+1,?_printf+3
  2130  000A58  C048  F021         	movff	_DS1621_tempF,?_printf+4
  2131  000A5C  C049  F022         	movff	_DS1621_tempF+1,?_printf+5
  2132  000A60  ECEE  F001         	call	_printf	;wreg free
  2133                           
  2134                           ;Lab12_1.c: 186: printf ("RPM = %d  dc = %d\r\n", rpm, duty_cycle);
  2135  000A64  0E84               	movlw	low STR_15
  2136  000A66  6E1D               	movwf	printf@f,c
  2137  000A68  0EFF               	movlw	high STR_15
  2138  000A6A  6E1E               	movwf	printf@f+1,c
  2139  000A6C  C04C  F01F         	movff	_rpm,?_printf+2
  2140  000A70  C04D  F020         	movff	_rpm+1,?_printf+3
  2141  000A74  C05C  F021         	movff	_duty_cycle,?_printf+4
  2142  000A78  6A22               	clrf	?_printf+5,c
  2143  000A7A  ECEE  F001         	call	_printf	;wreg free
  2144                           
  2145                           ;Lab12_1.c: 187: Update_Screen();
  2146  000A7E  EC0E  F000         	call	_Update_Screen	;wreg free
  2147  000A82  D000               	goto	l6955
  2148  000A84                     l6955:
  2149                           
  2150                           ;Lab12_1.c: 188: }
  2151                           ;Lab12_1.c: 190: if (nec_ok == 1)
  2152  000A84  0100               	movlb	0	; () banked
  2153  000A86  05FC               	decf	_nec_ok& (0+255),w,b
  2154  000A88  0100               	movlb	0	; () banked
  2155  000A8A  11FD               	iorwf	(_nec_ok+1)& (0+255),w,b
  2156  000A8C  A4D8               	btfss	status,2,c
  2157  000A8E  D796               	goto	l6935
  2158                           
  2159                           ; BSR set to: 0
  2160                           ;Lab12_1.c: 191: {
  2161                           ;Lab12_1.c: 192: nec_ok = 0;
  2162  000A90  0E00               	movlw	0
  2163  000A92  0100               	movlb	0	; () banked
  2164  000A94  6FFD               	movwf	(_nec_ok+1)& (0+255),b
  2165  000A96  0E00               	movlw	0
  2166  000A98  6FFC               	movwf	_nec_ok& (0+255),b
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;Lab12_1.c: 194: printf ("NEC_Code = %x\r\n", Nec_code1);
  2170  000A9A  0EA9               	movlw	low STR_16
  2171  000A9C  6E1D               	movwf	printf@f,c
  2172  000A9E  0EFF               	movlw	high STR_16
  2173  000AA0  6E1E               	movwf	printf@f+1,c
  2174  000AA2  C051  F01F         	movff	_Nec_code1,?_printf+2
  2175  000AA6  6A20               	clrf	?_printf+3,c
  2176  000AA8  ECEE  F001         	call	_printf	;wreg free
  2177                           
  2178                           ;Lab12_1.c: 196: INTCONbits.INT0IE = 1;
  2179  000AAC  88F2               	bsf	intcon,4,c	;volatile
  2180                           
  2181                           ;Lab12_1.c: 197: INTCON2bits.INTEDG0 = 0;
  2182  000AAE  9CF1               	bcf	intcon2,6,c	;volatile
  2183                           
  2184                           ;Lab12_1.c: 199: found = 0xff;
  2185  000AB0  685D               	setf	_found,c
  2186                           
  2187                           ;Lab12_1.c: 200: for (int j=0; j< 21; j++)
  2188  000AB2  0E00               	movlw	0
  2189  000AB4  0101               	movlb	1	; () banked
  2190  000AB6  6F22               	movwf	(main@j+1)& (0+255),b
  2191  000AB8  0E00               	movlw	0
  2192  000ABA  6F21               	movwf	main@j& (0+255),b
  2193  000ABC                     l6969:
  2194                           
  2195                           ; BSR set to: 1
  2196  000ABC  0101               	movlb	1	; () banked
  2197  000ABE  BF22               	btfsc	(main@j+1)& (0+255),7,b
  2198  000AC0  D00A               	goto	l6973
  2199  000AC2  0101               	movlb	1	; () banked
  2200  000AC4  5122               	movf	(main@j+1)& (0+255),w,b
  2201  000AC6  E120               	bnz	l6983
  2202  000AC8  0E15               	movlw	21
  2203  000ACA  0101               	movlb	1	; () banked
  2204  000ACC  5D21               	subwf	main@j& (0+255),w,b
  2205  000ACE  B0D8               	btfsc	status,0,c
  2206  000AD0  D01B               	goto	l6983
  2207  000AD2  D001               	goto	l6973
  2208                           
  2209                           ; BSR set to: 1
  2210  000AD4  D019               	goto	l6983
  2211  000AD6                     l6973:
  2212                           
  2213                           ; BSR set to: 1
  2214                           ;Lab12_1.c: 201: {
  2215                           ;Lab12_1.c: 202: if (Nec_code1 == array1[j])
  2216  000AD6  0E80               	movlw	low _array1
  2217  000AD8  0101               	movlb	1	; () banked
  2218  000ADA  2521               	addwf	main@j& (0+255),w,b
  2219  000ADC  6ED9               	movwf	fsr2l,c
  2220  000ADE  0E00               	movlw	high _array1
  2221  000AE0  0101               	movlb	1	; () banked
  2222  000AE2  2122               	addwfc	(main@j+1)& (0+255),w,b
  2223  000AE4  6EDA               	movwf	fsr2h,c
  2224  000AE6  5051               	movf	_Nec_code1,w,c
  2225  000AE8  18DE               	xorwf	postinc2,w,c
  2226  000AEA  A4D8               	btfss	status,2,c
  2227  000AEC  D008               	goto	l6979
  2228                           
  2229                           ; BSR set to: 1
  2230                           ;Lab12_1.c: 203: {
  2231                           ;Lab12_1.c: 204: found = j;
  2232  000AEE  C121  F05D         	movff	main@j,_found
  2233                           
  2234                           ; BSR set to: 1
  2235                           ;Lab12_1.c: 205: j = 21;
  2236  000AF2  0E00               	movlw	0
  2237  000AF4  0101               	movlb	1	; () banked
  2238  000AF6  6F22               	movwf	(main@j+1)& (0+255),b
  2239  000AF8  0E15               	movlw	21
  2240  000AFA  6F21               	movwf	main@j& (0+255),b
  2241  000AFC  D000               	goto	l6979
  2242  000AFE                     l6979:
  2243                           
  2244                           ; BSR set to: 1
  2245  000AFE  0101               	movlb	1	; () banked
  2246  000B00  4B21               	infsnz	main@j& (0+255),f,b
  2247  000B02  2B22               	incf	(main@j+1)& (0+255),f,b
  2248  000B04  D7DB               	goto	l6969
  2249                           
  2250                           ; BSR set to: 1
  2251  000B06  D000               	goto	l6983
  2252  000B08                     l6983:
  2253                           
  2254                           ; BSR set to: 1
  2255                           ;Lab12_1.c: 206: }
  2256                           ;Lab12_1.c: 207: }
  2257                           ;Lab12_1.c: 209: if (found == 0xff)
  2258  000B08  285D               	incf	_found,w,c
  2259  000B0A  A4D8               	btfss	status,2,c
  2260  000B0C  D007               	goto	l6987
  2261                           
  2262                           ; BSR set to: 1
  2263                           ;Lab12_1.c: 210: {
  2264                           ;Lab12_1.c: 211: printf ("Cannot find button \r\n");
  2265  000B0E  0E18               	movlw	low STR_17
  2266  000B10  6E1D               	movwf	printf@f,c
  2267  000B12  0EFF               	movlw	high STR_17
  2268  000B14  6E1E               	movwf	printf@f+1,c
  2269  000B16  ECEE  F001         	call	_printf	;wreg free
  2270                           
  2271                           ;Lab12_1.c: 212: }
  2272  000B1A  D750               	goto	l6935
  2273  000B1C                     l6987:
  2274                           
  2275                           ;Lab12_1.c: 213: else
  2276                           ;Lab12_1.c: 214: {
  2277                           ;Lab12_1.c: 215: Do_Beep();
  2278  000B1C  EC16  F011         	call	_Do_Beep	;wreg free
  2279                           
  2280                           ;Lab12_1.c: 216: printf ("button = %d \r\n", found);
  2281  000B20  0EB9               	movlw	low STR_18
  2282  000B22  6E1D               	movwf	printf@f,c
  2283  000B24  0EFF               	movlw	high STR_18
  2284  000B26  6E1E               	movwf	printf@f+1,c
  2285  000B28  C05D  F01F         	movff	_found,?_printf+2
  2286  000B2C  6A20               	clrf	?_printf+3,c
  2287  000B2E  ECEE  F001         	call	_printf	;wreg free
  2288                           
  2289                           ;Lab12_1.c: 218: if (found == 5){
  2290  000B32  0E05               	movlw	5
  2291  000B34  185D               	xorwf	_found,w,c
  2292  000B36  A4D8               	btfss	status,2,c
  2293  000B38  D015               	goto	l7003
  2294                           
  2295                           ;Lab12_1.c: 219: Toggle_Fan();
  2296  000B3A  ECF8  F010         	call	_Toggle_Fan	;wreg free
  2297                           
  2298                           ;Lab12_1.c: 220: if (FAN=1){
  2299  000B3E  0E01               	movlw	1
  2300  000B40  6E50               	movwf	_FAN,c
  2301                           
  2302                           ;Lab12_1.c: 221: printf ("\n Fan is turned on.\n");
  2303  000B42  0E5A               	movlw	low STR_19
  2304  000B44  6E1D               	movwf	printf@f,c
  2305  000B46  0EFF               	movlw	high STR_19
  2306  000B48  6E1E               	movwf	printf@f+1,c
  2307  000B4A  ECEE  F001         	call	_printf	;wreg free
  2308                           
  2309                           ;Lab12_1.c: 222: }
  2310  000B4E  D736               	goto	l6935
  2311                           
  2312                           ;Lab12_1.c: 223: else if (FAN=0){
  2313  000B50  0E00               	movlw	0
  2314  000B52  6E50               	movwf	_FAN,c
  2315  000B54  D733               	goto	l6935
  2316                           
  2317                           ;Lab12_1.c: 224: printf ("\n Fan is turned off.\n");
  2318  000B56  0E2E               	movlw	low STR_20
  2319  000B58  6E1D               	movwf	printf@f,c
  2320  000B5A  0EFF               	movlw	high STR_20
  2321  000B5C  6E1E               	movwf	printf@f+1,c
  2322  000B5E  ECEE  F001         	call	_printf	;wreg free
  2323                           
  2324                           ;Lab12_1.c: 225: }
  2325                           ;Lab12_1.c: 226: }
  2326  000B62  D72C               	goto	l6935
  2327  000B64                     l7003:
  2328                           
  2329                           ;Lab12_1.c: 228: else if (found == 6){
  2330  000B64  0E06               	movlw	6
  2331  000B66  185D               	xorwf	_found,w,c
  2332  000B68  A4D8               	btfss	status,2,c
  2333  000B6A  D003               	goto	l7007
  2334                           
  2335                           ;Lab12_1.c: 229: Decrease_Speed();
  2336  000B6C  ECB9  F010         	call	_Decrease_Speed	;wreg free
  2337                           
  2338                           ;Lab12_1.c: 230: }
  2339  000B70  D725               	goto	l6935
  2340  000B72                     l7007:
  2341                           
  2342                           ;Lab12_1.c: 232: else if (found == 7){
  2343  000B72  0E07               	movlw	7
  2344  000B74  185D               	xorwf	_found,w,c
  2345  000B76  A4D8               	btfss	status,2,c
  2346  000B78  D003               	goto	l7011
  2347                           
  2348                           ;Lab12_1.c: 233: Increase_Speed();
  2349  000B7A  ECC7  F010         	call	_Increase_Speed	;wreg free
  2350                           
  2351                           ;Lab12_1.c: 234: }
  2352  000B7E  D71E               	goto	l6935
  2353  000B80                     l7011:
  2354                           
  2355                           ;Lab12_1.c: 236: else if (found == 8){
  2356  000B80  0E08               	movlw	8
  2357  000B82  185D               	xorwf	_found,w,c
  2358  000B84  A4D8               	btfss	status,2,c
  2359  000B86  D71A               	goto	l6935
  2360                           
  2361                           ;Lab12_1.c: 237: DS3231_Setup_Time();
  2362  000B88  ECD8  F00D         	call	_DS3231_Setup_Time	;wreg free
  2363  000B8C  D717               	goto	l6935
  2364  000B8E  EF0C  F000         	goto	start
  2365  000B92                     __end_of_main:
  2366                           	opt stack 0
  2367                           tblptru	equ	0xFF8
  2368                           tblptrh	equ	0xFF7
  2369                           tblptrl	equ	0xFF6
  2370                           tablat	equ	0xFF5
  2371                           intcon	equ	0xFF2
  2372                           intcon2	equ	0xFF1
  2373                           postinc0	equ	0xFEE
  2374                           wreg	equ	0xFE8
  2375                           postdec1	equ	0xFE5
  2376                           fsr1l	equ	0xFE1
  2377                           postinc2	equ	0xFDE
  2378                           fsr2h	equ	0xFDA
  2379                           fsr2l	equ	0xFD9
  2380                           status	equ	0xFD8
  2381                           
  2382 ;; *************** function _printf *****************
  2383 ;; Defined at:
  2384 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;  f               2   28[COMRAM] PTR const unsigned char 
  2387 ;;		 -> STR_20(22), STR_19(21), STR_18(15), STR_17(22), 
  2388 ;;		 -> STR_16(16), STR_15(20), STR_14(21), STR_13(30), 
  2389 ;;		 -> STR_12(8), 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  idx             1   46[COMRAM] unsigned char 
  2392 ;;  tmpval          4    0        struct .
  2393 ;;  cp              3    0        PTR const unsigned char 
  2394 ;;  width           2   53[COMRAM] int 
  2395 ;;  val             2   50[COMRAM] unsigned int 
  2396 ;;  ap              2   47[COMRAM] PTR void [1]
  2397 ;;		 -> ?_printf(2), 
  2398 ;;  len             2    0        unsigned int 
  2399 ;;  c               1   55[COMRAM] char 
  2400 ;;  flag            1   52[COMRAM] unsigned char 
  2401 ;;  prec            1   49[COMRAM] char 
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  2   28[COMRAM] int 
  2404 ;; Registers used:
  2405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2411 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2412 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2413 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;Total ram usage:       28 bytes
  2416 ;; Hardware stack levels used:    1
  2417 ;; Hardware stack levels required when called:    4
  2418 ;; This function calls:
  2419 ;;		___lwdiv
  2420 ;;		___lwmod
  2421 ;;		___wmul
  2422 ;;		_isdigit
  2423 ;;		_putch
  2424 ;; This function is called by:
  2425 ;;		_main
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           	psect	text1
  2430  0003DC                     __ptext1:
  2431                           	opt stack 0
  2432  0003DC                     _printf:
  2433                           	opt stack 26
  2434                           
  2435                           ;doprnt.c: 466: va_list ap;
  2436                           ;doprnt.c: 499: signed char c;
  2437                           ;doprnt.c: 501: int width;
  2438                           ;doprnt.c: 506: signed char prec;
  2439                           ;doprnt.c: 508: unsigned char flag;
  2440                           ;doprnt.c: 523: union {
  2441                           ;doprnt.c: 524: unsigned long vd;
  2442                           ;doprnt.c: 525: double integ;
  2443                           ;doprnt.c: 526: } tmpval;
  2444                           ;doprnt.c: 528: unsigned int val;
  2445                           ;doprnt.c: 529: unsigned len;
  2446                           ;doprnt.c: 530: const char * cp;
  2447                           ;doprnt.c: 533: *ap = __va_start();
  2448                           
  2449                           ;incstack = 0
  2450  0003DC  0E1F               	movlw	low (?_printf+2)
  2451  0003DE  6E30               	movwf	printf@ap,c
  2452  0003E0  0E00               	movlw	high (?_printf+2)
  2453  0003E2  6E31               	movwf	printf@ap+1,c
  2454                           
  2455                           ;doprnt.c: 536: while(c = *f++) {
  2456  0003E4  D199               	goto	l6649
  2457  0003E6                     l6523:
  2458                           
  2459                           ;doprnt.c: 538: if(c != '%')
  2460  0003E6  0E25               	movlw	37
  2461  0003E8  1838               	xorwf	printf@c,w,c
  2462  0003EA  B4D8               	btfsc	status,2,c
  2463  0003EC  D004               	goto	l6527
  2464                           
  2465                           ;doprnt.c: 540: {
  2466                           ;doprnt.c: 541: (putch(c) );
  2467  0003EE  5038               	movf	printf@c,w,c
  2468  0003F0  EC5D  F011         	call	_putch
  2469                           
  2470                           ;doprnt.c: 542: continue;
  2471  0003F4  D191               	goto	l6649
  2472  0003F6                     l6527:
  2473                           
  2474                           ;doprnt.c: 543: }
  2475                           ;doprnt.c: 546: width = 0;
  2476  0003F6  0E00               	movlw	0
  2477  0003F8  6E37               	movwf	printf@width+1,c
  2478  0003FA  0E00               	movlw	0
  2479  0003FC  6E36               	movwf	printf@width,c
  2480                           
  2481                           ;doprnt.c: 548: flag = 0;
  2482  0003FE  0E00               	movlw	0
  2483  000400  6E35               	movwf	printf@flag,c
  2484                           
  2485                           ;doprnt.c: 551: switch(*f) {
  2486                           
  2487                           ;doprnt.c: 550: for(;;) {
  2488  000402  D005               	goto	l6533
  2489  000404                     l6529:
  2490                           
  2491                           ;doprnt.c: 580: flag |= 0x04;
  2492  000404  8435               	bsf	printf@flag,2,c
  2493                           
  2494                           ;doprnt.c: 581: f++;
  2495  000406  4A1D               	infsnz	printf@f,f,c
  2496  000408  2A1E               	incf	printf@f+1,f,c
  2497                           
  2498                           ;doprnt.c: 582: continue;
  2499  00040A  D001               	goto	l6533
  2500                           
  2501                           ;doprnt.c: 584: }
  2502  00040C  D00B               	goto	l6535
  2503  00040E                     l6533:
  2504  00040E  C01D  FFF6         	movff	printf@f,tblptrl
  2505  000412  C01E  FFF7         	movff	printf@f+1,tblptrh
  2506  000416                     	if	0	;tblptru may be non-zero
  2507  000416                     	endif
  2508  000416                     	if	0	;tblptru may be non-zero
  2509  000416                     	endif
  2510  000416  0008               	tblrd		*
  2511  000418  50F5               	movf	tablat,w,c
  2512                           
  2513                           ; Switch size 1, requested type "space"
  2514                           ; Number of cases is 1, Range of values is 48 to 48
  2515                           ; switch strategies available:
  2516                           ; Name         Instructions Cycles
  2517                           ; simple_byte            4     3 (average)
  2518                           ;	Chosen strategy is simple_byte
  2519  00041A  0A30               	xorlw	48	; case 48
  2520  00041C  B4D8               	btfsc	status,2,c
  2521  00041E  D7F2               	goto	l6529
  2522                           
  2523                           ;doprnt.c: 585: break;
  2524  000420  D001               	goto	l6535
  2525                           
  2526                           ;doprnt.c: 586: }
  2527  000422  D7F5               	goto	l6533
  2528  000424                     l6535:
  2529                           
  2530                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2531  000424  C01D  FFF6         	movff	printf@f,tblptrl
  2532  000428  C01E  FFF7         	movff	printf@f+1,tblptrh
  2533  00042C                     	if	0	;tblptru may be non-zero
  2534  00042C                     	endif
  2535  00042C                     	if	0	;tblptru may be non-zero
  2536  00042C                     	endif
  2537  00042C  0008               	tblrd		*
  2538  00042E  50F5               	movf	tablat,w,c
  2539  000430  EC6A  F010         	call	_isdigit
  2540  000434  A0D8               	btfss	status,0,c
  2541  000436  D03B               	goto	l6551
  2542                           
  2543                           ;doprnt.c: 598: width = 0;
  2544  000438  0E00               	movlw	0
  2545  00043A  6E37               	movwf	printf@width+1,c
  2546  00043C  0E00               	movlw	0
  2547  00043E  6E36               	movwf	printf@width,c
  2548  000440  D000               	goto	l6539
  2549  000442                     l6539:
  2550                           
  2551                           ;doprnt.c: 600: width *= 10;
  2552  000442  C036  F011         	movff	printf@width,___wmul@multiplier
  2553  000446  C037  F012         	movff	printf@width+1,___wmul@multiplier+1
  2554  00044A  0E00               	movlw	0
  2555  00044C  6E14               	movwf	___wmul@multiplicand+1,c
  2556  00044E  0E0A               	movlw	10
  2557  000450  6E13               	movwf	___wmul@multiplicand,c
  2558  000452  EC31  F010         	call	___wmul	;wreg free
  2559  000456  C011  F036         	movff	?___wmul,printf@width
  2560  00045A  C012  F037         	movff	?___wmul+1,printf@width+1
  2561                           
  2562                           ;doprnt.c: 601: width += *f++ - '0';
  2563  00045E  0ED0               	movlw	208
  2564  000460  6E2B               	movwf	??_printf& (0+255),c
  2565  000462  0EFF               	movlw	255
  2566  000464  6E2C               	movwf	(??_printf+1)& (0+255),c
  2567  000466  C01D  FFF6         	movff	printf@f,tblptrl
  2568  00046A  C01E  FFF7         	movff	printf@f+1,tblptrh
  2569  00046E                     	if	0	;tblptru may be non-zero
  2570  00046E                     	endif
  2571  00046E                     	if	0	;tblptru may be non-zero
  2572  00046E                     	endif
  2573  00046E  0008               	tblrd		*
  2574  000470  50F5               	movf	tablat,w,c
  2575  000472  6E2D               	movwf	(??_printf+2)& (0+255),c
  2576  000474  6A2E               	clrf	(??_printf+3)& (0+255),c
  2577  000476  502B               	movf	??_printf,w,c
  2578  000478  262D               	addwf	??_printf+2,f,c
  2579  00047A  502C               	movf	??_printf+1,w,c
  2580  00047C  222E               	addwfc	??_printf+3,f,c
  2581  00047E  502D               	movf	??_printf+2,w,c
  2582  000480  2636               	addwf	printf@width,f,c
  2583  000482  502E               	movf	??_printf+3,w,c
  2584  000484  2237               	addwfc	printf@width+1,f,c
  2585  000486  4A1D               	infsnz	printf@f,f,c
  2586  000488  2A1E               	incf	printf@f+1,f,c
  2587                           
  2588                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2589  00048A  C01D  FFF6         	movff	printf@f,tblptrl
  2590  00048E  C01E  FFF7         	movff	printf@f+1,tblptrh
  2591  000492                     	if	0	;tblptru may be non-zero
  2592  000492                     	endif
  2593  000492                     	if	0	;tblptru may be non-zero
  2594  000492                     	endif
  2595  000492  0008               	tblrd		*
  2596  000494  50F5               	movf	tablat,w,c
  2597  000496  EC6A  F010         	call	_isdigit
  2598  00049A  A0D8               	btfss	status,0,c
  2599  00049C  D008               	goto	l6551
  2600  00049E  D7D1               	goto	l6539
  2601                           
  2602                           ;doprnt.c: 608: }
  2603                           ;doprnt.c: 635: switch(c = *f++) {
  2604  0004A0  D006               	goto	l6551
  2605                           
  2606                           ;doprnt.c: 638: goto alldone;
  2607                           
  2608                           ;doprnt.c: 637: case 0:
  2609  0004A2  D148               	goto	l827
  2610                           
  2611                           ;doprnt.c: 698: case 'i':
  2612                           ;doprnt.c: 699: break;
  2613                           
  2614                           ;doprnt.c: 697: case 'd':
  2615  0004A4  D01B               	goto	l790
  2616  0004A6                     l6547:
  2617                           
  2618                           ;doprnt.c: 721: flag |= 0x80;
  2619  0004A6  8E35               	bsf	printf@flag,7,c
  2620                           
  2621                           ;doprnt.c: 723: break;
  2622  0004A8  D019               	goto	l790
  2623                           
  2624                           ;doprnt.c: 813: continue;
  2625                           
  2626                           ;doprnt.c: 802: default:
  2627  0004AA  D136               	goto	l6649
  2628                           
  2629                           ;doprnt.c: 822: }
  2630  0004AC  D017               	goto	l790
  2631  0004AE                     l6551:
  2632  0004AE  C01D  FFF6         	movff	printf@f,tblptrl
  2633  0004B2  C01E  FFF7         	movff	printf@f+1,tblptrh
  2634  0004B6  4A1D               	infsnz	printf@f,f,c
  2635  0004B8  2A1E               	incf	printf@f+1,f,c
  2636  0004BA                     	if	0	;tblptru may be non-zero
  2637  0004BA                     	endif
  2638  0004BA                     	if	0	;tblptru may be non-zero
  2639  0004BA                     	endif
  2640  0004BA  0008               	tblrd		*
  2641  0004BC  CFF5 F038          	movff	tablat,printf@c
  2642  0004C0  5038               	movf	printf@c,w,c
  2643                           
  2644                           ; Switch size 1, requested type "space"
  2645                           ; Number of cases is 4, Range of values is 0 to 120
  2646                           ; switch strategies available:
  2647                           ; Name         Instructions Cycles
  2648                           ; simple_byte           13     7 (average)
  2649                           ;	Chosen strategy is simple_byte
  2650  0004C2  0A00               	xorlw	0	; case 0
  2651  0004C4  B4D8               	btfsc	status,2,c
  2652  0004C6  D136               	goto	l827
  2653  0004C8  0A64               	xorlw	100	; case 100
  2654  0004CA  B4D8               	btfsc	status,2,c
  2655  0004CC  D007               	goto	l790
  2656  0004CE  0A0D               	xorlw	13	; case 105
  2657  0004D0  B4D8               	btfsc	status,2,c
  2658  0004D2  D004               	goto	l790
  2659  0004D4  0A11               	xorlw	17	; case 120
  2660  0004D6  B4D8               	btfsc	status,2,c
  2661  0004D8  D7E6               	goto	l6547
  2662  0004DA  D11E               	goto	l6649
  2663  0004DC                     l790:
  2664                           
  2665                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  2666  0004DC  BE35               	btfsc	printf@flag,7,c
  2667  0004DE  D015               	goto	l6563
  2668                           
  2669                           ;doprnt.c: 1253: {
  2670                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2671  0004E0  C030  FFD9         	movff	printf@ap,fsr2l
  2672  0004E4  C031  FFDA         	movff	printf@ap+1,fsr2h
  2673  0004E8  CFDE F033          	movff	postinc2,printf@val
  2674  0004EC  CFDD F034          	movff	postdec2,printf@val+1
  2675  0004F0  0E02               	movlw	2
  2676  0004F2  2630               	addwf	printf@ap,f,c
  2677  0004F4  0E00               	movlw	0
  2678  0004F6  2231               	addwfc	printf@ap+1,f,c
  2679                           
  2680                           ;doprnt.c: 1261: if((int)val < 0) {
  2681  0004F8  AE34               	btfss	printf@val+1,7,c
  2682  0004FA  D04E               	goto	l6597
  2683                           
  2684                           ;doprnt.c: 1262: flag |= 0x03;
  2685  0004FC  0E03               	movlw	3
  2686  0004FE  1235               	iorwf	printf@flag,f,c
  2687                           
  2688                           ;doprnt.c: 1263: val = -val;
  2689  000500  6C33               	negf	printf@val,c
  2690  000502  1E34               	comf	printf@val+1,f,c
  2691  000504  B0D8               	btfsc	status,0,c
  2692  000506  2A34               	incf	printf@val+1,f,c
  2693                           
  2694                           ;doprnt.c: 1264: }
  2695                           ;doprnt.c: 1266: }
  2696  000508  D047               	goto	l6597
  2697  00050A                     l6563:
  2698                           
  2699                           ;doprnt.c: 1268: else
  2700                           ;doprnt.c: 1273: {
  2701                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2702  00050A  C030  FFD9         	movff	printf@ap,fsr2l
  2703  00050E  C031  FFDA         	movff	printf@ap+1,fsr2h
  2704  000512  CFDE F033          	movff	postinc2,printf@val
  2705  000516  CFDD F034          	movff	postdec2,printf@val+1
  2706  00051A  0E02               	movlw	2
  2707  00051C  2630               	addwf	printf@ap,f,c
  2708  00051E  0E00               	movlw	0
  2709  000520  2231               	addwfc	printf@ap+1,f,c
  2710                           
  2711                           ;doprnt.c: 1287: }
  2712                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  2713  000522  D03A               	goto	l6597
  2714  000524                     l6567:
  2715                           
  2716                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2717  000524  0E01               	movlw	1
  2718  000526  6E38               	movwf	printf@c,c
  2719  000528                     l6569:
  2720  000528  0E05               	movlw	5
  2721  00052A  1838               	xorwf	printf@c,w,c
  2722  00052C  B4D8               	btfsc	status,2,c
  2723  00052E  D03D               	goto	l6599
  2724  000530  D001               	goto	l6573
  2725  000532  D03B               	goto	l6599
  2726  000534                     l6573:
  2727                           
  2728                           ;doprnt.c: 1306: if(val < dpowers[c])
  2729  000534  5038               	movf	printf@c,w,c
  2730  000536  0D02               	mullw	2
  2731  000538  0EE8               	movlw	low _dpowers
  2732  00053A  24F3               	addwf	prodl,w,c
  2733  00053C  6EF6               	movwf	tblptrl,c
  2734  00053E  0EFE               	movlw	high _dpowers
  2735  000540  20F4               	addwfc	prodh,w,c
  2736  000542  6EF7               	movwf	tblptrh,c
  2737  000544                     	if	0	;There are less than 3 active tblptr bytes
  2738  000544                     	endif
  2739  000544  0009               	tblrd		*+
  2740  000546  50F5               	movf	tablat,w,c
  2741  000548  5C33               	subwf	printf@val,w,c
  2742  00054A  0009               	tblrd		*+
  2743  00054C  50F5               	movf	tablat,w,c
  2744  00054E  5834               	subwfb	printf@val+1,w,c
  2745  000550  A0D8               	btfss	status,0,c
  2746  000552  D02B               	goto	l6599
  2747  000554  D001               	goto	l6577
  2748                           
  2749                           ;doprnt.c: 1307: break;
  2750  000556  D029               	goto	l6599
  2751  000558                     l6577:
  2752  000558  2A38               	incf	printf@c,f,c
  2753  00055A  D7E6               	goto	l6569
  2754                           
  2755                           ;doprnt.c: 1309: break;
  2756  00055C  D026               	goto	l6599
  2757  00055E                     l6581:
  2758                           
  2759                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  2760  00055E  0E01               	movlw	1
  2761  000560  6E38               	movwf	printf@c,c
  2762  000562                     l6583:
  2763  000562  0E04               	movlw	4
  2764  000564  1838               	xorwf	printf@c,w,c
  2765  000566  B4D8               	btfsc	status,2,c
  2766  000568  D020               	goto	l6599
  2767  00056A  D001               	goto	l6587
  2768  00056C  D01E               	goto	l6599
  2769  00056E                     l6587:
  2770                           
  2771                           ;doprnt.c: 1317: if(val < hexpowers[c])
  2772  00056E  5038               	movf	printf@c,w,c
  2773  000570  0D02               	mullw	2
  2774  000572  0EF2               	movlw	low _hexpowers
  2775  000574  24F3               	addwf	prodl,w,c
  2776  000576  6EF6               	movwf	tblptrl,c
  2777  000578  0EFE               	movlw	high _hexpowers
  2778  00057A  20F4               	addwfc	prodh,w,c
  2779  00057C  6EF7               	movwf	tblptrh,c
  2780  00057E                     	if	0	;There are less than 3 active tblptr bytes
  2781  00057E                     	endif
  2782  00057E  0009               	tblrd		*+
  2783  000580  50F5               	movf	tablat,w,c
  2784  000582  5C33               	subwf	printf@val,w,c
  2785  000584  0009               	tblrd		*+
  2786  000586  50F5               	movf	tablat,w,c
  2787  000588  5834               	subwfb	printf@val+1,w,c
  2788  00058A  A0D8               	btfss	status,0,c
  2789  00058C  D00E               	goto	l6599
  2790  00058E  D001               	goto	l6591
  2791                           
  2792                           ;doprnt.c: 1318: break;
  2793  000590  D00C               	goto	l6599
  2794  000592                     l6591:
  2795  000592  2A38               	incf	printf@c,f,c
  2796  000594  D7E6               	goto	l6583
  2797                           
  2798                           ;doprnt.c: 1336: }
  2799                           
  2800                           ;doprnt.c: 1320: break;
  2801  000596  D009               	goto	l6599
  2802  000598                     l6597:
  2803  000598  5035               	movf	printf@flag,w,c
  2804  00059A  0B80               	andlw	128
  2805                           
  2806                           ; Switch size 1, requested type "space"
  2807                           ; Number of cases is 2, Range of values is 0 to 128
  2808                           ; switch strategies available:
  2809                           ; Name         Instructions Cycles
  2810                           ; simple_byte            7     4 (average)
  2811                           ;	Chosen strategy is simple_byte
  2812  00059C  0A00               	xorlw	0	; case 0
  2813  00059E  B4D8               	btfsc	status,2,c
  2814  0005A0  D7C1               	goto	l6567
  2815  0005A2  0A80               	xorlw	128	; case 128
  2816  0005A4  B4D8               	btfsc	status,2,c
  2817  0005A6  D7DB               	goto	l6581
  2818  0005A8  D000               	goto	l6599
  2819  0005AA                     l6599:
  2820                           
  2821                           ;doprnt.c: 1345: if(width && flag & 0x03)
  2822  0005AA  5036               	movf	printf@width,w,c
  2823  0005AC  1037               	iorwf	printf@width+1,w,c
  2824  0005AE  B4D8               	btfsc	status,2,c
  2825  0005B0  D00A               	goto	l6605
  2826  0005B2  C035  F02B         	movff	printf@flag,??_printf
  2827  0005B6  0E03               	movlw	3
  2828  0005B8  162B               	andwf	??_printf,f,c
  2829  0005BA  B4D8               	btfsc	status,2,c
  2830  0005BC  D004               	goto	l6605
  2831                           
  2832                           ;doprnt.c: 1346: width--;
  2833  0005BE  0636               	decf	printf@width,f,c
  2834  0005C0  A0D8               	btfss	status,0,c
  2835  0005C2  0637               	decf	printf@width+1,f,c
  2836  0005C4  D000               	goto	l6605
  2837  0005C6                     l6605:
  2838                           
  2839                           ;doprnt.c: 1381: if(width > c)
  2840  0005C6  0E80               	movlw	128
  2841  0005C8  BE38               	btfsc	printf@c,7,c
  2842  0005CA  0E7F               	movlw	127
  2843  0005CC  6E2B               	movwf	??_printf& (0+255),c
  2844  0005CE  5036               	movf	printf@width,w,c
  2845  0005D0  5C38               	subwf	printf@c,w,c
  2846  0005D2  5037               	movf	printf@width+1,w,c
  2847  0005D4  0A80               	xorlw	128
  2848  0005D6  582B               	subwfb	??_printf& (0+255),w,c
  2849  0005D8  B0D8               	btfsc	status,0,c
  2850  0005DA  D007               	goto	l6609
  2851                           
  2852                           ;doprnt.c: 1382: width -= c;
  2853  0005DC  5038               	movf	printf@c,w,c
  2854  0005DE  5E36               	subwf	printf@width,f,c
  2855  0005E0  0E00               	movlw	0
  2856  0005E2  BE38               	btfsc	printf@c,7,c
  2857  0005E4  0EFF               	movlw	255
  2858  0005E6  5A37               	subwfb	printf@width+1,f,c
  2859  0005E8  D005               	goto	l6611
  2860  0005EA                     l6609:
  2861                           
  2862                           ;doprnt.c: 1383: else
  2863                           ;doprnt.c: 1384: width = 0;
  2864  0005EA  0E00               	movlw	0
  2865  0005EC  6E37               	movwf	printf@width+1,c
  2866  0005EE  0E00               	movlw	0
  2867  0005F0  6E36               	movwf	printf@width,c
  2868  0005F2  D000               	goto	l6611
  2869  0005F4                     l6611:
  2870                           
  2871                           ;doprnt.c: 1387: if(flag & 0x04) {
  2872  0005F4  A435               	btfss	printf@flag,2,c
  2873  0005F6  D01A               	goto	l6623
  2874                           
  2875                           ;doprnt.c: 1392: if(flag & 0x03)
  2876  0005F8  C035  F02B         	movff	printf@flag,??_printf
  2877  0005FC  0E03               	movlw	3
  2878  0005FE  162B               	andwf	??_printf,f,c
  2879  000600  B4D8               	btfsc	status,2,c
  2880  000602  D004               	goto	l6617
  2881                           
  2882                           ;doprnt.c: 1393: (putch('-') );
  2883  000604  0E2D               	movlw	45
  2884  000606  EC5D  F011         	call	_putch
  2885  00060A  D000               	goto	l6617
  2886  00060C                     l6617:
  2887                           
  2888                           ;doprnt.c: 1415: if(width)
  2889  00060C  5036               	movf	printf@width,w,c
  2890  00060E  1037               	iorwf	printf@width+1,w,c
  2891  000610  B4D8               	btfsc	status,2,c
  2892  000612  D026               	goto	l6633
  2893  000614                     l6619:
  2894                           
  2895                           ;doprnt.c: 1417: (putch('0') );
  2896  000614  0E30               	movlw	48
  2897  000616  EC5D  F011         	call	_putch
  2898                           
  2899                           ;doprnt.c: 1418: while(--width);
  2900  00061A  0636               	decf	printf@width,f,c
  2901  00061C  A0D8               	btfss	status,0,c
  2902  00061E  0637               	decf	printf@width+1,f,c
  2903  000620  5036               	movf	printf@width,w,c
  2904  000622  1037               	iorwf	printf@width+1,w,c
  2905  000624  B4D8               	btfsc	status,2,c
  2906  000626  D01C               	goto	l6633
  2907  000628  D7F5               	goto	l6619
  2908                           
  2909                           ;doprnt.c: 1420: } else
  2910  00062A  D01A               	goto	l6633
  2911  00062C                     l6623:
  2912                           
  2913                           ;doprnt.c: 1422: {
  2914                           ;doprnt.c: 1424: if(width
  2915                           ;doprnt.c: 1428: )
  2916  00062C  5036               	movf	printf@width,w,c
  2917  00062E  1037               	iorwf	printf@width+1,w,c
  2918  000630  B4D8               	btfsc	status,2,c
  2919  000632  D00C               	goto	l6629
  2920  000634                     l6625:
  2921                           
  2922                           ;doprnt.c: 1430: (putch(' ') );
  2923  000634  0E20               	movlw	32
  2924  000636  EC5D  F011         	call	_putch
  2925                           
  2926                           ;doprnt.c: 1431: while(--width);
  2927  00063A  0636               	decf	printf@width,f,c
  2928  00063C  A0D8               	btfss	status,0,c
  2929  00063E  0637               	decf	printf@width+1,f,c
  2930  000640  5036               	movf	printf@width,w,c
  2931  000642  1037               	iorwf	printf@width+1,w,c
  2932  000644  B4D8               	btfsc	status,2,c
  2933  000646  D002               	goto	l6629
  2934  000648  D7F5               	goto	l6625
  2935  00064A  D000               	goto	l6629
  2936  00064C                     l6629:
  2937                           
  2938                           ;doprnt.c: 1438: if(flag & 0x03)
  2939  00064C  C035  F02B         	movff	printf@flag,??_printf
  2940  000650  0E03               	movlw	3
  2941  000652  162B               	andwf	??_printf,f,c
  2942  000654  B4D8               	btfsc	status,2,c
  2943  000656  D004               	goto	l6633
  2944                           
  2945                           ;doprnt.c: 1439: (putch('-') );
  2946  000658  0E2D               	movlw	45
  2947  00065A  EC5D  F011         	call	_putch
  2948  00065E  D000               	goto	l6633
  2949  000660                     l6633:
  2950                           
  2951                           ;doprnt.c: 1469: }
  2952                           ;doprnt.c: 1472: prec = c;
  2953  000660  C038  F032         	movff	printf@c,printf@prec
  2954                           
  2955                           ;doprnt.c: 1474: while(prec--) {
  2956  000664  D053               	goto	l6647
  2957                           
  2958                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
  2959  000666  D045               	goto	l6643
  2960  000668                     l6635:
  2961                           
  2962                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2963  000668  5032               	movf	printf@prec,w,c
  2964  00066A  0D02               	mullw	2
  2965  00066C  0EE8               	movlw	low _dpowers
  2966  00066E  24F3               	addwf	prodl,w,c
  2967  000670  6EF6               	movwf	tblptrl,c
  2968  000672  0EFE               	movlw	high _dpowers
  2969  000674  20F4               	addwfc	prodh,w,c
  2970  000676  6EF7               	movwf	tblptrh,c
  2971  000678                     	if	0	;There are less than 3 active tblptr bytes
  2972  000678                     	endif
  2973  000678  0009               	tblrd		*+
  2974  00067A  CFF5 F013          	movff	tablat,___lwdiv@divisor
  2975  00067E  000A               	tblrd		*-
  2976  000680  CFF5 F014          	movff	tablat,___lwdiv@divisor+1
  2977  000684  C033  F011         	movff	printf@val,___lwdiv@dividend
  2978  000688  C034  F012         	movff	printf@val+1,___lwdiv@dividend+1
  2979  00068C  EC3D  F00E         	call	___lwdiv	;wreg free
  2980  000690  C011  F018         	movff	?___lwdiv,___lwmod@dividend
  2981  000694  C012  F019         	movff	?___lwdiv+1,___lwmod@dividend+1
  2982  000698  0E00               	movlw	0
  2983  00069A  6E1B               	movwf	___lwmod@divisor+1,c
  2984  00069C  0E0A               	movlw	10
  2985  00069E  6E1A               	movwf	___lwmod@divisor,c
  2986  0006A0  ECE2  F00E         	call	___lwmod	;wreg free
  2987  0006A4  5018               	movf	?___lwmod,w,c
  2988  0006A6  0F30               	addlw	48
  2989  0006A8  6E38               	movwf	printf@c,c
  2990                           
  2991                           ;doprnt.c: 1491: break;
  2992  0006AA  D02C               	goto	l6645
  2993  0006AC                     l6637:
  2994                           
  2995                           ;doprnt.c: 1499: {
  2996                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  2997  0006AC  C033  F011         	movff	printf@val,___lwdiv@dividend
  2998  0006B0  C034  F012         	movff	printf@val+1,___lwdiv@dividend+1
  2999  0006B4  5032               	movf	printf@prec,w,c
  3000  0006B6  0D02               	mullw	2
  3001  0006B8  0EF2               	movlw	low _hexpowers
  3002  0006BA  24F3               	addwf	prodl,w,c
  3003  0006BC  6EF6               	movwf	tblptrl,c
  3004  0006BE  0EFE               	movlw	high _hexpowers
  3005  0006C0  20F4               	addwfc	prodh,w,c
  3006  0006C2  6EF7               	movwf	tblptrh,c
  3007  0006C4                     	if	0	;There are less than 3 active tblptr bytes
  3008  0006C4                     	endif
  3009  0006C4  0009               	tblrd		*+
  3010  0006C6  CFF5 F013          	movff	tablat,___lwdiv@divisor
  3011  0006CA  000A               	tblrd		*-
  3012  0006CC  CFF5 F014          	movff	tablat,___lwdiv@divisor+1
  3013  0006D0  EC3D  F00E         	call	___lwdiv	;wreg free
  3014  0006D4  5011               	movf	?___lwdiv,w,c
  3015  0006D6  0B0F               	andlw	15
  3016  0006D8  6E2F               	movwf	printf@idx,c
  3017                           
  3018                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  3019  0006DA  502F               	movf	printf@idx,w,c
  3020  0006DC  0D01               	mullw	1
  3021  0006DE  0E98               	movlw	low STR_21
  3022  0006E0  24F3               	addwf	prodl,w,c
  3023  0006E2  6EF6               	movwf	tblptrl,c
  3024  0006E4  0EFF               	movlw	high STR_21
  3025  0006E6  20F4               	addwfc	prodh,w,c
  3026  0006E8  6EF7               	movwf	tblptrh,c
  3027  0006EA                     	if	0	;There are less than 3 active tblptr bytes
  3028  0006EA                     	endif
  3029  0006EA  0008               	tblrd		*
  3030  0006EC  CFF5 F038          	movff	tablat,printf@c
  3031                           
  3032                           ;doprnt.c: 1523: }
  3033                           
  3034                           ;doprnt.c: 1508: }
  3035                           ;doprnt.c: 1510: break;
  3036  0006F0  D009               	goto	l6645
  3037  0006F2                     l6643:
  3038  0006F2  5035               	movf	printf@flag,w,c
  3039  0006F4  0B80               	andlw	128
  3040                           
  3041                           ; Switch size 1, requested type "space"
  3042                           ; Number of cases is 2, Range of values is 0 to 128
  3043                           ; switch strategies available:
  3044                           ; Name         Instructions Cycles
  3045                           ; simple_byte            7     4 (average)
  3046                           ;	Chosen strategy is simple_byte
  3047  0006F6  0A00               	xorlw	0	; case 0
  3048  0006F8  B4D8               	btfsc	status,2,c
  3049  0006FA  D7B6               	goto	l6635
  3050  0006FC  0A80               	xorlw	128	; case 128
  3051  0006FE  B4D8               	btfsc	status,2,c
  3052  000700  D7D5               	goto	l6637
  3053  000702  D000               	goto	l6645
  3054  000704                     l6645:
  3055                           
  3056                           ;doprnt.c: 1524: (putch(c) );
  3057  000704  5038               	movf	printf@c,w,c
  3058  000706  EC5D  F011         	call	_putch
  3059  00070A  D000               	goto	l6647
  3060  00070C                     l6647:
  3061  00070C  0632               	decf	printf@prec,f,c
  3062  00070E  2832               	incf	printf@prec,w,c
  3063  000710  B4D8               	btfsc	status,2,c
  3064  000712  D002               	goto	l6649
  3065  000714  D7EE               	goto	l6643
  3066  000716  D000               	goto	l6649
  3067  000718                     l6649:
  3068  000718  C01D  FFF6         	movff	printf@f,tblptrl
  3069  00071C  C01E  FFF7         	movff	printf@f+1,tblptrh
  3070  000720  4A1D               	infsnz	printf@f,f,c
  3071  000722  2A1E               	incf	printf@f+1,f,c
  3072  000724                     	if	0	;tblptru may be non-zero
  3073  000724                     	endif
  3074  000724                     	if	0	;tblptru may be non-zero
  3075  000724                     	endif
  3076  000724  0008               	tblrd		*
  3077  000726  CFF5 F038          	movff	tablat,printf@c
  3078  00072A  5038               	movf	printf@c,w,c
  3079  00072C  B4D8               	btfsc	status,2,c
  3080  00072E  D002               	goto	l827
  3081  000730  D65A               	goto	l6523
  3082  000732  D000               	goto	l827
  3083  000734                     l827:
  3084  000734  0012               	return		;funcret
  3085  000736                     __end_of_printf:
  3086                           	opt stack 0
  3087                           tblptru	equ	0xFF8
  3088                           tblptrh	equ	0xFF7
  3089                           tblptrl	equ	0xFF6
  3090                           tablat	equ	0xFF5
  3091                           prodh	equ	0xFF4
  3092                           prodl	equ	0xFF3
  3093                           intcon	equ	0xFF2
  3094                           intcon2	equ	0xFF1
  3095                           postinc0	equ	0xFEE
  3096                           wreg	equ	0xFE8
  3097                           postdec1	equ	0xFE5
  3098                           fsr1l	equ	0xFE1
  3099                           postinc2	equ	0xFDE
  3100                           postdec2	equ	0xFDD
  3101                           fsr2h	equ	0xFDA
  3102                           fsr2l	equ	0xFD9
  3103                           status	equ	0xFD8
  3104                           
  3105 ;; *************** function _putch *****************
  3106 ;; Defined at:
  3107 ;;		line 74 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/Lab12_1.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;  c               1    wreg     unsigned char 
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;  c               1   16[COMRAM] unsigned char 
  3112 ;; Return value:  Size  Location     Type
  3113 ;;		None               void
  3114 ;; Registers used:
  3115 ;;		wreg
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3122 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3124 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3125 ;;Total ram usage:        1 bytes
  3126 ;; Hardware stack levels used:    1
  3127 ;; Hardware stack levels required when called:    3
  3128 ;; This function calls:
  3129 ;;		Nothing
  3130 ;; This function is called by:
  3131 ;;		_printf
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           	psect	text2
  3136  0022BA                     __ptext2:
  3137                           	opt stack 0
  3138  0022BA                     _putch:
  3139                           	opt stack 26
  3140                           
  3141                           ;incstack = 0
  3142                           ;putch@c stored from wreg
  3143  0022BA  6E11               	movwf	putch@c,c
  3144                           
  3145                           ;Lab12_1.c: 76: while (!TRMT);
  3146  0022BC  D000               	goto	l726
  3147  0022BE                     l726:
  3148  0022BE  A2AC               	btfss	4012,1,c	;volatile
  3149  0022C0  D7FE               	goto	l726
  3150                           
  3151                           ;Lab12_1.c: 77: TXREG = c;
  3152  0022C2  C011  FFAD         	movff	putch@c,4013	;volatile
  3153  0022C6  0012               	return		;funcret
  3154  0022C8                     __end_of_putch:
  3155                           	opt stack 0
  3156                           tblptru	equ	0xFF8
  3157                           tblptrh	equ	0xFF7
  3158                           tblptrl	equ	0xFF6
  3159                           tablat	equ	0xFF5
  3160                           prodh	equ	0xFF4
  3161                           prodl	equ	0xFF3
  3162                           intcon	equ	0xFF2
  3163                           intcon2	equ	0xFF1
  3164                           postinc0	equ	0xFEE
  3165                           wreg	equ	0xFE8
  3166                           postdec1	equ	0xFE5
  3167                           fsr1l	equ	0xFE1
  3168                           postinc2	equ	0xFDE
  3169                           postdec2	equ	0xFDD
  3170                           fsr2h	equ	0xFDA
  3171                           fsr2l	equ	0xFD9
  3172                           status	equ	0xFD8
  3173                           
  3174 ;; *************** function _isdigit *****************
  3175 ;; Defined at:
  3176 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  c               1    wreg     unsigned char 
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;  c               1   18[COMRAM] unsigned char 
  3181 ;; Return value:  Size  Location     Type
  3182 ;;		None               void
  3183 ;; Registers used:
  3184 ;;		wreg, status,2, status,0
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3193 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3194 ;;Total ram usage:        3 bytes
  3195 ;; Hardware stack levels used:    1
  3196 ;; Hardware stack levels required when called:    3
  3197 ;; This function calls:
  3198 ;;		Nothing
  3199 ;; This function is called by:
  3200 ;;		_printf
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204                           	psect	text3
  3205  0020D4                     __ptext3:
  3206                           	opt stack 0
  3207  0020D4                     _isdigit:
  3208                           	opt stack 26
  3209                           
  3210                           ;incstack = 0
  3211                           ;isdigit@c stored from wreg
  3212  0020D4  6E13               	movwf	isdigit@c,c
  3213  0020D6  0E00               	movlw	0
  3214  0020D8  6E12               	movwf	_isdigit$2306,c
  3215  0020DA  0E3A               	movlw	58
  3216  0020DC  6013               	cpfslt	isdigit@c,c
  3217  0020DE  D006               	goto	l6075
  3218  0020E0  0E2F               	movlw	47
  3219  0020E2  6413               	cpfsgt	isdigit@c,c
  3220  0020E4  D003               	goto	l6075
  3221  0020E6  0E01               	movlw	1
  3222  0020E8  6E12               	movwf	_isdigit$2306,c
  3223  0020EA  D000               	goto	l6075
  3224  0020EC                     l6075:
  3225  0020EC  C012  F011         	movff	_isdigit$2306,??_isdigit
  3226  0020F0  3011               	rrcf	??_isdigit,w,c
  3227  0020F2  D000               	goto	l1294
  3228  0020F4                     l1294:
  3229  0020F4  0012               	return		;funcret
  3230  0020F6                     __end_of_isdigit:
  3231                           	opt stack 0
  3232                           tblptru	equ	0xFF8
  3233                           tblptrh	equ	0xFF7
  3234                           tblptrl	equ	0xFF6
  3235                           tablat	equ	0xFF5
  3236                           prodh	equ	0xFF4
  3237                           prodl	equ	0xFF3
  3238                           intcon	equ	0xFF2
  3239                           intcon2	equ	0xFF1
  3240                           postinc0	equ	0xFEE
  3241                           wreg	equ	0xFE8
  3242                           postdec1	equ	0xFE5
  3243                           fsr1l	equ	0xFE1
  3244                           postinc2	equ	0xFDE
  3245                           postdec2	equ	0xFDD
  3246                           fsr2h	equ	0xFDA
  3247                           fsr2l	equ	0xFD9
  3248                           status	equ	0xFD8
  3249                           
  3250 ;; *************** function ___lwmod *****************
  3251 ;; Defined at:
  3252 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;  dividend        2   23[COMRAM] unsigned int 
  3255 ;;  divisor         2   25[COMRAM] unsigned int 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;  counter         1   27[COMRAM] unsigned char 
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  2   23[COMRAM] unsigned int 
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3267 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3268 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3270 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3271 ;;Total ram usage:        5 bytes
  3272 ;; Hardware stack levels used:    1
  3273 ;; Hardware stack levels required when called:    3
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_printf
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           	psect	text4
  3282  001DC4                     __ptext4:
  3283                           	opt stack 0
  3284  001DC4                     ___lwmod:
  3285                           	opt stack 26
  3286                           
  3287                           ;incstack = 0
  3288  001DC4  501A               	movf	___lwmod@divisor,w,c
  3289  001DC6  101B               	iorwf	___lwmod@divisor+1,w,c
  3290  001DC8  B4D8               	btfsc	status,2,c
  3291  001DCA  D01D               	goto	l1396
  3292  001DCC  0E01               	movlw	1
  3293  001DCE  6E1C               	movwf	___lwmod@counter,c
  3294  001DD0  D005               	goto	l6187
  3295  001DD2                     l6185:
  3296  001DD2  90D8               	bcf	status,0,c
  3297  001DD4  361A               	rlcf	___lwmod@divisor,f,c
  3298  001DD6  361B               	rlcf	___lwmod@divisor+1,f,c
  3299  001DD8  2A1C               	incf	___lwmod@counter,f,c
  3300  001DDA  D000               	goto	l6187
  3301  001DDC                     l6187:
  3302  001DDC  BE1B               	btfsc	___lwmod@divisor+1,7,c
  3303  001DDE  D002               	goto	l6189
  3304  001DE0  D7F8               	goto	l6185
  3305  001DE2  D000               	goto	l6189
  3306  001DE4                     l6189:
  3307  001DE4  501A               	movf	___lwmod@divisor,w,c
  3308  001DE6  5C18               	subwf	___lwmod@dividend,w,c
  3309  001DE8  501B               	movf	___lwmod@divisor+1,w,c
  3310  001DEA  5819               	subwfb	___lwmod@dividend+1,w,c
  3311  001DEC  A0D8               	btfss	status,0,c
  3312  001DEE  D005               	goto	l6193
  3313  001DF0  501A               	movf	___lwmod@divisor,w,c
  3314  001DF2  5E18               	subwf	___lwmod@dividend,f,c
  3315  001DF4  501B               	movf	___lwmod@divisor+1,w,c
  3316  001DF6  5A19               	subwfb	___lwmod@dividend+1,f,c
  3317  001DF8  D000               	goto	l6193
  3318  001DFA                     l6193:
  3319  001DFA  90D8               	bcf	status,0,c
  3320  001DFC  321B               	rrcf	___lwmod@divisor+1,f,c
  3321  001DFE  321A               	rrcf	___lwmod@divisor,f,c
  3322  001E00  2E1C               	decfsz	___lwmod@counter,f,c
  3323  001E02  D7F0               	goto	l6189
  3324  001E04  D000               	goto	l1396
  3325  001E06                     l1396:
  3326  001E06  C018  F018         	movff	___lwmod@dividend,?___lwmod
  3327  001E0A  C019  F019         	movff	___lwmod@dividend+1,?___lwmod+1
  3328  001E0E  0012               	return		;funcret
  3329  001E10                     __end_of___lwmod:
  3330                           	opt stack 0
  3331                           tblptru	equ	0xFF8
  3332                           tblptrh	equ	0xFF7
  3333                           tblptrl	equ	0xFF6
  3334                           tablat	equ	0xFF5
  3335                           prodh	equ	0xFF4
  3336                           prodl	equ	0xFF3
  3337                           intcon	equ	0xFF2
  3338                           intcon2	equ	0xFF1
  3339                           postinc0	equ	0xFEE
  3340                           wreg	equ	0xFE8
  3341                           postdec1	equ	0xFE5
  3342                           fsr1l	equ	0xFE1
  3343                           postinc2	equ	0xFDE
  3344                           postdec2	equ	0xFDD
  3345                           fsr2h	equ	0xFDA
  3346                           fsr2l	equ	0xFD9
  3347                           status	equ	0xFD8
  3348                           
  3349 ;; *************** function ___lwdiv *****************
  3350 ;; Defined at:
  3351 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  dividend        2   16[COMRAM] unsigned int 
  3354 ;;  divisor         2   18[COMRAM] unsigned int 
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;  quotient        2   21[COMRAM] unsigned int 
  3357 ;;  counter         1   20[COMRAM] unsigned char 
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  2   16[COMRAM] unsigned int 
  3360 ;; Registers used:
  3361 ;;		wreg, status,2, status,0
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3367 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3368 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3370 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3371 ;;Total ram usage:        7 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:    3
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		_printf
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text5
  3382  001C7A                     __ptext5:
  3383                           	opt stack 0
  3384  001C7A                     ___lwdiv:
  3385                           	opt stack 26
  3386                           
  3387                           ;incstack = 0
  3388  001C7A  0E00               	movlw	0
  3389  001C7C  6E17               	movwf	___lwdiv@quotient+1,c
  3390  001C7E  0E00               	movlw	0
  3391  001C80  6E16               	movwf	___lwdiv@quotient,c
  3392  001C82  5013               	movf	___lwdiv@divisor,w,c
  3393  001C84  1014               	iorwf	___lwdiv@divisor+1,w,c
  3394  001C86  B4D8               	btfsc	status,2,c
  3395  001C88  D021               	goto	l1386
  3396  001C8A  0E01               	movlw	1
  3397  001C8C  6E15               	movwf	___lwdiv@counter,c
  3398  001C8E  D005               	goto	l6167
  3399  001C90                     l6165:
  3400  001C90  90D8               	bcf	status,0,c
  3401  001C92  3613               	rlcf	___lwdiv@divisor,f,c
  3402  001C94  3614               	rlcf	___lwdiv@divisor+1,f,c
  3403  001C96  2A15               	incf	___lwdiv@counter,f,c
  3404  001C98  D000               	goto	l6167
  3405  001C9A                     l6167:
  3406  001C9A  BE14               	btfsc	___lwdiv@divisor+1,7,c
  3407  001C9C  D002               	goto	l6169
  3408  001C9E  D7F8               	goto	l6165
  3409  001CA0  D000               	goto	l6169
  3410  001CA2                     l6169:
  3411  001CA2  90D8               	bcf	status,0,c
  3412  001CA4  3616               	rlcf	___lwdiv@quotient,f,c
  3413  001CA6  3617               	rlcf	___lwdiv@quotient+1,f,c
  3414  001CA8  5013               	movf	___lwdiv@divisor,w,c
  3415  001CAA  5C11               	subwf	___lwdiv@dividend,w,c
  3416  001CAC  5014               	movf	___lwdiv@divisor+1,w,c
  3417  001CAE  5812               	subwfb	___lwdiv@dividend+1,w,c
  3418  001CB0  A0D8               	btfss	status,0,c
  3419  001CB2  D006               	goto	l6177
  3420  001CB4  5013               	movf	___lwdiv@divisor,w,c
  3421  001CB6  5E11               	subwf	___lwdiv@dividend,f,c
  3422  001CB8  5014               	movf	___lwdiv@divisor+1,w,c
  3423  001CBA  5A12               	subwfb	___lwdiv@dividend+1,f,c
  3424  001CBC  8016               	bsf	___lwdiv@quotient,0,c
  3425  001CBE  D000               	goto	l6177
  3426  001CC0                     l6177:
  3427  001CC0  90D8               	bcf	status,0,c
  3428  001CC2  3214               	rrcf	___lwdiv@divisor+1,f,c
  3429  001CC4  3213               	rrcf	___lwdiv@divisor,f,c
  3430  001CC6  2E15               	decfsz	___lwdiv@counter,f,c
  3431  001CC8  D7EC               	goto	l6169
  3432  001CCA  D000               	goto	l1386
  3433  001CCC                     l1386:
  3434  001CCC  C016  F011         	movff	___lwdiv@quotient,?___lwdiv
  3435  001CD0  C017  F012         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3436  001CD4  0012               	return		;funcret
  3437  001CD6                     __end_of___lwdiv:
  3438                           	opt stack 0
  3439                           tblptru	equ	0xFF8
  3440                           tblptrh	equ	0xFF7
  3441                           tblptrl	equ	0xFF6
  3442                           tablat	equ	0xFF5
  3443                           prodh	equ	0xFF4
  3444                           prodl	equ	0xFF3
  3445                           intcon	equ	0xFF2
  3446                           intcon2	equ	0xFF1
  3447                           postinc0	equ	0xFEE
  3448                           wreg	equ	0xFE8
  3449                           postdec1	equ	0xFE5
  3450                           fsr1l	equ	0xFE1
  3451                           postinc2	equ	0xFDE
  3452                           postdec2	equ	0xFDD
  3453                           fsr2h	equ	0xFDA
  3454                           fsr2l	equ	0xFD9
  3455                           status	equ	0xFD8
  3456                           
  3457 ;; *************** function _get_RPM *****************
  3458 ;; Defined at:
  3459 ;;		line 10 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/Fan_Support.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;		None
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;  RPS             2   32[COMRAM] int 
  3464 ;; Return value:  Size  Location     Type
  3465 ;;                  2   30[COMRAM] int 
  3466 ;; Registers used:
  3467 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3468 ;; Tracked objects:
  3469 ;;		On entry : 0/0
  3470 ;;		On exit  : 0/0
  3471 ;;		Unchanged: 0/0
  3472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3474 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3476 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3477 ;;Total ram usage:        4 bytes
  3478 ;; Hardware stack levels used:    1
  3479 ;; Hardware stack levels required when called:    4
  3480 ;; This function calls:
  3481 ;;		___awdiv
  3482 ;;		___wmul
  3483 ;; This function is called by:
  3484 ;;		_main
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text6
  3489  001EA2                     __ptext6:
  3490                           	opt stack 0
  3491  001EA2                     _get_RPM:
  3492                           	opt stack 26
  3493                           
  3494                           ;Fan_Support.c: 12: int RPS = TMR3L/2;
  3495                           
  3496                           ;incstack = 0
  3497  001EA2  CFB2 F017          	movff	4018,___awdiv@dividend	;volatile
  3498  001EA6  6A18               	clrf	___awdiv@dividend+1,c
  3499  001EA8  0E00               	movlw	0
  3500  001EAA  6E1A               	movwf	___awdiv@divisor+1,c
  3501  001EAC  0E02               	movlw	2
  3502  001EAE  6E19               	movwf	___awdiv@divisor,c
  3503  001EB0  EC1C  F00C         	call	___awdiv	;wreg free
  3504  001EB4  C017  F021         	movff	?___awdiv,get_RPM@RPS
  3505  001EB8  C018  F022         	movff	?___awdiv+1,get_RPM@RPS+1
  3506                           
  3507                           ;Fan_Support.c: 13: TMR3L = 0;
  3508  001EBC  0E00               	movlw	0
  3509  001EBE  6EB2               	movwf	4018,c	;volatile
  3510                           
  3511                           ;Fan_Support.c: 14: return (RPS*60);
  3512  001EC0  C021  F011         	movff	get_RPM@RPS,___wmul@multiplier
  3513  001EC4  C022  F012         	movff	get_RPM@RPS+1,___wmul@multiplier+1
  3514  001EC8  0E00               	movlw	0
  3515  001ECA  6E14               	movwf	___wmul@multiplicand+1,c
  3516  001ECC  0E3C               	movlw	60
  3517  001ECE  6E13               	movwf	___wmul@multiplicand,c
  3518  001ED0  EC31  F010         	call	___wmul	;wreg free
  3519  001ED4  C011  F01F         	movff	?___wmul,?_get_RPM
  3520  001ED8  C012  F020         	movff	?___wmul+1,?_get_RPM+1
  3521  001EDC  D000               	goto	l41
  3522  001EDE                     l41:
  3523  001EDE  0012               	return		;funcret
  3524  001EE0                     __end_of_get_RPM:
  3525                           	opt stack 0
  3526                           tblptru	equ	0xFF8
  3527                           tblptrh	equ	0xFF7
  3528                           tblptrl	equ	0xFF6
  3529                           tablat	equ	0xFF5
  3530                           prodh	equ	0xFF4
  3531                           prodl	equ	0xFF3
  3532                           intcon	equ	0xFF2
  3533                           intcon2	equ	0xFF1
  3534                           postinc0	equ	0xFEE
  3535                           wreg	equ	0xFE8
  3536                           postdec1	equ	0xFE5
  3537                           fsr1l	equ	0xFE1
  3538                           postinc2	equ	0xFDE
  3539                           postdec2	equ	0xFDD
  3540                           fsr2h	equ	0xFDA
  3541                           fsr2l	equ	0xFD9
  3542                           status	equ	0xFD8
  3543                           
  3544 ;; *************** function _Update_Screen *****************
  3545 ;; Defined at:
  3546 ;;		line 69 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/Main_Screen.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;		None
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;  neg_tempF       2   11[BANK0 ] int 
  3551 ;; Return value:  Size  Location     Type
  3552 ;;		None               void
  3553 ;; Registers used:
  3554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3561 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3562 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3563 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;Total ram usage:        4 bytes
  3565 ;; Hardware stack levels used:    1
  3566 ;; Hardware stack levels required when called:   10
  3567 ;; This function calls:
  3568 ;;		___awdiv
  3569 ;;		___awmod
  3570 ;;		_drawtext
  3571 ;;		_strcpy
  3572 ;; This function is called by:
  3573 ;;		_main
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text7
  3578  00001C                     __ptext7:
  3579                           	opt stack 0
  3580  00001C                     _Update_Screen:
  3581                           	opt stack 20
  3582                           
  3583                           ;Main_Screen.c: 71: if ((DS1621_tempC & 0x80) == 0x80)
  3584                           
  3585                           ;incstack = 0
  3586  00001C  AE46               	btfss	_DS1621_tempC,7,c
  3587  00001E  D01C               	goto	l6353
  3588                           
  3589                           ;Main_Screen.c: 72: {
  3590                           ;Main_Screen.c: 73: tempC[0] = '-';
  3591  000020  0E2D               	movlw	45
  3592  000022  0100               	movlb	0	; () banked
  3593  000024  6FE3               	movwf	_tempC& (0+255),b
  3594                           
  3595                           ; BSR set to: 0
  3596                           ;Main_Screen.c: 74: tempC[1] = (DS1621_tempC & 0x7f)/10 + '0';
  3597  000026  0E7F               	movlw	127
  3598  000028  1446               	andwf	_DS1621_tempC,w,c
  3599  00002A  6E17               	movwf	___awdiv@dividend,c
  3600  00002C  6A18               	clrf	___awdiv@dividend+1,c
  3601  00002E  0E00               	movlw	0
  3602  000030  6E1A               	movwf	___awdiv@divisor+1,c
  3603  000032  0E0A               	movlw	10
  3604  000034  6E19               	movwf	___awdiv@divisor,c
  3605  000036  EC1C  F00C         	call	___awdiv	;wreg free
  3606  00003A  5017               	movf	?___awdiv,w,c
  3607  00003C  0F30               	addlw	48
  3608  00003E  0100               	movlb	0	; () banked
  3609  000040  6FE4               	movwf	(_tempC+1)& (0+255),b
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;Main_Screen.c: 75: tempC[2] = (DS1621_tempC & 0x7f)%10 + '0';
  3613  000042  0E7F               	movlw	127
  3614  000044  1446               	andwf	_DS1621_tempC,w,c
  3615  000046  6E1F               	movwf	___awmod@dividend,c
  3616  000048  6A20               	clrf	___awmod@dividend+1,c
  3617  00004A  0E00               	movlw	0
  3618  00004C  6E22               	movwf	___awmod@divisor+1,c
  3619  00004E  0E0A               	movlw	10
  3620  000050  6E21               	movwf	___awmod@divisor,c
  3621  000052  ECAB  F00C         	call	___awmod	;wreg free
  3622  000056  D01B               	goto	L1
  3623  000058                     l6353:
  3624                           
  3625                           ;Main_Screen.c: 77: else
  3626                           ;Main_Screen.c: 78: {
  3627                           ;Main_Screen.c: 79: tempC[0] = '+';
  3628  000058  0E2B               	movlw	43
  3629  00005A  0100               	movlb	0	; () banked
  3630  00005C  6FE3               	movwf	_tempC& (0+255),b
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;Main_Screen.c: 80: tempC[1] = DS1621_tempC/10 + '0';
  3634  00005E  C046  F017         	movff	_DS1621_tempC,___awdiv@dividend
  3635  000062  C047  F018         	movff	_DS1621_tempC+1,___awdiv@dividend+1
  3636  000066  0E00               	movlw	0
  3637  000068  6E1A               	movwf	___awdiv@divisor+1,c
  3638  00006A  0E0A               	movlw	10
  3639  00006C  6E19               	movwf	___awdiv@divisor,c
  3640  00006E  EC1C  F00C         	call	___awdiv	;wreg free
  3641  000072  5017               	movf	?___awdiv,w,c
  3642  000074  0F30               	addlw	48
  3643  000076  0100               	movlb	0	; () banked
  3644  000078  6FE4               	movwf	(_tempC+1)& (0+255),b
  3645                           
  3646                           ; BSR set to: 0
  3647                           ;Main_Screen.c: 81: tempC[2] = DS1621_tempC%10 + '0';
  3648  00007A  C046  F01F         	movff	_DS1621_tempC,___awmod@dividend
  3649  00007E  C047  F020         	movff	_DS1621_tempC+1,___awmod@dividend+1
  3650  000082  0E00               	movlw	0
  3651  000084  6E22               	movwf	___awmod@divisor+1,c
  3652  000086  0E0A               	movlw	10
  3653  000088  6E21               	movwf	___awmod@divisor,c
  3654  00008A  ECAB  F00C         	call	___awmod	;wreg free
  3655  00008E                     L1:
  3656  00008E  501F               	movf	?___awmod,w,c
  3657  000090  0F30               	addlw	48
  3658  000092  0100               	movlb	0	; () banked
  3659  000094  6FE5               	movwf	(_tempC+2)& (0+255),b
  3660  000096  D000               	goto	l6359
  3661  000098                     l6359:
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;Main_Screen.c: 82: }
  3665                           ;Main_Screen.c: 84: if (DS1621_tempF < 0)
  3666  000098  AE49               	btfss	_DS1621_tempF+1,7,c
  3667  00009A  D029               	goto	l6369
  3668                           
  3669                           ; BSR set to: 0
  3670                           ;Main_Screen.c: 85: {
  3671                           ;Main_Screen.c: 86: tempF[0] = '-';
  3672  00009C  0E2D               	movlw	45
  3673  00009E  0100               	movlb	0	; () banked
  3674  0000A0  6FE7               	movwf	_tempF& (0+255),b
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;Main_Screen.c: 87: int neg_tempF = -DS1621_tempF;
  3678  0000A2  C048  F0F4         	movff	_DS1621_tempF,??_Update_Screen
  3679  0000A6  C049  F0F5         	movff	_DS1621_tempF+1,??_Update_Screen+1
  3680  0000AA  0100               	movlb	0	; () banked
  3681  0000AC  1FF4               	comf	??_Update_Screen& (0+255),f,b
  3682  0000AE  1FF5               	comf	(??_Update_Screen+1)& (0+255),f,b
  3683  0000B0  4BF4               	infsnz	??_Update_Screen& (0+255),f,b
  3684  0000B2  2BF5               	incf	(??_Update_Screen+1)& (0+255),f,b
  3685  0000B4  C0F4  F0F6         	movff	??_Update_Screen,Update_Screen@neg_tempF
  3686  0000B8  C0F5  F0F7         	movff	??_Update_Screen+1,Update_Screen@neg_tempF+1
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;Main_Screen.c: 88: tempF[1] = neg_tempF/10 + '0';
  3690  0000BC  C0F6  F017         	movff	Update_Screen@neg_tempF,___awdiv@dividend
  3691  0000C0  C0F7  F018         	movff	Update_Screen@neg_tempF+1,___awdiv@dividend+1
  3692  0000C4  0E00               	movlw	0
  3693  0000C6  6E1A               	movwf	___awdiv@divisor+1,c
  3694  0000C8  0E0A               	movlw	10
  3695  0000CA  6E19               	movwf	___awdiv@divisor,c
  3696  0000CC  EC1C  F00C         	call	___awdiv	;wreg free
  3697  0000D0  5017               	movf	?___awdiv,w,c
  3698  0000D2  0F30               	addlw	48
  3699  0000D4  0100               	movlb	0	; () banked
  3700  0000D6  6FE8               	movwf	(_tempF+1)& (0+255),b
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;Main_Screen.c: 89: tempF[2] = neg_tempF%10 + '0';
  3704  0000D8  C0F6  F01F         	movff	Update_Screen@neg_tempF,___awmod@dividend
  3705  0000DC  C0F7  F020         	movff	Update_Screen@neg_tempF+1,___awmod@dividend+1
  3706  0000E0  0E00               	movlw	0
  3707  0000E2  6E22               	movwf	___awmod@divisor+1,c
  3708  0000E4  0E0A               	movlw	10
  3709  0000E6  6E21               	movwf	___awmod@divisor,c
  3710  0000E8  ECAB  F00C         	call	___awmod	;wreg free
  3711  0000EC  D01B               	goto	L2
  3712  0000EE                     l6369:
  3713                           
  3714                           ; BSR set to: 0
  3715                           ;Main_Screen.c: 91: else
  3716                           ;Main_Screen.c: 92: {
  3717                           ;Main_Screen.c: 93: tempF[0] = '+';
  3718  0000EE  0E2B               	movlw	43
  3719  0000F0  0100               	movlb	0	; () banked
  3720  0000F2  6FE7               	movwf	_tempF& (0+255),b
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;Main_Screen.c: 94: tempF[1] = DS1621_tempF/10 + '0';
  3724  0000F4  C048  F017         	movff	_DS1621_tempF,___awdiv@dividend
  3725  0000F8  C049  F018         	movff	_DS1621_tempF+1,___awdiv@dividend+1
  3726  0000FC  0E00               	movlw	0
  3727  0000FE  6E1A               	movwf	___awdiv@divisor+1,c
  3728  000100  0E0A               	movlw	10
  3729  000102  6E19               	movwf	___awdiv@divisor,c
  3730  000104  EC1C  F00C         	call	___awdiv	;wreg free
  3731  000108  5017               	movf	?___awdiv,w,c
  3732  00010A  0F30               	addlw	48
  3733  00010C  0100               	movlb	0	; () banked
  3734  00010E  6FE8               	movwf	(_tempF+1)& (0+255),b
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;Main_Screen.c: 95: tempF[2] = DS1621_tempF%10 + '0';
  3738  000110  C048  F01F         	movff	_DS1621_tempF,___awmod@dividend
  3739  000114  C049  F020         	movff	_DS1621_tempF+1,___awmod@dividend+1
  3740  000118  0E00               	movlw	0
  3741  00011A  6E22               	movwf	___awmod@divisor+1,c
  3742  00011C  0E0A               	movlw	10
  3743  00011E  6E21               	movwf	___awmod@divisor,c
  3744  000120  ECAB  F00C         	call	___awmod	;wreg free
  3745  000124                     L2:
  3746  000124  501F               	movf	?___awmod,w,c
  3747  000126  0F30               	addlw	48
  3748  000128  0100               	movlb	0	; () banked
  3749  00012A  6FE9               	movwf	(_tempF+2)& (0+255),b
  3750  00012C  D000               	goto	l6375
  3751  00012E                     l6375:
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;Main_Screen.c: 96: }
  3755                           ;Main_Screen.c: 97: time[0] = (hour>>4) + '0';
  3756  00012E  385E               	swapf	_hour,w,c
  3757  000130  0B0F               	andlw	15
  3758  000132  0F30               	addlw	48
  3759  000134  0100               	movlb	0	; () banked
  3760  000136  6FCD               	movwf	_time& (0+255),b
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;Main_Screen.c: 98: time[1] = (hour & 0x0f)+ '0';
  3764  000138  505E               	movf	_hour,w,c
  3765  00013A  0B0F               	andlw	15
  3766  00013C  0F30               	addlw	48
  3767  00013E  0100               	movlb	0	; () banked
  3768  000140  6FCE               	movwf	(_time+1)& (0+255),b
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;Main_Screen.c: 100: time[3] = (minute>>4) + '0';
  3772  000142  385F               	swapf	_minute,w,c
  3773  000144  0B0F               	andlw	15
  3774  000146  0F30               	addlw	48
  3775  000148  0100               	movlb	0	; () banked
  3776  00014A  6FD0               	movwf	(_time+3)& (0+255),b
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;Main_Screen.c: 101: time[4] = (minute & 0x0f)+'0';
  3780  00014C  505F               	movf	_minute,w,c
  3781  00014E  0B0F               	andlw	15
  3782  000150  0F30               	addlw	48
  3783  000152  0100               	movlb	0	; () banked
  3784  000154  6FD1               	movwf	(_time+4)& (0+255),b
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;Main_Screen.c: 103: time[6] = (second>>4) +'0';
  3788  000156  3862               	swapf	_second,w,c
  3789  000158  0B0F               	andlw	15
  3790  00015A  0F30               	addlw	48
  3791  00015C  0100               	movlb	0	; () banked
  3792  00015E  6FD3               	movwf	(_time+6)& (0+255),b
  3793                           
  3794                           ; BSR set to: 0
  3795                           ;Main_Screen.c: 104: time[7] = (second & 0x0f)+'0';
  3796  000160  5062               	movf	_second,w,c
  3797  000162  0B0F               	andlw	15
  3798  000164  0F30               	addlw	48
  3799  000166  0100               	movlb	0	; () banked
  3800  000168  6FD4               	movwf	(_time+7)& (0+255),b
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;Main_Screen.c: 106: date[0] = (month>>4) +'0';
  3804  00016A  3860               	swapf	_month,w,c
  3805  00016C  0B0F               	andlw	15
  3806  00016E  0F30               	addlw	48
  3807  000170  0100               	movlb	0	; () banked
  3808  000172  6FC4               	movwf	_date& (0+255),b
  3809                           
  3810                           ; BSR set to: 0
  3811                           ;Main_Screen.c: 107: date[1] = (month & 0x0f)+'0';
  3812  000174  5060               	movf	_month,w,c
  3813  000176  0B0F               	andlw	15
  3814  000178  0F30               	addlw	48
  3815  00017A  0100               	movlb	0	; () banked
  3816  00017C  6FC5               	movwf	(_date+1)& (0+255),b
  3817                           
  3818                           ; BSR set to: 0
  3819                           ;Main_Screen.c: 108: date[3] = (day>>4) +'0';
  3820  00017E  385A               	swapf	_day,w,c
  3821  000180  0B0F               	andlw	15
  3822  000182  0F30               	addlw	48
  3823  000184  0100               	movlb	0	; () banked
  3824  000186  6FC7               	movwf	(_date+3)& (0+255),b
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;Main_Screen.c: 109: date[4] = (day & 0x0f)+'0';
  3828  000188  505A               	movf	_day,w,c
  3829  00018A  0B0F               	andlw	15
  3830  00018C  0F30               	addlw	48
  3831  00018E  0100               	movlb	0	; () banked
  3832  000190  6FC8               	movwf	(_date+4)& (0+255),b
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;Main_Screen.c: 110: date[6] = (year>>4) +'0';
  3836  000192  386C               	swapf	_year,w,c
  3837  000194  0B0F               	andlw	15
  3838  000196  0F30               	addlw	48
  3839  000198  0100               	movlb	0	; () banked
  3840  00019A  6FCA               	movwf	(_date+6)& (0+255),b
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;Main_Screen.c: 111: date[7] = (year & 0x0f)+'0';
  3844  00019C  506C               	movf	_year,w,c
  3845  00019E  0B0F               	andlw	15
  3846  0001A0  0F30               	addlw	48
  3847  0001A2  0100               	movlb	0	; () banked
  3848  0001A4  6FCB               	movwf	(_date+7)& (0+255),b
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;Main_Screen.c: 114: if (FAN == 1) strcpy(Fan_SW_Txt, "ON ");
  3852  0001A6  0450               	decf	_FAN,w,c
  3853  0001A8  A4D8               	btfss	status,2,c
  3854  0001AA  D00B               	goto	l6403
  3855                           
  3856                           ; BSR set to: 0
  3857  0001AC  0EDF               	movlw	low _Fan_SW_Txt
  3858  0001AE  6E11               	movwf	strcpy@to,c
  3859  0001B0  0E00               	movlw	high _Fan_SW_Txt
  3860  0001B2  6E12               	movwf	strcpy@to+1,c
  3861  0001B4  0EED               	movlw	low STR_10
  3862  0001B6  6E13               	movwf	strcpy@from,c
  3863  0001B8  0EFF               	movlw	high STR_10
  3864  0001BA  6E14               	movwf	strcpy@from+1,c
  3865  0001BC  ECEB  F00F         	call	_strcpy	;wreg free
  3866  0001C0  D00B               	goto	l6405
  3867  0001C2                     l6403:
  3868                           
  3869                           ;Main_Screen.c: 115: else strcpy(Fan_SW_Txt, "OFF");
  3870  0001C2  0EDF               	movlw	low _Fan_SW_Txt
  3871  0001C4  6E11               	movwf	strcpy@to,c
  3872  0001C6  0E00               	movlw	high _Fan_SW_Txt
  3873  0001C8  6E12               	movwf	strcpy@to+1,c
  3874  0001CA  0EF1               	movlw	low STR_11
  3875  0001CC  6E13               	movwf	strcpy@from,c
  3876  0001CE  0EFF               	movlw	high STR_11
  3877  0001D0  6E14               	movwf	strcpy@from+1,c
  3878  0001D2  ECEB  F00F         	call	_strcpy	;wreg free
  3879  0001D6  D000               	goto	l6405
  3880  0001D8                     l6405:
  3881                           
  3882                           ;Main_Screen.c: 118: DC_Txt[0] = duty_cycle/100 + '0';
  3883  0001D8  C05C  F017         	movff	_duty_cycle,___awdiv@dividend
  3884  0001DC  6A18               	clrf	___awdiv@dividend+1,c
  3885  0001DE  0E00               	movlw	0
  3886  0001E0  6E1A               	movwf	___awdiv@divisor+1,c
  3887  0001E2  0E64               	movlw	100
  3888  0001E4  6E19               	movwf	___awdiv@divisor,c
  3889  0001E6  EC1C  F00C         	call	___awdiv	;wreg free
  3890  0001EA  5017               	movf	?___awdiv,w,c
  3891  0001EC  0F30               	addlw	48
  3892  0001EE  0100               	movlb	0	; () banked
  3893  0001F0  6FDB               	movwf	_DC_Txt& (0+255),b
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;Main_Screen.c: 119: DC_Txt[1] = (duty_cycle/10)%10 + '0';
  3897  0001F2  0E00               	movlw	0
  3898  0001F4  6E1A               	movwf	___awdiv@divisor+1,c
  3899  0001F6  0E0A               	movlw	10
  3900  0001F8  6E19               	movwf	___awdiv@divisor,c
  3901  0001FA  C05C  F017         	movff	_duty_cycle,___awdiv@dividend
  3902  0001FE  6A18               	clrf	___awdiv@dividend+1,c
  3903  000200  EC1C  F00C         	call	___awdiv	;wreg free
  3904  000204  C017  F01F         	movff	?___awdiv,___awmod@dividend
  3905  000208  C018  F020         	movff	?___awdiv+1,___awmod@dividend+1
  3906  00020C  0E00               	movlw	0
  3907  00020E  6E22               	movwf	___awmod@divisor+1,c
  3908  000210  0E0A               	movlw	10
  3909  000212  6E21               	movwf	___awmod@divisor,c
  3910  000214  ECAB  F00C         	call	___awmod	;wreg free
  3911  000218  501F               	movf	?___awmod,w,c
  3912  00021A  0F30               	addlw	48
  3913  00021C  0100               	movlb	0	; () banked
  3914  00021E  6FDC               	movwf	(_DC_Txt+1)& (0+255),b
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;Main_Screen.c: 120: DC_Txt[2] = duty_cycle%10 +'0';
  3918  000220  C05C  F01F         	movff	_duty_cycle,___awmod@dividend
  3919  000224  6A20               	clrf	___awmod@dividend+1,c
  3920  000226  0E00               	movlw	0
  3921  000228  6E22               	movwf	___awmod@divisor+1,c
  3922  00022A  0E0A               	movlw	10
  3923  00022C  6E21               	movwf	___awmod@divisor,c
  3924  00022E  ECAB  F00C         	call	___awmod	;wreg free
  3925  000232  501F               	movf	?___awmod,w,c
  3926  000234  0F30               	addlw	48
  3927  000236  0100               	movlb	0	; () banked
  3928  000238  6FDD               	movwf	(_DC_Txt+2)& (0+255),b
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;Main_Screen.c: 123: RPM_Txt[0] = rpm/1000 + '0';
  3932  00023A  C04C  F017         	movff	_rpm,___awdiv@dividend
  3933  00023E  C04D  F018         	movff	_rpm+1,___awdiv@dividend+1
  3934  000242  0E03               	movlw	3
  3935  000244  6E1A               	movwf	___awdiv@divisor+1,c
  3936  000246  0EE8               	movlw	232
  3937  000248  6E19               	movwf	___awdiv@divisor,c
  3938  00024A  EC1C  F00C         	call	___awdiv	;wreg free
  3939  00024E  5017               	movf	?___awdiv,w,c
  3940  000250  0F30               	addlw	48
  3941  000252  0100               	movlb	0	; () banked
  3942  000254  6FD6               	movwf	_RPM_Txt& (0+255),b
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;Main_Screen.c: 124: RPM_Txt[1] = (rpm/100) %10 + '0';
  3946  000256  0E00               	movlw	0
  3947  000258  6E1A               	movwf	___awdiv@divisor+1,c
  3948  00025A  0E64               	movlw	100
  3949  00025C  6E19               	movwf	___awdiv@divisor,c
  3950  00025E  C04C  F017         	movff	_rpm,___awdiv@dividend
  3951  000262  C04D  F018         	movff	_rpm+1,___awdiv@dividend+1
  3952  000266  EC1C  F00C         	call	___awdiv	;wreg free
  3953  00026A  C017  F01F         	movff	?___awdiv,___awmod@dividend
  3954  00026E  C018  F020         	movff	?___awdiv+1,___awmod@dividend+1
  3955  000272  0E00               	movlw	0
  3956  000274  6E22               	movwf	___awmod@divisor+1,c
  3957  000276  0E0A               	movlw	10
  3958  000278  6E21               	movwf	___awmod@divisor,c
  3959  00027A  ECAB  F00C         	call	___awmod	;wreg free
  3960  00027E  501F               	movf	?___awmod,w,c
  3961  000280  0F30               	addlw	48
  3962  000282  0100               	movlb	0	; () banked
  3963  000284  6FD7               	movwf	(_RPM_Txt+1)& (0+255),b
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;Main_Screen.c: 125: RPM_Txt[2] = (rpm/10) %10 + '0';
  3967  000286  0E00               	movlw	0
  3968  000288  6E1A               	movwf	___awdiv@divisor+1,c
  3969  00028A  0E0A               	movlw	10
  3970  00028C  6E19               	movwf	___awdiv@divisor,c
  3971  00028E  C04C  F017         	movff	_rpm,___awdiv@dividend
  3972  000292  C04D  F018         	movff	_rpm+1,___awdiv@dividend+1
  3973  000296  EC1C  F00C         	call	___awdiv	;wreg free
  3974  00029A  C017  F01F         	movff	?___awdiv,___awmod@dividend
  3975  00029E  C018  F020         	movff	?___awdiv+1,___awmod@dividend+1
  3976  0002A2  0E00               	movlw	0
  3977  0002A4  6E22               	movwf	___awmod@divisor+1,c
  3978  0002A6  0E0A               	movlw	10
  3979  0002A8  6E21               	movwf	___awmod@divisor,c
  3980  0002AA  ECAB  F00C         	call	___awmod	;wreg free
  3981  0002AE  501F               	movf	?___awmod,w,c
  3982  0002B0  0F30               	addlw	48
  3983  0002B2  0100               	movlb	0	; () banked
  3984  0002B4  6FD8               	movwf	(_RPM_Txt+2)& (0+255),b
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;Main_Screen.c: 126: RPM_Txt[3] = rpm %10 + '0';
  3988  0002B6  C04C  F01F         	movff	_rpm,___awmod@dividend
  3989  0002BA  C04D  F020         	movff	_rpm+1,___awmod@dividend+1
  3990  0002BE  0E00               	movlw	0
  3991  0002C0  6E22               	movwf	___awmod@divisor+1,c
  3992  0002C2  0E0A               	movlw	10
  3993  0002C4  6E21               	movwf	___awmod@divisor,c
  3994  0002C6  ECAB  F00C         	call	___awmod	;wreg free
  3995  0002CA  501F               	movf	?___awmod,w,c
  3996  0002CC  0F30               	addlw	48
  3997  0002CE  0100               	movlb	0	; () banked
  3998  0002D0  6FD9               	movwf	(_RPM_Txt+3)& (0+255),b
  3999                           
  4000                           ; BSR set to: 0
  4001                           ;Main_Screen.c: 128: drawtext(1, 23, tempC , 0xFFE0 , 0x0000 , 2);
  4002  0002D2  0E17               	movlw	23
  4003  0002D4  6E39               	movwf	drawtext@y,c
  4004  0002D6  0EE3               	movlw	low _tempC
  4005  0002D8  6E3A               	movwf	drawtext@_text,c
  4006  0002DA  0E00               	movlw	high _tempC
  4007  0002DC  6E3B               	movwf	drawtext@_text+1,c
  4008  0002DE  0EFF               	movlw	255
  4009  0002E0  6E3D               	movwf	drawtext@color+1,c
  4010  0002E2  0EE0               	movlw	224
  4011  0002E4  6E3C               	movwf	drawtext@color,c
  4012  0002E6  0E00               	movlw	0
  4013  0002E8  6E3F               	movwf	drawtext@bg+1,c
  4014  0002EA  0E00               	movlw	0
  4015  0002EC  6E3E               	movwf	drawtext@bg,c
  4016  0002EE  0E02               	movlw	2
  4017  0002F0  6E40               	movwf	drawtext@size,c
  4018  0002F2  0E01               	movlw	1
  4019  0002F4  ECFE  F007         	call	_drawtext
  4020                           
  4021                           ;Main_Screen.c: 129: drawtext(70, 23, tempF , 0xFFE0 , 0x0000 , 2);
  4022  0002F8  0E17               	movlw	23
  4023  0002FA  6E39               	movwf	drawtext@y,c
  4024  0002FC  0EE7               	movlw	low _tempF
  4025  0002FE  6E3A               	movwf	drawtext@_text,c
  4026  000300  0E00               	movlw	high _tempF
  4027  000302  6E3B               	movwf	drawtext@_text+1,c
  4028  000304  0EFF               	movlw	255
  4029  000306  6E3D               	movwf	drawtext@color+1,c
  4030  000308  0EE0               	movlw	224
  4031  00030A  6E3C               	movwf	drawtext@color,c
  4032  00030C  0E00               	movlw	0
  4033  00030E  6E3F               	movwf	drawtext@bg+1,c
  4034  000310  0E00               	movlw	0
  4035  000312  6E3E               	movwf	drawtext@bg,c
  4036  000314  0E02               	movlw	2
  4037  000316  6E40               	movwf	drawtext@size,c
  4038  000318  0E46               	movlw	70
  4039  00031A  ECFE  F007         	call	_drawtext
  4040                           
  4041                           ;Main_Screen.c: 130: drawtext(15 , 52 , time , 0x07FF , 0x0000 , 2);
  4042  00031E  0E34               	movlw	52
  4043  000320  6E39               	movwf	drawtext@y,c
  4044  000322  0ECD               	movlw	low _time
  4045  000324  6E3A               	movwf	drawtext@_text,c
  4046  000326  0E00               	movlw	high _time
  4047  000328  6E3B               	movwf	drawtext@_text+1,c
  4048  00032A  0E07               	movlw	7
  4049  00032C  6E3D               	movwf	drawtext@color+1,c
  4050  00032E  683C               	setf	drawtext@color,c
  4051  000330  0E00               	movlw	0
  4052  000332  6E3F               	movwf	drawtext@bg+1,c
  4053  000334  0E00               	movlw	0
  4054  000336  6E3E               	movwf	drawtext@bg,c
  4055  000338  0E02               	movlw	2
  4056  00033A  6E40               	movwf	drawtext@size,c
  4057  00033C  0E0F               	movlw	15
  4058  00033E  ECFE  F007         	call	_drawtext
  4059                           
  4060                           ;Main_Screen.c: 131: drawtext(15 , 82 , date , 0x07E0 , 0x0000 , 2);
  4061  000342  0E52               	movlw	82
  4062  000344  6E39               	movwf	drawtext@y,c
  4063  000346  0EC4               	movlw	low _date
  4064  000348  6E3A               	movwf	drawtext@_text,c
  4065  00034A  0E00               	movlw	high _date
  4066  00034C  6E3B               	movwf	drawtext@_text+1,c
  4067  00034E  0E07               	movlw	7
  4068  000350  6E3D               	movwf	drawtext@color+1,c
  4069  000352  0EE0               	movlw	224
  4070  000354  6E3C               	movwf	drawtext@color,c
  4071  000356  0E00               	movlw	0
  4072  000358  6E3F               	movwf	drawtext@bg+1,c
  4073  00035A  0E00               	movlw	0
  4074  00035C  6E3E               	movwf	drawtext@bg,c
  4075  00035E  0E02               	movlw	2
  4076  000360  6E40               	movwf	drawtext@size,c
  4077  000362  0E0F               	movlw	15
  4078  000364  ECFE  F007         	call	_drawtext
  4079                           
  4080                           ;Main_Screen.c: 133: drawtext(95, 130, Fan_SW_Txt, 0xF800 , 0x0000 , 1);
  4081  000368  0E82               	movlw	130
  4082  00036A  6E39               	movwf	drawtext@y,c
  4083  00036C  0EDF               	movlw	low _Fan_SW_Txt
  4084  00036E  6E3A               	movwf	drawtext@_text,c
  4085  000370  0E00               	movlw	high _Fan_SW_Txt
  4086  000372  6E3B               	movwf	drawtext@_text+1,c
  4087  000374  0EF8               	movlw	248
  4088  000376  6E3D               	movwf	drawtext@color+1,c
  4089  000378  0E00               	movlw	0
  4090  00037A  6E3C               	movwf	drawtext@color,c
  4091  00037C  0E00               	movlw	0
  4092  00037E  6E3F               	movwf	drawtext@bg+1,c
  4093  000380  0E00               	movlw	0
  4094  000382  6E3E               	movwf	drawtext@bg,c
  4095  000384  0E01               	movlw	1
  4096  000386  6E40               	movwf	drawtext@size,c
  4097  000388  0E5F               	movlw	95
  4098  00038A  ECFE  F007         	call	_drawtext
  4099                           
  4100                           ;Main_Screen.c: 134: drawtext(10, 150, DC_Txt, 0x07E0, 0x0000, 1);
  4101  00038E  0E96               	movlw	150
  4102  000390  6E39               	movwf	drawtext@y,c
  4103  000392  0EDB               	movlw	low _DC_Txt
  4104  000394  6E3A               	movwf	drawtext@_text,c
  4105  000396  0E00               	movlw	high _DC_Txt
  4106  000398  6E3B               	movwf	drawtext@_text+1,c
  4107  00039A  0E07               	movlw	7
  4108  00039C  6E3D               	movwf	drawtext@color+1,c
  4109  00039E  0EE0               	movlw	224
  4110  0003A0  6E3C               	movwf	drawtext@color,c
  4111  0003A2  0E00               	movlw	0
  4112  0003A4  6E3F               	movwf	drawtext@bg+1,c
  4113  0003A6  0E00               	movlw	0
  4114  0003A8  6E3E               	movwf	drawtext@bg,c
  4115  0003AA  0E01               	movlw	1
  4116  0003AC  6E40               	movwf	drawtext@size,c
  4117  0003AE  0E0A               	movlw	10
  4118  0003B0  ECFE  F007         	call	_drawtext
  4119                           
  4120                           ;Main_Screen.c: 135: drawtext(93, 150, RPM_Txt, 0x07E0, 0x0000, 1);
  4121  0003B4  0E96               	movlw	150
  4122  0003B6  6E39               	movwf	drawtext@y,c
  4123  0003B8  0ED6               	movlw	low _RPM_Txt
  4124  0003BA  6E3A               	movwf	drawtext@_text,c
  4125  0003BC  0E00               	movlw	high _RPM_Txt
  4126  0003BE  6E3B               	movwf	drawtext@_text+1,c
  4127  0003C0  0E07               	movlw	7
  4128  0003C2  6E3D               	movwf	drawtext@color+1,c
  4129  0003C4  0EE0               	movlw	224
  4130  0003C6  6E3C               	movwf	drawtext@color,c
  4131  0003C8  0E00               	movlw	0
  4132  0003CA  6E3F               	movwf	drawtext@bg+1,c
  4133  0003CC  0E00               	movlw	0
  4134  0003CE  6E3E               	movwf	drawtext@bg,c
  4135  0003D0  0E01               	movlw	1
  4136  0003D2  6E40               	movwf	drawtext@size,c
  4137  0003D4  0E5D               	movlw	93
  4138  0003D6  ECFE  F007         	call	_drawtext
  4139  0003DA  0012               	return		;funcret
  4140  0003DC                     __end_of_Update_Screen:
  4141                           	opt stack 0
  4142                           tblptru	equ	0xFF8
  4143                           tblptrh	equ	0xFF7
  4144                           tblptrl	equ	0xFF6
  4145                           tablat	equ	0xFF5
  4146                           prodh	equ	0xFF4
  4147                           prodl	equ	0xFF3
  4148                           intcon	equ	0xFF2
  4149                           intcon2	equ	0xFF1
  4150                           postinc0	equ	0xFEE
  4151                           wreg	equ	0xFE8
  4152                           postdec1	equ	0xFE5
  4153                           fsr1l	equ	0xFE1
  4154                           postinc2	equ	0xFDE
  4155                           postdec2	equ	0xFDD
  4156                           fsr2h	equ	0xFDA
  4157                           fsr2l	equ	0xFD9
  4158                           status	equ	0xFD8
  4159                           
  4160 ;; *************** function ___awmod *****************
  4161 ;; Defined at:
  4162 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;  dividend        2   30[COMRAM] int 
  4165 ;;  divisor         2   32[COMRAM] int 
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;  sign            1   35[COMRAM] unsigned char 
  4168 ;;  counter         1   34[COMRAM] unsigned char 
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  2   30[COMRAM] int 
  4171 ;; Registers used:
  4172 ;;		wreg, status,2, status,0
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4178 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4179 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4181 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4182 ;;Total ram usage:        6 bytes
  4183 ;; Hardware stack levels used:    1
  4184 ;; Hardware stack levels required when called:    3
  4185 ;; This function calls:
  4186 ;;		Nothing
  4187 ;; This function is called by:
  4188 ;;		_Update_Screen
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192                           	psect	text8
  4193  001956                     __ptext8:
  4194                           	opt stack 0
  4195  001956                     ___awmod:
  4196                           	opt stack 26
  4197                           
  4198                           ;incstack = 0
  4199  001956  0E00               	movlw	0
  4200  001958  6E24               	movwf	___awmod@sign,c
  4201  00195A  AE20               	btfss	___awmod@dividend+1,7,c
  4202  00195C  D007               	goto	l6131
  4203  00195E  6C1F               	negf	___awmod@dividend,c
  4204  001960  1E20               	comf	___awmod@dividend+1,f,c
  4205  001962  B0D8               	btfsc	status,0,c
  4206  001964  2A20               	incf	___awmod@dividend+1,f,c
  4207  001966  0E01               	movlw	1
  4208  001968  6E24               	movwf	___awmod@sign,c
  4209  00196A  D000               	goto	l6131
  4210  00196C                     l6131:
  4211  00196C  AE22               	btfss	___awmod@divisor+1,7,c
  4212  00196E  D005               	goto	l6135
  4213  001970  6C21               	negf	___awmod@divisor,c
  4214  001972  1E22               	comf	___awmod@divisor+1,f,c
  4215  001974  B0D8               	btfsc	status,0,c
  4216  001976  2A22               	incf	___awmod@divisor+1,f,c
  4217  001978  D000               	goto	l6135
  4218  00197A                     l6135:
  4219  00197A  5021               	movf	___awmod@divisor,w,c
  4220  00197C  1022               	iorwf	___awmod@divisor+1,w,c
  4221  00197E  B4D8               	btfsc	status,2,c
  4222  001980  D01D               	goto	l6151
  4223  001982  0E01               	movlw	1
  4224  001984  6E23               	movwf	___awmod@counter,c
  4225  001986  D005               	goto	l6141
  4226  001988                     l6139:
  4227  001988  90D8               	bcf	status,0,c
  4228  00198A  3621               	rlcf	___awmod@divisor,f,c
  4229  00198C  3622               	rlcf	___awmod@divisor+1,f,c
  4230  00198E  2A23               	incf	___awmod@counter,f,c
  4231  001990  D000               	goto	l6141
  4232  001992                     l6141:
  4233  001992  BE22               	btfsc	___awmod@divisor+1,7,c
  4234  001994  D002               	goto	l6143
  4235  001996  D7F8               	goto	l6139
  4236  001998  D000               	goto	l6143
  4237  00199A                     l6143:
  4238  00199A  5021               	movf	___awmod@divisor,w,c
  4239  00199C  5C1F               	subwf	___awmod@dividend,w,c
  4240  00199E  5022               	movf	___awmod@divisor+1,w,c
  4241  0019A0  5820               	subwfb	___awmod@dividend+1,w,c
  4242  0019A2  A0D8               	btfss	status,0,c
  4243  0019A4  D005               	goto	l6147
  4244  0019A6  5021               	movf	___awmod@divisor,w,c
  4245  0019A8  5E1F               	subwf	___awmod@dividend,f,c
  4246  0019AA  5022               	movf	___awmod@divisor+1,w,c
  4247  0019AC  5A20               	subwfb	___awmod@dividend+1,f,c
  4248  0019AE  D000               	goto	l6147
  4249  0019B0                     l6147:
  4250  0019B0  90D8               	bcf	status,0,c
  4251  0019B2  3222               	rrcf	___awmod@divisor+1,f,c
  4252  0019B4  3221               	rrcf	___awmod@divisor,f,c
  4253  0019B6  2E23               	decfsz	___awmod@counter,f,c
  4254  0019B8  D7F0               	goto	l6143
  4255  0019BA  D000               	goto	l6151
  4256  0019BC                     l6151:
  4257  0019BC  5024               	movf	___awmod@sign,w,c
  4258  0019BE  B4D8               	btfsc	status,2,c
  4259  0019C0  D005               	goto	l6155
  4260  0019C2  6C1F               	negf	___awmod@dividend,c
  4261  0019C4  1E20               	comf	___awmod@dividend+1,f,c
  4262  0019C6  B0D8               	btfsc	status,0,c
  4263  0019C8  2A20               	incf	___awmod@dividend+1,f,c
  4264  0019CA  D000               	goto	l6155
  4265  0019CC                     l6155:
  4266  0019CC  C01F  F01F         	movff	___awmod@dividend,?___awmod
  4267  0019D0  C020  F020         	movff	___awmod@dividend+1,?___awmod+1
  4268  0019D4  D000               	goto	l1069
  4269  0019D6                     l1069:
  4270  0019D6  0012               	return		;funcret
  4271  0019D8                     __end_of___awmod:
  4272                           	opt stack 0
  4273                           tblptru	equ	0xFF8
  4274                           tblptrh	equ	0xFF7
  4275                           tblptrl	equ	0xFF6
  4276                           tablat	equ	0xFF5
  4277                           prodh	equ	0xFF4
  4278                           prodl	equ	0xFF3
  4279                           intcon	equ	0xFF2
  4280                           intcon2	equ	0xFF1
  4281                           postinc0	equ	0xFEE
  4282                           wreg	equ	0xFE8
  4283                           postdec1	equ	0xFE5
  4284                           fsr1l	equ	0xFE1
  4285                           postinc2	equ	0xFDE
  4286                           postdec2	equ	0xFDD
  4287                           fsr2h	equ	0xFDA
  4288                           fsr2l	equ	0xFD9
  4289                           status	equ	0xFD8
  4290                           
  4291 ;; *************** function ___awdiv *****************
  4292 ;; Defined at:
  4293 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;  dividend        2   22[COMRAM] int 
  4296 ;;  divisor         2   24[COMRAM] int 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;  quotient        2   28[COMRAM] int 
  4299 ;;  sign            1   27[COMRAM] unsigned char 
  4300 ;;  counter         1   26[COMRAM] unsigned char 
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  2   22[COMRAM] int 
  4303 ;; Registers used:
  4304 ;;		wreg, status,2, status,0
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4310 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;Total ram usage:        8 bytes
  4315 ;; Hardware stack levels used:    1
  4316 ;; Hardware stack levels required when called:    3
  4317 ;; This function calls:
  4318 ;;		Nothing
  4319 ;; This function is called by:
  4320 ;;		_get_RPM
  4321 ;;		_Update_Screen
  4322 ;;		_main
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           	psect	text9
  4327  001838                     __ptext9:
  4328                           	opt stack 0
  4329  001838                     ___awdiv:
  4330                           	opt stack 26
  4331                           
  4332                           ;incstack = 0
  4333  001838  0E00               	movlw	0
  4334  00183A  6E1C               	movwf	___awdiv@sign,c
  4335  00183C  AE1A               	btfss	___awdiv@divisor+1,7,c
  4336  00183E  D007               	goto	l6087
  4337  001840  6C19               	negf	___awdiv@divisor,c
  4338  001842  1E1A               	comf	___awdiv@divisor+1,f,c
  4339  001844  B0D8               	btfsc	status,0,c
  4340  001846  2A1A               	incf	___awdiv@divisor+1,f,c
  4341  001848  0E01               	movlw	1
  4342  00184A  6E1C               	movwf	___awdiv@sign,c
  4343  00184C  D000               	goto	l6087
  4344  00184E                     l6087:
  4345  00184E  AE18               	btfss	___awdiv@dividend+1,7,c
  4346  001850  D007               	goto	l6093
  4347  001852  6C17               	negf	___awdiv@dividend,c
  4348  001854  1E18               	comf	___awdiv@dividend+1,f,c
  4349  001856  B0D8               	btfsc	status,0,c
  4350  001858  2A18               	incf	___awdiv@dividend+1,f,c
  4351  00185A  0E01               	movlw	1
  4352  00185C  1A1C               	xorwf	___awdiv@sign,f,c
  4353  00185E  D000               	goto	l6093
  4354  001860                     l6093:
  4355  001860  0E00               	movlw	0
  4356  001862  6E1E               	movwf	___awdiv@quotient+1,c
  4357  001864  0E00               	movlw	0
  4358  001866  6E1D               	movwf	___awdiv@quotient,c
  4359  001868  5019               	movf	___awdiv@divisor,w,c
  4360  00186A  101A               	iorwf	___awdiv@divisor+1,w,c
  4361  00186C  B4D8               	btfsc	status,2,c
  4362  00186E  D021               	goto	l6115
  4363  001870  0E01               	movlw	1
  4364  001872  6E1B               	movwf	___awdiv@counter,c
  4365  001874  D005               	goto	l6101
  4366  001876                     l6099:
  4367  001876  90D8               	bcf	status,0,c
  4368  001878  3619               	rlcf	___awdiv@divisor,f,c
  4369  00187A  361A               	rlcf	___awdiv@divisor+1,f,c
  4370  00187C  2A1B               	incf	___awdiv@counter,f,c
  4371  00187E  D000               	goto	l6101
  4372  001880                     l6101:
  4373  001880  BE1A               	btfsc	___awdiv@divisor+1,7,c
  4374  001882  D002               	goto	l6103
  4375  001884  D7F8               	goto	l6099
  4376  001886  D000               	goto	l6103
  4377  001888                     l6103:
  4378  001888  90D8               	bcf	status,0,c
  4379  00188A  361D               	rlcf	___awdiv@quotient,f,c
  4380  00188C  361E               	rlcf	___awdiv@quotient+1,f,c
  4381  00188E  5019               	movf	___awdiv@divisor,w,c
  4382  001890  5C17               	subwf	___awdiv@dividend,w,c
  4383  001892  501A               	movf	___awdiv@divisor+1,w,c
  4384  001894  5818               	subwfb	___awdiv@dividend+1,w,c
  4385  001896  A0D8               	btfss	status,0,c
  4386  001898  D006               	goto	l6111
  4387  00189A  5019               	movf	___awdiv@divisor,w,c
  4388  00189C  5E17               	subwf	___awdiv@dividend,f,c
  4389  00189E  501A               	movf	___awdiv@divisor+1,w,c
  4390  0018A0  5A18               	subwfb	___awdiv@dividend+1,f,c
  4391  0018A2  801D               	bsf	___awdiv@quotient,0,c
  4392  0018A4  D000               	goto	l6111
  4393  0018A6                     l6111:
  4394  0018A6  90D8               	bcf	status,0,c
  4395  0018A8  321A               	rrcf	___awdiv@divisor+1,f,c
  4396  0018AA  3219               	rrcf	___awdiv@divisor,f,c
  4397  0018AC  2E1B               	decfsz	___awdiv@counter,f,c
  4398  0018AE  D7EC               	goto	l6103
  4399  0018B0  D000               	goto	l6115
  4400  0018B2                     l6115:
  4401  0018B2  501C               	movf	___awdiv@sign,w,c
  4402  0018B4  B4D8               	btfsc	status,2,c
  4403  0018B6  D005               	goto	l6119
  4404  0018B8  6C1D               	negf	___awdiv@quotient,c
  4405  0018BA  1E1E               	comf	___awdiv@quotient+1,f,c
  4406  0018BC  B0D8               	btfsc	status,0,c
  4407  0018BE  2A1E               	incf	___awdiv@quotient+1,f,c
  4408  0018C0  D000               	goto	l6119
  4409  0018C2                     l6119:
  4410  0018C2  C01D  F017         	movff	___awdiv@quotient,?___awdiv
  4411  0018C6  C01E  F018         	movff	___awdiv@quotient+1,?___awdiv+1
  4412  0018CA  D000               	goto	l1056
  4413  0018CC                     l1056:
  4414  0018CC  0012               	return		;funcret
  4415  0018CE                     __end_of___awdiv:
  4416                           	opt stack 0
  4417                           tblptru	equ	0xFF8
  4418                           tblptrh	equ	0xFF7
  4419                           tblptrl	equ	0xFF6
  4420                           tablat	equ	0xFF5
  4421                           prodh	equ	0xFF4
  4422                           prodl	equ	0xFF3
  4423                           intcon	equ	0xFF2
  4424                           intcon2	equ	0xFF1
  4425                           postinc0	equ	0xFEE
  4426                           wreg	equ	0xFE8
  4427                           postdec1	equ	0xFE5
  4428                           fsr1l	equ	0xFE1
  4429                           postinc2	equ	0xFDE
  4430                           postdec2	equ	0xFDD
  4431                           fsr2h	equ	0xFDA
  4432                           fsr2l	equ	0xFD9
  4433                           status	equ	0xFD8
  4434                           
  4435 ;; *************** function _Toggle_Fan *****************
  4436 ;; Defined at:
  4437 ;;		line 17 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/Fan_Support.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;		None
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;		None
  4442 ;; Return value:  Size  Location     Type
  4443 ;;		None               void
  4444 ;; Registers used:
  4445 ;;		wreg, status,2, status,0, cstack
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4455 ;;Total ram usage:        0 bytes
  4456 ;; Hardware stack levels used:    1
  4457 ;; Hardware stack levels required when called:    7
  4458 ;; This function calls:
  4459 ;;		_Turn_Off_Fan
  4460 ;;		_Turn_On_Fan
  4461 ;; This function is called by:
  4462 ;;		_main
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           	psect	text10
  4467  0021F0                     __ptext10:
  4468                           	opt stack 0
  4469  0021F0                     _Toggle_Fan:
  4470                           	opt stack 23
  4471                           
  4472                           ;Fan_Support.c: 19: if (FAN = 0){
  4473                           
  4474                           ;incstack = 0
  4475  0021F0  0E00               	movlw	0
  4476  0021F2  6E50               	movwf	_FAN,c
  4477  0021F4  D003               	goto	l6209
  4478                           
  4479                           ;Fan_Support.c: 20: Turn_On_Fan();
  4480  0021F6  EC64  F011         	call	_Turn_On_Fan	;wreg free
  4481                           
  4482                           ;Fan_Support.c: 21: }
  4483  0021FA  D003               	goto	l46
  4484  0021FC                     l6209:
  4485                           
  4486                           ;Fan_Support.c: 22: else {
  4487                           ;Fan_Support.c: 23: Turn_Off_Fan();
  4488  0021FC  EC86  F011         	call	_Turn_Off_Fan	;wreg free
  4489  002200  D000               	goto	l46
  4490  002202                     l46:
  4491  002202  0012               	return		;funcret
  4492  002204                     __end_of_Toggle_Fan:
  4493                           	opt stack 0
  4494                           tblptru	equ	0xFF8
  4495                           tblptrh	equ	0xFF7
  4496                           tblptrl	equ	0xFF6
  4497                           tablat	equ	0xFF5
  4498                           prodh	equ	0xFF4
  4499                           prodl	equ	0xFF3
  4500                           intcon	equ	0xFF2
  4501                           intcon2	equ	0xFF1
  4502                           postinc0	equ	0xFEE
  4503                           wreg	equ	0xFE8
  4504                           postdec1	equ	0xFE5
  4505                           fsr1l	equ	0xFE1
  4506                           postinc2	equ	0xFDE
  4507                           postdec2	equ	0xFDD
  4508                           fsr2h	equ	0xFDA
  4509                           fsr2l	equ	0xFD9
  4510                           status	equ	0xFD8
  4511                           
  4512 ;; *************** function _Turn_On_Fan *****************
  4513 ;; Defined at:
  4514 ;;		line 34 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/Fan_Support.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;		None
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;		None
  4519 ;; Return value:  Size  Location     Type
  4520 ;;		None               void
  4521 ;; Registers used:
  4522 ;;		wreg, status,2, status,0, cstack
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4532 ;;Total ram usage:        0 bytes
  4533 ;; Hardware stack levels used:    1
  4534 ;; Hardware stack levels required when called:    6
  4535 ;; This function calls:
  4536 ;;		_do_update_pwm
  4537 ;; This function is called by:
  4538 ;;		_Toggle_Fan
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           
  4542                           	psect	text11
  4543  0022C8                     __ptext11:
  4544                           	opt stack 0
  4545  0022C8                     _Turn_On_Fan:
  4546                           	opt stack 23
  4547                           
  4548                           ;Fan_Support.c: 36: FAN = 1;
  4549                           
  4550                           ;incstack = 0
  4551  0022C8  0E01               	movlw	1
  4552  0022CA  6E50               	movwf	_FAN,c
  4553                           
  4554                           ;Fan_Support.c: 37: do_update_pwm(duty_cycle);
  4555  0022CC  505C               	movf	_duty_cycle,w,c
  4556  0022CE  ECBB  F00B         	call	_do_update_pwm
  4557                           
  4558                           ;Fan_Support.c: 38: PORTAbits.RA5 = 1;
  4559  0022D2  8A80               	bsf	3968,5,c	;volatile
  4560  0022D4  0012               	return		;funcret
  4561  0022D6                     __end_of_Turn_On_Fan:
  4562                           	opt stack 0
  4563                           tblptru	equ	0xFF8
  4564                           tblptrh	equ	0xFF7
  4565                           tblptrl	equ	0xFF6
  4566                           tablat	equ	0xFF5
  4567                           prodh	equ	0xFF4
  4568                           prodl	equ	0xFF3
  4569                           intcon	equ	0xFF2
  4570                           intcon2	equ	0xFF1
  4571                           postinc0	equ	0xFEE
  4572                           wreg	equ	0xFE8
  4573                           postdec1	equ	0xFE5
  4574                           fsr1l	equ	0xFE1
  4575                           postinc2	equ	0xFDE
  4576                           postdec2	equ	0xFDD
  4577                           fsr2h	equ	0xFDA
  4578                           fsr2l	equ	0xFD9
  4579                           status	equ	0xFD8
  4580                           
  4581 ;; *************** function _Turn_Off_Fan *****************
  4582 ;; Defined at:
  4583 ;;		line 27 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/Fan_Support.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;		None
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;		None
  4588 ;; Return value:  Size  Location     Type
  4589 ;;		None               void
  4590 ;; Registers used:
  4591 ;;		wreg, status,2
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4601 ;;Total ram usage:        0 bytes
  4602 ;; Hardware stack levels used:    1
  4603 ;; Hardware stack levels required when called:    3
  4604 ;; This function calls:
  4605 ;;		Nothing
  4606 ;; This function is called by:
  4607 ;;		_Toggle_Fan
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           	psect	text12
  4612  00230C                     __ptext12:
  4613                           	opt stack 0
  4614  00230C                     _Turn_Off_Fan:
  4615                           	opt stack 26
  4616                           
  4617                           ;Fan_Support.c: 29: FAN = 0;
  4618                           
  4619                           ;incstack = 0
  4620  00230C  0E00               	movlw	0
  4621  00230E  6E50               	movwf	_FAN,c
  4622                           
  4623                           ;Fan_Support.c: 30: PORTAbits.RA5 = 0;
  4624  002310  9A80               	bcf	3968,5,c	;volatile
  4625  002312  0012               	return		;funcret
  4626  002314                     __end_of_Turn_Off_Fan:
  4627                           	opt stack 0
  4628                           tblptru	equ	0xFF8
  4629                           tblptrh	equ	0xFF7
  4630                           tblptrl	equ	0xFF6
  4631                           tablat	equ	0xFF5
  4632                           prodh	equ	0xFF4
  4633                           prodl	equ	0xFF3
  4634                           intcon	equ	0xFF2
  4635                           intcon2	equ	0xFF1
  4636                           postinc0	equ	0xFEE
  4637                           wreg	equ	0xFE8
  4638                           postdec1	equ	0xFE5
  4639                           fsr1l	equ	0xFE1
  4640                           postinc2	equ	0xFDE
  4641                           postdec2	equ	0xFDD
  4642                           fsr2h	equ	0xFDA
  4643                           fsr2l	equ	0xFD9
  4644                           status	equ	0xFD8
  4645                           
  4646 ;; *************** function _Initialize_Screen *****************
  4647 ;; Defined at:
  4648 ;;		line 34 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/Main_Screen.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;		None
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;		None
  4653 ;; Return value:  Size  Location     Type
  4654 ;;		None               void
  4655 ;; Registers used:
  4656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4666 ;;Total ram usage:        0 bytes
  4667 ;; Hardware stack levels used:    1
  4668 ;; Hardware stack levels required when called:   10
  4669 ;; This function calls:
  4670 ;;		_LCD_Reset
  4671 ;;		_TFT_GreenTab_Initialize
  4672 ;;		_drawCircle
  4673 ;;		_drawtext
  4674 ;;		_fillScreen
  4675 ;;		_strcpy
  4676 ;; This function is called by:
  4677 ;;		_main
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681                           	psect	text13
  4682  000736                     __ptext13:
  4683                           	opt stack 0
  4684  000736                     _Initialize_Screen:
  4685                           	opt stack 20
  4686                           
  4687                           ;Main_Screen.c: 36: LCD_Reset();
  4688                           
  4689                           ;incstack = 0
  4690  000736  EC20  F011         	call	_LCD_Reset	;wreg free
  4691                           
  4692                           ;Main_Screen.c: 37: TFT_GreenTab_Initialize();
  4693  00073A  EC1C  F010         	call	_TFT_GreenTab_Initialize	;wreg free
  4694                           
  4695                           ;Main_Screen.c: 38: fillScreen(0x0000);
  4696  00073E  0E00               	movlw	0
  4697  000740  6E25               	movwf	fillScreen@color+1,c
  4698  000742  0E00               	movlw	0
  4699  000744  6E24               	movwf	fillScreen@color,c
  4700  000746  ECAB  F010         	call	_fillScreen	;wreg free
  4701                           
  4702                           ;Main_Screen.c: 39: txt = buffer;
  4703  00074A  0E00               	movlw	low _buffer
  4704  00074C  6E4E               	movwf	_txt,c
  4705  00074E  0E01               	movlw	high _buffer
  4706  000750  6E4F               	movwf	_txt+1,c
  4707                           
  4708                           ;Main_Screen.c: 40: strcpy(txt, "ECE3301L Spring 21-S3");
  4709  000752  C04E  F011         	movff	_txt,strcpy@to
  4710  000756  C04F  F012         	movff	_txt+1,strcpy@to+1
  4711  00075A  0E44               	movlw	low STR_1
  4712  00075C  6E13               	movwf	strcpy@from,c
  4713  00075E  0EFF               	movlw	high STR_1
  4714  000760  6E14               	movwf	strcpy@from+1,c
  4715  000762  ECEB  F00F         	call	_strcpy	;wreg free
  4716                           
  4717                           ;Main_Screen.c: 42: drawtext(1 , 1, txt, 0xFFFF , 0x0000, 1);
  4718  000766  0E01               	movlw	1
  4719  000768  6E39               	movwf	drawtext@y,c
  4720  00076A  C04E  F03A         	movff	_txt,drawtext@_text
  4721  00076E  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  4722  000772  0EFF               	movlw	255
  4723  000774  6E3D               	movwf	drawtext@color+1,c
  4724  000776  683C               	setf	drawtext@color,c
  4725  000778  0E00               	movlw	0
  4726  00077A  6E3F               	movwf	drawtext@bg+1,c
  4727  00077C  0E00               	movlw	0
  4728  00077E  6E3E               	movwf	drawtext@bg,c
  4729  000780  0E01               	movlw	1
  4730  000782  6E40               	movwf	drawtext@size,c
  4731  000784  0E01               	movlw	1
  4732  000786  ECFE  F007         	call	_drawtext
  4733                           
  4734                           ;Main_Screen.c: 44: strcpy(txt, "Temperature:");
  4735  00078A  C04E  F011         	movff	_txt,strcpy@to
  4736  00078E  C04F  F012         	movff	_txt+1,strcpy@to+1
  4737  000792  0EC8               	movlw	low STR_2
  4738  000794  6E13               	movwf	strcpy@from,c
  4739  000796  0EFF               	movlw	high STR_2
  4740  000798  6E14               	movwf	strcpy@from+1,c
  4741  00079A  ECEB  F00F         	call	_strcpy	;wreg free
  4742                           
  4743                           ;Main_Screen.c: 45: drawtext(24 , 11 , txt, 0xF81F, 0x0000, 1);
  4744  00079E  0E0B               	movlw	11
  4745  0007A0  6E39               	movwf	drawtext@y,c
  4746  0007A2  C04E  F03A         	movff	_txt,drawtext@_text
  4747  0007A6  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  4748  0007AA  0EF8               	movlw	248
  4749  0007AC  6E3D               	movwf	drawtext@color+1,c
  4750  0007AE  0E1F               	movlw	31
  4751  0007B0  6E3C               	movwf	drawtext@color,c
  4752  0007B2  0E00               	movlw	0
  4753  0007B4  6E3F               	movwf	drawtext@bg+1,c
  4754  0007B6  0E00               	movlw	0
  4755  0007B8  6E3E               	movwf	drawtext@bg,c
  4756  0007BA  0E01               	movlw	1
  4757  0007BC  6E40               	movwf	drawtext@size,c
  4758  0007BE  0E18               	movlw	24
  4759  0007C0  ECFE  F007         	call	_drawtext
  4760                           
  4761                           ;Main_Screen.c: 46: drawCircle(40, 23 , 2 , 0xFFE0);
  4762  0007C4  0E00               	movlw	0
  4763  0007C6  6E1D               	movwf	drawCircle@x0+1,c
  4764  0007C8  0E28               	movlw	40
  4765  0007CA  6E1C               	movwf	drawCircle@x0,c
  4766  0007CC  0E00               	movlw	0
  4767  0007CE  6E1F               	movwf	drawCircle@y0+1,c
  4768  0007D0  0E17               	movlw	23
  4769  0007D2  6E1E               	movwf	drawCircle@y0,c
  4770  0007D4  0E00               	movlw	0
  4771  0007D6  6E21               	movwf	drawCircle@r+1,c
  4772  0007D8  0E02               	movlw	2
  4773  0007DA  6E20               	movwf	drawCircle@r,c
  4774  0007DC  0EFF               	movlw	255
  4775  0007DE  6E23               	movwf	drawCircle@color+1,c
  4776  0007E0  0EE0               	movlw	224
  4777  0007E2  6E22               	movwf	drawCircle@color,c
  4778  0007E4  ECC9  F005         	call	_drawCircle	;wreg free
  4779                           
  4780                           ;Main_Screen.c: 47: strcpy(txt, "C/");
  4781  0007E8  C04E  F011         	movff	_txt,strcpy@to
  4782  0007EC  C04F  F012         	movff	_txt+1,strcpy@to+1
  4783  0007F0  0EF9               	movlw	low STR_3
  4784  0007F2  6E13               	movwf	strcpy@from,c
  4785  0007F4  0EFF               	movlw	high STR_3
  4786  0007F6  6E14               	movwf	strcpy@from+1,c
  4787  0007F8  ECEB  F00F         	call	_strcpy	;wreg free
  4788                           
  4789                           ;Main_Screen.c: 48: drawtext(45 , 23, txt, 0xFFE0 , 0x0000, 2);
  4790  0007FC  0E17               	movlw	23
  4791  0007FE  6E39               	movwf	drawtext@y,c
  4792  000800  C04E  F03A         	movff	_txt,drawtext@_text
  4793  000804  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  4794  000808  0EFF               	movlw	255
  4795  00080A  6E3D               	movwf	drawtext@color+1,c
  4796  00080C  0EE0               	movlw	224
  4797  00080E  6E3C               	movwf	drawtext@color,c
  4798  000810  0E00               	movlw	0
  4799  000812  6E3F               	movwf	drawtext@bg+1,c
  4800  000814  0E00               	movlw	0
  4801  000816  6E3E               	movwf	drawtext@bg,c
  4802  000818  0E02               	movlw	2
  4803  00081A  6E40               	movwf	drawtext@size,c
  4804  00081C  0E2D               	movlw	45
  4805  00081E  ECFE  F007         	call	_drawtext
  4806                           
  4807                           ;Main_Screen.c: 49: strcpy(txt, "F");
  4808  000822  C04E  F011         	movff	_txt,strcpy@to
  4809  000826  C04F  F012         	movff	_txt+1,strcpy@to+1
  4810  00082A  0EF3               	movlw	low (STR_11+2)
  4811  00082C  6E13               	movwf	strcpy@from,c
  4812  00082E  0EFF               	movlw	high (STR_11+2)
  4813  000830  6E14               	movwf	strcpy@from+1,c
  4814  000832  ECEB  F00F         	call	_strcpy	;wreg free
  4815                           
  4816                           ;Main_Screen.c: 50: drawCircle(110, 23 , 2 , 0xFFE0);
  4817  000836  0E00               	movlw	0
  4818  000838  6E1D               	movwf	drawCircle@x0+1,c
  4819  00083A  0E6E               	movlw	110
  4820  00083C  6E1C               	movwf	drawCircle@x0,c
  4821  00083E  0E00               	movlw	0
  4822  000840  6E1F               	movwf	drawCircle@y0+1,c
  4823  000842  0E17               	movlw	23
  4824  000844  6E1E               	movwf	drawCircle@y0,c
  4825  000846  0E00               	movlw	0
  4826  000848  6E21               	movwf	drawCircle@r+1,c
  4827  00084A  0E02               	movlw	2
  4828  00084C  6E20               	movwf	drawCircle@r,c
  4829  00084E  0EFF               	movlw	255
  4830  000850  6E23               	movwf	drawCircle@color+1,c
  4831  000852  0EE0               	movlw	224
  4832  000854  6E22               	movwf	drawCircle@color,c
  4833  000856  ECC9  F005         	call	_drawCircle	;wreg free
  4834                           
  4835                           ;Main_Screen.c: 51: drawtext(115 , 23, txt, 0xFFE0 , 0x0000, 2);
  4836  00085A  0E17               	movlw	23
  4837  00085C  6E39               	movwf	drawtext@y,c
  4838  00085E  C04E  F03A         	movff	_txt,drawtext@_text
  4839  000862  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  4840  000866  0EFF               	movlw	255
  4841  000868  6E3D               	movwf	drawtext@color+1,c
  4842  00086A  0EE0               	movlw	224
  4843  00086C  6E3C               	movwf	drawtext@color,c
  4844  00086E  0E00               	movlw	0
  4845  000870  6E3F               	movwf	drawtext@bg+1,c
  4846  000872  0E00               	movlw	0
  4847  000874  6E3E               	movwf	drawtext@bg,c
  4848  000876  0E02               	movlw	2
  4849  000878  6E40               	movwf	drawtext@size,c
  4850  00087A  0E73               	movlw	115
  4851  00087C  ECFE  F007         	call	_drawtext
  4852                           
  4853                           ;Main_Screen.c: 52: strcpy(txt, "Time");
  4854  000880  C04E  F011         	movff	_txt,strcpy@to
  4855  000884  C04F  F012         	movff	_txt+1,strcpy@to+1
  4856  000888  0EE3               	movlw	low STR_5
  4857  00088A  6E13               	movwf	strcpy@from,c
  4858  00088C  0EFF               	movlw	high STR_5
  4859  00088E  6E14               	movwf	strcpy@from+1,c
  4860  000890  ECEB  F00F         	call	_strcpy	;wreg free
  4861                           
  4862                           ;Main_Screen.c: 53: drawtext(50 , 40 , txt, 0x001F , 0x0000, 1);
  4863  000894  0E28               	movlw	40
  4864  000896  6E39               	movwf	drawtext@y,c
  4865  000898  C04E  F03A         	movff	_txt,drawtext@_text
  4866  00089C  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  4867  0008A0  0E00               	movlw	0
  4868  0008A2  6E3D               	movwf	drawtext@color+1,c
  4869  0008A4  0E1F               	movlw	31
  4870  0008A6  6E3C               	movwf	drawtext@color,c
  4871  0008A8  0E00               	movlw	0
  4872  0008AA  6E3F               	movwf	drawtext@bg+1,c
  4873  0008AC  0E00               	movlw	0
  4874  0008AE  6E3E               	movwf	drawtext@bg,c
  4875  0008B0  0E01               	movlw	1
  4876  0008B2  6E40               	movwf	drawtext@size,c
  4877  0008B4  0E32               	movlw	50
  4878  0008B6  ECFE  F007         	call	_drawtext
  4879                           
  4880                           ;Main_Screen.c: 54: strcpy(txt, "Date");
  4881  0008BA  C04E  F011         	movff	_txt,strcpy@to
  4882  0008BE  C04F  F012         	movff	_txt+1,strcpy@to+1
  4883  0008C2  0EE8               	movlw	low STR_6
  4884  0008C4  6E13               	movwf	strcpy@from,c
  4885  0008C6  0EFF               	movlw	high STR_6
  4886  0008C8  6E14               	movwf	strcpy@from+1,c
  4887  0008CA  ECEB  F00F         	call	_strcpy	;wreg free
  4888                           
  4889                           ;Main_Screen.c: 55: drawtext(50 , 71 , txt, 0xF800 , 0x0000, 1);
  4890  0008CE  0E47               	movlw	71
  4891  0008D0  6E39               	movwf	drawtext@y,c
  4892  0008D2  C04E  F03A         	movff	_txt,drawtext@_text
  4893  0008D6  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  4894  0008DA  0EF8               	movlw	248
  4895  0008DC  6E3D               	movwf	drawtext@color+1,c
  4896  0008DE  0E00               	movlw	0
  4897  0008E0  6E3C               	movwf	drawtext@color,c
  4898  0008E2  0E00               	movlw	0
  4899  0008E4  6E3F               	movwf	drawtext@bg+1,c
  4900  0008E6  0E00               	movlw	0
  4901  0008E8  6E3E               	movwf	drawtext@bg,c
  4902  0008EA  0E01               	movlw	1
  4903  0008EC  6E40               	movwf	drawtext@size,c
  4904  0008EE  0E32               	movlw	50
  4905  0008F0  ECFE  F007         	call	_drawtext
  4906                           
  4907                           ;Main_Screen.c: 58: strcpy(txt, "  FAN");
  4908  0008F4  C04E  F011         	movff	_txt,strcpy@to
  4909  0008F8  C04F  F012         	movff	_txt+1,strcpy@to+1
  4910  0008FC  0EDD               	movlw	low STR_7
  4911  0008FE  6E13               	movwf	strcpy@from,c
  4912  000900  0EFF               	movlw	high STR_7
  4913  000902  6E14               	movwf	strcpy@from+1,c
  4914  000904  ECEB  F00F         	call	_strcpy	;wreg free
  4915                           
  4916                           ;Main_Screen.c: 59: drawtext(85, 120, txt, 0x001F , 0x0000, 1);
  4917  000908  0E78               	movlw	120
  4918  00090A  6E39               	movwf	drawtext@y,c
  4919  00090C  C04E  F03A         	movff	_txt,drawtext@_text
  4920  000910  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  4921  000914  0E00               	movlw	0
  4922  000916  6E3D               	movwf	drawtext@color+1,c
  4923  000918  0E1F               	movlw	31
  4924  00091A  6E3C               	movwf	drawtext@color,c
  4925  00091C  0E00               	movlw	0
  4926  00091E  6E3F               	movwf	drawtext@bg+1,c
  4927  000920  0E00               	movlw	0
  4928  000922  6E3E               	movwf	drawtext@bg,c
  4929  000924  0E01               	movlw	1
  4930  000926  6E40               	movwf	drawtext@size,c
  4931  000928  0E55               	movlw	85
  4932  00092A  ECFE  F007         	call	_drawtext
  4933                           
  4934                           ;Main_Screen.c: 61: strcpy(txt, "DC");
  4935  00092E  C04E  F011         	movff	_txt,strcpy@to
  4936  000932  C04F  F012         	movff	_txt+1,strcpy@to+1
  4937  000936  0EFC               	movlw	low STR_8
  4938  000938  6E13               	movwf	strcpy@from,c
  4939  00093A  0EFF               	movlw	high STR_8
  4940  00093C  6E14               	movwf	strcpy@from+1,c
  4941  00093E  ECEB  F00F         	call	_strcpy	;wreg free
  4942                           
  4943                           ;Main_Screen.c: 62: drawtext(12, 140, txt, 0xFFFF , 0x0000, 1);
  4944  000942  0E8C               	movlw	140
  4945  000944  6E39               	movwf	drawtext@y,c
  4946  000946  C04E  F03A         	movff	_txt,drawtext@_text
  4947  00094A  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  4948  00094E  0EFF               	movlw	255
  4949  000950  6E3D               	movwf	drawtext@color+1,c
  4950  000952  683C               	setf	drawtext@color,c
  4951  000954  0E00               	movlw	0
  4952  000956  6E3F               	movwf	drawtext@bg+1,c
  4953  000958  0E00               	movlw	0
  4954  00095A  6E3E               	movwf	drawtext@bg,c
  4955  00095C  0E01               	movlw	1
  4956  00095E  6E40               	movwf	drawtext@size,c
  4957  000960  0E0C               	movlw	12
  4958  000962  ECFE  F007         	call	_drawtext
  4959                           
  4960                           ;Main_Screen.c: 64: strcpy(txt, "RPM");
  4961  000966  C04E  F011         	movff	_txt,strcpy@to
  4962  00096A  C04F  F012         	movff	_txt+1,strcpy@to+1
  4963  00096E  0EF5               	movlw	low STR_9
  4964  000970  6E13               	movwf	strcpy@from,c
  4965  000972  0EFF               	movlw	high STR_9
  4966  000974  6E14               	movwf	strcpy@from+1,c
  4967  000976  ECEB  F00F         	call	_strcpy	;wreg free
  4968                           
  4969                           ;Main_Screen.c: 65: drawtext(95, 140, txt, 0xFFFF , 0x0000 , 1);
  4970  00097A  0E8C               	movlw	140
  4971  00097C  6E39               	movwf	drawtext@y,c
  4972  00097E  C04E  F03A         	movff	_txt,drawtext@_text
  4973  000982  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  4974  000986  0EFF               	movlw	255
  4975  000988  6E3D               	movwf	drawtext@color+1,c
  4976  00098A  683C               	setf	drawtext@color,c
  4977  00098C  0E00               	movlw	0
  4978  00098E  6E3F               	movwf	drawtext@bg+1,c
  4979  000990  0E00               	movlw	0
  4980  000992  6E3E               	movwf	drawtext@bg,c
  4981  000994  0E01               	movlw	1
  4982  000996  6E40               	movwf	drawtext@size,c
  4983  000998  0E5F               	movlw	95
  4984  00099A  ECFE  F007         	call	_drawtext
  4985  00099E  0012               	return		;funcret
  4986  0009A0                     __end_of_Initialize_Screen:
  4987                           	opt stack 0
  4988                           tblptru	equ	0xFF8
  4989                           tblptrh	equ	0xFF7
  4990                           tblptrl	equ	0xFF6
  4991                           tablat	equ	0xFF5
  4992                           prodh	equ	0xFF4
  4993                           prodl	equ	0xFF3
  4994                           intcon	equ	0xFF2
  4995                           intcon2	equ	0xFF1
  4996                           postinc0	equ	0xFEE
  4997                           wreg	equ	0xFE8
  4998                           postdec1	equ	0xFE5
  4999                           fsr1l	equ	0xFE1
  5000                           postinc2	equ	0xFDE
  5001                           postdec2	equ	0xFDD
  5002                           fsr2h	equ	0xFDA
  5003                           fsr2l	equ	0xFD9
  5004                           status	equ	0xFD8
  5005                           
  5006 ;; *************** function _strcpy *****************
  5007 ;; Defined at:
  5008 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcpy.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;  to              2   16[COMRAM] PTR unsigned char 
  5011 ;;		 -> NULL(0), Fan_SW_Txt(4), buffer(33), 
  5012 ;;  from            2   18[COMRAM] PTR const unsigned char 
  5013 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(3), 
  5014 ;;		 -> STR_7(6), STR_6(5), STR_5(5), STR_4(2), 
  5015 ;;		 -> STR_3(3), STR_2(13), STR_1(22), 
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;  cp              2   20[COMRAM] PTR unsigned char 
  5018 ;;		 -> NULL(0), Fan_SW_Txt(4), buffer(33), 
  5019 ;; Return value:  Size  Location     Type
  5020 ;;                  2   16[COMRAM] PTR unsigned char 
  5021 ;; Registers used:
  5022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5028 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5029 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5031 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5032 ;;Total ram usage:        6 bytes
  5033 ;; Hardware stack levels used:    1
  5034 ;; Hardware stack levels required when called:    3
  5035 ;; This function calls:
  5036 ;;		Nothing
  5037 ;; This function is called by:
  5038 ;;		_Initialize_Screen
  5039 ;;		_Update_Screen
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           
  5043                           	psect	text14
  5044  001FD6                     __ptext14:
  5045                           	opt stack 0
  5046  001FD6                     _strcpy:
  5047                           	opt stack 26
  5048                           
  5049                           ;incstack = 0
  5050  001FD6  C011  F015         	movff	strcpy@to,strcpy@cp
  5051  001FDA  C012  F016         	movff	strcpy@to+1,strcpy@cp+1
  5052  001FDE  D005               	goto	l5961
  5053  001FE0                     l5959:
  5054  001FE0  4A15               	infsnz	strcpy@cp,f,c
  5055  001FE2  2A16               	incf	strcpy@cp+1,f,c
  5056  001FE4  4A13               	infsnz	strcpy@from,f,c
  5057  001FE6  2A14               	incf	strcpy@from+1,f,c
  5058  001FE8  D000               	goto	l5961
  5059  001FEA                     l5961:
  5060  001FEA  C013  FFF6         	movff	strcpy@from,tblptrl
  5061  001FEE  C014  FFF7         	movff	strcpy@from+1,tblptrh
  5062  001FF2                     	if	0	;tblptru may be non-zero
  5063  001FF2                     	endif
  5064  001FF2                     	if	0	;tblptru may be non-zero
  5065  001FF2                     	endif
  5066  001FF2  C015  FFD9         	movff	strcpy@cp,fsr2l
  5067  001FF6  C016  FFDA         	movff	strcpy@cp+1,fsr2h
  5068  001FFA  0008               	tblrd		*
  5069  001FFC  CFF5 FFDF          	movff	tablat,indf2
  5070  002000  50DF               	movf	indf2,w,c
  5071  002002  A4D8               	btfss	status,2,c
  5072  002004  D7ED               	goto	l5959
  5073                           
  5074                           ;	Return value of _strcpy is never used
  5075  002006  0012               	return		;funcret
  5076  002008                     __end_of_strcpy:
  5077                           	opt stack 0
  5078                           tblptru	equ	0xFF8
  5079                           tblptrh	equ	0xFF7
  5080                           tblptrl	equ	0xFF6
  5081                           tablat	equ	0xFF5
  5082                           prodh	equ	0xFF4
  5083                           prodl	equ	0xFF3
  5084                           intcon	equ	0xFF2
  5085                           intcon2	equ	0xFF1
  5086                           postinc0	equ	0xFEE
  5087                           wreg	equ	0xFE8
  5088                           postdec1	equ	0xFE5
  5089                           fsr1l	equ	0xFE1
  5090                           indf2	equ	0xFDF
  5091                           postinc2	equ	0xFDE
  5092                           postdec2	equ	0xFDD
  5093                           fsr2h	equ	0xFDA
  5094                           fsr2l	equ	0xFD9
  5095                           status	equ	0xFD8
  5096                           
  5097 ;; *************** function _fillScreen *****************
  5098 ;; Defined at:
  5099 ;;		line 620 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/ST7735_TFT.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;  color           2   35[COMRAM] unsigned int 
  5102 ;; Auto vars:     Size  Location     Type
  5103 ;;		None
  5104 ;; Return value:  Size  Location     Type
  5105 ;;		None               void
  5106 ;; Registers used:
  5107 ;;		wreg, status,2, status,0, cstack
  5108 ;; Tracked objects:
  5109 ;;		On entry : 0/0
  5110 ;;		On exit  : 0/0
  5111 ;;		Unchanged: 0/0
  5112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5113 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5116 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5117 ;;Total ram usage:        2 bytes
  5118 ;; Hardware stack levels used:    1
  5119 ;; Hardware stack levels required when called:    7
  5120 ;; This function calls:
  5121 ;;		_fillRectangle
  5122 ;; This function is called by:
  5123 ;;		_Initialize_Screen
  5124 ;; This function uses a non-reentrant model
  5125 ;;
  5126                           
  5127                           	psect	text15
  5128  002156                     __ptext15:
  5129                           	opt stack 0
  5130  002156                     _fillScreen:
  5131                           	opt stack 22
  5132                           
  5133                           ;ST7735_TFT.c: 622: fillRectangle(0, 0, 128, 160, color);
  5134                           
  5135                           ;incstack = 0
  5136  002156  0E00               	movlw	0
  5137  002158  6E18               	movwf	fillRectangle@y,c
  5138  00215A  0E80               	movlw	128
  5139  00215C  6E19               	movwf	fillRectangle@w,c
  5140  00215E  0EA0               	movlw	160
  5141  002160  6E1A               	movwf	fillRectangle@h,c
  5142  002162  C024  F01B         	movff	fillScreen@color,fillRectangle@color
  5143  002166  C025  F01C         	movff	fillScreen@color+1,fillRectangle@color+1
  5144  00216A  0E00               	movlw	0
  5145  00216C  ECEA  F00A         	call	_fillRectangle
  5146  002170  0012               	return		;funcret
  5147  002172                     __end_of_fillScreen:
  5148                           	opt stack 0
  5149                           tblptru	equ	0xFF8
  5150                           tblptrh	equ	0xFF7
  5151                           tblptrl	equ	0xFF6
  5152                           tablat	equ	0xFF5
  5153                           prodh	equ	0xFF4
  5154                           prodl	equ	0xFF3
  5155                           intcon	equ	0xFF2
  5156                           intcon2	equ	0xFF1
  5157                           postinc0	equ	0xFEE
  5158                           wreg	equ	0xFE8
  5159                           postdec1	equ	0xFE5
  5160                           fsr1l	equ	0xFE1
  5161                           indf2	equ	0xFDF
  5162                           postinc2	equ	0xFDE
  5163                           postdec2	equ	0xFDD
  5164                           fsr2h	equ	0xFDA
  5165                           fsr2l	equ	0xFD9
  5166                           status	equ	0xFD8
  5167                           
  5168 ;; *************** function _fillRectangle *****************
  5169 ;; Defined at:
  5170 ;;		line 504 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/ST7735_TFT.c"
  5171 ;; Parameters:    Size  Location     Type
  5172 ;;  x               1    wreg     unsigned char 
  5173 ;;  y               1   23[COMRAM] unsigned char 
  5174 ;;  w               1   24[COMRAM] unsigned char 
  5175 ;;  h               1   25[COMRAM] unsigned char 
  5176 ;;  color           2   26[COMRAM] unsigned int 
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;  x               1   34[COMRAM] unsigned char 
  5179 ;;  lo              1   33[COMRAM] unsigned char 
  5180 ;;  hi              1   32[COMRAM] unsigned char 
  5181 ;; Return value:  Size  Location     Type
  5182 ;;		None               void
  5183 ;; Registers used:
  5184 ;;		wreg, status,2, status,0, cstack
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/0
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5190 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5191 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5192 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5193 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5194 ;;Total ram usage:       12 bytes
  5195 ;; Hardware stack levels used:    1
  5196 ;; Hardware stack levels required when called:    6
  5197 ;; This function calls:
  5198 ;;		_setAddrWindow
  5199 ;;		_spiwrite
  5200 ;; This function is called by:
  5201 ;;		_fillScreen
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           	psect	text16
  5206  0015D4                     __ptext16:
  5207                           	opt stack 0
  5208  0015D4                     _fillRectangle:
  5209                           	opt stack 22
  5210                           
  5211                           ;incstack = 0
  5212                           ;fillRectangle@x stored from wreg
  5213  0015D4  6E23               	movwf	fillRectangle@x,c
  5214                           
  5215                           ;ST7735_TFT.c: 506: unsigned char hi, lo;
  5216                           ;ST7735_TFT.c: 507: if((x >= 128) || (y >= 160))
  5217  0015D6  0E80               	movlw	128
  5218  0015D8  6023               	cpfslt	fillRectangle@x,c
  5219  0015DA  D069               	goto	l431
  5220  0015DC  0E9F               	movlw	159
  5221  0015DE  6418               	cpfsgt	fillRectangle@y,c
  5222  0015E0  D001               	goto	l5781
  5223                           
  5224                           ;ST7735_TFT.c: 508: return;
  5225  0015E2  D065               	goto	l431
  5226  0015E4                     l5781:
  5227                           
  5228                           ;ST7735_TFT.c: 509: if((x + w - 1) >= 128)
  5229  0015E4  0EFF               	movlw	255
  5230  0015E6  6E1D               	movwf	??_fillRectangle& (0+255),c
  5231  0015E8  0EFF               	movlw	255
  5232  0015EA  6E1E               	movwf	(??_fillRectangle+1)& (0+255),c
  5233  0015EC  5019               	movf	fillRectangle@w,w,c
  5234  0015EE  C023  F01F         	movff	fillRectangle@x,??_fillRectangle+2
  5235  0015F2  6A20               	clrf	(??_fillRectangle+3)& (0+255),c
  5236  0015F4  261F               	addwf	??_fillRectangle+2,f,c
  5237  0015F6  0E00               	movlw	0
  5238  0015F8  2220               	addwfc	??_fillRectangle+3,f,c
  5239  0015FA  501D               	movf	??_fillRectangle,w,c
  5240  0015FC  261F               	addwf	??_fillRectangle+2,f,c
  5241  0015FE  501E               	movf	??_fillRectangle+1,w,c
  5242  001600  2220               	addwfc	??_fillRectangle+3,f,c
  5243  001602  BE20               	btfsc	??_fillRectangle+3,7,c
  5244  001604  D00A               	goto	l432
  5245  001606  5020               	movf	??_fillRectangle+3,w,c
  5246  001608  E104               	bnz	u4280
  5247  00160A  0E80               	movlw	128
  5248  00160C  5C1F               	subwf	??_fillRectangle+2,w,c
  5249  00160E  A0D8               	btfss	status,0,c
  5250  001610  D004               	goto	l432
  5251  001612                     u4280:
  5252                           
  5253                           ;ST7735_TFT.c: 510: w = 128 - x;
  5254  001612  5023               	movf	fillRectangle@x,w,c
  5255  001614  0800               	sublw	0
  5256  001616  0F80               	addlw	128
  5257  001618  6E19               	movwf	fillRectangle@w,c
  5258  00161A                     l432:
  5259                           
  5260                           ;ST7735_TFT.c: 511: if((y + h - 1) >= 160)
  5261  00161A  0EFF               	movlw	255
  5262  00161C  6E1D               	movwf	??_fillRectangle& (0+255),c
  5263  00161E  0EFF               	movlw	255
  5264  001620  6E1E               	movwf	(??_fillRectangle+1)& (0+255),c
  5265  001622  501A               	movf	fillRectangle@h,w,c
  5266  001624  C018  F01F         	movff	fillRectangle@y,??_fillRectangle+2
  5267  001628  6A20               	clrf	(??_fillRectangle+3)& (0+255),c
  5268  00162A  261F               	addwf	??_fillRectangle+2,f,c
  5269  00162C  0E00               	movlw	0
  5270  00162E  2220               	addwfc	??_fillRectangle+3,f,c
  5271  001630  501D               	movf	??_fillRectangle,w,c
  5272  001632  261F               	addwf	??_fillRectangle+2,f,c
  5273  001634  501E               	movf	??_fillRectangle+1,w,c
  5274  001636  2220               	addwfc	??_fillRectangle+3,f,c
  5275  001638  BE20               	btfsc	??_fillRectangle+3,7,c
  5276  00163A  D00B               	goto	l5787
  5277  00163C  5020               	movf	??_fillRectangle+3,w,c
  5278  00163E  E104               	bnz	u4290
  5279  001640  0EA0               	movlw	160
  5280  001642  5C1F               	subwf	??_fillRectangle+2,w,c
  5281  001644  A0D8               	btfss	status,0,c
  5282  001646  D005               	goto	l5787
  5283  001648                     u4290:
  5284                           
  5285                           ;ST7735_TFT.c: 512: h = 160 - y;
  5286  001648  5018               	movf	fillRectangle@y,w,c
  5287  00164A  0800               	sublw	0
  5288  00164C  0FA0               	addlw	160
  5289  00164E  6E1A               	movwf	fillRectangle@h,c
  5290  001650  D000               	goto	l5787
  5291  001652                     l5787:
  5292                           
  5293                           ;ST7735_TFT.c: 513: setAddrWindow(x, y, x+w-1, y+h-1);
  5294  001652  C018  F014         	movff	fillRectangle@y,setAddrWindow@y0
  5295  001656  5023               	movf	fillRectangle@x,w,c
  5296  001658  2419               	addwf	fillRectangle@w,w,c
  5297  00165A  6E1D               	movwf	??_fillRectangle& (0+255),c
  5298  00165C  041D               	decf	??_fillRectangle,w,c
  5299  00165E  6E15               	movwf	setAddrWindow@x1,c
  5300  001660  5018               	movf	fillRectangle@y,w,c
  5301  001662  241A               	addwf	fillRectangle@h,w,c
  5302  001664  6E1E               	movwf	(??_fillRectangle+1)& (0+255),c
  5303  001666  041E               	decf	??_fillRectangle+1,w,c
  5304  001668  6E16               	movwf	setAddrWindow@y1,c
  5305  00166A  5023               	movf	fillRectangle@x,w,c
  5306  00166C  EC94  F00E         	call	_setAddrWindow
  5307                           
  5308                           ;ST7735_TFT.c: 514: hi = color >> 8; lo = color;
  5309  001670  501C               	movf	fillRectangle@color+1,w,c
  5310  001672  6E21               	movwf	fillRectangle@hi,c
  5311  001674  C01B  F022         	movff	fillRectangle@color,fillRectangle@lo
  5312                           
  5313                           ;ST7735_TFT.c: 515: PORTDbits.RD3 = 1;
  5314  001678  8683               	bsf	3971,3,c	;volatile
  5315                           
  5316                           ;ST7735_TFT.c: 516: PORTDbits.RD4 = 0;
  5317  00167A  9883               	bcf	3971,4,c	;volatile
  5318                           
  5319                           ;ST7735_TFT.c: 518: for(y=h; y>0; y--) {
  5320  00167C  C01A  F018         	movff	fillRectangle@h,fillRectangle@y
  5321  001680                     l5799:
  5322  001680  5018               	movf	fillRectangle@y,w,c
  5323  001682  B4D8               	btfsc	status,2,c
  5324  001684  D013               	goto	l435
  5325  001686  D001               	goto	l434
  5326  001688  D011               	goto	l435
  5327  00168A                     l434:
  5328                           
  5329                           ;ST7735_TFT.c: 519: for(x = w; x > 0; x--) {
  5330  00168A  C019  F023         	movff	fillRectangle@w,fillRectangle@x
  5331  00168E                     l5803:
  5332  00168E  5023               	movf	fillRectangle@x,w,c
  5333  001690  B4D8               	btfsc	status,2,c
  5334  001692  D00A               	goto	l5813
  5335  001694  D001               	goto	l5807
  5336  001696  D008               	goto	l5813
  5337  001698                     l5807:
  5338                           
  5339                           ;ST7735_TFT.c: 520: spiwrite(hi);
  5340  001698  5021               	movf	fillRectangle@hi,w,c
  5341  00169A  EC02  F011         	call	_spiwrite
  5342                           
  5343                           ;ST7735_TFT.c: 521: spiwrite(lo);
  5344  00169E  5022               	movf	fillRectangle@lo,w,c
  5345  0016A0  EC02  F011         	call	_spiwrite
  5346  0016A4  0623               	decf	fillRectangle@x,f,c
  5347  0016A6  D7F3               	goto	l5803
  5348  0016A8                     l5813:
  5349  0016A8  0618               	decf	fillRectangle@y,f,c
  5350  0016AA  D7EA               	goto	l5799
  5351  0016AC                     l435:
  5352                           
  5353                           ;ST7735_TFT.c: 522: }
  5354                           ;ST7735_TFT.c: 523: }
  5355                           ;ST7735_TFT.c: 524: PORTDbits.RD4 = 1;
  5356  0016AC  8883               	bsf	3971,4,c	;volatile
  5357  0016AE                     l431:
  5358  0016AE  0012               	return		;funcret
  5359  0016B0                     __end_of_fillRectangle:
  5360                           	opt stack 0
  5361                           tblptru	equ	0xFF8
  5362                           tblptrh	equ	0xFF7
  5363                           tblptrl	equ	0xFF6
  5364                           tablat	equ	0xFF5
  5365                           prodh	equ	0xFF4
  5366                           prodl	equ	0xFF3
  5367                           intcon	equ	0xFF2
  5368                           intcon2	equ	0xFF1
  5369                           postinc0	equ	0xFEE
  5370                           wreg	equ	0xFE8
  5371                           postdec1	equ	0xFE5
  5372                           fsr1l	equ	0xFE1
  5373                           indf2	equ	0xFDF
  5374                           postinc2	equ	0xFDE
  5375                           postdec2	equ	0xFDD
  5376                           fsr2h	equ	0xFDA
  5377                           fsr2l	equ	0xFD9
  5378                           status	equ	0xFD8
  5379                           
  5380 ;; *************** function _drawtext *****************
  5381 ;; Defined at:
  5382 ;;		line 475 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/ST7735_TFT.c"
  5383 ;; Parameters:    Size  Location     Type
  5384 ;;  x               1    wreg     unsigned char 
  5385 ;;  y               1   56[COMRAM] unsigned char 
  5386 ;;  _text           2   57[COMRAM] PTR unsigned char 
  5387 ;;		 -> NULL(0), RPM_Txt(5), DC_Txt(4), Fan_SW_Txt(4), 
  5388 ;;		 -> date(9), time(9), tempF(4), tempC(4), 
  5389 ;;		 -> buffer(33), 
  5390 ;;  color           2   59[COMRAM] unsigned int 
  5391 ;;  bg              2   61[COMRAM] unsigned int 
  5392 ;;  size            1   63[COMRAM] unsigned char 
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;  x               1    2[BANK0 ] unsigned char 
  5395 ;;  i               2    5[BANK0 ] unsigned int 
  5396 ;;  textsize        2    3[BANK0 ] unsigned int 
  5397 ;;  cursor_x        1    8[BANK0 ] unsigned char 
  5398 ;;  cursor_y        1    7[BANK0 ] unsigned char 
  5399 ;; Return value:  Size  Location     Type
  5400 ;;		None               void
  5401 ;; Registers used:
  5402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5408 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5409 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5410 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5411 ;;      Totals:         8       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5412 ;;Total ram usage:       17 bytes
  5413 ;; Hardware stack levels used:    1
  5414 ;; Hardware stack levels required when called:    9
  5415 ;; This function calls:
  5416 ;;		_drawChar
  5417 ;;		_strlen
  5418 ;; This function is called by:
  5419 ;;		_Initialize_Screen
  5420 ;;		_Update_Screen
  5421 ;; This function uses a non-reentrant model
  5422 ;;
  5423                           
  5424                           	psect	text17
  5425  000FFC                     __ptext17:
  5426                           	opt stack 0
  5427  000FFC                     _drawtext:
  5428                           	opt stack 20
  5429                           
  5430                           ;incstack = 0
  5431                           ;drawtext@x stored from wreg
  5432  000FFC  0100               	movlb	0	; () banked
  5433  000FFE  6FED               	movwf	drawtext@x& (0+255),b
  5434                           
  5435                           ; BSR set to: 0
  5436                           ;ST7735_TFT.c: 477: unsigned char cursor_x, cursor_y;
  5437                           ;ST7735_TFT.c: 478: unsigned int textsize, i;
  5438                           ;ST7735_TFT.c: 479: cursor_x = x, cursor_y = y;
  5439  001000  C0ED  F0F3         	movff	drawtext@x,drawtext@cursor_x
  5440                           
  5441                           ; BSR set to: 0
  5442  001004  C039  F0F2         	movff	drawtext@y,drawtext@cursor_y
  5443                           
  5444                           ; BSR set to: 0
  5445                           ;ST7735_TFT.c: 480: textsize = strlen(_text);
  5446  001008  C03A  F011         	movff	drawtext@_text,strlen@s
  5447  00100C  C03B  F012         	movff	drawtext@_text+1,strlen@s+1
  5448  001010  EC70  F00F         	call	_strlen	;wreg free
  5449  001014  C011  F0EE         	movff	?_strlen,drawtext@textsize
  5450  001018  C012  F0EF         	movff	?_strlen+1,drawtext@textsize+1
  5451                           
  5452                           ;ST7735_TFT.c: 481: for(i = 0; i < textsize; i++){
  5453  00101C  0E00               	movlw	0
  5454  00101E  0100               	movlb	0	; () banked
  5455  001020  6FF1               	movwf	(drawtext@i+1)& (0+255),b
  5456  001022  0E00               	movlw	0
  5457  001024  6FF0               	movwf	drawtext@i& (0+255),b
  5458  001026  D06A               	goto	l5997
  5459  001028                     l5971:
  5460                           
  5461                           ; BSR set to: 0
  5462                           ;ST7735_TFT.c: 482: if(wrap && ((cursor_x + size * 5) > 128)){
  5463  001028  506F               	movf	_wrap,w,c
  5464  00102A  B4D8               	btfsc	status,2,c
  5465  00102C  D03A               	goto	l5987
  5466                           
  5467                           ; BSR set to: 0
  5468  00102E  5040               	movf	drawtext@size,w,c
  5469  001030  0D05               	mullw	5
  5470  001032  0100               	movlb	0	; () banked
  5471  001034  51F3               	movf	drawtext@cursor_x& (0+255),w,b
  5472  001036  0100               	movlb	0	; () banked
  5473  001038  6FEB               	movwf	??_drawtext& (0+255),b
  5474  00103A  6BEC               	clrf	(??_drawtext+1)& (0+255),b
  5475  00103C  50F3               	movf	prodl,w,c
  5476  00103E  0100               	movlb	0	; () banked
  5477  001040  27EB               	addwf	??_drawtext& (0+255),f,b
  5478  001042  50F4               	movf	prodh,w,c
  5479  001044  0100               	movlb	0	; () banked
  5480  001046  23EC               	addwfc	(??_drawtext+1)& (0+255),f,b
  5481  001048  0100               	movlb	0	; () banked
  5482  00104A  BFEC               	btfsc	(??_drawtext+1)& (0+255),7,b
  5483  00104C  D02A               	goto	l5987
  5484  00104E  0100               	movlb	0	; () banked
  5485  001050  51EC               	movf	(??_drawtext+1)& (0+255),w,b
  5486  001052  E105               	bnz	u4500
  5487  001054  0E81               	movlw	129
  5488  001056  0100               	movlb	0	; () banked
  5489  001058  5DEB               	subwf	??_drawtext& (0+255),w,b
  5490  00105A  A0D8               	btfss	status,0,c
  5491  00105C  D022               	goto	l5987
  5492  00105E                     u4500:
  5493                           
  5494                           ; BSR set to: 0
  5495                           ;ST7735_TFT.c: 483: cursor_x = 0;
  5496  00105E  0E00               	movlw	0
  5497  001060  0100               	movlb	0	; () banked
  5498  001062  6FF3               	movwf	drawtext@cursor_x& (0+255),b
  5499                           
  5500                           ; BSR set to: 0
  5501                           ;ST7735_TFT.c: 484: cursor_y = cursor_y + size * 7 + 3 ;
  5502  001064  5040               	movf	drawtext@size,w,c
  5503  001066  0D07               	mullw	7
  5504  001068  50F3               	movf	prodl,w,c
  5505  00106A  0100               	movlb	0	; () banked
  5506  00106C  25F2               	addwf	drawtext@cursor_y& (0+255),w,b
  5507  00106E  0F03               	addlw	3
  5508  001070  0100               	movlb	0	; () banked
  5509  001072  6FF2               	movwf	drawtext@cursor_y& (0+255),b
  5510                           
  5511                           ; BSR set to: 0
  5512                           ;ST7735_TFT.c: 485: if(cursor_y > 160) cursor_y = 160;
  5513  001074  0EA0               	movlw	160
  5514  001076  0100               	movlb	0	; () banked
  5515  001078  65F2               	cpfsgt	drawtext@cursor_y& (0+255),b
  5516  00107A  D004               	goto	l5983
  5517                           
  5518                           ; BSR set to: 0
  5519  00107C  0EA0               	movlw	160
  5520  00107E  0100               	movlb	0	; () banked
  5521  001080  6FF2               	movwf	drawtext@cursor_y& (0+255),b
  5522  001082  D000               	goto	l5983
  5523  001084                     l5983:
  5524                           
  5525                           ; BSR set to: 0
  5526                           ;ST7735_TFT.c: 486: if(_text[i] == 0x20) goto _skip; }
  5527  001084  0100               	movlb	0	; () banked
  5528  001086  51F0               	movf	drawtext@i& (0+255),w,b
  5529  001088  243A               	addwf	drawtext@_text,w,c
  5530  00108A  6ED9               	movwf	fsr2l,c
  5531  00108C  0100               	movlb	0	; () banked
  5532  00108E  51F1               	movf	(drawtext@i+1)& (0+255),w,b
  5533  001090  203B               	addwfc	drawtext@_text+1,w,c
  5534  001092  6EDA               	movwf	fsr2h,c
  5535  001094  0E20               	movlw	32
  5536  001096  18DE               	xorwf	postinc2,w,c
  5537  001098  B4D8               	btfsc	status,2,c
  5538  00109A  D02C               	goto	l5995
  5539  00109C  D002               	goto	l5987
  5540                           
  5541                           ; BSR set to: 0
  5542  00109E  D02A               	goto	l5995
  5543                           
  5544                           ; BSR set to: 0
  5545  0010A0  D000               	goto	l5987
  5546  0010A2                     l5987:
  5547                           
  5548                           ; BSR set to: 0
  5549                           ;ST7735_TFT.c: 487: drawChar(cursor_x, cursor_y, _text[i], color, bg, size);
  5550  0010A2  C0F2  F02E         	movff	drawtext@cursor_y,drawChar@y
  5551  0010A6  0100               	movlb	0	; () banked
  5552  0010A8  51F0               	movf	drawtext@i& (0+255),w,b
  5553  0010AA  243A               	addwf	drawtext@_text,w,c
  5554  0010AC  6ED9               	movwf	fsr2l,c
  5555  0010AE  0100               	movlb	0	; () banked
  5556  0010B0  51F1               	movf	(drawtext@i+1)& (0+255),w,b
  5557  0010B2  203B               	addwfc	drawtext@_text+1,w,c
  5558  0010B4  6EDA               	movwf	fsr2h,c
  5559  0010B6  50DF               	movf	indf2,w,c
  5560  0010B8  6E2F               	movwf	drawChar@c,c
  5561  0010BA  C03C  F030         	movff	drawtext@color,drawChar@color
  5562  0010BE  C03D  F031         	movff	drawtext@color+1,drawChar@color+1
  5563  0010C2  C03E  F032         	movff	drawtext@bg,drawChar@bg
  5564  0010C6  C03F  F033         	movff	drawtext@bg+1,drawChar@bg+1
  5565  0010CA  C040  F034         	movff	drawtext@size,drawChar@size
  5566  0010CE  0100               	movlb	0	; () banked
  5567  0010D0  51F3               	movf	drawtext@cursor_x& (0+255),w,b
  5568  0010D2  EC53  F007         	call	_drawChar
  5569                           
  5570                           ;ST7735_TFT.c: 488: cursor_x = cursor_x + size * 6;
  5571  0010D6  5040               	movf	drawtext@size,w,c
  5572  0010D8  0D06               	mullw	6
  5573  0010DA  50F3               	movf	prodl,w,c
  5574  0010DC  0100               	movlb	0	; () banked
  5575  0010DE  25F3               	addwf	drawtext@cursor_x& (0+255),w,b
  5576  0010E0  0100               	movlb	0	; () banked
  5577  0010E2  6FF3               	movwf	drawtext@cursor_x& (0+255),b
  5578                           
  5579                           ; BSR set to: 0
  5580                           ;ST7735_TFT.c: 489: if(cursor_x > 128) cursor_x = 128;
  5581  0010E4  0E80               	movlw	128
  5582  0010E6  0100               	movlb	0	; () banked
  5583  0010E8  65F3               	cpfsgt	drawtext@cursor_x& (0+255),b
  5584  0010EA  D004               	goto	l5995
  5585                           
  5586                           ; BSR set to: 0
  5587  0010EC  0E80               	movlw	128
  5588  0010EE  0100               	movlb	0	; () banked
  5589  0010F0  6FF3               	movwf	drawtext@cursor_x& (0+255),b
  5590                           
  5591                           ; BSR set to: 0
  5592  0010F2  D000               	goto	l5995
  5593  0010F4                     l5995:
  5594                           
  5595                           ; BSR set to: 0
  5596  0010F4  0100               	movlb	0	; () banked
  5597  0010F6  4BF0               	infsnz	drawtext@i& (0+255),f,b
  5598  0010F8  2BF1               	incf	(drawtext@i+1)& (0+255),f,b
  5599  0010FA  D000               	goto	l5997
  5600  0010FC                     l5997:
  5601                           
  5602                           ; BSR set to: 0
  5603  0010FC  0100               	movlb	0	; () banked
  5604  0010FE  51EE               	movf	drawtext@textsize& (0+255),w,b
  5605  001100  0100               	movlb	0	; () banked
  5606  001102  5DF0               	subwf	drawtext@i& (0+255),w,b
  5607  001104  0100               	movlb	0	; () banked
  5608  001106  51EF               	movf	(drawtext@textsize+1)& (0+255),w,b
  5609  001108  0100               	movlb	0	; () banked
  5610  00110A  59F1               	subwfb	(drawtext@i+1)& (0+255),w,b
  5611  00110C  A0D8               	btfss	status,0,c
  5612  00110E  D78C               	goto	l5971
  5613                           
  5614                           ; BSR set to: 0
  5615                           
  5616                           ; BSR set to: 0
  5617  001110  0012               	return		;funcret
  5618  001112                     __end_of_drawtext:
  5619                           	opt stack 0
  5620                           tblptru	equ	0xFF8
  5621                           tblptrh	equ	0xFF7
  5622                           tblptrl	equ	0xFF6
  5623                           tablat	equ	0xFF5
  5624                           prodh	equ	0xFF4
  5625                           prodl	equ	0xFF3
  5626                           intcon	equ	0xFF2
  5627                           intcon2	equ	0xFF1
  5628                           postinc0	equ	0xFEE
  5629                           wreg	equ	0xFE8
  5630                           postdec1	equ	0xFE5
  5631                           fsr1l	equ	0xFE1
  5632                           indf2	equ	0xFDF
  5633                           postinc2	equ	0xFDE
  5634                           postdec2	equ	0xFDD
  5635                           fsr2h	equ	0xFDA
  5636                           fsr2l	equ	0xFD9
  5637                           status	equ	0xFD8
  5638                           
  5639 ;; *************** function _strlen *****************
  5640 ;; Defined at:
  5641 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strlen.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;  s               2   16[COMRAM] PTR const unsigned char 
  5644 ;;		 -> NULL(0), RPM_Txt(5), DC_Txt(4), Fan_SW_Txt(4), 
  5645 ;;		 -> date(9), time(9), tempF(4), tempC(4), 
  5646 ;;		 -> buffer(33), 
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;  cp              2   20[COMRAM] PTR const unsigned char 
  5649 ;;		 -> NULL(0), RPM_Txt(5), DC_Txt(4), Fan_SW_Txt(4), 
  5650 ;;		 -> date(9), time(9), tempF(4), tempC(4), 
  5651 ;;		 -> buffer(33), 
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  2   16[COMRAM] unsigned int 
  5654 ;; Registers used:
  5655 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5661 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5662 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5663 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5664 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5665 ;;Total ram usage:        6 bytes
  5666 ;; Hardware stack levels used:    1
  5667 ;; Hardware stack levels required when called:    3
  5668 ;; This function calls:
  5669 ;;		Nothing
  5670 ;; This function is called by:
  5671 ;;		_drawtext
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           	psect	text18
  5676  001EE0                     __ptext18:
  5677                           	opt stack 0
  5678  001EE0                     _strlen:
  5679                           	opt stack 25
  5680                           
  5681                           ; BSR set to: 0
  5682                           ;incstack = 0
  5683  001EE0  C011  F015         	movff	strlen@s,strlen@cp
  5684  001EE4  C012  F016         	movff	strlen@s+1,strlen@cp+1
  5685  001EE8  D003               	goto	l5771
  5686  001EEA                     l5769:
  5687  001EEA  4A15               	infsnz	strlen@cp,f,c
  5688  001EEC  2A16               	incf	strlen@cp+1,f,c
  5689  001EEE  D000               	goto	l5771
  5690  001EF0                     l5771:
  5691  001EF0  C015  FFD9         	movff	strlen@cp,fsr2l
  5692  001EF4  C016  FFDA         	movff	strlen@cp+1,fsr2h
  5693  001EF8  50DF               	movf	indf2,w,c
  5694  001EFA  A4D8               	btfss	status,2,c
  5695  001EFC  D7F6               	goto	l5769
  5696  001EFE  C011  F013         	movff	strlen@s,??_strlen
  5697  001F02  C012  F014         	movff	strlen@s+1,??_strlen+1
  5698  001F06  1E13               	comf	??_strlen,f,c
  5699  001F08  1E14               	comf	??_strlen+1,f,c
  5700  001F0A  4A13               	infsnz	??_strlen,f,c
  5701  001F0C  2A14               	incf	??_strlen+1,f,c
  5702  001F0E  5015               	movf	strlen@cp,w,c
  5703  001F10  2413               	addwf	??_strlen,w,c
  5704  001F12  6E11               	movwf	?_strlen,c
  5705  001F14  5016               	movf	strlen@cp+1,w,c
  5706  001F16  2014               	addwfc	??_strlen+1,w,c
  5707  001F18  6E12               	movwf	?_strlen+1,c
  5708  001F1A  D000               	goto	l1425
  5709  001F1C                     l1425:
  5710  001F1C  0012               	return		;funcret
  5711  001F1E                     __end_of_strlen:
  5712                           	opt stack 0
  5713                           tblptru	equ	0xFF8
  5714                           tblptrh	equ	0xFF7
  5715                           tblptrl	equ	0xFF6
  5716                           tablat	equ	0xFF5
  5717                           prodh	equ	0xFF4
  5718                           prodl	equ	0xFF3
  5719                           intcon	equ	0xFF2
  5720                           intcon2	equ	0xFF1
  5721                           postinc0	equ	0xFEE
  5722                           wreg	equ	0xFE8
  5723                           postdec1	equ	0xFE5
  5724                           fsr1l	equ	0xFE1
  5725                           indf2	equ	0xFDF
  5726                           postinc2	equ	0xFDE
  5727                           postdec2	equ	0xFDD
  5728                           fsr2h	equ	0xFDA
  5729                           fsr2l	equ	0xFD9
  5730                           status	equ	0xFD8
  5731                           
  5732 ;; *************** function _drawChar *****************
  5733 ;; Defined at:
  5734 ;;		line 448 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/ST7735_TFT.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;  x               1    wreg     unsigned char 
  5737 ;;  y               1   45[COMRAM] unsigned char 
  5738 ;;  c               1   46[COMRAM] unsigned char 
  5739 ;;  color           2   47[COMRAM] unsigned int 
  5740 ;;  bg              2   49[COMRAM] unsigned int 
  5741 ;;  size            1   51[COMRAM] unsigned char 
  5742 ;; Auto vars:     Size  Location     Type
  5743 ;;  x               1   53[COMRAM] unsigned char 
  5744 ;;  line            1   52[COMRAM] unsigned char 
  5745 ;;  i               1   55[COMRAM] unsigned char 
  5746 ;;  j               1   54[COMRAM] unsigned char 
  5747 ;; Return value:  Size  Location     Type
  5748 ;;		None               void
  5749 ;; Registers used:
  5750 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5751 ;; Tracked objects:
  5752 ;;		On entry : 0/0
  5753 ;;		On exit  : 0/0
  5754 ;;		Unchanged: 0/0
  5755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5756 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5757 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5759 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5760 ;;Total ram usage:       11 bytes
  5761 ;; Hardware stack levels used:    1
  5762 ;; Hardware stack levels required when called:    8
  5763 ;; This function calls:
  5764 ;;		___wmul
  5765 ;;		_drawPixel
  5766 ;;		_fillRect
  5767 ;; This function is called by:
  5768 ;;		_drawtext
  5769 ;; This function uses a non-reentrant model
  5770 ;;
  5771                           
  5772                           	psect	text19
  5773  000EA6                     __ptext19:
  5774                           	opt stack 0
  5775  000EA6                     _drawChar:
  5776                           	opt stack 20
  5777                           
  5778                           ;incstack = 0
  5779                           ;drawChar@x stored from wreg
  5780  000EA6  6E36               	movwf	drawChar@x,c
  5781                           
  5782                           ;ST7735_TFT.c: 450: char i, j;
  5783                           ;ST7735_TFT.c: 451: if((x >= 128) || (y >= 160))
  5784  000EA8  0E80               	movlw	128
  5785  000EAA  6036               	cpfslt	drawChar@x,c
  5786  000EAC  D0A6               	goto	l394
  5787  000EAE  0E9F               	movlw	159
  5788  000EB0  642E               	cpfsgt	drawChar@y,c
  5789  000EB2  D001               	goto	l5717
  5790                           
  5791                           ;ST7735_TFT.c: 452: return;
  5792  000EB4  D0A2               	goto	l394
  5793  000EB6                     l5717:
  5794                           
  5795                           ;ST7735_TFT.c: 453: if(size < 1) size = 1;
  5796  000EB6  5034               	movf	drawChar@size,w,c
  5797  000EB8  A4D8               	btfss	status,2,c
  5798  000EBA  D003               	goto	l5721
  5799  000EBC  0E01               	movlw	1
  5800  000EBE  6E34               	movwf	drawChar@size,c
  5801  000EC0  D000               	goto	l5721
  5802  000EC2                     l5721:
  5803                           
  5804                           ;ST7735_TFT.c: 454: if((c < ' ') || (c > '~'))
  5805  000EC2  0E1F               	movlw	31
  5806  000EC4  642F               	cpfsgt	drawChar@c,c
  5807  000EC6  D004               	goto	l5725
  5808  000EC8  0E7E               	movlw	126
  5809  000ECA  642F               	cpfsgt	drawChar@c,c
  5810  000ECC  D003               	goto	l396
  5811  000ECE  D000               	goto	l5725
  5812  000ED0                     l5725:
  5813                           
  5814                           ;ST7735_TFT.c: 455: c = '?';
  5815  000ED0  0E3F               	movlw	63
  5816  000ED2  6E2F               	movwf	drawChar@c,c
  5817  000ED4                     l396:
  5818                           
  5819                           ;ST7735_TFT.c: 456: for(i=0; i<5; i++ ) {
  5820  000ED4  0E00               	movlw	0
  5821  000ED6  6E38               	movwf	drawChar@i,c
  5822  000ED8                     l5727:
  5823  000ED8  0E04               	movlw	4
  5824  000EDA  6438               	cpfsgt	drawChar@i,c
  5825  000EDC  D001               	goto	l5731
  5826  000EDE  D08D               	goto	l394
  5827  000EE0                     l5731:
  5828                           
  5829                           ;ST7735_TFT.c: 457: unsigned char line;
  5830                           ;ST7735_TFT.c: 458: if(c < 'S')
  5831  000EE0  0E53               	movlw	83
  5832  000EE2  602F               	cpfslt	drawChar@c,c
  5833  000EE4  D015               	goto	l5735
  5834                           
  5835                           ;ST7735_TFT.c: 459: line = font[(c - 32)*5 + i];
  5836  000EE6  0EE0               	movlw	224
  5837  000EE8  242F               	addwf	drawChar@c,w,c
  5838  000EEA  6E11               	movwf	___wmul@multiplier,c
  5839  000EEC  6A12               	clrf	___wmul@multiplier+1,c
  5840  000EEE  0EFF               	movlw	255
  5841  000EF0  2212               	addwfc	___wmul@multiplier+1,f,c
  5842  000EF2  0E00               	movlw	0
  5843  000EF4  6E14               	movwf	___wmul@multiplicand+1,c
  5844  000EF6  0E05               	movlw	5
  5845  000EF8  6E13               	movwf	___wmul@multiplicand,c
  5846  000EFA  EC31  F010         	call	___wmul	;wreg free
  5847  000EFE  5038               	movf	drawChar@i,w,c
  5848  000F00  2611               	addwf	?___wmul,f,c
  5849  000F02  0E00               	movlw	0
  5850  000F04  2212               	addwfc	?___wmul+1,f,c
  5851  000F06  0E0D               	movlw	low _font
  5852  000F08  2411               	addwf	?___wmul,w,c
  5853  000F0A  6EF6               	movwf	tblptrl,c
  5854  000F0C  0EFD               	movlw	high _font
  5855  000F0E  D014               	goto	L3
  5856  000F10                     l5735:
  5857                           
  5858                           ;ST7735_TFT.c: 460: else
  5859                           ;ST7735_TFT.c: 461: line = font2[(c - 'S')*5 + i];
  5860  000F10  0EAD               	movlw	173
  5861  000F12  242F               	addwf	drawChar@c,w,c
  5862  000F14  6E11               	movwf	___wmul@multiplier,c
  5863  000F16  6A12               	clrf	___wmul@multiplier+1,c
  5864  000F18  0EFF               	movlw	255
  5865  000F1A  2212               	addwfc	___wmul@multiplier+1,f,c
  5866  000F1C  0E00               	movlw	0
  5867  000F1E  6E14               	movwf	___wmul@multiplicand+1,c
  5868  000F20  0E05               	movlw	5
  5869  000F22  6E13               	movwf	___wmul@multiplicand,c
  5870  000F24  EC31  F010         	call	___wmul	;wreg free
  5871  000F28  5038               	movf	drawChar@i,w,c
  5872  000F2A  2611               	addwf	?___wmul,f,c
  5873  000F2C  0E00               	movlw	0
  5874  000F2E  2212               	addwfc	?___wmul+1,f,c
  5875  000F30  0E0C               	movlw	low _font2
  5876  000F32  2411               	addwf	?___wmul,w,c
  5877  000F34  6EF6               	movwf	tblptrl,c
  5878  000F36  0EFE               	movlw	high _font2
  5879  000F38                     L3:
  5880  000F38  2012               	addwfc	?___wmul+1,w,c
  5881  000F3A  6EF7               	movwf	tblptrh,c
  5882  000F3C                     	if	0	;There are less than 3 active tblptr bytes
  5883  000F3C                     	endif
  5884  000F3C  0008               	tblrd		*
  5885  000F3E  CFF5 F035          	movff	tablat,drawChar@line
  5886  000F42  D000               	goto	l5737
  5887  000F44                     l5737:
  5888                           
  5889                           ;ST7735_TFT.c: 462: for(j=0; j<7; j++, line >>= 1) {
  5890  000F44  0E00               	movlw	0
  5891  000F46  6E37               	movwf	drawChar@j,c
  5892  000F48                     l5739:
  5893  000F48  0E06               	movlw	6
  5894  000F4A  6437               	cpfsgt	drawChar@j,c
  5895  000F4C  D001               	goto	l403
  5896  000F4E  D053               	goto	l5763
  5897  000F50                     l403:
  5898                           
  5899                           ;ST7735_TFT.c: 463: if(line & 0x01) {
  5900  000F50  A035               	btfss	drawChar@line,0,c
  5901  000F52  D023               	goto	l5749
  5902                           
  5903                           ;ST7735_TFT.c: 464: if(size == 1) drawPixel(x+i, y+j, color);
  5904  000F54  0434               	decf	drawChar@size,w,c
  5905  000F56  A4D8               	btfss	status,2,c
  5906  000F58  D00C               	goto	l5747
  5907  000F5A  502E               	movf	drawChar@y,w,c
  5908  000F5C  2437               	addwf	drawChar@j,w,c
  5909  000F5E  6E18               	movwf	drawPixel@y,c
  5910  000F60  C030  F019         	movff	drawChar@color,drawPixel@color
  5911  000F64  C031  F01A         	movff	drawChar@color+1,drawPixel@color+1
  5912  000F68  5036               	movf	drawChar@x,w,c
  5913  000F6A  2438               	addwf	drawChar@i,w,c
  5914  000F6C  EC04  F010         	call	_drawPixel
  5915  000F70  D03E               	goto	l5757
  5916  000F72                     l5747:
  5917                           
  5918                           ;ST7735_TFT.c: 465: else fillRect(x+(i*size), y+(j*size), size, size, color);
  5919  000F72  5037               	movf	drawChar@j,w,c
  5920  000F74  0234               	mulwf	drawChar@size,c
  5921  000F76  50F3               	movf	prodl,w,c
  5922  000F78  242E               	addwf	drawChar@y,w,c
  5923  000F7A  6E23               	movwf	fillRect@y,c
  5924  000F7C  C034  F024         	movff	drawChar@size,fillRect@w
  5925  000F80  C034  F025         	movff	drawChar@size,fillRect@h
  5926  000F84  C030  F026         	movff	drawChar@color,fillRect@color
  5927  000F88  C031  F027         	movff	drawChar@color+1,fillRect@color+1
  5928  000F8C  5038               	movf	drawChar@i,w,c
  5929  000F8E  0234               	mulwf	drawChar@size,c
  5930  000F90  50F3               	movf	prodl,w,c
  5931  000F92  2436               	addwf	drawChar@x,w,c
  5932  000F94  EC08  F00F         	call	_fillRect
  5933                           
  5934                           ;ST7735_TFT.c: 466: }
  5935  000F98  D02A               	goto	l5757
  5936  000F9A                     l5749:
  5937                           
  5938                           ;ST7735_TFT.c: 467: else if(bg != color) {
  5939  000F9A  5030               	movf	drawChar@color,w,c
  5940  000F9C  1832               	xorwf	drawChar@bg,w,c
  5941  000F9E  E104               	bnz	u4210
  5942  000FA0  5031               	movf	drawChar@color+1,w,c
  5943  000FA2  1833               	xorwf	drawChar@bg+1,w,c
  5944  000FA4  B4D8               	btfsc	status,2,c
  5945  000FA6  D023               	goto	l5757
  5946  000FA8                     u4210:
  5947                           
  5948                           ;ST7735_TFT.c: 468: if(size == 1) drawPixel(x+i, y+j, bg);
  5949  000FA8  0434               	decf	drawChar@size,w,c
  5950  000FAA  A4D8               	btfss	status,2,c
  5951  000FAC  D00C               	goto	l5755
  5952  000FAE  502E               	movf	drawChar@y,w,c
  5953  000FB0  2437               	addwf	drawChar@j,w,c
  5954  000FB2  6E18               	movwf	drawPixel@y,c
  5955  000FB4  C032  F019         	movff	drawChar@bg,drawPixel@color
  5956  000FB8  C033  F01A         	movff	drawChar@bg+1,drawPixel@color+1
  5957  000FBC  5036               	movf	drawChar@x,w,c
  5958  000FBE  2438               	addwf	drawChar@i,w,c
  5959  000FC0  EC04  F010         	call	_drawPixel
  5960  000FC4  D014               	goto	l5757
  5961  000FC6                     l5755:
  5962                           
  5963                           ;ST7735_TFT.c: 469: else fillRect(x+i*size, y+j*size, size, size, bg);
  5964  000FC6  5037               	movf	drawChar@j,w,c
  5965  000FC8  0234               	mulwf	drawChar@size,c
  5966  000FCA  50F3               	movf	prodl,w,c
  5967  000FCC  242E               	addwf	drawChar@y,w,c
  5968  000FCE  6E23               	movwf	fillRect@y,c
  5969  000FD0  C034  F024         	movff	drawChar@size,fillRect@w
  5970  000FD4  C034  F025         	movff	drawChar@size,fillRect@h
  5971  000FD8  C032  F026         	movff	drawChar@bg,fillRect@color
  5972  000FDC  C033  F027         	movff	drawChar@bg+1,fillRect@color+1
  5973  000FE0  5038               	movf	drawChar@i,w,c
  5974  000FE2  0234               	mulwf	drawChar@size,c
  5975  000FE4  50F3               	movf	prodl,w,c
  5976  000FE6  2436               	addwf	drawChar@x,w,c
  5977  000FE8  EC08  F00F         	call	_fillRect
  5978  000FEC  D000               	goto	l5757
  5979  000FEE                     l5757:
  5980  000FEE  2A37               	incf	drawChar@j,f,c
  5981  000FF0  90D8               	bcf	status,0,c
  5982  000FF2  3235               	rrcf	drawChar@line,f,c
  5983  000FF4  D7A9               	goto	l5739
  5984  000FF6                     l5763:
  5985  000FF6  2A38               	incf	drawChar@i,f,c
  5986  000FF8  D76F               	goto	l5727
  5987  000FFA                     l394:
  5988  000FFA  0012               	return		;funcret
  5989  000FFC                     __end_of_drawChar:
  5990                           	opt stack 0
  5991                           tblptru	equ	0xFF8
  5992                           tblptrh	equ	0xFF7
  5993                           tblptrl	equ	0xFF6
  5994                           tablat	equ	0xFF5
  5995                           prodh	equ	0xFF4
  5996                           prodl	equ	0xFF3
  5997                           intcon	equ	0xFF2
  5998                           intcon2	equ	0xFF1
  5999                           postinc0	equ	0xFEE
  6000                           wreg	equ	0xFE8
  6001                           postdec1	equ	0xFE5
  6002                           fsr1l	equ	0xFE1
  6003                           indf2	equ	0xFDF
  6004                           postinc2	equ	0xFDE
  6005                           postdec2	equ	0xFDD
  6006                           fsr2h	equ	0xFDA
  6007                           fsr2l	equ	0xFD9
  6008                           status	equ	0xFD8
  6009                           
  6010 ;; *************** function _fillRect *****************
  6011 ;; Defined at:
  6012 ;;		line 438 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/ST7735_TFT.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;  x               1    wreg     unsigned char 
  6015 ;;  y               1   34[COMRAM] unsigned char 
  6016 ;;  w               1   35[COMRAM] unsigned char 
  6017 ;;  h               1   36[COMRAM] unsigned char 
  6018 ;;  color           2   37[COMRAM] unsigned int 
  6019 ;; Auto vars:     Size  Location     Type
  6020 ;;  x               1   42[COMRAM] unsigned char 
  6021 ;;  i               2   43[COMRAM] int 
  6022 ;; Return value:  Size  Location     Type
  6023 ;;		None               void
  6024 ;; Registers used:
  6025 ;;		wreg, status,2, status,0, cstack
  6026 ;; Tracked objects:
  6027 ;;		On entry : 0/0
  6028 ;;		On exit  : 0/0
  6029 ;;		Unchanged: 0/0
  6030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6031 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6032 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6033 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6034 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6035 ;;Total ram usage:       11 bytes
  6036 ;; Hardware stack levels used:    1
  6037 ;; Hardware stack levels required when called:    7
  6038 ;; This function calls:
  6039 ;;		_drawFastVLine
  6040 ;; This function is called by:
  6041 ;;		_drawChar
  6042 ;; This function uses a non-reentrant model
  6043 ;;
  6044                           
  6045                           	psect	text20
  6046  001E10                     __ptext20:
  6047                           	opt stack 0
  6048  001E10                     _fillRect:
  6049                           	opt stack 20
  6050                           
  6051                           ;incstack = 0
  6052                           ;fillRect@x stored from wreg
  6053  001E10  6E2B               	movwf	fillRect@x,c
  6054                           
  6055                           ;ST7735_TFT.c: 440: signed int i;
  6056                           ;ST7735_TFT.c: 442: for (i = x; i < x + w; i++)
  6057  001E12  C02B  F02C         	movff	fillRect@x,fillRect@i
  6058  001E16  6A2D               	clrf	fillRect@i+1,c
  6059  001E18  D00E               	goto	l5417
  6060  001E1A                     l5413:
  6061                           
  6062                           ;ST7735_TFT.c: 443: {
  6063                           ;ST7735_TFT.c: 444: drawFastVLine(i, y, h, color);
  6064  001E1A  C023  F018         	movff	fillRect@y,drawFastVLine@y
  6065  001E1E  C025  F019         	movff	fillRect@h,drawFastVLine@h
  6066  001E22  C026  F01A         	movff	fillRect@color,drawFastVLine@color
  6067  001E26  C027  F01B         	movff	fillRect@color+1,drawFastVLine@color+1
  6068  001E2A  502C               	movf	fillRect@i,w,c
  6069  001E2C  EC67  F00C         	call	_drawFastVLine
  6070  001E30  4A2C               	infsnz	fillRect@i,f,c
  6071  001E32  2A2D               	incf	fillRect@i+1,f,c
  6072  001E34  D000               	goto	l5417
  6073  001E36                     l5417:
  6074  001E36  5024               	movf	fillRect@w,w,c
  6075  001E38  C02B  F028         	movff	fillRect@x,??_fillRect
  6076  001E3C  6A29               	clrf	(??_fillRect+1)& (0+255),c
  6077  001E3E  2628               	addwf	??_fillRect,f,c
  6078  001E40  0E00               	movlw	0
  6079  001E42  2229               	addwfc	??_fillRect+1,f,c
  6080  001E44  5028               	movf	??_fillRect,w,c
  6081  001E46  5C2C               	subwf	fillRect@i,w,c
  6082  001E48  502D               	movf	fillRect@i+1,w,c
  6083  001E4A  0A80               	xorlw	128
  6084  001E4C  6E2A               	movwf	(??_fillRect+2)& (0+255),c
  6085  001E4E  5029               	movf	??_fillRect+1,w,c
  6086  001E50  0A80               	xorlw	128
  6087  001E52  582A               	subwfb	(??_fillRect+2)& (0+255),w,c
  6088  001E54  A0D8               	btfss	status,0,c
  6089  001E56  D7E1               	goto	l5413
  6090  001E58  0012               	return		;funcret
  6091  001E5A                     __end_of_fillRect:
  6092                           	opt stack 0
  6093                           tblptru	equ	0xFF8
  6094                           tblptrh	equ	0xFF7
  6095                           tblptrl	equ	0xFF6
  6096                           tablat	equ	0xFF5
  6097                           prodh	equ	0xFF4
  6098                           prodl	equ	0xFF3
  6099                           intcon	equ	0xFF2
  6100                           intcon2	equ	0xFF1
  6101                           postinc0	equ	0xFEE
  6102                           wreg	equ	0xFE8
  6103                           postdec1	equ	0xFE5
  6104                           fsr1l	equ	0xFE1
  6105                           indf2	equ	0xFDF
  6106                           postinc2	equ	0xFDE
  6107                           postdec2	equ	0xFDD
  6108                           fsr2h	equ	0xFDA
  6109                           fsr2l	equ	0xFD9
  6110                           status	equ	0xFD8
  6111                           
  6112 ;; *************** function _drawFastVLine *****************
  6113 ;; Defined at:
  6114 ;;		line 417 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/ST7735_TFT.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;  x               1    wreg     unsigned char 
  6117 ;;  y               1   23[COMRAM] unsigned char 
  6118 ;;  h               1   24[COMRAM] unsigned char 
  6119 ;;  color           2   25[COMRAM] unsigned int 
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;  x               1   33[COMRAM] unsigned char 
  6122 ;;  lo              1   32[COMRAM] unsigned char 
  6123 ;;  hi              1   31[COMRAM] unsigned char 
  6124 ;; Return value:  Size  Location     Type
  6125 ;;		None               void
  6126 ;; Registers used:
  6127 ;;		wreg, status,2, status,0, cstack
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6133 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6134 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6135 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6136 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6137 ;;Total ram usage:       11 bytes
  6138 ;; Hardware stack levels used:    1
  6139 ;; Hardware stack levels required when called:    6
  6140 ;; This function calls:
  6141 ;;		_setAddrWindow
  6142 ;;		_spiwrite
  6143 ;; This function is called by:
  6144 ;;		_fillRect
  6145 ;;		_fillCircleHelper
  6146 ;;		_fillCircle
  6147 ;;		_drawRect
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           	psect	text21
  6152  0018CE                     __ptext21:
  6153                           	opt stack 0
  6154  0018CE                     _drawFastVLine:
  6155                           	opt stack 20
  6156                           
  6157                           ;incstack = 0
  6158                           ;drawFastVLine@x stored from wreg
  6159  0018CE  6E22               	movwf	drawFastVLine@x,c
  6160                           
  6161                           ;ST7735_TFT.c: 419: unsigned char hi, lo;
  6162                           ;ST7735_TFT.c: 420: if((x >= 128) || (y >= 160))
  6163  0018D0  0E80               	movlw	128
  6164  0018D2  6022               	cpfslt	drawFastVLine@x,c
  6165  0018D4  D03F               	goto	l378
  6166  0018D6  0E9F               	movlw	159
  6167  0018D8  6418               	cpfsgt	drawFastVLine@y,c
  6168  0018DA  D001               	goto	l5287
  6169                           
  6170                           ;ST7735_TFT.c: 421: return;
  6171  0018DC  D03B               	goto	l378
  6172  0018DE                     l5287:
  6173                           
  6174                           ;ST7735_TFT.c: 422: if((y + h - 1) >= 160)
  6175  0018DE  0EFF               	movlw	255
  6176  0018E0  6E1C               	movwf	??_drawFastVLine& (0+255),c
  6177  0018E2  0EFF               	movlw	255
  6178  0018E4  6E1D               	movwf	(??_drawFastVLine+1)& (0+255),c
  6179  0018E6  5019               	movf	drawFastVLine@h,w,c
  6180  0018E8  C018  F01E         	movff	drawFastVLine@y,??_drawFastVLine+2
  6181  0018EC  6A1F               	clrf	(??_drawFastVLine+3)& (0+255),c
  6182  0018EE  261E               	addwf	??_drawFastVLine+2,f,c
  6183  0018F0  0E00               	movlw	0
  6184  0018F2  221F               	addwfc	??_drawFastVLine+3,f,c
  6185  0018F4  501C               	movf	??_drawFastVLine,w,c
  6186  0018F6  261E               	addwf	??_drawFastVLine+2,f,c
  6187  0018F8  501D               	movf	??_drawFastVLine+1,w,c
  6188  0018FA  221F               	addwfc	??_drawFastVLine+3,f,c
  6189  0018FC  BE1F               	btfsc	??_drawFastVLine+3,7,c
  6190  0018FE  D00B               	goto	l5291
  6191  001900  501F               	movf	??_drawFastVLine+3,w,c
  6192  001902  E104               	bnz	u3720
  6193  001904  0EA0               	movlw	160
  6194  001906  5C1E               	subwf	??_drawFastVLine+2,w,c
  6195  001908  A0D8               	btfss	status,0,c
  6196  00190A  D005               	goto	l5291
  6197  00190C                     u3720:
  6198                           
  6199                           ;ST7735_TFT.c: 423: h = 160 - y;
  6200  00190C  5018               	movf	drawFastVLine@y,w,c
  6201  00190E  0800               	sublw	0
  6202  001910  0FA0               	addlw	160
  6203  001912  6E19               	movwf	drawFastVLine@h,c
  6204  001914  D000               	goto	l5291
  6205  001916                     l5291:
  6206                           
  6207                           ;ST7735_TFT.c: 424: hi = color >> 8; lo = color;
  6208  001916  501B               	movf	drawFastVLine@color+1,w,c
  6209  001918  6E20               	movwf	drawFastVLine@hi,c
  6210  00191A  C01A  F021         	movff	drawFastVLine@color,drawFastVLine@lo
  6211                           
  6212                           ;ST7735_TFT.c: 425: setAddrWindow(x, y, x, y + h - 1);
  6213  00191E  C018  F014         	movff	drawFastVLine@y,setAddrWindow@y0
  6214  001922  C022  F015         	movff	drawFastVLine@x,setAddrWindow@x1
  6215  001926  5018               	movf	drawFastVLine@y,w,c
  6216  001928  2419               	addwf	drawFastVLine@h,w,c
  6217  00192A  6E1C               	movwf	??_drawFastVLine& (0+255),c
  6218  00192C  041C               	decf	??_drawFastVLine,w,c
  6219  00192E  6E16               	movwf	setAddrWindow@y1,c
  6220  001930  5022               	movf	drawFastVLine@x,w,c
  6221  001932  EC94  F00E         	call	_setAddrWindow
  6222                           
  6223                           ;ST7735_TFT.c: 426: PORTDbits.RD3 = 1;
  6224  001936  8683               	bsf	3971,3,c	;volatile
  6225                           
  6226                           ;ST7735_TFT.c: 427: PORTDbits.RD4 = 0;
  6227  001938  9883               	bcf	3971,4,c	;volatile
  6228                           
  6229                           ;ST7735_TFT.c: 429: while (h--) {
  6230  00193A  D007               	goto	l5303
  6231  00193C                     l5301:
  6232                           
  6233                           ;ST7735_TFT.c: 430: spiwrite(hi);
  6234  00193C  5020               	movf	drawFastVLine@hi,w,c
  6235  00193E  EC02  F011         	call	_spiwrite
  6236                           
  6237                           ;ST7735_TFT.c: 431: spiwrite(lo);
  6238  001942  5021               	movf	drawFastVLine@lo,w,c
  6239  001944  EC02  F011         	call	_spiwrite
  6240  001948  D000               	goto	l5303
  6241  00194A                     l5303:
  6242  00194A  0619               	decf	drawFastVLine@h,f,c
  6243  00194C  2819               	incf	drawFastVLine@h,w,c
  6244  00194E  A4D8               	btfss	status,2,c
  6245  001950  D7F5               	goto	l5301
  6246                           
  6247                           ;ST7735_TFT.c: 432: }
  6248                           ;ST7735_TFT.c: 433: PORTDbits.RD4 = 1;
  6249  001952  8883               	bsf	3971,4,c	;volatile
  6250  001954                     l378:
  6251  001954  0012               	return		;funcret
  6252  001956                     __end_of_drawFastVLine:
  6253                           	opt stack 0
  6254                           tblptru	equ	0xFF8
  6255                           tblptrh	equ	0xFF7
  6256                           tblptrl	equ	0xFF6
  6257                           tablat	equ	0xFF5
  6258                           prodh	equ	0xFF4
  6259                           prodl	equ	0xFF3
  6260                           intcon	equ	0xFF2
  6261                           intcon2	equ	0xFF1
  6262                           postinc0	equ	0xFEE
  6263                           wreg	equ	0xFE8
  6264                           postdec1	equ	0xFE5
  6265                           fsr1l	equ	0xFE1
  6266                           indf2	equ	0xFDF
  6267                           postinc2	equ	0xFDE
  6268                           postdec2	equ	0xFDD
  6269                           fsr2h	equ	0xFDA
  6270                           fsr2l	equ	0xFD9
  6271                           status	equ	0xFD8
  6272                           
  6273 ;; *************** function _drawCircle *****************
  6274 ;; Defined at:
  6275 ;;		line 529 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/ST7735_TFT.c"
  6276 ;; Parameters:    Size  Location     Type
  6277 ;;  x0              2   27[COMRAM] int 
  6278 ;;  y0              2   29[COMRAM] int 
  6279 ;;  r               2   31[COMRAM] int 
  6280 ;;  color           2   33[COMRAM] unsigned int 
  6281 ;; Auto vars:     Size  Location     Type
  6282 ;;  y               2   45[COMRAM] int 
  6283 ;;  x               2   43[COMRAM] int 
  6284 ;;  f               2   41[COMRAM] int 
  6285 ;;  ddF_y           2   39[COMRAM] int 
  6286 ;;  ddF_x           2   37[COMRAM] int 
  6287 ;; Return value:  Size  Location     Type
  6288 ;;		None               void
  6289 ;; Registers used:
  6290 ;;		wreg, status,2, status,0, cstack
  6291 ;; Tracked objects:
  6292 ;;		On entry : 0/0
  6293 ;;		On exit  : 0/0
  6294 ;;		Unchanged: 0/0
  6295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6296 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6297 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6298 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6299 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6300 ;;Total ram usage:       20 bytes
  6301 ;; Hardware stack levels used:    1
  6302 ;; Hardware stack levels required when called:    7
  6303 ;; This function calls:
  6304 ;;		_drawPixel
  6305 ;; This function is called by:
  6306 ;;		_Initialize_Screen
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           
  6310                           	psect	text22
  6311  000B92                     __ptext22:
  6312                           	opt stack 0
  6313  000B92                     _drawCircle:
  6314                           	opt stack 22
  6315                           
  6316                           ;ST7735_TFT.c: 531: signed int f, ddF_x, ddF_y, x, y;
  6317                           ;ST7735_TFT.c: 532: f = 1 - r, ddF_x = 1, ddF_y = -2 * r, x = 0, y = r;
  6318                           
  6319                           ;incstack = 0
  6320  000B92  C020  F024         	movff	drawCircle@r,??_drawCircle
  6321  000B96  C021  F025         	movff	drawCircle@r+1,??_drawCircle+1
  6322  000B9A  1E24               	comf	??_drawCircle,f,c
  6323  000B9C  1E25               	comf	??_drawCircle+1,f,c
  6324  000B9E  4A24               	infsnz	??_drawCircle,f,c
  6325  000BA0  2A25               	incf	??_drawCircle+1,f,c
  6326  000BA2  0E01               	movlw	1
  6327  000BA4  2424               	addwf	??_drawCircle,w,c
  6328  000BA6  6E2A               	movwf	drawCircle@f,c
  6329  000BA8  0E00               	movlw	0
  6330  000BAA  2025               	addwfc	??_drawCircle+1,w,c
  6331  000BAC  6E2B               	movwf	drawCircle@f+1,c
  6332  000BAE  0E00               	movlw	0
  6333  000BB0  6E27               	movwf	drawCircle@ddF_x+1,c
  6334  000BB2  0E01               	movlw	1
  6335  000BB4  6E26               	movwf	drawCircle@ddF_x,c
  6336  000BB6  C020  F024         	movff	drawCircle@r,??_drawCircle
  6337  000BBA  C021  F025         	movff	drawCircle@r+1,??_drawCircle+1
  6338  000BBE  90D8               	bcf	status,0,c
  6339  000BC0  3624               	rlcf	??_drawCircle,f,c
  6340  000BC2  3625               	rlcf	??_drawCircle+1,f,c
  6341  000BC4  1E24               	comf	??_drawCircle,f,c
  6342  000BC6  1E25               	comf	??_drawCircle+1,f,c
  6343  000BC8  4A24               	infsnz	??_drawCircle,f,c
  6344  000BCA  2A25               	incf	??_drawCircle+1,f,c
  6345  000BCC  C024  F028         	movff	??_drawCircle,drawCircle@ddF_y
  6346  000BD0  C025  F029         	movff	??_drawCircle+1,drawCircle@ddF_y+1
  6347  000BD4  0E00               	movlw	0
  6348  000BD6  6E2D               	movwf	drawCircle@x+1,c
  6349  000BD8  0E00               	movlw	0
  6350  000BDA  6E2C               	movwf	drawCircle@x,c
  6351  000BDC  C020  F02E         	movff	drawCircle@r,drawCircle@y
  6352  000BE0  C021  F02F         	movff	drawCircle@r+1,drawCircle@y+1
  6353                           
  6354                           ;ST7735_TFT.c: 533: drawPixel(x0 , y0 + r, color);
  6355  000BE4  501E               	movf	drawCircle@y0,w,c
  6356  000BE6  2420               	addwf	drawCircle@r,w,c
  6357  000BE8  6E18               	movwf	drawPixel@y,c
  6358  000BEA  C022  F019         	movff	drawCircle@color,drawPixel@color
  6359  000BEE  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  6360  000BF2  501C               	movf	drawCircle@x0,w,c
  6361  000BF4  EC04  F010         	call	_drawPixel
  6362                           
  6363                           ;ST7735_TFT.c: 534: drawPixel(x0 , y0 - r, color);
  6364  000BF8  5020               	movf	drawCircle@r,w,c
  6365  000BFA  0800               	sublw	0
  6366  000BFC  241E               	addwf	drawCircle@y0,w,c
  6367  000BFE  6E18               	movwf	drawPixel@y,c
  6368  000C00  C022  F019         	movff	drawCircle@color,drawPixel@color
  6369  000C04  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  6370  000C08  501C               	movf	drawCircle@x0,w,c
  6371  000C0A  EC04  F010         	call	_drawPixel
  6372                           
  6373                           ;ST7735_TFT.c: 535: drawPixel(x0+r, y0 , color);
  6374  000C0E  C01E  F018         	movff	drawCircle@y0,drawPixel@y
  6375  000C12  C022  F019         	movff	drawCircle@color,drawPixel@color
  6376  000C16  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  6377  000C1A  501C               	movf	drawCircle@x0,w,c
  6378  000C1C  2420               	addwf	drawCircle@r,w,c
  6379  000C1E  EC04  F010         	call	_drawPixel
  6380                           
  6381                           ;ST7735_TFT.c: 536: drawPixel(x0-r, y0 , color);
  6382  000C22  C01E  F018         	movff	drawCircle@y0,drawPixel@y
  6383  000C26  C022  F019         	movff	drawCircle@color,drawPixel@color
  6384  000C2A  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  6385  000C2E  5020               	movf	drawCircle@r,w,c
  6386  000C30  0800               	sublw	0
  6387  000C32  241C               	addwf	drawCircle@x0,w,c
  6388  000C34  EC04  F010         	call	_drawPixel
  6389                           
  6390                           ;ST7735_TFT.c: 537: while (x < y) {
  6391  000C38  D078               	goto	l6045
  6392  000C3A                     l6017:
  6393                           
  6394                           ;ST7735_TFT.c: 538: if (f >= 0) {
  6395  000C3A  BE2B               	btfsc	drawCircle@f+1,7,c
  6396  000C3C  D00B               	goto	l442
  6397                           
  6398                           ;ST7735_TFT.c: 539: y--;
  6399  000C3E  062E               	decf	drawCircle@y,f,c
  6400  000C40  A0D8               	btfss	status,0,c
  6401  000C42  062F               	decf	drawCircle@y+1,f,c
  6402                           
  6403                           ;ST7735_TFT.c: 540: ddF_y += 2;
  6404  000C44  0E02               	movlw	2
  6405  000C46  2628               	addwf	drawCircle@ddF_y,f,c
  6406  000C48  0E00               	movlw	0
  6407  000C4A  2229               	addwfc	drawCircle@ddF_y+1,f,c
  6408                           
  6409                           ;ST7735_TFT.c: 541: f += ddF_y;
  6410  000C4C  5028               	movf	drawCircle@ddF_y,w,c
  6411  000C4E  262A               	addwf	drawCircle@f,f,c
  6412  000C50  5029               	movf	drawCircle@ddF_y+1,w,c
  6413  000C52  222B               	addwfc	drawCircle@f+1,f,c
  6414  000C54                     l442:
  6415                           
  6416                           ;ST7735_TFT.c: 542: }
  6417                           ;ST7735_TFT.c: 543: x++;
  6418  000C54  4A2C               	infsnz	drawCircle@x,f,c
  6419  000C56  2A2D               	incf	drawCircle@x+1,f,c
  6420                           
  6421                           ;ST7735_TFT.c: 544: ddF_x += 2;
  6422  000C58  0E02               	movlw	2
  6423  000C5A  2626               	addwf	drawCircle@ddF_x,f,c
  6424  000C5C  0E00               	movlw	0
  6425  000C5E  2227               	addwfc	drawCircle@ddF_x+1,f,c
  6426                           
  6427                           ;ST7735_TFT.c: 545: f += ddF_x;
  6428  000C60  5026               	movf	drawCircle@ddF_x,w,c
  6429  000C62  262A               	addwf	drawCircle@f,f,c
  6430  000C64  5027               	movf	drawCircle@ddF_x+1,w,c
  6431  000C66  222B               	addwfc	drawCircle@f+1,f,c
  6432                           
  6433                           ;ST7735_TFT.c: 546: drawPixel(x0 + x, y0 + y, color);
  6434  000C68  501E               	movf	drawCircle@y0,w,c
  6435  000C6A  242E               	addwf	drawCircle@y,w,c
  6436  000C6C  6E18               	movwf	drawPixel@y,c
  6437  000C6E  C022  F019         	movff	drawCircle@color,drawPixel@color
  6438  000C72  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  6439  000C76  501C               	movf	drawCircle@x0,w,c
  6440  000C78  242C               	addwf	drawCircle@x,w,c
  6441  000C7A  EC04  F010         	call	_drawPixel
  6442                           
  6443                           ;ST7735_TFT.c: 547: drawPixel(x0 - x, y0 + y, color);
  6444  000C7E  501E               	movf	drawCircle@y0,w,c
  6445  000C80  242E               	addwf	drawCircle@y,w,c
  6446  000C82  6E18               	movwf	drawPixel@y,c
  6447  000C84  C022  F019         	movff	drawCircle@color,drawPixel@color
  6448  000C88  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  6449  000C8C  502C               	movf	drawCircle@x,w,c
  6450  000C8E  0800               	sublw	0
  6451  000C90  241C               	addwf	drawCircle@x0,w,c
  6452  000C92  EC04  F010         	call	_drawPixel
  6453                           
  6454                           ;ST7735_TFT.c: 548: drawPixel(x0 + x, y0 - y, color);
  6455  000C96  502E               	movf	drawCircle@y,w,c
  6456  000C98  0800               	sublw	0
  6457  000C9A  241E               	addwf	drawCircle@y0,w,c
  6458  000C9C  6E18               	movwf	drawPixel@y,c
  6459  000C9E  C022  F019         	movff	drawCircle@color,drawPixel@color
  6460  000CA2  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  6461  000CA6  501C               	movf	drawCircle@x0,w,c
  6462  000CA8  242C               	addwf	drawCircle@x,w,c
  6463  000CAA  EC04  F010         	call	_drawPixel
  6464                           
  6465                           ;ST7735_TFT.c: 549: drawPixel(x0 - x, y0 - y, color);
  6466  000CAE  502E               	movf	drawCircle@y,w,c
  6467  000CB0  0800               	sublw	0
  6468  000CB2  241E               	addwf	drawCircle@y0,w,c
  6469  000CB4  6E18               	movwf	drawPixel@y,c
  6470  000CB6  C022  F019         	movff	drawCircle@color,drawPixel@color
  6471  000CBA  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  6472  000CBE  502C               	movf	drawCircle@x,w,c
  6473  000CC0  0800               	sublw	0
  6474  000CC2  241C               	addwf	drawCircle@x0,w,c
  6475  000CC4  EC04  F010         	call	_drawPixel
  6476                           
  6477                           ;ST7735_TFT.c: 550: drawPixel(x0 + y, y0 + x, color);
  6478  000CC8  501E               	movf	drawCircle@y0,w,c
  6479  000CCA  242C               	addwf	drawCircle@x,w,c
  6480  000CCC  6E18               	movwf	drawPixel@y,c
  6481  000CCE  C022  F019         	movff	drawCircle@color,drawPixel@color
  6482  000CD2  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  6483  000CD6  501C               	movf	drawCircle@x0,w,c
  6484  000CD8  242E               	addwf	drawCircle@y,w,c
  6485  000CDA  EC04  F010         	call	_drawPixel
  6486                           
  6487                           ;ST7735_TFT.c: 551: drawPixel(x0 - y, y0 + x, color);
  6488  000CDE  501E               	movf	drawCircle@y0,w,c
  6489  000CE0  242C               	addwf	drawCircle@x,w,c
  6490  000CE2  6E18               	movwf	drawPixel@y,c
  6491  000CE4  C022  F019         	movff	drawCircle@color,drawPixel@color
  6492  000CE8  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  6493  000CEC  502E               	movf	drawCircle@y,w,c
  6494  000CEE  0800               	sublw	0
  6495  000CF0  241C               	addwf	drawCircle@x0,w,c
  6496  000CF2  EC04  F010         	call	_drawPixel
  6497                           
  6498                           ;ST7735_TFT.c: 552: drawPixel(x0 + y, y0 - x, color);
  6499  000CF6  502C               	movf	drawCircle@x,w,c
  6500  000CF8  0800               	sublw	0
  6501  000CFA  241E               	addwf	drawCircle@y0,w,c
  6502  000CFC  6E18               	movwf	drawPixel@y,c
  6503  000CFE  C022  F019         	movff	drawCircle@color,drawPixel@color
  6504  000D02  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  6505  000D06  501C               	movf	drawCircle@x0,w,c
  6506  000D08  242E               	addwf	drawCircle@y,w,c
  6507  000D0A  EC04  F010         	call	_drawPixel
  6508                           
  6509                           ;ST7735_TFT.c: 553: drawPixel(x0 - y, y0 - x, color);
  6510  000D0E  502C               	movf	drawCircle@x,w,c
  6511  000D10  0800               	sublw	0
  6512  000D12  241E               	addwf	drawCircle@y0,w,c
  6513  000D14  6E18               	movwf	drawPixel@y,c
  6514  000D16  C022  F019         	movff	drawCircle@color,drawPixel@color
  6515  000D1A  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  6516  000D1E  502E               	movf	drawCircle@y,w,c
  6517  000D20  0800               	sublw	0
  6518  000D22  241C               	addwf	drawCircle@x0,w,c
  6519  000D24  EC04  F010         	call	_drawPixel
  6520  000D28  D000               	goto	l6045
  6521  000D2A                     l6045:
  6522  000D2A  502E               	movf	drawCircle@y,w,c
  6523  000D2C  5C2C               	subwf	drawCircle@x,w,c
  6524  000D2E  502D               	movf	drawCircle@x+1,w,c
  6525  000D30  0A80               	xorlw	128
  6526  000D32  6E24               	movwf	??_drawCircle& (0+255),c
  6527  000D34  502F               	movf	drawCircle@y+1,w,c
  6528  000D36  0A80               	xorlw	128
  6529  000D38  5824               	subwfb	??_drawCircle& (0+255),w,c
  6530  000D3A  A0D8               	btfss	status,0,c
  6531  000D3C  D77E               	goto	l6017
  6532  000D3E  0012               	return		;funcret
  6533  000D40                     __end_of_drawCircle:
  6534                           	opt stack 0
  6535                           tblptru	equ	0xFF8
  6536                           tblptrh	equ	0xFF7
  6537                           tblptrl	equ	0xFF6
  6538                           tablat	equ	0xFF5
  6539                           prodh	equ	0xFF4
  6540                           prodl	equ	0xFF3
  6541                           intcon	equ	0xFF2
  6542                           intcon2	equ	0xFF1
  6543                           postinc0	equ	0xFEE
  6544                           wreg	equ	0xFE8
  6545                           postdec1	equ	0xFE5
  6546                           fsr1l	equ	0xFE1
  6547                           indf2	equ	0xFDF
  6548                           postinc2	equ	0xFDE
  6549                           postdec2	equ	0xFDD
  6550                           fsr2h	equ	0xFDA
  6551                           fsr2l	equ	0xFD9
  6552                           status	equ	0xFD8
  6553                           
  6554 ;; *************** function _drawPixel *****************
  6555 ;; Defined at:
  6556 ;;		line 408 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/ST7735_TFT.c"
  6557 ;; Parameters:    Size  Location     Type
  6558 ;;  x               1    wreg     unsigned char 
  6559 ;;  y               1   23[COMRAM] unsigned char 
  6560 ;;  color           2   24[COMRAM] unsigned int 
  6561 ;; Auto vars:     Size  Location     Type
  6562 ;;  x               1   26[COMRAM] unsigned char 
  6563 ;; Return value:  Size  Location     Type
  6564 ;;		None               void
  6565 ;; Registers used:
  6566 ;;		wreg, status,2, status,0, cstack
  6567 ;; Tracked objects:
  6568 ;;		On entry : 0/0
  6569 ;;		On exit  : 0/0
  6570 ;;		Unchanged: 0/0
  6571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6572 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6573 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6575 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6576 ;;Total ram usage:        4 bytes
  6577 ;; Hardware stack levels used:    1
  6578 ;; Hardware stack levels required when called:    6
  6579 ;; This function calls:
  6580 ;;		_setAddrWindow
  6581 ;;		_write_data
  6582 ;; This function is called by:
  6583 ;;		_drawChar
  6584 ;;		_drawCircle
  6585 ;;		_drawCircleHelper
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           
  6589                           	psect	text23
  6590  002008                     __ptext23:
  6591                           	opt stack 0
  6592  002008                     _drawPixel:
  6593                           	opt stack 21
  6594                           
  6595                           ;incstack = 0
  6596                           ;drawPixel@x stored from wreg
  6597  002008  6E1B               	movwf	drawPixel@x,c
  6598                           
  6599                           ;ST7735_TFT.c: 410: if((x >= 128) || (y >= 160))
  6600  00200A  0E80               	movlw	128
  6601  00200C  601B               	cpfslt	drawPixel@x,c
  6602  00200E  D013               	goto	l372
  6603  002010  0E9F               	movlw	159
  6604  002012  6418               	cpfsgt	drawPixel@y,c
  6605  002014  D001               	goto	l5405
  6606                           
  6607                           ;ST7735_TFT.c: 411: return;
  6608  002016  D00F               	goto	l372
  6609  002018                     l5405:
  6610                           
  6611                           ;ST7735_TFT.c: 412: setAddrWindow(x,y,x+1,y+1);
  6612  002018  C018  F014         	movff	drawPixel@y,setAddrWindow@y0
  6613  00201C  281B               	incf	drawPixel@x,w,c
  6614  00201E  6E15               	movwf	setAddrWindow@x1,c
  6615  002020  2818               	incf	drawPixel@y,w,c
  6616  002022  6E16               	movwf	setAddrWindow@y1,c
  6617  002024  501B               	movf	drawPixel@x,w,c
  6618  002026  EC94  F00E         	call	_setAddrWindow
  6619                           
  6620                           ;ST7735_TFT.c: 413: write_data(color >> 8);
  6621  00202A  501A               	movf	drawPixel@color+1,w,c
  6622  00202C  EC4D  F011         	call	_write_data
  6623                           
  6624                           ;ST7735_TFT.c: 414: write_data(color & 0xFF);
  6625  002030  5019               	movf	drawPixel@color,w,c
  6626  002032  EC4D  F011         	call	_write_data
  6627  002036                     l372:
  6628  002036  0012               	return		;funcret
  6629  002038                     __end_of_drawPixel:
  6630                           	opt stack 0
  6631                           tblptru	equ	0xFF8
  6632                           tblptrh	equ	0xFF7
  6633                           tblptrl	equ	0xFF6
  6634                           tablat	equ	0xFF5
  6635                           prodh	equ	0xFF4
  6636                           prodl	equ	0xFF3
  6637                           intcon	equ	0xFF2
  6638                           intcon2	equ	0xFF1
  6639                           postinc0	equ	0xFEE
  6640                           wreg	equ	0xFE8
  6641                           postdec1	equ	0xFE5
  6642                           fsr1l	equ	0xFE1
  6643                           indf2	equ	0xFDF
  6644                           postinc2	equ	0xFDE
  6645                           postdec2	equ	0xFDD
  6646                           fsr2h	equ	0xFDA
  6647                           fsr2l	equ	0xFD9
  6648                           status	equ	0xFD8
  6649                           
  6650 ;; *************** function _setAddrWindow *****************
  6651 ;; Defined at:
  6652 ;;		line 393 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/ST7735_TFT.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;  x0              1    wreg     unsigned char 
  6655 ;;  y0              1   19[COMRAM] unsigned char 
  6656 ;;  x1              1   20[COMRAM] unsigned char 
  6657 ;;  y1              1   21[COMRAM] unsigned char 
  6658 ;; Auto vars:     Size  Location     Type
  6659 ;;  x0              1   22[COMRAM] unsigned char 
  6660 ;; Return value:  Size  Location     Type
  6661 ;;		None               void
  6662 ;; Registers used:
  6663 ;;		wreg, status,2, status,0, cstack
  6664 ;; Tracked objects:
  6665 ;;		On entry : 0/0
  6666 ;;		On exit  : 0/0
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6669 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6670 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6672 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6673 ;;Total ram usage:        4 bytes
  6674 ;; Hardware stack levels used:    1
  6675 ;; Hardware stack levels required when called:    5
  6676 ;; This function calls:
  6677 ;;		_write_command
  6678 ;;		_write_data
  6679 ;; This function is called by:
  6680 ;;		_drawPixel
  6681 ;;		_drawFastVLine
  6682 ;;		_fillRectangle
  6683 ;;		_drawFastHLine
  6684 ;; This function uses a non-reentrant model
  6685 ;;
  6686                           
  6687                           	psect	text24
  6688  001D28                     __ptext24:
  6689                           	opt stack 0
  6690  001D28                     _setAddrWindow:
  6691                           	opt stack 20
  6692                           
  6693                           ;incstack = 0
  6694                           ;setAddrWindow@x0 stored from wreg
  6695  001D28  6E17               	movwf	setAddrWindow@x0,c
  6696                           
  6697                           ;ST7735_TFT.c: 395: write_command(0x2A);
  6698  001D2A  0E2A               	movlw	42
  6699  001D2C  EC55  F011         	call	_write_command
  6700                           
  6701                           ;ST7735_TFT.c: 396: write_data(0);
  6702  001D30  0E00               	movlw	0
  6703  001D32  EC4D  F011         	call	_write_data
  6704                           
  6705                           ;ST7735_TFT.c: 397: write_data(x0 + colstart);
  6706  001D36  5017               	movf	setAddrWindow@x0,w,c
  6707  001D38  2459               	addwf	_colstart,w,c
  6708  001D3A  EC4D  F011         	call	_write_data
  6709                           
  6710                           ;ST7735_TFT.c: 398: write_data(0);
  6711  001D3E  0E00               	movlw	0
  6712  001D40  EC4D  F011         	call	_write_data
  6713                           
  6714                           ;ST7735_TFT.c: 399: write_data(x1 + colstart);
  6715  001D44  5015               	movf	setAddrWindow@x1,w,c
  6716  001D46  2459               	addwf	_colstart,w,c
  6717  001D48  EC4D  F011         	call	_write_data
  6718                           
  6719                           ;ST7735_TFT.c: 400: write_command(0x2B);
  6720  001D4C  0E2B               	movlw	43
  6721  001D4E  EC55  F011         	call	_write_command
  6722                           
  6723                           ;ST7735_TFT.c: 401: write_data(0);
  6724  001D52  0E00               	movlw	0
  6725  001D54  EC4D  F011         	call	_write_data
  6726                           
  6727                           ;ST7735_TFT.c: 402: write_data(y0 + rowstart);
  6728  001D58  5014               	movf	setAddrWindow@y0,w,c
  6729  001D5A  2461               	addwf	_rowstart,w,c
  6730  001D5C  EC4D  F011         	call	_write_data
  6731                           
  6732                           ;ST7735_TFT.c: 403: write_data(0);
  6733  001D60  0E00               	movlw	0
  6734  001D62  EC4D  F011         	call	_write_data
  6735                           
  6736                           ;ST7735_TFT.c: 404: write_data(y1 + rowstart);
  6737  001D66  5016               	movf	setAddrWindow@y1,w,c
  6738  001D68  2461               	addwf	_rowstart,w,c
  6739  001D6A  EC4D  F011         	call	_write_data
  6740                           
  6741                           ;ST7735_TFT.c: 405: write_command(0x2C);
  6742  001D6E  0E2C               	movlw	44
  6743  001D70  EC55  F011         	call	_write_command
  6744  001D74  0012               	return		;funcret
  6745  001D76                     __end_of_setAddrWindow:
  6746                           	opt stack 0
  6747                           tblptru	equ	0xFF8
  6748                           tblptrh	equ	0xFF7
  6749                           tblptrl	equ	0xFF6
  6750                           tablat	equ	0xFF5
  6751                           prodh	equ	0xFF4
  6752                           prodl	equ	0xFF3
  6753                           intcon	equ	0xFF2
  6754                           intcon2	equ	0xFF1
  6755                           postinc0	equ	0xFEE
  6756                           wreg	equ	0xFE8
  6757                           postdec1	equ	0xFE5
  6758                           fsr1l	equ	0xFE1
  6759                           indf2	equ	0xFDF
  6760                           postinc2	equ	0xFDE
  6761                           postdec2	equ	0xFDD
  6762                           fsr2h	equ	0xFDA
  6763                           fsr2l	equ	0xFD9
  6764                           status	equ	0xFD8
  6765                           
  6766 ;; *************** function _TFT_GreenTab_Initialize *****************
  6767 ;; Defined at:
  6768 ;;		line 645 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/ST7735_TFT.c"
  6769 ;; Parameters:    Size  Location     Type
  6770 ;;		None
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;		None
  6773 ;; Return value:  Size  Location     Type
  6774 ;;		None               void
  6775 ;; Registers used:
  6776 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6777 ;; Tracked objects:
  6778 ;;		On entry : 0/0
  6779 ;;		On exit  : 0/0
  6780 ;;		Unchanged: 0/0
  6781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6786 ;;Total ram usage:        0 bytes
  6787 ;; Hardware stack levels used:    1
  6788 ;; Hardware stack levels required when called:    6
  6789 ;; This function calls:
  6790 ;;		_Rcmd1
  6791 ;;		_Rcmd2red
  6792 ;;		_Rcmd3
  6793 ;;		_write_command
  6794 ;;		_write_data
  6795 ;; This function is called by:
  6796 ;;		_Initialize_Screen
  6797 ;; This function uses a non-reentrant model
  6798 ;;
  6799                           
  6800                           	psect	text25
  6801  002038                     __ptext25:
  6802                           	opt stack 0
  6803  002038                     _TFT_GreenTab_Initialize:
  6804                           	opt stack 23
  6805                           
  6806                           ;ST7735_TFT.c: 647: PORTDbits.RD4 = 1;
  6807                           
  6808                           ;incstack = 0
  6809  002038  8883               	bsf	3971,4,c	;volatile
  6810                           
  6811                           ;ST7735_TFT.c: 648: PORTDbits.RD3 = 0;
  6812  00203A  9683               	bcf	3971,3,c	;volatile
  6813                           
  6814                           ;ST7735_TFT.c: 650: SSPSTAT=0x80;
  6815  00203C  0E80               	movlw	128
  6816  00203E  6EC7               	movwf	4039,c	;volatile
  6817                           
  6818                           ;ST7735_TFT.c: 651: SSPCON1=0x30;
  6819  002040  0E30               	movlw	48
  6820  002042  6EC6               	movwf	4038,c	;volatile
  6821                           
  6822                           ;ST7735_TFT.c: 654: Rcmd1();
  6823  002044  EC89  F008         	call	_Rcmd1	;wreg free
  6824                           
  6825                           ;ST7735_TFT.c: 655: Rcmd2red();
  6826  002048  EC8F  F00F         	call	_Rcmd2red	;wreg free
  6827                           
  6828                           ;ST7735_TFT.c: 656: Rcmd3();
  6829  00204C  EC8D  F009         	call	_Rcmd3	;wreg free
  6830                           
  6831                           ;ST7735_TFT.c: 657: write_command(0x36);
  6832  002050  0E36               	movlw	54
  6833  002052  EC55  F011         	call	_write_command
  6834                           
  6835                           ;ST7735_TFT.c: 658: write_data(0xC0);
  6836  002056  0EC0               	movlw	192
  6837  002058  EC4D  F011         	call	_write_data
  6838                           
  6839                           ;ST7735_TFT.c: 659: _tft_type = 1;
  6840  00205C  0E01               	movlw	1
  6841  00205E  6E53               	movwf	__tft_type,c
  6842  002060  0012               	return		;funcret
  6843  002062                     __end_of_TFT_GreenTab_Initialize:
  6844                           	opt stack 0
  6845                           tblptru	equ	0xFF8
  6846                           tblptrh	equ	0xFF7
  6847                           tblptrl	equ	0xFF6
  6848                           tablat	equ	0xFF5
  6849                           prodh	equ	0xFF4
  6850                           prodl	equ	0xFF3
  6851                           intcon	equ	0xFF2
  6852                           intcon2	equ	0xFF1
  6853                           postinc0	equ	0xFEE
  6854                           wreg	equ	0xFE8
  6855                           postdec1	equ	0xFE5
  6856                           fsr1l	equ	0xFE1
  6857                           indf2	equ	0xFDF
  6858                           postinc2	equ	0xFDE
  6859                           postdec2	equ	0xFDD
  6860                           fsr2h	equ	0xFDA
  6861                           fsr2l	equ	0xFD9
  6862                           status	equ	0xFD8
  6863                           
  6864 ;; *************** function _Rcmd3 *****************
  6865 ;; Defined at:
  6866 ;;		line 339 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/ST7735_TFT.c"
  6867 ;; Parameters:    Size  Location     Type
  6868 ;;		None
  6869 ;; Auto vars:     Size  Location     Type
  6870 ;;		None
  6871 ;; Return value:  Size  Location     Type
  6872 ;;		None               void
  6873 ;; Registers used:
  6874 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6875 ;; Tracked objects:
  6876 ;;		On entry : 0/0
  6877 ;;		On exit  : 0/0
  6878 ;;		Unchanged: 0/0
  6879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6884 ;;Total ram usage:        0 bytes
  6885 ;; Hardware stack levels used:    1
  6886 ;; Hardware stack levels required when called:    5
  6887 ;; This function calls:
  6888 ;;		_delay_ms
  6889 ;;		_write_command
  6890 ;;		_write_data
  6891 ;; This function is called by:
  6892 ;;		_TFT_GreenTab_Initialize
  6893 ;;		_TFT_BlackTab_Initialize
  6894 ;; This function uses a non-reentrant model
  6895 ;;
  6896                           
  6897                           	psect	text26
  6898  00131A                     __ptext26:
  6899                           	opt stack 0
  6900  00131A                     _Rcmd3:
  6901                           	opt stack 23
  6902                           
  6903                           ;ST7735_TFT.c: 341: write_command(0xE0);
  6904                           
  6905                           ;incstack = 0
  6906  00131A  0EE0               	movlw	224
  6907  00131C  EC55  F011         	call	_write_command
  6908                           
  6909                           ;ST7735_TFT.c: 342: write_data(0x02); write_data(0x1C); write_data(0x07); write_data(0x1
      +                          2);
  6910  001320  0E02               	movlw	2
  6911  001322  EC4D  F011         	call	_write_data
  6912  001326  0E1C               	movlw	28
  6913  001328  EC4D  F011         	call	_write_data
  6914  00132C  0E07               	movlw	7
  6915  00132E  EC4D  F011         	call	_write_data
  6916  001332  0E12               	movlw	18
  6917  001334  EC4D  F011         	call	_write_data
  6918                           
  6919                           ;ST7735_TFT.c: 343: write_data(0x37); write_data(0x32); write_data(0x29); write_data(0x2
      +                          D);
  6920  001338  0E37               	movlw	55
  6921  00133A  EC4D  F011         	call	_write_data
  6922  00133E  0E32               	movlw	50
  6923  001340  EC4D  F011         	call	_write_data
  6924  001344  0E29               	movlw	41
  6925  001346  EC4D  F011         	call	_write_data
  6926  00134A  0E2D               	movlw	45
  6927  00134C  EC4D  F011         	call	_write_data
  6928                           
  6929                           ;ST7735_TFT.c: 344: write_data(0x29); write_data(0x25); write_data(0x2B); write_data(0x3
      +                          9);
  6930  001350  0E29               	movlw	41
  6931  001352  EC4D  F011         	call	_write_data
  6932  001356  0E25               	movlw	37
  6933  001358  EC4D  F011         	call	_write_data
  6934  00135C  0E2B               	movlw	43
  6935  00135E  EC4D  F011         	call	_write_data
  6936  001362  0E39               	movlw	57
  6937  001364  EC4D  F011         	call	_write_data
  6938                           
  6939                           ;ST7735_TFT.c: 345: write_data(0x00); write_data(0x01); write_data(0x03); write_data(0x1
      +                          0);
  6940  001368  0E00               	movlw	0
  6941  00136A  EC4D  F011         	call	_write_data
  6942  00136E  0E01               	movlw	1
  6943  001370  EC4D  F011         	call	_write_data
  6944  001374  0E03               	movlw	3
  6945  001376  EC4D  F011         	call	_write_data
  6946  00137A  0E10               	movlw	16
  6947  00137C  EC4D  F011         	call	_write_data
  6948                           
  6949                           ;ST7735_TFT.c: 346: write_command(0xE1);
  6950  001380  0EE1               	movlw	225
  6951  001382  EC55  F011         	call	_write_command
  6952                           
  6953                           ;ST7735_TFT.c: 347: write_data(0x03); write_data(0x1D); write_data(0x07); write_data(0x0
      +                          6);
  6954  001386  0E03               	movlw	3
  6955  001388  EC4D  F011         	call	_write_data
  6956  00138C  0E1D               	movlw	29
  6957  00138E  EC4D  F011         	call	_write_data
  6958  001392  0E07               	movlw	7
  6959  001394  EC4D  F011         	call	_write_data
  6960  001398  0E06               	movlw	6
  6961  00139A  EC4D  F011         	call	_write_data
  6962                           
  6963                           ;ST7735_TFT.c: 348: write_data(0x2E); write_data(0x2C); write_data(0x29); write_data(0x2
      +                          D);
  6964  00139E  0E2E               	movlw	46
  6965  0013A0  EC4D  F011         	call	_write_data
  6966  0013A4  0E2C               	movlw	44
  6967  0013A6  EC4D  F011         	call	_write_data
  6968  0013AA  0E29               	movlw	41
  6969  0013AC  EC4D  F011         	call	_write_data
  6970  0013B0  0E2D               	movlw	45
  6971  0013B2  EC4D  F011         	call	_write_data
  6972                           
  6973                           ;ST7735_TFT.c: 349: write_data(0x2E); write_data(0x2E); write_data(0x37); write_data(0x3
      +                          F);
  6974  0013B6  0E2E               	movlw	46
  6975  0013B8  EC4D  F011         	call	_write_data
  6976  0013BC  0E2E               	movlw	46
  6977  0013BE  EC4D  F011         	call	_write_data
  6978  0013C2  0E37               	movlw	55
  6979  0013C4  EC4D  F011         	call	_write_data
  6980  0013C8  0E3F               	movlw	63
  6981  0013CA  EC4D  F011         	call	_write_data
  6982                           
  6983                           ;ST7735_TFT.c: 350: write_data(0x00); write_data(0x00); write_data(0x02); write_data(0x1
      +                          0);
  6984  0013CE  0E00               	movlw	0
  6985  0013D0  EC4D  F011         	call	_write_data
  6986  0013D4  0E00               	movlw	0
  6987  0013D6  EC4D  F011         	call	_write_data
  6988  0013DA  0E02               	movlw	2
  6989  0013DC  EC4D  F011         	call	_write_data
  6990  0013E0  0E10               	movlw	16
  6991  0013E2  EC4D  F011         	call	_write_data
  6992                           
  6993                           ;ST7735_TFT.c: 351: write_command(0x13);
  6994  0013E6  0E13               	movlw	19
  6995  0013E8  EC55  F011         	call	_write_command
  6996                           
  6997                           ;ST7735_TFT.c: 352: delay_ms(10);
  6998  0013EC  0E00               	movlw	0
  6999  0013EE  6E18               	movwf	delay_ms@ms+1,c
  7000  0013F0  0E0A               	movlw	10
  7001  0013F2  6E17               	movwf	delay_ms@ms,c
  7002  0013F4  EC6B  F00E         	call	_delay_ms	;wreg free
  7003                           
  7004                           ;ST7735_TFT.c: 353: write_command(0x29);
  7005  0013F8  0E29               	movlw	41
  7006  0013FA  EC55  F011         	call	_write_command
  7007                           
  7008                           ;ST7735_TFT.c: 354: delay_ms(100);
  7009  0013FE  0E00               	movlw	0
  7010  001400  6E18               	movwf	delay_ms@ms+1,c
  7011  001402  0E64               	movlw	100
  7012  001404  6E17               	movwf	delay_ms@ms,c
  7013  001406  EC6B  F00E         	call	_delay_ms	;wreg free
  7014  00140A  0012               	return		;funcret
  7015  00140C                     __end_of_Rcmd3:
  7016                           	opt stack 0
  7017                           tblptru	equ	0xFF8
  7018                           tblptrh	equ	0xFF7
  7019                           tblptrl	equ	0xFF6
  7020                           tablat	equ	0xFF5
  7021                           prodh	equ	0xFF4
  7022                           prodl	equ	0xFF3
  7023                           intcon	equ	0xFF2
  7024                           intcon2	equ	0xFF1
  7025                           postinc0	equ	0xFEE
  7026                           wreg	equ	0xFE8
  7027                           postdec1	equ	0xFE5
  7028                           fsr1l	equ	0xFE1
  7029                           indf2	equ	0xFDF
  7030                           postinc2	equ	0xFDE
  7031                           postdec2	equ	0xFDD
  7032                           fsr2h	equ	0xFDA
  7033                           fsr2l	equ	0xFD9
  7034                           status	equ	0xFD8
  7035                           
  7036 ;; *************** function _Rcmd2red *****************
  7037 ;; Defined at:
  7038 ;;		line 329 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/ST7735_TFT.c"
  7039 ;; Parameters:    Size  Location     Type
  7040 ;;		None
  7041 ;; Auto vars:     Size  Location     Type
  7042 ;;		None
  7043 ;; Return value:  Size  Location     Type
  7044 ;;		None               void
  7045 ;; Registers used:
  7046 ;;		wreg, status,2, cstack
  7047 ;; Tracked objects:
  7048 ;;		On entry : 0/0
  7049 ;;		On exit  : 0/0
  7050 ;;		Unchanged: 0/0
  7051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7056 ;;Total ram usage:        0 bytes
  7057 ;; Hardware stack levels used:    1
  7058 ;; Hardware stack levels required when called:    5
  7059 ;; This function calls:
  7060 ;;		_write_command
  7061 ;;		_write_data
  7062 ;; This function is called by:
  7063 ;;		_TFT_GreenTab_Initialize
  7064 ;; This function uses a non-reentrant model
  7065 ;;
  7066                           
  7067                           	psect	text27
  7068  001F1E                     __ptext27:
  7069                           	opt stack 0
  7070  001F1E                     _Rcmd2red:
  7071                           	opt stack 23
  7072                           
  7073                           ;ST7735_TFT.c: 331: write_command(0x2A);
  7074                           
  7075                           ;incstack = 0
  7076  001F1E  0E2A               	movlw	42
  7077  001F20  EC55  F011         	call	_write_command
  7078                           
  7079                           ;ST7735_TFT.c: 332: write_data(0x00); write_data(0x00);
  7080  001F24  0E00               	movlw	0
  7081  001F26  EC4D  F011         	call	_write_data
  7082  001F2A  0E00               	movlw	0
  7083  001F2C  EC4D  F011         	call	_write_data
  7084                           
  7085                           ;ST7735_TFT.c: 333: write_data(0x00); write_data(0x7F);
  7086  001F30  0E00               	movlw	0
  7087  001F32  EC4D  F011         	call	_write_data
  7088  001F36  0E7F               	movlw	127
  7089  001F38  EC4D  F011         	call	_write_data
  7090                           
  7091                           ;ST7735_TFT.c: 334: write_command(0x2B);
  7092  001F3C  0E2B               	movlw	43
  7093  001F3E  EC55  F011         	call	_write_command
  7094                           
  7095                           ;ST7735_TFT.c: 335: write_data(0x00); write_data(0x00);
  7096  001F42  0E00               	movlw	0
  7097  001F44  EC4D  F011         	call	_write_data
  7098  001F48  0E00               	movlw	0
  7099  001F4A  EC4D  F011         	call	_write_data
  7100                           
  7101                           ;ST7735_TFT.c: 336: write_data(0x00); write_data(0x9F);
  7102  001F4E  0E00               	movlw	0
  7103  001F50  EC4D  F011         	call	_write_data
  7104  001F54  0E9F               	movlw	159
  7105  001F56  EC4D  F011         	call	_write_data
  7106  001F5A  0012               	return		;funcret
  7107  001F5C                     __end_of_Rcmd2red:
  7108                           	opt stack 0
  7109                           tblptru	equ	0xFF8
  7110                           tblptrh	equ	0xFF7
  7111                           tblptrl	equ	0xFF6
  7112                           tablat	equ	0xFF5
  7113                           prodh	equ	0xFF4
  7114                           prodl	equ	0xFF3
  7115                           intcon	equ	0xFF2
  7116                           intcon2	equ	0xFF1
  7117                           postinc0	equ	0xFEE
  7118                           wreg	equ	0xFE8
  7119                           postdec1	equ	0xFE5
  7120                           fsr1l	equ	0xFE1
  7121                           indf2	equ	0xFDF
  7122                           postinc2	equ	0xFDE
  7123                           postdec2	equ	0xFDD
  7124                           fsr2h	equ	0xFDA
  7125                           fsr2l	equ	0xFD9
  7126                           status	equ	0xFD8
  7127                           
  7128 ;; *************** function _Rcmd1 *****************
  7129 ;; Defined at:
  7130 ;;		line 282 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/ST7735_TFT.c"
  7131 ;; Parameters:    Size  Location     Type
  7132 ;;		None
  7133 ;; Auto vars:     Size  Location     Type
  7134 ;;		None
  7135 ;; Return value:  Size  Location     Type
  7136 ;;		None               void
  7137 ;; Registers used:
  7138 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7139 ;; Tracked objects:
  7140 ;;		On entry : 0/0
  7141 ;;		On exit  : 0/0
  7142 ;;		Unchanged: 0/0
  7143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7148 ;;Total ram usage:        0 bytes
  7149 ;; Hardware stack levels used:    1
  7150 ;; Hardware stack levels required when called:    5
  7151 ;; This function calls:
  7152 ;;		_delay_ms
  7153 ;;		_write_command
  7154 ;;		_write_data
  7155 ;; This function is called by:
  7156 ;;		_TFT_GreenTab_Initialize
  7157 ;;		_TFT_BlackTab_Initialize
  7158 ;; This function uses a non-reentrant model
  7159 ;;
  7160                           
  7161                           	psect	text28
  7162  001112                     __ptext28:
  7163                           	opt stack 0
  7164  001112                     _Rcmd1:
  7165                           	opt stack 23
  7166                           
  7167                           ;ST7735_TFT.c: 284: write_command(0x01);
  7168                           
  7169                           ;incstack = 0
  7170  001112  0E01               	movlw	1
  7171  001114  EC55  F011         	call	_write_command
  7172                           
  7173                           ;ST7735_TFT.c: 285: delay_ms(150);
  7174  001118  0E00               	movlw	0
  7175  00111A  6E18               	movwf	delay_ms@ms+1,c
  7176  00111C  0E96               	movlw	150
  7177  00111E  6E17               	movwf	delay_ms@ms,c
  7178  001120  EC6B  F00E         	call	_delay_ms	;wreg free
  7179                           
  7180                           ;ST7735_TFT.c: 286: write_command(0x11);
  7181  001124  0E11               	movlw	17
  7182  001126  EC55  F011         	call	_write_command
  7183                           
  7184                           ;ST7735_TFT.c: 287: delay_ms(500);
  7185  00112A  0E01               	movlw	1
  7186  00112C  6E18               	movwf	delay_ms@ms+1,c
  7187  00112E  0EF4               	movlw	244
  7188  001130  6E17               	movwf	delay_ms@ms,c
  7189  001132  EC6B  F00E         	call	_delay_ms	;wreg free
  7190                           
  7191                           ;ST7735_TFT.c: 288: write_command(0xB1);
  7192  001136  0EB1               	movlw	177
  7193  001138  EC55  F011         	call	_write_command
  7194                           
  7195                           ;ST7735_TFT.c: 289: write_data(0x01);
  7196  00113C  0E01               	movlw	1
  7197  00113E  EC4D  F011         	call	_write_data
  7198                           
  7199                           ;ST7735_TFT.c: 290: write_data(0x2C);
  7200  001142  0E2C               	movlw	44
  7201  001144  EC4D  F011         	call	_write_data
  7202                           
  7203                           ;ST7735_TFT.c: 291: write_data(0x2D);
  7204  001148  0E2D               	movlw	45
  7205  00114A  EC4D  F011         	call	_write_data
  7206                           
  7207                           ;ST7735_TFT.c: 292: write_command(0xB2);
  7208  00114E  0EB2               	movlw	178
  7209  001150  EC55  F011         	call	_write_command
  7210                           
  7211                           ;ST7735_TFT.c: 293: write_data(0x01);
  7212  001154  0E01               	movlw	1
  7213  001156  EC4D  F011         	call	_write_data
  7214                           
  7215                           ;ST7735_TFT.c: 294: write_data(0x2C);
  7216  00115A  0E2C               	movlw	44
  7217  00115C  EC4D  F011         	call	_write_data
  7218                           
  7219                           ;ST7735_TFT.c: 295: write_data(0x2D);
  7220  001160  0E2D               	movlw	45
  7221  001162  EC4D  F011         	call	_write_data
  7222                           
  7223                           ;ST7735_TFT.c: 296: write_command(0xB3);
  7224  001166  0EB3               	movlw	179
  7225  001168  EC55  F011         	call	_write_command
  7226                           
  7227                           ;ST7735_TFT.c: 297: write_data(0x01);
  7228  00116C  0E01               	movlw	1
  7229  00116E  EC4D  F011         	call	_write_data
  7230                           
  7231                           ;ST7735_TFT.c: 298: write_data(0x2C);
  7232  001172  0E2C               	movlw	44
  7233  001174  EC4D  F011         	call	_write_data
  7234                           
  7235                           ;ST7735_TFT.c: 299: write_data(0x2D);
  7236  001178  0E2D               	movlw	45
  7237  00117A  EC4D  F011         	call	_write_data
  7238                           
  7239                           ;ST7735_TFT.c: 300: write_data(0x01);
  7240  00117E  0E01               	movlw	1
  7241  001180  EC4D  F011         	call	_write_data
  7242                           
  7243                           ;ST7735_TFT.c: 301: write_data(0x2C);
  7244  001184  0E2C               	movlw	44
  7245  001186  EC4D  F011         	call	_write_data
  7246                           
  7247                           ;ST7735_TFT.c: 302: write_data(0x2D);
  7248  00118A  0E2D               	movlw	45
  7249  00118C  EC4D  F011         	call	_write_data
  7250                           
  7251                           ;ST7735_TFT.c: 303: write_command(0xB4);
  7252  001190  0EB4               	movlw	180
  7253  001192  EC55  F011         	call	_write_command
  7254                           
  7255                           ;ST7735_TFT.c: 304: write_data(0x07);
  7256  001196  0E07               	movlw	7
  7257  001198  EC4D  F011         	call	_write_data
  7258                           
  7259                           ;ST7735_TFT.c: 305: write_command(0xC0);
  7260  00119C  0EC0               	movlw	192
  7261  00119E  EC55  F011         	call	_write_command
  7262                           
  7263                           ;ST7735_TFT.c: 306: write_data(0xA2);
  7264  0011A2  0EA2               	movlw	162
  7265  0011A4  EC4D  F011         	call	_write_data
  7266                           
  7267                           ;ST7735_TFT.c: 307: write_data(0x02);
  7268  0011A8  0E02               	movlw	2
  7269  0011AA  EC4D  F011         	call	_write_data
  7270                           
  7271                           ;ST7735_TFT.c: 308: write_data(0x84);
  7272  0011AE  0E84               	movlw	132
  7273  0011B0  EC4D  F011         	call	_write_data
  7274                           
  7275                           ;ST7735_TFT.c: 309: write_command(0xC1);
  7276  0011B4  0EC1               	movlw	193
  7277  0011B6  EC55  F011         	call	_write_command
  7278                           
  7279                           ;ST7735_TFT.c: 310: write_data(0xC5);
  7280  0011BA  0EC5               	movlw	197
  7281  0011BC  EC4D  F011         	call	_write_data
  7282                           
  7283                           ;ST7735_TFT.c: 311: write_command(0xC2);
  7284  0011C0  0EC2               	movlw	194
  7285  0011C2  EC55  F011         	call	_write_command
  7286                           
  7287                           ;ST7735_TFT.c: 312: write_data(0x0A);
  7288  0011C6  0E0A               	movlw	10
  7289  0011C8  EC4D  F011         	call	_write_data
  7290                           
  7291                           ;ST7735_TFT.c: 313: write_data(0x00);
  7292  0011CC  0E00               	movlw	0
  7293  0011CE  EC4D  F011         	call	_write_data
  7294                           
  7295                           ;ST7735_TFT.c: 314: write_command(0xC3);
  7296  0011D2  0EC3               	movlw	195
  7297  0011D4  EC55  F011         	call	_write_command
  7298                           
  7299                           ;ST7735_TFT.c: 315: write_data(0x8A);
  7300  0011D8  0E8A               	movlw	138
  7301  0011DA  EC4D  F011         	call	_write_data
  7302                           
  7303                           ;ST7735_TFT.c: 316: write_data(0x2A);
  7304  0011DE  0E2A               	movlw	42
  7305  0011E0  EC4D  F011         	call	_write_data
  7306                           
  7307                           ;ST7735_TFT.c: 317: write_command(0xC4);
  7308  0011E4  0EC4               	movlw	196
  7309  0011E6  EC55  F011         	call	_write_command
  7310                           
  7311                           ;ST7735_TFT.c: 318: write_data(0x8A);
  7312  0011EA  0E8A               	movlw	138
  7313  0011EC  EC4D  F011         	call	_write_data
  7314                           
  7315                           ;ST7735_TFT.c: 319: write_data(0xEE);
  7316  0011F0  0EEE               	movlw	238
  7317  0011F2  EC4D  F011         	call	_write_data
  7318                           
  7319                           ;ST7735_TFT.c: 320: write_command(0xC5);
  7320  0011F6  0EC5               	movlw	197
  7321  0011F8  EC55  F011         	call	_write_command
  7322                           
  7323                           ;ST7735_TFT.c: 321: write_data(0x0E);
  7324  0011FC  0E0E               	movlw	14
  7325  0011FE  EC4D  F011         	call	_write_data
  7326                           
  7327                           ;ST7735_TFT.c: 322: write_command(0x20);
  7328  001202  0E20               	movlw	32
  7329  001204  EC55  F011         	call	_write_command
  7330                           
  7331                           ;ST7735_TFT.c: 323: write_command(0x36);
  7332  001208  0E36               	movlw	54
  7333  00120A  EC55  F011         	call	_write_command
  7334                           
  7335                           ;ST7735_TFT.c: 324: write_data(0xC8);
  7336  00120E  0EC8               	movlw	200
  7337  001210  EC4D  F011         	call	_write_data
  7338                           
  7339                           ;ST7735_TFT.c: 325: write_command(0x3A);
  7340  001214  0E3A               	movlw	58
  7341  001216  EC55  F011         	call	_write_command
  7342                           
  7343                           ;ST7735_TFT.c: 326: write_data(0x05);
  7344  00121A  0E05               	movlw	5
  7345  00121C  EC4D  F011         	call	_write_data
  7346  001220  0012               	return		;funcret
  7347  001222                     __end_of_Rcmd1:
  7348                           	opt stack 0
  7349                           tblptru	equ	0xFF8
  7350                           tblptrh	equ	0xFF7
  7351                           tblptrl	equ	0xFF6
  7352                           tablat	equ	0xFF5
  7353                           prodh	equ	0xFF4
  7354                           prodl	equ	0xFF3
  7355                           intcon	equ	0xFF2
  7356                           intcon2	equ	0xFF1
  7357                           postinc0	equ	0xFEE
  7358                           wreg	equ	0xFE8
  7359                           postdec1	equ	0xFE5
  7360                           fsr1l	equ	0xFE1
  7361                           indf2	equ	0xFDF
  7362                           postinc2	equ	0xFDE
  7363                           postdec2	equ	0xFDD
  7364                           fsr2h	equ	0xFDA
  7365                           fsr2l	equ	0xFD9
  7366                           status	equ	0xFD8
  7367                           
  7368 ;; *************** function _write_data *****************
  7369 ;; Defined at:
  7370 ;;		line 210 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/ST7735_TFT.c"
  7371 ;; Parameters:    Size  Location     Type
  7372 ;;  data_           1    wreg     unsigned char 
  7373 ;; Auto vars:     Size  Location     Type
  7374 ;;  data_           1   18[COMRAM] unsigned char 
  7375 ;; Return value:  Size  Location     Type
  7376 ;;		None               void
  7377 ;; Registers used:
  7378 ;;		wreg, status,2, cstack
  7379 ;; Tracked objects:
  7380 ;;		On entry : 0/0
  7381 ;;		On exit  : 0/0
  7382 ;;		Unchanged: 0/0
  7383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7385 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7387 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7388 ;;Total ram usage:        1 bytes
  7389 ;; Hardware stack levels used:    1
  7390 ;; Hardware stack levels required when called:    4
  7391 ;; This function calls:
  7392 ;;		_spiwrite
  7393 ;; This function is called by:
  7394 ;;		_Rcmd1
  7395 ;;		_Rcmd2red
  7396 ;;		_Rcmd3
  7397 ;;		_setAddrWindow
  7398 ;;		_drawPixel
  7399 ;;		_TFT_GreenTab_Initialize
  7400 ;;		_Bcmd
  7401 ;;		_setScrollDefinition
  7402 ;;		_Rcmd2green
  7403 ;;		_VerticalScroll
  7404 ;; This function uses a non-reentrant model
  7405 ;;
  7406                           
  7407                           	psect	text29
  7408  00229A                     __ptext29:
  7409                           	opt stack 0
  7410  00229A                     _write_data:
  7411                           	opt stack 20
  7412                           
  7413                           ;incstack = 0
  7414                           ;write_data@data_ stored from wreg
  7415  00229A  6E13               	movwf	write_data@data_,c
  7416                           
  7417                           ;ST7735_TFT.c: 212: PORTDbits.RD4 = 0;
  7418  00229C  9883               	bcf	3971,4,c	;volatile
  7419                           
  7420                           ;ST7735_TFT.c: 213: PORTDbits.RD3 = 1;
  7421  00229E  8683               	bsf	3971,3,c	;volatile
  7422                           
  7423                           ;ST7735_TFT.c: 214: spiwrite(data_);
  7424  0022A0  5013               	movf	write_data@data_,w,c
  7425  0022A2  EC02  F011         	call	_spiwrite
  7426                           
  7427                           ;ST7735_TFT.c: 215: PORTDbits.RD4 = 1;
  7428  0022A6  8883               	bsf	3971,4,c	;volatile
  7429  0022A8  0012               	return		;funcret
  7430  0022AA                     __end_of_write_data:
  7431                           	opt stack 0
  7432                           tblptru	equ	0xFF8
  7433                           tblptrh	equ	0xFF7
  7434                           tblptrl	equ	0xFF6
  7435                           tablat	equ	0xFF5
  7436                           prodh	equ	0xFF4
  7437                           prodl	equ	0xFF3
  7438                           intcon	equ	0xFF2
  7439                           intcon2	equ	0xFF1
  7440                           postinc0	equ	0xFEE
  7441                           wreg	equ	0xFE8
  7442                           postdec1	equ	0xFE5
  7443                           fsr1l	equ	0xFE1
  7444                           indf2	equ	0xFDF
  7445                           postinc2	equ	0xFDE
  7446                           postdec2	equ	0xFDD
  7447                           fsr2h	equ	0xFDA
  7448                           fsr2l	equ	0xFD9
  7449                           status	equ	0xFD8
  7450                           
  7451 ;; *************** function _write_command *****************
  7452 ;; Defined at:
  7453 ;;		line 199 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/ST7735_TFT.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;  cmd_            1    wreg     unsigned char 
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;  cmd_            1   18[COMRAM] unsigned char 
  7458 ;; Return value:  Size  Location     Type
  7459 ;;		None               void
  7460 ;; Registers used:
  7461 ;;		wreg, status,2, cstack
  7462 ;; Tracked objects:
  7463 ;;		On entry : 0/0
  7464 ;;		On exit  : 0/0
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7468 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7470 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7471 ;;Total ram usage:        1 bytes
  7472 ;; Hardware stack levels used:    1
  7473 ;; Hardware stack levels required when called:    4
  7474 ;; This function calls:
  7475 ;;		_spiwrite
  7476 ;; This function is called by:
  7477 ;;		_Rcmd1
  7478 ;;		_Rcmd2red
  7479 ;;		_Rcmd3
  7480 ;;		_setAddrWindow
  7481 ;;		_TFT_GreenTab_Initialize
  7482 ;;		_Bcmd
  7483 ;;		_setScrollDefinition
  7484 ;;		_Rcmd2green
  7485 ;;		_VerticalScroll
  7486 ;; This function uses a non-reentrant model
  7487 ;;
  7488                           
  7489                           	psect	text30
  7490  0022AA                     __ptext30:
  7491                           	opt stack 0
  7492  0022AA                     _write_command:
  7493                           	opt stack 20
  7494                           
  7495                           ;incstack = 0
  7496                           ;write_command@cmd_ stored from wreg
  7497  0022AA  6E13               	movwf	write_command@cmd_,c
  7498                           
  7499                           ;ST7735_TFT.c: 201: PORTDbits.RD4 = 0;
  7500  0022AC  9883               	bcf	3971,4,c	;volatile
  7501                           
  7502                           ;ST7735_TFT.c: 203: PORTDbits.RD3 = 0;
  7503  0022AE  9683               	bcf	3971,3,c	;volatile
  7504                           
  7505                           ;ST7735_TFT.c: 204: spiwrite(cmd_);
  7506  0022B0  5013               	movf	write_command@cmd_,w,c
  7507  0022B2  EC02  F011         	call	_spiwrite
  7508                           
  7509                           ;ST7735_TFT.c: 206: PORTDbits.RD4 = 1;
  7510  0022B6  8883               	bsf	3971,4,c	;volatile
  7511  0022B8  0012               	return		;funcret
  7512  0022BA                     __end_of_write_command:
  7513                           	opt stack 0
  7514                           tblptru	equ	0xFF8
  7515                           tblptrh	equ	0xFF7
  7516                           tblptrl	equ	0xFF6
  7517                           tablat	equ	0xFF5
  7518                           prodh	equ	0xFF4
  7519                           prodl	equ	0xFF3
  7520                           intcon	equ	0xFF2
  7521                           intcon2	equ	0xFF1
  7522                           postinc0	equ	0xFEE
  7523                           wreg	equ	0xFE8
  7524                           postdec1	equ	0xFE5
  7525                           fsr1l	equ	0xFE1
  7526                           indf2	equ	0xFDF
  7527                           postinc2	equ	0xFDE
  7528                           postdec2	equ	0xFDD
  7529                           fsr2h	equ	0xFDA
  7530                           fsr2l	equ	0xFD9
  7531                           status	equ	0xFD8
  7532                           
  7533 ;; *************** function _spiwrite *****************
  7534 ;; Defined at:
  7535 ;;		line 190 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/ST7735_TFT.c"
  7536 ;; Parameters:    Size  Location     Type
  7537 ;;  spidata         1    wreg     unsigned char 
  7538 ;; Auto vars:     Size  Location     Type
  7539 ;;  spidata         1   17[COMRAM] unsigned char 
  7540 ;;  x               1   16[COMRAM] unsigned char 
  7541 ;; Return value:  Size  Location     Type
  7542 ;;		None               void
  7543 ;; Registers used:
  7544 ;;		wreg
  7545 ;; Tracked objects:
  7546 ;;		On entry : 0/0
  7547 ;;		On exit  : 0/0
  7548 ;;		Unchanged: 0/0
  7549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7551 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7553 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7554 ;;Total ram usage:        2 bytes
  7555 ;; Hardware stack levels used:    1
  7556 ;; Hardware stack levels required when called:    3
  7557 ;; This function calls:
  7558 ;;		Nothing
  7559 ;; This function is called by:
  7560 ;;		_write_command
  7561 ;;		_write_data
  7562 ;;		_drawFastVLine
  7563 ;;		_fillRectangle
  7564 ;;		_drawFastHLine
  7565 ;; This function uses a non-reentrant model
  7566 ;;
  7567                           
  7568                           	psect	text31
  7569  002204                     __ptext31:
  7570                           	opt stack 0
  7571  002204                     _spiwrite:
  7572                           	opt stack 22
  7573                           
  7574                           ;incstack = 0
  7575                           ;spiwrite@spidata stored from wreg
  7576  002204  6E12               	movwf	spiwrite@spidata,c
  7577                           
  7578                           ;ST7735_TFT.c: 192: char x;
  7579                           ;ST7735_TFT.c: 193: PIR1bits.SSPIF = 0;
  7580  002206  969E               	bcf	3998,3,c	;volatile
  7581                           
  7582                           ;ST7735_TFT.c: 194: x = SSPBUF;
  7583  002208  CFC9 F011          	movff	4041,spiwrite@x	;volatile
  7584                           
  7585                           ;ST7735_TFT.c: 195: SSPBUF = spidata;
  7586  00220C  C012  FFC9         	movff	spiwrite@spidata,4041	;volatile
  7587                           
  7588                           ;ST7735_TFT.c: 196: while (!SSPSTATbits.BF);
  7589  002210  D000               	goto	l328
  7590  002212                     l328:
  7591  002212  A0C7               	btfss	4039,0,c	;volatile
  7592  002214  D7FE               	goto	l328
  7593  002216  0012               	return		;funcret
  7594  002218                     __end_of_spiwrite:
  7595                           	opt stack 0
  7596                           tblptru	equ	0xFF8
  7597                           tblptrh	equ	0xFF7
  7598                           tblptrl	equ	0xFF6
  7599                           tablat	equ	0xFF5
  7600                           prodh	equ	0xFF4
  7601                           prodl	equ	0xFF3
  7602                           intcon	equ	0xFF2
  7603                           intcon2	equ	0xFF1
  7604                           postinc0	equ	0xFEE
  7605                           wreg	equ	0xFE8
  7606                           postdec1	equ	0xFE5
  7607                           fsr1l	equ	0xFE1
  7608                           indf2	equ	0xFDF
  7609                           postinc2	equ	0xFDE
  7610                           postdec2	equ	0xFDD
  7611                           fsr2h	equ	0xFDA
  7612                           fsr2l	equ	0xFD9
  7613                           status	equ	0xFD8
  7614                           
  7615 ;; *************** function _LCD_Reset *****************
  7616 ;; Defined at:
  7617 ;;		line 218 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/ST7735_TFT.c"
  7618 ;; Parameters:    Size  Location     Type
  7619 ;;		None
  7620 ;; Auto vars:     Size  Location     Type
  7621 ;;		None
  7622 ;; Return value:  Size  Location     Type
  7623 ;;		None               void
  7624 ;; Registers used:
  7625 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7626 ;; Tracked objects:
  7627 ;;		On entry : 0/0
  7628 ;;		On exit  : 0/0
  7629 ;;		Unchanged: 0/0
  7630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7635 ;;Total ram usage:        0 bytes
  7636 ;; Hardware stack levels used:    1
  7637 ;; Hardware stack levels required when called:    5
  7638 ;; This function calls:
  7639 ;;		_delay_ms
  7640 ;; This function is called by:
  7641 ;;		_Initialize_Screen
  7642 ;; This function uses a non-reentrant model
  7643 ;;
  7644                           
  7645                           	psect	text32
  7646  002240                     __ptext32:
  7647                           	opt stack 0
  7648  002240                     _LCD_Reset:
  7649                           	opt stack 24
  7650                           
  7651                           ;ST7735_TFT.c: 220: PORTDbits.RD5 = 0;
  7652                           
  7653                           ;incstack = 0
  7654  002240  9A83               	bcf	3971,5,c	;volatile
  7655                           
  7656                           ;ST7735_TFT.c: 221: delay_ms(100);
  7657  002242  0E00               	movlw	0
  7658  002244  6E18               	movwf	delay_ms@ms+1,c
  7659  002246  0E64               	movlw	100
  7660  002248  6E17               	movwf	delay_ms@ms,c
  7661  00224A  EC6B  F00E         	call	_delay_ms	;wreg free
  7662                           
  7663                           ;ST7735_TFT.c: 222: PORTDbits.RD5 = 1;
  7664  00224E  8A83               	bsf	3971,5,c	;volatile
  7665  002250  0012               	return		;funcret
  7666  002252                     __end_of_LCD_Reset:
  7667                           	opt stack 0
  7668                           tblptru	equ	0xFF8
  7669                           tblptrh	equ	0xFF7
  7670                           tblptrl	equ	0xFF6
  7671                           tablat	equ	0xFF5
  7672                           prodh	equ	0xFF4
  7673                           prodl	equ	0xFF3
  7674                           intcon	equ	0xFF2
  7675                           intcon2	equ	0xFF1
  7676                           postinc0	equ	0xFEE
  7677                           wreg	equ	0xFE8
  7678                           postdec1	equ	0xFE5
  7679                           fsr1l	equ	0xFE1
  7680                           indf2	equ	0xFDF
  7681                           postinc2	equ	0xFDE
  7682                           postdec2	equ	0xFDD
  7683                           fsr2h	equ	0xFDA
  7684                           fsr2l	equ	0xFD9
  7685                           status	equ	0xFD8
  7686                           
  7687 ;; *************** function _delay_ms *****************
  7688 ;; Defined at:
  7689 ;;		line 65 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/ST7735_TFT.c"
  7690 ;; Parameters:    Size  Location     Type
  7691 ;;  ms              2   22[COMRAM] int 
  7692 ;; Auto vars:     Size  Location     Type
  7693 ;;  count           2   26[COMRAM] int 
  7694 ;; Return value:  Size  Location     Type
  7695 ;;		None               void
  7696 ;; Registers used:
  7697 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7698 ;; Tracked objects:
  7699 ;;		On entry : 0/0
  7700 ;;		On exit  : 0/0
  7701 ;;		Unchanged: 0/0
  7702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7703 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7704 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7705 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7706 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7707 ;;Total ram usage:        6 bytes
  7708 ;; Hardware stack levels used:    1
  7709 ;; Hardware stack levels required when called:    4
  7710 ;; This function calls:
  7711 ;;		___wmul
  7712 ;; This function is called by:
  7713 ;;		_LCD_Reset
  7714 ;;		_Rcmd1
  7715 ;;		_Rcmd3
  7716 ;;		_Bcmd
  7717 ;; This function uses a non-reentrant model
  7718 ;;
  7719                           
  7720                           	psect	text33
  7721  001CD6                     __ptext33:
  7722                           	opt stack 0
  7723  001CD6                     _delay_ms:
  7724                           	opt stack 23
  7725                           
  7726                           ;ST7735_TFT.c: 71: int count;
  7727                           ;ST7735_TFT.c: 72: count = 8000000/4000/16 * ms;
  7728                           
  7729                           ;incstack = 0
  7730  001CD6  C017  F011         	movff	delay_ms@ms,___wmul@multiplier
  7731  001CDA  C018  F012         	movff	delay_ms@ms+1,___wmul@multiplier+1
  7732  001CDE  0E00               	movlw	0
  7733  001CE0  6E14               	movwf	___wmul@multiplicand+1,c
  7734  001CE2  0E7D               	movlw	125
  7735  001CE4  6E13               	movwf	___wmul@multiplicand,c
  7736  001CE6  EC31  F010         	call	___wmul	;wreg free
  7737  001CEA  C011  F01B         	movff	?___wmul,delay_ms@count
  7738  001CEE  C012  F01C         	movff	?___wmul+1,delay_ms@count+1
  7739                           
  7740                           ;ST7735_TFT.c: 73: count = (0xffff - count);
  7741  001CF2  C01B  F019         	movff	delay_ms@count,??_delay_ms
  7742  001CF6  C01C  F01A         	movff	delay_ms@count+1,??_delay_ms+1
  7743  001CFA  1E19               	comf	??_delay_ms,f,c
  7744  001CFC  1E1A               	comf	??_delay_ms+1,f,c
  7745  001CFE  4A19               	infsnz	??_delay_ms,f,c
  7746  001D00  2A1A               	incf	??_delay_ms+1,f,c
  7747  001D02  0EFF               	movlw	255
  7748  001D04  2419               	addwf	??_delay_ms,w,c
  7749  001D06  6E1B               	movwf	delay_ms@count,c
  7750  001D08  0EFF               	movlw	255
  7751  001D0A  201A               	addwfc	??_delay_ms+1,w,c
  7752  001D0C  6E1C               	movwf	delay_ms@count+1,c
  7753                           
  7754                           ;ST7735_TFT.c: 75: T0CON = 0x03;
  7755  001D0E  0E03               	movlw	3
  7756  001D10  6ED5               	movwf	4053,c	;volatile
  7757                           
  7758                           ;ST7735_TFT.c: 77: TMR0L = count & 0x00ff;
  7759  001D12  C01B  FFD6         	movff	delay_ms@count,4054	;volatile
  7760                           
  7761                           ;ST7735_TFT.c: 78: TMR0H = count >> 8;
  7762  001D16  501C               	movf	delay_ms@count+1,w,c
  7763  001D18  6ED7               	movwf	4055,c	;volatile
  7764                           
  7765                           ;ST7735_TFT.c: 80: INTCONbits.TMR0IF = 0;
  7766  001D1A  94F2               	bcf	intcon,2,c	;volatile
  7767                           
  7768                           ;ST7735_TFT.c: 81: T0CONbits.TMR0ON = 1;
  7769  001D1C  8ED5               	bsf	4053,7,c	;volatile
  7770                           
  7771                           ;ST7735_TFT.c: 83: while (INTCONbits.TMR0IF == 0);
  7772  001D1E  D000               	goto	l318
  7773  001D20                     l318:
  7774  001D20  A4F2               	btfss	intcon,2,c	;volatile
  7775  001D22  D7FE               	goto	l318
  7776                           
  7777                           ;ST7735_TFT.c: 84: T0CONbits.TMR0ON = 0;
  7778  001D24  9ED5               	bcf	4053,7,c	;volatile
  7779  001D26  0012               	return		;funcret
  7780  001D28                     __end_of_delay_ms:
  7781                           	opt stack 0
  7782                           tblptru	equ	0xFF8
  7783                           tblptrh	equ	0xFF7
  7784                           tblptrl	equ	0xFF6
  7785                           tablat	equ	0xFF5
  7786                           prodh	equ	0xFF4
  7787                           prodl	equ	0xFF3
  7788                           intcon	equ	0xFF2
  7789                           intcon2	equ	0xFF1
  7790                           postinc0	equ	0xFEE
  7791                           wreg	equ	0xFE8
  7792                           postdec1	equ	0xFE5
  7793                           fsr1l	equ	0xFE1
  7794                           indf2	equ	0xFDF
  7795                           postinc2	equ	0xFDE
  7796                           postdec2	equ	0xFDD
  7797                           fsr2h	equ	0xFDA
  7798                           fsr2l	equ	0xFD9
  7799                           status	equ	0xFD8
  7800                           
  7801 ;; *************** function ___wmul *****************
  7802 ;; Defined at:
  7803 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  7804 ;; Parameters:    Size  Location     Type
  7805 ;;  multiplier      2   16[COMRAM] unsigned int 
  7806 ;;  multiplicand    2   18[COMRAM] unsigned int 
  7807 ;; Auto vars:     Size  Location     Type
  7808 ;;  product         2   20[COMRAM] unsigned int 
  7809 ;; Return value:  Size  Location     Type
  7810 ;;                  2   16[COMRAM] unsigned int 
  7811 ;; Registers used:
  7812 ;;		wreg, status,2, status,0, prodl, prodh
  7813 ;; Tracked objects:
  7814 ;;		On entry : 0/0
  7815 ;;		On exit  : 0/0
  7816 ;;		Unchanged: 0/0
  7817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7818 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7819 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7821 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7822 ;;Total ram usage:        6 bytes
  7823 ;; Hardware stack levels used:    1
  7824 ;; Hardware stack levels required when called:    3
  7825 ;; This function calls:
  7826 ;;		Nothing
  7827 ;; This function is called by:
  7828 ;;		_get_RPM
  7829 ;;		_delay_ms
  7830 ;;		_drawChar
  7831 ;;		_main
  7832 ;;		_printf
  7833 ;; This function uses a non-reentrant model
  7834 ;;
  7835                           
  7836                           	psect	text34
  7837  002062                     __ptext34:
  7838                           	opt stack 0
  7839  002062                     ___wmul:
  7840                           	opt stack 26
  7841                           
  7842                           ;incstack = 0
  7843  002062  5011               	movf	___wmul@multiplier,w,c
  7844  002064  0213               	mulwf	___wmul@multiplicand,c
  7845  002066  CFF3 F015          	movff	prodl,___wmul@product
  7846  00206A  CFF4 F016          	movff	prodh,___wmul@product+1
  7847  00206E  5011               	movf	___wmul@multiplier,w,c
  7848  002070  0214               	mulwf	___wmul@multiplicand+1,c
  7849  002072  50F3               	movf	prodl,w,c
  7850  002074  2616               	addwf	___wmul@product+1,f,c
  7851  002076  5012               	movf	___wmul@multiplier+1,w,c
  7852  002078  0213               	mulwf	___wmul@multiplicand,c
  7853  00207A  50F3               	movf	prodl,w,c
  7854  00207C  2616               	addwf	___wmul@product+1,f,c
  7855  00207E  C015  F011         	movff	___wmul@product,?___wmul
  7856  002082  C016  F012         	movff	___wmul@product+1,?___wmul+1
  7857  002086  D000               	goto	l863
  7858  002088                     l863:
  7859  002088  0012               	return		;funcret
  7860  00208A                     __end_of___wmul:
  7861                           	opt stack 0
  7862                           tblptru	equ	0xFF8
  7863                           tblptrh	equ	0xFF7
  7864                           tblptrl	equ	0xFF6
  7865                           tablat	equ	0xFF5
  7866                           prodh	equ	0xFF4
  7867                           prodl	equ	0xFF3
  7868                           intcon	equ	0xFF2
  7869                           intcon2	equ	0xFF1
  7870                           postinc0	equ	0xFEE
  7871                           wreg	equ	0xFE8
  7872                           postdec1	equ	0xFE5
  7873                           fsr1l	equ	0xFE1
  7874                           indf2	equ	0xFDF
  7875                           postinc2	equ	0xFDE
  7876                           postdec2	equ	0xFDD
  7877                           fsr2h	equ	0xFDA
  7878                           fsr2l	equ	0xFD9
  7879                           status	equ	0xFD8
  7880                           
  7881 ;; *************** function _Increase_Speed *****************
  7882 ;; Defined at:
  7883 ;;		line 41 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/Fan_Support.c"
  7884 ;; Parameters:    Size  Location     Type
  7885 ;;		None
  7886 ;; Auto vars:     Size  Location     Type
  7887 ;;		None
  7888 ;; Return value:  Size  Location     Type
  7889 ;;		None               void
  7890 ;; Registers used:
  7891 ;;		wreg, status,2, status,0, cstack
  7892 ;; Tracked objects:
  7893 ;;		On entry : 0/0
  7894 ;;		On exit  : 0/0
  7895 ;;		Unchanged: 0/0
  7896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7901 ;;Total ram usage:        0 bytes
  7902 ;; Hardware stack levels used:    1
  7903 ;; Hardware stack levels required when called:    7
  7904 ;; This function calls:
  7905 ;;		_Do_Beep
  7906 ;;		_do_update_pwm
  7907 ;; This function is called by:
  7908 ;;		_main
  7909 ;; This function uses a non-reentrant model
  7910 ;;
  7911                           
  7912                           	psect	text35
  7913  00218E                     __ptext35:
  7914                           	opt stack 0
  7915  00218E                     _Increase_Speed:
  7916                           	opt stack 23
  7917                           
  7918                           ;Fan_Support.c: 43: if (duty_cycle = 100){
  7919                           
  7920                           ;incstack = 0
  7921  00218E  0E64               	movlw	100
  7922  002190  6E5C               	movwf	_duty_cycle,c
  7923                           
  7924                           ;Fan_Support.c: 44: Do_Beep();
  7925  002192  EC16  F011         	call	_Do_Beep	;wreg free
  7926                           
  7927                           ;Fan_Support.c: 45: }
  7928  002196  D007               	goto	l57
  7929                           
  7930                           ;Fan_Support.c: 46: else {
  7931                           ;Fan_Support.c: 47: duty_cycle = duty_cycle + 5;
  7932  002198  505C               	movf	_duty_cycle,w,c
  7933  00219A  0F05               	addlw	5
  7934  00219C  6E5C               	movwf	_duty_cycle,c
  7935                           
  7936                           ;Fan_Support.c: 48: do_update_pwm(duty_cycle);
  7937  00219E  505C               	movf	_duty_cycle,w,c
  7938  0021A0  ECBB  F00B         	call	_do_update_pwm
  7939  0021A4  D000               	goto	l57
  7940  0021A6                     l57:
  7941  0021A6  0012               	return		;funcret
  7942  0021A8                     __end_of_Increase_Speed:
  7943                           	opt stack 0
  7944                           tblptru	equ	0xFF8
  7945                           tblptrh	equ	0xFF7
  7946                           tblptrl	equ	0xFF6
  7947                           tablat	equ	0xFF5
  7948                           prodh	equ	0xFF4
  7949                           prodl	equ	0xFF3
  7950                           intcon	equ	0xFF2
  7951                           intcon2	equ	0xFF1
  7952                           postinc0	equ	0xFEE
  7953                           wreg	equ	0xFE8
  7954                           postdec1	equ	0xFE5
  7955                           fsr1l	equ	0xFE1
  7956                           indf2	equ	0xFDF
  7957                           postinc2	equ	0xFDE
  7958                           postdec2	equ	0xFDD
  7959                           fsr2h	equ	0xFDA
  7960                           fsr2l	equ	0xFD9
  7961                           status	equ	0xFD8
  7962                           
  7963 ;; *************** function _Do_Init *****************
  7964 ;; Defined at:
  7965 ;;		line 86 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/Lab12_1.c"
  7966 ;; Parameters:    Size  Location     Type
  7967 ;;		None
  7968 ;; Auto vars:     Size  Location     Type
  7969 ;;		None
  7970 ;; Return value:  Size  Location     Type
  7971 ;;		None               void
  7972 ;; Registers used:
  7973 ;;		wreg, status,2, status,0, cstack
  7974 ;; Tracked objects:
  7975 ;;		On entry : 0/0
  7976 ;;		On exit  : 0/0
  7977 ;;		Unchanged: 0/0
  7978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7983 ;;Total ram usage:        0 bytes
  7984 ;; Hardware stack levels used:    1
  7985 ;; Hardware stack levels required when called:    7
  7986 ;; This function calls:
  7987 ;;		_DS1621_Init
  7988 ;;		_I2C_Init
  7989 ;;		_init_INTERRUPT
  7990 ;;		_init_UART
  7991 ;; This function is called by:
  7992 ;;		_main
  7993 ;; This function uses a non-reentrant model
  7994 ;;
  7995                           
  7996                           	psect	text36
  7997  001D76                     __ptext36:
  7998                           	opt stack 0
  7999  001D76                     _Do_Init:
  8000                           	opt stack 23
  8001                           
  8002                           ;Lab12_1.c: 88: init_UART();
  8003                           
  8004                           ;incstack = 0
  8005  001D76  EC0C  F011         	call	_init_UART	;wreg free
  8006                           
  8007                           ;Lab12_1.c: 89: OSCCON=0x70;
  8008  001D7A  0E70               	movlw	112
  8009  001D7C  6ED3               	movwf	4051,c	;volatile
  8010                           
  8011                           ;Lab12_1.c: 91: ADCON1=0x0F;
  8012  001D7E  0E0F               	movlw	15
  8013  001D80  6EC1               	movwf	4033,c	;volatile
  8014                           
  8015                           ;Lab12_1.c: 92: TRISA = 0x00;
  8016  001D82  0E00               	movlw	0
  8017  001D84  6E92               	movwf	3986,c	;volatile
  8018                           
  8019                           ;Lab12_1.c: 93: TRISB = 0x01;
  8020  001D86  0E01               	movlw	1
  8021  001D88  6E93               	movwf	3987,c	;volatile
  8022                           
  8023                           ;Lab12_1.c: 94: TRISC = 0x01;
  8024  001D8A  0E01               	movlw	1
  8025  001D8C  6E94               	movwf	3988,c	;volatile
  8026                           
  8027                           ;Lab12_1.c: 95: TRISD = 0x00;
  8028  001D8E  0E00               	movlw	0
  8029  001D90  6E95               	movwf	3989,c	;volatile
  8030                           
  8031                           ;Lab12_1.c: 96: TRISE= 0x00;
  8032  001D92  0E00               	movlw	0
  8033  001D94  6E96               	movwf	3990,c	;volatile
  8034                           
  8035                           ;Lab12_1.c: 99: RBPU=0;
  8036  001D96  9EF1               	bcf	intcon2,7,c	;volatile
  8037                           
  8038                           ;Lab12_1.c: 100: TMR3L = 0x00;
  8039  001D98  0E00               	movlw	0
  8040  001D9A  6EB2               	movwf	4018,c	;volatile
  8041                           
  8042                           ;Lab12_1.c: 101: T3CON = 0x03;
  8043  001D9C  0E03               	movlw	3
  8044  001D9E  6EB1               	movwf	4017,c	;volatile
  8045                           
  8046                           ;Lab12_1.c: 102: I2C_Init(100000);
  8047  001DA0  0EA0               	movlw	160
  8048  001DA2  6E11               	movwf	I2C_Init@c,c
  8049  001DA4  0E86               	movlw	134
  8050  001DA6  6E12               	movwf	I2C_Init@c+1,c
  8051  001DA8  0E01               	movlw	1
  8052  001DAA  6E13               	movwf	I2C_Init@c+2,c
  8053  001DAC  0E00               	movlw	0
  8054  001DAE  6E14               	movwf	I2C_Init@c+3,c
  8055  001DB0  EC77  F011         	call	_I2C_Init	;wreg free
  8056                           
  8057                           ;Lab12_1.c: 104: DS1621_Init();
  8058  001DB4  EC9C  F010         	call	_DS1621_Init	;wreg free
  8059                           
  8060                           ;Lab12_1.c: 105: init_INTERRUPT();
  8061  001DB8  ECE1  F010         	call	_init_INTERRUPT	;wreg free
  8062                           
  8063                           ;Lab12_1.c: 106: FAN = 0;
  8064  001DBC  0E00               	movlw	0
  8065  001DBE  6E50               	movwf	_FAN,c
  8066                           
  8067                           ;Lab12_1.c: 107: PORTAbits.RA5 = 0;
  8068  001DC0  9A80               	bcf	3968,5,c	;volatile
  8069  001DC2  0012               	return		;funcret
  8070  001DC4                     __end_of_Do_Init:
  8071                           	opt stack 0
  8072                           tblptru	equ	0xFF8
  8073                           tblptrh	equ	0xFF7
  8074                           tblptrl	equ	0xFF6
  8075                           tablat	equ	0xFF5
  8076                           prodh	equ	0xFF4
  8077                           prodl	equ	0xFF3
  8078                           intcon	equ	0xFF2
  8079                           intcon2	equ	0xFF1
  8080                           postinc0	equ	0xFEE
  8081                           wreg	equ	0xFE8
  8082                           postdec1	equ	0xFE5
  8083                           fsr1l	equ	0xFE1
  8084                           indf2	equ	0xFDF
  8085                           postinc2	equ	0xFDE
  8086                           postdec2	equ	0xFDD
  8087                           fsr2h	equ	0xFDA
  8088                           fsr2l	equ	0xFD9
  8089                           status	equ	0xFD8
  8090                           
  8091 ;; *************** function _init_UART *****************
  8092 ;; Defined at:
  8093 ;;		line 80 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/Lab12_1.c"
  8094 ;; Parameters:    Size  Location     Type
  8095 ;;		None
  8096 ;; Auto vars:     Size  Location     Type
  8097 ;;		None
  8098 ;; Return value:  Size  Location     Type
  8099 ;;		None               void
  8100 ;; Registers used:
  8101 ;;		wreg, status,2, cstack
  8102 ;; Tracked objects:
  8103 ;;		On entry : 0/0
  8104 ;;		On exit  : 0/0
  8105 ;;		Unchanged: 0/0
  8106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8111 ;;Total ram usage:        0 bytes
  8112 ;; Hardware stack levels used:    1
  8113 ;; Hardware stack levels required when called:    4
  8114 ;; This function calls:
  8115 ;;		_OpenUSART
  8116 ;; This function is called by:
  8117 ;;		_Do_Init
  8118 ;; This function uses a non-reentrant model
  8119 ;;
  8120                           
  8121                           	psect	text37
  8122  002218                     __ptext37:
  8123                           	opt stack 0
  8124  002218                     _init_UART:
  8125                           	opt stack 25
  8126                           
  8127                           ;Lab12_1.c: 82: OpenUSART (0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b1111111
      +                          1 & 0b11111111, 25);
  8128                           
  8129                           ;incstack = 0
  8130  002218  0E00               	movlw	0
  8131  00221A  6E12               	movwf	OpenUSART@spbrg+1,c
  8132  00221C  0E19               	movlw	25
  8133  00221E  6E11               	movwf	OpenUSART@spbrg,c
  8134  002220  0E3C               	movlw	60
  8135  002222  EC6A  F00D         	call	_OpenUSART
  8136                           
  8137                           ;Lab12_1.c: 83: OSCCON = 0x70;
  8138  002226  0E70               	movlw	112
  8139  002228  6ED3               	movwf	4051,c	;volatile
  8140  00222A  0012               	return		;funcret
  8141  00222C                     __end_of_init_UART:
  8142                           	opt stack 0
  8143                           tblptru	equ	0xFF8
  8144                           tblptrh	equ	0xFF7
  8145                           tblptrl	equ	0xFF6
  8146                           tablat	equ	0xFF5
  8147                           prodh	equ	0xFF4
  8148                           prodl	equ	0xFF3
  8149                           intcon	equ	0xFF2
  8150                           intcon2	equ	0xFF1
  8151                           postinc0	equ	0xFEE
  8152                           wreg	equ	0xFE8
  8153                           postdec1	equ	0xFE5
  8154                           fsr1l	equ	0xFE1
  8155                           indf2	equ	0xFDF
  8156                           postinc2	equ	0xFDE
  8157                           postdec2	equ	0xFDD
  8158                           fsr2h	equ	0xFDA
  8159                           fsr2l	equ	0xFD9
  8160                           status	equ	0xFD8
  8161                           
  8162 ;; *************** function _OpenUSART *****************
  8163 ;; Defined at:
  8164 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  8165 ;; Parameters:    Size  Location     Type
  8166 ;;  config          1    wreg     unsigned char 
  8167 ;;  spbrg           2   16[COMRAM] unsigned int 
  8168 ;; Auto vars:     Size  Location     Type
  8169 ;;  config          1   18[COMRAM] unsigned char 
  8170 ;; Return value:  Size  Location     Type
  8171 ;;		None               void
  8172 ;; Registers used:
  8173 ;;		wreg, status,2
  8174 ;; Tracked objects:
  8175 ;;		On entry : 0/0
  8176 ;;		On exit  : 0/0
  8177 ;;		Unchanged: 0/0
  8178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8179 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8180 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8182 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8183 ;;Total ram usage:        3 bytes
  8184 ;; Hardware stack levels used:    1
  8185 ;; Hardware stack levels required when called:    3
  8186 ;; This function calls:
  8187 ;;		Nothing
  8188 ;; This function is called by:
  8189 ;;		_init_UART
  8190 ;; This function uses a non-reentrant model
  8191 ;;
  8192                           
  8193                           	psect	text38
  8194  001AD4                     __ptext38:
  8195                           	opt stack 0
  8196  001AD4                     _OpenUSART:
  8197                           	opt stack 25
  8198                           
  8199                           ;incstack = 0
  8200                           ;OpenUSART@config stored from wreg
  8201  001AD4  6E13               	movwf	OpenUSART@config,c
  8202  001AD6  0E00               	movlw	0
  8203  001AD8  6EAC               	movwf	4012,c	;volatile
  8204  001ADA  0E00               	movlw	0
  8205  001ADC  6EAB               	movwf	4011,c	;volatile
  8206  001ADE  A013               	btfss	OpenUSART@config,0,c
  8207  001AE0  D002               	goto	l5823
  8208  001AE2  88AC               	bsf	4012,4,c	;volatile
  8209  001AE4  D000               	goto	l5823
  8210  001AE6                     l5823:
  8211  001AE6  A213               	btfss	OpenUSART@config,1,c
  8212  001AE8  D003               	goto	l5827
  8213  001AEA  8CAC               	bsf	4012,6,c	;volatile
  8214  001AEC  8CAB               	bsf	4011,6,c	;volatile
  8215  001AEE  D000               	goto	l5827
  8216  001AF0                     l5827:
  8217  001AF0  A413               	btfss	OpenUSART@config,2,c
  8218  001AF2  D002               	goto	l5831
  8219  001AF4  8EAC               	bsf	4012,7,c	;volatile
  8220  001AF6  D000               	goto	l5831
  8221  001AF8                     l5831:
  8222  001AF8  A613               	btfss	OpenUSART@config,3,c
  8223  001AFA  D002               	goto	l851
  8224  001AFC  88AB               	bsf	4011,4,c	;volatile
  8225  001AFE  D002               	goto	l5835
  8226  001B00                     l851:
  8227  001B00  8AAB               	bsf	4011,5,c	;volatile
  8228  001B02  D000               	goto	l5835
  8229  001B04                     l5835:
  8230  001B04  B813               	btfsc	OpenUSART@config,4,c
  8231  001B06  84AC               	bsf	4012,2,c	;volatile
  8232  001B08  989E               	bcf	3998,4,c	;volatile
  8233  001B0A  AA13               	btfss	OpenUSART@config,5,c
  8234  001B0C  D002               	goto	l5843
  8235  001B0E  86AB               	bsf	4011,3,c	;volatile
  8236  001B10  D000               	goto	l5843
  8237  001B12                     l5843:
  8238  001B12  AC13               	btfss	OpenUSART@config,6,c
  8239  001B14  D002               	goto	l855
  8240  001B16  8A9D               	bsf	3997,5,c	;volatile
  8241  001B18  D001               	goto	l856
  8242  001B1A                     l855:
  8243  001B1A  9A9D               	bcf	3997,5,c	;volatile
  8244  001B1C                     l856:
  8245  001B1C  9A9E               	bcf	3998,5,c	;volatile
  8246  001B1E  AE13               	btfss	OpenUSART@config,7,c
  8247  001B20  D002               	goto	l857
  8248  001B22  889D               	bsf	3997,4,c	;volatile
  8249  001B24  D001               	goto	l858
  8250  001B26                     l857:
  8251  001B26  989D               	bcf	3997,4,c	;volatile
  8252  001B28                     l858:
  8253  001B28  C011  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  8254  001B2C  5012               	movf	OpenUSART@spbrg+1,w,c
  8255  001B2E  6EB0               	movwf	4016,c	;volatile
  8256  001B30  8AAC               	bsf	4012,5,c	;volatile
  8257  001B32  8EAB               	bsf	4011,7,c	;volatile
  8258  001B34  9C94               	bcf	3988,6,c	;volatile
  8259  001B36  8E94               	bsf	3988,7,c	;volatile
  8260  001B38  B8AC               	btfsc	4012,4,c	;volatile
  8261  001B3A  BEAC               	btfsc	4012,7,c	;volatile
  8262  001B3C  D002               	goto	l860
  8263  001B3E  8C94               	bsf	3988,6,c	;volatile
  8264  001B40  D000               	goto	l860
  8265  001B42                     l860:
  8266  001B42  0012               	return		;funcret
  8267  001B44                     __end_of_OpenUSART:
  8268                           	opt stack 0
  8269                           tblptru	equ	0xFF8
  8270                           tblptrh	equ	0xFF7
  8271                           tblptrl	equ	0xFF6
  8272                           tablat	equ	0xFF5
  8273                           prodh	equ	0xFF4
  8274                           prodl	equ	0xFF3
  8275                           intcon	equ	0xFF2
  8276                           intcon2	equ	0xFF1
  8277                           postinc0	equ	0xFEE
  8278                           wreg	equ	0xFE8
  8279                           postdec1	equ	0xFE5
  8280                           fsr1l	equ	0xFE1
  8281                           indf2	equ	0xFDF
  8282                           postinc2	equ	0xFDE
  8283                           postdec2	equ	0xFDD
  8284                           fsr2h	equ	0xFDA
  8285                           fsr2l	equ	0xFD9
  8286                           status	equ	0xFD8
  8287                           
  8288 ;; *************** function _init_INTERRUPT *****************
  8289 ;; Defined at:
  8290 ;;		line 14 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/Interrupt.c"
  8291 ;; Parameters:    Size  Location     Type
  8292 ;;		None
  8293 ;; Auto vars:     Size  Location     Type
  8294 ;;		None
  8295 ;; Return value:  Size  Location     Type
  8296 ;;		None               void
  8297 ;; Registers used:
  8298 ;;		wreg, status,2
  8299 ;; Tracked objects:
  8300 ;;		On entry : 0/0
  8301 ;;		On exit  : 0/0
  8302 ;;		Unchanged: 0/0
  8303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8308 ;;Total ram usage:        0 bytes
  8309 ;; Hardware stack levels used:    1
  8310 ;; Hardware stack levels required when called:    3
  8311 ;; This function calls:
  8312 ;;		Nothing
  8313 ;; This function is called by:
  8314 ;;		_Do_Init
  8315 ;; This function uses a non-reentrant model
  8316 ;;
  8317                           
  8318                           	psect	text39
  8319  0021C2                     __ptext39:
  8320                           	opt stack 0
  8321  0021C2                     _init_INTERRUPT:
  8322                           	opt stack 26
  8323                           
  8324                           ;Interrupt.c: 16: INTCONbits.INT0IF = 0;
  8325                           
  8326                           ;incstack = 0
  8327  0021C2  92F2               	bcf	intcon,1,c	;volatile
  8328                           
  8329                           ;Interrupt.c: 17: INTCON2bits.INTEDG0 = 0;
  8330  0021C4  9CF1               	bcf	intcon2,6,c	;volatile
  8331                           
  8332                           ;Interrupt.c: 18: INTCONbits.INT0IE = 1;
  8333  0021C6  88F2               	bsf	intcon,4,c	;volatile
  8334                           
  8335                           ;Interrupt.c: 19: TMR1H = 0;
  8336  0021C8  0E00               	movlw	0
  8337  0021CA  6ECF               	movwf	4047,c	;volatile
  8338                           
  8339                           ;Interrupt.c: 20: TMR1L = 0;
  8340  0021CC  0E00               	movlw	0
  8341  0021CE  6ECE               	movwf	4046,c	;volatile
  8342                           
  8343                           ;Interrupt.c: 21: PIR1bits.TMR1IF = 0;
  8344  0021D0  909E               	bcf	3998,0,c	;volatile
  8345                           
  8346                           ;Interrupt.c: 22: PIE1bits.TMR1IE = 1;
  8347  0021D2  809D               	bsf	3997,0,c	;volatile
  8348                           
  8349                           ;Interrupt.c: 23: INTCONbits.PEIE = 1;
  8350  0021D4  8CF2               	bsf	intcon,6,c	;volatile
  8351                           
  8352                           ;Interrupt.c: 24: INTCONbits.GIE = 1;
  8353  0021D6  8EF2               	bsf	intcon,7,c	;volatile
  8354  0021D8  0012               	return		;funcret
  8355  0021DA                     __end_of_init_INTERRUPT:
  8356                           	opt stack 0
  8357                           tblptru	equ	0xFF8
  8358                           tblptrh	equ	0xFF7
  8359                           tblptrl	equ	0xFF6
  8360                           tablat	equ	0xFF5
  8361                           prodh	equ	0xFF4
  8362                           prodl	equ	0xFF3
  8363                           intcon	equ	0xFF2
  8364                           intcon2	equ	0xFF1
  8365                           postinc0	equ	0xFEE
  8366                           wreg	equ	0xFE8
  8367                           postdec1	equ	0xFE5
  8368                           fsr1l	equ	0xFE1
  8369                           indf2	equ	0xFDF
  8370                           postinc2	equ	0xFDE
  8371                           postdec2	equ	0xFDD
  8372                           fsr2h	equ	0xFDA
  8373                           fsr2l	equ	0xFD9
  8374                           status	equ	0xFD8
  8375                           
  8376 ;; *************** function _I2C_Init *****************
  8377 ;; Defined at:
  8378 ;;		line 14 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/I2C_Soft.c"
  8379 ;; Parameters:    Size  Location     Type
  8380 ;;  c               4   16[COMRAM] unsigned long 
  8381 ;; Auto vars:     Size  Location     Type
  8382 ;;		None
  8383 ;; Return value:  Size  Location     Type
  8384 ;;		None               void
  8385 ;; Registers used:
  8386 ;;		wreg, cstack
  8387 ;; Tracked objects:
  8388 ;;		On entry : 0/0
  8389 ;;		On exit  : 0/0
  8390 ;;		Unchanged: 0/0
  8391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8392 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8395 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8396 ;;Total ram usage:        4 bytes
  8397 ;; Hardware stack levels used:    1
  8398 ;; Hardware stack levels required when called:    4
  8399 ;; This function calls:
  8400 ;;		_i2cHighScl
  8401 ;;		_i2cHighSda
  8402 ;; This function is called by:
  8403 ;;		_Do_Init
  8404 ;; This function uses a non-reentrant model
  8405 ;;
  8406                           
  8407                           	psect	text40
  8408  0022EE                     __ptext40:
  8409                           	opt stack 0
  8410  0022EE                     _I2C_Init:
  8411                           	opt stack 25
  8412                           
  8413                           ;I2C_Soft.c: 16: i2cHighScl();
  8414                           
  8415                           ;incstack = 0
  8416  0022EE  EC6B  F011         	call	_i2cHighScl	;wreg free
  8417                           
  8418                           ;I2C_Soft.c: 17: i2cHighSda();
  8419  0022F2  EC92  F011         	call	_i2cHighSda	;wreg free
  8420  0022F6  0012               	return		;funcret
  8421  0022F8                     __end_of_I2C_Init:
  8422                           	opt stack 0
  8423                           tblptru	equ	0xFF8
  8424                           tblptrh	equ	0xFF7
  8425                           tblptrl	equ	0xFF6
  8426                           tablat	equ	0xFF5
  8427                           prodh	equ	0xFF4
  8428                           prodl	equ	0xFF3
  8429                           intcon	equ	0xFF2
  8430                           intcon2	equ	0xFF1
  8431                           postinc0	equ	0xFEE
  8432                           wreg	equ	0xFE8
  8433                           postdec1	equ	0xFE5
  8434                           fsr1l	equ	0xFE1
  8435                           indf2	equ	0xFDF
  8436                           postinc2	equ	0xFDE
  8437                           postdec2	equ	0xFDD
  8438                           fsr2h	equ	0xFDA
  8439                           fsr2l	equ	0xFD9
  8440                           status	equ	0xFD8
  8441                           
  8442 ;; *************** function _DS1621_Init *****************
  8443 ;; Defined at:
  8444 ;;		line 21 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/I2C_Support.c"
  8445 ;; Parameters:    Size  Location     Type
  8446 ;;		None
  8447 ;; Auto vars:     Size  Location     Type
  8448 ;;  Device          1   21[COMRAM] unsigned char 
  8449 ;; Return value:  Size  Location     Type
  8450 ;;		None               void
  8451 ;; Registers used:
  8452 ;;		wreg, status,2, status,0, cstack
  8453 ;; Tracked objects:
  8454 ;;		On entry : 0/0
  8455 ;;		On exit  : 0/0
  8456 ;;		Unchanged: 0/0
  8457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8459 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8461 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8462 ;;Total ram usage:        1 bytes
  8463 ;; Hardware stack levels used:    1
  8464 ;; Hardware stack levels required when called:    6
  8465 ;; This function calls:
  8466 ;;		_I2C_Write_Cmd_Only
  8467 ;;		_I2C_Write_Cmd_Write_Data
  8468 ;; This function is called by:
  8469 ;;		_Do_Init
  8470 ;; This function uses a non-reentrant model
  8471 ;;
  8472                           
  8473                           	psect	text41
  8474  002138                     __ptext41:
  8475                           	opt stack 0
  8476  002138                     _DS1621_Init:
  8477                           	opt stack 23
  8478                           
  8479                           ;I2C_Support.c: 23: char Device = 0x48;
  8480                           
  8481                           ;incstack = 0
  8482  002138  0E48               	movlw	72
  8483  00213A  6E16               	movwf	DS1621_Init@Device,c
  8484                           
  8485                           ;I2C_Support.c: 24: I2C_Write_Cmd_Write_Data (Device, 0xAC, 0x02);
  8486  00213C  0EAC               	movlw	172
  8487  00213E  6E13               	movwf	I2C_Write_Cmd_Write_Data@Cmd,c
  8488  002140  0E02               	movlw	2
  8489  002142  6E14               	movwf	I2C_Write_Cmd_Write_Data@Data_Out,c
  8490  002144  5016               	movf	DS1621_Init@Device,w,c
  8491  002146  EC8C  F010         	call	_I2C_Write_Cmd_Write_Data
  8492                           
  8493                           ;I2C_Support.c: 25: I2C_Write_Cmd_Only(Device, 0xEE);
  8494  00214A  0EEE               	movlw	238
  8495  00214C  6E13               	movwf	I2C_Write_Cmd_Only@Cmd,c
  8496  00214E  5016               	movf	DS1621_Init@Device,w,c
  8497  002150  ECD4  F010         	call	_I2C_Write_Cmd_Only
  8498  002154  0012               	return		;funcret
  8499  002156                     __end_of_DS1621_Init:
  8500                           	opt stack 0
  8501                           tblptru	equ	0xFF8
  8502                           tblptrh	equ	0xFF7
  8503                           tblptrl	equ	0xFF6
  8504                           tablat	equ	0xFF5
  8505                           prodh	equ	0xFF4
  8506                           prodl	equ	0xFF3
  8507                           intcon	equ	0xFF2
  8508                           intcon2	equ	0xFF1
  8509                           postinc0	equ	0xFEE
  8510                           wreg	equ	0xFE8
  8511                           postdec1	equ	0xFE5
  8512                           fsr1l	equ	0xFE1
  8513                           indf2	equ	0xFDF
  8514                           postinc2	equ	0xFDE
  8515                           postdec2	equ	0xFDD
  8516                           fsr2h	equ	0xFDA
  8517                           fsr2l	equ	0xFD9
  8518                           status	equ	0xFD8
  8519                           
  8520 ;; *************** function _I2C_Write_Cmd_Write_Data *****************
  8521 ;; Defined at:
  8522 ;;		line 152 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/I2C_Soft.c"
  8523 ;; Parameters:    Size  Location     Type
  8524 ;;  Device          1    wreg     unsigned char 
  8525 ;;  Cmd             1   18[COMRAM] unsigned char 
  8526 ;;  Data_Out        1   19[COMRAM] unsigned char 
  8527 ;; Auto vars:     Size  Location     Type
  8528 ;;  Device          1   20[COMRAM] unsigned char 
  8529 ;; Return value:  Size  Location     Type
  8530 ;;		None               void
  8531 ;; Registers used:
  8532 ;;		wreg, status,2, status,0, cstack
  8533 ;; Tracked objects:
  8534 ;;		On entry : 0/0
  8535 ;;		On exit  : 0/0
  8536 ;;		Unchanged: 0/0
  8537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8538 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8539 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8541 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8542 ;;Total ram usage:        3 bytes
  8543 ;; Hardware stack levels used:    1
  8544 ;; Hardware stack levels required when called:    5
  8545 ;; This function calls:
  8546 ;;		_I2C_Start
  8547 ;;		_I2C_Stop
  8548 ;;		_I2C_Write
  8549 ;; This function is called by:
  8550 ;;		_DS1621_Init
  8551 ;; This function uses a non-reentrant model
  8552 ;;
  8553                           
  8554                           	psect	text42
  8555  002118                     __ptext42:
  8556                           	opt stack 0
  8557  002118                     _I2C_Write_Cmd_Write_Data:
  8558                           	opt stack 23
  8559                           
  8560                           ;incstack = 0
  8561                           ;I2C_Write_Cmd_Write_Data@Device stored from wreg
  8562  002118  6E15               	movwf	I2C_Write_Cmd_Write_Data@Device,c
  8563                           
  8564                           ;I2C_Soft.c: 154: I2C_Start();
  8565  00211A  EC3B  F011         	call	_I2C_Start	;wreg free
  8566                           
  8567                           ;I2C_Soft.c: 155: I2C_Write((Device << 1) | 0);
  8568  00211E  5015               	movf	I2C_Write_Cmd_Write_Data@Device,w,c
  8569  002120  2415               	addwf	I2C_Write_Cmd_Write_Data@Device,w,c
  8570  002122  ECAE  F00F         	call	_I2C_Write
  8571                           
  8572                           ;I2C_Soft.c: 156: I2C_Write(Cmd);
  8573  002126  5013               	movf	I2C_Write_Cmd_Write_Data@Cmd,w,c
  8574  002128  ECAE  F00F         	call	_I2C_Write
  8575                           
  8576                           ;I2C_Soft.c: 157: I2C_Write(Data_Out);
  8577  00212C  5014               	movf	I2C_Write_Cmd_Write_Data@Data_Out,w,c
  8578  00212E  ECAE  F00F         	call	_I2C_Write
  8579                           
  8580                           ;I2C_Soft.c: 158: I2C_Stop();
  8581  002132  EC32  F011         	call	_I2C_Stop	;wreg free
  8582  002136  0012               	return		;funcret
  8583  002138                     __end_of_I2C_Write_Cmd_Write_Data:
  8584                           	opt stack 0
  8585                           tblptru	equ	0xFF8
  8586                           tblptrh	equ	0xFF7
  8587                           tblptrl	equ	0xFF6
  8588                           tablat	equ	0xFF5
  8589                           prodh	equ	0xFF4
  8590                           prodl	equ	0xFF3
  8591                           intcon	equ	0xFF2
  8592                           intcon2	equ	0xFF1
  8593                           postinc0	equ	0xFEE
  8594                           wreg	equ	0xFE8
  8595                           postdec1	equ	0xFE5
  8596                           fsr1l	equ	0xFE1
  8597                           indf2	equ	0xFDF
  8598                           postinc2	equ	0xFDE
  8599                           postdec2	equ	0xFDD
  8600                           fsr2h	equ	0xFDA
  8601                           fsr2l	equ	0xFD9
  8602                           status	equ	0xFD8
  8603                           
  8604 ;; *************** function _I2C_Write_Cmd_Only *****************
  8605 ;; Defined at:
  8606 ;;		line 144 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/I2C_Soft.c"
  8607 ;; Parameters:    Size  Location     Type
  8608 ;;  Device          1    wreg     unsigned char 
  8609 ;;  Cmd             1   18[COMRAM] unsigned char 
  8610 ;; Auto vars:     Size  Location     Type
  8611 ;;  Device          1   19[COMRAM] unsigned char 
  8612 ;; Return value:  Size  Location     Type
  8613 ;;		None               void
  8614 ;; Registers used:
  8615 ;;		wreg, status,2, status,0, cstack
  8616 ;; Tracked objects:
  8617 ;;		On entry : 0/0
  8618 ;;		On exit  : 0/0
  8619 ;;		Unchanged: 0/0
  8620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8621 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8622 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8624 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8625 ;;Total ram usage:        2 bytes
  8626 ;; Hardware stack levels used:    1
  8627 ;; Hardware stack levels required when called:    5
  8628 ;; This function calls:
  8629 ;;		_I2C_Start
  8630 ;;		_I2C_Stop
  8631 ;;		_I2C_Write
  8632 ;; This function is called by:
  8633 ;;		_DS1621_Init
  8634 ;; This function uses a non-reentrant model
  8635 ;;
  8636                           
  8637                           	psect	text43
  8638  0021A8                     __ptext43:
  8639                           	opt stack 0
  8640  0021A8                     _I2C_Write_Cmd_Only:
  8641                           	opt stack 23
  8642                           
  8643                           ;incstack = 0
  8644                           ;I2C_Write_Cmd_Only@Device stored from wreg
  8645  0021A8  6E14               	movwf	I2C_Write_Cmd_Only@Device,c
  8646                           
  8647                           ;I2C_Soft.c: 146: I2C_Start();
  8648  0021AA  EC3B  F011         	call	_I2C_Start	;wreg free
  8649                           
  8650                           ;I2C_Soft.c: 147: I2C_Write((Device << 1) | 0);
  8651  0021AE  5014               	movf	I2C_Write_Cmd_Only@Device,w,c
  8652  0021B0  2414               	addwf	I2C_Write_Cmd_Only@Device,w,c
  8653  0021B2  ECAE  F00F         	call	_I2C_Write
  8654                           
  8655                           ;I2C_Soft.c: 148: I2C_Write(Cmd);
  8656  0021B6  5013               	movf	I2C_Write_Cmd_Only@Cmd,w,c
  8657  0021B8  ECAE  F00F         	call	_I2C_Write
  8658                           
  8659                           ;I2C_Soft.c: 149: I2C_Stop();
  8660  0021BC  EC32  F011         	call	_I2C_Stop	;wreg free
  8661  0021C0  0012               	return		;funcret
  8662  0021C2                     __end_of_I2C_Write_Cmd_Only:
  8663                           	opt stack 0
  8664                           tblptru	equ	0xFF8
  8665                           tblptrh	equ	0xFF7
  8666                           tblptrl	equ	0xFF6
  8667                           tablat	equ	0xFF5
  8668                           prodh	equ	0xFF4
  8669                           prodl	equ	0xFF3
  8670                           intcon	equ	0xFF2
  8671                           intcon2	equ	0xFF1
  8672                           postinc0	equ	0xFEE
  8673                           wreg	equ	0xFE8
  8674                           postdec1	equ	0xFE5
  8675                           fsr1l	equ	0xFE1
  8676                           indf2	equ	0xFDF
  8677                           postinc2	equ	0xFDE
  8678                           postdec2	equ	0xFDD
  8679                           fsr2h	equ	0xFDA
  8680                           fsr2l	equ	0xFD9
  8681                           status	equ	0xFD8
  8682                           
  8683 ;; *************** function _Decrease_Speed *****************
  8684 ;; Defined at:
  8685 ;;		line 53 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/Fan_Support.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;		None
  8688 ;; Auto vars:     Size  Location     Type
  8689 ;;		None
  8690 ;; Return value:  Size  Location     Type
  8691 ;;		None               void
  8692 ;; Registers used:
  8693 ;;		wreg, status,2, status,0, cstack
  8694 ;; Tracked objects:
  8695 ;;		On entry : 0/0
  8696 ;;		On exit  : 0/0
  8697 ;;		Unchanged: 0/0
  8698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8703 ;;Total ram usage:        0 bytes
  8704 ;; Hardware stack levels used:    1
  8705 ;; Hardware stack levels required when called:    7
  8706 ;; This function calls:
  8707 ;;		_Do_Beep
  8708 ;;		_do_update_pwm
  8709 ;; This function is called by:
  8710 ;;		_main
  8711 ;; This function uses a non-reentrant model
  8712 ;;
  8713                           
  8714                           	psect	text44
  8715  002172                     __ptext44:
  8716                           	opt stack 0
  8717  002172                     _Decrease_Speed:
  8718                           	opt stack 23
  8719                           
  8720                           ;Fan_Support.c: 56: if (duty_cycle = 0){
  8721                           
  8722                           ;incstack = 0
  8723  002172  0E00               	movlw	0
  8724  002174  6E5C               	movwf	_duty_cycle,c
  8725  002176  D003               	goto	l6223
  8726                           
  8727                           ;Fan_Support.c: 57: Do_Beep();
  8728  002178  EC16  F011         	call	_Do_Beep	;wreg free
  8729                           
  8730                           ;Fan_Support.c: 58: }
  8731  00217C  D007               	goto	l62
  8732  00217E                     l6223:
  8733                           
  8734                           ;Fan_Support.c: 59: else {
  8735                           ;Fan_Support.c: 60: duty_cycle = duty_cycle - 5;
  8736  00217E  505C               	movf	_duty_cycle,w,c
  8737  002180  0FFB               	addlw	251
  8738  002182  6E5C               	movwf	_duty_cycle,c
  8739                           
  8740                           ;Fan_Support.c: 61: do_update_pwm(duty_cycle);
  8741  002184  505C               	movf	_duty_cycle,w,c
  8742  002186  ECBB  F00B         	call	_do_update_pwm
  8743  00218A  D000               	goto	l62
  8744  00218C                     l62:
  8745  00218C  0012               	return		;funcret
  8746  00218E                     __end_of_Decrease_Speed:
  8747                           	opt stack 0
  8748                           tblptru	equ	0xFF8
  8749                           tblptrh	equ	0xFF7
  8750                           tblptrl	equ	0xFF6
  8751                           tablat	equ	0xFF5
  8752                           prodh	equ	0xFF4
  8753                           prodl	equ	0xFF3
  8754                           intcon	equ	0xFF2
  8755                           intcon2	equ	0xFF1
  8756                           postinc0	equ	0xFEE
  8757                           wreg	equ	0xFE8
  8758                           postdec1	equ	0xFE5
  8759                           fsr1l	equ	0xFE1
  8760                           indf2	equ	0xFDF
  8761                           postinc2	equ	0xFDE
  8762                           postdec2	equ	0xFDD
  8763                           fsr2h	equ	0xFDA
  8764                           fsr2l	equ	0xFD9
  8765                           status	equ	0xFD8
  8766                           
  8767 ;; *************** function _Do_Beep *****************
  8768 ;; Defined at:
  8769 ;;		line 127 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/Fan_Support.c"
  8770 ;; Parameters:    Size  Location     Type
  8771 ;;		None
  8772 ;; Auto vars:     Size  Location     Type
  8773 ;;		None
  8774 ;; Return value:  Size  Location     Type
  8775 ;;		None               void
  8776 ;; Registers used:
  8777 ;;		wreg, status,2, status,0, cstack
  8778 ;; Tracked objects:
  8779 ;;		On entry : 0/0
  8780 ;;		On exit  : 0/0
  8781 ;;		Unchanged: 0/0
  8782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8787 ;;Total ram usage:        0 bytes
  8788 ;; Hardware stack levels used:    1
  8789 ;; Hardware stack levels required when called:    6
  8790 ;; This function calls:
  8791 ;;		_Activate_Buzzer
  8792 ;;		_Deactivate_Buzzer
  8793 ;;		_Wait_One_Sec
  8794 ;;		_do_update_pwm
  8795 ;; This function is called by:
  8796 ;;		_Increase_Speed
  8797 ;;		_Decrease_Speed
  8798 ;;		_main
  8799 ;; This function uses a non-reentrant model
  8800 ;;
  8801                           
  8802                           	psect	text45
  8803  00222C                     __ptext45:
  8804                           	opt stack 0
  8805  00222C                     _Do_Beep:
  8806                           	opt stack 23
  8807                           
  8808                           ;Fan_Support.c: 129: Activate_Buzzer();
  8809                           
  8810                           ;incstack = 0
  8811  00222C  EC29  F011         	call	_Activate_Buzzer	;wreg free
  8812                           
  8813                           ;Fan_Support.c: 130: Wait_One_Sec();
  8814  002230  EC58  F010         	call	_Wait_One_Sec	;wreg free
  8815                           
  8816                           ;Fan_Support.c: 131: Deactivate_Buzzer();
  8817  002234  EC8A  F011         	call	_Deactivate_Buzzer	;wreg free
  8818                           
  8819                           ;Fan_Support.c: 132: do_update_pwm(duty_cycle);
  8820  002238  505C               	movf	_duty_cycle,w,c
  8821  00223A  ECBB  F00B         	call	_do_update_pwm
  8822  00223E  0012               	return		;funcret
  8823  002240                     __end_of_Do_Beep:
  8824                           	opt stack 0
  8825                           tblptru	equ	0xFF8
  8826                           tblptrh	equ	0xFF7
  8827                           tblptrl	equ	0xFF6
  8828                           tablat	equ	0xFF5
  8829                           prodh	equ	0xFF4
  8830                           prodl	equ	0xFF3
  8831                           intcon	equ	0xFF2
  8832                           intcon2	equ	0xFF1
  8833                           postinc0	equ	0xFEE
  8834                           wreg	equ	0xFE8
  8835                           postdec1	equ	0xFE5
  8836                           fsr1l	equ	0xFE1
  8837                           indf2	equ	0xFDF
  8838                           postinc2	equ	0xFDE
  8839                           postdec2	equ	0xFDD
  8840                           fsr2h	equ	0xFDA
  8841                           fsr2l	equ	0xFD9
  8842                           status	equ	0xFD8
  8843                           
  8844 ;; *************** function _do_update_pwm *****************
  8845 ;; Defined at:
  8846 ;;		line 66 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/Fan_Support.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;  duty_cycle      1    wreg     unsigned char 
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;  duty_cycle      1    3[BANK0 ] unsigned char 
  8851 ;;  dc_f            3    0[BANK0 ] float 
  8852 ;;  dc_I            2    4[BANK0 ] int 
  8853 ;; Return value:  Size  Location     Type
  8854 ;;		None               void
  8855 ;; Registers used:
  8856 ;;		wreg, status,2, status,0, cstack
  8857 ;; Tracked objects:
  8858 ;;		On entry : 0/0
  8859 ;;		On exit  : 0/0
  8860 ;;		Unchanged: 0/0
  8861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8863 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8864 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8865 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8866 ;;Total ram usage:        9 bytes
  8867 ;; Hardware stack levels used:    1
  8868 ;; Hardware stack levels required when called:    5
  8869 ;; This function calls:
  8870 ;;		___ftdiv
  8871 ;;		___ftmul
  8872 ;;		___fttol
  8873 ;;		___lbtoft
  8874 ;; This function is called by:
  8875 ;;		_Turn_On_Fan
  8876 ;;		_Increase_Speed
  8877 ;;		_Decrease_Speed
  8878 ;;		_Do_Beep
  8879 ;; This function uses a non-reentrant model
  8880 ;;
  8881                           
  8882                           	psect	text46
  8883  001776                     __ptext46:
  8884                           	opt stack 0
  8885  001776                     _do_update_pwm:
  8886                           	opt stack 23
  8887                           
  8888                           ;incstack = 0
  8889                           ;do_update_pwm@duty_cycle stored from wreg
  8890  001776  0100               	movlb	0	; () banked
  8891  001778  6FEE               	movwf	do_update_pwm@duty_cycle& (0+255),b
  8892                           
  8893                           ; BSR set to: 0
  8894                           ;Fan_Support.c: 68: float dc_f;
  8895                           ;Fan_Support.c: 69: int dc_I;
  8896                           ;Fan_Support.c: 70: PR2 = 0b00000100;
  8897  00177A  0E04               	movlw	4
  8898  00177C  6ECB               	movwf	4043,c	;volatile
  8899                           
  8900                           ;Fan_Support.c: 71: T2CON = 0b00000111;
  8901  00177E  0E07               	movlw	7
  8902  001780  6ECA               	movwf	4042,c	;volatile
  8903                           
  8904                           ; BSR set to: 0
  8905                           ;Fan_Support.c: 72: dc_f = ( 4.0 * duty_cycle / 20.0) ;
  8906  001782  0E00               	movlw	0
  8907  001784  6E20               	movwf	___ftmul@f2,c
  8908  001786  0E80               	movlw	128
  8909  001788  6E21               	movwf	___ftmul@f2+1,c
  8910  00178A  0E40               	movlw	64
  8911  00178C  6E22               	movwf	___ftmul@f2+2,c
  8912  00178E  0100               	movlb	0	; () banked
  8913  001790  51EE               	movf	do_update_pwm@duty_cycle& (0+255),w,b
  8914  001792  EC45  F010         	call	___lbtoft
  8915  001796  C019  F01D         	movff	?___lbtoft,___ftmul@f1
  8916  00179A  C01A  F01E         	movff	?___lbtoft+1,___ftmul@f1+1
  8917  00179E  C01B  F01F         	movff	?___lbtoft+2,___ftmul@f1+2
  8918  0017A2  EC11  F009         	call	___ftmul	;wreg free
  8919  0017A6  C01D  F02C         	movff	?___ftmul,___ftdiv@f1
  8920  0017AA  C01E  F02D         	movff	?___ftmul+1,___ftdiv@f1+1
  8921  0017AE  C01F  F02E         	movff	?___ftmul+2,___ftdiv@f1+2
  8922  0017B2  0E00               	movlw	0
  8923  0017B4  6E2F               	movwf	___ftdiv@f2,c
  8924  0017B6  0EA0               	movlw	160
  8925  0017B8  6E30               	movwf	___ftdiv@f2+1,c
  8926  0017BA  0E41               	movlw	65
  8927  0017BC  6E31               	movwf	___ftdiv@f2+2,c
  8928  0017BE  EC79  F00A         	call	___ftdiv	;wreg free
  8929  0017C2  C02C  F0EB         	movff	?___ftdiv,do_update_pwm@dc_f
  8930  0017C6  C02D  F0EC         	movff	?___ftdiv+1,do_update_pwm@dc_f+1
  8931  0017CA  C02E  F0ED         	movff	?___ftdiv+2,do_update_pwm@dc_f+2
  8932                           
  8933                           ;Fan_Support.c: 74: dc_I = (int) dc_f;
  8934  0017CE  C0EB  F011         	movff	do_update_pwm@dc_f,___fttol@f1
  8935  0017D2  C0EC  F012         	movff	do_update_pwm@dc_f+1,___fttol@f1+1
  8936  0017D6  C0ED  F013         	movff	do_update_pwm@dc_f+2,___fttol@f1+2
  8937  0017DA  EC06  F00A         	call	___fttol	;wreg free
  8938  0017DE  C011  F0EF         	movff	?___fttol,do_update_pwm@dc_I
  8939  0017E2  C012  F0F0         	movff	?___fttol+1,do_update_pwm@dc_I+1
  8940                           
  8941                           ;Fan_Support.c: 75: if (dc_I > duty_cycle) dc_I++;
  8942  0017E6  0100               	movlb	0	; () banked
  8943  0017E8  51EE               	movf	do_update_pwm@duty_cycle& (0+255),w,b
  8944  0017EA  6E3B               	movwf	??_do_update_pwm& (0+255),c
  8945  0017EC  6A3C               	clrf	(??_do_update_pwm+1)& (0+255),c
  8946  0017EE  0100               	movlb	0	; () banked
  8947  0017F0  51EF               	movf	do_update_pwm@dc_I& (0+255),w,b
  8948  0017F2  5C3B               	subwf	??_do_update_pwm,w,c
  8949  0017F4  503C               	movf	??_do_update_pwm+1,w,c
  8950  0017F6  0A80               	xorlw	128
  8951  0017F8  6E3D               	movwf	(??_do_update_pwm+2)& (0+255),c
  8952  0017FA  0100               	movlb	0	; () banked
  8953  0017FC  51F0               	movf	(do_update_pwm@dc_I+1)& (0+255),w,b
  8954  0017FE  0A80               	xorlw	128
  8955  001800  583D               	subwfb	(??_do_update_pwm+2)& (0+255),w,c
  8956  001802  B0D8               	btfsc	status,0,c
  8957  001804  D004               	goto	l5573
  8958                           
  8959                           ; BSR set to: 0
  8960  001806  0100               	movlb	0	; () banked
  8961  001808  4BEF               	infsnz	do_update_pwm@dc_I& (0+255),f,b
  8962  00180A  2BF0               	incf	(do_update_pwm@dc_I+1)& (0+255),f,b
  8963  00180C  D000               	goto	l5573
  8964  00180E                     l5573:
  8965                           
  8966                           ; BSR set to: 0
  8967                           ;Fan_Support.c: 76: CCP1CON = ((dc_I & 0x03) << 4) | 0b00001100;
  8968  00180E  C0EF  F03B         	movff	do_update_pwm@dc_I,??_do_update_pwm
  8969  001812  0E03               	movlw	3
  8970  001814  163B               	andwf	??_do_update_pwm,f,c
  8971  001816  383B               	swapf	??_do_update_pwm,w,c
  8972  001818  0BF0               	andlw	240
  8973  00181A  090C               	iorlw	12
  8974  00181C  6EBD               	movwf	4029,c	;volatile
  8975                           
  8976                           ; BSR set to: 0
  8977                           ;Fan_Support.c: 77: CCPR1L = (dc_I) >> 2;
  8978  00181E  C0EF  F03B         	movff	do_update_pwm@dc_I,??_do_update_pwm
  8979  001822  C0F0  F03C         	movff	do_update_pwm@dc_I+1,??_do_update_pwm+1
  8980  001826  343C               	rlcf	??_do_update_pwm+1,w,c
  8981  001828  323C               	rrcf	??_do_update_pwm+1,f,c
  8982  00182A  323B               	rrcf	??_do_update_pwm,f,c
  8983  00182C  343C               	rlcf	??_do_update_pwm+1,w,c
  8984  00182E  323C               	rrcf	??_do_update_pwm+1,f,c
  8985  001830  323B               	rrcf	??_do_update_pwm,f,c
  8986  001832  503B               	movf	??_do_update_pwm,w,c
  8987  001834  6EBE               	movwf	4030,c	;volatile
  8988                           
  8989                           ; BSR set to: 0
  8990  001836  0012               	return		;funcret
  8991  001838                     __end_of_do_update_pwm:
  8992                           	opt stack 0
  8993                           tblptru	equ	0xFF8
  8994                           tblptrh	equ	0xFF7
  8995                           tblptrl	equ	0xFF6
  8996                           tablat	equ	0xFF5
  8997                           prodh	equ	0xFF4
  8998                           prodl	equ	0xFF3
  8999                           intcon	equ	0xFF2
  9000                           intcon2	equ	0xFF1
  9001                           postinc0	equ	0xFEE
  9002                           wreg	equ	0xFE8
  9003                           postdec1	equ	0xFE5
  9004                           fsr1l	equ	0xFE1
  9005                           indf2	equ	0xFDF
  9006                           postinc2	equ	0xFDE
  9007                           postdec2	equ	0xFDD
  9008                           fsr2h	equ	0xFDA
  9009                           fsr2l	equ	0xFD9
  9010                           status	equ	0xFD8
  9011                           
  9012 ;; *************** function ___lbtoft *****************
  9013 ;; Defined at:
  9014 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbtoft.c"
  9015 ;; Parameters:    Size  Location     Type
  9016 ;;  c               1    wreg     unsigned char 
  9017 ;; Auto vars:     Size  Location     Type
  9018 ;;  c               1   27[COMRAM] unsigned char 
  9019 ;; Return value:  Size  Location     Type
  9020 ;;                  3   24[COMRAM] float 
  9021 ;; Registers used:
  9022 ;;		wreg, status,2, status,0, cstack
  9023 ;; Tracked objects:
  9024 ;;		On entry : 0/0
  9025 ;;		On exit  : 0/0
  9026 ;;		Unchanged: 0/0
  9027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9028 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9029 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9031 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9032 ;;Total ram usage:        4 bytes
  9033 ;; Hardware stack levels used:    1
  9034 ;; Hardware stack levels required when called:    4
  9035 ;; This function calls:
  9036 ;;		___ftpack
  9037 ;; This function is called by:
  9038 ;;		_do_update_pwm
  9039 ;; This function uses a non-reentrant model
  9040 ;;
  9041                           
  9042                           	psect	text47
  9043  00208A                     __ptext47:
  9044                           	opt stack 0
  9045  00208A                     ___lbtoft:
  9046                           	opt stack 23
  9047                           
  9048                           ; BSR set to: 0
  9049                           ;incstack = 0
  9050                           ;___lbtoft@c stored from wreg
  9051  00208A  6E1C               	movwf	___lbtoft@c,c
  9052  00208C  501C               	movf	___lbtoft@c,w,c
  9053  00208E  6E11               	movwf	___ftpack@arg,c
  9054  002090  6A12               	clrf	___ftpack@arg+1,c
  9055  002092  6A13               	clrf	___ftpack@arg+2,c
  9056  002094  0E8E               	movlw	142
  9057  002096  6E14               	movwf	___ftpack@exp,c
  9058  002098  0E00               	movlw	0
  9059  00209A  6E15               	movwf	___ftpack@sign,c
  9060  00209C  EC58  F00B         	call	___ftpack	;wreg free
  9061  0020A0  C011  F019         	movff	?___ftpack,?___lbtoft
  9062  0020A4  C012  F01A         	movff	?___ftpack+1,?___lbtoft+1
  9063  0020A8  C013  F01B         	movff	?___ftpack+2,?___lbtoft+2
  9064  0020AC  D000               	goto	l1320
  9065  0020AE                     l1320:
  9066  0020AE  0012               	return		;funcret
  9067  0020B0                     __end_of___lbtoft:
  9068                           	opt stack 0
  9069                           tblptru	equ	0xFF8
  9070                           tblptrh	equ	0xFF7
  9071                           tblptrl	equ	0xFF6
  9072                           tablat	equ	0xFF5
  9073                           prodh	equ	0xFF4
  9074                           prodl	equ	0xFF3
  9075                           intcon	equ	0xFF2
  9076                           intcon2	equ	0xFF1
  9077                           postinc0	equ	0xFEE
  9078                           wreg	equ	0xFE8
  9079                           postdec1	equ	0xFE5
  9080                           fsr1l	equ	0xFE1
  9081                           indf2	equ	0xFDF
  9082                           postinc2	equ	0xFDE
  9083                           postdec2	equ	0xFDD
  9084                           fsr2h	equ	0xFDA
  9085                           fsr2l	equ	0xFD9
  9086                           status	equ	0xFD8
  9087                           
  9088 ;; *************** function ___fttol *****************
  9089 ;; Defined at:
  9090 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  9091 ;; Parameters:    Size  Location     Type
  9092 ;;  f1              3   16[COMRAM] float 
  9093 ;; Auto vars:     Size  Location     Type
  9094 ;;  lval            4   26[COMRAM] unsigned long 
  9095 ;;  exp1            1   30[COMRAM] unsigned char 
  9096 ;;  sign1           1   25[COMRAM] unsigned char 
  9097 ;; Return value:  Size  Location     Type
  9098 ;;                  4   16[COMRAM] long 
  9099 ;; Registers used:
  9100 ;;		wreg, status,2, status,0
  9101 ;; Tracked objects:
  9102 ;;		On entry : 0/0
  9103 ;;		On exit  : 0/0
  9104 ;;		Unchanged: 0/0
  9105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9106 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9107 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9108 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9109 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9110 ;;Total ram usage:       15 bytes
  9111 ;; Hardware stack levels used:    1
  9112 ;; Hardware stack levels required when called:    3
  9113 ;; This function calls:
  9114 ;;		Nothing
  9115 ;; This function is called by:
  9116 ;;		_do_update_pwm
  9117 ;; This function uses a non-reentrant model
  9118 ;;
  9119                           
  9120                           	psect	text48
  9121  00140C                     __ptext48:
  9122                           	opt stack 0
  9123  00140C                     ___fttol:
  9124                           	opt stack 24
  9125                           
  9126                           ;incstack = 0
  9127  00140C  C013  F015         	movff	___fttol@f1+2,??___fttol
  9128  001410  6A16               	clrf	(??___fttol+1)& (0+255),c
  9129  001412  6A17               	clrf	(??___fttol+2)& (0+255),c
  9130  001414  3412               	rlcf	___fttol@f1+1,w,c
  9131  001416  3615               	rlcf	??___fttol& (0+255),f,c
  9132  001418  E301               	bnc	u4001
  9133  00141A  8016               	bsf	(??___fttol+1)& (0+255),0,c
  9134  00141C                     u4001:
  9135  00141C  5015               	movf	??___fttol,w,c
  9136  00141E  6E1F               	movwf	___fttol@exp1,c
  9137  001420  501F               	movf	___fttol@exp1,w,c
  9138  001422  A4D8               	btfss	status,2,c
  9139  001424  D002               	goto	l5519
  9140  001426  D039               	goto	l5543
  9141  001428  D063               	goto	l1279
  9142  00142A                     l5519:
  9143  00142A  0E17               	movlw	23
  9144  00142C  6E15               	movwf	??___fttol& (0+255),c
  9145  00142E  C011  F016         	movff	___fttol@f1,??___fttol+1
  9146  001432  C012  F017         	movff	___fttol@f1+1,??___fttol+2
  9147  001436  C013  F018         	movff	___fttol@f1+2,??___fttol+3
  9148  00143A  2815               	incf	??___fttol,w,c
  9149  00143C  6E19               	movwf	(??___fttol+4)& (0+255),c
  9150  00143E  D004               	goto	u4020
  9151  001440                     u4025:
  9152  001440  90D8               	bcf	status,0,c
  9153  001442  3218               	rrcf	??___fttol+3,f,c
  9154  001444  3217               	rrcf	??___fttol+2,f,c
  9155  001446  3216               	rrcf	??___fttol+1,f,c
  9156  001448                     u4020:
  9157  001448  2E19               	decfsz	(??___fttol+4)& (0+255),f,c
  9158  00144A  D7FA               	goto	u4025
  9159  00144C  5016               	movf	??___fttol+1,w,c
  9160  00144E  6E1A               	movwf	___fttol@sign1,c
  9161  001450  8E12               	bsf	___fttol@f1+1,7,c
  9162  001452  0EFF               	movlw	255
  9163  001454  1611               	andwf	___fttol@f1,f,c
  9164  001456  0EFF               	movlw	255
  9165  001458  1612               	andwf	___fttol@f1+1,f,c
  9166  00145A  0E00               	movlw	0
  9167  00145C  1613               	andwf	___fttol@f1+2,f,c
  9168  00145E  5011               	movf	___fttol@f1,w,c
  9169  001460  6E1B               	movwf	___fttol@lval,c
  9170  001462  5012               	movf	___fttol@f1+1,w,c
  9171  001464  6E1C               	movwf	___fttol@lval+1,c
  9172  001466  5013               	movf	___fttol@f1+2,w,c
  9173  001468  6E1D               	movwf	___fttol@lval+2,c
  9174  00146A  6A1E               	clrf	___fttol@lval+3,c
  9175  00146C  0E8E               	movlw	142
  9176  00146E  5E1F               	subwf	___fttol@exp1,f,c
  9177  001470  AE1F               	btfss	___fttol@exp1,7,c
  9178  001472  D010               	goto	l5541
  9179  001474  501F               	movf	___fttol@exp1,w,c
  9180  001476  0A80               	xorlw	128
  9181  001478  0F8F               	addlw	143
  9182  00147A  B0D8               	btfsc	status,0,c
  9183  00147C  D003               	goto	l5537
  9184  00147E  D00D               	goto	l5543
  9185  001480  D037               	goto	l1279
  9186  001482  D000               	goto	l5537
  9187  001484                     l5537:
  9188  001484  90D8               	bcf	status,0,c
  9189  001486  321E               	rrcf	___fttol@lval+3,f,c
  9190  001488  321D               	rrcf	___fttol@lval+2,f,c
  9191  00148A  321C               	rrcf	___fttol@lval+1,f,c
  9192  00148C  321B               	rrcf	___fttol@lval,f,c
  9193  00148E  3E1F               	incfsz	___fttol@exp1,f,c
  9194  001490  D7F9               	goto	l5537
  9195  001492  D019               	goto	l5551
  9196  001494                     l5541:
  9197  001494  0E17               	movlw	23
  9198  001496  641F               	cpfsgt	___fttol@exp1,c
  9199  001498  D011               	goto	l5549
  9200  00149A                     l5543:
  9201  00149A  0E00               	movlw	0
  9202  00149C  6E11               	movwf	?___fttol,c
  9203  00149E  0E00               	movlw	0
  9204  0014A0  6E12               	movwf	?___fttol+1,c
  9205  0014A2  0E00               	movlw	0
  9206  0014A4  6E13               	movwf	?___fttol+2,c
  9207  0014A6  0E00               	movlw	0
  9208  0014A8  6E14               	movwf	?___fttol+3,c
  9209  0014AA  D022               	goto	l1279
  9210  0014AC  D007               	goto	l5549
  9211  0014AE                     l5547:
  9212  0014AE  90D8               	bcf	status,0,c
  9213  0014B0  361B               	rlcf	___fttol@lval,f,c
  9214  0014B2  361C               	rlcf	___fttol@lval+1,f,c
  9215  0014B4  361D               	rlcf	___fttol@lval+2,f,c
  9216  0014B6  361E               	rlcf	___fttol@lval+3,f,c
  9217  0014B8  061F               	decf	___fttol@exp1,f,c
  9218  0014BA  D000               	goto	l5549
  9219  0014BC                     l5549:
  9220  0014BC  501F               	movf	___fttol@exp1,w,c
  9221  0014BE  B4D8               	btfsc	status,2,c
  9222  0014C0  D002               	goto	l5551
  9223  0014C2  D7F5               	goto	l5547
  9224  0014C4  D000               	goto	l5551
  9225  0014C6                     l5551:
  9226  0014C6  501A               	movf	___fttol@sign1,w,c
  9227  0014C8  B4D8               	btfsc	status,2,c
  9228  0014CA  D009               	goto	l5555
  9229  0014CC  1E1E               	comf	___fttol@lval+3,f,c
  9230  0014CE  1E1D               	comf	___fttol@lval+2,f,c
  9231  0014D0  1E1C               	comf	___fttol@lval+1,f,c
  9232  0014D2  6C1B               	negf	___fttol@lval,c
  9233  0014D4  0E00               	movlw	0
  9234  0014D6  221C               	addwfc	___fttol@lval+1,f,c
  9235  0014D8  221D               	addwfc	___fttol@lval+2,f,c
  9236  0014DA  221E               	addwfc	___fttol@lval+3,f,c
  9237  0014DC  D000               	goto	l5555
  9238  0014DE                     l5555:
  9239  0014DE  C01B  F011         	movff	___fttol@lval,?___fttol
  9240  0014E2  C01C  F012         	movff	___fttol@lval+1,?___fttol+1
  9241  0014E6  C01D  F013         	movff	___fttol@lval+2,?___fttol+2
  9242  0014EA  C01E  F014         	movff	___fttol@lval+3,?___fttol+3
  9243  0014EE  D000               	goto	l1279
  9244  0014F0                     l1279:
  9245  0014F0  0012               	return		;funcret
  9246  0014F2                     __end_of___fttol:
  9247                           	opt stack 0
  9248                           tblptru	equ	0xFF8
  9249                           tblptrh	equ	0xFF7
  9250                           tblptrl	equ	0xFF6
  9251                           tablat	equ	0xFF5
  9252                           prodh	equ	0xFF4
  9253                           prodl	equ	0xFF3
  9254                           intcon	equ	0xFF2
  9255                           intcon2	equ	0xFF1
  9256                           postinc0	equ	0xFEE
  9257                           wreg	equ	0xFE8
  9258                           postdec1	equ	0xFE5
  9259                           fsr1l	equ	0xFE1
  9260                           indf2	equ	0xFDF
  9261                           postinc2	equ	0xFDE
  9262                           postdec2	equ	0xFDD
  9263                           fsr2h	equ	0xFDA
  9264                           fsr2l	equ	0xFD9
  9265                           status	equ	0xFD8
  9266                           
  9267 ;; *************** function ___ftmul *****************
  9268 ;; Defined at:
  9269 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  9270 ;; Parameters:    Size  Location     Type
  9271 ;;  f1              3   28[COMRAM] float 
  9272 ;;  f2              3   31[COMRAM] float 
  9273 ;; Auto vars:     Size  Location     Type
  9274 ;;  f3_as_produc    3   38[COMRAM] unsigned um
  9275 ;;  sign            1   42[COMRAM] unsigned char 
  9276 ;;  cntr            1   41[COMRAM] unsigned char 
  9277 ;;  exp             1   37[COMRAM] unsigned char 
  9278 ;; Return value:  Size  Location     Type
  9279 ;;                  3   28[COMRAM] float 
  9280 ;; Registers used:
  9281 ;;		wreg, status,2, status,0, cstack
  9282 ;; Tracked objects:
  9283 ;;		On entry : 0/0
  9284 ;;		On exit  : 0/0
  9285 ;;		Unchanged: 0/0
  9286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9287 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9288 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9289 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9290 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9291 ;;Total ram usage:       15 bytes
  9292 ;; Hardware stack levels used:    1
  9293 ;; Hardware stack levels required when called:    4
  9294 ;; This function calls:
  9295 ;;		___ftpack
  9296 ;; This function is called by:
  9297 ;;		_do_update_pwm
  9298 ;; This function uses a non-reentrant model
  9299 ;;
  9300                           
  9301                           	psect	text49
  9302  001222                     __ptext49:
  9303                           	opt stack 0
  9304  001222                     ___ftmul:
  9305                           	opt stack 23
  9306                           
  9307                           ;incstack = 0
  9308  001222  C01F  F023         	movff	___ftmul@f1+2,??___ftmul
  9309  001226  6A24               	clrf	(??___ftmul+1)& (0+255),c
  9310  001228  6A25               	clrf	(??___ftmul+2)& (0+255),c
  9311  00122A  341E               	rlcf	___ftmul@f1+1,w,c
  9312  00122C  3623               	rlcf	??___ftmul& (0+255),f,c
  9313  00122E  E301               	bnc	u3941
  9314  001230  8024               	bsf	(??___ftmul+1)& (0+255),0,c
  9315  001232                     u3941:
  9316  001232  5023               	movf	??___ftmul,w,c
  9317  001234  6E26               	movwf	___ftmul@exp,c
  9318  001236  5026               	movf	___ftmul@exp,w,c
  9319  001238  A4D8               	btfss	status,2,c
  9320  00123A  D002               	goto	l5471
  9321  00123C  D00E               	goto	l5473
  9322  00123E  D06C               	goto	l1258
  9323  001240                     l5471:
  9324  001240  C022  F023         	movff	___ftmul@f2+2,??___ftmul
  9325  001244  6A24               	clrf	(??___ftmul+1)& (0+255),c
  9326  001246  6A25               	clrf	(??___ftmul+2)& (0+255),c
  9327  001248  3421               	rlcf	___ftmul@f2+1,w,c
  9328  00124A  3623               	rlcf	??___ftmul& (0+255),f,c
  9329  00124C  E301               	bnc	u3961
  9330  00124E  8024               	bsf	(??___ftmul+1)& (0+255),0,c
  9331  001250                     u3961:
  9332  001250  5023               	movf	??___ftmul,w,c
  9333  001252  6E2B               	movwf	___ftmul@sign,c
  9334  001254  502B               	movf	___ftmul@sign,w,c
  9335  001256  A4D8               	btfss	status,2,c
  9336  001258  D007               	goto	l5477
  9337  00125A                     l5473:
  9338  00125A  0E00               	movlw	0
  9339  00125C  6E1D               	movwf	?___ftmul,c
  9340  00125E  0E00               	movlw	0
  9341  001260  6E1E               	movwf	?___ftmul+1,c
  9342  001262  0E00               	movlw	0
  9343  001264  6E1F               	movwf	?___ftmul+2,c
  9344  001266  D058               	goto	l1258
  9345  001268                     l5477:
  9346  001268  502B               	movf	___ftmul@sign,w,c
  9347  00126A  0F7B               	addlw	123
  9348  00126C  2626               	addwf	___ftmul@exp,f,c
  9349  00126E  C01F  F02B         	movff	___ftmul@f1+2,___ftmul@sign
  9350  001272  5022               	movf	___ftmul@f2+2,w,c
  9351  001274  1A2B               	xorwf	___ftmul@sign,f,c
  9352  001276  0E80               	movlw	128
  9353  001278  162B               	andwf	___ftmul@sign,f,c
  9354  00127A  8E1E               	bsf	___ftmul@f1+1,7,c
  9355  00127C  8E21               	bsf	___ftmul@f2+1,7,c
  9356  00127E  0EFF               	movlw	255
  9357  001280  1620               	andwf	___ftmul@f2,f,c
  9358  001282  0EFF               	movlw	255
  9359  001284  1621               	andwf	___ftmul@f2+1,f,c
  9360  001286  0E00               	movlw	0
  9361  001288  1622               	andwf	___ftmul@f2+2,f,c
  9362  00128A  0E00               	movlw	0
  9363  00128C  6E27               	movwf	___ftmul@f3_as_product,c
  9364  00128E  0E00               	movlw	0
  9365  001290  6E28               	movwf	___ftmul@f3_as_product+1,c
  9366  001292  0E00               	movlw	0
  9367  001294  6E29               	movwf	___ftmul@f3_as_product+2,c
  9368  001296  0E07               	movlw	7
  9369  001298  6E2A               	movwf	___ftmul@cntr,c
  9370  00129A  D000               	goto	l5491
  9371  00129C                     l5491:
  9372  00129C  A01D               	btfss	___ftmul@f1,0,c
  9373  00129E  D007               	goto	l5495
  9374  0012A0  5020               	movf	___ftmul@f2,w,c
  9375  0012A2  2627               	addwf	___ftmul@f3_as_product,f,c
  9376  0012A4  5021               	movf	___ftmul@f2+1,w,c
  9377  0012A6  2228               	addwfc	___ftmul@f3_as_product+1,f,c
  9378  0012A8  5022               	movf	___ftmul@f2+2,w,c
  9379  0012AA  2229               	addwfc	___ftmul@f3_as_product+2,f,c
  9380  0012AC  D000               	goto	l5495
  9381  0012AE                     l5495:
  9382  0012AE  90D8               	bcf	status,0,c
  9383  0012B0  321F               	rrcf	___ftmul@f1+2,f,c
  9384  0012B2  321E               	rrcf	___ftmul@f1+1,f,c
  9385  0012B4  321D               	rrcf	___ftmul@f1,f,c
  9386  0012B6  90D8               	bcf	status,0,c
  9387  0012B8  3620               	rlcf	___ftmul@f2,f,c
  9388  0012BA  3621               	rlcf	___ftmul@f2+1,f,c
  9389  0012BC  3622               	rlcf	___ftmul@f2+2,f,c
  9390  0012BE  2E2A               	decfsz	___ftmul@cntr,f,c
  9391  0012C0  D7ED               	goto	l5491
  9392  0012C2  D000               	goto	l5499
  9393  0012C4                     l5499:
  9394  0012C4  0E09               	movlw	9
  9395  0012C6  6E2A               	movwf	___ftmul@cntr,c
  9396  0012C8  D000               	goto	l5501
  9397  0012CA                     l5501:
  9398  0012CA  A01D               	btfss	___ftmul@f1,0,c
  9399  0012CC  D007               	goto	l5505
  9400  0012CE  5020               	movf	___ftmul@f2,w,c
  9401  0012D0  2627               	addwf	___ftmul@f3_as_product,f,c
  9402  0012D2  5021               	movf	___ftmul@f2+1,w,c
  9403  0012D4  2228               	addwfc	___ftmul@f3_as_product+1,f,c
  9404  0012D6  5022               	movf	___ftmul@f2+2,w,c
  9405  0012D8  2229               	addwfc	___ftmul@f3_as_product+2,f,c
  9406  0012DA  D000               	goto	l5505
  9407  0012DC                     l5505:
  9408  0012DC  90D8               	bcf	status,0,c
  9409  0012DE  321F               	rrcf	___ftmul@f1+2,f,c
  9410  0012E0  321E               	rrcf	___ftmul@f1+1,f,c
  9411  0012E2  321D               	rrcf	___ftmul@f1,f,c
  9412  0012E4  90D8               	bcf	status,0,c
  9413  0012E6  3229               	rrcf	___ftmul@f3_as_product+2,f,c
  9414  0012E8  3228               	rrcf	___ftmul@f3_as_product+1,f,c
  9415  0012EA  3227               	rrcf	___ftmul@f3_as_product,f,c
  9416  0012EC  2E2A               	decfsz	___ftmul@cntr,f,c
  9417  0012EE  D7ED               	goto	l5501
  9418  0012F0  D000               	goto	l5509
  9419  0012F2                     l5509:
  9420  0012F2  C027  F011         	movff	___ftmul@f3_as_product,___ftpack@arg
  9421  0012F6  C028  F012         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  9422  0012FA  C029  F013         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  9423  0012FE  C026  F014         	movff	___ftmul@exp,___ftpack@exp
  9424  001302  C02B  F015         	movff	___ftmul@sign,___ftpack@sign
  9425  001306  EC58  F00B         	call	___ftpack	;wreg free
  9426  00130A  C011  F01D         	movff	?___ftpack,?___ftmul
  9427  00130E  C012  F01E         	movff	?___ftpack+1,?___ftmul+1
  9428  001312  C013  F01F         	movff	?___ftpack+2,?___ftmul+2
  9429  001316  D000               	goto	l1258
  9430  001318                     l1258:
  9431  001318  0012               	return		;funcret
  9432  00131A                     __end_of___ftmul:
  9433                           	opt stack 0
  9434                           tblptru	equ	0xFF8
  9435                           tblptrh	equ	0xFF7
  9436                           tblptrl	equ	0xFF6
  9437                           tablat	equ	0xFF5
  9438                           prodh	equ	0xFF4
  9439                           prodl	equ	0xFF3
  9440                           intcon	equ	0xFF2
  9441                           intcon2	equ	0xFF1
  9442                           postinc0	equ	0xFEE
  9443                           wreg	equ	0xFE8
  9444                           postdec1	equ	0xFE5
  9445                           fsr1l	equ	0xFE1
  9446                           indf2	equ	0xFDF
  9447                           postinc2	equ	0xFDE
  9448                           postdec2	equ	0xFDD
  9449                           fsr2h	equ	0xFDA
  9450                           fsr2l	equ	0xFD9
  9451                           status	equ	0xFD8
  9452                           
  9453 ;; *************** function ___ftdiv *****************
  9454 ;; Defined at:
  9455 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  9456 ;; Parameters:    Size  Location     Type
  9457 ;;  f1              3   43[COMRAM] float 
  9458 ;;  f2              3   46[COMRAM] float 
  9459 ;; Auto vars:     Size  Location     Type
  9460 ;;  f3              3   53[COMRAM] float 
  9461 ;;  sign            1   57[COMRAM] unsigned char 
  9462 ;;  exp             1   56[COMRAM] unsigned char 
  9463 ;;  cntr            1   52[COMRAM] unsigned char 
  9464 ;; Return value:  Size  Location     Type
  9465 ;;                  3   43[COMRAM] float 
  9466 ;; Registers used:
  9467 ;;		wreg, status,2, status,0, cstack
  9468 ;; Tracked objects:
  9469 ;;		On entry : 0/0
  9470 ;;		On exit  : 0/0
  9471 ;;		Unchanged: 0/0
  9472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9473 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9474 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9475 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9476 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9477 ;;Total ram usage:       15 bytes
  9478 ;; Hardware stack levels used:    1
  9479 ;; Hardware stack levels required when called:    4
  9480 ;; This function calls:
  9481 ;;		___ftpack
  9482 ;; This function is called by:
  9483 ;;		_do_update_pwm
  9484 ;; This function uses a non-reentrant model
  9485 ;;
  9486                           
  9487                           	psect	text50
  9488  0014F2                     __ptext50:
  9489                           	opt stack 0
  9490  0014F2                     ___ftdiv:
  9491                           	opt stack 23
  9492                           
  9493                           ;incstack = 0
  9494  0014F2  C02E  F032         	movff	___ftdiv@f1+2,??___ftdiv
  9495  0014F6  6A33               	clrf	(??___ftdiv+1)& (0+255),c
  9496  0014F8  6A34               	clrf	(??___ftdiv+2)& (0+255),c
  9497  0014FA  342D               	rlcf	___ftdiv@f1+1,w,c
  9498  0014FC  3632               	rlcf	??___ftdiv& (0+255),f,c
  9499  0014FE  E301               	bnc	u3891
  9500  001500  8033               	bsf	(??___ftdiv+1)& (0+255),0,c
  9501  001502                     u3891:
  9502  001502  5032               	movf	??___ftdiv,w,c
  9503  001504  6E39               	movwf	___ftdiv@exp,c
  9504  001506  5039               	movf	___ftdiv@exp,w,c
  9505  001508  A4D8               	btfss	status,2,c
  9506  00150A  D002               	goto	l5425
  9507  00150C  D00E               	goto	l5427
  9508  00150E  D061               	goto	l1243
  9509  001510                     l5425:
  9510  001510  C031  F032         	movff	___ftdiv@f2+2,??___ftdiv
  9511  001514  6A33               	clrf	(??___ftdiv+1)& (0+255),c
  9512  001516  6A34               	clrf	(??___ftdiv+2)& (0+255),c
  9513  001518  3430               	rlcf	___ftdiv@f2+1,w,c
  9514  00151A  3632               	rlcf	??___ftdiv& (0+255),f,c
  9515  00151C  E301               	bnc	u3911
  9516  00151E  8033               	bsf	(??___ftdiv+1)& (0+255),0,c
  9517  001520                     u3911:
  9518  001520  5032               	movf	??___ftdiv,w,c
  9519  001522  6E3A               	movwf	___ftdiv@sign,c
  9520  001524  503A               	movf	___ftdiv@sign,w,c
  9521  001526  A4D8               	btfss	status,2,c
  9522  001528  D007               	goto	l5431
  9523  00152A                     l5427:
  9524  00152A  0E00               	movlw	0
  9525  00152C  6E2C               	movwf	?___ftdiv,c
  9526  00152E  0E00               	movlw	0
  9527  001530  6E2D               	movwf	?___ftdiv+1,c
  9528  001532  0E00               	movlw	0
  9529  001534  6E2E               	movwf	?___ftdiv+2,c
  9530  001536  D04D               	goto	l1243
  9531  001538                     l5431:
  9532  001538  0E00               	movlw	0
  9533  00153A  6E36               	movwf	___ftdiv@f3,c
  9534  00153C  0E00               	movlw	0
  9535  00153E  6E37               	movwf	___ftdiv@f3+1,c
  9536  001540  0E00               	movlw	0
  9537  001542  6E38               	movwf	___ftdiv@f3+2,c
  9538  001544  503A               	movf	___ftdiv@sign,w,c
  9539  001546  0F89               	addlw	137
  9540  001548  5E39               	subwf	___ftdiv@exp,f,c
  9541  00154A  C02E  F03A         	movff	___ftdiv@f1+2,___ftdiv@sign
  9542  00154E  5031               	movf	___ftdiv@f2+2,w,c
  9543  001550  1A3A               	xorwf	___ftdiv@sign,f,c
  9544  001552  0E80               	movlw	128
  9545  001554  163A               	andwf	___ftdiv@sign,f,c
  9546  001556  8E2D               	bsf	___ftdiv@f1+1,7,c
  9547  001558  0EFF               	movlw	255
  9548  00155A  162C               	andwf	___ftdiv@f1,f,c
  9549  00155C  0EFF               	movlw	255
  9550  00155E  162D               	andwf	___ftdiv@f1+1,f,c
  9551  001560  0E00               	movlw	0
  9552  001562  162E               	andwf	___ftdiv@f1+2,f,c
  9553  001564  8E30               	bsf	___ftdiv@f2+1,7,c
  9554  001566  0EFF               	movlw	255
  9555  001568  162F               	andwf	___ftdiv@f2,f,c
  9556  00156A  0EFF               	movlw	255
  9557  00156C  1630               	andwf	___ftdiv@f2+1,f,c
  9558  00156E  0E00               	movlw	0
  9559  001570  1631               	andwf	___ftdiv@f2+2,f,c
  9560  001572  0E18               	movlw	24
  9561  001574  6E35               	movwf	___ftdiv@cntr,c
  9562  001576  D000               	goto	l5451
  9563  001578                     l5451:
  9564  001578  90D8               	bcf	status,0,c
  9565  00157A  3636               	rlcf	___ftdiv@f3,f,c
  9566  00157C  3637               	rlcf	___ftdiv@f3+1,f,c
  9567  00157E  3638               	rlcf	___ftdiv@f3+2,f,c
  9568  001580  502F               	movf	___ftdiv@f2,w,c
  9569  001582  5C2C               	subwf	___ftdiv@f1,w,c
  9570  001584  5030               	movf	___ftdiv@f2+1,w,c
  9571  001586  582D               	subwfb	___ftdiv@f1+1,w,c
  9572  001588  5031               	movf	___ftdiv@f2+2,w,c
  9573  00158A  582E               	subwfb	___ftdiv@f1+2,w,c
  9574  00158C  A0D8               	btfss	status,0,c
  9575  00158E  D007               	goto	l1246
  9576  001590  502F               	movf	___ftdiv@f2,w,c
  9577  001592  5E2C               	subwf	___ftdiv@f1,f,c
  9578  001594  5030               	movf	___ftdiv@f2+1,w,c
  9579  001596  5A2D               	subwfb	___ftdiv@f1+1,f,c
  9580  001598  5031               	movf	___ftdiv@f2+2,w,c
  9581  00159A  5A2E               	subwfb	___ftdiv@f1+2,f,c
  9582  00159C  8036               	bsf	___ftdiv@f3,0,c
  9583  00159E                     l1246:
  9584  00159E  90D8               	bcf	status,0,c
  9585  0015A0  362C               	rlcf	___ftdiv@f1,f,c
  9586  0015A2  362D               	rlcf	___ftdiv@f1+1,f,c
  9587  0015A4  362E               	rlcf	___ftdiv@f1+2,f,c
  9588  0015A6  2E35               	decfsz	___ftdiv@cntr,f,c
  9589  0015A8  D7E7               	goto	l5451
  9590  0015AA  D000               	goto	l5461
  9591  0015AC                     l5461:
  9592  0015AC  C036  F011         	movff	___ftdiv@f3,___ftpack@arg
  9593  0015B0  C037  F012         	movff	___ftdiv@f3+1,___ftpack@arg+1
  9594  0015B4  C038  F013         	movff	___ftdiv@f3+2,___ftpack@arg+2
  9595  0015B8  C039  F014         	movff	___ftdiv@exp,___ftpack@exp
  9596  0015BC  C03A  F015         	movff	___ftdiv@sign,___ftpack@sign
  9597  0015C0  EC58  F00B         	call	___ftpack	;wreg free
  9598  0015C4  C011  F02C         	movff	?___ftpack,?___ftdiv
  9599  0015C8  C012  F02D         	movff	?___ftpack+1,?___ftdiv+1
  9600  0015CC  C013  F02E         	movff	?___ftpack+2,?___ftdiv+2
  9601  0015D0  D000               	goto	l1243
  9602  0015D2                     l1243:
  9603  0015D2  0012               	return		;funcret
  9604  0015D4                     __end_of___ftdiv:
  9605                           	opt stack 0
  9606                           tblptru	equ	0xFF8
  9607                           tblptrh	equ	0xFF7
  9608                           tblptrl	equ	0xFF6
  9609                           tablat	equ	0xFF5
  9610                           prodh	equ	0xFF4
  9611                           prodl	equ	0xFF3
  9612                           intcon	equ	0xFF2
  9613                           intcon2	equ	0xFF1
  9614                           postinc0	equ	0xFEE
  9615                           wreg	equ	0xFE8
  9616                           postdec1	equ	0xFE5
  9617                           fsr1l	equ	0xFE1
  9618                           indf2	equ	0xFDF
  9619                           postinc2	equ	0xFDE
  9620                           postdec2	equ	0xFDD
  9621                           fsr2h	equ	0xFDA
  9622                           fsr2l	equ	0xFD9
  9623                           status	equ	0xFD8
  9624                           
  9625 ;; *************** function ___ftpack *****************
  9626 ;; Defined at:
  9627 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  9628 ;; Parameters:    Size  Location     Type
  9629 ;;  arg             3   16[COMRAM] unsigned um
  9630 ;;  exp             1   19[COMRAM] unsigned char 
  9631 ;;  sign            1   20[COMRAM] unsigned char 
  9632 ;; Auto vars:     Size  Location     Type
  9633 ;;		None
  9634 ;; Return value:  Size  Location     Type
  9635 ;;                  3   16[COMRAM] float 
  9636 ;; Registers used:
  9637 ;;		wreg, status,2, status,0
  9638 ;; Tracked objects:
  9639 ;;		On entry : 0/0
  9640 ;;		On exit  : 0/0
  9641 ;;		Unchanged: 0/0
  9642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9643 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9645 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9646 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9647 ;;Total ram usage:        8 bytes
  9648 ;; Hardware stack levels used:    1
  9649 ;; Hardware stack levels required when called:    3
  9650 ;; This function calls:
  9651 ;;		Nothing
  9652 ;; This function is called by:
  9653 ;;		___ftdiv
  9654 ;;		___ftmul
  9655 ;;		___lbtoft
  9656 ;; This function uses a non-reentrant model
  9657 ;;
  9658                           
  9659                           	psect	text51
  9660  0016B0                     __ptext51:
  9661                           	opt stack 0
  9662  0016B0                     ___ftpack:
  9663                           	opt stack 23
  9664                           
  9665                           ;incstack = 0
  9666  0016B0  5014               	movf	___ftpack@exp,w,c
  9667  0016B2  B4D8               	btfsc	status,2,c
  9668  0016B4  D005               	goto	l5315
  9669  0016B6  5011               	movf	___ftpack@arg,w,c
  9670  0016B8  1012               	iorwf	___ftpack@arg+1,w,c
  9671  0016BA  1013               	iorwf	___ftpack@arg+2,w,c
  9672  0016BC  A4D8               	btfss	status,2,c
  9673  0016BE  D00E               	goto	l5321
  9674  0016C0                     l5315:
  9675  0016C0  0E00               	movlw	0
  9676  0016C2  6E11               	movwf	?___ftpack,c
  9677  0016C4  0E00               	movlw	0
  9678  0016C6  6E12               	movwf	?___ftpack+1,c
  9679  0016C8  0E00               	movlw	0
  9680  0016CA  6E13               	movwf	?___ftpack+2,c
  9681  0016CC  D053               	goto	l1171
  9682  0016CE  D006               	goto	l5321
  9683  0016D0                     l5319:
  9684  0016D0  2A14               	incf	___ftpack@exp,f,c
  9685  0016D2  90D8               	bcf	status,0,c
  9686  0016D4  3213               	rrcf	___ftpack@arg+2,f,c
  9687  0016D6  3212               	rrcf	___ftpack@arg+1,f,c
  9688  0016D8  3211               	rrcf	___ftpack@arg,f,c
  9689  0016DA  D000               	goto	l5321
  9690  0016DC                     l5321:
  9691  0016DC  0E00               	movlw	0
  9692  0016DE  1411               	andwf	___ftpack@arg,w,c
  9693  0016E0  6E16               	movwf	??___ftpack& (0+255),c
  9694  0016E2  0E00               	movlw	0
  9695  0016E4  1412               	andwf	___ftpack@arg+1,w,c
  9696  0016E6  6E17               	movwf	(??___ftpack+1)& (0+255),c
  9697  0016E8  0EFE               	movlw	254
  9698  0016EA  1413               	andwf	___ftpack@arg+2,w,c
  9699  0016EC  6E18               	movwf	(??___ftpack+2)& (0+255),c
  9700  0016EE  5016               	movf	??___ftpack,w,c
  9701  0016F0  1017               	iorwf	??___ftpack+1,w,c
  9702  0016F2  1018               	iorwf	??___ftpack+2,w,c
  9703  0016F4  B4D8               	btfsc	status,2,c
  9704  0016F6  D00E               	goto	l5327
  9705  0016F8  D7EB               	goto	l5319
  9706  0016FA  D00C               	goto	l5327
  9707  0016FC                     l5323:
  9708  0016FC  2A14               	incf	___ftpack@exp,f,c
  9709  0016FE  0E01               	movlw	1
  9710  001700  2611               	addwf	___ftpack@arg,f,c
  9711  001702  0E00               	movlw	0
  9712  001704  2212               	addwfc	___ftpack@arg+1,f,c
  9713  001706  0E00               	movlw	0
  9714  001708  2213               	addwfc	___ftpack@arg+2,f,c
  9715  00170A  90D8               	bcf	status,0,c
  9716  00170C  3213               	rrcf	___ftpack@arg+2,f,c
  9717  00170E  3212               	rrcf	___ftpack@arg+1,f,c
  9718  001710  3211               	rrcf	___ftpack@arg,f,c
  9719  001712  D000               	goto	l5327
  9720  001714                     l5327:
  9721  001714  0E00               	movlw	0
  9722  001716  1411               	andwf	___ftpack@arg,w,c
  9723  001718  6E16               	movwf	??___ftpack& (0+255),c
  9724  00171A  0E00               	movlw	0
  9725  00171C  1412               	andwf	___ftpack@arg+1,w,c
  9726  00171E  6E17               	movwf	(??___ftpack+1)& (0+255),c
  9727  001720  0EFF               	movlw	255
  9728  001722  1413               	andwf	___ftpack@arg+2,w,c
  9729  001724  6E18               	movwf	(??___ftpack+2)& (0+255),c
  9730  001726  5016               	movf	??___ftpack,w,c
  9731  001728  1017               	iorwf	??___ftpack+1,w,c
  9732  00172A  1018               	iorwf	??___ftpack+2,w,c
  9733  00172C  B4D8               	btfsc	status,2,c
  9734  00172E  D008               	goto	l5331
  9735  001730  D7E5               	goto	l5323
  9736  001732  D006               	goto	l5331
  9737  001734                     l5329:
  9738  001734  0614               	decf	___ftpack@exp,f,c
  9739  001736  90D8               	bcf	status,0,c
  9740  001738  3611               	rlcf	___ftpack@arg,f,c
  9741  00173A  3612               	rlcf	___ftpack@arg+1,f,c
  9742  00173C  3613               	rlcf	___ftpack@arg+2,f,c
  9743  00173E  D000               	goto	l5331
  9744  001740                     l5331:
  9745  001740  BE12               	btfsc	___ftpack@arg+1,7,c
  9746  001742  D004               	goto	l1182
  9747  001744  0E02               	movlw	2
  9748  001746  6014               	cpfslt	___ftpack@exp,c
  9749  001748  D7F5               	goto	l5329
  9750  00174A  D000               	goto	l1182
  9751  00174C                     l1182:
  9752  00174C  B014               	btfsc	___ftpack@exp,0,c
  9753  00174E  D002               	goto	l5337
  9754  001750  9E12               	bcf	___ftpack@arg+1,7,c
  9755  001752  D000               	goto	l5337
  9756  001754                     l5337:
  9757  001754  90D8               	bcf	status,0,c
  9758  001756  3214               	rrcf	___ftpack@exp,f,c
  9759  001758  5014               	movf	___ftpack@exp,w,c
  9760  00175A  1213               	iorwf	___ftpack@arg+2,f,c
  9761  00175C  5015               	movf	___ftpack@sign,w,c
  9762  00175E  B4D8               	btfsc	status,2,c
  9763  001760  D002               	goto	l5343
  9764  001762  8E13               	bsf	___ftpack@arg+2,7,c
  9765  001764  D000               	goto	l5343
  9766  001766                     l5343:
  9767  001766  C011  F011         	movff	___ftpack@arg,?___ftpack
  9768  00176A  C012  F012         	movff	___ftpack@arg+1,?___ftpack+1
  9769  00176E  C013  F013         	movff	___ftpack@arg+2,?___ftpack+2
  9770  001772  D000               	goto	l1171
  9771  001774                     l1171:
  9772  001774  0012               	return		;funcret
  9773  001776                     __end_of___ftpack:
  9774                           	opt stack 0
  9775                           tblptru	equ	0xFF8
  9776                           tblptrh	equ	0xFF7
  9777                           tblptrl	equ	0xFF6
  9778                           tablat	equ	0xFF5
  9779                           prodh	equ	0xFF4
  9780                           prodl	equ	0xFF3
  9781                           intcon	equ	0xFF2
  9782                           intcon2	equ	0xFF1
  9783                           postinc0	equ	0xFEE
  9784                           wreg	equ	0xFE8
  9785                           postdec1	equ	0xFE5
  9786                           fsr1l	equ	0xFE1
  9787                           indf2	equ	0xFDF
  9788                           postinc2	equ	0xFDE
  9789                           postdec2	equ	0xFDD
  9790                           fsr2h	equ	0xFDA
  9791                           fsr2l	equ	0xFD9
  9792                           status	equ	0xFD8
  9793                           
  9794 ;; *************** function _Wait_One_Sec *****************
  9795 ;; Defined at:
  9796 ;;		line 136 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/Fan_Support.c"
  9797 ;; Parameters:    Size  Location     Type
  9798 ;;		None
  9799 ;; Auto vars:     Size  Location     Type
  9800 ;;  k               2   16[COMRAM] int 
  9801 ;; Return value:  Size  Location     Type
  9802 ;;		None               void
  9803 ;; Registers used:
  9804 ;;		wreg, status,2, status,0
  9805 ;; Tracked objects:
  9806 ;;		On entry : 0/0
  9807 ;;		On exit  : 0/0
  9808 ;;		Unchanged: 0/0
  9809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9811 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9813 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9814 ;;Total ram usage:        2 bytes
  9815 ;; Hardware stack levels used:    1
  9816 ;; Hardware stack levels required when called:    3
  9817 ;; This function calls:
  9818 ;;		Nothing
  9819 ;; This function is called by:
  9820 ;;		_Do_Beep
  9821 ;; This function uses a non-reentrant model
  9822 ;;
  9823                           
  9824                           	psect	text52
  9825  0020B0                     __ptext52:
  9826                           	opt stack 0
  9827  0020B0                     _Wait_One_Sec:
  9828                           	opt stack 25
  9829                           
  9830                           ;Fan_Support.c: 138: for (int k = 0; k < 17000; k++);
  9831                           
  9832                           ;incstack = 0
  9833  0020B0  0E00               	movlw	0
  9834  0020B2  6E12               	movwf	Wait_One_Sec@k+1,c
  9835  0020B4  0E00               	movlw	0
  9836  0020B6  6E11               	movwf	Wait_One_Sec@k,c
  9837  0020B8                     l5581:
  9838  0020B8  BE12               	btfsc	Wait_One_Sec@k+1,7,c
  9839  0020BA  D008               	goto	l5585
  9840  0020BC  0E68               	movlw	104
  9841  0020BE  5C11               	subwf	Wait_One_Sec@k,w,c
  9842  0020C0  0E42               	movlw	66
  9843  0020C2  5812               	subwfb	Wait_One_Sec@k+1,w,c
  9844  0020C4  B0D8               	btfsc	status,0,c
  9845  0020C6  D005               	goto	l94
  9846  0020C8  D001               	goto	l5585
  9847  0020CA  D003               	goto	l94
  9848  0020CC                     l5585:
  9849  0020CC  4A11               	infsnz	Wait_One_Sec@k,f,c
  9850  0020CE  2A12               	incf	Wait_One_Sec@k+1,f,c
  9851  0020D0  D7F3               	goto	l5581
  9852  0020D2                     l94:
  9853  0020D2  0012               	return		;funcret
  9854  0020D4                     __end_of_Wait_One_Sec:
  9855                           	opt stack 0
  9856                           tblptru	equ	0xFF8
  9857                           tblptrh	equ	0xFF7
  9858                           tblptrl	equ	0xFF6
  9859                           tablat	equ	0xFF5
  9860                           prodh	equ	0xFF4
  9861                           prodl	equ	0xFF3
  9862                           intcon	equ	0xFF2
  9863                           intcon2	equ	0xFF1
  9864                           postinc0	equ	0xFEE
  9865                           wreg	equ	0xFE8
  9866                           postdec1	equ	0xFE5
  9867                           fsr1l	equ	0xFE1
  9868                           indf2	equ	0xFDF
  9869                           postinc2	equ	0xFDE
  9870                           postdec2	equ	0xFDD
  9871                           fsr2h	equ	0xFDA
  9872                           fsr2l	equ	0xFD9
  9873                           status	equ	0xFD8
  9874                           
  9875 ;; *************** function _Deactivate_Buzzer *****************
  9876 ;; Defined at:
  9877 ;;		line 149 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/Fan_Support.c"
  9878 ;; Parameters:    Size  Location     Type
  9879 ;;		None
  9880 ;; Auto vars:     Size  Location     Type
  9881 ;;		None
  9882 ;; Return value:  Size  Location     Type
  9883 ;;		None               void
  9884 ;; Registers used:
  9885 ;;		wreg, status,2
  9886 ;; Tracked objects:
  9887 ;;		On entry : 0/0
  9888 ;;		On exit  : 0/0
  9889 ;;		Unchanged: 0/0
  9890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9895 ;;Total ram usage:        0 bytes
  9896 ;; Hardware stack levels used:    1
  9897 ;; Hardware stack levels required when called:    3
  9898 ;; This function calls:
  9899 ;;		Nothing
  9900 ;; This function is called by:
  9901 ;;		_Do_Beep
  9902 ;; This function uses a non-reentrant model
  9903 ;;
  9904                           
  9905                           	psect	text53
  9906  002314                     __ptext53:
  9907                           	opt stack 0
  9908  002314                     _Deactivate_Buzzer:
  9909                           	opt stack 25
  9910                           
  9911                           ;Fan_Support.c: 151: CCP2CON = 0x0;
  9912                           
  9913                           ;incstack = 0
  9914  002314  0E00               	movlw	0
  9915  002316  6EBA               	movwf	4026,c	;volatile
  9916                           
  9917                           ;Fan_Support.c: 152: PORTBbits.RB3 = 0;
  9918  002318  9681               	bcf	3969,3,c	;volatile
  9919  00231A  0012               	return		;funcret
  9920  00231C                     __end_of_Deactivate_Buzzer:
  9921                           	opt stack 0
  9922                           tblptru	equ	0xFF8
  9923                           tblptrh	equ	0xFF7
  9924                           tblptrl	equ	0xFF6
  9925                           tablat	equ	0xFF5
  9926                           prodh	equ	0xFF4
  9927                           prodl	equ	0xFF3
  9928                           intcon	equ	0xFF2
  9929                           intcon2	equ	0xFF1
  9930                           postinc0	equ	0xFEE
  9931                           wreg	equ	0xFE8
  9932                           postdec1	equ	0xFE5
  9933                           fsr1l	equ	0xFE1
  9934                           indf2	equ	0xFDF
  9935                           postinc2	equ	0xFDE
  9936                           postdec2	equ	0xFDD
  9937                           fsr2h	equ	0xFDA
  9938                           fsr2l	equ	0xFD9
  9939                           status	equ	0xFD8
  9940                           
  9941 ;; *************** function _Activate_Buzzer *****************
  9942 ;; Defined at:
  9943 ;;		line 141 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/Fan_Support.c"
  9944 ;; Parameters:    Size  Location     Type
  9945 ;;		None
  9946 ;; Auto vars:     Size  Location     Type
  9947 ;;		None
  9948 ;; Return value:  Size  Location     Type
  9949 ;;		None               void
  9950 ;; Registers used:
  9951 ;;		wreg, status,2
  9952 ;; Tracked objects:
  9953 ;;		On entry : 0/0
  9954 ;;		On exit  : 0/0
  9955 ;;		Unchanged: 0/0
  9956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9961 ;;Total ram usage:        0 bytes
  9962 ;; Hardware stack levels used:    1
  9963 ;; Hardware stack levels required when called:    3
  9964 ;; This function calls:
  9965 ;;		Nothing
  9966 ;; This function is called by:
  9967 ;;		_Do_Beep
  9968 ;; This function uses a non-reentrant model
  9969 ;;
  9970                           
  9971                           	psect	text54
  9972  002252                     __ptext54:
  9973                           	opt stack 0
  9974  002252                     _Activate_Buzzer:
  9975                           	opt stack 25
  9976                           
  9977                           ;Fan_Support.c: 143: PR2 = 0b11111001;
  9978                           
  9979                           ;incstack = 0
  9980  002252  0EF9               	movlw	249
  9981  002254  6ECB               	movwf	4043,c	;volatile
  9982                           
  9983                           ;Fan_Support.c: 144: T2CON = 0b00000101 ;
  9984  002256  0E05               	movlw	5
  9985  002258  6ECA               	movwf	4042,c	;volatile
  9986                           
  9987                           ;Fan_Support.c: 145: CCPR2L = 0b01001010 ;
  9988  00225A  0E4A               	movlw	74
  9989  00225C  6EBB               	movwf	4027,c	;volatile
  9990                           
  9991                           ;Fan_Support.c: 146: CCP2CON = 0b00111100 ;
  9992  00225E  0E3C               	movlw	60
  9993  002260  6EBA               	movwf	4026,c	;volatile
  9994  002262  0012               	return		;funcret
  9995  002264                     __end_of_Activate_Buzzer:
  9996                           	opt stack 0
  9997                           tblptru	equ	0xFF8
  9998                           tblptrh	equ	0xFF7
  9999                           tblptrl	equ	0xFF6
 10000                           tablat	equ	0xFF5
 10001                           prodh	equ	0xFF4
 10002                           prodl	equ	0xFF3
 10003                           intcon	equ	0xFF2
 10004                           intcon2	equ	0xFF1
 10005                           postinc0	equ	0xFEE
 10006                           wreg	equ	0xFE8
 10007                           postdec1	equ	0xFE5
 10008                           fsr1l	equ	0xFE1
 10009                           indf2	equ	0xFDF
 10010                           postinc2	equ	0xFDE
 10011                           postdec2	equ	0xFDD
 10012                           fsr2h	equ	0xFDA
 10013                           fsr2l	equ	0xFD9
 10014                           status	equ	0xFD8
 10015                           
 10016 ;; *************** function _DS3231_Setup_Time *****************
 10017 ;; Defined at:
 10018 ;;		line 63 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/I2C_Support.c"
 10019 ;; Parameters:    Size  Location     Type
 10020 ;;		None
 10021 ;; Auto vars:     Size  Location     Type
 10022 ;;  Address         1   19[COMRAM] unsigned char 
 10023 ;;  Device          1   18[COMRAM] unsigned char 
 10024 ;; Return value:  Size  Location     Type
 10025 ;;		None               void
 10026 ;; Registers used:
 10027 ;;		wreg, status,2, status,0, cstack
 10028 ;; Tracked objects:
 10029 ;;		On entry : 0/0
 10030 ;;		On exit  : 0/0
 10031 ;;		Unchanged: 0/0
 10032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10034 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10036 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10037 ;;Total ram usage:        2 bytes
 10038 ;; Hardware stack levels used:    1
 10039 ;; Hardware stack levels required when called:    5
 10040 ;; This function calls:
 10041 ;;		_I2C_Start
 10042 ;;		_I2C_Stop
 10043 ;;		_I2C_Write
 10044 ;; This function is called by:
 10045 ;;		_main
 10046 ;; This function uses a non-reentrant model
 10047 ;;
 10048                           
 10049                           	psect	text55
 10050  001BB0                     __ptext55:
 10051                           	opt stack 0
 10052  001BB0                     _DS3231_Setup_Time:
 10053                           	opt stack 25
 10054                           
 10055                           ;I2C_Support.c: 65: char Device = 0x68;
 10056                           
 10057                           ;incstack = 0
 10058  001BB0  0E68               	movlw	104
 10059  001BB2  6E13               	movwf	DS3231_Setup_Time@Device,c
 10060                           
 10061                           ;I2C_Support.c: 66: char Address = 0x00;
 10062  001BB4  0E00               	movlw	0
 10063  001BB6  6E14               	movwf	DS3231_Setup_Time@Address,c
 10064                           
 10065                           ;I2C_Support.c: 67: second = 0x00;
 10066  001BB8  0E00               	movlw	0
 10067  001BBA  6E62               	movwf	_second,c
 10068                           
 10069                           ;I2C_Support.c: 68: minute = 0x00;
 10070  001BBC  0E00               	movlw	0
 10071  001BBE  6E5F               	movwf	_minute,c
 10072                           
 10073                           ;I2C_Support.c: 69: hour = 0x12;
 10074  001BC0  0E12               	movlw	18
 10075  001BC2  6E5E               	movwf	_hour,c
 10076                           
 10077                           ;I2C_Support.c: 70: dow = 0x01;
 10078  001BC4  0E01               	movlw	1
 10079  001BC6  6E5B               	movwf	_dow,c
 10080                           
 10081                           ;I2C_Support.c: 71: day = 0x01;
 10082  001BC8  0E01               	movlw	1
 10083  001BCA  6E5A               	movwf	_day,c
 10084                           
 10085                           ;I2C_Support.c: 72: month = 0x05;
 10086  001BCC  0E05               	movlw	5
 10087  001BCE  6E60               	movwf	_month,c
 10088                           
 10089                           ;I2C_Support.c: 73: year = 0x21;
 10090  001BD0  0E21               	movlw	33
 10091  001BD2  6E6C               	movwf	_year,c
 10092                           
 10093                           ;I2C_Support.c: 74: I2C_Start();
 10094  001BD4  EC3B  F011         	call	_I2C_Start	;wreg free
 10095                           
 10096                           ;I2C_Support.c: 75: I2C_Write((Device << 1) | 0);
 10097  001BD8  5013               	movf	DS3231_Setup_Time@Device,w,c
 10098  001BDA  2413               	addwf	DS3231_Setup_Time@Device,w,c
 10099  001BDC  ECAE  F00F         	call	_I2C_Write
 10100                           
 10101                           ;I2C_Support.c: 76: I2C_Write(Address);
 10102  001BE0  5014               	movf	DS3231_Setup_Time@Address,w,c
 10103  001BE2  ECAE  F00F         	call	_I2C_Write
 10104                           
 10105                           ;I2C_Support.c: 77: I2C_Write(second);
 10106  001BE6  5062               	movf	_second,w,c
 10107  001BE8  ECAE  F00F         	call	_I2C_Write
 10108                           
 10109                           ;I2C_Support.c: 78: I2C_Write(minute);
 10110  001BEC  505F               	movf	_minute,w,c
 10111  001BEE  ECAE  F00F         	call	_I2C_Write
 10112                           
 10113                           ;I2C_Support.c: 79: I2C_Write(hour);
 10114  001BF2  505E               	movf	_hour,w,c
 10115  001BF4  ECAE  F00F         	call	_I2C_Write
 10116                           
 10117                           ;I2C_Support.c: 80: I2C_Write(dow);
 10118  001BF8  505B               	movf	_dow,w,c
 10119  001BFA  ECAE  F00F         	call	_I2C_Write
 10120                           
 10121                           ;I2C_Support.c: 81: I2C_Write(day);
 10122  001BFE  505A               	movf	_day,w,c
 10123  001C00  ECAE  F00F         	call	_I2C_Write
 10124                           
 10125                           ;I2C_Support.c: 82: I2C_Write(month);
 10126  001C04  5060               	movf	_month,w,c
 10127  001C06  ECAE  F00F         	call	_I2C_Write
 10128                           
 10129                           ;I2C_Support.c: 83: I2C_Write(year);
 10130  001C0A  506C               	movf	_year,w,c
 10131  001C0C  ECAE  F00F         	call	_I2C_Write
 10132                           
 10133                           ;I2C_Support.c: 84: I2C_Stop();
 10134  001C10  EC32  F011         	call	_I2C_Stop	;wreg free
 10135  001C14  0012               	return		;funcret
 10136  001C16                     __end_of_DS3231_Setup_Time:
 10137                           	opt stack 0
 10138                           tblptru	equ	0xFF8
 10139                           tblptrh	equ	0xFF7
 10140                           tblptrl	equ	0xFF6
 10141                           tablat	equ	0xFF5
 10142                           prodh	equ	0xFF4
 10143                           prodl	equ	0xFF3
 10144                           intcon	equ	0xFF2
 10145                           intcon2	equ	0xFF1
 10146                           postinc0	equ	0xFEE
 10147                           wreg	equ	0xFE8
 10148                           postdec1	equ	0xFE5
 10149                           fsr1l	equ	0xFE1
 10150                           indf2	equ	0xFDF
 10151                           postinc2	equ	0xFDE
 10152                           postdec2	equ	0xFDD
 10153                           fsr2h	equ	0xFDA
 10154                           fsr2l	equ	0xFD9
 10155                           status	equ	0xFD8
 10156                           
 10157 ;; *************** function _DS3231_Read_Time *****************
 10158 ;; Defined at:
 10159 ;;		line 44 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/I2C_Support.c"
 10160 ;; Parameters:    Size  Location     Type
 10161 ;;		None
 10162 ;; Auto vars:     Size  Location     Type
 10163 ;;  Device          1   20[COMRAM] unsigned char 
 10164 ;;  Address         1   19[COMRAM] unsigned char 
 10165 ;; Return value:  Size  Location     Type
 10166 ;;		None               void
 10167 ;; Registers used:
 10168 ;;		wreg, status,2, status,0, cstack
 10169 ;; Tracked objects:
 10170 ;;		On entry : 0/0
 10171 ;;		On exit  : 0/0
 10172 ;;		Unchanged: 0/0
 10173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10175 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10177 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10178 ;;Total ram usage:        2 bytes
 10179 ;; Hardware stack levels used:    1
 10180 ;; Hardware stack levels required when called:    6
 10181 ;; This function calls:
 10182 ;;		_I2C_ReStart
 10183 ;;		_I2C_Read
 10184 ;;		_I2C_Start
 10185 ;;		_I2C_Stop
 10186 ;;		_I2C_Write
 10187 ;; This function is called by:
 10188 ;;		_main
 10189 ;; This function uses a non-reentrant model
 10190 ;;
 10191                           
 10192                           	psect	text56
 10193  001C16                     __ptext56:
 10194                           	opt stack 0
 10195  001C16                     _DS3231_Read_Time:
 10196                           	opt stack 24
 10197                           
 10198                           ;I2C_Support.c: 46: char Device = 0x68;
 10199                           
 10200                           ;incstack = 0
 10201  001C16  0E68               	movlw	104
 10202  001C18  6E15               	movwf	DS3231_Read_Time@Device,c
 10203                           
 10204                           ;I2C_Support.c: 47: char Address = 0x00;
 10205  001C1A  0E00               	movlw	0
 10206  001C1C  6E14               	movwf	DS3231_Read_Time@Address,c
 10207                           
 10208                           ;I2C_Support.c: 48: I2C_Start();
 10209  001C1E  EC3B  F011         	call	_I2C_Start	;wreg free
 10210                           
 10211                           ;I2C_Support.c: 49: I2C_Write((Device << 1) | 0);
 10212  001C22  5015               	movf	DS3231_Read_Time@Device,w,c
 10213  001C24  2415               	addwf	DS3231_Read_Time@Device,w,c
 10214  001C26  ECAE  F00F         	call	_I2C_Write
 10215                           
 10216                           ;I2C_Support.c: 50: I2C_Write(Address);
 10217  001C2A  5014               	movf	DS3231_Read_Time@Address,w,c
 10218  001C2C  ECAE  F00F         	call	_I2C_Write
 10219                           
 10220                           ;I2C_Support.c: 51: I2C_ReStart();
 10221  001C30  ECED  F010         	call	_I2C_ReStart	;wreg free
 10222                           
 10223                           ;I2C_Support.c: 52: I2C_Write((Device << 1) | 1);
 10224  001C34  80D8               	bsf	status,0,c
 10225  001C36  3415               	rlcf	DS3231_Read_Time@Device,w,c
 10226  001C38  ECAE  F00F         	call	_I2C_Write
 10227                           
 10228                           ;I2C_Support.c: 53: second = I2C_Read(1);
 10229  001C3C  0E01               	movlw	1
 10230  001C3E  EC2D  F00F         	call	_I2C_Read
 10231  001C42  6E62               	movwf	_second,c
 10232                           
 10233                           ;I2C_Support.c: 54: minute = I2C_Read(1);
 10234  001C44  0E01               	movlw	1
 10235  001C46  EC2D  F00F         	call	_I2C_Read
 10236  001C4A  6E5F               	movwf	_minute,c
 10237                           
 10238                           ;I2C_Support.c: 55: hour = I2C_Read(1);
 10239  001C4C  0E01               	movlw	1
 10240  001C4E  EC2D  F00F         	call	_I2C_Read
 10241  001C52  6E5E               	movwf	_hour,c
 10242                           
 10243                           ;I2C_Support.c: 56: dow = I2C_Read(1);
 10244  001C54  0E01               	movlw	1
 10245  001C56  EC2D  F00F         	call	_I2C_Read
 10246  001C5A  6E5B               	movwf	_dow,c
 10247                           
 10248                           ;I2C_Support.c: 57: day = I2C_Read(1);
 10249  001C5C  0E01               	movlw	1
 10250  001C5E  EC2D  F00F         	call	_I2C_Read
 10251  001C62  6E5A               	movwf	_day,c
 10252                           
 10253                           ;I2C_Support.c: 58: month = I2C_Read(1);
 10254  001C64  0E01               	movlw	1
 10255  001C66  EC2D  F00F         	call	_I2C_Read
 10256  001C6A  6E60               	movwf	_month,c
 10257                           
 10258                           ;I2C_Support.c: 59: year = I2C_Read(0);
 10259  001C6C  0E00               	movlw	0
 10260  001C6E  EC2D  F00F         	call	_I2C_Read
 10261  001C72  6E6C               	movwf	_year,c
 10262                           
 10263                           ;I2C_Support.c: 60: I2C_Stop();
 10264  001C74  EC32  F011         	call	_I2C_Stop	;wreg free
 10265  001C78  0012               	return		;funcret
 10266  001C7A                     __end_of_DS3231_Read_Time:
 10267                           	opt stack 0
 10268                           tblptru	equ	0xFF8
 10269                           tblptrh	equ	0xFF7
 10270                           tblptrl	equ	0xFF6
 10271                           tablat	equ	0xFF5
 10272                           prodh	equ	0xFF4
 10273                           prodl	equ	0xFF3
 10274                           intcon	equ	0xFF2
 10275                           intcon2	equ	0xFF1
 10276                           postinc0	equ	0xFEE
 10277                           wreg	equ	0xFE8
 10278                           postdec1	equ	0xFE5
 10279                           fsr1l	equ	0xFE1
 10280                           indf2	equ	0xFDF
 10281                           postinc2	equ	0xFDE
 10282                           postdec2	equ	0xFDD
 10283                           fsr2h	equ	0xFDA
 10284                           fsr2l	equ	0xFD9
 10285                           status	equ	0xFD8
 10286                           
 10287 ;; *************** function _DS1621_Read_Temp *****************
 10288 ;; Defined at:
 10289 ;;		line 29 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/I2C_Support.c"
 10290 ;; Parameters:    Size  Location     Type
 10291 ;;		None
 10292 ;; Auto vars:     Size  Location     Type
 10293 ;;  Device          1   23[COMRAM] unsigned char 
 10294 ;;  Data_Ret        1   22[COMRAM] unsigned char 
 10295 ;;  Cmd             1   21[COMRAM] unsigned char 
 10296 ;; Return value:  Size  Location     Type
 10297 ;;                  2   19[COMRAM] int 
 10298 ;; Registers used:
 10299 ;;		wreg, status,2, status,0, cstack
 10300 ;; Tracked objects:
 10301 ;;		On entry : 0/0
 10302 ;;		On exit  : 0/0
 10303 ;;		Unchanged: 0/0
 10304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10305 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10306 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10308 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10309 ;;Total ram usage:        5 bytes
 10310 ;; Hardware stack levels used:    1
 10311 ;; Hardware stack levels required when called:    6
 10312 ;; This function calls:
 10313 ;;		_I2C_ReStart
 10314 ;;		_I2C_Read
 10315 ;;		_I2C_Start
 10316 ;;		_I2C_Stop
 10317 ;;		_I2C_Write
 10318 ;; This function is called by:
 10319 ;;		_main
 10320 ;; This function uses a non-reentrant model
 10321 ;;
 10322                           
 10323                           	psect	text57
 10324  001F9A                     __ptext57:
 10325                           	opt stack 0
 10326  001F9A                     _DS1621_Read_Temp:
 10327                           	opt stack 24
 10328                           
 10329                           ;I2C_Support.c: 31: char Device = 0x48;
 10330                           
 10331                           ;incstack = 0
 10332  001F9A  0E48               	movlw	72
 10333  001F9C  6E18               	movwf	DS1621_Read_Temp@Device,c
 10334                           
 10335                           ;I2C_Support.c: 32: char Cmd = 0xAA;
 10336  001F9E  0EAA               	movlw	170
 10337  001FA0  6E16               	movwf	DS1621_Read_Temp@Cmd,c
 10338                           
 10339                           ;I2C_Support.c: 33: char Data_Ret;
 10340                           ;I2C_Support.c: 34: I2C_Start();
 10341  001FA2  EC3B  F011         	call	_I2C_Start	;wreg free
 10342                           
 10343                           ;I2C_Support.c: 35: I2C_Write((Device << 1) | 0);
 10344  001FA6  5018               	movf	DS1621_Read_Temp@Device,w,c
 10345  001FA8  2418               	addwf	DS1621_Read_Temp@Device,w,c
 10346  001FAA  ECAE  F00F         	call	_I2C_Write
 10347                           
 10348                           ;I2C_Support.c: 36: I2C_Write(Cmd);
 10349  001FAE  5016               	movf	DS1621_Read_Temp@Cmd,w,c
 10350  001FB0  ECAE  F00F         	call	_I2C_Write
 10351                           
 10352                           ;I2C_Support.c: 37: I2C_ReStart();
 10353  001FB4  ECED  F010         	call	_I2C_ReStart	;wreg free
 10354                           
 10355                           ;I2C_Support.c: 38: I2C_Write((Device << 1) | 1);
 10356  001FB8  80D8               	bsf	status,0,c
 10357  001FBA  3418               	rlcf	DS1621_Read_Temp@Device,w,c
 10358  001FBC  ECAE  F00F         	call	_I2C_Write
 10359                           
 10360                           ;I2C_Support.c: 39: Data_Ret = I2C_Read(0);
 10361  001FC0  0E00               	movlw	0
 10362  001FC2  EC2D  F00F         	call	_I2C_Read
 10363  001FC6  6E17               	movwf	DS1621_Read_Temp@Data_Ret,c
 10364                           
 10365                           ;I2C_Support.c: 40: I2C_Stop();
 10366  001FC8  EC32  F011         	call	_I2C_Stop	;wreg free
 10367                           
 10368                           ;I2C_Support.c: 41: return Data_Ret;
 10369  001FCC  C017  F014         	movff	DS1621_Read_Temp@Data_Ret,?_DS1621_Read_Temp
 10370  001FD0  6A15               	clrf	?_DS1621_Read_Temp+1,c
 10371  001FD2  D000               	goto	l213
 10372  001FD4                     l213:
 10373  001FD4  0012               	return		;funcret
 10374  001FD6                     __end_of_DS1621_Read_Temp:
 10375                           	opt stack 0
 10376                           tblptru	equ	0xFF8
 10377                           tblptrh	equ	0xFF7
 10378                           tblptrl	equ	0xFF6
 10379                           tablat	equ	0xFF5
 10380                           prodh	equ	0xFF4
 10381                           prodl	equ	0xFF3
 10382                           intcon	equ	0xFF2
 10383                           intcon2	equ	0xFF1
 10384                           postinc0	equ	0xFEE
 10385                           wreg	equ	0xFE8
 10386                           postdec1	equ	0xFE5
 10387                           fsr1l	equ	0xFE1
 10388                           indf2	equ	0xFDF
 10389                           postinc2	equ	0xFDE
 10390                           postdec2	equ	0xFDD
 10391                           fsr2h	equ	0xFDA
 10392                           fsr2l	equ	0xFD9
 10393                           status	equ	0xFD8
 10394                           
 10395 ;; *************** function _I2C_Write *****************
 10396 ;; Defined at:
 10397 ;;		line 41 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/I2C_Soft.c"
 10398 ;; Parameters:    Size  Location     Type
 10399 ;;  outByte         1    wreg     unsigned char 
 10400 ;; Auto vars:     Size  Location     Type
 10401 ;;  outByte         1   16[COMRAM] unsigned char 
 10402 ;;  n               1   17[COMRAM] unsigned char 
 10403 ;; Return value:  Size  Location     Type
 10404 ;;		None               void
 10405 ;; Registers used:
 10406 ;;		wreg, status,2, status,0, cstack
 10407 ;; Tracked objects:
 10408 ;;		On entry : 0/0
 10409 ;;		On exit  : 0/0
 10410 ;;		Unchanged: 0/0
 10411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10413 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10415 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10416 ;;Total ram usage:        2 bytes
 10417 ;; Hardware stack levels used:    1
 10418 ;; Hardware stack levels required when called:    4
 10419 ;; This function calls:
 10420 ;;		_i2cHighScl
 10421 ;;		_i2cHighSda
 10422 ;;		_i2cLowScl
 10423 ;;		_i2cLowSda
 10424 ;; This function is called by:
 10425 ;;		_I2C_Write_Cmd_Only
 10426 ;;		_I2C_Write_Cmd_Write_Data
 10427 ;;		_DS1621_Read_Temp
 10428 ;;		_DS3231_Read_Time
 10429 ;;		_DS3231_Setup_Time
 10430 ;;		_I2C_Write_Address_Read_One_Byte
 10431 ;;		_I2C_Write_Address_Write_One_Byte
 10432 ;;		_I2C_Write_Cmd_Read_One_Byte
 10433 ;; This function uses a non-reentrant model
 10434 ;;
 10435                           
 10436                           	psect	text58
 10437  001F5C                     __ptext58:
 10438                           	opt stack 0
 10439  001F5C                     _I2C_Write:
 10440                           	opt stack 23
 10441                           
 10442                           ;incstack = 0
 10443                           ;I2C_Write@outByte stored from wreg
 10444  001F5C  6E11               	movwf	I2C_Write@outByte,c
 10445                           
 10446                           ;I2C_Soft.c: 43: unsigned char n;
 10447                           ;I2C_Soft.c: 44: for(n=0; n<8; n++)
 10448  001F5E  0E00               	movlw	0
 10449  001F60  6E12               	movwf	I2C_Write@n,c
 10450  001F62                     l5349:
 10451  001F62  0E07               	movlw	7
 10452  001F64  6412               	cpfsgt	I2C_Write@n,c
 10453  001F66  D001               	goto	l133
 10454  001F68  D011               	goto	l5367
 10455  001F6A                     l133:
 10456                           
 10457                           ;I2C_Soft.c: 45: {
 10458                           ;I2C_Soft.c: 46: if(outByte&0x80) i2cHighSda();
 10459  001F6A  AE11               	btfss	I2C_Write@outByte,7,c
 10460  001F6C  D003               	goto	l5355
 10461  001F6E  EC92  F011         	call	_i2cHighSda	;wreg free
 10462  001F72  D003               	goto	l5357
 10463  001F74                     l5355:
 10464                           
 10465                           ;I2C_Soft.c: 47: else i2cLowSda();
 10466  001F74  EC81  F011         	call	_i2cLowSda	;wreg free
 10467  001F78  D000               	goto	l5357
 10468  001F7A                     l5357:
 10469                           
 10470                           ;I2C_Soft.c: 48: i2cHighScl();
 10471  001F7A  EC6B  F011         	call	_i2cHighScl	;wreg free
 10472                           
 10473                           ;I2C_Soft.c: 49: i2cLowScl();
 10474  001F7E  EC8E  F011         	call	_i2cLowScl	;wreg free
 10475                           
 10476                           ;I2C_Soft.c: 50: outByte = outByte << 1;
 10477  001F82  5011               	movf	I2C_Write@outByte,w,c
 10478  001F84  2411               	addwf	I2C_Write@outByte,w,c
 10479  001F86  6E11               	movwf	I2C_Write@outByte,c
 10480  001F88  2A12               	incf	I2C_Write@n,f,c
 10481  001F8A  D7EB               	goto	l5349
 10482  001F8C                     l5367:
 10483                           
 10484                           ;I2C_Soft.c: 51: }
 10485                           ;I2C_Soft.c: 52: i2cHighSda();
 10486  001F8C  EC92  F011         	call	_i2cHighSda	;wreg free
 10487                           
 10488                           ;I2C_Soft.c: 53: i2cHighScl();
 10489  001F90  EC6B  F011         	call	_i2cHighScl	;wreg free
 10490                           
 10491                           ;I2C_Soft.c: 54: i2cLowScl();
 10492  001F94  EC8E  F011         	call	_i2cLowScl	;wreg free
 10493  001F98  0012               	return		;funcret
 10494  001F9A                     __end_of_I2C_Write:
 10495                           	opt stack 0
 10496                           tblptru	equ	0xFF8
 10497                           tblptrh	equ	0xFF7
 10498                           tblptrl	equ	0xFF6
 10499                           tablat	equ	0xFF5
 10500                           prodh	equ	0xFF4
 10501                           prodl	equ	0xFF3
 10502                           intcon	equ	0xFF2
 10503                           intcon2	equ	0xFF1
 10504                           postinc0	equ	0xFEE
 10505                           wreg	equ	0xFE8
 10506                           postdec1	equ	0xFE5
 10507                           fsr1l	equ	0xFE1
 10508                           indf2	equ	0xFDF
 10509                           postinc2	equ	0xFDE
 10510                           postdec2	equ	0xFDD
 10511                           fsr2h	equ	0xFDA
 10512                           fsr2l	equ	0xFD9
 10513                           status	equ	0xFD8
 10514                           
 10515 ;; *************** function _I2C_Stop *****************
 10516 ;; Defined at:
 10517 ;;		line 88 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/I2C_Soft.c"
 10518 ;; Parameters:    Size  Location     Type
 10519 ;;		None
 10520 ;; Auto vars:     Size  Location     Type
 10521 ;;		None
 10522 ;; Return value:  Size  Location     Type
 10523 ;;		None               void
 10524 ;; Registers used:
 10525 ;;		wreg, cstack
 10526 ;; Tracked objects:
 10527 ;;		On entry : 0/0
 10528 ;;		On exit  : 0/0
 10529 ;;		Unchanged: 0/0
 10530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10535 ;;Total ram usage:        0 bytes
 10536 ;; Hardware stack levels used:    1
 10537 ;; Hardware stack levels required when called:    4
 10538 ;; This function calls:
 10539 ;;		_i2cHighScl
 10540 ;;		_i2cHighSda
 10541 ;;		_i2cLowScl
 10542 ;;		_i2cLowSda
 10543 ;; This function is called by:
 10544 ;;		_I2C_Write_Cmd_Only
 10545 ;;		_I2C_Write_Cmd_Write_Data
 10546 ;;		_DS1621_Read_Temp
 10547 ;;		_DS3231_Read_Time
 10548 ;;		_DS3231_Setup_Time
 10549 ;;		_I2C_Write_Address_Read_One_Byte
 10550 ;;		_I2C_Write_Address_Write_One_Byte
 10551 ;;		_I2C_Write_Cmd_Read_One_Byte
 10552 ;; This function uses a non-reentrant model
 10553 ;;
 10554                           
 10555                           	psect	text59
 10556  002264                     __ptext59:
 10557                           	opt stack 0
 10558  002264                     _I2C_Stop:
 10559                           	opt stack 23
 10560                           
 10561                           ;I2C_Soft.c: 90: i2cLowScl();
 10562                           
 10563                           ;incstack = 0
 10564  002264  EC8E  F011         	call	_i2cLowScl	;wreg free
 10565                           
 10566                           ;I2C_Soft.c: 91: i2cLowSda();
 10567  002268  EC81  F011         	call	_i2cLowSda	;wreg free
 10568                           
 10569                           ;I2C_Soft.c: 92: i2cHighScl();
 10570  00226C  EC6B  F011         	call	_i2cHighScl	;wreg free
 10571                           
 10572                           ;I2C_Soft.c: 93: i2cHighSda();
 10573  002270  EC92  F011         	call	_i2cHighSda	;wreg free
 10574  002274  0012               	return		;funcret
 10575  002276                     __end_of_I2C_Stop:
 10576                           	opt stack 0
 10577                           tblptru	equ	0xFF8
 10578                           tblptrh	equ	0xFF7
 10579                           tblptrl	equ	0xFF6
 10580                           tablat	equ	0xFF5
 10581                           prodh	equ	0xFF4
 10582                           prodl	equ	0xFF3
 10583                           intcon	equ	0xFF2
 10584                           intcon2	equ	0xFF1
 10585                           postinc0	equ	0xFEE
 10586                           wreg	equ	0xFE8
 10587                           postdec1	equ	0xFE5
 10588                           fsr1l	equ	0xFE1
 10589                           indf2	equ	0xFDF
 10590                           postinc2	equ	0xFDE
 10591                           postdec2	equ	0xFDD
 10592                           fsr2h	equ	0xFDA
 10593                           fsr2l	equ	0xFD9
 10594                           status	equ	0xFD8
 10595                           
 10596 ;; *************** function _I2C_Start *****************
 10597 ;; Defined at:
 10598 ;;		line 71 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/I2C_Soft.c"
 10599 ;; Parameters:    Size  Location     Type
 10600 ;;		None
 10601 ;; Auto vars:     Size  Location     Type
 10602 ;;		None
 10603 ;; Return value:  Size  Location     Type
 10604 ;;		None               void
 10605 ;; Registers used:
 10606 ;;		wreg, cstack
 10607 ;; Tracked objects:
 10608 ;;		On entry : 0/0
 10609 ;;		On exit  : 0/0
 10610 ;;		Unchanged: 0/0
 10611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10616 ;;Total ram usage:        0 bytes
 10617 ;; Hardware stack levels used:    1
 10618 ;; Hardware stack levels required when called:    4
 10619 ;; This function calls:
 10620 ;;		_i2cHighScl
 10621 ;;		_i2cHighSda
 10622 ;;		_i2cLowScl
 10623 ;;		_i2cLowSda
 10624 ;; This function is called by:
 10625 ;;		_I2C_Write_Cmd_Only
 10626 ;;		_I2C_Write_Cmd_Write_Data
 10627 ;;		_DS1621_Read_Temp
 10628 ;;		_DS3231_Read_Time
 10629 ;;		_DS3231_Setup_Time
 10630 ;;		_I2C_Write_Address_Read_One_Byte
 10631 ;;		_I2C_Write_Address_Write_One_Byte
 10632 ;;		_I2C_Write_Cmd_Read_One_Byte
 10633 ;; This function uses a non-reentrant model
 10634 ;;
 10635                           
 10636                           	psect	text60
 10637  002276                     __ptext60:
 10638                           	opt stack 0
 10639  002276                     _I2C_Start:
 10640                           	opt stack 23
 10641                           
 10642                           ;I2C_Soft.c: 73: i2cHighSda();
 10643                           
 10644                           ;incstack = 0
 10645  002276  EC92  F011         	call	_i2cHighSda	;wreg free
 10646                           
 10647                           ;I2C_Soft.c: 74: i2cHighScl();
 10648  00227A  EC6B  F011         	call	_i2cHighScl	;wreg free
 10649                           
 10650                           ;I2C_Soft.c: 75: i2cLowSda();
 10651  00227E  EC81  F011         	call	_i2cLowSda	;wreg free
 10652                           
 10653                           ;I2C_Soft.c: 76: i2cLowScl();
 10654  002282  EC8E  F011         	call	_i2cLowScl	;wreg free
 10655  002286  0012               	return		;funcret
 10656  002288                     __end_of_I2C_Start:
 10657                           	opt stack 0
 10658                           tblptru	equ	0xFF8
 10659                           tblptrh	equ	0xFF7
 10660                           tblptrl	equ	0xFF6
 10661                           tablat	equ	0xFF5
 10662                           prodh	equ	0xFF4
 10663                           prodl	equ	0xFF3
 10664                           intcon	equ	0xFF2
 10665                           intcon2	equ	0xFF1
 10666                           postinc0	equ	0xFEE
 10667                           wreg	equ	0xFE8
 10668                           postdec1	equ	0xFE5
 10669                           fsr1l	equ	0xFE1
 10670                           indf2	equ	0xFDF
 10671                           postinc2	equ	0xFDE
 10672                           postdec2	equ	0xFDD
 10673                           fsr2h	equ	0xFDA
 10674                           fsr2l	equ	0xFD9
 10675                           status	equ	0xFD8
 10676                           
 10677 ;; *************** function _I2C_Read *****************
 10678 ;; Defined at:
 10679 ;;		line 20 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/I2C_Soft.c"
 10680 ;; Parameters:    Size  Location     Type
 10681 ;;  ack             1    wreg     unsigned char 
 10682 ;; Auto vars:     Size  Location     Type
 10683 ;;  ack             1   16[COMRAM] unsigned char 
 10684 ;;  inByte          1   18[COMRAM] unsigned char 
 10685 ;;  n               1   17[COMRAM] unsigned char 
 10686 ;; Return value:  Size  Location     Type
 10687 ;;                  1    wreg      unsigned char 
 10688 ;; Registers used:
 10689 ;;		wreg, status,2, status,0, cstack
 10690 ;; Tracked objects:
 10691 ;;		On entry : 0/0
 10692 ;;		On exit  : 0/0
 10693 ;;		Unchanged: 0/0
 10694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10696 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10698 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10699 ;;Total ram usage:        3 bytes
 10700 ;; Hardware stack levels used:    1
 10701 ;; Hardware stack levels required when called:    5
 10702 ;; This function calls:
 10703 ;;		_i2cAck
 10704 ;;		_i2cHighScl
 10705 ;;		_i2cHighSda
 10706 ;;		_i2cLowScl
 10707 ;;		_i2cNack
 10708 ;; This function is called by:
 10709 ;;		_DS1621_Read_Temp
 10710 ;;		_DS3231_Read_Time
 10711 ;;		_I2C_Write_Address_Read_One_Byte
 10712 ;;		_I2C_Write_Cmd_Read_One_Byte
 10713 ;; This function uses a non-reentrant model
 10714 ;;
 10715                           
 10716                           	psect	text61
 10717  001E5A                     __ptext61:
 10718                           	opt stack 0
 10719  001E5A                     _I2C_Read:
 10720                           	opt stack 24
 10721                           
 10722                           ;incstack = 0
 10723                           ;I2C_Read@ack stored from wreg
 10724  001E5A  6E11               	movwf	I2C_Read@ack,c
 10725                           
 10726                           ;I2C_Soft.c: 22: unsigned char inByte, n;
 10727                           ;I2C_Soft.c: 23: i2cHighSda();
 10728  001E5C  EC92  F011         	call	_i2cHighSda	;wreg free
 10729                           
 10730                           ;I2C_Soft.c: 24: for (n=0; n<8; n++)
 10731  001E60  0E00               	movlw	0
 10732  001E62  6E12               	movwf	I2C_Read@n,c
 10733  001E64                     l5891:
 10734  001E64  0E07               	movlw	7
 10735  001E66  6412               	cpfsgt	I2C_Read@n,c
 10736  001E68  D001               	goto	l5895
 10737  001E6A  D00F               	goto	l5909
 10738  001E6C                     l5895:
 10739                           
 10740                           ;I2C_Soft.c: 25: {
 10741                           ;I2C_Soft.c: 26: i2cHighScl();
 10742  001E6C  EC6B  F011         	call	_i2cHighScl	;wreg free
 10743                           
 10744                           ;I2C_Soft.c: 28: if (PORTDbits.RD7)
 10745  001E70  AE83               	btfss	3971,7,c	;volatile
 10746  001E72  D003               	goto	l5901
 10747                           
 10748                           ;I2C_Soft.c: 29: inByte = (inByte << 1) | 0x01;
 10749  001E74  80D8               	bsf	status,0,c
 10750  001E76  3613               	rlcf	I2C_Read@inByte,f,c
 10751  001E78  D004               	goto	l5903
 10752  001E7A                     l5901:
 10753                           
 10754                           ;I2C_Soft.c: 30: else
 10755                           ;I2C_Soft.c: 31: inByte = inByte << 1;
 10756  001E7A  5013               	movf	I2C_Read@inByte,w,c
 10757  001E7C  2413               	addwf	I2C_Read@inByte,w,c
 10758  001E7E  6E13               	movwf	I2C_Read@inByte,c
 10759  001E80  D000               	goto	l5903
 10760  001E82                     l5903:
 10761                           
 10762                           ;I2C_Soft.c: 32: i2cLowScl();
 10763  001E82  EC8E  F011         	call	_i2cLowScl	;wreg free
 10764  001E86  2A12               	incf	I2C_Read@n,f,c
 10765  001E88  D7ED               	goto	l5891
 10766  001E8A                     l5909:
 10767                           
 10768                           ;I2C_Soft.c: 33: }
 10769                           ;I2C_Soft.c: 34: if (ack) i2cAck();
 10770  001E8A  5011               	movf	I2C_Read@ack,w,c
 10771  001E8C  B4D8               	btfsc	status,2,c
 10772  001E8E  D003               	goto	l5913
 10773  001E90  EC44  F011         	call	_i2cAck	;wreg free
 10774  001E94  D003               	goto	l5915
 10775  001E96                     l5913:
 10776                           
 10777                           ;I2C_Soft.c: 35: else i2cNack();
 10778  001E96  EC7C  F011         	call	_i2cNack	;wreg free
 10779  001E9A  D000               	goto	l5915
 10780  001E9C                     l5915:
 10781                           
 10782                           ;I2C_Soft.c: 38: return(inByte);
 10783  001E9C  5013               	movf	I2C_Read@inByte,w,c
 10784  001E9E  D000               	goto	l130
 10785  001EA0                     l130:
 10786  001EA0  0012               	return		;funcret
 10787  001EA2                     __end_of_I2C_Read:
 10788                           	opt stack 0
 10789                           tblptru	equ	0xFF8
 10790                           tblptrh	equ	0xFF7
 10791                           tblptrl	equ	0xFF6
 10792                           tablat	equ	0xFF5
 10793                           prodh	equ	0xFF4
 10794                           prodl	equ	0xFF3
 10795                           intcon	equ	0xFF2
 10796                           intcon2	equ	0xFF1
 10797                           postinc0	equ	0xFEE
 10798                           wreg	equ	0xFE8
 10799                           postdec1	equ	0xFE5
 10800                           fsr1l	equ	0xFE1
 10801                           indf2	equ	0xFDF
 10802                           postinc2	equ	0xFDE
 10803                           postdec2	equ	0xFDD
 10804                           fsr2h	equ	0xFDA
 10805                           fsr2l	equ	0xFD9
 10806                           status	equ	0xFD8
 10807                           
 10808 ;; *************** function _i2cNack *****************
 10809 ;; Defined at:
 10810 ;;		line 57 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/I2C_Soft.c"
 10811 ;; Parameters:    Size  Location     Type
 10812 ;;		None
 10813 ;; Auto vars:     Size  Location     Type
 10814 ;;		None
 10815 ;; Return value:  Size  Location     Type
 10816 ;;		None               void
 10817 ;; Registers used:
 10818 ;;		wreg, cstack
 10819 ;; Tracked objects:
 10820 ;;		On entry : 0/0
 10821 ;;		On exit  : 0/0
 10822 ;;		Unchanged: 0/0
 10823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10828 ;;Total ram usage:        0 bytes
 10829 ;; Hardware stack levels used:    1
 10830 ;; Hardware stack levels required when called:    4
 10831 ;; This function calls:
 10832 ;;		_i2cHighScl
 10833 ;;		_i2cLowScl
 10834 ;; This function is called by:
 10835 ;;		_I2C_Read
 10836 ;; This function uses a non-reentrant model
 10837 ;;
 10838                           
 10839                           	psect	text62
 10840  0022F8                     __ptext62:
 10841                           	opt stack 0
 10842  0022F8                     _i2cNack:
 10843                           	opt stack 24
 10844                           
 10845                           ;I2C_Soft.c: 59: i2cHighScl();
 10846                           
 10847                           ;incstack = 0
 10848  0022F8  EC6B  F011         	call	_i2cHighScl	;wreg free
 10849                           
 10850                           ;I2C_Soft.c: 60: i2cLowScl();
 10851  0022FC  EC8E  F011         	call	_i2cLowScl	;wreg free
 10852  002300  0012               	return		;funcret
 10853  002302                     __end_of_i2cNack:
 10854                           	opt stack 0
 10855                           tblptru	equ	0xFF8
 10856                           tblptrh	equ	0xFF7
 10857                           tblptrl	equ	0xFF6
 10858                           tablat	equ	0xFF5
 10859                           prodh	equ	0xFF4
 10860                           prodl	equ	0xFF3
 10861                           intcon	equ	0xFF2
 10862                           intcon2	equ	0xFF1
 10863                           postinc0	equ	0xFEE
 10864                           wreg	equ	0xFE8
 10865                           postdec1	equ	0xFE5
 10866                           fsr1l	equ	0xFE1
 10867                           indf2	equ	0xFDF
 10868                           postinc2	equ	0xFDE
 10869                           postdec2	equ	0xFDD
 10870                           fsr2h	equ	0xFDA
 10871                           fsr2l	equ	0xFD9
 10872                           status	equ	0xFD8
 10873                           
 10874 ;; *************** function _i2cAck *****************
 10875 ;; Defined at:
 10876 ;;		line 63 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/I2C_Soft.c"
 10877 ;; Parameters:    Size  Location     Type
 10878 ;;		None
 10879 ;; Auto vars:     Size  Location     Type
 10880 ;;		None
 10881 ;; Return value:  Size  Location     Type
 10882 ;;		None               void
 10883 ;; Registers used:
 10884 ;;		wreg, cstack
 10885 ;; Tracked objects:
 10886 ;;		On entry : 0/0
 10887 ;;		On exit  : 0/0
 10888 ;;		Unchanged: 0/0
 10889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10894 ;;Total ram usage:        0 bytes
 10895 ;; Hardware stack levels used:    1
 10896 ;; Hardware stack levels required when called:    4
 10897 ;; This function calls:
 10898 ;;		_i2cHighScl
 10899 ;;		_i2cHighSda
 10900 ;;		_i2cLowScl
 10901 ;;		_i2cLowSda
 10902 ;; This function is called by:
 10903 ;;		_I2C_Read
 10904 ;; This function uses a non-reentrant model
 10905 ;;
 10906                           
 10907                           	psect	text63
 10908  002288                     __ptext63:
 10909                           	opt stack 0
 10910  002288                     _i2cAck:
 10911                           	opt stack 24
 10912                           
 10913                           ;I2C_Soft.c: 65: i2cLowSda();
 10914                           
 10915                           ;incstack = 0
 10916  002288  EC81  F011         	call	_i2cLowSda	;wreg free
 10917                           
 10918                           ;I2C_Soft.c: 66: i2cHighScl();
 10919  00228C  EC6B  F011         	call	_i2cHighScl	;wreg free
 10920                           
 10921                           ;I2C_Soft.c: 67: i2cLowScl();
 10922  002290  EC8E  F011         	call	_i2cLowScl	;wreg free
 10923                           
 10924                           ;I2C_Soft.c: 68: i2cHighSda();
 10925  002294  EC92  F011         	call	_i2cHighSda	;wreg free
 10926  002298  0012               	return		;funcret
 10927  00229A                     __end_of_i2cAck:
 10928                           	opt stack 0
 10929                           tblptru	equ	0xFF8
 10930                           tblptrh	equ	0xFF7
 10931                           tblptrl	equ	0xFF6
 10932                           tablat	equ	0xFF5
 10933                           prodh	equ	0xFF4
 10934                           prodl	equ	0xFF3
 10935                           intcon	equ	0xFF2
 10936                           intcon2	equ	0xFF1
 10937                           postinc0	equ	0xFEE
 10938                           wreg	equ	0xFE8
 10939                           postdec1	equ	0xFE5
 10940                           fsr1l	equ	0xFE1
 10941                           indf2	equ	0xFDF
 10942                           postinc2	equ	0xFDE
 10943                           postdec2	equ	0xFDD
 10944                           fsr2h	equ	0xFDA
 10945                           fsr2l	equ	0xFD9
 10946                           status	equ	0xFD8
 10947                           
 10948 ;; *************** function _I2C_ReStart *****************
 10949 ;; Defined at:
 10950 ;;		line 79 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/I2C_Soft.c"
 10951 ;; Parameters:    Size  Location     Type
 10952 ;;		None
 10953 ;; Auto vars:     Size  Location     Type
 10954 ;;		None
 10955 ;; Return value:  Size  Location     Type
 10956 ;;		None               void
 10957 ;; Registers used:
 10958 ;;		wreg, cstack
 10959 ;; Tracked objects:
 10960 ;;		On entry : 0/0
 10961 ;;		On exit  : 0/0
 10962 ;;		Unchanged: 0/0
 10963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10968 ;;Total ram usage:        0 bytes
 10969 ;; Hardware stack levels used:    1
 10970 ;; Hardware stack levels required when called:    4
 10971 ;; This function calls:
 10972 ;;		_i2cHighScl
 10973 ;;		_i2cHighSda
 10974 ;;		_i2cLowScl
 10975 ;;		_i2cLowSda
 10976 ;; This function is called by:
 10977 ;;		_DS1621_Read_Temp
 10978 ;;		_DS3231_Read_Time
 10979 ;;		_I2C_Write_Address_Read_One_Byte
 10980 ;;		_I2C_Write_Cmd_Read_One_Byte
 10981 ;; This function uses a non-reentrant model
 10982 ;;
 10983                           
 10984                           	psect	text64
 10985  0021DA                     __ptext64:
 10986                           	opt stack 0
 10987  0021DA                     _I2C_ReStart:
 10988                           	opt stack 25
 10989                           
 10990                           ;I2C_Soft.c: 81: i2cLowScl();
 10991                           
 10992                           ;incstack = 0
 10993  0021DA  EC8E  F011         	call	_i2cLowScl	;wreg free
 10994                           
 10995                           ;I2C_Soft.c: 82: i2cHighSda();
 10996  0021DE  EC92  F011         	call	_i2cHighSda	;wreg free
 10997                           
 10998                           ;I2C_Soft.c: 83: i2cHighScl();
 10999  0021E2  EC6B  F011         	call	_i2cHighScl	;wreg free
 11000                           
 11001                           ;I2C_Soft.c: 84: i2cLowSda();
 11002  0021E6  EC81  F011         	call	_i2cLowSda	;wreg free
 11003                           
 11004                           ;I2C_Soft.c: 85: i2cLowScl();
 11005  0021EA  EC8E  F011         	call	_i2cLowScl	;wreg free
 11006  0021EE  0012               	return		;funcret
 11007  0021F0                     __end_of_I2C_ReStart:
 11008                           	opt stack 0
 11009                           tblptru	equ	0xFF8
 11010                           tblptrh	equ	0xFF7
 11011                           tblptrl	equ	0xFF6
 11012                           tablat	equ	0xFF5
 11013                           prodh	equ	0xFF4
 11014                           prodl	equ	0xFF3
 11015                           intcon	equ	0xFF2
 11016                           intcon2	equ	0xFF1
 11017                           postinc0	equ	0xFEE
 11018                           wreg	equ	0xFE8
 11019                           postdec1	equ	0xFE5
 11020                           fsr1l	equ	0xFE1
 11021                           indf2	equ	0xFDF
 11022                           postinc2	equ	0xFDE
 11023                           postdec2	equ	0xFDD
 11024                           fsr2h	equ	0xFDA
 11025                           fsr2l	equ	0xFD9
 11026                           status	equ	0xFD8
 11027                           
 11028 ;; *************** function _i2cLowSda *****************
 11029 ;; Defined at:
 11030 ;;		line 102 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/I2C_Soft.c"
 11031 ;; Parameters:    Size  Location     Type
 11032 ;;		None
 11033 ;; Auto vars:     Size  Location     Type
 11034 ;;		None
 11035 ;; Return value:  Size  Location     Type
 11036 ;;		None               void
 11037 ;; Registers used:
 11038 ;;		None
 11039 ;; Tracked objects:
 11040 ;;		On entry : 0/0
 11041 ;;		On exit  : 0/0
 11042 ;;		Unchanged: 0/0
 11043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11048 ;;Total ram usage:        0 bytes
 11049 ;; Hardware stack levels used:    1
 11050 ;; Hardware stack levels required when called:    3
 11051 ;; This function calls:
 11052 ;;		Nothing
 11053 ;; This function is called by:
 11054 ;;		_I2C_Write
 11055 ;;		_i2cAck
 11056 ;;		_I2C_Start
 11057 ;;		_I2C_ReStart
 11058 ;;		_I2C_Stop
 11059 ;; This function uses a non-reentrant model
 11060 ;;
 11061                           
 11062                           	psect	text65
 11063  002302                     __ptext65:
 11064                           	opt stack 0
 11065  002302                     _i2cLowSda:
 11066                           	opt stack 23
 11067                           
 11068                           ;I2C_Soft.c: 104: PORTDbits.RD7 = 0;
 11069                           
 11070                           ;incstack = 0
 11071  002302  9E83               	bcf	3971,7,c	;volatile
 11072                           
 11073                           ;I2C_Soft.c: 105: TRISDbits.RD7 = 0;
 11074  002304  9E95               	bcf	3989,7,c	;volatile
 11075                           
 11076                           ;I2C_Soft.c: 106: _delay((unsigned long)((2)*(8000000/4000000.0)));
 11077  002306  D000               	nop2		;2 cycle nop
 11078  002308  D000               	nop2		;2 cycle nop
 11079  00230A  0012               	return		;funcret
 11080  00230C                     __end_of_i2cLowSda:
 11081                           	opt stack 0
 11082                           tblptru	equ	0xFF8
 11083                           tblptrh	equ	0xFF7
 11084                           tblptrl	equ	0xFF6
 11085                           tablat	equ	0xFF5
 11086                           prodh	equ	0xFF4
 11087                           prodl	equ	0xFF3
 11088                           intcon	equ	0xFF2
 11089                           intcon2	equ	0xFF1
 11090                           postinc0	equ	0xFEE
 11091                           wreg	equ	0xFE8
 11092                           postdec1	equ	0xFE5
 11093                           fsr1l	equ	0xFE1
 11094                           indf2	equ	0xFDF
 11095                           postinc2	equ	0xFDE
 11096                           postdec2	equ	0xFDD
 11097                           fsr2h	equ	0xFDA
 11098                           fsr2l	equ	0xFD9
 11099                           status	equ	0xFD8
 11100                           
 11101 ;; *************** function _i2cLowScl *****************
 11102 ;; Defined at:
 11103 ;;		line 115 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/I2C_Soft.c"
 11104 ;; Parameters:    Size  Location     Type
 11105 ;;		None
 11106 ;; Auto vars:     Size  Location     Type
 11107 ;;		None
 11108 ;; Return value:  Size  Location     Type
 11109 ;;		None               void
 11110 ;; Registers used:
 11111 ;;		None
 11112 ;; Tracked objects:
 11113 ;;		On entry : 0/0
 11114 ;;		On exit  : 0/0
 11115 ;;		Unchanged: 0/0
 11116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11121 ;;Total ram usage:        0 bytes
 11122 ;; Hardware stack levels used:    1
 11123 ;; Hardware stack levels required when called:    3
 11124 ;; This function calls:
 11125 ;;		Nothing
 11126 ;; This function is called by:
 11127 ;;		_I2C_Read
 11128 ;;		_I2C_Write
 11129 ;;		_i2cNack
 11130 ;;		_i2cAck
 11131 ;;		_I2C_Start
 11132 ;;		_I2C_ReStart
 11133 ;;		_I2C_Stop
 11134 ;; This function uses a non-reentrant model
 11135 ;;
 11136                           
 11137                           	psect	text66
 11138  00231C                     __ptext66:
 11139                           	opt stack 0
 11140  00231C                     _i2cLowScl:
 11141                           	opt stack 23
 11142                           
 11143                           ;I2C_Soft.c: 117: PORTDbits.RD6 = 0;
 11144                           
 11145                           ;incstack = 0
 11146  00231C  9C83               	bcf	3971,6,c	;volatile
 11147                           
 11148                           ;I2C_Soft.c: 118: TRISDbits.RD6 = 0;
 11149  00231E  9C95               	bcf	3989,6,c	;volatile
 11150                           
 11151                           ;I2C_Soft.c: 119: _delay((unsigned long)((1)*(8000000/4000000.0)));
 11152  002320  D000               	nop2		;2 cycle nop
 11153  002322  0012               	return		;funcret
 11154  002324                     __end_of_i2cLowScl:
 11155                           	opt stack 0
 11156                           tblptru	equ	0xFF8
 11157                           tblptrh	equ	0xFF7
 11158                           tblptrl	equ	0xFF6
 11159                           tablat	equ	0xFF5
 11160                           prodh	equ	0xFF4
 11161                           prodl	equ	0xFF3
 11162                           intcon	equ	0xFF2
 11163                           intcon2	equ	0xFF1
 11164                           postinc0	equ	0xFEE
 11165                           wreg	equ	0xFE8
 11166                           postdec1	equ	0xFE5
 11167                           fsr1l	equ	0xFE1
 11168                           indf2	equ	0xFDF
 11169                           postinc2	equ	0xFDE
 11170                           postdec2	equ	0xFDD
 11171                           fsr2h	equ	0xFDA
 11172                           fsr2l	equ	0xFD9
 11173                           status	equ	0xFD8
 11174                           
 11175 ;; *************** function _i2cHighSda *****************
 11176 ;; Defined at:
 11177 ;;		line 96 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/I2C_Soft.c"
 11178 ;; Parameters:    Size  Location     Type
 11179 ;;		None
 11180 ;; Auto vars:     Size  Location     Type
 11181 ;;		None
 11182 ;; Return value:  Size  Location     Type
 11183 ;;		None               void
 11184 ;; Registers used:
 11185 ;;		None
 11186 ;; Tracked objects:
 11187 ;;		On entry : 0/0
 11188 ;;		On exit  : 0/0
 11189 ;;		Unchanged: 0/0
 11190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11195 ;;Total ram usage:        0 bytes
 11196 ;; Hardware stack levels used:    1
 11197 ;; Hardware stack levels required when called:    3
 11198 ;; This function calls:
 11199 ;;		Nothing
 11200 ;; This function is called by:
 11201 ;;		_I2C_Init
 11202 ;;		_I2C_Read
 11203 ;;		_I2C_Write
 11204 ;;		_i2cAck
 11205 ;;		_I2C_Start
 11206 ;;		_I2C_ReStart
 11207 ;;		_I2C_Stop
 11208 ;; This function uses a non-reentrant model
 11209 ;;
 11210                           
 11211                           	psect	text67
 11212  002324                     __ptext67:
 11213                           	opt stack 0
 11214  002324                     _i2cHighSda:
 11215                           	opt stack 25
 11216                           
 11217                           ;I2C_Soft.c: 98: TRISDbits.RD7 = 1;
 11218                           
 11219                           ;incstack = 0
 11220  002324  8E95               	bsf	3989,7,c	;volatile
 11221                           
 11222                           ;I2C_Soft.c: 99: _delay((unsigned long)((2)*(8000000/4000000.0)));
 11223  002326  D000               	nop2		;2 cycle nop
 11224  002328  D000               	nop2		;2 cycle nop
 11225  00232A  0012               	return		;funcret
 11226  00232C                     __end_of_i2cHighSda:
 11227                           	opt stack 0
 11228                           tblptru	equ	0xFF8
 11229                           tblptrh	equ	0xFF7
 11230                           tblptrl	equ	0xFF6
 11231                           tablat	equ	0xFF5
 11232                           prodh	equ	0xFF4
 11233                           prodl	equ	0xFF3
 11234                           intcon	equ	0xFF2
 11235                           intcon2	equ	0xFF1
 11236                           postinc0	equ	0xFEE
 11237                           wreg	equ	0xFE8
 11238                           postdec1	equ	0xFE5
 11239                           fsr1l	equ	0xFE1
 11240                           indf2	equ	0xFDF
 11241                           postinc2	equ	0xFDE
 11242                           postdec2	equ	0xFDD
 11243                           fsr2h	equ	0xFDA
 11244                           fsr2l	equ	0xFD9
 11245                           status	equ	0xFD8
 11246                           
 11247 ;; *************** function _i2cHighScl *****************
 11248 ;; Defined at:
 11249 ;;		line 109 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/I2C_Soft.c"
 11250 ;; Parameters:    Size  Location     Type
 11251 ;;		None
 11252 ;; Auto vars:     Size  Location     Type
 11253 ;;		None
 11254 ;; Return value:  Size  Location     Type
 11255 ;;		None               void
 11256 ;; Registers used:
 11257 ;;		wreg
 11258 ;; Tracked objects:
 11259 ;;		On entry : 0/0
 11260 ;;		On exit  : 0/0
 11261 ;;		Unchanged: 0/0
 11262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11267 ;;Total ram usage:        0 bytes
 11268 ;; Hardware stack levels used:    1
 11269 ;; Hardware stack levels required when called:    3
 11270 ;; This function calls:
 11271 ;;		Nothing
 11272 ;; This function is called by:
 11273 ;;		_I2C_Init
 11274 ;;		_I2C_Read
 11275 ;;		_I2C_Write
 11276 ;;		_i2cNack
 11277 ;;		_i2cAck
 11278 ;;		_I2C_Start
 11279 ;;		_I2C_ReStart
 11280 ;;		_I2C_Stop
 11281 ;; This function uses a non-reentrant model
 11282 ;;
 11283                           
 11284                           	psect	text68
 11285  0022D6                     __ptext68:
 11286                           	opt stack 0
 11287  0022D6                     _i2cHighScl:
 11288                           	opt stack 25
 11289                           
 11290                           ;I2C_Soft.c: 111: TRISDbits.RD6 = 1;
 11291                           
 11292                           ;incstack = 0
 11293  0022D6  8C95               	bsf	3989,6,c	;volatile
 11294                           
 11295                           ;I2C_Soft.c: 112: _delay((unsigned long)((10)*(8000000/4000000.0)));
 11296  0022D8  0E06               	movlw	6
 11297  0022DA                     u5357:
 11298  0022DA  2EE8               	decfsz	wreg,f,c
 11299  0022DC  D7FE               	goto	u5357
 11300  0022DE  D000               	nop2		;nop
 11301  0022E0  0012               	return		;funcret
 11302  0022E2                     __end_of_i2cHighScl:
 11303                           	opt stack 0
 11304                           tblptru	equ	0xFF8
 11305                           tblptrh	equ	0xFF7
 11306                           tblptrl	equ	0xFF6
 11307                           tablat	equ	0xFF5
 11308                           prodh	equ	0xFF4
 11309                           prodl	equ	0xFF3
 11310                           intcon	equ	0xFF2
 11311                           intcon2	equ	0xFF1
 11312                           postinc0	equ	0xFEE
 11313                           wreg	equ	0xFE8
 11314                           postdec1	equ	0xFE5
 11315                           fsr1l	equ	0xFE1
 11316                           indf2	equ	0xFDF
 11317                           postinc2	equ	0xFDE
 11318                           postdec2	equ	0xFDD
 11319                           fsr2h	equ	0xFDA
 11320                           fsr2l	equ	0xFD9
 11321                           status	equ	0xFD8
 11322                           
 11323 ;; *************** function _chkisr *****************
 11324 ;; Defined at:
 11325 ;;		line 27 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/Interrupt.c"
 11326 ;; Parameters:    Size  Location     Type
 11327 ;;		None
 11328 ;; Auto vars:     Size  Location     Type
 11329 ;;		None
 11330 ;; Return value:  Size  Location     Type
 11331 ;;		None               void
 11332 ;; Registers used:
 11333 ;;		wreg, status,2, status,0, cstack
 11334 ;; Tracked objects:
 11335 ;;		On entry : 0/0
 11336 ;;		On exit  : 0/0
 11337 ;;		Unchanged: 0/0
 11338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11341 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11342 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11343 ;;Total ram usage:       14 bytes
 11344 ;; Hardware stack levels used:    1
 11345 ;; Hardware stack levels required when called:    2
 11346 ;; This function calls:
 11347 ;;		_INT0_isr
 11348 ;;		_TIMER1_isr
 11349 ;; This function is called by:
 11350 ;;		Interrupt level 2
 11351 ;; This function uses a non-reentrant model
 11352 ;;
 11353                           
 11354                           	psect	intcode
 11355  000008                     __pintcode:
 11356                           	opt stack 0
 11357  000008                     _chkisr:
 11358                           	opt stack 20
 11359                           
 11360                           ;incstack = 0
 11361  000008  CFFA F003          	movff	pclath,??_chkisr
 11362  00000C  CFFB F004          	movff	pclatu,??_chkisr+1
 11363  000010  CFE9 F005          	movff	fsr0l,??_chkisr+2
 11364  000014  ED2C  F00D         	call	int_func,f	;refresh shadow registers
 11365                           pclatu	equ	0xFFB
 11366                           pclath	equ	0xFFA
 11367                           tblptru	equ	0xFF8
 11368                           tblptrh	equ	0xFF7
 11369                           tblptrl	equ	0xFF6
 11370                           tablat	equ	0xFF5
 11371                           prodh	equ	0xFF4
 11372                           prodl	equ	0xFF3
 11373                           intcon	equ	0xFF2
 11374                           intcon2	equ	0xFF1
 11375                           postinc0	equ	0xFEE
 11376                           fsr0l	equ	0xFE9
 11377                           wreg	equ	0xFE8
 11378                           postdec1	equ	0xFE5
 11379                           fsr1l	equ	0xFE1
 11380                           indf2	equ	0xFDF
 11381                           postinc2	equ	0xFDE
 11382                           postdec2	equ	0xFDD
 11383                           fsr2h	equ	0xFDA
 11384                           fsr2l	equ	0xFD9
 11385                           status	equ	0xFD8
 11386                           
 11387                           	psect	intcode_body
 11388  001A58                     __pintcode_body:
 11389                           	opt stack 20
 11390  001A58                     int_func:
 11391                           	opt stack 20
 11392  001A58  0006               	pop		; remove dummy address from shadow register refresh
 11393  001A5A  CFEA F006          	movff	fsr0h,??_chkisr+3
 11394  001A5E  CFE1 F007          	movff	fsr1l,??_chkisr+4
 11395  001A62  CFE2 F008          	movff	fsr1h,??_chkisr+5
 11396  001A66  CFD9 F009          	movff	fsr2l,??_chkisr+6
 11397  001A6A  CFDA F00A          	movff	fsr2h,??_chkisr+7
 11398  001A6E  CFF3 F00B          	movff	prodl,??_chkisr+8
 11399  001A72  CFF4 F00C          	movff	prodh,??_chkisr+9
 11400  001A76  CFF6 F00D          	movff	tblptrl,??_chkisr+10
 11401  001A7A  CFF7 F00E          	movff	tblptrh,??_chkisr+11
 11402  001A7E  CFF8 F00F          	movff	tblptru,??_chkisr+12
 11403  001A82  CFF5 F010          	movff	tablat,??_chkisr+13
 11404                           
 11405                           ;Interrupt.c: 29: if (PIR1bits.TMR1IF == 1) TIMER1_isr();
 11406  001A86  A09E               	btfss	3998,0,c	;volatile
 11407  001A88  D003               	goto	i2l5149
 11408  001A8A  EC71  F011         	call	_TIMER1_isr	;wreg free
 11409  001A8E  D000               	goto	i2l5149
 11410  001A90                     i2l5149:
 11411                           
 11412                           ;Interrupt.c: 30: if (INTCONbits.INT0IF == 1) INT0_isr();
 11413  001A90  A2F2               	btfss	intcon,1,c	;volatile
 11414  001A92  D003               	goto	i2l532
 11415  001A94  ECA0  F006         	call	_INT0_isr	;wreg free
 11416  001A98  D000               	goto	i2l532
 11417  001A9A                     i2l532:
 11418  001A9A  C010  FFF5         	movff	??_chkisr+13,tablat
 11419  001A9E  C00F  FFF8         	movff	??_chkisr+12,tblptru
 11420  001AA2  C00E  FFF7         	movff	??_chkisr+11,tblptrh
 11421  001AA6  C00D  FFF6         	movff	??_chkisr+10,tblptrl
 11422  001AAA  C00C  FFF4         	movff	??_chkisr+9,prodh
 11423  001AAE  C00B  FFF3         	movff	??_chkisr+8,prodl
 11424  001AB2  C00A  FFDA         	movff	??_chkisr+7,fsr2h
 11425  001AB6  C009  FFD9         	movff	??_chkisr+6,fsr2l
 11426  001ABA  C008  FFE2         	movff	??_chkisr+5,fsr1h
 11427  001ABE  C007  FFE1         	movff	??_chkisr+4,fsr1l
 11428  001AC2  C006  FFEA         	movff	??_chkisr+3,fsr0h
 11429  001AC6  C005  FFE9         	movff	??_chkisr+2,fsr0l
 11430  001ACA  C004  FFFB         	movff	??_chkisr+1,pclatu
 11431  001ACE  C003  FFFA         	movff	??_chkisr,pclath
 11432  001AD2  0011               	retfie		f
 11433  001AD4                     __end_of_chkisr:
 11434                           	opt stack 0
 11435                           pclatu	equ	0xFFB
 11436                           pclath	equ	0xFFA
 11437                           tblptru	equ	0xFF8
 11438                           tblptrh	equ	0xFF7
 11439                           tblptrl	equ	0xFF6
 11440                           tablat	equ	0xFF5
 11441                           prodh	equ	0xFF4
 11442                           prodl	equ	0xFF3
 11443                           intcon	equ	0xFF2
 11444                           intcon2	equ	0xFF1
 11445                           postinc0	equ	0xFEE
 11446                           fsr0h	equ	0xFEA
 11447                           fsr0l	equ	0xFE9
 11448                           wreg	equ	0xFE8
 11449                           postdec1	equ	0xFE5
 11450                           fsr1h	equ	0xFE2
 11451                           fsr1l	equ	0xFE1
 11452                           indf2	equ	0xFDF
 11453                           postinc2	equ	0xFDE
 11454                           postdec2	equ	0xFDD
 11455                           fsr2h	equ	0xFDA
 11456                           fsr2l	equ	0xFD9
 11457                           status	equ	0xFD8
 11458                           
 11459 ;; *************** function _TIMER1_isr *****************
 11460 ;; Defined at:
 11461 ;;		line 33 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/Interrupt.c"
 11462 ;; Parameters:    Size  Location     Type
 11463 ;;		None
 11464 ;; Auto vars:     Size  Location     Type
 11465 ;;		None
 11466 ;; Return value:  Size  Location     Type
 11467 ;;		None               void
 11468 ;; Registers used:
 11469 ;;		wreg, status,2
 11470 ;; Tracked objects:
 11471 ;;		On entry : 0/0
 11472 ;;		On exit  : 0/0
 11473 ;;		Unchanged: 0/0
 11474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11479 ;;Total ram usage:        0 bytes
 11480 ;; Hardware stack levels used:    1
 11481 ;; This function calls:
 11482 ;;		Nothing
 11483 ;; This function is called by:
 11484 ;;		_chkisr
 11485 ;; This function uses a non-reentrant model
 11486 ;;
 11487                           
 11488                           	psect	text70
 11489  0022E2                     __ptext70:
 11490                           	opt stack 0
 11491  0022E2                     _TIMER1_isr:
 11492                           	opt stack 21
 11493                           
 11494                           ;Interrupt.c: 35: Nec_state = 0;
 11495                           
 11496                           ;incstack = 0
 11497  0022E2  0E00               	movlw	0
 11498  0022E4  6E52               	movwf	_Nec_state,c
 11499                           
 11500                           ;Interrupt.c: 36: INTCON2bits.INTEDG0 = 0;
 11501  0022E6  9CF1               	bcf	intcon2,6,c	;volatile
 11502                           
 11503                           ;Interrupt.c: 37: T1CONbits.TMR1ON = 0;
 11504  0022E8  90CD               	bcf	4045,0,c	;volatile
 11505                           
 11506                           ;Interrupt.c: 38: PIR1bits.TMR1IF = 0;
 11507  0022EA  909E               	bcf	3998,0,c	;volatile
 11508  0022EC  0012               	return		;funcret
 11509  0022EE                     __end_of_TIMER1_isr:
 11510                           	opt stack 0
 11511                           pclatu	equ	0xFFB
 11512                           pclath	equ	0xFFA
 11513                           tblptru	equ	0xFF8
 11514                           tblptrh	equ	0xFF7
 11515                           tblptrl	equ	0xFF6
 11516                           tablat	equ	0xFF5
 11517                           prodh	equ	0xFF4
 11518                           prodl	equ	0xFF3
 11519                           intcon	equ	0xFF2
 11520                           intcon2	equ	0xFF1
 11521                           postinc0	equ	0xFEE
 11522                           fsr0h	equ	0xFEA
 11523                           fsr0l	equ	0xFE9
 11524                           wreg	equ	0xFE8
 11525                           postdec1	equ	0xFE5
 11526                           fsr1h	equ	0xFE2
 11527                           fsr1l	equ	0xFE1
 11528                           indf2	equ	0xFDF
 11529                           postinc2	equ	0xFDE
 11530                           postdec2	equ	0xFDD
 11531                           fsr2h	equ	0xFDA
 11532                           fsr2l	equ	0xFD9
 11533                           status	equ	0xFD8
 11534                           
 11535 ;; *************** function _INT0_isr *****************
 11536 ;; Defined at:
 11537 ;;		line 47 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/Interrupt.c"
 11538 ;; Parameters:    Size  Location     Type
 11539 ;;		None
 11540 ;; Auto vars:     Size  Location     Type
 11541 ;;		None
 11542 ;; Return value:  Size  Location     Type
 11543 ;;		None               void
 11544 ;; Registers used:
 11545 ;;		wreg, status,2, status,0, cstack
 11546 ;; Tracked objects:
 11547 ;;		On entry : 0/0
 11548 ;;		On exit  : 0/0
 11549 ;;		Unchanged: 0/0
 11550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11553 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11554 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11555 ;;Total ram usage:        2 bytes
 11556 ;; Hardware stack levels used:    1
 11557 ;; Hardware stack levels required when called:    1
 11558 ;; This function calls:
 11559 ;;		_force_nec_state0
 11560 ;; This function is called by:
 11561 ;;		_chkisr
 11562 ;; This function uses a non-reentrant model
 11563 ;;
 11564                           
 11565                           	psect	text71
 11566  000D40                     __ptext71:
 11567                           	opt stack 0
 11568  000D40                     _INT0_isr:
 11569                           	opt stack 20
 11570                           
 11571                           ;Interrupt.c: 49: INTCONbits.INT0IF = 0;
 11572                           
 11573                           ;incstack = 0
 11574  000D40  92F2               	bcf	intcon,1,c	;volatile
 11575                           
 11576                           ;Interrupt.c: 50: if (Nec_state != 0)
 11577  000D42  5052               	movf	_Nec_state,w,c
 11578  000D44  B4D8               	btfsc	status,2,c
 11579  000D46  D09D               	goto	i2l4707
 11580                           
 11581                           ;Interrupt.c: 51: {
 11582                           ;Interrupt.c: 52: Time_Elapsed = (TMR1H << 8) | TMR1L;
 11583  000D48  50CE               	movf	4046,w,c	;volatile
 11584  000D4A  CFCF F001          	movff	4047,??_INT0_isr	;volatile
 11585  000D4E  6A02               	clrf	(??_INT0_isr+1)& (0+255),c
 11586  000D50  C001  F002         	movff	??_INT0_isr,??_INT0_isr+1
 11587  000D54  6A01               	clrf	??_INT0_isr,c
 11588  000D56  1001               	iorwf	??_INT0_isr,w,c
 11589  000D58  6E4A               	movwf	_Time_Elapsed,c
 11590  000D5A  5002               	movf	??_INT0_isr+1,w,c
 11591  000D5C  6E4B               	movwf	_Time_Elapsed+1,c
 11592                           
 11593                           ;Interrupt.c: 53: TMR1H = 0;
 11594  000D5E  0E00               	movlw	0
 11595  000D60  6ECF               	movwf	4047,c	;volatile
 11596                           
 11597                           ;Interrupt.c: 54: TMR1L = 0;
 11598  000D62  0E00               	movlw	0
 11599  000D64  6ECE               	movwf	4046,c	;volatile
 11600                           
 11601                           ;Interrupt.c: 55: }
 11602                           ;Interrupt.c: 57: switch(Nec_state)
 11603  000D66  D08D               	goto	i2l4707
 11604  000D68                     i2l4639:
 11605                           
 11606                           ;Interrupt.c: 60: {
 11607                           ;Interrupt.c: 62: TMR1H = 0;
 11608  000D68  0E00               	movlw	0
 11609  000D6A  6ECF               	movwf	4047,c	;volatile
 11610                           
 11611                           ;Interrupt.c: 63: TMR1L = 0;
 11612  000D6C  0E00               	movlw	0
 11613  000D6E  6ECE               	movwf	4046,c	;volatile
 11614                           
 11615                           ;Interrupt.c: 64: PIR1bits.TMR1IF = 0;
 11616  000D70  909E               	bcf	3998,0,c	;volatile
 11617                           
 11618                           ;Interrupt.c: 65: T1CON= 0x90;
 11619  000D72  0E90               	movlw	144
 11620  000D74  6ECD               	movwf	4045,c	;volatile
 11621                           
 11622                           ;Interrupt.c: 66: T1CONbits.TMR1ON = 1;
 11623  000D76  80CD               	bsf	4045,0,c	;volatile
 11624                           
 11625                           ;Interrupt.c: 67: bit_count = 0;
 11626  000D78  0E00               	movlw	0
 11627  000D7A  6E58               	movwf	_bit_count,c
 11628                           
 11629                           ;Interrupt.c: 68: Nec_code = 0;
 11630  000D7C  0E00               	movlw	0
 11631  000D7E  6E42               	movwf	_Nec_code,c
 11632  000D80  0E00               	movlw	0
 11633  000D82  6E43               	movwf	_Nec_code+1,c
 11634  000D84  0E00               	movlw	0
 11635  000D86  6E44               	movwf	_Nec_code+2,c
 11636  000D88  0E00               	movlw	0
 11637  000D8A  6E45               	movwf	_Nec_code+3,c
 11638                           
 11639                           ;Interrupt.c: 69: Nec_state = 1;
 11640  000D8C  0E01               	movlw	1
 11641  000D8E  6E52               	movwf	_Nec_state,c
 11642  000D90  D076               	goto	i2l4701
 11643                           
 11644                           ;Interrupt.c: 71: return;
 11645                           
 11646                           ;Interrupt.c: 70: INTCON2bits.INTEDG0 = 1;
 11647  000D92  D088               	goto	i2l544
 11648  000D94                     i2l4649:
 11649                           
 11650                           ;Interrupt.c: 75: {
 11651                           ;Interrupt.c: 76: if ((Time_Elapsed < 9500) && (Time_Elapsed > 8500)){
 11652  000D94  0E1C               	movlw	28
 11653  000D96  5C4A               	subwf	_Time_Elapsed,w,c
 11654  000D98  0E25               	movlw	37
 11655  000D9A  584B               	subwfb	_Time_Elapsed+1,w,c
 11656  000D9C  B0D8               	btfsc	status,0,c
 11657  000D9E  D009               	goto	i2l4655
 11658  000DA0  0E35               	movlw	53
 11659  000DA2  5C4A               	subwf	_Time_Elapsed,w,c
 11660  000DA4  0E21               	movlw	33
 11661  000DA6  584B               	subwfb	_Time_Elapsed+1,w,c
 11662  000DA8  A0D8               	btfss	status,0,c
 11663  000DAA  D003               	goto	i2l4655
 11664                           
 11665                           ;Interrupt.c: 77: Nec_state = 2;
 11666  000DAC  0E02               	movlw	2
 11667  000DAE  6E52               	movwf	_Nec_state,c
 11668                           
 11669                           ;Interrupt.c: 78: }
 11670  000DB0  D02A               	goto	i2l4681
 11671  000DB2                     i2l4655:
 11672                           
 11673                           ;Interrupt.c: 79: else {
 11674                           ;Interrupt.c: 80: force_nec_state0();
 11675  000DB2  EC96  F011         	call	_force_nec_state0	;wreg free
 11676  000DB6  D027               	goto	i2l4681
 11677  000DB8  D026               	goto	i2l4681
 11678                           
 11679                           ;Interrupt.c: 83: return;
 11680                           
 11681                           ;Interrupt.c: 81: }
 11682                           ;Interrupt.c: 82: INTCON2bits.INTEDG0 = 0;
 11683  000DBA  D074               	goto	i2l544
 11684  000DBC                     i2l4661:
 11685                           
 11686                           ;Interrupt.c: 87: {
 11687                           ;Interrupt.c: 88: if ((Time_Elapsed < 5000) && (Time_Elapsed > 4000)){
 11688  000DBC  0E88               	movlw	136
 11689  000DBE  5C4A               	subwf	_Time_Elapsed,w,c
 11690  000DC0  0E13               	movlw	19
 11691  000DC2  584B               	subwfb	_Time_Elapsed+1,w,c
 11692  000DC4  B0D8               	btfsc	status,0,c
 11693  000DC6  D009               	goto	i2l4667
 11694  000DC8  0EA1               	movlw	161
 11695  000DCA  5C4A               	subwf	_Time_Elapsed,w,c
 11696  000DCC  0E0F               	movlw	15
 11697  000DCE  584B               	subwfb	_Time_Elapsed+1,w,c
 11698  000DD0  A0D8               	btfss	status,0,c
 11699  000DD2  D003               	goto	i2l4667
 11700  000DD4                     
 11701                           ;Interrupt.c: 89: Nec_state = 3;
 11702  000DD4  0E03               	movlw	3
 11703  000DD6  6E52               	movwf	_Nec_state,c
 11704                           
 11705                           ;Interrupt.c: 90: }
 11706  000DD8  D052               	goto	i2l4701
 11707  000DDA                     i2l4667:
 11708                           
 11709                           ;Interrupt.c: 91: else {
 11710                           ;Interrupt.c: 92: force_nec_state0();
 11711  000DDA  EC96  F011         	call	_force_nec_state0	;wreg free
 11712  000DDE  D04F               	goto	i2l4701
 11713  000DE0  D04E               	goto	i2l4701
 11714                           
 11715                           ;Interrupt.c: 95: return;
 11716                           
 11717                           ;Interrupt.c: 93: }
 11718                           ;Interrupt.c: 94: INTCON2bits.INTEDG0 = 1;
 11719  000DE2  D060               	goto	i2l544
 11720  000DE4                     i2l4673:
 11721                           
 11722                           ;Interrupt.c: 99: {
 11723                           ;Interrupt.c: 100: if ((Time_Elapsed < 700) && (Time_Elapsed > 400)){
 11724  000DE4  0EBC               	movlw	188
 11725  000DE6  5C4A               	subwf	_Time_Elapsed,w,c
 11726  000DE8  0E02               	movlw	2
 11727  000DEA  584B               	subwfb	_Time_Elapsed+1,w,c
 11728  000DEC  B0D8               	btfsc	status,0,c
 11729  000DEE  D008               	goto	i2l4679
 11730  000DF0  0E91               	movlw	145
 11731  000DF2  5C4A               	subwf	_Time_Elapsed,w,c
 11732  000DF4  0E01               	movlw	1
 11733  000DF6  584B               	subwfb	_Time_Elapsed+1,w,c
 11734  000DF8  A0D8               	btfss	status,0,c
 11735  000DFA  D002               	goto	i2l4679
 11736                           
 11737                           ;Interrupt.c: 101: Nec_state = 4;
 11738  000DFC  0E04               	movlw	4
 11739  000DFE  D7D7               	goto	L4
 11740  000E00                     i2l4679:
 11741                           
 11742                           ;Interrupt.c: 103: else {
 11743                           ;Interrupt.c: 104: force_nec_state0();
 11744  000E00  EC96  F011         	call	_force_nec_state0	;wreg free
 11745  000E04  D000               	goto	i2l4681
 11746  000E06                     i2l4681:
 11747                           
 11748                           ;Interrupt.c: 105: }
 11749                           ;Interrupt.c: 106: INTCON2bits.INTEDG0 = 0;
 11750  000E06  9CF1               	bcf	intcon2,6,c	;volatile
 11751                           
 11752                           ;Interrupt.c: 107: return;
 11753  000E08  D04D               	goto	i2l544
 11754  000E0A                     i2l4685:
 11755                           
 11756                           ;Interrupt.c: 111: {
 11757                           ;Interrupt.c: 112: if ((Time_Elapsed < 1800) && (Time_Elapsed > 400)){
 11758  000E0A  0E08               	movlw	8
 11759  000E0C  5C4A               	subwf	_Time_Elapsed,w,c
 11760  000E0E  0E07               	movlw	7
 11761  000E10  584B               	subwfb	_Time_Elapsed+1,w,c
 11762  000E12  B0D8               	btfsc	status,0,c
 11763  000E14  D031               	goto	i2l4699
 11764  000E16  0E91               	movlw	145
 11765  000E18  5C4A               	subwf	_Time_Elapsed,w,c
 11766  000E1A  0E01               	movlw	1
 11767  000E1C  584B               	subwfb	_Time_Elapsed+1,w,c
 11768  000E1E  A0D8               	btfss	status,0,c
 11769  000E20  D02B               	goto	i2l4699
 11770                           
 11771                           ;Interrupt.c: 113: Nec_code = Nec_code << 1;
 11772  000E22  90D8               	bcf	status,0,c
 11773  000E24  3442               	rlcf	_Nec_code,w,c
 11774  000E26  6E42               	movwf	_Nec_code,c
 11775  000E28  3443               	rlcf	_Nec_code+1,w,c
 11776  000E2A  6E43               	movwf	_Nec_code+1,c
 11777  000E2C  3444               	rlcf	_Nec_code+2,w,c
 11778  000E2E  6E44               	movwf	_Nec_code+2,c
 11779  000E30  3445               	rlcf	_Nec_code+3,w,c
 11780  000E32  6E45               	movwf	_Nec_code+3,c
 11781                           
 11782                           ;Interrupt.c: 115: if (Time_Elapsed > 1000){
 11783  000E34  0EE9               	movlw	233
 11784  000E36  5C4A               	subwf	_Time_Elapsed,w,c
 11785  000E38  0E03               	movlw	3
 11786  000E3A  584B               	subwfb	_Time_Elapsed+1,w,c
 11787  000E3C  A0D8               	btfss	status,0,c
 11788  000E3E  D00C               	goto	i2l556
 11789                           
 11790                           ;Interrupt.c: 116: Nec_code = Nec_code + 1;
 11791  000E40  0E01               	movlw	1
 11792  000E42  2442               	addwf	_Nec_code,w,c
 11793  000E44  6E42               	movwf	_Nec_code,c
 11794  000E46  0E00               	movlw	0
 11795  000E48  2043               	addwfc	_Nec_code+1,w,c
 11796  000E4A  6E43               	movwf	_Nec_code+1,c
 11797  000E4C  0E00               	movlw	0
 11798  000E4E  2044               	addwfc	_Nec_code+2,w,c
 11799  000E50  6E44               	movwf	_Nec_code+2,c
 11800  000E52  0E00               	movlw	0
 11801  000E54  2045               	addwfc	_Nec_code+3,w,c
 11802  000E56  6E45               	movwf	_Nec_code+3,c
 11803  000E58                     i2l556:
 11804                           
 11805                           ;Interrupt.c: 117: }
 11806                           ;Interrupt.c: 119: bit_count = bit_count + 1;
 11807  000E58  2858               	incf	_bit_count,w,c
 11808  000E5A  6E58               	movwf	_bit_count,c
 11809                           
 11810                           ;Interrupt.c: 121: if (bit_count > 31){
 11811  000E5C  0E1F               	movlw	31
 11812  000E5E  6458               	cpfsgt	_bit_count,c
 11813  000E60  D7B9               	goto	L5
 11814                           
 11815                           ;Interrupt.c: 122: nec_ok = 1;
 11816  000E62  0E00               	movlw	0
 11817  000E64  0100               	movlb	0	; () banked
 11818  000E66  6FFD               	movwf	(_nec_ok+1)& (0+255),b
 11819  000E68  0E01               	movlw	1
 11820  000E6A  6FFC               	movwf	_nec_ok& (0+255),b
 11821                           
 11822                           ; BSR set to: 0
 11823                           ;Interrupt.c: 123: Nec_code1 = (char) ((Nec_code >> 8));
 11824  000E6C  C043  F051         	movff	_Nec_code+1,_Nec_code1
 11825                           
 11826                           ; BSR set to: 0
 11827                           ;Interrupt.c: 124: INTCONbits.INT0IE = 0;
 11828  000E70  98F2               	bcf	intcon,4,c	;volatile
 11829                           
 11830                           ;Interrupt.c: 125: Nec_state = 0;
 11831  000E72  0E00               	movlw	0
 11832  000E74  6E52               	movwf	_Nec_state,c
 11833  000E76  D7AE               	goto	L5
 11834  000E78                     i2l4699:
 11835                           
 11836                           ;Interrupt.c: 129: else {
 11837                           ;Interrupt.c: 130: force_nec_state0();
 11838  000E78  EC96  F011         	call	_force_nec_state0	;wreg free
 11839  000E7C  D000               	goto	i2l4701
 11840  000E7E                     i2l4701:
 11841                           
 11842                           ;Interrupt.c: 131: }
 11843                           ;Interrupt.c: 132: INTCON2bits.INTEDG0 = 1;
 11844  000E7E  8CF1               	bsf	intcon2,6,c	;volatile
 11845                           
 11846                           ;Interrupt.c: 134: }
 11847                           ;Interrupt.c: 135: }
 11848                           
 11849                           ;Interrupt.c: 133: return;
 11850  000E80  D011               	goto	i2l544
 11851  000E82                     i2l4707:
 11852  000E82  5052               	movf	_Nec_state,w,c
 11853                           
 11854                           ; Switch size 1, requested type "space"
 11855                           ; Number of cases is 5, Range of values is 0 to 4
 11856                           ; switch strategies available:
 11857                           ; Name         Instructions Cycles
 11858                           ; simple_byte           16     9 (average)
 11859                           ;	Chosen strategy is simple_byte
 11860  000E84  0A00               	xorlw	0	; case 0
 11861  000E86  B4D8               	btfsc	status,2,c
 11862  000E88  D76F               	goto	i2l4639
 11863  000E8A  0A01               	xorlw	1	; case 1
 11864  000E8C  B4D8               	btfsc	status,2,c
 11865  000E8E  D782               	goto	i2l4649
 11866  000E90  0A03               	xorlw	3	; case 2
 11867  000E92  B4D8               	btfsc	status,2,c
 11868  000E94  D793               	goto	i2l4661
 11869  000E96  0A01               	xorlw	1	; case 3
 11870  000E98  B4D8               	btfsc	status,2,c
 11871  000E9A  D7A4               	goto	i2l4673
 11872  000E9C  0A07               	xorlw	7	; case 4
 11873  000E9E  B4D8               	btfsc	status,2,c
 11874  000EA0  D7B4               	goto	i2l4685
 11875  000EA2  D000               	goto	i2l544
 11876  000EA4                     i2l544:
 11877  000EA4  0012               	return		;funcret
 11878  000EA6                     __end_of_INT0_isr:
 11879                           	opt stack 0
 11880                           pclatu	equ	0xFFB
 11881                           pclath	equ	0xFFA
 11882                           tblptru	equ	0xFF8
 11883                           tblptrh	equ	0xFF7
 11884                           tblptrl	equ	0xFF6
 11885                           tablat	equ	0xFF5
 11886                           prodh	equ	0xFF4
 11887                           prodl	equ	0xFF3
 11888                           intcon	equ	0xFF2
 11889                           intcon2	equ	0xFF1
 11890                           postinc0	equ	0xFEE
 11891                           fsr0h	equ	0xFEA
 11892                           fsr0l	equ	0xFE9
 11893                           wreg	equ	0xFE8
 11894                           postdec1	equ	0xFE5
 11895                           fsr1h	equ	0xFE2
 11896                           fsr1l	equ	0xFE1
 11897                           indf2	equ	0xFDF
 11898                           postinc2	equ	0xFDE
 11899                           postdec2	equ	0xFDD
 11900                           fsr2h	equ	0xFDA
 11901                           fsr2l	equ	0xFD9
 11902                           status	equ	0xFD8
 11903                           
 11904 ;; *************** function _force_nec_state0 *****************
 11905 ;; Defined at:
 11906 ;;		line 41 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab12.X/Interrupt.c"
 11907 ;; Parameters:    Size  Location     Type
 11908 ;;		None
 11909 ;; Auto vars:     Size  Location     Type
 11910 ;;		None
 11911 ;; Return value:  Size  Location     Type
 11912 ;;		None               void
 11913 ;; Registers used:
 11914 ;;		wreg, status,2
 11915 ;; Tracked objects:
 11916 ;;		On entry : 0/0
 11917 ;;		On exit  : 0/0
 11918 ;;		Unchanged: 0/0
 11919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11924 ;;Total ram usage:        0 bytes
 11925 ;; Hardware stack levels used:    1
 11926 ;; This function calls:
 11927 ;;		Nothing
 11928 ;; This function is called by:
 11929 ;;		_INT0_isr
 11930 ;; This function uses a non-reentrant model
 11931 ;;
 11932                           
 11933                           	psect	text72
 11934  00232C                     __ptext72:
 11935                           	opt stack 0
 11936  00232C                     _force_nec_state0:
 11937                           	opt stack 20
 11938                           
 11939                           ;Interrupt.c: 43: Nec_state=0;
 11940                           
 11941                           ;incstack = 0
 11942  00232C  0E00               	movlw	0
 11943  00232E  6E52               	movwf	_Nec_state,c
 11944                           
 11945                           ;Interrupt.c: 44: T1CONbits.TMR1ON = 0;
 11946  002330  90CD               	bcf	4045,0,c	;volatile
 11947  002332  0012               	return		;funcret
 11948  002334                     __end_of_force_nec_state0:
 11949                           	opt stack 0
 11950                           pclatu	equ	0xFFB
 11951                           pclath	equ	0xFFA
 11952                           tblptru	equ	0xFF8
 11953                           tblptrh	equ	0xFF7
 11954                           tblptrl	equ	0xFF6
 11955                           tablat	equ	0xFF5
 11956                           prodh	equ	0xFF4
 11957                           prodl	equ	0xFF3
 11958                           intcon	equ	0xFF2
 11959                           intcon2	equ	0xFF1
 11960                           postinc0	equ	0xFEE
 11961                           fsr0h	equ	0xFEA
 11962                           fsr0l	equ	0xFE9
 11963                           wreg	equ	0xFE8
 11964                           postdec1	equ	0xFE5
 11965                           fsr1h	equ	0xFE2
 11966                           fsr1l	equ	0xFE1
 11967                           indf2	equ	0xFDF
 11968                           postinc2	equ	0xFDE
 11969                           postdec2	equ	0xFDD
 11970                           fsr2h	equ	0xFDA
 11971                           fsr2l	equ	0xFD9
 11972                           status	equ	0xFD8
 11973                           pclatu	equ	0xFFB
 11974                           pclath	equ	0xFFA
 11975                           tblptru	equ	0xFF8
 11976                           tblptrh	equ	0xFF7
 11977                           tblptrl	equ	0xFF6
 11978                           tablat	equ	0xFF5
 11979                           prodh	equ	0xFF4
 11980                           prodl	equ	0xFF3
 11981                           intcon	equ	0xFF2
 11982                           intcon2	equ	0xFF1
 11983                           postinc0	equ	0xFEE
 11984                           fsr0h	equ	0xFEA
 11985                           fsr0l	equ	0xFE9
 11986                           wreg	equ	0xFE8
 11987                           postdec1	equ	0xFE5
 11988                           fsr1h	equ	0xFE2
 11989                           fsr1l	equ	0xFE1
 11990                           indf2	equ	0xFDF
 11991                           postinc2	equ	0xFDE
 11992                           postdec2	equ	0xFDD
 11993                           fsr2h	equ	0xFDA
 11994                           fsr2l	equ	0xFD9
 11995                           status	equ	0xFD8
 11996                           
 11997                           	psect	rparam
 11998  0000                     pclatu	equ	0xFFB
 11999                           pclath	equ	0xFFA
 12000                           tblptru	equ	0xFF8
 12001                           tblptrh	equ	0xFF7
 12002                           tblptrl	equ	0xFF6
 12003                           tablat	equ	0xFF5
 12004                           prodh	equ	0xFF4
 12005                           prodl	equ	0xFF3
 12006                           intcon	equ	0xFF2
 12007                           intcon2	equ	0xFF1
 12008                           postinc0	equ	0xFEE
 12009                           fsr0h	equ	0xFEA
 12010                           fsr0l	equ	0xFE9
 12011                           wreg	equ	0xFE8
 12012                           postdec1	equ	0xFE5
 12013                           fsr1h	equ	0xFE2
 12014                           fsr1l	equ	0xFE1
 12015                           indf2	equ	0xFDF
 12016                           postinc2	equ	0xFDE
 12017                           postdec2	equ	0xFDD
 12018                           fsr2h	equ	0xFDA
 12019                           fsr2l	equ	0xFD9
 12020                           status	equ	0xFD8


Data Sizes:
    Strings     261
    Constant    493
    Data        143
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     65     111
    BANK0           128     13     128
    BANK1           256      2      35
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    nbr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 33
		 -> NULL(NULL[0]), RPM_Txt(BANK0[5]), DC_Txt(BANK0[4]), Fan_SW_Txt(BANK0[4]), 
		 -> date(BANK0[9]), time(BANK0[9]), tempF(BANK0[4]), tempC(BANK0[4]), 
		 -> buffer(BANK1[33]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 33
		 -> NULL(NULL[0]), RPM_Txt(BANK0[5]), DC_Txt(BANK0[4]), Fan_SW_Txt(BANK0[4]), 
		 -> date(BANK0[9]), time(BANK0[9]), tempF(BANK0[4]), tempC(BANK0[4]), 
		 -> buffer(BANK1[33]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[3]), 
		 -> STR_7(CODE[6]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[2]), 
		 -> STR_3(CODE[3]), STR_2(CODE[13]), STR_1(CODE[22]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 33
		 -> NULL(NULL[0]), Fan_SW_Txt(BANK0[4]), buffer(BANK1[33]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 33
		 -> NULL(NULL[0]), Fan_SW_Txt(BANK0[4]), buffer(BANK1[33]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_20(CODE[22]), STR_19(CODE[21]), STR_18(CODE[15]), STR_17(CODE[22]), 
		 -> STR_16(CODE[16]), STR_15(CODE[20]), STR_14(CODE[21]), STR_13(CODE[30]), 
		 -> STR_12(CODE[8]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    drawtext@_text	PTR unsigned char  size(2) Largest target is 33
		 -> NULL(NULL[0]), RPM_Txt(BANK0[5]), DC_Txt(BANK0[4]), Fan_SW_Txt(BANK0[4]), 
		 -> date(BANK0[9]), time(BANK0[9]), tempF(BANK0[4]), tempC(BANK0[4]), 
		 -> buffer(BANK1[33]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 33
		 -> NULL(NULL[0]), Fan_SW_Txt(BANK0[4]), buffer(BANK1[33]), 

    txt	PTR unsigned char  size(2) Largest target is 33
		 -> NULL(NULL[0]), buffer(BANK1[33]), 


Critical Paths under _main in COMRAM

    _printf->___lwmod
    ___lwmod->___lwdiv
    _get_RPM->___awdiv
    _Update_Screen->_drawtext
    ___awmod->___awdiv
    ___awdiv->___wmul
    _Turn_On_Fan->_do_update_pwm
    _Initialize_Screen->_drawtext
    _fillScreen->_fillRectangle
    _fillRectangle->_setAddrWindow
    _drawtext->_drawChar
    _drawChar->_fillRect
    _fillRect->_drawFastVLine
    _drawFastVLine->_setAddrWindow
    _drawCircle->_drawPixel
    _drawPixel->_setAddrWindow
    _setAddrWindow->_write_command
    _setAddrWindow->_write_data
    _Rcmd3->_delay_ms
    _Rcmd2red->_write_command
    _Rcmd2red->_write_data
    _Rcmd1->_delay_ms
    _write_data->_spiwrite
    _write_command->_spiwrite
    _LCD_Reset->_delay_ms
    _delay_ms->___wmul
    _Increase_Speed->_do_update_pwm
    _Do_Init->_DS1621_Init
    _init_UART->_OpenUSART
    _DS1621_Init->_I2C_Write_Cmd_Write_Data
    _I2C_Write_Cmd_Write_Data->_I2C_Write
    _I2C_Write_Cmd_Only->_I2C_Write
    _Decrease_Speed->_do_update_pwm
    _Do_Beep->_do_update_pwm
    _do_update_pwm->___ftdiv
    ___lbtoft->___ftpack
    ___ftmul->___lbtoft
    ___ftdiv->___ftmul
    _DS3231_Setup_Time->_I2C_Write
    _DS3231_Read_Time->_I2C_Read
    _DS1621_Read_Temp->_I2C_Read

Critical Paths under _chkisr in COMRAM

    _chkisr->_INT0_isr

Critical Paths under _main in BANK0

    _main->_Update_Screen
    _Update_Screen->_drawtext
    _Turn_On_Fan->_do_update_pwm
    _Initialize_Screen->_drawtext
    _Increase_Speed->_do_update_pwm
    _Decrease_Speed->_do_update_pwm
    _Do_Beep->_do_update_pwm

Critical Paths under _chkisr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _chkisr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _chkisr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _chkisr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _chkisr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _chkisr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _chkisr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _chkisr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _chkisr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _chkisr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _chkisr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _chkisr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _chkisr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _chkisr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _chkisr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _chkisr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  116861
                                             64 COMRAM     1     1      0
                                              0 BANK1      2     2      0
                   _DS1621_Read_Temp
                   _DS3231_Read_Time
                  _DS3231_Setup_Time
                     _Decrease_Speed
                            _Do_Beep
                            _Do_Init
                     _Increase_Speed
                  _Initialize_Screen
                         _Toggle_Fan
                      _Update_Screen
                            ___awdiv
                             ___wmul
                            _get_RPM
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              37    23     14    4041
                                             28 COMRAM    28    14     14
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      31
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             16 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     362
                                             23 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     501
                                             16 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _get_RPM                                              4     2      2    2921
                                             30 COMRAM     4     2      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _Update_Screen                                        4     4      0   22093
                                              9 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                           _drawtext
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1603
                                             30 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1875
                                             22 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Toggle_Fan                                           0     0      0    8034
                       _Turn_Off_Fan
                        _Turn_On_Fan
 ---------------------------------------------------------------------------------
 (2) _Turn_On_Fan                                          0     0      0    8034
                      _do_update_pwm
 ---------------------------------------------------------------------------------
 (2) _Turn_Off_Fan                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Initialize_Screen                                    0     0      0   34162
                          _LCD_Reset
            _TFT_GreenTab_Initialize
                         _drawCircle
                           _drawtext
                         _fillScreen
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4    1539
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _fillScreen                                           2     0      2    2192
                                             35 COMRAM     2     0      2
                      _fillRectangle
 ---------------------------------------------------------------------------------
 (3) _fillRectangle                                       12     7      5    2096
                                             23 COMRAM    12     7      5
                      _setAddrWindow
                           _spiwrite
 ---------------------------------------------------------------------------------
 (2) _drawtext                                            17     9      8   17011
                                             56 COMRAM     8     0      8
                                              0 BANK0      9     9      0
                           _drawChar
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     195
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _drawChar                                            11     4      7   10904
                                             45 COMRAM    11     4      7
                             ___wmul
                          _drawPixel
                           _fillRect
 ---------------------------------------------------------------------------------
 (4) _fillRect                                            11     6      5    3876
                                             34 COMRAM    11     6      5
                      _drawFastVLine
 ---------------------------------------------------------------------------------
 (5) _drawFastVLine                                       11     7      4    3102
                                             23 COMRAM    11     7      4
                      _setAddrWindow
                           _spiwrite
 ---------------------------------------------------------------------------------
 (2) _drawCircle                                          20    12      8    6744
                                             27 COMRAM    20    12      8
                          _drawPixel
 ---------------------------------------------------------------------------------
 (4) _drawPixel                                            4     1      3    4207
                                             23 COMRAM     4     1      3
                      _setAddrWindow
                         _write_data
 ---------------------------------------------------------------------------------
 (6) _setAddrWindow                                        4     1      3    1034
                                             19 COMRAM     4     1      3
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (2) _TFT_GreenTab_Initialize                              0     0      0    4624
                              _Rcmd1
                           _Rcmd2red
                              _Rcmd3
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd3                                                0     0      0    2182
                           _delay_ms
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd2red                                             0     0      0     130
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd1                                                0     0      0    2182
                           _delay_ms
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (7) _write_data                                           1     1      0      65
                                             18 COMRAM     1     1      0
                           _spiwrite
 ---------------------------------------------------------------------------------
 (7) _write_command                                        1     1      0      65
                                             18 COMRAM     1     1      0
                           _spiwrite
 ---------------------------------------------------------------------------------
 (6) _spiwrite                                             2     2      0      34
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Reset                                            0     0      0    2052
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             6     4      2    2052
                                             22 COMRAM     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1012
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Increase_Speed                                       0     0      0   16136
                            _Do_Beep
                      _do_update_pwm
 ---------------------------------------------------------------------------------
 (1) _Do_Init                                              0     0      0    1121
                        _DS1621_Init
                           _I2C_Init
                     _init_INTERRUPT
                          _init_UART
 ---------------------------------------------------------------------------------
 (2) _init_UART                                            0     0      0     375
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     1      2     375
                                             16 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _init_INTERRUPT                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             4     0      4      65
                                             16 COMRAM     4     0      4
                         _i2cHighScl
                         _i2cHighSda
 ---------------------------------------------------------------------------------
 (2) _DS1621_Init                                          1     1      0     681
                                             21 COMRAM     1     1      0
                 _I2C_Write_Cmd_Only
           _I2C_Write_Cmd_Write_Data
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Cmd_Write_Data                             3     1      2     356
                                             18 COMRAM     3     1      2
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Cmd_Only                                   2     1      1     260
                                             18 COMRAM     2     1      1
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Decrease_Speed                                       0     0      0   16136
                            _Do_Beep
                      _do_update_pwm
 ---------------------------------------------------------------------------------
 (2) _Do_Beep                                              0     0      0    8102
                    _Activate_Buzzer
                  _Deactivate_Buzzer
                       _Wait_One_Sec
                      _do_update_pwm
 ---------------------------------------------------------------------------------
 (3) _do_update_pwm                                        9     9      0    8034
                                             58 COMRAM     3     3      0
                                              0 BANK0      6     6      0
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (4) ___lbtoft                                             4     1      3    2039
                                             24 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     436
                                             16 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    2716
                                             28 COMRAM    15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    2648
                                             43 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2008
                                             16 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _Wait_One_Sec                                         2     2      0      68
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Deactivate_Buzzer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Activate_Buzzer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DS3231_Setup_Time                                    2     2      0     201
                                             18 COMRAM     2     2      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _DS3231_Read_Time                                     2     2      0     430
                                             19 COMRAM     2     2      0
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _DS1621_Read_Temp                                     5     3      2     464
                                             19 COMRAM     5     3      2
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Write                                            2     2      0     133
                                             16 COMRAM     2     2      0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0     198
                                             16 COMRAM     3     3      0
                             _i2cAck
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                            _i2cNack
 ---------------------------------------------------------------------------------
 (3) _i2cNack                                              0     0      0       0
                         _i2cHighScl
                          _i2cLowScl
 ---------------------------------------------------------------------------------
 (3) _i2cAck                                               0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (2) _I2C_ReStart                                          0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (5) _i2cLowSda                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2cLowScl                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2cHighSda                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2cHighScl                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _chkisr                                              14    14      0       0
                                              2 COMRAM    14    14      0
                           _INT0_isr
                         _TIMER1_isr
 ---------------------------------------------------------------------------------
 (10) _TIMER1_isr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _INT0_isr                                            2     2      0       0
                                              0 COMRAM     2     2      0
                   _force_nec_state0
 ---------------------------------------------------------------------------------
 (11) _force_nec_state0                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS1621_Read_Temp
     _I2C_ReStart
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Read
       _i2cAck
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cNack
         _i2cHighScl
         _i2cLowScl
     _I2C_Start
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Stop
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Write
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
   _DS3231_Read_Time
     _I2C_ReStart
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Read
       _i2cAck
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cNack
         _i2cHighScl
         _i2cLowScl
     _I2C_Start
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Stop
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Write
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
   _DS3231_Setup_Time
     _I2C_Start
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Stop
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Write
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
   _Decrease_Speed
     _Do_Beep
       _Activate_Buzzer
       _Deactivate_Buzzer
       _Wait_One_Sec
       _do_update_pwm
         ___ftdiv
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
         ___lbtoft
           ___ftpack
     _do_update_pwm
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
       ___lbtoft
         ___ftpack
   _Do_Beep
     _Activate_Buzzer
     _Deactivate_Buzzer
     _Wait_One_Sec
     _do_update_pwm
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
       ___lbtoft
         ___ftpack
   _Do_Init
     _DS1621_Init
       _I2C_Write_Cmd_Only
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
       _I2C_Write_Cmd_Write_Data
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
     _I2C_Init
       _i2cHighScl
       _i2cHighSda
     _init_INTERRUPT
     _init_UART
       _OpenUSART
   _Increase_Speed
     _Do_Beep
       _Activate_Buzzer
       _Deactivate_Buzzer
       _Wait_One_Sec
       _do_update_pwm
         ___ftdiv
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
         ___lbtoft
           ___ftpack
     _do_update_pwm
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
       ___lbtoft
         ___ftpack
   _Initialize_Screen
     _LCD_Reset
       _delay_ms
         ___wmul
     _TFT_GreenTab_Initialize
       _Rcmd1
         _delay_ms
           ___wmul
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _Rcmd2red
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _Rcmd3
         _delay_ms
           ___wmul
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _write_command
         _spiwrite
       _write_data
         _spiwrite
     _drawCircle
       _drawPixel
         _setAddrWindow
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _write_data
           _spiwrite
     _drawtext
       _drawChar
         ___wmul
         _drawPixel
           _setAddrWindow
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _write_data
             _spiwrite
         _fillRect
           _drawFastVLine
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
       _strlen
     _fillScreen
       _fillRectangle
         _setAddrWindow
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _spiwrite
     _strcpy
   _Toggle_Fan
     _Turn_Off_Fan
     _Turn_On_Fan
       _do_update_pwm
         ___ftdiv
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
         ___lbtoft
           ___ftpack
   _Update_Screen
     ___awdiv
       ___wmul (ARG)
     ___awmod
       ___awdiv (ARG)
         ___wmul (ARG)
     _drawtext
       _drawChar
         ___wmul
         _drawPixel
           _setAddrWindow
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _write_data
             _spiwrite
         _fillRect
           _drawFastVLine
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
       _strlen
     _strcpy
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _get_RPM
     ___awdiv
       ___wmul (ARG)
     ___wmul
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
     _putch

 _chkisr (ROOT)
   _INT0_isr
     _force_nec_state0
   _TIMER1_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      2      23       7       13.7%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      D      80       5      100.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     41      6F       1       87.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     112      34        0.0%
DATA                 0      0     112       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun May 02 22:40:21 2021

                      drawCircle@f 002A                        drawCircle@r 0020  
                      drawCircle@x 002C                        drawCircle@y 002E  
               __size_of_I2C_Start 0012                        _SSPSTATbits 000FC7  
               __size_of_I2C_Write 003E                       drawCircle@x0 001C  
                     drawCircle@y0 001E                                 l41 1EDE  
                               l62 218C                                 l46 2202  
                               l57 21A6                                 l94 20D2  
                     ___awdiv@sign 001C               __size_of_Turn_On_Fan 000E  
              ___wmul@multiplicand 0013                    ??_Update_Screen 00F4  
                              l130 1EA0                                l133 1F6A  
                              l213 1FD4                                l403 0F50  
                              l318 1D20                                l431 16AE  
                              l328 2212                                l432 161A  
                              l442 0C54                                l434 168A  
                              l435 16AC                                l372 2036  
                              l378 1954                                l394 0FFA  
                              l396 0ED4                                l726 22BE  
                              l851 1B00                                l827 0734  
                              l860 1B42                                l790 04DC  
                              l855 1B1A                                l863 2088  
                              l856 1B1C                                _FAN 0050  
                              l857 1B26                                l858 1B28  
                              _PR2 000FCB                                _day 005A  
                _Deactivate_Buzzer 2314               __size_of_I2C_ReStart 0016  
                              _dow 005B                                _nbr 00FA  
                              _rpm 004C              __size_of_Turn_Off_Fan 0008  
                              _rps 00FE                                _txt 004E  
                     ___awmod@sign 0024                                wreg 000FE8  
               ?_Deactivate_Buzzer 0001                         _Fan_SW_Txt 00DF  
                  ??_fillRectangle 001D                       __CFG_LVP$OFF 000000  
          _TFT_GreenTab_Initialize 2038                       ___ftdiv@cntr 0035  
                     ___ftdiv@sign 003A                       __CFG_WDT$OFF 000000  
                   drawFastVLine@h 0019                               l1320 20AE  
                             l1056 18CC                               l1171 1774  
                             l1243 15D2                               l1069 19D6  
                             l1182 174C                               l1246 159E  
                             l1425 1F1C                               l1258 1318  
                   drawFastVLine@x 0022                     drawFastVLine@y 0018  
                             l1294 20F4                               l1279 14F0  
                             l1386 1CCC                               l1396 1E06  
                             l5301 193C                               l6101 1880  
                             l5303 194A                               l6111 18A6  
                             l6103 1888                               l5321 16DC  
                             l6017 0C3A                               l5331 1740  
                             l5323 16FC                               l5315 16C0  
                             l6115 18B2                               l6131 196C  
                             l7011 0B80                               l7003 0B64  
                             l5501 12CA                               l5405 2018  
                             l6045 0D2A                               l5413 1E1A  
                             l6141 1992                               l5343 1766  
                             l5327 1714                               l5319 16D0  
                             l5431 1538                               l6223 217E  
                             l6119 18C2                               l6143 199A  
                             l6151 19BC                               l6135 197A  
                             l7007 0B72                               l5337 1754  
                             l5329 1734                               l5425 1510  
                             l5505 12DC                               l5417 1E36  
                             l6209 21FC                               l5355 1F74  
                             l5451 1578                               l5427 152A  
                             l5291 1916                               l6155 19CC  
                             l6147 19B0                               l6139 1988  
                             l6403 01C2                               l6075 20EC  
                             l5357 1F7A                               l5349 1F62  
                             l5461 15AC                               l5509 12F2  
                             l5541 1494                               l6093 1860  
                             l6405 01D8                               l6165 1C90  
   I2C_Write_Cmd_Write_Data@Device 0015                               l5367 1F8C  
                             l5471 1240                               l5543 149A  
                             l5551 14C6                               l5519 142A  
                             l5287 18DE                               l6087 184E  
                             l6167 1C9A                               l5473 125A  
                             l5537 1484                               l5721 0EC2  
                             l6353 0058                               l6177 1CC0  
                             l6169 1CA2                               l6193 1DFA  
                             l6185 1DD2                               l5491 129C  
                             l5555 14DE                               l5547 14AE  
                             l5731 0EE0                               l5803 168E  
                             l6099 1876                               l6187 1DDC  
                             l6611 05F4                               l6523 03E6  
                             l5901 1E7A                               l5581 20B8  
                             l5477 1268                               l5549 14BC  
                             l5573 180E                               l5725 0ED0  
                             l5717 0EB6                               l5813 16A8  
                             l6189 1DE4                               l6605 05C6  
                             l6533 040E                               l5903 1E82  
                             l5495 12AE                               l5831 1AF8  
                             l5823 1AE6                               l5735 0F10  
                             l5727 0ED8                               l5807 1698  
                             l6375 012E                               l6359 0098  
                             l6623 062C                               l6551 04AE  
                             l6535 0424                               l6527 03F6  
                             l5913 1E96                               l5585 20CC  
                             l5737 0F44                               l6369 00EE  
                             l6625 0634                               l6633 0660  
                             l6617 060C                               l6609 05EA  
                             l6529 0404                               l5915 1E9C  
                             l5499 12C4                               l5843 1B12  
                             l5835 1B04                               l5827 1AF0  
                             l5755 0FC6                               l5747 0F72  
                             l5763 0FF6                               l5739 0F48  
                             l5771 1EF0                               l6635 0668  
                             l6643 06F2                               l6619 0614  
                             l6563 050A                               l6547 04A6  
                             l6539 0442                               l5909 1E8A  
                             l5757 0FEE                               l5749 0F9A  
                             l5781 15E4                               l6637 06AC  
                             l6645 0704                               l6629 064C  
                             l6581 055E                               l6573 0534  
                             l6647 070C                               l6591 0592  
                             l6583 0562                               l6567 0524  
                             l5769 1EEA                               l5961 1FEA  
                             l6577 0558                               l6569 0528  
                             l6649 0718                               l5891 1E64  
                             l5971 1028                               l5787 1652  
                             l6587 056E                               l6597 0598  
                             l5895 1E6C                               l5983 1084  
                             l5799 1680                               l5959 1FE0  
                             l6599 05AA                               l6935 09BC  
                             l5995 10F4                               l5987 10A2  
                             l6955 0A84                               l5997 10FC  
                             l6973 0AD6                               l6983 0B08  
                             l6969 0ABC                               l6987 0B1C  
                             l6979 0AFE                               STR_1 FF44  
                             STR_2 FFC8                               STR_3 FFF9  
                             STR_4 FFF3                               STR_5 FFE3  
                             STR_6 FFE8                               STR_7 FFDD  
                             STR_8 FFFC                               STR_9 FFF5  
                             u4001 141C                               u4020 1448  
                             u4025 1440                               u4210 0FA8  
                             u4500 105E                               u3720 190C  
                             u4280 1612                               u4290 1648  
                             u3911 1520                               u5357 22DA  
                             u3941 1232                               u3961 1250  
                             u3891 1502                               _RBPU 007F8F  
                             _TRMT 007D61                       _DS1621_tempC 0046  
                     _DS1621_tempF 0048                ??_Deactivate_Buzzer 0011  
                             _date 00C4                               _main 09A0  
                             _font FD0D                       ___ftpack@arg 0011  
                             _hour 005E                       ___ftpack@exp 0014  
                 __end_of_I2C_Init 22F8                   __end_of_I2C_Read 1EA2  
                             _time 00CD                               _year 006C  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                               _wrap 006F  
                 __end_of_I2C_Stop 2276                               pclat 000FFA  
               __size_of_LCD_Reset 0012                               prodh 000FF4  
                             prodl 000FF3                    __end_of_Do_Beep 2240  
                             start 0018        __size_of_I2C_Write_Cmd_Only 001A  
                  __end_of_Do_Init 1DC4                     _Increase_Speed 218E  
                  ??_drawFastVLine 001C                       ___ftmul@cntr 002A  
                  __end_of_i2cNack 2302                       ___param_bank 000010  
                     ___ftmul@sign 002B                       ___fttol@exp1 001F  
                     _Turn_Off_Fan 230C                       ___fttol@lval 001B  
                      ?_TIMER1_isr 0001                   __end_of_INT0_isr 0EA6  
        __end_of_Deactivate_Buzzer 231C                    ??_do_update_pwm 003B  
                  drawFastVLine@hi 0020                    drawFastVLine@lo 0021  
                            ?_main 0001                    __end_of___awdiv 18CE  
                  drawCircle@ddF_x 0026                              STR_10 FFED  
                  drawCircle@ddF_y 0028                              STR_11 FFF1  
                            STR_12 FFD5                              STR_20 FF2E  
                            STR_21 FF98                              STR_13 FEFA  
                            STR_14 FF6F                              STR_15 FF84  
                            STR_16 FFA9                              STR_17 FF18  
                            STR_18 FFB9                              STR_19 FF5A  
                  __end_of___awmod 19D8                    __end_of___ftdiv 15D4  
                  __end_of___ftmul 131A                              _T0CON 000FD5  
                  ___awdiv@divisor 0019                              _T1CON 000FCD  
                  __end_of___fttol 14F2                              _T2CON 000FCA  
                            _T3CON 000FB1                    __end_of___lwdiv 1CD6  
                  __end_of___lwmod 1E10                              i2l532 1A9A  
                            i2l544 0EA4                              i2l556 0E58  
                  ___awdiv@counter 001B                    drawCircle@color 0022  
                            _RCSTA 000FAB                              _TMR0H 000FD7  
                            _TMR1H 000FCF                              _TMR0L 000FD6  
                            _TMR1L 000FCE                              _TMR3L 000FB2  
                            _SPBRG 000FAF                              _TRISA 000F92  
                            _TRISB 000F93                              _TRISC 000F94  
                            _TRISD 000F95                              _TRISE 000F96  
                            _TXREG 000FAD                              _TXSTA 000FAC  
                  __end_of_get_RPM 1EE0                              _Rcmd1 1112  
                            _Rcmd3 131A                         _i2cHighSda 2324  
                       _i2cHighScl 22D6                    __end_of_dpowers FEF2  
                            _font2 FE0C                              _found 005D  
                  __end_of_isdigit 20F6                              _tempC 00E3  
                            _tempF 00E7                              _month 0060  
                    ___ftpack@sign 0015                              _putch 22BA  
                            main@j 0121                  __end_of_I2C_Start 2288  
                __end_of_I2C_Write 1F9A                     __CFG_BOREN$OFF 000000  
                            tablat 000FF5                              status 000FD8  
           __end_of_Increase_Speed 21A8                  ?_DS1621_Read_Temp 0014  
                  write_data@data_ 0013                 ??_DS1621_Read_Temp 0016  
                  __initialization 19D8                       __end_of_main 0B92  
                     __end_of_font FE0C                   __end_of_Rcmd2red 1F5C  
                 ??_Decrease_Speed 003E                             ??_main 0041  
                    ___fttol@sign1 001A                      __activetblptr 000002  
                ?_DS3231_Read_Time 0001                  __end_of_LCD_Reset 2252  
        ??_TFT_GreenTab_Initialize 001D                 ??_DS3231_Read_Time 0014  
                           ?_Rcmd1 0001                             ?_Rcmd3 0001  
          __size_of_init_INTERRUPT 0018                          I2C_Init@c 0011  
                        I2C_Read@n 0012                             _ADCON1 000FC1  
              DS1621_Read_Temp@Cmd 0016                             _CCPR1L 000FBE  
                           _CCPR2L 000FBB                   ___awdiv@dividend 0017  
               __size_of_i2cLowSda 000A                 __size_of_i2cLowScl 0008  
                           ?_putch 0001                   __end_of___ftpack 1776  
                 __end_of___lbtoft 20B0                          ??_Do_Beep 003E  
                           _DC_Txt 00DB                          ??_Do_Init 0017  
                           i2l4701 0E7E                             i2l5149 1A90  
                           i2l4707 0E82                             i2l4661 0DBC  
                           i2l4655 0DB2                             i2l4639 0D68  
                           i2l4681 0E06                             i2l4673 0DE4  
                           i2l4649 0D94                             i2l4667 0DDA  
                           i2l4685 0E0A                             i2l4679 0E00  
                           i2l4699 0E78                             _OSCCON 000FD3  
              __size_of_TIMER1_isr 000C                             _SPBRGH 000FB0  
                           _SSPBUF 000FC9                    ?_Increase_Speed 0001  
                        ??_i2cNack 0011                       _Alarm_SW_Txt 00BE  
                 _force_nec_state0 232C                   __end_of_delay_ms 1D28  
                           _i2cAck 2288                   __end_of_fillRect 1E5A  
                 __end_of_drawChar 0FFC                 __size_of_OpenUSART 0070  
         __size_of_Activate_Buzzer 0012                             ___wmul 2062  
                        ??___awdiv 001B                   __end_of_drawtext 1112  
                        ??___awmod 0023                          ??___ftdiv 0032  
                        ??___ftmul 0023                          ??___fttol 0015  
                           _chkisr 0008                          ??___lwdiv 0015  
                           _array1 0080                          ??___lwmod 001C  
                           _buffer 0100                             _nec_ok 00FC  
                           clear_0 19DE                             clear_1 19EA  
                 ___awdiv@quotient 001D                             _minute 005F  
                           _second 0062            DS3231_Setup_Time@Device 0013  
                  ___awmod@divisor 0021                          ??_get_RPM 0021  
       __size_of_Deactivate_Buzzer 0008                    ___awmod@counter 0023  
                           _printf 03DC                       drawtext@size 0040  
                           _strcpy 1FD6                             _strlen 1EE0  
            ___ftmul@f3_as_product 0027                         _Toggle_Fan 21F0  
                     __pdataCOMRAM 006D                          ??_isdigit 0011  
                        ?_I2C_Init 0011                          ?_I2C_Read 0001  
                        ?_I2C_Stop 0001                       __mediumconst FD0C  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8   __end_of_I2C_Write_Cmd_Write_Data 2138  
                      ?_i2cHighSda 0001                        ?_i2cHighScl 0001  
                           putch@c 0011                   __end_of_spiwrite 2218  
                       __accesstop 0080            __end_of__initialization 1A4E  
                        ?_INT0_isr 0001                 _setup_alarm_minute 0064  
               _setup_alarm_second 0065                      ___rparam_used 000001  
                       ___ftdiv@f1 002C                         ___ftdiv@f2 002F  
                       ___ftdiv@f3 0036                         ___lbtoft@c 001C  
                       ___ftmul@f1 001D                         ___ftmul@f2 0020  
                       ___fttol@f1 0011                      __end_of_Rcmd1 1222  
                    __end_of_Rcmd3 140C                     __pcstackCOMRAM 0001  
                     __pidataBANK0 1B44                       __pidataBANK1 20F6  
                    __end_of_font2 FEE8                  __end_of_i2cLowSda 230C  
                __end_of_i2cLowScl 2324                      __end_of_putch 22C8  
                   drawPixel@color 0019             __size_of_write_command 0010  
                       ??_I2C_Init 0015                         ??_I2C_Read 0011  
                     _alarm_minute 0056                       _alarm_second 0057  
                       ??_I2C_Stop 0011                            ??_Rcmd1 001D  
                          ??_Rcmd3 001D                 __size_of_drawPixel 0030  
                __end_of_OpenUSART 1B44                            ??_putch 0011  
                       __pbssBANK0 00F8                   _setup_alarm_hour 0063  
                 _setup_alarm_time 009E                      ??_DS1621_Init 0016  
                        ?_Rcmd2red 0001                 __size_of_init_UART 0014  
                  spiwrite@spidata 0012                         _alarm_date 0054  
                       ??_INT0_isr 0001                         _alarm_hour 0055  
                       _alarm_time 0095                      ?_Wait_One_Sec 0001  
                          ?_i2cAck 0001                 __CFG_CCP2MX$PORTBE 000000  
                    ??_Turn_On_Fan 003E                     I2C_Read@inByte 0013  
                          ?___wmul 0011                __size_of_i2cHighSda 0008  
              __size_of_i2cHighScl 000C                            ?_chkisr 0001  
           __size_of_setAddrWindow 004E                            _CCP1CON 000FBD  
 I2C_Write_Cmd_Write_Data@Data_Out 0014                            _CCP2CON 000FBA  
                     ??_TIMER1_isr 0001                      ??_I2C_ReStart 0011  
                          _ALARMEN 00F8                          ?___ftpack 0011  
                        ?___lbtoft 0019                         I2C_Write@n 0012  
                          ?_printf 001D                            ?_strcpy 0011  
                          ?_strlen 0011                        ?_Toggle_Fan 0001  
                ??_Activate_Buzzer 0011                         _fillScreen 2156  
            __end_of_Update_Screen 03DC                         _drawCircle 0B92  
                   _init_INTERRUPT 21C2                          ?_delay_ms 0017  
                        ?_fillRect 0023                          ?_drawChar 002E  
                          _SSPCON1 000FC6                            _SSPSTAT 000FC7  
                          _RPM_Txt 00D6              __end_of_fillRectangle 16B0  
                          _Do_Beep 222C                          ?_drawtext 0039  
                _DS3231_Setup_Time 1BB0                            _Do_Init 1D76  
         _I2C_Write_Cmd_Write_Data 2118         __end_of_I2C_Write_Cmd_Only 21C2  
                       ??_Rcmd2red 0014             DS1621_Read_Temp@Device 0018  
                   ??_Wait_One_Sec 0011                            _i2cNack 22F8  
               __end_of_TIMER1_isr 22EE                 ?_DS3231_Setup_Time 0001  
                    _write_command 22AA                          _I2C_Start 2276  
                        _I2C_Write 1F5C                    __size_of_i2cAck 0012  
                          __Hparam 0000                            __Lparam 0000  
              __end_of_DS1621_Init 2156                  __end_of_drawPixel 2038  
              ??_DS3231_Setup_Time 0013              __end_of_drawFastVLine 1956  
                          ___awdiv 1838                            ___awmod 1956  
                          ___ftdiv 14F2                    __size_of___wmul 0028  
                          ___ftmul 1222                            ___fttol 140C  
                          ___lwdiv 1C7A                            ___lwmod 1DC4  
                  __size_of_chkisr 1ACC                          ?_spiwrite 0001  
                          __pcinit 19D8                         ??___ftpack 0016  
                       ??___lbtoft 001C                            __ramtop 1000  
                          _get_RPM 1EA2                            __ptext0 09A0  
                          __ptext1 03DC                            __ptext2 22BA  
                          __ptext3 20D4                            __ptext4 1DC4  
                          __ptext5 1C7A          __size_of_DS1621_Read_Temp 003C  
                          __ptext6 1EA2                            __ptext7 001C  
                          __ptext8 1956                            __ptext9 1838  
                  __size_of_printf 035A                  __end_of_init_UART 222C  
              __end_of_Turn_On_Fan 22D6             __end_of_init_INTERRUPT 21DA  
                        _T0CONbits 000FD5                    __size_of_strcpy 0032  
                  __size_of_strlen 003E                  __end_of_hexpowers FEFA  
         __end_of_force_nec_state0 2334                          _T1CONbits 000FCD  
         DS3231_Setup_Time@Address 0014                            _dpowers FEE8  
            __end_of_do_update_pwm 1838                            _isdigit 20D4  
                 ___awmod@dividend 001F                         _duty_cycle 005C  
                       ??_delay_ms 0019                __end_of_I2C_ReStart 21F0  
                    drawtext@_text 003A                      drawtext@color 003C  
                       ??_fillRect 0028          __end_of_DS3231_Setup_Time 1C16  
                 ??_Increase_Speed 003E                         ??_drawChar 0035  
                        _LCD_Reset 2240                      _setAddrWindow 1D28  
                   __pintcode_body 1A58                      Wait_One_Sec@k 0011  
                       delay_ms@ms 0017               end_of_initialization 1A4E  
                       ??_drawtext 00EB                     ?_write_command 0001  
                    __Lmediumconst FD0C          __size_of_DS3231_Read_Time 0064  
                          int_func 1A58            DS3231_Read_Time@Address 0014  
                       ?_I2C_Start 0001                         ?_I2C_Write 0001  
                       get_RPM@RPS 0021                __size_of_Toggle_Fan 0014  
                       _tempSecond 006E                          _RCSTAbits 000FAB  
                          printf@c 0038                            printf@f 001D  
                          postdec1 000FE5                            postdec2 000FDD  
                          postinc0 000FEE                            postinc2 000FDE  
                       ??_spiwrite 0011                            strlen@s 0011  
      I2C_Write_Cmd_Write_Data@Cmd 0013                          _PORTAbits 000F80  
                 drawtext@cursor_x 00F3                   drawtext@cursor_y 00F2  
                        _PORTBbits 000F81                          _PORTDbits 000F83  
                        _PORTEbits 000F84                   I2C_Write@outByte 0011  
                  ?_init_INTERRUPT 0001                         _setup_date 00A7  
                      ?_fillScreen 0024                         _setup_hour 0067  
                       _setup_time 00B0                         _setup_year 006B  
                      ?_drawCircle 001C                         drawChar@bg 0032  
                        _TRISCbits 000F94                          _TRISDbits 000F95  
                     ??_i2cHighSda 0011                       ??_i2cHighScl 0011  
                __size_of_I2C_Init 000A                  __size_of_I2C_Read 0048  
                __size_of_I2C_Stop 0012                     ?_setAddrWindow 0014  
                       ?_LCD_Reset 0001                   drawtext@textsize 00EE  
                       drawPixel@x 001B                         drawPixel@y 0018  
                      _DS1621_Init 2138                        ___ftdiv@exp 0039  
                      printf@width 0036                          _TXSTAbits 000FAC  
                __size_of_INT0_isr 0166                     __end_of_i2cAck 229A  
                      ___ftmul@exp 0026           DS1621_Read_Temp@Data_Ret 0017  
                      _Turn_On_Fan 22C8                 __end_of_i2cHighSda 232C  
               __end_of_i2cHighScl 22E2                     __end_of___wmul 208A  
                    delay_ms@count 001B                         _write_data 229A  
                    __pidataCOMRAM 2334                     __end_of_chkisr 1AD4  
         ?_TFT_GreenTab_Initialize 0001                        _I2C_ReStart 21DA  
                       drawtext@bg 003E                          _Nec_code1 0051  
                        _i2cLowSda 2302                          _i2cLowScl 231C  
             __end_of_Wait_One_Sec 20D4                     __end_of_printf 0736  
                   __end_of_strcpy 2008                     __end_of_strlen 1F1E  
                        _Nec_state 0052                start_initialization 19D8  
           Update_Screen@neg_tempF 00F6         __size_of_DS3231_Setup_Time 0066  
          __size_of_Decrease_Speed 001C                    ??_write_command 0013  
                        _OpenUSART 1AD4                   __CFG_OSC$INTIO67 000000  
                      ??_I2C_Start 0011                        ??_I2C_Write 0011  
                         ??_i2cAck 0011                  __size_of_Rcmd2red 003E  
              __size_of_fillScreen 001C                __size_of_drawCircle 01AE  
                  _Activate_Buzzer 2252                           ??___wmul 0015  
                    ?_Turn_Off_Fan 0001                           ??_chkisr 0003  
                      __pdataBANK0 0080                        __pdataBANK1 0100  
                  setAddrWindow@x0 0017                    setAddrWindow@x1 0015  
                  setAddrWindow@y0 0014                    setAddrWindow@y1 0016  
                         ??_printf 002B                   _DS1621_Read_Temp 1F9A  
                         ??_strcpy 0015                           ??_strlen 0013  
                     ??_Toggle_Fan 003E                         ?_i2cLowSda 0001  
                       ?_i2cLowScl 0001                  __size_of___ftpack 00C6  
                __size_of___lbtoft 0026                        __pbssCOMRAM 0042  
       ??_I2C_Write_Cmd_Write_Data 0015                    ??_setAddrWindow 0017  
                    __pcstackBANK0 00EB                      __pcstackBANK1 0121  
                      ??_LCD_Reset 001D                       _isdigit$2306 0012  
                __size_of_delay_ms 0052                           ?_Do_Beep 0001  
                         ?_Do_Init 0001                  __size_of_fillRect 004A  
                __size_of_drawChar 0156                         ?_OpenUSART 0011  
                 _DS3231_Read_Time 1C16                           ?_i2cNack 0001  
                __size_of_drawtext 0116                   ___lwdiv@dividend 0011  
               __end_of_Toggle_Fan 2204                        I2C_Read@ack 0011  
                        _bit_count 0058                          __pintcode 0008  
  __end_of_TFT_GreenTab_Initialize 2062                     ??_Turn_Off_Fan 0011  
                    __pmediumconst FD0C                           ?___awdiv 0017  
                         ?___awmod 001F                           ?___ftdiv 002C  
                         ?___ftmul 001D                           ?___fttol 0011  
                        __tft_type 0053                           ?___lwdiv 0011  
               _I2C_Write_Cmd_Only 21A8                           ?___lwmod 0018  
               drawFastVLine@color 001A                        ?_write_data 0001  
                        _drawPixel 2008                           ?_get_RPM 001F  
                __size_of_spiwrite 0014                ?_I2C_Write_Cmd_Only 0013  
                ?_force_nec_state0 0001                           ?_isdigit 0001  
                         _I2C_Init 22EE                           _I2C_Read 1E5A  
                         _I2C_Stop 2264                  _Initialize_Screen 0736  
                   __size_of_Rcmd1 0110                     __size_of_Rcmd3 00F2  
                        _init_UART 2218                 ??_force_nec_state0 0001  
         I2C_Write_Cmd_Only@Device 0014                          _hexpowers FEF2  
               ?_Initialize_Screen 0001                   ___lwdiv@quotient 0016  
                   __size_of_putch 000E            __end_of_Activate_Buzzer 2264  
                   ___wmul@product 0015                ??_Initialize_Screen 0041  
                         _INT0_isr 0D40               ??_I2C_Write_Cmd_Only 0014  
                         _PIE1bits 000F9D             __size_of_Update_Screen 03C0  
           DS3231_Read_Time@Device 0015                           _PIR1bits 000F9E  
                 ??_init_INTERRUPT 0011              __size_of_Wait_One_Sec 0024  
                        _setup_day 0066                  DS1621_Init@Device 0016  
                        fillRect@h 0025                          fillRect@i 002C  
                        fillRect@w 0024                          fillRect@x 002B  
                        fillRect@y 0023                          drawChar@c 002F  
                        drawChar@i 0038                          drawChar@j 0037  
                        drawChar@x 0036                          drawChar@y 002E  
                       ?_drawPixel 0018             __size_of_fillRectangle 00DC  
                ___wmul@multiplier 0011          __end_of_Initialize_Screen 09A0  
                      ??_i2cLowSda 0011                        ??_i2cLowScl 0011  
                     ??_fillScreen 0026                       ??_drawCircle 0024  
                       printf@flag 0035                         printf@prec 0032  
                       ?_init_UART 0001                     _Decrease_Speed 2172  
                      _INTCON2bits 000FF1                          copy_data0 1A04  
                        copy_data1 1A24                          drawtext@i 00F0  
           __size_of_drawFastVLine 0088                          drawtext@x 00ED  
                        drawtext@y 0039                           _Nec_code 0042  
                write_command@cmd_ 0013                        ??_OpenUSART 0013  
                 __size_of_Do_Beep 0014                       ?_DS1621_Init 0001  
                         _Rcmd2red 1F1E                   __size_of_Do_Init 004E  
              __size_of_write_data 0010                    OpenUSART@config 0013  
                     _Time_Elapsed 004A                   __size_of_i2cNack 000A  
                    _RTC_ALARM_Txt 00C2                       _Wait_One_Sec 20B0  
                         __Hrparam 0000             __size_of_do_update_pwm 00C2  
               __end_of_fillScreen 2172                           __Lrparam 0000  
               __end_of_drawCircle 0D40                       ?_Turn_On_Fan 0001  
                 __size_of___awdiv 0096                   __size_of___awmod 0082  
                 __size_of___ftdiv 00E2                   __size_of___ftmul 00F8  
                 __size_of___fttol 00E6                   __size_of___lwdiv 005C  
                 __size_of___lwmod 004C                           ___ftpack 16B0  
                         ___lbtoft 208A                       ?_I2C_ReStart 0001  
                 __size_of_get_RPM 003E                      _Update_Screen 001C  
                   _setup_fan_temp 006D                     _setup_fan_text 00B9  
                 __size_of_isdigit 0022                           _delay_ms 1CD6  
           __end_of_Decrease_Speed 218E                    ___lwdiv@divisor 0013  
                  ___lwdiv@counter 0015                           __ptext10 21F0  
                         __ptext11 22C8                           __ptext20 1E10  
                         __ptext12 230C                           __ptext21 18CE  
                         __ptext13 0736                           __ptext30 22AA  
                         __ptext22 0B92                           __ptext14 1FD6  
                         __ptext31 2204                           __ptext23 2008  
                         __ptext15 2156                           __ptext40 22EE  
                         __ptext32 2240                           __ptext24 1D28  
                         __ptext16 15D4                           __ptext41 2138  
                         __ptext33 1CD6                           __ptext25 2038  
                         __ptext17 0FFC                           __ptext50 14F2  
                         __ptext42 2118                           __ptext34 2062  
                         __ptext26 131A                           __ptext18 1EE0  
                         __ptext51 16B0                           __ptext43 21A8  
                         __ptext35 218E                           __ptext27 1F1E  
                         __ptext19 0EA6                           __ptext60 2276  
                         __ptext52 20B0                           __ptext44 2172  
                         __ptext36 1D76                           __ptext28 1112  
                         __ptext61 1E5A                           __ptext53 2314  
                         __ptext45 222C                           __ptext37 2218  
                         __ptext29 229A                           __ptext70 22E2  
                         __ptext62 22F8                           __ptext54 2252  
                         __ptext46 1776                           __ptext38 1AD4  
                         __ptext71 0D40                           __ptext63 2288  
                         __ptext55 1BB0                           __ptext47 208A  
                         __ptext39 21C2                           __ptext72 232C  
                         __ptext64 21DA                           __ptext56 1C16  
                         __ptext48 140C                           __ptext65 2302  
                         __ptext57 1F9A                           __ptext49 1222  
                         __ptext66 231C                           __ptext58 1F5C  
                         __ptext67 2324                           __ptext59 2264  
                         __ptext68 22D6                           _fillRect 1E10  
                         _drawChar 0EA6               __end_of_Turn_Off_Fan 2314  
 __size_of_TFT_GreenTab_Initialize 002A                           _colstart 0059  
                         _drawtext 0FFC                         strcpy@from 0013  
                    _fillRectangle 15D4           __end_of_DS1621_Read_Temp 1FD6  
                 ?_Activate_Buzzer 0001                      __size_of_main 01F2  
          __size_of_Increase_Speed 001A                    fillRectangle@hi 0021  
                  fillRectangle@lo 0022                      _drawFastVLine 18CE  
                        printf@idx 002F                           _spiwrite 2204  
                        printf@val 0033                        ??_drawPixel 001B  
                         _rowstart 0061           __end_of_DS3231_Read_Time 1C7A  
       __size_of_Initialize_Screen 026A                     ?_Update_Screen 0001  
                       _INTCONbits 000FF2                      _do_update_pwm 1776  
                   OpenUSART@spbrg 0011                        ??_init_UART 0014  
                  ?_Decrease_Speed 0001                           isdigit@c 0013  
                        spiwrite@x 0011                           intlevel2 0000  
                   ?_fillRectangle 0018                   ___lwmod@dividend 0018  
            __end_of_write_command 22BA                    fillScreen@color 0024  
          do_update_pwm@duty_cycle 00EE                     fillRectangle@h 001A  
                   fillRectangle@w 0019                     fillRectangle@x 0023  
                   fillRectangle@y 0018                     ?_drawFastVLine 0018  
                         printf@ap 0030                       ??_write_data 0013  
                       _TIMER1_isr 22E2                      fillRect@color 0026  
                   ?_do_update_pwm 0001                    ___lwmod@divisor 001A  
                         strcpy@cp 0015                           strlen@cp 0015  
                         strcpy@to 0011              I2C_Write_Cmd_Only@Cmd 0013  
                  ___lwmod@counter 001C                       _setup_minute 0068  
                     _setup_second 006A              __end_of_setAddrWindow 1D76  
               fillRectangle@color 001B                  do_update_pwm@dc_I 00EF  
                do_update_pwm@dc_f 00EB                      drawChar@color 0030  
                      _setup_month 0069                 __end_of_write_data 22AA  
        __size_of_force_nec_state0 0008                       drawChar@line 0035  
                     drawChar@size 0034  __size_of_I2C_Write_Cmd_Write_Data 0020  
             __size_of_DS1621_Init 001E          ?_I2C_Write_Cmd_Write_Data 0013  
