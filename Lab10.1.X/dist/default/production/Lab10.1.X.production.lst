

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon Apr 19 21:45:01 2021

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    58  0000                     
    59                           	psect	idataCOMRAM
    60  001480                     __pidataCOMRAM:
    61                           	opt stack 0
    62                           
    63                           ;initializer for _array1
    64  001480  A2                 	db	162
    65  001481  62                 	db	98
    66  001482  E2                 	db	226
    67  001483  22                 	db	34
    68  001484  02                 	db	2
    69  001485  C2                 	db	194
    70  001486  E0                 	db	224
    71  001487  A8                 	db	168
    72  001488  90                 	db	144
    73  001489  68                 	db	104
    74  00148A  98                 	db	152
    75  00148B  B0                 	db	176
    76  00148C  30                 	db	48
    77  00148D  18                 	db	24
    78  00148E  7A                 	db	122
    79  00148F  10                 	db	16
    80  001490  38                 	db	56
    81  001491  5A                 	db	90
    82  001492  42                 	db	66
    83  001493  4A                 	db	74
    84  001494  52                 	db	82
    85                           
    86                           ;initializer for _wrap
    87  001495  01                 	db	1
    88                           
    89                           	psect	idataBANK0
    90  00115E                     __pidataBANK0:
    91                           	opt stack 0
    92                           
    93                           ;initializer for _color
    94  00115E  F800               	dw	63488
    95  001160  F800               	dw	63488
    96  001162  F800               	dw	63488
    97  001164  001F               	dw	31
    98  001166  001F               	dw	31
    99  001168  07E0               	dw	2016
   100  00116A  F81F               	dw	63519
   101  00116C  F81F               	dw	63519
   102  00116E  F81F               	dw	63519
   103  001170  0000               	dw	0
   104  001172  0000               	dw	0
   105  001174  0000               	dw	0
   106  001176  0000               	dw	0
   107  001178  0000               	dw	0
   108  00117A  0000               	dw	0
   109  00117C  0000               	dw	0
   110  00117E  0000               	dw	0
   111  001180  0000               	dw	0
   112  001182  0000               	dw	0
   113  001184  0000               	dw	0
   114  001186  0000               	dw	0
   115                           
   116                           ;initializer for _colord1
   117  001188  0001               	dw	1
   118  00118A  0001               	dw	1
   119  00118C  0001               	dw	1
   120  00118E  0004               	dw	4
   121  001190  0004               	dw	4
   122  001192  0002               	dw	2
   123  001194  0005               	dw	5
   124  001196  0000               	dw	0
   125  001198  0000               	dw	0
   126  00119A  0000               	dw	0
   127  00119C  0000               	dw	0
   128  00119E  0000               	dw	0
   129  0011A0  0000               	dw	0
   130  0011A2  0000               	dw	0
   131  0011A4  0000               	dw	0
   132  0011A6  0000               	dw	0
   133  0011A8  0000               	dw	0
   134  0011AA  0000               	dw	0
   135  0011AC  0000               	dw	0
   136  0011AE  0000               	dw	0
   137  0011B0  0000               	dw	0
   138                           
   139                           	psect	idataBANK1
   140  000FF4                     __pidataBANK1:
   141                           	opt stack 0
   142                           
   143                           ;initializer for _colord2
   144  000FF4  0000               	dw	0
   145  000FF6  0000               	dw	0
   146  000FF8  0000               	dw	0
   147  000FFA  0000               	dw	0
   148  000FFC  0000               	dw	0
   149  000FFE  0000               	dw	0
   150  001000  0000               	dw	0
   151  001002  00A0               	dw	160
   152  001004  00A0               	dw	160
   153  001006  00E0               	dw	224
   154  001008  00E0               	dw	224
   155  00100A  00E0               	dw	224
   156  00100C  00E0               	dw	224
   157  00100E  00E0               	dw	224
   158  001010  0007               	dw	7
   159  001012  0007               	dw	7
   160  001014  0007               	dw	7
   161  001016  0007               	dw	7
   162  001018  0007               	dw	7
   163  00101A  0007               	dw	7
   164  00101C  0007               	dw	7
   165                           
   166                           ;initializer for _txt1
   167  00101E  43                 	db	67
   168  00101F  48                 	db	72
   169  001020  2D                 	db	45
   170  001021  00                 	db	0
   171  001022  43                 	db	67
   172  001023  48                 	db	72
   173  001024  20                 	db	32
   174  001025  00                 	db	0
   175  001026  43                 	db	67
   176  001027  48                 	db	72
   177  001028  2B                 	db	43
   178  001029  00                 	db	0
   179  00102A  7C                 	db	124
   180  00102B  3C                 	db	60
   181  00102C  3C                 	db	60
   182  00102D  00                 	db	0
   183  00102E  3E                 	db	62
   184  00102F  3E                 	db	62
   185  001030  7C                 	db	124
   186  001031  00                 	db	0
   187  001032  3E                 	db	62
   188  001033  7C                 	db	124
   189  001034  7C                 	db	124
   190  001035  00                 	db	0
   191  001036  20                 	db	32
   192  001037  2D                 	db	45
   193  001038  20                 	db	32
   194  001039  00                 	db	0
   195  00103A  20                 	db	32
   196  00103B  2B                 	db	43
   197  00103C  20                 	db	32
   198  00103D  00                 	db	0
   199  00103E  45                 	db	69
   200  00103F  51                 	db	81
   201  001040  20                 	db	32
   202  001041  00                 	db	0
   203  001042  20                 	db	32
   204  001043  30                 	db	48
   205  001044  20                 	db	32
   206  001045  00                 	db	0
   207  001046  31                 	db	49
   208  001047  30                 	db	48
   209  001048  30                 	db	48
   210  001049  00                 	db	0
   211  00104A  32                 	db	50
   212  00104B  30                 	db	48
   213  00104C  30                 	db	48
   214  00104D  00                 	db	0
   215  00104E  20                 	db	32
   216  00104F  31                 	db	49
   217  001050  20                 	db	32
   218  001051  00                 	db	0
   219  001052  20                 	db	32
   220  001053  32                 	db	50
   221  001054  20                 	db	32
   222  001055  00                 	db	0
   223  001056  20                 	db	32
   224  001057  33                 	db	51
   225  001058  20                 	db	32
   226  001059  00                 	db	0
   227  00105A  20                 	db	32
   228  00105B  34                 	db	52
   229  00105C  20                 	db	32
   230  00105D  00                 	db	0
   231  00105E  20                 	db	32
   232  00105F  35                 	db	53
   233  001060  20                 	db	32
   234  001061  00                 	db	0
   235  001062  20                 	db	32
   236  001063  36                 	db	54
   237  001064  20                 	db	32
   238  001065  00                 	db	0
   239  001066  20                 	db	32
   240  001067  37                 	db	55
   241  001068  20                 	db	32
   242  001069  00                 	db	0
   243  00106A  20                 	db	32
   244  00106B  38                 	db	56
   245  00106C  20                 	db	32
   246  00106D  00                 	db	0
   247  00106E  20                 	db	32
   248  00106F  39                 	db	57
   249  001070  20                 	db	32
   250  001071  00                 	db	0
   251                           
   252                           	psect	mediumconst
   253  00FDBE                     __pmediumconst:
   254                           	opt stack 0
   255  00FDBE  00                 	db	0
   256  00FDBF                     _font:
   257                           	opt stack 0
   258  00FDBF  00                 	db	0
   259  00FDC0  00                 	db	0
   260  00FDC1  00                 	db	0
   261  00FDC2  00                 	db	0
   262  00FDC3  00                 	db	0
   263  00FDC4  00                 	db	0
   264  00FDC5  00                 	db	0
   265  00FDC6  5F                 	db	95
   266  00FDC7  00                 	db	0
   267  00FDC8  00                 	db	0
   268  00FDC9  00                 	db	0
   269  00FDCA  07                 	db	7
   270  00FDCB  00                 	db	0
   271  00FDCC  07                 	db	7
   272  00FDCD  00                 	db	0
   273  00FDCE  14                 	db	20
   274  00FDCF  7F                 	db	127
   275  00FDD0  14                 	db	20
   276  00FDD1  7F                 	db	127
   277  00FDD2  14                 	db	20
   278  00FDD3  24                 	db	36
   279  00FDD4  2A                 	db	42
   280  00FDD5  7F                 	db	127
   281  00FDD6  2A                 	db	42
   282  00FDD7  12                 	db	18
   283  00FDD8  23                 	db	35
   284  00FDD9  13                 	db	19
   285  00FDDA  08                 	db	8
   286  00FDDB  64                 	db	100
   287  00FDDC  62                 	db	98
   288  00FDDD  36                 	db	54
   289  00FDDE  49                 	db	73
   290  00FDDF  56                 	db	86
   291  00FDE0  20                 	db	32
   292  00FDE1  50                 	db	80
   293  00FDE2  00                 	db	0
   294  00FDE3  08                 	db	8
   295  00FDE4  07                 	db	7
   296  00FDE5  03                 	db	3
   297  00FDE6  00                 	db	0
   298  00FDE7  00                 	db	0
   299  00FDE8  1C                 	db	28
   300  00FDE9  22                 	db	34
   301  00FDEA  41                 	db	65
   302  00FDEB  00                 	db	0
   303  00FDEC  00                 	db	0
   304  00FDED  41                 	db	65
   305  00FDEE  22                 	db	34
   306  00FDEF  1C                 	db	28
   307  00FDF0  00                 	db	0
   308  00FDF1  2A                 	db	42
   309  00FDF2  1C                 	db	28
   310  00FDF3  7F                 	db	127
   311  00FDF4  1C                 	db	28
   312  00FDF5  2A                 	db	42
   313  00FDF6  08                 	db	8
   314  00FDF7  08                 	db	8
   315  00FDF8  3E                 	db	62
   316  00FDF9  08                 	db	8
   317  00FDFA  08                 	db	8
   318  00FDFB  00                 	db	0
   319  00FDFC  80                 	db	128
   320  00FDFD  70                 	db	112
   321  00FDFE  30                 	db	48
   322  00FDFF  00                 	db	0
   323  00FE00  08                 	db	8
   324  00FE01  08                 	db	8
   325  00FE02  08                 	db	8
   326  00FE03  08                 	db	8
   327  00FE04  08                 	db	8
   328  00FE05  00                 	db	0
   329  00FE06  00                 	db	0
   330  00FE07  60                 	db	96
   331  00FE08  60                 	db	96
   332  00FE09  00                 	db	0
   333  00FE0A  20                 	db	32
   334  00FE0B  10                 	db	16
   335  00FE0C  08                 	db	8
   336  00FE0D  04                 	db	4
   337  00FE0E  02                 	db	2
   338  00FE0F  3E                 	db	62
   339  00FE10  51                 	db	81
   340  00FE11  49                 	db	73
   341  00FE12  45                 	db	69
   342  00FE13  3E                 	db	62
   343  00FE14  00                 	db	0
   344  00FE15  42                 	db	66
   345  00FE16  7F                 	db	127
   346  00FE17  40                 	db	64
   347  00FE18  00                 	db	0
   348  00FE19  72                 	db	114
   349  00FE1A  49                 	db	73
   350  00FE1B  49                 	db	73
   351  00FE1C  49                 	db	73
   352  00FE1D  46                 	db	70
   353  00FE1E  21                 	db	33
   354  00FE1F  41                 	db	65
   355  00FE20  49                 	db	73
   356  00FE21  4D                 	db	77
   357  00FE22  33                 	db	51
   358  00FE23  18                 	db	24
   359  00FE24  14                 	db	20
   360  00FE25  12                 	db	18
   361  00FE26  7F                 	db	127
   362  00FE27  10                 	db	16
   363  00FE28  27                 	db	39
   364  00FE29  45                 	db	69
   365  00FE2A  45                 	db	69
   366  00FE2B  45                 	db	69
   367  00FE2C  39                 	db	57
   368  00FE2D  3C                 	db	60
   369  00FE2E  4A                 	db	74
   370  00FE2F  49                 	db	73
   371  00FE30  49                 	db	73
   372  00FE31  31                 	db	49
   373  00FE32  41                 	db	65
   374  00FE33  21                 	db	33
   375  00FE34  11                 	db	17
   376  00FE35  09                 	db	9
   377  00FE36  07                 	db	7
   378  00FE37  36                 	db	54
   379  00FE38  49                 	db	73
   380  00FE39  49                 	db	73
   381  00FE3A  49                 	db	73
   382  00FE3B  36                 	db	54
   383  00FE3C  46                 	db	70
   384  00FE3D  49                 	db	73
   385  00FE3E  49                 	db	73
   386  00FE3F  29                 	db	41
   387  00FE40  1E                 	db	30
   388  00FE41  00                 	db	0
   389  00FE42  00                 	db	0
   390  00FE43  14                 	db	20
   391  00FE44  00                 	db	0
   392  00FE45  00                 	db	0
   393  00FE46  00                 	db	0
   394  00FE47  40                 	db	64
   395  00FE48  34                 	db	52
   396  00FE49  00                 	db	0
   397  00FE4A  00                 	db	0
   398  00FE4B  00                 	db	0
   399  00FE4C  08                 	db	8
   400  00FE4D  14                 	db	20
   401  00FE4E  22                 	db	34
   402  00FE4F  41                 	db	65
   403  00FE50  14                 	db	20
   404  00FE51  14                 	db	20
   405  00FE52  14                 	db	20
   406  00FE53  14                 	db	20
   407  00FE54  14                 	db	20
   408  00FE55  00                 	db	0
   409  00FE56  41                 	db	65
   410  00FE57  22                 	db	34
   411  00FE58  14                 	db	20
   412  00FE59  08                 	db	8
   413  00FE5A  02                 	db	2
   414  00FE5B  01                 	db	1
   415  00FE5C  59                 	db	89
   416  00FE5D  09                 	db	9
   417  00FE5E  06                 	db	6
   418  00FE5F  3E                 	db	62
   419  00FE60  41                 	db	65
   420  00FE61  5D                 	db	93
   421  00FE62  59                 	db	89
   422  00FE63  4E                 	db	78
   423  00FE64  7C                 	db	124
   424  00FE65  12                 	db	18
   425  00FE66  11                 	db	17
   426  00FE67  12                 	db	18
   427  00FE68  7C                 	db	124
   428  00FE69  7F                 	db	127
   429  00FE6A  49                 	db	73
   430  00FE6B  49                 	db	73
   431  00FE6C  49                 	db	73
   432  00FE6D  36                 	db	54
   433  00FE6E  3E                 	db	62
   434  00FE6F  41                 	db	65
   435  00FE70  41                 	db	65
   436  00FE71  41                 	db	65
   437  00FE72  22                 	db	34
   438  00FE73  7F                 	db	127
   439  00FE74  41                 	db	65
   440  00FE75  41                 	db	65
   441  00FE76  41                 	db	65
   442  00FE77  3E                 	db	62
   443  00FE78  7F                 	db	127
   444  00FE79  49                 	db	73
   445  00FE7A  49                 	db	73
   446  00FE7B  49                 	db	73
   447  00FE7C  41                 	db	65
   448  00FE7D  7F                 	db	127
   449  00FE7E  09                 	db	9
   450  00FE7F  09                 	db	9
   451  00FE80  09                 	db	9
   452  00FE81  01                 	db	1
   453  00FE82  3E                 	db	62
   454  00FE83  41                 	db	65
   455  00FE84  41                 	db	65
   456  00FE85  51                 	db	81
   457  00FE86  73                 	db	115
   458  00FE87  7F                 	db	127
   459  00FE88  08                 	db	8
   460  00FE89  08                 	db	8
   461  00FE8A  08                 	db	8
   462  00FE8B  7F                 	db	127
   463  00FE8C  00                 	db	0
   464  00FE8D  41                 	db	65
   465  00FE8E  7F                 	db	127
   466  00FE8F  41                 	db	65
   467  00FE90  00                 	db	0
   468  00FE91  20                 	db	32
   469  00FE92  40                 	db	64
   470  00FE93  41                 	db	65
   471  00FE94  3F                 	db	63
   472  00FE95  01                 	db	1
   473  00FE96  7F                 	db	127
   474  00FE97  08                 	db	8
   475  00FE98  14                 	db	20
   476  00FE99  22                 	db	34
   477  00FE9A  41                 	db	65
   478  00FE9B  7F                 	db	127
   479  00FE9C  40                 	db	64
   480  00FE9D  40                 	db	64
   481  00FE9E  40                 	db	64
   482  00FE9F  40                 	db	64
   483  00FEA0  7F                 	db	127
   484  00FEA1  02                 	db	2
   485  00FEA2  1C                 	db	28
   486  00FEA3  02                 	db	2
   487  00FEA4  7F                 	db	127
   488  00FEA5  7F                 	db	127
   489  00FEA6  04                 	db	4
   490  00FEA7  08                 	db	8
   491  00FEA8  10                 	db	16
   492  00FEA9  7F                 	db	127
   493  00FEAA  3E                 	db	62
   494  00FEAB  41                 	db	65
   495  00FEAC  41                 	db	65
   496  00FEAD  41                 	db	65
   497  00FEAE  3E                 	db	62
   498  00FEAF  7F                 	db	127
   499  00FEB0  09                 	db	9
   500  00FEB1  09                 	db	9
   501  00FEB2  09                 	db	9
   502  00FEB3  06                 	db	6
   503  00FEB4  3E                 	db	62
   504  00FEB5  41                 	db	65
   505  00FEB6  51                 	db	81
   506  00FEB7  21                 	db	33
   507  00FEB8  5E                 	db	94
   508  00FEB9  7F                 	db	127
   509  00FEBA  09                 	db	9
   510  00FEBB  19                 	db	25
   511  00FEBC  29                 	db	41
   512  00FEBD  46                 	db	70
   513  00FEBE                     __end_of_font:
   514                           	opt stack 0
   515  00FEBE                     _font2:
   516                           	opt stack 0
   517  00FEBE  26                 	db	38
   518  00FEBF  49                 	db	73
   519  00FEC0  49                 	db	73
   520  00FEC1  49                 	db	73
   521  00FEC2  32                 	db	50
   522  00FEC3  03                 	db	3
   523  00FEC4  01                 	db	1
   524  00FEC5  7F                 	db	127
   525  00FEC6  01                 	db	1
   526  00FEC7  03                 	db	3
   527  00FEC8  3F                 	db	63
   528  00FEC9  40                 	db	64
   529  00FECA  40                 	db	64
   530  00FECB  40                 	db	64
   531  00FECC  3F                 	db	63
   532  00FECD  1F                 	db	31
   533  00FECE  20                 	db	32
   534  00FECF  40                 	db	64
   535  00FED0  20                 	db	32
   536  00FED1  1F                 	db	31
   537  00FED2  3F                 	db	63
   538  00FED3  40                 	db	64
   539  00FED4  38                 	db	56
   540  00FED5  40                 	db	64
   541  00FED6  3F                 	db	63
   542  00FED7  63                 	db	99
   543  00FED8  14                 	db	20
   544  00FED9  08                 	db	8
   545  00FEDA  14                 	db	20
   546  00FEDB  63                 	db	99
   547  00FEDC  03                 	db	3
   548  00FEDD  04                 	db	4
   549  00FEDE  78                 	db	120
   550  00FEDF  04                 	db	4
   551  00FEE0  03                 	db	3
   552  00FEE1  61                 	db	97
   553  00FEE2  59                 	db	89
   554  00FEE3  49                 	db	73
   555  00FEE4  4D                 	db	77
   556  00FEE5  43                 	db	67
   557  00FEE6  00                 	db	0
   558  00FEE7  7F                 	db	127
   559  00FEE8  41                 	db	65
   560  00FEE9  41                 	db	65
   561  00FEEA  41                 	db	65
   562  00FEEB  02                 	db	2
   563  00FEEC  04                 	db	4
   564  00FEED  08                 	db	8
   565  00FEEE  10                 	db	16
   566  00FEEF  20                 	db	32
   567  00FEF0  00                 	db	0
   568  00FEF1  41                 	db	65
   569  00FEF2  41                 	db	65
   570  00FEF3  41                 	db	65
   571  00FEF4  7F                 	db	127
   572  00FEF5  04                 	db	4
   573  00FEF6  02                 	db	2
   574  00FEF7  01                 	db	1
   575  00FEF8  02                 	db	2
   576  00FEF9  04                 	db	4
   577  00FEFA  40                 	db	64
   578  00FEFB  40                 	db	64
   579  00FEFC  40                 	db	64
   580  00FEFD  40                 	db	64
   581  00FEFE  40                 	db	64
   582  00FEFF  00                 	db	0
   583  00FF00  03                 	db	3
   584  00FF01  07                 	db	7
   585  00FF02  08                 	db	8
   586  00FF03  00                 	db	0
   587  00FF04  20                 	db	32
   588  00FF05  54                 	db	84
   589  00FF06  54                 	db	84
   590  00FF07  78                 	db	120
   591  00FF08  40                 	db	64
   592  00FF09  7F                 	db	127
   593  00FF0A  28                 	db	40
   594  00FF0B  44                 	db	68
   595  00FF0C  44                 	db	68
   596  00FF0D  38                 	db	56
   597  00FF0E  38                 	db	56
   598  00FF0F  44                 	db	68
   599  00FF10  44                 	db	68
   600  00FF11  44                 	db	68
   601  00FF12  28                 	db	40
   602  00FF13  38                 	db	56
   603  00FF14  44                 	db	68
   604  00FF15  44                 	db	68
   605  00FF16  28                 	db	40
   606  00FF17  7F                 	db	127
   607  00FF18  38                 	db	56
   608  00FF19  54                 	db	84
   609  00FF1A  54                 	db	84
   610  00FF1B  54                 	db	84
   611  00FF1C  18                 	db	24
   612  00FF1D  00                 	db	0
   613  00FF1E  08                 	db	8
   614  00FF1F  7E                 	db	126
   615  00FF20  09                 	db	9
   616  00FF21  02                 	db	2
   617  00FF22  18                 	db	24
   618  00FF23  A4                 	db	164
   619  00FF24  A4                 	db	164
   620  00FF25  9C                 	db	156
   621  00FF26  78                 	db	120
   622  00FF27  7F                 	db	127
   623  00FF28  08                 	db	8
   624  00FF29  04                 	db	4
   625  00FF2A  04                 	db	4
   626  00FF2B  78                 	db	120
   627  00FF2C  00                 	db	0
   628  00FF2D  44                 	db	68
   629  00FF2E  7D                 	db	125
   630  00FF2F  40                 	db	64
   631  00FF30  00                 	db	0
   632  00FF31  20                 	db	32
   633  00FF32  40                 	db	64
   634  00FF33  40                 	db	64
   635  00FF34  3D                 	db	61
   636  00FF35  00                 	db	0
   637  00FF36  7F                 	db	127
   638  00FF37  10                 	db	16
   639  00FF38  28                 	db	40
   640  00FF39  44                 	db	68
   641  00FF3A  00                 	db	0
   642  00FF3B  00                 	db	0
   643  00FF3C  41                 	db	65
   644  00FF3D  7F                 	db	127
   645  00FF3E  40                 	db	64
   646  00FF3F  00                 	db	0
   647  00FF40  7C                 	db	124
   648  00FF41  04                 	db	4
   649  00FF42  78                 	db	120
   650  00FF43  04                 	db	4
   651  00FF44  78                 	db	120
   652  00FF45  7C                 	db	124
   653  00FF46  08                 	db	8
   654  00FF47  04                 	db	4
   655  00FF48  04                 	db	4
   656  00FF49  78                 	db	120
   657  00FF4A  38                 	db	56
   658  00FF4B  44                 	db	68
   659  00FF4C  44                 	db	68
   660  00FF4D  44                 	db	68
   661  00FF4E  38                 	db	56
   662  00FF4F  FC                 	db	252
   663  00FF50  18                 	db	24
   664  00FF51  24                 	db	36
   665  00FF52  24                 	db	36
   666  00FF53  18                 	db	24
   667  00FF54  18                 	db	24
   668  00FF55  24                 	db	36
   669  00FF56  24                 	db	36
   670  00FF57  18                 	db	24
   671  00FF58  FC                 	db	252
   672  00FF59  7C                 	db	124
   673  00FF5A  08                 	db	8
   674  00FF5B  04                 	db	4
   675  00FF5C  04                 	db	4
   676  00FF5D  08                 	db	8
   677  00FF5E  48                 	db	72
   678  00FF5F  54                 	db	84
   679  00FF60  54                 	db	84
   680  00FF61  54                 	db	84
   681  00FF62  24                 	db	36
   682  00FF63  04                 	db	4
   683  00FF64  04                 	db	4
   684  00FF65  3F                 	db	63
   685  00FF66  44                 	db	68
   686  00FF67  24                 	db	36
   687  00FF68  3C                 	db	60
   688  00FF69  40                 	db	64
   689  00FF6A  40                 	db	64
   690  00FF6B  20                 	db	32
   691  00FF6C  7C                 	db	124
   692  00FF6D  1C                 	db	28
   693  00FF6E  20                 	db	32
   694  00FF6F  40                 	db	64
   695  00FF70  20                 	db	32
   696  00FF71  1C                 	db	28
   697  00FF72  3C                 	db	60
   698  00FF73  40                 	db	64
   699  00FF74  30                 	db	48
   700  00FF75  40                 	db	64
   701  00FF76  3C                 	db	60
   702  00FF77  44                 	db	68
   703  00FF78  28                 	db	40
   704  00FF79  10                 	db	16
   705  00FF7A  28                 	db	40
   706  00FF7B  44                 	db	68
   707  00FF7C  4C                 	db	76
   708  00FF7D  90                 	db	144
   709  00FF7E  90                 	db	144
   710  00FF7F  90                 	db	144
   711  00FF80  7C                 	db	124
   712  00FF81  44                 	db	68
   713  00FF82  64                 	db	100
   714  00FF83  54                 	db	84
   715  00FF84  4C                 	db	76
   716  00FF85  44                 	db	68
   717  00FF86  00                 	db	0
   718  00FF87  08                 	db	8
   719  00FF88  36                 	db	54
   720  00FF89  41                 	db	65
   721  00FF8A  00                 	db	0
   722  00FF8B  00                 	db	0
   723  00FF8C  00                 	db	0
   724  00FF8D  77                 	db	119
   725  00FF8E  00                 	db	0
   726  00FF8F  00                 	db	0
   727  00FF90  00                 	db	0
   728  00FF91  41                 	db	65
   729  00FF92  36                 	db	54
   730  00FF93  08                 	db	8
   731  00FF94  00                 	db	0
   732  00FF95  02                 	db	2
   733  00FF96  01                 	db	1
   734  00FF97  02                 	db	2
   735  00FF98  04                 	db	4
   736  00FF99  02                 	db	2
   737  00FF9A                     __end_of_font2:
   738                           	opt stack 0
   739  00FF9A                     _hexpowers:
   740                           	opt stack 0
   741  00FF9A  0001               	dw	1
   742  00FF9C  0000               	dw	0
   743  00FF9E  0010               	dw	16
   744  00FFA0  0000               	dw	0
   745  00FFA2  0100               	dw	256
   746  00FFA4  0000               	dw	0
   747  00FFA6  1000               	dw	4096
   748  00FFA8  0000               	dw	0
   749  00FFAA  0000               	dw	0
   750  00FFAC  0001               	dw	1
   751  00FFAE  0000               	dw	0
   752  00FFB0  0010               	dw	16
   753  00FFB2  0000               	dw	0
   754  00FFB4  0100               	dw	256
   755  00FFB6  0000               	dw	0
   756  00FFB8  1000               	dw	4096
   757  00FFBA                     __end_of_hexpowers:
   758                           	opt stack 0
   759  0000                     _ADCON1	set	4033
   760  0000                     _CCP2CON	set	4026
   761  0000                     _CCPR2L	set	4027
   762  0000                     _INTCON2bits	set	4081
   763  0000                     _INTCONbits	set	4082
   764  0000                     _OSCCON	set	4051
   765  0000                     _PIE1bits	set	3997
   766  0000                     _PIR1bits	set	3998
   767  0000                     _PIR2bits	set	4001
   768  0000                     _PORTBbits	set	3969
   769  0000                     _PORTCbits	set	3970
   770  0000                     _PORTD	set	3971
   771  0000                     _PORTE	set	3972
   772  0000                     _PR2	set	4043
   773  0000                     _RCSTA	set	4011
   774  0000                     _RCSTAbits	set	4011
   775  0000                     _SPBRG	set	4015
   776  0000                     _SPBRGH	set	4016
   777  0000                     _SSPBUF	set	4041
   778  0000                     _SSPCON1	set	4038
   779  0000                     _SSPSTAT	set	4039
   780  0000                     _SSPSTATbits	set	4039
   781  0000                     _T1CON	set	4045
   782  0000                     _T1CONbits	set	4045
   783  0000                     _T2CON	set	4042
   784  0000                     _T3CON	set	4017
   785  0000                     _T3CONbits	set	4017
   786  0000                     _TMR1H	set	4047
   787  0000                     _TMR1L	set	4046
   788  0000                     _TMR3H	set	4019
   789  0000                     _TMR3L	set	4018
   790  0000                     _TRISB	set	3987
   791  0000                     _TRISC	set	3988
   792  0000                     _TRISCbits	set	3988
   793  0000                     _TRISD	set	3989
   794  0000                     _TRISE	set	3990
   795  0000                     _TXREG	set	4013
   796  0000                     _TXSTA	set	4012
   797  0000                     _TXSTAbits	set	4012
   798  0000                     _TRMT	set	32097
   799  0000                     _nRBPU	set	32655
   800  00FFBA                     STR_1:
   801  00FFBA  4E                 	db	78	;'N'
   802  00FFBB  45                 	db	69	;'E'
   803  00FFBC  43                 	db	67	;'C'
   804  00FFBD  5F                 	db	95	;'_'
   805  00FFBE  43                 	db	67	;'C'
   806  00FFBF  6F                 	db	111	;'o'
   807  00FFC0  64                 	db	100	;'d'
   808  00FFC1  65                 	db	101	;'e'
   809  00FFC2  20                 	db	32
   810  00FFC3  3D                 	db	61	;'='
   811  00FFC4  20                 	db	32
   812  00FFC5  25                 	db	37
   813  00FFC6  30                 	db	48	;'0'
   814  00FFC7  38                 	db	56	;'8'
   815  00FFC8  6C                 	db	108	;'l'
   816  00FFC9  78                 	db	120	;'x'
   817  00FFCA  20                 	db	32
   818  00FFCB  25                 	db	37
   819  00FFCC  78                 	db	120	;'x'
   820  00FFCD  0D                 	db	13
   821  00FFCE  0A                 	db	10
   822  00FFCF  00                 	db	0
   823  00FFD0                     STR_2:
   824  00FFD0  45                 	db	69	;'E'
   825  00FFD1  43                 	db	67	;'C'
   826  00FFD2  45                 	db	69	;'E'
   827  00FFD3  33                 	db	51	;'3'
   828  00FFD4  33                 	db	51	;'3'
   829  00FFD5  30                 	db	48	;'0'
   830  00FFD6  31                 	db	49	;'1'
   831  00FFD7  4C                 	db	76	;'L'
   832  00FFD8  20                 	db	32
   833  00FFD9  53                 	db	83	;'S'
   834  00FFDA  70                 	db	112	;'p'
   835  00FFDB  72                 	db	114	;'r'
   836  00FFDC  69                 	db	105	;'i'
   837  00FFDD  6E                 	db	110	;'n'
   838  00FFDE  67                 	db	103	;'g'
   839  00FFDF  20                 	db	32
   840  00FFE0  32                 	db	50	;'2'
   841  00FFE1  31                 	db	49	;'1'
   842  00FFE2  2D                 	db	45
   843  00FFE3  53                 	db	83	;'S'
   844  00FFE4  33                 	db	51	;'3'
   845  00FFE5  00                 	db	0
   846  00FFE6                     STR_4:
   847  00FFE6  30                 	db	48	;'0'
   848  00FFE7  31                 	db	49	;'1'
   849  00FFE8  32                 	db	50	;'2'
   850  00FFE9  33                 	db	51	;'3'
   851  00FFEA  34                 	db	52	;'4'
   852  00FFEB  35                 	db	53	;'5'
   853  00FFEC  36                 	db	54	;'6'
   854  00FFED  37                 	db	55	;'7'
   855  00FFEE  38                 	db	56	;'8'
   856  00FFEF  39                 	db	57	;'9'
   857  00FFF0  61                 	db	97	;'a'
   858  00FFF1  62                 	db	98	;'b'
   859  00FFF2  63                 	db	99	;'c'
   860  00FFF3  64                 	db	100	;'d'
   861  00FFF4  65                 	db	101	;'e'
   862  00FFF5  66                 	db	102	;'f'
   863  00FFF6  00                 	db	0
   864  00FFF7                     STR_3:
   865  00FFF7  4C                 	db	76	;'L'
   866  00FFF8  41                 	db	65	;'A'
   867  00FFF9  42                 	db	66	;'B'
   868  00FFFA  20                 	db	32
   869  00FFFB  31                 	db	49	;'1'
   870  00FFFC  30                 	db	48	;'0'
   871  00FFFD  20                 	db	32
   872  00FFFE  00                 	db	0
   873                           
   874                           ; #config settings
   875  00FFFF  00                 	db	0	; dummy byte at the end
   876  0000                     
   877                           	psect	cinit
   878  000F72                     __pcinit:
   879                           	opt stack 0
   880  000F72                     start_initialization:
   881                           	opt stack 0
   882  000F72                     __initialization:
   883                           	opt stack 0
   884                           
   885                           ; Clear objects allocated to BANK0 (31 bytes)
   886  000F72  EE00  F0D4         	lfsr	0,__pbssBANK0
   887  000F76  0E1F               	movlw	31
   888  000F78                     clear_0:
   889  000F78  6AEE               	clrf	postinc0,c
   890  000F7A  06E8               	decf	wreg,f,c
   891  000F7C  E1FD               	bnz	clear_0
   892                           
   893                           ; Clear objects allocated to COMRAM (19 bytes)
   894  000F7E  EE00  F05D         	lfsr	0,__pbssCOMRAM
   895  000F82  0E13               	movlw	19
   896  000F84                     clear_1:
   897  000F84  6AEE               	clrf	postinc0,c
   898  000F86  06E8               	decf	wreg,f,c
   899  000F88  E1FD               	bnz	clear_1
   900                           
   901                           ; Initialize objects allocated to BANK1 (126 bytes)
   902                           ; load TBLPTR registers with __pidataBANK1
   903  000F8A  0EF4               	movlw	low __pidataBANK1
   904  000F8C  6EF6               	movwf	tblptrl,c
   905  000F8E  0E0F               	movlw	high __pidataBANK1
   906  000F90  6EF7               	movwf	tblptrh,c
   907  000F92  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   908  000F94  6EF8               	movwf	tblptru,c
   909  000F96  EE01  F000         	lfsr	0,__pdataBANK1
   910  000F9A  EE10 F07E          	lfsr	1,126
   911  000F9E                     copy_data0:
   912  000F9E  0009               	tblrd		*+
   913  000FA0  CFF5 FFEE          	movff	tablat,postinc0
   914  000FA4  50E5               	movf	postdec1,w,c
   915  000FA6  50E1               	movf	fsr1l,w,c
   916  000FA8  E1FA               	bnz	copy_data0
   917                           
   918                           ; Initialize objects allocated to BANK0 (84 bytes)
   919                           ; load TBLPTR registers with __pidataBANK0
   920  000FAA  0E5E               	movlw	low __pidataBANK0
   921  000FAC  6EF6               	movwf	tblptrl,c
   922  000FAE  0E11               	movlw	high __pidataBANK0
   923  000FB0  6EF7               	movwf	tblptrh,c
   924  000FB2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   925  000FB4  6EF8               	movwf	tblptru,c
   926  000FB6  EE00  F080         	lfsr	0,__pdataBANK0
   927  000FBA  EE10 F054          	lfsr	1,84
   928  000FBE                     copy_data1:
   929  000FBE  0009               	tblrd		*+
   930  000FC0  CFF5 FFEE          	movff	tablat,postinc0
   931  000FC4  50E5               	movf	postdec1,w,c
   932  000FC6  50E1               	movf	fsr1l,w,c
   933  000FC8  E1FA               	bnz	copy_data1
   934                           
   935                           ; Initialize objects allocated to COMRAM (22 bytes)
   936                           ; load TBLPTR registers with __pidataCOMRAM
   937  000FCA  0E80               	movlw	low __pidataCOMRAM
   938  000FCC  6EF6               	movwf	tblptrl,c
   939  000FCE  0E14               	movlw	high __pidataCOMRAM
   940  000FD0  6EF7               	movwf	tblptrh,c
   941  000FD2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   942  000FD4  6EF8               	movwf	tblptru,c
   943  000FD6  EE00  F047         	lfsr	0,__pdataCOMRAM
   944  000FDA  EE10 F016          	lfsr	1,22
   945  000FDE                     copy_data2:
   946  000FDE  0009               	tblrd		*+
   947  000FE0  CFF5 FFEE          	movff	tablat,postinc0
   948  000FE4  50E5               	movf	postdec1,w,c
   949  000FE6  50E1               	movf	fsr1l,w,c
   950  000FE8  E1FA               	bnz	copy_data2
   951  000FEA                     end_of_initialization:
   952                           	opt stack 0
   953  000FEA                     __end_of__initialization:
   954                           	opt stack 0
   955  000FEA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   956  000FEC  6EF8               	movwf	tblptru,c
   957  000FEE  0100               	movlb	0
   958  000FF0  EF36  F002         	goto	_main	;jump to C main() function
   959                           tblptru	equ	0xFF8
   960                           tblptrh	equ	0xFF7
   961                           tblptrl	equ	0xFF6
   962                           tablat	equ	0xFF5
   963                           postinc0	equ	0xFEE
   964                           wreg	equ	0xFE8
   965                           postdec1	equ	0xFE5
   966                           fsr1l	equ	0xFE1
   967                           
   968                           	psect	bssCOMRAM
   969  00005D                     __pbssCOMRAM:
   970                           	opt stack 0
   971  00005D                     _Nec_code:
   972                           	opt stack 0
   973  00005D                     	ds	4
   974  000061                     _Time_Elapsed:
   975                           	opt stack 0
   976  000061                     	ds	2
   977  000063                     _nbr:
   978                           	opt stack 0
   979  000063                     	ds	2
   980  000065                     _nec_ok:
   981                           	opt stack 0
   982  000065                     	ds	2
   983  000067                     _txt:
   984                           	opt stack 0
   985  000067                     	ds	2
   986  000069                     _Nec_code1:
   987                           	opt stack 0
   988  000069                     	ds	1
   989  00006A                     _Nec_state:
   990                           	opt stack 0
   991  00006A                     	ds	1
   992  00006B                     __tft_type:
   993                           	opt stack 0
   994  00006B                     	ds	1
   995  00006C                     _bit_count:
   996                           	opt stack 0
   997  00006C                     	ds	1
   998  00006D                     _colstart:
   999                           	opt stack 0
  1000  00006D                     	ds	1
  1001  00006E                     _i:
  1002                           	opt stack 0
  1003  00006E                     	ds	1
  1004  00006F                     _rowstart:
  1005                           	opt stack 0
  1006  00006F                     	ds	1
  1007                           tblptru	equ	0xFF8
  1008                           tblptrh	equ	0xFF7
  1009                           tblptrl	equ	0xFF6
  1010                           tablat	equ	0xFF5
  1011                           postinc0	equ	0xFEE
  1012                           wreg	equ	0xFE8
  1013                           postdec1	equ	0xFE5
  1014                           fsr1l	equ	0xFE1
  1015                           
  1016                           	psect	dataCOMRAM
  1017  000047                     __pdataCOMRAM:
  1018                           	opt stack 0
  1019  000047                     _array1:
  1020                           	opt stack 0
  1021  000047                     	ds	21
  1022  00005C                     _wrap:
  1023                           	opt stack 0
  1024  00005C                     	ds	1
  1025                           tblptru	equ	0xFF8
  1026                           tblptrh	equ	0xFF7
  1027                           tblptrl	equ	0xFF6
  1028                           tablat	equ	0xFF5
  1029                           postinc0	equ	0xFEE
  1030                           wreg	equ	0xFE8
  1031                           postdec1	equ	0xFE5
  1032                           fsr1l	equ	0xFE1
  1033                           
  1034                           	psect	bssBANK0
  1035  0000D4                     __pbssBANK0:
  1036                           	opt stack 0
  1037  0000D4                     _buffer:
  1038                           	opt stack 0
  1039  0000D4                     	ds	31
  1040                           tblptru	equ	0xFF8
  1041                           tblptrh	equ	0xFF7
  1042                           tblptrl	equ	0xFF6
  1043                           tablat	equ	0xFF5
  1044                           postinc0	equ	0xFEE
  1045                           wreg	equ	0xFE8
  1046                           postdec1	equ	0xFE5
  1047                           fsr1l	equ	0xFE1
  1048                           
  1049                           	psect	dataBANK0
  1050  000080                     __pdataBANK0:
  1051                           	opt stack 0
  1052  000080                     _color:
  1053                           	opt stack 0
  1054  000080                     	ds	42
  1055  0000AA                     _colord1:
  1056                           	opt stack 0
  1057  0000AA                     	ds	42
  1058                           tblptru	equ	0xFF8
  1059                           tblptrh	equ	0xFF7
  1060                           tblptrl	equ	0xFF6
  1061                           tablat	equ	0xFF5
  1062                           postinc0	equ	0xFEE
  1063                           wreg	equ	0xFE8
  1064                           postdec1	equ	0xFE5
  1065                           fsr1l	equ	0xFE1
  1066                           
  1067                           	psect	dataBANK1
  1068  000100                     __pdataBANK1:
  1069                           	opt stack 0
  1070  000100                     _colord2:
  1071                           	opt stack 0
  1072  000100                     	ds	42
  1073  00012A                     _txt1:
  1074                           	opt stack 0
  1075  00012A                     	ds	84
  1076                           tblptru	equ	0xFF8
  1077                           tblptrh	equ	0xFF7
  1078                           tblptrl	equ	0xFF6
  1079                           tablat	equ	0xFF5
  1080                           postinc0	equ	0xFEE
  1081                           wreg	equ	0xFE8
  1082                           postdec1	equ	0xFE5
  1083                           fsr1l	equ	0xFE1
  1084                           
  1085                           	psect	cstackBANK0
  1086  0000F3                     __pcstackBANK0:
  1087                           	opt stack 0
  1088  0000F3                     drawtext@x:
  1089                           	opt stack 0
  1090                           
  1091                           ; 1 bytes @ 0x0
  1092  0000F3                     	ds	1
  1093  0000F4                     drawtext@textsize:
  1094                           	opt stack 0
  1095                           
  1096                           ; 2 bytes @ 0x1
  1097  0000F4                     	ds	2
  1098  0000F6                     drawtext@i:
  1099                           	opt stack 0
  1100                           
  1101                           ; 2 bytes @ 0x3
  1102  0000F6                     	ds	2
  1103  0000F8                     drawtext@cursor_y:
  1104                           	opt stack 0
  1105                           
  1106                           ; 1 bytes @ 0x5
  1107  0000F8                     	ds	1
  1108  0000F9                     drawtext@cursor_x:
  1109                           	opt stack 0
  1110                           
  1111                           ; 1 bytes @ 0x6
  1112  0000F9                     	ds	1
  1113                           tblptru	equ	0xFF8
  1114                           tblptrh	equ	0xFF7
  1115                           tblptrl	equ	0xFF6
  1116                           tablat	equ	0xFF5
  1117                           postinc0	equ	0xFEE
  1118                           wreg	equ	0xFE8
  1119                           postdec1	equ	0xFE5
  1120                           fsr1l	equ	0xFE1
  1121                           
  1122                           	psect	cstackCOMRAM
  1123  000001                     __pcstackCOMRAM:
  1124                           	opt stack 0
  1125  000001                     ??_INT0_isr:
  1126  000001                     
  1127                           ; 0 bytes @ 0x0
  1128  000001                     	ds	2
  1129  000003                     ??_chkisr:
  1130                           
  1131                           ; 0 bytes @ 0x2
  1132  000003                     	ds	14
  1133  000011                     ??_isdigit:
  1134  000011                     ?_strlen:
  1135                           	opt stack 0
  1136  000011                     ?___wmul:
  1137                           	opt stack 0
  1138  000011                     ?___lldiv:
  1139                           	opt stack 0
  1140  000011                     putch@c:
  1141                           	opt stack 0
  1142  000011                     spiwrite@x:
  1143                           	opt stack 0
  1144  000011                     Wait_One_Sec@k:
  1145                           	opt stack 0
  1146  000011                     OpenUSART@spbrg:
  1147                           	opt stack 0
  1148  000011                     ___wmul@multiplier:
  1149                           	opt stack 0
  1150  000011                     strcpy@to:
  1151                           	opt stack 0
  1152  000011                     strlen@s:
  1153                           	opt stack 0
  1154  000011                     ___lldiv@dividend:
  1155                           	opt stack 0
  1156                           
  1157                           ; 4 bytes @ 0x10
  1158  000011                     	ds	1
  1159  000012                     spiwrite@spidata:
  1160                           	opt stack 0
  1161  000012                     _isdigit$1613:
  1162                           	opt stack 0
  1163                           
  1164                           ; 1 bytes @ 0x11
  1165  000012                     	ds	1
  1166  000013                     ??_strlen:
  1167  000013                     write_command@cmd_:
  1168                           	opt stack 0
  1169  000013                     write_data@data_:
  1170                           	opt stack 0
  1171  000013                     OpenUSART@config:
  1172                           	opt stack 0
  1173  000013                     isdigit@c:
  1174                           	opt stack 0
  1175  000013                     ___wmul@multiplicand:
  1176                           	opt stack 0
  1177  000013                     strcpy@from:
  1178                           	opt stack 0
  1179                           
  1180                           ; 2 bytes @ 0x12
  1181  000013                     	ds	1
  1182  000014                     setAddrWindow@y0:
  1183                           	opt stack 0
  1184                           
  1185                           ; 1 bytes @ 0x13
  1186  000014                     	ds	1
  1187  000015                     setAddrWindow@x1:
  1188                           	opt stack 0
  1189  000015                     ___wmul@product:
  1190                           	opt stack 0
  1191  000015                     strcpy@cp:
  1192                           	opt stack 0
  1193  000015                     strlen@cp:
  1194                           	opt stack 0
  1195  000015                     ___lldiv@divisor:
  1196                           	opt stack 0
  1197                           
  1198                           ; 4 bytes @ 0x14
  1199  000015                     	ds	1
  1200  000016                     setAddrWindow@y1:
  1201                           	opt stack 0
  1202                           
  1203                           ; 1 bytes @ 0x15
  1204  000016                     	ds	1
  1205  000017                     setAddrWindow@x0:
  1206                           	opt stack 0
  1207  000017                     delay_ms@ms:
  1208                           	opt stack 0
  1209                           
  1210                           ; 2 bytes @ 0x16
  1211  000017                     	ds	1
  1212  000018                     drawPixel@y:
  1213                           	opt stack 0
  1214  000018                     drawFastVLine@y:
  1215                           	opt stack 0
  1216  000018                     fillRectangle@y:
  1217                           	opt stack 0
  1218                           
  1219                           ; 1 bytes @ 0x17
  1220  000018                     	ds	1
  1221  000019                     ??_delay_ms:
  1222  000019                     drawFastVLine@h:
  1223                           	opt stack 0
  1224  000019                     fillRectangle@w:
  1225                           	opt stack 0
  1226  000019                     drawPixel@color:
  1227                           	opt stack 0
  1228  000019                     ___lldiv@quotient:
  1229                           	opt stack 0
  1230                           
  1231                           ; 4 bytes @ 0x18
  1232  000019                     	ds	1
  1233  00001A                     fillRectangle@h:
  1234                           	opt stack 0
  1235  00001A                     drawFastVLine@color:
  1236                           	opt stack 0
  1237                           
  1238                           ; 2 bytes @ 0x19
  1239  00001A                     	ds	1
  1240  00001B                     drawPixel@x:
  1241                           	opt stack 0
  1242  00001B                     delay_ms@count:
  1243                           	opt stack 0
  1244  00001B                     fillRectangle@color:
  1245                           	opt stack 0
  1246                           
  1247                           ; 2 bytes @ 0x1A
  1248  00001B                     	ds	1
  1249  00001C                     ??_drawFastVLine:
  1250  00001C                     drawCircle@x0:
  1251                           	opt stack 0
  1252                           
  1253                           ; 2 bytes @ 0x1B
  1254  00001C                     	ds	1
  1255  00001D                     ??_fillRectangle:
  1256  00001D                     ___lldiv@counter:
  1257                           	opt stack 0
  1258                           
  1259                           ; 1 bytes @ 0x1C
  1260  00001D                     	ds	1
  1261  00001E                     ?_printf:
  1262                           	opt stack 0
  1263  00001E                     drawCircle@y0:
  1264                           	opt stack 0
  1265  00001E                     printf@f:
  1266                           	opt stack 0
  1267                           
  1268                           ; 2 bytes @ 0x1D
  1269  00001E                     	ds	2
  1270  000020                     drawFastVLine@hi:
  1271                           	opt stack 0
  1272  000020                     drawCircle@r:
  1273                           	opt stack 0
  1274                           
  1275                           ; 2 bytes @ 0x1F
  1276  000020                     	ds	1
  1277  000021                     drawFastVLine@lo:
  1278                           	opt stack 0
  1279  000021                     fillRectangle@hi:
  1280                           	opt stack 0
  1281                           
  1282                           ; 1 bytes @ 0x20
  1283  000021                     	ds	1
  1284  000022                     drawFastVLine@x:
  1285                           	opt stack 0
  1286  000022                     fillRectangle@lo:
  1287                           	opt stack 0
  1288  000022                     drawCircle@color:
  1289                           	opt stack 0
  1290                           
  1291                           ; 2 bytes @ 0x21
  1292  000022                     	ds	1
  1293  000023                     fillRect@y:
  1294                           	opt stack 0
  1295  000023                     fillRectangle@x:
  1296                           	opt stack 0
  1297  000023                     fillCircleHelper@x0:
  1298                           	opt stack 0
  1299                           
  1300                           ; 2 bytes @ 0x22
  1301  000023                     	ds	1
  1302  000024                     ??_drawCircle:
  1303  000024                     fillRect@w:
  1304                           	opt stack 0
  1305  000024                     fillScreen@color:
  1306                           	opt stack 0
  1307                           
  1308                           ; 2 bytes @ 0x23
  1309  000024                     	ds	1
  1310  000025                     fillRect@h:
  1311                           	opt stack 0
  1312  000025                     fillCircleHelper@y0:
  1313                           	opt stack 0
  1314                           
  1315                           ; 2 bytes @ 0x24
  1316  000025                     	ds	1
  1317  000026                     ??_printf:
  1318  000026                     fillRect@color:
  1319                           	opt stack 0
  1320  000026                     drawCircle@ddF_x:
  1321                           	opt stack 0
  1322                           
  1323                           ; 2 bytes @ 0x25
  1324  000026                     	ds	1
  1325  000027                     fillCircleHelper@r:
  1326                           	opt stack 0
  1327                           
  1328                           ; 2 bytes @ 0x26
  1329  000027                     	ds	1
  1330  000028                     ??_fillRect:
  1331  000028                     drawCircle@ddF_y:
  1332                           	opt stack 0
  1333                           
  1334                           ; 2 bytes @ 0x27
  1335  000028                     	ds	1
  1336  000029                     fillCircleHelper@cornername:
  1337                           	opt stack 0
  1338                           
  1339                           ; 2 bytes @ 0x28
  1340  000029                     	ds	1
  1341  00002A                     printf@idx:
  1342                           	opt stack 0
  1343  00002A                     drawCircle@f:
  1344                           	opt stack 0
  1345                           
  1346                           ; 2 bytes @ 0x29
  1347  00002A                     	ds	1
  1348  00002B                     fillRect@x:
  1349                           	opt stack 0
  1350  00002B                     fillCircleHelper@delta:
  1351                           	opt stack 0
  1352  00002B                     printf@prec:
  1353                           	opt stack 0
  1354                           
  1355                           ; 2 bytes @ 0x2A
  1356  00002B                     	ds	1
  1357  00002C                     fillRect@i:
  1358                           	opt stack 0
  1359  00002C                     drawCircle@x:
  1360                           	opt stack 0
  1361                           
  1362                           ; 2 bytes @ 0x2B
  1363  00002C                     	ds	1
  1364  00002D                     fillCircleHelper@color:
  1365                           	opt stack 0
  1366  00002D                     printf@val:
  1367                           	opt stack 0
  1368                           
  1369                           ; 4 bytes @ 0x2C
  1370  00002D                     	ds	1
  1371  00002E                     drawChar@y:
  1372                           	opt stack 0
  1373  00002E                     drawCircle@y:
  1374                           	opt stack 0
  1375                           
  1376                           ; 2 bytes @ 0x2D
  1377  00002E                     	ds	1
  1378  00002F                     ??_fillCircleHelper:
  1379  00002F                     drawChar@c:
  1380                           	opt stack 0
  1381                           
  1382                           ; 1 bytes @ 0x2E
  1383  00002F                     	ds	1
  1384  000030                     drawChar@color:
  1385                           	opt stack 0
  1386                           
  1387                           ; 2 bytes @ 0x2F
  1388  000030                     	ds	1
  1389  000031                     fillCircleHelper@ddF_x:
  1390                           	opt stack 0
  1391  000031                     printf@ap:
  1392                           	opt stack 0
  1393                           
  1394                           ; 2 bytes @ 0x30
  1395  000031                     	ds	1
  1396  000032                     drawChar@bg:
  1397                           	opt stack 0
  1398                           
  1399                           ; 2 bytes @ 0x31
  1400  000032                     	ds	1
  1401  000033                     printf@flag:
  1402                           	opt stack 0
  1403  000033                     fillCircleHelper@ddF_y:
  1404                           	opt stack 0
  1405                           
  1406                           ; 2 bytes @ 0x32
  1407  000033                     	ds	1
  1408  000034                     drawChar@size:
  1409                           	opt stack 0
  1410  000034                     printf@width:
  1411                           	opt stack 0
  1412                           
  1413                           ; 2 bytes @ 0x33
  1414  000034                     	ds	1
  1415  000035                     drawChar@line:
  1416                           	opt stack 0
  1417  000035                     fillCircleHelper@f:
  1418                           	opt stack 0
  1419                           
  1420                           ; 2 bytes @ 0x34
  1421  000035                     	ds	1
  1422  000036                     drawChar@x:
  1423                           	opt stack 0
  1424  000036                     printf@c:
  1425                           	opt stack 0
  1426                           
  1427                           ; 1 bytes @ 0x35
  1428  000036                     	ds	1
  1429  000037                     drawChar@j:
  1430                           	opt stack 0
  1431  000037                     fillCircleHelper@x:
  1432                           	opt stack 0
  1433                           
  1434                           ; 2 bytes @ 0x36
  1435  000037                     	ds	1
  1436  000038                     drawChar@i:
  1437                           	opt stack 0
  1438                           
  1439                           ; 1 bytes @ 0x37
  1440  000038                     	ds	1
  1441  000039                     drawtext@y:
  1442                           	opt stack 0
  1443  000039                     fillCircleHelper@y:
  1444                           	opt stack 0
  1445                           
  1446                           ; 2 bytes @ 0x38
  1447  000039                     	ds	1
  1448  00003A                     drawtext@_text:
  1449                           	opt stack 0
  1450                           
  1451                           ; 2 bytes @ 0x39
  1452  00003A                     	ds	1
  1453  00003B                     fillCircle@x0:
  1454                           	opt stack 0
  1455                           
  1456                           ; 2 bytes @ 0x3A
  1457  00003B                     	ds	1
  1458  00003C                     drawtext@color:
  1459                           	opt stack 0
  1460                           
  1461                           ; 2 bytes @ 0x3B
  1462  00003C                     	ds	1
  1463  00003D                     fillCircle@y0:
  1464                           	opt stack 0
  1465                           
  1466                           ; 2 bytes @ 0x3C
  1467  00003D                     	ds	1
  1468  00003E                     drawtext@bg:
  1469                           	opt stack 0
  1470                           
  1471                           ; 2 bytes @ 0x3D
  1472  00003E                     	ds	1
  1473  00003F                     fillCircle@r:
  1474                           	opt stack 0
  1475                           
  1476                           ; 2 bytes @ 0x3E
  1477  00003F                     	ds	1
  1478  000040                     drawtext@size:
  1479                           	opt stack 0
  1480                           
  1481                           ; 1 bytes @ 0x3F
  1482  000040                     	ds	1
  1483  000041                     ??_drawtext:
  1484  000041                     fillCircle@color:
  1485                           	opt stack 0
  1486                           
  1487                           ; 2 bytes @ 0x40
  1488  000041                     	ds	2
  1489  000043                     
  1490                           ; 0 bytes @ 0x42
  1491  000043                     	ds	1
  1492  000044                     main@i:
  1493                           	opt stack 0
  1494                           
  1495                           ; 2 bytes @ 0x43
  1496  000044                     	ds	2
  1497  000046                     main@found:
  1498                           	opt stack 0
  1499                           
  1500                           ; 1 bytes @ 0x45
  1501  000046                     	ds	1
  1502                           tblptru	equ	0xFF8
  1503                           tblptrh	equ	0xFF7
  1504                           tblptrl	equ	0xFF6
  1505                           tablat	equ	0xFF5
  1506                           postinc0	equ	0xFEE
  1507                           wreg	equ	0xFE8
  1508                           postdec1	equ	0xFE5
  1509                           fsr1l	equ	0xFE1
  1510                           
  1511 ;;
  1512 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1513 ;;
  1514 ;; *************** function _main *****************
  1515 ;; Defined at:
  1516 ;;		line 203 in file "Lab10.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;		None
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;  i               2   67[COMRAM] int 
  1521 ;;  found           1   69[COMRAM] unsigned char 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;		None               void
  1524 ;; Registers used:
  1525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1532 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1534 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1535 ;;Total ram usage:        4 bytes
  1536 ;; Hardware stack levels required when called:   11
  1537 ;; This function calls:
  1538 ;;		_Activate_Buzzer
  1539 ;;		_Deactivate_Buzzer
  1540 ;;		_Initialize_Screen
  1541 ;;		_Wait_One_Sec
  1542 ;;		_drawCircle
  1543 ;;		_drawtext
  1544 ;;		_fillCircle
  1545 ;;		_init_UART
  1546 ;;		_printf
  1547 ;; This function is called by:
  1548 ;;		Startup code after reset
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           	psect	text0
  1553  00046C                     __ptext0:
  1554                           	opt stack 0
  1555  00046C                     _main:
  1556                           	opt stack 20
  1557                           
  1558                           ;Lab10.c: 205: init_UART();
  1559                           
  1560                           ;incstack = 0
  1561  00046C  EC4B  F00A         	call	_init_UART	;wreg free
  1562                           
  1563                           ;Lab10.c: 206: OSCCON = 0x70;
  1564  000470  0E70               	movlw	112
  1565  000472  6ED3               	movwf	4051,c	;volatile
  1566                           
  1567                           ;Lab10.c: 207: nRBPU = 0;
  1568  000474  9EF1               	bcf	intcon2,7,c	;volatile
  1569                           
  1570                           ;Lab10.c: 208: TRISB = 0x01;
  1571  000476  0E01               	movlw	1
  1572  000478  6E93               	movwf	3987,c	;volatile
  1573                           
  1574                           ;Lab10.c: 209: TRISC = 0x00;
  1575  00047A  0E00               	movlw	0
  1576  00047C  6E94               	movwf	3988,c	;volatile
  1577                           
  1578                           ;Lab10.c: 210: TRISD = 0x00;
  1579  00047E  0E00               	movlw	0
  1580  000480  6E95               	movwf	3989,c	;volatile
  1581                           
  1582                           ;Lab10.c: 211: TRISE= 0x00;
  1583  000482  0E00               	movlw	0
  1584  000484  6E96               	movwf	3990,c	;volatile
  1585                           
  1586                           ;Lab10.c: 212: ADCON1 = 0x0F;
  1587  000486  0E0F               	movlw	15
  1588  000488  6EC1               	movwf	4033,c	;volatile
  1589                           
  1590                           ;Lab10.c: 213: Initialize_Screen();
  1591  00048A  ECE8  F006         	call	_Initialize_Screen	;wreg free
  1592                           
  1593                           ;Lab10.c: 214: INTCONbits.INT0IF = 0;
  1594  00048E  92F2               	bcf	intcon,1,c	;volatile
  1595                           
  1596                           ;Lab10.c: 215: INTCON2bits.INTEDG0 = 0;
  1597  000490  9CF1               	bcf	intcon2,6,c	;volatile
  1598                           
  1599                           ;Lab10.c: 216: INTCONbits.INT0IE = 1;
  1600  000492  88F2               	bsf	intcon,4,c	;volatile
  1601                           
  1602                           ;Lab10.c: 217: TMR1H = 0;
  1603  000494  0E00               	movlw	0
  1604  000496  6ECF               	movwf	4047,c	;volatile
  1605                           
  1606                           ;Lab10.c: 218: TMR1L = 0;
  1607  000498  0E00               	movlw	0
  1608  00049A  6ECE               	movwf	4046,c	;volatile
  1609                           
  1610                           ;Lab10.c: 219: PIR1bits.TMR1IF = 0;
  1611  00049C  909E               	bcf	3998,0,c	;volatile
  1612                           
  1613                           ;Lab10.c: 220: PIE1bits.TMR1IE = 1;
  1614  00049E  809D               	bsf	3997,0,c	;volatile
  1615                           
  1616                           ;Lab10.c: 221: INTCONbits.PEIE = 1;
  1617  0004A0  8CF2               	bsf	intcon,6,c	;volatile
  1618                           
  1619                           ;Lab10.c: 222: INTCONbits.GIE = 1;
  1620  0004A2  8EF2               	bsf	intcon,7,c	;volatile
  1621                           
  1622                           ;Lab10.c: 223: nec_ok = 0;
  1623  0004A4  0E00               	movlw	0
  1624  0004A6  6E66               	movwf	_nec_ok+1,c
  1625  0004A8  0E00               	movlw	0
  1626  0004AA  6E65               	movwf	_nec_ok,c
  1627                           
  1628                           ;Lab10.c: 224: Nec_code = 0x0;
  1629  0004AC  0E00               	movlw	0
  1630  0004AE  6E5D               	movwf	_Nec_code,c
  1631  0004B0  0E00               	movlw	0
  1632  0004B2  6E5E               	movwf	_Nec_code+1,c
  1633  0004B4  0E00               	movlw	0
  1634  0004B6  6E5F               	movwf	_Nec_code+2,c
  1635  0004B8  0E00               	movlw	0
  1636  0004BA  6E60               	movwf	_Nec_code+3,c
  1637  0004BC  D000               	goto	l3735
  1638  0004BE                     l3735:
  1639                           
  1640                           ;Lab10.c: 227: {
  1641                           ;Lab10.c: 228: if (nec_ok == 1)
  1642  0004BE  0465               	decf	_nec_ok,w,c
  1643  0004C0  1066               	iorwf	_nec_ok+1,w,c
  1644  0004C2  A4D8               	btfss	status,2,c
  1645  0004C4  D7FC               	goto	l3735
  1646                           
  1647                           ;Lab10.c: 229: {
  1648                           ;Lab10.c: 230: nec_ok = 0;
  1649  0004C6  0E00               	movlw	0
  1650  0004C8  6E66               	movwf	_nec_ok+1,c
  1651  0004CA  0E00               	movlw	0
  1652  0004CC  6E65               	movwf	_nec_ok,c
  1653                           
  1654                           ;Lab10.c: 232: Nec_code1 = (char) ((Nec_code >> 8));
  1655  0004CE  C05E  F069         	movff	_Nec_code+1,_Nec_code1
  1656                           
  1657                           ;Lab10.c: 233: printf ("NEC_Code = %08lx %x\r\n", Nec_code, Nec_code1);
  1658  0004D2  0EBA               	movlw	low STR_1
  1659  0004D4  6E1E               	movwf	printf@f,c
  1660  0004D6  0EFF               	movlw	high STR_1
  1661  0004D8  6E1F               	movwf	printf@f+1,c
  1662  0004DA  C05D  F020         	movff	_Nec_code,?_printf+2
  1663  0004DE  C05E  F021         	movff	_Nec_code+1,?_printf+3
  1664  0004E2  C05F  F022         	movff	_Nec_code+2,?_printf+4
  1665  0004E6  C060  F023         	movff	_Nec_code+3,?_printf+5
  1666  0004EA  C069  F024         	movff	_Nec_code1,?_printf+6
  1667  0004EE  6A25               	clrf	?_printf+7,c
  1668  0004F0  EC0E  F000         	call	_printf	;wreg free
  1669                           
  1670                           ;Lab10.c: 234: INTCONbits.INT0IE = 1;
  1671  0004F4  88F2               	bsf	intcon,4,c	;volatile
  1672                           
  1673                           ;Lab10.c: 235: INTCON2bits.INTEDG0 = 0;
  1674  0004F6  9CF1               	bcf	intcon2,6,c	;volatile
  1675                           
  1676                           ;Lab10.c: 237: char found = 0xff;
  1677  0004F8  6846               	setf	main@found,c
  1678                           
  1679                           ;Lab10.c: 239: for (int i=0; i < 21; i++){
  1680  0004FA  0E00               	movlw	0
  1681  0004FC  6E45               	movwf	main@i+1,c
  1682  0004FE  0E00               	movlw	0
  1683  000500  6E44               	movwf	main@i,c
  1684  000502                     l3751:
  1685  000502  BE45               	btfsc	main@i+1,7,c
  1686  000504  D008               	goto	l3755
  1687  000506  5045               	movf	main@i+1,w,c
  1688  000508  E117               	bnz	l3763
  1689  00050A  0E15               	movlw	21
  1690  00050C  5C44               	subwf	main@i,w,c
  1691  00050E  B0D8               	btfsc	status,0,c
  1692  000510  D013               	goto	l3763
  1693  000512  D001               	goto	l3755
  1694  000514  D011               	goto	l3763
  1695  000516                     l3755:
  1696                           
  1697                           ;Lab10.c: 240: if (Nec_code1 == array1[i]){
  1698  000516  0E47               	movlw	low _array1
  1699  000518  2444               	addwf	main@i,w,c
  1700  00051A  6ED9               	movwf	fsr2l,c
  1701  00051C  0E00               	movlw	high _array1
  1702  00051E  2045               	addwfc	main@i+1,w,c
  1703  000520  6EDA               	movwf	fsr2h,c
  1704  000522  5069               	movf	_Nec_code1,w,c
  1705  000524  18DE               	xorwf	postinc2,w,c
  1706  000526  A4D8               	btfss	status,2,c
  1707  000528  D003               	goto	l3759
  1708                           
  1709                           ;Lab10.c: 241: found= i;
  1710  00052A  C044  F046         	movff	main@i,main@found
  1711  00052E  D000               	goto	l3759
  1712  000530                     l3759:
  1713  000530  4A44               	infsnz	main@i,f,c
  1714  000532  2A45               	incf	main@i+1,f,c
  1715  000534  D7E6               	goto	l3751
  1716  000536  D000               	goto	l3763
  1717  000538                     l3763:
  1718                           
  1719                           ;Lab10.c: 242: }
  1720                           ;Lab10.c: 243: }
  1721                           ;Lab10.c: 245: if (found != 0xff)
  1722  000538  2846               	incf	main@found,w,c
  1723  00053A  B4D8               	btfsc	status,2,c
  1724  00053C  D7C0               	goto	l3735
  1725                           
  1726                           ;Lab10.c: 246: {
  1727                           ;Lab10.c: 247: PORTE = colord1[found];
  1728  00053E  5046               	movf	main@found,w,c
  1729  000540  0D02               	mullw	2
  1730  000542  0EAA               	movlw	low _colord1
  1731  000544  24F3               	addwf	prodl,w,c
  1732  000546  6ED9               	movwf	fsr2l,c
  1733  000548  0E00               	movlw	high _colord1
  1734  00054A  20F4               	addwfc	prodh,w,c
  1735  00054C  6EDA               	movwf	fsr2h,c
  1736  00054E  50DF               	movf	indf2,w,c
  1737  000550  6E84               	movwf	3972,c	;volatile
  1738                           
  1739                           ;Lab10.c: 248: PORTD = colord2[found];
  1740  000552  5046               	movf	main@found,w,c
  1741  000554  0D02               	mullw	2
  1742  000556  0E00               	movlw	low _colord2
  1743  000558  24F3               	addwf	prodl,w,c
  1744  00055A  6ED9               	movwf	fsr2l,c
  1745  00055C  0E01               	movlw	high _colord2
  1746  00055E  20F4               	addwfc	prodh,w,c
  1747  000560  6EDA               	movwf	fsr2h,c
  1748  000562  50DF               	movf	indf2,w,c
  1749  000564  6E83               	movwf	3971,c	;volatile
  1750                           
  1751                           ;Lab10.c: 249: fillCircle(60, 80, 20, color[found]);
  1752  000566  0E00               	movlw	0
  1753  000568  6E3C               	movwf	fillCircle@x0+1,c
  1754  00056A  0E3C               	movlw	60
  1755  00056C  6E3B               	movwf	fillCircle@x0,c
  1756  00056E  0E00               	movlw	0
  1757  000570  6E3E               	movwf	fillCircle@y0+1,c
  1758  000572  0E50               	movlw	80
  1759  000574  6E3D               	movwf	fillCircle@y0,c
  1760  000576  0E00               	movlw	0
  1761  000578  6E40               	movwf	fillCircle@r+1,c
  1762  00057A  0E14               	movlw	20
  1763  00057C  6E3F               	movwf	fillCircle@r,c
  1764  00057E  5046               	movf	main@found,w,c
  1765  000580  0D02               	mullw	2
  1766  000582  0E80               	movlw	low _color
  1767  000584  24F3               	addwf	prodl,w,c
  1768  000586  6ED9               	movwf	fsr2l,c
  1769  000588  0E00               	movlw	high _color
  1770  00058A  20F4               	addwfc	prodh,w,c
  1771  00058C  6EDA               	movwf	fsr2h,c
  1772  00058E  CFDE F041          	movff	postinc2,fillCircle@color
  1773  000592  CFDD F042          	movff	postdec2,fillCircle@color+1
  1774  000596  ECD9  F008         	call	_fillCircle	;wreg free
  1775                           
  1776                           ;Lab10.c: 250: drawCircle(60, 80, 20, 0xFFFF);
  1777  00059A  0E00               	movlw	0
  1778  00059C  6E1D               	movwf	drawCircle@x0+1,c
  1779  00059E  0E3C               	movlw	60
  1780  0005A0  6E1C               	movwf	drawCircle@x0,c
  1781  0005A2  0E00               	movlw	0
  1782  0005A4  6E1F               	movwf	drawCircle@y0+1,c
  1783  0005A6  0E50               	movlw	80
  1784  0005A8  6E1E               	movwf	drawCircle@y0,c
  1785  0005AA  0E00               	movlw	0
  1786  0005AC  6E21               	movwf	drawCircle@r+1,c
  1787  0005AE  0E14               	movlw	20
  1788  0005B0  6E20               	movwf	drawCircle@r,c
  1789  0005B2  0EFF               	movlw	255
  1790  0005B4  6E23               	movwf	drawCircle@color+1,c
  1791  0005B6  6822               	setf	drawCircle@color,c
  1792  0005B8  EC5F  F001         	call	_drawCircle	;wreg free
  1793                           
  1794                           ;Lab10.c: 251: drawtext(52, 77, txt1[found], 0xFFFF, 0x0000,1);
  1795  0005BC  0E4D               	movlw	77
  1796  0005BE  6E39               	movwf	drawtext@y,c
  1797  0005C0  5046               	movf	main@found,w,c
  1798  0005C2  0D04               	mullw	4
  1799  0005C4  0E2A               	movlw	low _txt1
  1800  0005C6  24F3               	addwf	prodl,w,c
  1801  0005C8  6E3A               	movwf	drawtext@_text,c
  1802  0005CA  0E01               	movlw	high _txt1
  1803  0005CC  20F4               	addwfc	prodh,w,c
  1804  0005CE  6E3B               	movwf	drawtext@_text+1,c
  1805  0005D0  0EFF               	movlw	255
  1806  0005D2  6E3D               	movwf	drawtext@color+1,c
  1807  0005D4  683C               	setf	drawtext@color,c
  1808  0005D6  0E00               	movlw	0
  1809  0005D8  6E3F               	movwf	drawtext@bg+1,c
  1810  0005DA  0E00               	movlw	0
  1811  0005DC  6E3E               	movwf	drawtext@bg,c
  1812  0005DE  0E01               	movlw	1
  1813  0005E0  6E40               	movwf	drawtext@size,c
  1814  0005E2  0E34               	movlw	52
  1815  0005E4  EC7C  F005         	call	_drawtext
  1816                           
  1817                           ;Lab10.c: 252: Activate_Buzzer();
  1818  0005E8  EC68  F00A         	call	_Activate_Buzzer	;wreg free
  1819                           
  1820                           ;Lab10.c: 253: Wait_One_Sec();
  1821  0005EC  EC0F  F00A         	call	_Wait_One_Sec	;wreg free
  1822                           
  1823                           ;Lab10.c: 254: Deactivate_Buzzer();
  1824  0005F0  EC8E  F00A         	call	_Deactivate_Buzzer	;wreg free
  1825  0005F4  D764               	goto	l3735
  1826  0005F6  EF0C  F000         	goto	start
  1827  0005FA                     __end_of_main:
  1828                           	opt stack 0
  1829                           tblptru	equ	0xFF8
  1830                           tblptrh	equ	0xFF7
  1831                           tblptrl	equ	0xFF6
  1832                           tablat	equ	0xFF5
  1833                           prodh	equ	0xFF4
  1834                           prodl	equ	0xFF3
  1835                           intcon	equ	0xFF2
  1836                           intcon2	equ	0xFF1
  1837                           postinc0	equ	0xFEE
  1838                           wreg	equ	0xFE8
  1839                           postdec1	equ	0xFE5
  1840                           fsr1l	equ	0xFE1
  1841                           indf2	equ	0xFDF
  1842                           postinc2	equ	0xFDE
  1843                           postdec2	equ	0xFDD
  1844                           fsr2h	equ	0xFDA
  1845                           fsr2l	equ	0xFD9
  1846                           status	equ	0xFD8
  1847                           
  1848 ;; *************** function _printf *****************
  1849 ;; Defined at:
  1850 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;  f               2   29[COMRAM] PTR const unsigned char 
  1853 ;;		 -> STR_1(22), 
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;  idx             1   41[COMRAM] unsigned char 
  1856 ;;  val             4   44[COMRAM] unsigned long 
  1857 ;;  tmpval          4    0        struct .
  1858 ;;  cp              3    0        PTR const unsigned char 
  1859 ;;  width           2   51[COMRAM] int 
  1860 ;;  ap              2   48[COMRAM] PTR void [1]
  1861 ;;		 -> ?_printf(2), 
  1862 ;;  prec            2   42[COMRAM] int 
  1863 ;;  len             2    0        unsigned int 
  1864 ;;  c               1   53[COMRAM] char 
  1865 ;;  flag            1   50[COMRAM] unsigned char 
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  2   29[COMRAM] int 
  1868 ;; Registers used:
  1869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1875 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1876 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1877 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1878 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1879 ;;Total ram usage:       25 bytes
  1880 ;; Hardware stack levels used:    1
  1881 ;; Hardware stack levels required when called:    4
  1882 ;; This function calls:
  1883 ;;		___lldiv
  1884 ;;		___wmul
  1885 ;;		_isdigit
  1886 ;;		_putch
  1887 ;; This function is called by:
  1888 ;;		_main
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	text1
  1893  00001C                     __ptext1:
  1894                           	opt stack 0
  1895  00001C                     _printf:
  1896                           	opt stack 26
  1897                           
  1898                           ;doprnt.c: 466: va_list ap;
  1899                           ;doprnt.c: 499: signed char c;
  1900                           ;doprnt.c: 501: int width;
  1901                           ;doprnt.c: 504: int prec;
  1902                           ;doprnt.c: 508: unsigned char flag;
  1903                           ;doprnt.c: 523: union {
  1904                           ;doprnt.c: 524: unsigned long vd;
  1905                           ;doprnt.c: 525: double integ;
  1906                           ;doprnt.c: 526: } tmpval;
  1907                           ;doprnt.c: 528: unsigned long val;
  1908                           ;doprnt.c: 529: unsigned len;
  1909                           ;doprnt.c: 530: const char * cp;
  1910                           ;doprnt.c: 533: *ap = __va_start();
  1911                           
  1912                           ;incstack = 0
  1913  00001C  0E20               	movlw	low (?_printf+2)
  1914  00001E  6E31               	movwf	printf@ap,c
  1915  000020  0E00               	movlw	high (?_printf+2)
  1916  000022  6E32               	movwf	printf@ap+1,c
  1917                           
  1918                           ;doprnt.c: 536: while(c = *f++) {
  1919  000024  D13D               	goto	l3619
  1920  000026                     l3537:
  1921                           
  1922                           ;doprnt.c: 538: if(c != '%')
  1923  000026  0E25               	movlw	37
  1924  000028  1836               	xorwf	printf@c,w,c
  1925  00002A  B4D8               	btfsc	status,2,c
  1926  00002C  D004               	goto	l3541
  1927                           
  1928                           ;doprnt.c: 540: {
  1929                           ;doprnt.c: 541: (putch(c) );
  1930  00002E  5036               	movf	printf@c,w,c
  1931  000030  EC81  F00A         	call	_putch
  1932                           
  1933                           ;doprnt.c: 542: continue;
  1934  000034  D135               	goto	l3619
  1935  000036                     l3541:
  1936                           
  1937                           ;doprnt.c: 543: }
  1938                           ;doprnt.c: 546: width = 0;
  1939  000036  0E00               	movlw	0
  1940  000038  6E35               	movwf	printf@width+1,c
  1941  00003A  0E00               	movlw	0
  1942  00003C  6E34               	movwf	printf@width,c
  1943                           
  1944                           ;doprnt.c: 548: flag = 0;
  1945  00003E  0E00               	movlw	0
  1946  000040  6E33               	movwf	printf@flag,c
  1947                           
  1948                           ;doprnt.c: 551: switch(*f) {
  1949                           
  1950                           ;doprnt.c: 550: for(;;) {
  1951  000042  D005               	goto	l3547
  1952  000044                     l3543:
  1953                           
  1954                           ;doprnt.c: 580: flag |= 0x04;
  1955  000044  8433               	bsf	printf@flag,2,c
  1956                           
  1957                           ;doprnt.c: 581: f++;
  1958  000046  4A1E               	infsnz	printf@f,f,c
  1959  000048  2A1F               	incf	printf@f+1,f,c
  1960                           
  1961                           ;doprnt.c: 582: continue;
  1962  00004A  D001               	goto	l3547
  1963                           
  1964                           ;doprnt.c: 584: }
  1965  00004C  D00B               	goto	l3549
  1966  00004E                     l3547:
  1967  00004E  C01E  FFF6         	movff	printf@f,tblptrl
  1968  000052  C01F  FFF7         	movff	printf@f+1,tblptrh
  1969  000056                     	if	0	;tblptru may be non-zero
  1970  000056                     	endif
  1971  000056                     	if	0	;tblptru may be non-zero
  1972  000056                     	endif
  1973  000056  0008               	tblrd		*
  1974  000058  50F5               	movf	tablat,w,c
  1975                           
  1976                           ; Switch size 1, requested type "space"
  1977                           ; Number of cases is 1, Range of values is 48 to 48
  1978                           ; switch strategies available:
  1979                           ; Name         Instructions Cycles
  1980                           ; simple_byte            4     3 (average)
  1981                           ;	Chosen strategy is simple_byte
  1982  00005A  0A30               	xorlw	48	; case 48
  1983  00005C  B4D8               	btfsc	status,2,c
  1984  00005E  D7F2               	goto	l3543
  1985                           
  1986                           ;doprnt.c: 585: break;
  1987  000060  D001               	goto	l3549
  1988                           
  1989                           ;doprnt.c: 586: }
  1990  000062  D7F5               	goto	l3547
  1991  000064                     l3549:
  1992                           
  1993                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1994  000064  C01E  FFF6         	movff	printf@f,tblptrl
  1995  000068  C01F  FFF7         	movff	printf@f+1,tblptrh
  1996  00006C                     	if	0	;tblptru may be non-zero
  1997  00006C                     	endif
  1998  00006C                     	if	0	;tblptru may be non-zero
  1999  00006C                     	endif
  2000  00006C  0008               	tblrd		*
  2001  00006E  50F5               	movf	tablat,w,c
  2002  000070  EC21  F00A         	call	_isdigit
  2003  000074  A0D8               	btfss	status,0,c
  2004  000076  D03B               	goto	l3565
  2005                           
  2006                           ;doprnt.c: 598: width = 0;
  2007  000078  0E00               	movlw	0
  2008  00007A  6E35               	movwf	printf@width+1,c
  2009  00007C  0E00               	movlw	0
  2010  00007E  6E34               	movwf	printf@width,c
  2011  000080  D000               	goto	l3553
  2012  000082                     l3553:
  2013                           
  2014                           ;doprnt.c: 600: width *= 10;
  2015  000082  C034  F011         	movff	printf@width,___wmul@multiplier
  2016  000086  C035  F012         	movff	printf@width+1,___wmul@multiplier+1
  2017  00008A  0E00               	movlw	0
  2018  00008C  6E14               	movwf	___wmul@multiplicand+1,c
  2019  00008E  0E0A               	movlw	10
  2020  000090  6E13               	movwf	___wmul@multiplicand,c
  2021  000092  ECFB  F009         	call	___wmul	;wreg free
  2022  000096  C011  F034         	movff	?___wmul,printf@width
  2023  00009A  C012  F035         	movff	?___wmul+1,printf@width+1
  2024                           
  2025                           ;doprnt.c: 601: width += *f++ - '0';
  2026  00009E  0ED0               	movlw	208
  2027  0000A0  6E26               	movwf	??_printf& (0+255),c
  2028  0000A2  0EFF               	movlw	255
  2029  0000A4  6E27               	movwf	(??_printf+1)& (0+255),c
  2030  0000A6  C01E  FFF6         	movff	printf@f,tblptrl
  2031  0000AA  C01F  FFF7         	movff	printf@f+1,tblptrh
  2032  0000AE                     	if	0	;tblptru may be non-zero
  2033  0000AE                     	endif
  2034  0000AE                     	if	0	;tblptru may be non-zero
  2035  0000AE                     	endif
  2036  0000AE  0008               	tblrd		*
  2037  0000B0  50F5               	movf	tablat,w,c
  2038  0000B2  6E28               	movwf	(??_printf+2)& (0+255),c
  2039  0000B4  6A29               	clrf	(??_printf+3)& (0+255),c
  2040  0000B6  5026               	movf	??_printf,w,c
  2041  0000B8  2628               	addwf	??_printf+2,f,c
  2042  0000BA  5027               	movf	??_printf+1,w,c
  2043  0000BC  2229               	addwfc	??_printf+3,f,c
  2044  0000BE  5028               	movf	??_printf+2,w,c
  2045  0000C0  2634               	addwf	printf@width,f,c
  2046  0000C2  5029               	movf	??_printf+3,w,c
  2047  0000C4  2235               	addwfc	printf@width+1,f,c
  2048  0000C6  4A1E               	infsnz	printf@f,f,c
  2049  0000C8  2A1F               	incf	printf@f+1,f,c
  2050                           
  2051                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2052  0000CA  C01E  FFF6         	movff	printf@f,tblptrl
  2053  0000CE  C01F  FFF7         	movff	printf@f+1,tblptrh
  2054  0000D2                     	if	0	;tblptru may be non-zero
  2055  0000D2                     	endif
  2056  0000D2                     	if	0	;tblptru may be non-zero
  2057  0000D2                     	endif
  2058  0000D2  0008               	tblrd		*
  2059  0000D4  50F5               	movf	tablat,w,c
  2060  0000D6  EC21  F00A         	call	_isdigit
  2061  0000DA  A0D8               	btfss	status,0,c
  2062  0000DC  D008               	goto	l3565
  2063  0000DE  D7D1               	goto	l3553
  2064                           
  2065                           ;doprnt.c: 635: switch(c = *f++) {
  2066                           
  2067                           ;doprnt.c: 608: }
  2068                           ;doprnt.c: 633: loop:
  2069  0000E0  D006               	goto	l3565
  2070                           
  2071                           ;doprnt.c: 638: goto alldone;
  2072                           
  2073                           ;doprnt.c: 637: case 0:
  2074  0000E2  D0EC               	goto	l429
  2075  0000E4                     l3561:
  2076                           
  2077                           ;doprnt.c: 643: flag |= 0x10;
  2078  0000E4  8833               	bsf	printf@flag,4,c
  2079                           
  2080                           ;doprnt.c: 644: goto loop;
  2081  0000E6  D003               	goto	l3565
  2082                           
  2083                           ;doprnt.c: 723: break;
  2084                           
  2085                           ;doprnt.c: 718: case 'x':
  2086  0000E8  D015               	goto	l408
  2087                           
  2088                           ;doprnt.c: 813: continue;
  2089                           
  2090                           ;doprnt.c: 802: default:
  2091  0000EA  D0DA               	goto	l3619
  2092                           
  2093                           ;doprnt.c: 822: }
  2094  0000EC  D013               	goto	l408
  2095  0000EE                     l3565:
  2096  0000EE  C01E  FFF6         	movff	printf@f,tblptrl
  2097  0000F2  C01F  FFF7         	movff	printf@f+1,tblptrh
  2098  0000F6  4A1E               	infsnz	printf@f,f,c
  2099  0000F8  2A1F               	incf	printf@f+1,f,c
  2100  0000FA                     	if	0	;tblptru may be non-zero
  2101  0000FA                     	endif
  2102  0000FA                     	if	0	;tblptru may be non-zero
  2103  0000FA                     	endif
  2104  0000FA  0008               	tblrd		*
  2105  0000FC  CFF5 F036          	movff	tablat,printf@c
  2106  000100  5036               	movf	printf@c,w,c
  2107                           
  2108                           ; Switch size 1, requested type "space"
  2109                           ; Number of cases is 3, Range of values is 0 to 120
  2110                           ; switch strategies available:
  2111                           ; Name         Instructions Cycles
  2112                           ; simple_byte           10     6 (average)
  2113                           ;	Chosen strategy is simple_byte
  2114  000102  0A00               	xorlw	0	; case 0
  2115  000104  B4D8               	btfsc	status,2,c
  2116  000106  D0DA               	goto	l429
  2117  000108  0A6C               	xorlw	108	; case 108
  2118  00010A  B4D8               	btfsc	status,2,c
  2119  00010C  D7EB               	goto	l3561
  2120  00010E  0A14               	xorlw	20	; case 120
  2121  000110  A4D8               	btfss	status,2,c
  2122  000112  D0C6               	goto	l3619
  2123  000114                     l408:
  2124                           
  2125                           ;doprnt.c: 1273: {
  2126                           ;doprnt.c: 1281: if(flag & 0x10)
  2127  000114  A833               	btfss	printf@flag,4,c
  2128  000116  D00E               	goto	l3571
  2129                           
  2130                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  2131  000118  C031  FFD9         	movff	printf@ap,fsr2l
  2132  00011C  C032  FFDA         	movff	printf@ap+1,fsr2h
  2133  000120  CFDE F02D          	movff	postinc2,printf@val
  2134  000124  CFDE F02E          	movff	postinc2,printf@val+1
  2135  000128  CFDE F02F          	movff	postinc2,printf@val+2
  2136  00012C  CFDE F030          	movff	postinc2,printf@val+3
  2137  000130  0E04               	movlw	4
  2138  000132  D00F               	goto	L1
  2139  000134                     l3571:
  2140                           
  2141                           ;doprnt.c: 1283: else
  2142                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2143  000134  C031  FFD9         	movff	printf@ap,fsr2l
  2144  000138  C032  FFDA         	movff	printf@ap+1,fsr2h
  2145  00013C  CFDE F026          	movff	postinc2,??_printf
  2146  000140  CFDD F027          	movff	postdec2,??_printf+1
  2147  000144  C026  F02D         	movff	??_printf,printf@val
  2148  000148  C027  F02E         	movff	??_printf+1,printf@val+1
  2149  00014C  6A2F               	clrf	printf@val+2,c
  2150  00014E  6A30               	clrf	printf@val+3,c
  2151  000150  0E02               	movlw	2
  2152  000152                     L1:
  2153  000152  2631               	addwf	printf@ap,f,c
  2154  000154  0E00               	movlw	0
  2155  000156  2232               	addwfc	printf@ap+1,f,c
  2156  000158  D000               	goto	l3575
  2157  00015A                     l3575:
  2158                           
  2159                           ;doprnt.c: 1287: }
  2160                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  2161  00015A  0E01               	movlw	1
  2162  00015C  6E36               	movwf	printf@c,c
  2163  00015E                     l3577:
  2164  00015E  0E08               	movlw	8
  2165  000160  1836               	xorwf	printf@c,w,c
  2166  000162  B4D8               	btfsc	status,2,c
  2167  000164  D01C               	goto	l3589
  2168  000166  D001               	goto	l3581
  2169  000168  D01A               	goto	l3589
  2170  00016A                     l3581:
  2171                           
  2172                           ;doprnt.c: 1317: if(val < hexpowers[c])
  2173  00016A  5036               	movf	printf@c,w,c
  2174  00016C  0D04               	mullw	4
  2175  00016E  0E9A               	movlw	low _hexpowers
  2176  000170  24F3               	addwf	prodl,w,c
  2177  000172  6EF6               	movwf	tblptrl,c
  2178  000174  0EFF               	movlw	high _hexpowers
  2179  000176  20F4               	addwfc	prodh,w,c
  2180  000178  6EF7               	movwf	tblptrh,c
  2181  00017A                     	if	0	;There are less than 3 active tblptr bytes
  2182  00017A                     	endif
  2183  00017A  0009               	tblrd		*+
  2184  00017C  50F5               	movf	tablat,w,c
  2185  00017E  5C2D               	subwf	printf@val,w,c
  2186  000180  0009               	tblrd		*+
  2187  000182  50F5               	movf	tablat,w,c
  2188  000184  582E               	subwfb	printf@val+1,w,c
  2189  000186  0009               	tblrd		*+
  2190  000188  50F5               	movf	tablat,w,c
  2191  00018A  582F               	subwfb	printf@val+2,w,c
  2192  00018C  0009               	tblrd		*+
  2193  00018E  50F5               	movf	tablat,w,c
  2194  000190  5830               	subwfb	printf@val+3,w,c
  2195  000192  A0D8               	btfss	status,0,c
  2196  000194  D004               	goto	l3589
  2197  000196  D001               	goto	l3585
  2198                           
  2199                           ;doprnt.c: 1318: break;
  2200  000198  D002               	goto	l3589
  2201  00019A                     l3585:
  2202  00019A  2A36               	incf	printf@c,f,c
  2203  00019C  D7E0               	goto	l3577
  2204  00019E                     l3589:
  2205                           
  2206                           ;doprnt.c: 1381: if(width > c)
  2207  00019E  0E80               	movlw	128
  2208  0001A0  BE36               	btfsc	printf@c,7,c
  2209  0001A2  0E7F               	movlw	127
  2210  0001A4  6E26               	movwf	??_printf& (0+255),c
  2211  0001A6  5034               	movf	printf@width,w,c
  2212  0001A8  5C36               	subwf	printf@c,w,c
  2213  0001AA  5035               	movf	printf@width+1,w,c
  2214  0001AC  0A80               	xorlw	128
  2215  0001AE  5826               	subwfb	??_printf& (0+255),w,c
  2216  0001B0  B0D8               	btfsc	status,0,c
  2217  0001B2  D007               	goto	l3593
  2218                           
  2219                           ;doprnt.c: 1382: width -= c;
  2220  0001B4  5036               	movf	printf@c,w,c
  2221  0001B6  5E34               	subwf	printf@width,f,c
  2222  0001B8  0E00               	movlw	0
  2223  0001BA  BE36               	btfsc	printf@c,7,c
  2224  0001BC  0EFF               	movlw	255
  2225  0001BE  5A35               	subwfb	printf@width+1,f,c
  2226  0001C0  D005               	goto	l3595
  2227  0001C2                     l3593:
  2228                           
  2229                           ;doprnt.c: 1383: else
  2230                           ;doprnt.c: 1384: width = 0;
  2231  0001C2  0E00               	movlw	0
  2232  0001C4  6E35               	movwf	printf@width+1,c
  2233  0001C6  0E00               	movlw	0
  2234  0001C8  6E34               	movwf	printf@width,c
  2235  0001CA  D000               	goto	l3595
  2236  0001CC                     l3595:
  2237                           
  2238                           ;doprnt.c: 1387: if(flag & 0x04) {
  2239  0001CC  A433               	btfss	printf@flag,2,c
  2240  0001CE  D010               	goto	l3603
  2241                           
  2242                           ;doprnt.c: 1415: if(width)
  2243  0001D0  5034               	movf	printf@width,w,c
  2244  0001D2  1035               	iorwf	printf@width+1,w,c
  2245  0001D4  B4D8               	btfsc	status,2,c
  2246  0001D6  D01C               	goto	l3609
  2247  0001D8                     l3599:
  2248                           
  2249                           ;doprnt.c: 1417: (putch('0') );
  2250  0001D8  0E30               	movlw	48
  2251  0001DA  EC81  F00A         	call	_putch
  2252                           
  2253                           ;doprnt.c: 1418: while(--width);
  2254  0001DE  0634               	decf	printf@width,f,c
  2255  0001E0  A0D8               	btfss	status,0,c
  2256  0001E2  0635               	decf	printf@width+1,f,c
  2257  0001E4  5034               	movf	printf@width,w,c
  2258  0001E6  1035               	iorwf	printf@width+1,w,c
  2259  0001E8  B4D8               	btfsc	status,2,c
  2260  0001EA  D012               	goto	l3609
  2261  0001EC  D7F5               	goto	l3599
  2262                           
  2263                           ;doprnt.c: 1420: } else
  2264  0001EE  D010               	goto	l3609
  2265  0001F0                     l3603:
  2266                           
  2267                           ;doprnt.c: 1422: {
  2268                           ;doprnt.c: 1424: if(width
  2269                           ;doprnt.c: 1428: )
  2270  0001F0  5034               	movf	printf@width,w,c
  2271  0001F2  1035               	iorwf	printf@width+1,w,c
  2272  0001F4  B4D8               	btfsc	status,2,c
  2273  0001F6  D00C               	goto	l3609
  2274  0001F8                     l3605:
  2275                           
  2276                           ;doprnt.c: 1430: (putch(' ') );
  2277  0001F8  0E20               	movlw	32
  2278  0001FA  EC81  F00A         	call	_putch
  2279                           
  2280                           ;doprnt.c: 1431: while(--width);
  2281  0001FE  0634               	decf	printf@width,f,c
  2282  000200  A0D8               	btfss	status,0,c
  2283  000202  0635               	decf	printf@width+1,f,c
  2284  000204  5034               	movf	printf@width,w,c
  2285  000206  1035               	iorwf	printf@width+1,w,c
  2286  000208  B4D8               	btfsc	status,2,c
  2287  00020A  D002               	goto	l3609
  2288  00020C  D7F5               	goto	l3605
  2289  00020E  D000               	goto	l3609
  2290  000210                     l3609:
  2291                           
  2292                           ;doprnt.c: 1469: }
  2293                           ;doprnt.c: 1472: prec = c;
  2294  000210  5036               	movf	printf@c,w,c
  2295  000212  6E2B               	movwf	printf@prec,c
  2296  000214  6A2C               	clrf	printf@prec+1,c
  2297  000216  BE2B               	btfsc	printf@prec,7,c
  2298  000218  062C               	decf	printf@prec+1,f,c
  2299                           
  2300                           ;doprnt.c: 1474: while(prec--) {
  2301  00021A  D038               	goto	l3617
  2302  00021C                     l3611:
  2303                           
  2304                           ;doprnt.c: 1478: {
  2305                           ;doprnt.c: 1499: {
  2306                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  2307  00021C  C02D  F011         	movff	printf@val,___lldiv@dividend
  2308  000220  C02E  F012         	movff	printf@val+1,___lldiv@dividend+1
  2309  000224  C02F  F013         	movff	printf@val+2,___lldiv@dividend+2
  2310  000228  C030  F014         	movff	printf@val+3,___lldiv@dividend+3
  2311  00022C  C02B  F026         	movff	printf@prec,??_printf
  2312  000230  C02C  F027         	movff	printf@prec+1,??_printf+1
  2313  000234  90D8               	bcf	status,0,c
  2314  000236  3626               	rlcf	??_printf,f,c
  2315  000238  3627               	rlcf	??_printf+1,f,c
  2316  00023A  90D8               	bcf	status,0,c
  2317  00023C  3626               	rlcf	??_printf,f,c
  2318  00023E  3627               	rlcf	??_printf+1,f,c
  2319  000240  0E9A               	movlw	low _hexpowers
  2320  000242  2426               	addwf	??_printf,w,c
  2321  000244  6EF6               	movwf	tblptrl,c
  2322  000246  0EFF               	movlw	high _hexpowers
  2323  000248  2027               	addwfc	??_printf+1,w,c
  2324  00024A  6EF7               	movwf	tblptrh,c
  2325  00024C                     	if	0	;There are less than 3 active tblptr bytes
  2326  00024C                     	endif
  2327  00024C  0009               	tblrd		*+
  2328  00024E  CFF5 F015          	movff	tablat,___lldiv@divisor
  2329  000252  0009               	tblrd		*+
  2330  000254  CFF5 F016          	movff	tablat,___lldiv@divisor+1
  2331  000258  0009               	tblrd		*+
  2332  00025A  CFF5 F017          	movff	tablat,___lldiv@divisor+2
  2333  00025E  000A               	tblrd		*-
  2334  000260  CFF5 F018          	movff	tablat,___lldiv@divisor+3
  2335  000264  EC2F  F007         	call	___lldiv	;wreg free
  2336  000268  5011               	movf	?___lldiv,w,c
  2337  00026A  0B0F               	andlw	15
  2338  00026C  6E2A               	movwf	printf@idx,c
  2339                           
  2340                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  2341  00026E  502A               	movf	printf@idx,w,c
  2342  000270  0D01               	mullw	1
  2343  000272  0EE6               	movlw	low STR_4
  2344  000274  24F3               	addwf	prodl,w,c
  2345  000276  6EF6               	movwf	tblptrl,c
  2346  000278  0EFF               	movlw	high STR_4
  2347  00027A  20F4               	addwfc	prodh,w,c
  2348  00027C  6EF7               	movwf	tblptrh,c
  2349  00027E                     	if	0	;There are less than 3 active tblptr bytes
  2350  00027E                     	endif
  2351  00027E  0008               	tblrd		*
  2352  000280  CFF5 F036          	movff	tablat,printf@c
  2353                           
  2354                           ;doprnt.c: 1508: }
  2355                           ;doprnt.c: 1523: }
  2356                           ;doprnt.c: 1524: (putch(c) );
  2357  000284  5036               	movf	printf@c,w,c
  2358  000286  EC81  F00A         	call	_putch
  2359  00028A  D000               	goto	l3617
  2360  00028C                     l3617:
  2361  00028C  062B               	decf	printf@prec,f,c
  2362  00028E  A0D8               	btfss	status,0,c
  2363  000290  062C               	decf	printf@prec+1,f,c
  2364  000292  282B               	incf	printf@prec,w,c
  2365  000294  E1C3               	bnz	l3611
  2366  000296  282C               	incf	printf@prec+1,w,c
  2367  000298  B4D8               	btfsc	status,2,c
  2368  00029A  D002               	goto	l3619
  2369  00029C  D7BF               	goto	l3611
  2370  00029E  D000               	goto	l3619
  2371  0002A0                     l3619:
  2372  0002A0  C01E  FFF6         	movff	printf@f,tblptrl
  2373  0002A4  C01F  FFF7         	movff	printf@f+1,tblptrh
  2374  0002A8  4A1E               	infsnz	printf@f,f,c
  2375  0002AA  2A1F               	incf	printf@f+1,f,c
  2376  0002AC                     	if	0	;tblptru may be non-zero
  2377  0002AC                     	endif
  2378  0002AC                     	if	0	;tblptru may be non-zero
  2379  0002AC                     	endif
  2380  0002AC  0008               	tblrd		*
  2381  0002AE  CFF5 F036          	movff	tablat,printf@c
  2382  0002B2  5036               	movf	printf@c,w,c
  2383  0002B4  B4D8               	btfsc	status,2,c
  2384  0002B6  D002               	goto	l429
  2385  0002B8  D6B6               	goto	l3537
  2386  0002BA  D000               	goto	l429
  2387  0002BC                     l429:
  2388  0002BC  0012               	return		;funcret
  2389  0002BE                     __end_of_printf:
  2390                           	opt stack 0
  2391                           tblptru	equ	0xFF8
  2392                           tblptrh	equ	0xFF7
  2393                           tblptrl	equ	0xFF6
  2394                           tablat	equ	0xFF5
  2395                           prodh	equ	0xFF4
  2396                           prodl	equ	0xFF3
  2397                           intcon	equ	0xFF2
  2398                           intcon2	equ	0xFF1
  2399                           postinc0	equ	0xFEE
  2400                           wreg	equ	0xFE8
  2401                           postdec1	equ	0xFE5
  2402                           fsr1l	equ	0xFE1
  2403                           indf2	equ	0xFDF
  2404                           postinc2	equ	0xFDE
  2405                           postdec2	equ	0xFDD
  2406                           fsr2h	equ	0xFDA
  2407                           fsr2l	equ	0xFD9
  2408                           status	equ	0xFD8
  2409                           
  2410 ;; *************** function _putch *****************
  2411 ;; Defined at:
  2412 ;;		line 62 in file "Lab10.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;  c               1    wreg     unsigned char 
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;  c               1   16[COMRAM] unsigned char 
  2417 ;; Return value:  Size  Location     Type
  2418 ;;		None               void
  2419 ;; Registers used:
  2420 ;;		wreg
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;Total ram usage:        1 bytes
  2431 ;; Hardware stack levels used:    1
  2432 ;; Hardware stack levels required when called:    3
  2433 ;; This function calls:
  2434 ;;		Nothing
  2435 ;; This function is called by:
  2436 ;;		_printf
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           	psect	text2
  2441  001502                     __ptext2:
  2442                           	opt stack 0
  2443  001502                     _putch:
  2444                           	opt stack 26
  2445                           
  2446                           ;incstack = 0
  2447                           ;putch@c stored from wreg
  2448  001502  6E11               	movwf	putch@c,c
  2449                           
  2450                           ;Lab10.c: 64: while (!TRMT);
  2451  001504  D000               	goto	l105
  2452  001506                     l105:
  2453  001506  A2AC               	btfss	4012,1,c	;volatile
  2454  001508  D7FE               	goto	l105
  2455                           
  2456                           ;Lab10.c: 65: TXREG = c;
  2457  00150A  C011  FFAD         	movff	putch@c,4013	;volatile
  2458  00150E  0012               	return		;funcret
  2459  001510                     __end_of_putch:
  2460                           	opt stack 0
  2461                           tblptru	equ	0xFF8
  2462                           tblptrh	equ	0xFF7
  2463                           tblptrl	equ	0xFF6
  2464                           tablat	equ	0xFF5
  2465                           prodh	equ	0xFF4
  2466                           prodl	equ	0xFF3
  2467                           intcon	equ	0xFF2
  2468                           intcon2	equ	0xFF1
  2469                           postinc0	equ	0xFEE
  2470                           wreg	equ	0xFE8
  2471                           postdec1	equ	0xFE5
  2472                           fsr1l	equ	0xFE1
  2473                           indf2	equ	0xFDF
  2474                           postinc2	equ	0xFDE
  2475                           postdec2	equ	0xFDD
  2476                           fsr2h	equ	0xFDA
  2477                           fsr2l	equ	0xFD9
  2478                           status	equ	0xFD8
  2479                           
  2480 ;; *************** function _isdigit *****************
  2481 ;; Defined at:
  2482 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  c               1    wreg     unsigned char 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  c               1   18[COMRAM] unsigned char 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;		None               void
  2489 ;; Registers used:
  2490 ;;		wreg, status,2, status,0
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2499 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2500 ;;Total ram usage:        3 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; Hardware stack levels required when called:    3
  2503 ;; This function calls:
  2504 ;;		Nothing
  2505 ;; This function is called by:
  2506 ;;		_printf
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           	psect	text3
  2511  001442                     __ptext3:
  2512                           	opt stack 0
  2513  001442                     _isdigit:
  2514                           	opt stack 26
  2515                           
  2516                           ;incstack = 0
  2517                           ;isdigit@c stored from wreg
  2518  001442  6E13               	movwf	isdigit@c,c
  2519  001444  0E00               	movlw	0
  2520  001446  6E12               	movwf	_isdigit$1613,c
  2521  001448  0E3A               	movlw	58
  2522  00144A  6013               	cpfslt	isdigit@c,c
  2523  00144C  D006               	goto	l2601
  2524  00144E  0E2F               	movlw	47
  2525  001450  6413               	cpfsgt	isdigit@c,c
  2526  001452  D003               	goto	l2601
  2527  001454  0E01               	movlw	1
  2528  001456  6E12               	movwf	_isdigit$1613,c
  2529  001458  D000               	goto	l2601
  2530  00145A                     l2601:
  2531  00145A  C012  F011         	movff	_isdigit$1613,??_isdigit
  2532  00145E  3011               	rrcf	??_isdigit,w,c
  2533  001460  D000               	goto	l896
  2534  001462                     l896:
  2535  001462  0012               	return		;funcret
  2536  001464                     __end_of_isdigit:
  2537                           	opt stack 0
  2538                           tblptru	equ	0xFF8
  2539                           tblptrh	equ	0xFF7
  2540                           tblptrl	equ	0xFF6
  2541                           tablat	equ	0xFF5
  2542                           prodh	equ	0xFF4
  2543                           prodl	equ	0xFF3
  2544                           intcon	equ	0xFF2
  2545                           intcon2	equ	0xFF1
  2546                           postinc0	equ	0xFEE
  2547                           wreg	equ	0xFE8
  2548                           postdec1	equ	0xFE5
  2549                           fsr1l	equ	0xFE1
  2550                           indf2	equ	0xFDF
  2551                           postinc2	equ	0xFDE
  2552                           postdec2	equ	0xFDD
  2553                           fsr2h	equ	0xFDA
  2554                           fsr2l	equ	0xFD9
  2555                           status	equ	0xFD8
  2556                           
  2557 ;; *************** function ___lldiv *****************
  2558 ;; Defined at:
  2559 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;  dividend        4   16[COMRAM] unsigned long 
  2562 ;;  divisor         4   20[COMRAM] unsigned long 
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;  quotient        4   24[COMRAM] unsigned long 
  2565 ;;  counter         1   28[COMRAM] unsigned char 
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  4   16[COMRAM] unsigned long 
  2568 ;; Registers used:
  2569 ;;		wreg, status,2, status,0
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2575 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2576 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;Total ram usage:       13 bytes
  2580 ;; Hardware stack levels used:    1
  2581 ;; Hardware stack levels required when called:    3
  2582 ;; This function calls:
  2583 ;;		Nothing
  2584 ;; This function is called by:
  2585 ;;		_printf
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           	psect	text4
  2590  000E5E                     __ptext4:
  2591                           	opt stack 0
  2592  000E5E                     ___lldiv:
  2593                           	opt stack 26
  2594                           
  2595                           ;incstack = 0
  2596  000E5E  0E00               	movlw	0
  2597  000E60  6E19               	movwf	___lldiv@quotient,c
  2598  000E62  0E00               	movlw	0
  2599  000E64  6E1A               	movwf	___lldiv@quotient+1,c
  2600  000E66  0E00               	movlw	0
  2601  000E68  6E1B               	movwf	___lldiv@quotient+2,c
  2602  000E6A  0E00               	movlw	0
  2603  000E6C  6E1C               	movwf	___lldiv@quotient+3,c
  2604  000E6E  5015               	movf	___lldiv@divisor,w,c
  2605  000E70  1016               	iorwf	___lldiv@divisor+1,w,c
  2606  000E72  1017               	iorwf	___lldiv@divisor+2,w,c
  2607  000E74  1018               	iorwf	___lldiv@divisor+3,w,c
  2608  000E76  B4D8               	btfsc	status,2,c
  2609  000E78  D02F               	goto	l925
  2610  000E7A  0E01               	movlw	1
  2611  000E7C  6E1D               	movwf	___lldiv@counter,c
  2612  000E7E  D007               	goto	l2613
  2613  000E80                     l2611:
  2614  000E80  90D8               	bcf	status,0,c
  2615  000E82  3615               	rlcf	___lldiv@divisor,f,c
  2616  000E84  3616               	rlcf	___lldiv@divisor+1,f,c
  2617  000E86  3617               	rlcf	___lldiv@divisor+2,f,c
  2618  000E88  3618               	rlcf	___lldiv@divisor+3,f,c
  2619  000E8A  2A1D               	incf	___lldiv@counter,f,c
  2620  000E8C  D000               	goto	l2613
  2621  000E8E                     l2613:
  2622  000E8E  BE18               	btfsc	___lldiv@divisor+3,7,c
  2623  000E90  D002               	goto	l2615
  2624  000E92  D7F6               	goto	l2611
  2625  000E94  D000               	goto	l2615
  2626  000E96                     l2615:
  2627  000E96  90D8               	bcf	status,0,c
  2628  000E98  3619               	rlcf	___lldiv@quotient,f,c
  2629  000E9A  361A               	rlcf	___lldiv@quotient+1,f,c
  2630  000E9C  361B               	rlcf	___lldiv@quotient+2,f,c
  2631  000E9E  361C               	rlcf	___lldiv@quotient+3,f,c
  2632  000EA0  5015               	movf	___lldiv@divisor,w,c
  2633  000EA2  5C11               	subwf	___lldiv@dividend,w,c
  2634  000EA4  5016               	movf	___lldiv@divisor+1,w,c
  2635  000EA6  5812               	subwfb	___lldiv@dividend+1,w,c
  2636  000EA8  5017               	movf	___lldiv@divisor+2,w,c
  2637  000EAA  5813               	subwfb	___lldiv@dividend+2,w,c
  2638  000EAC  5018               	movf	___lldiv@divisor+3,w,c
  2639  000EAE  5814               	subwfb	___lldiv@dividend+3,w,c
  2640  000EB0  A0D8               	btfss	status,0,c
  2641  000EB2  D00A               	goto	l2623
  2642  000EB4  5015               	movf	___lldiv@divisor,w,c
  2643  000EB6  5E11               	subwf	___lldiv@dividend,f,c
  2644  000EB8  5016               	movf	___lldiv@divisor+1,w,c
  2645  000EBA  5A12               	subwfb	___lldiv@dividend+1,f,c
  2646  000EBC  5017               	movf	___lldiv@divisor+2,w,c
  2647  000EBE  5A13               	subwfb	___lldiv@dividend+2,f,c
  2648  000EC0  5018               	movf	___lldiv@divisor+3,w,c
  2649  000EC2  5A14               	subwfb	___lldiv@dividend+3,f,c
  2650  000EC4  8019               	bsf	___lldiv@quotient,0,c
  2651  000EC6  D000               	goto	l2623
  2652  000EC8                     l2623:
  2653  000EC8  90D8               	bcf	status,0,c
  2654  000ECA  3218               	rrcf	___lldiv@divisor+3,f,c
  2655  000ECC  3217               	rrcf	___lldiv@divisor+2,f,c
  2656  000ECE  3216               	rrcf	___lldiv@divisor+1,f,c
  2657  000ED0  3215               	rrcf	___lldiv@divisor,f,c
  2658  000ED2  2E1D               	decfsz	___lldiv@counter,f,c
  2659  000ED4  D7E0               	goto	l2615
  2660  000ED6  D000               	goto	l925
  2661  000ED8                     l925:
  2662  000ED8  C019  F011         	movff	___lldiv@quotient,?___lldiv
  2663  000EDC  C01A  F012         	movff	___lldiv@quotient+1,?___lldiv+1
  2664  000EE0  C01B  F013         	movff	___lldiv@quotient+2,?___lldiv+2
  2665  000EE4  C01C  F014         	movff	___lldiv@quotient+3,?___lldiv+3
  2666  000EE8  0012               	return		;funcret
  2667  000EEA                     __end_of___lldiv:
  2668                           	opt stack 0
  2669                           tblptru	equ	0xFF8
  2670                           tblptrh	equ	0xFF7
  2671                           tblptrl	equ	0xFF6
  2672                           tablat	equ	0xFF5
  2673                           prodh	equ	0xFF4
  2674                           prodl	equ	0xFF3
  2675                           intcon	equ	0xFF2
  2676                           intcon2	equ	0xFF1
  2677                           postinc0	equ	0xFEE
  2678                           wreg	equ	0xFE8
  2679                           postdec1	equ	0xFE5
  2680                           fsr1l	equ	0xFE1
  2681                           indf2	equ	0xFDF
  2682                           postinc2	equ	0xFDE
  2683                           postdec2	equ	0xFDD
  2684                           fsr2h	equ	0xFDA
  2685                           fsr2l	equ	0xFD9
  2686                           status	equ	0xFD8
  2687                           
  2688 ;; *************** function _init_UART *****************
  2689 ;; Defined at:
  2690 ;;		line 67 in file "Lab10.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;		None
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;		None
  2695 ;; Return value:  Size  Location     Type
  2696 ;;		None               void
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, cstack
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;Total ram usage:        0 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; Hardware stack levels required when called:    4
  2711 ;; This function calls:
  2712 ;;		_OpenUSART
  2713 ;; This function is called by:
  2714 ;;		_main
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           	psect	text5
  2719  001496                     __ptext5:
  2720                           	opt stack 0
  2721  001496                     _init_UART:
  2722                           	opt stack 26
  2723                           
  2724                           ;Lab10.c: 69: OpenUSART (0b01111111 & 0b10111111 &
  2725                           ;Lab10.c: 70: 0b11111110 & 0b11111101 & 0b11111111 &
  2726                           ;Lab10.c: 71: 0b11111111, 25);
  2727                           
  2728                           ;incstack = 0
  2729  001496  0E00               	movlw	0
  2730  001498  6E12               	movwf	OpenUSART@spbrg+1,c
  2731  00149A  0E19               	movlw	25
  2732  00149C  6E11               	movwf	OpenUSART@spbrg,c
  2733  00149E  0E3C               	movlw	60
  2734  0014A0  EC77  F008         	call	_OpenUSART
  2735                           
  2736                           ;Lab10.c: 72: OSCCON = 0x60;
  2737  0014A4  0E60               	movlw	96
  2738  0014A6  6ED3               	movwf	4051,c	;volatile
  2739  0014A8  0012               	return		;funcret
  2740  0014AA                     __end_of_init_UART:
  2741                           	opt stack 0
  2742                           tblptru	equ	0xFF8
  2743                           tblptrh	equ	0xFF7
  2744                           tblptrl	equ	0xFF6
  2745                           tablat	equ	0xFF5
  2746                           prodh	equ	0xFF4
  2747                           prodl	equ	0xFF3
  2748                           intcon	equ	0xFF2
  2749                           intcon2	equ	0xFF1
  2750                           postinc0	equ	0xFEE
  2751                           wreg	equ	0xFE8
  2752                           postdec1	equ	0xFE5
  2753                           fsr1l	equ	0xFE1
  2754                           indf2	equ	0xFDF
  2755                           postinc2	equ	0xFDE
  2756                           postdec2	equ	0xFDD
  2757                           fsr2h	equ	0xFDA
  2758                           fsr2l	equ	0xFD9
  2759                           status	equ	0xFD8
  2760                           
  2761 ;; *************** function _OpenUSART *****************
  2762 ;; Defined at:
  2763 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  config          1    wreg     unsigned char 
  2766 ;;  spbrg           2   16[COMRAM] unsigned int 
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;  config          1   18[COMRAM] unsigned char 
  2769 ;; Return value:  Size  Location     Type
  2770 ;;		None               void
  2771 ;; Registers used:
  2772 ;;		wreg, status,2
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2782 ;;Total ram usage:        3 bytes
  2783 ;; Hardware stack levels used:    1
  2784 ;; Hardware stack levels required when called:    3
  2785 ;; This function calls:
  2786 ;;		Nothing
  2787 ;; This function is called by:
  2788 ;;		_init_UART
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           	psect	text6
  2793  0010EE                     __ptext6:
  2794                           	opt stack 0
  2795  0010EE                     _OpenUSART:
  2796                           	opt stack 26
  2797                           
  2798                           ;incstack = 0
  2799                           ;OpenUSART@config stored from wreg
  2800  0010EE  6E13               	movwf	OpenUSART@config,c
  2801  0010F0  0E00               	movlw	0
  2802  0010F2  6EAC               	movwf	4012,c	;volatile
  2803  0010F4  0E00               	movlw	0
  2804  0010F6  6EAB               	movwf	4011,c	;volatile
  2805  0010F8  A013               	btfss	OpenUSART@config,0,c
  2806  0010FA  D002               	goto	l2451
  2807  0010FC  88AC               	bsf	4012,4,c	;volatile
  2808  0010FE  D000               	goto	l2451
  2809  001100                     l2451:
  2810  001100  A213               	btfss	OpenUSART@config,1,c
  2811  001102  D003               	goto	l2455
  2812  001104  8CAC               	bsf	4012,6,c	;volatile
  2813  001106  8CAB               	bsf	4011,6,c	;volatile
  2814  001108  D000               	goto	l2455
  2815  00110A                     l2455:
  2816  00110A  A413               	btfss	OpenUSART@config,2,c
  2817  00110C  D002               	goto	l2459
  2818  00110E  8EAC               	bsf	4012,7,c	;volatile
  2819  001110  D000               	goto	l2459
  2820  001112                     l2459:
  2821  001112  A613               	btfss	OpenUSART@config,3,c
  2822  001114  D002               	goto	l453
  2823  001116  88AB               	bsf	4011,4,c	;volatile
  2824  001118  D002               	goto	l2463
  2825  00111A                     l453:
  2826  00111A  8AAB               	bsf	4011,5,c	;volatile
  2827  00111C  D000               	goto	l2463
  2828  00111E                     l2463:
  2829  00111E  B813               	btfsc	OpenUSART@config,4,c
  2830  001120  84AC               	bsf	4012,2,c	;volatile
  2831  001122  989E               	bcf	3998,4,c	;volatile
  2832  001124  AA13               	btfss	OpenUSART@config,5,c
  2833  001126  D002               	goto	l2471
  2834  001128  86AB               	bsf	4011,3,c	;volatile
  2835  00112A  D000               	goto	l2471
  2836  00112C                     l2471:
  2837  00112C  AC13               	btfss	OpenUSART@config,6,c
  2838  00112E  D002               	goto	l457
  2839  001130  8A9D               	bsf	3997,5,c	;volatile
  2840  001132  D001               	goto	l458
  2841  001134                     l457:
  2842  001134  9A9D               	bcf	3997,5,c	;volatile
  2843  001136                     l458:
  2844  001136  9A9E               	bcf	3998,5,c	;volatile
  2845  001138  AE13               	btfss	OpenUSART@config,7,c
  2846  00113A  D002               	goto	l459
  2847  00113C  889D               	bsf	3997,4,c	;volatile
  2848  00113E  D001               	goto	l460
  2849  001140                     l459:
  2850  001140  989D               	bcf	3997,4,c	;volatile
  2851  001142                     l460:
  2852  001142  C011  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2853  001146  5012               	movf	OpenUSART@spbrg+1,w,c
  2854  001148  6EB0               	movwf	4016,c	;volatile
  2855  00114A  8AAC               	bsf	4012,5,c	;volatile
  2856  00114C  8EAB               	bsf	4011,7,c	;volatile
  2857  00114E  9C94               	bcf	3988,6,c	;volatile
  2858  001150  8E94               	bsf	3988,7,c	;volatile
  2859  001152  B8AC               	btfsc	4012,4,c	;volatile
  2860  001154  BEAC               	btfsc	4012,7,c	;volatile
  2861  001156  D002               	goto	l462
  2862  001158  8C94               	bsf	3988,6,c	;volatile
  2863  00115A  D000               	goto	l462
  2864  00115C                     l462:
  2865  00115C  0012               	return		;funcret
  2866  00115E                     __end_of_OpenUSART:
  2867                           	opt stack 0
  2868                           tblptru	equ	0xFF8
  2869                           tblptrh	equ	0xFF7
  2870                           tblptrl	equ	0xFF6
  2871                           tablat	equ	0xFF5
  2872                           prodh	equ	0xFF4
  2873                           prodl	equ	0xFF3
  2874                           intcon	equ	0xFF2
  2875                           intcon2	equ	0xFF1
  2876                           postinc0	equ	0xFEE
  2877                           wreg	equ	0xFE8
  2878                           postdec1	equ	0xFE5
  2879                           fsr1l	equ	0xFE1
  2880                           indf2	equ	0xFDF
  2881                           postinc2	equ	0xFDE
  2882                           postdec2	equ	0xFDD
  2883                           fsr2h	equ	0xFDA
  2884                           fsr2l	equ	0xFD9
  2885                           status	equ	0xFD8
  2886                           
  2887 ;; *************** function _fillCircle *****************
  2888 ;; Defined at:
  2889 ;;		line 614 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab10.1.X/ST7735_TFT.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;  x0              2   58[COMRAM] int 
  2892 ;;  y0              2   60[COMRAM] int 
  2893 ;;  r               2   62[COMRAM] int 
  2894 ;;  color           2   64[COMRAM] unsigned int 
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;		None
  2897 ;; Return value:  Size  Location     Type
  2898 ;;		None               void
  2899 ;; Registers used:
  2900 ;;		wreg, status,2, status,0, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2906 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2909 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2910 ;;Total ram usage:        8 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; Hardware stack levels required when called:    8
  2913 ;; This function calls:
  2914 ;;		_drawFastVLine
  2915 ;;		_fillCircleHelper
  2916 ;; This function is called by:
  2917 ;;		_main
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           	psect	text7
  2922  0011B2                     __ptext7:
  2923                           	opt stack 0
  2924  0011B2                     _fillCircle:
  2925                           	opt stack 22
  2926                           
  2927                           ;ST7735_TFT.c: 616: drawFastVLine(x0, y0 - r, 2 * r + 1, color);
  2928                           
  2929                           ;incstack = 0
  2930  0011B2  503F               	movf	fillCircle@r,w,c
  2931  0011B4  0800               	sublw	0
  2932  0011B6  243D               	addwf	fillCircle@y0,w,c
  2933  0011B8  6E18               	movwf	drawFastVLine@y,c
  2934  0011BA  80D8               	bsf	status,0,c
  2935  0011BC  343F               	rlcf	fillCircle@r,w,c
  2936  0011BE  6E19               	movwf	drawFastVLine@h,c
  2937  0011C0  C041  F01A         	movff	fillCircle@color,drawFastVLine@color
  2938  0011C4  C042  F01B         	movff	fillCircle@color+1,drawFastVLine@color+1
  2939  0011C8  503B               	movf	fillCircle@x0,w,c
  2940  0011CA  EC75  F007         	call	_drawFastVLine
  2941                           
  2942                           ;ST7735_TFT.c: 617: fillCircleHelper(x0, y0, r, 3, 0, color);
  2943  0011CE  C03B  F023         	movff	fillCircle@x0,fillCircleHelper@x0
  2944  0011D2  C03C  F024         	movff	fillCircle@x0+1,fillCircleHelper@x0+1
  2945  0011D6  C03D  F025         	movff	fillCircle@y0,fillCircleHelper@y0
  2946  0011DA  C03E  F026         	movff	fillCircle@y0+1,fillCircleHelper@y0+1
  2947  0011DE  C03F  F027         	movff	fillCircle@r,fillCircleHelper@r
  2948  0011E2  C040  F028         	movff	fillCircle@r+1,fillCircleHelper@r+1
  2949  0011E6  0E00               	movlw	0
  2950  0011E8  6E2A               	movwf	fillCircleHelper@cornername+1,c
  2951  0011EA  0E03               	movlw	3
  2952  0011EC  6E29               	movwf	fillCircleHelper@cornername,c
  2953  0011EE  0E00               	movlw	0
  2954  0011F0  6E2C               	movwf	fillCircleHelper@delta+1,c
  2955  0011F2  0E00               	movlw	0
  2956  0011F4  6E2B               	movwf	fillCircleHelper@delta,c
  2957  0011F6  C041  F02D         	movff	fillCircle@color,fillCircleHelper@color
  2958  0011FA  C042  F02E         	movff	fillCircle@color+1,fillCircleHelper@color+1
  2959  0011FE  EC58  F004         	call	_fillCircleHelper	;wreg free
  2960  001202  0012               	return		;funcret
  2961  001204                     __end_of_fillCircle:
  2962                           	opt stack 0
  2963                           tblptru	equ	0xFF8
  2964                           tblptrh	equ	0xFF7
  2965                           tblptrl	equ	0xFF6
  2966                           tablat	equ	0xFF5
  2967                           prodh	equ	0xFF4
  2968                           prodl	equ	0xFF3
  2969                           intcon	equ	0xFF2
  2970                           intcon2	equ	0xFF1
  2971                           postinc0	equ	0xFEE
  2972                           wreg	equ	0xFE8
  2973                           postdec1	equ	0xFE5
  2974                           fsr1l	equ	0xFE1
  2975                           indf2	equ	0xFDF
  2976                           postinc2	equ	0xFDE
  2977                           postdec2	equ	0xFDD
  2978                           fsr2h	equ	0xFDA
  2979                           fsr2l	equ	0xFD9
  2980                           status	equ	0xFD8
  2981                           
  2982 ;; *************** function _fillCircleHelper *****************
  2983 ;; Defined at:
  2984 ;;		line 589 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab10.1.X/ST7735_TFT.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;  x0              2   34[COMRAM] int 
  2987 ;;  y0              2   36[COMRAM] int 
  2988 ;;  r               2   38[COMRAM] int 
  2989 ;;  cornername      2   40[COMRAM] unsigned int 
  2990 ;;  delta           2   42[COMRAM] int 
  2991 ;;  color           2   44[COMRAM] unsigned int 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  y               2   56[COMRAM] int 
  2994 ;;  x               2   54[COMRAM] int 
  2995 ;;  f               2   52[COMRAM] int 
  2996 ;;  ddF_y           2   50[COMRAM] int 
  2997 ;;  ddF_x           2   48[COMRAM] int 
  2998 ;; Return value:  Size  Location     Type
  2999 ;;		None               void
  3000 ;; Registers used:
  3001 ;;		wreg, status,2, status,0, cstack
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3007 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3008 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3009 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3010 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3011 ;;Total ram usage:       24 bytes
  3012 ;; Hardware stack levels used:    1
  3013 ;; Hardware stack levels required when called:    7
  3014 ;; This function calls:
  3015 ;;		_drawFastVLine
  3016 ;; This function is called by:
  3017 ;;		_fillCircle
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           	psect	text8
  3022  0008B0                     __ptext8:
  3023                           	opt stack 0
  3024  0008B0                     _fillCircleHelper:
  3025                           	opt stack 22
  3026                           
  3027                           ;ST7735_TFT.c: 591: signed int f, ddF_x, ddF_y, x, y;
  3028                           ;ST7735_TFT.c: 592: f = 1 - r, ddF_x = 1, ddF_y = -2 * r, x = 0, y = r;
  3029                           
  3030                           ;incstack = 0
  3031  0008B0  C027  F02F         	movff	fillCircleHelper@r,??_fillCircleHelper
  3032  0008B4  C028  F030         	movff	fillCircleHelper@r+1,??_fillCircleHelper+1
  3033  0008B8  1E2F               	comf	??_fillCircleHelper,f,c
  3034  0008BA  1E30               	comf	??_fillCircleHelper+1,f,c
  3035  0008BC  4A2F               	infsnz	??_fillCircleHelper,f,c
  3036  0008BE  2A30               	incf	??_fillCircleHelper+1,f,c
  3037  0008C0  0E01               	movlw	1
  3038  0008C2  242F               	addwf	??_fillCircleHelper,w,c
  3039  0008C4  6E35               	movwf	fillCircleHelper@f,c
  3040  0008C6  0E00               	movlw	0
  3041  0008C8  2030               	addwfc	??_fillCircleHelper+1,w,c
  3042  0008CA  6E36               	movwf	fillCircleHelper@f+1,c
  3043  0008CC  0E00               	movlw	0
  3044  0008CE  6E32               	movwf	fillCircleHelper@ddF_x+1,c
  3045  0008D0  0E01               	movlw	1
  3046  0008D2  6E31               	movwf	fillCircleHelper@ddF_x,c
  3047  0008D4  C027  F02F         	movff	fillCircleHelper@r,??_fillCircleHelper
  3048  0008D8  C028  F030         	movff	fillCircleHelper@r+1,??_fillCircleHelper+1
  3049  0008DC  90D8               	bcf	status,0,c
  3050  0008DE  362F               	rlcf	??_fillCircleHelper,f,c
  3051  0008E0  3630               	rlcf	??_fillCircleHelper+1,f,c
  3052  0008E2  1E2F               	comf	??_fillCircleHelper,f,c
  3053  0008E4  1E30               	comf	??_fillCircleHelper+1,f,c
  3054  0008E6  4A2F               	infsnz	??_fillCircleHelper,f,c
  3055  0008E8  2A30               	incf	??_fillCircleHelper+1,f,c
  3056  0008EA  C02F  F033         	movff	??_fillCircleHelper,fillCircleHelper@ddF_y
  3057  0008EE  C030  F034         	movff	??_fillCircleHelper+1,fillCircleHelper@ddF_y+1
  3058  0008F2  0E00               	movlw	0
  3059  0008F4  6E38               	movwf	fillCircleHelper@x+1,c
  3060  0008F6  0E00               	movlw	0
  3061  0008F8  6E37               	movwf	fillCircleHelper@x,c
  3062  0008FA  C027  F039         	movff	fillCircleHelper@r,fillCircleHelper@y
  3063  0008FE  C028  F03A         	movff	fillCircleHelper@r+1,fillCircleHelper@y+1
  3064                           
  3065                           ;ST7735_TFT.c: 593: while (x<y) {
  3066  000902  D067               	goto	l3519
  3067  000904                     l3499:
  3068                           
  3069                           ;ST7735_TFT.c: 594: if (f >= 0) {
  3070  000904  BE36               	btfsc	fillCircleHelper@f+1,7,c
  3071  000906  D00B               	goto	l345
  3072                           
  3073                           ;ST7735_TFT.c: 595: y--;
  3074  000908  0639               	decf	fillCircleHelper@y,f,c
  3075  00090A  A0D8               	btfss	status,0,c
  3076  00090C  063A               	decf	fillCircleHelper@y+1,f,c
  3077                           
  3078                           ;ST7735_TFT.c: 596: ddF_y += 2;
  3079  00090E  0E02               	movlw	2
  3080  000910  2633               	addwf	fillCircleHelper@ddF_y,f,c
  3081  000912  0E00               	movlw	0
  3082  000914  2234               	addwfc	fillCircleHelper@ddF_y+1,f,c
  3083                           
  3084                           ;ST7735_TFT.c: 597: f += ddF_y;
  3085  000916  5033               	movf	fillCircleHelper@ddF_y,w,c
  3086  000918  2635               	addwf	fillCircleHelper@f,f,c
  3087  00091A  5034               	movf	fillCircleHelper@ddF_y+1,w,c
  3088  00091C  2236               	addwfc	fillCircleHelper@f+1,f,c
  3089  00091E                     l345:
  3090                           
  3091                           ;ST7735_TFT.c: 598: }
  3092                           ;ST7735_TFT.c: 599: x++;
  3093  00091E  4A37               	infsnz	fillCircleHelper@x,f,c
  3094  000920  2A38               	incf	fillCircleHelper@x+1,f,c
  3095                           
  3096                           ;ST7735_TFT.c: 600: ddF_x += 2;
  3097  000922  0E02               	movlw	2
  3098  000924  2631               	addwf	fillCircleHelper@ddF_x,f,c
  3099  000926  0E00               	movlw	0
  3100  000928  2232               	addwfc	fillCircleHelper@ddF_x+1,f,c
  3101                           
  3102                           ;ST7735_TFT.c: 601: f += ddF_x;
  3103  00092A  5031               	movf	fillCircleHelper@ddF_x,w,c
  3104  00092C  2635               	addwf	fillCircleHelper@f,f,c
  3105  00092E  5032               	movf	fillCircleHelper@ddF_x+1,w,c
  3106  000930  2236               	addwfc	fillCircleHelper@f+1,f,c
  3107                           
  3108                           ;ST7735_TFT.c: 603: if (cornername & 0x1) {
  3109  000932  A029               	btfss	fillCircleHelper@cornername,0,c
  3110  000934  D025               	goto	l3515
  3111                           
  3112                           ;ST7735_TFT.c: 604: drawFastVLine(x0+x, y0-y, 2*y+1+delta, color);
  3113  000936  5039               	movf	fillCircleHelper@y,w,c
  3114  000938  0800               	sublw	0
  3115  00093A  2425               	addwf	fillCircleHelper@y0,w,c
  3116  00093C  6E18               	movwf	drawFastVLine@y,c
  3117  00093E  5039               	movf	fillCircleHelper@y,w,c
  3118  000940  2439               	addwf	fillCircleHelper@y,w,c
  3119  000942  242B               	addwf	fillCircleHelper@delta,w,c
  3120  000944  6E2F               	movwf	??_fillCircleHelper& (0+255),c
  3121  000946  282F               	incf	??_fillCircleHelper,w,c
  3122  000948  6E19               	movwf	drawFastVLine@h,c
  3123  00094A  C02D  F01A         	movff	fillCircleHelper@color,drawFastVLine@color
  3124  00094E  C02E  F01B         	movff	fillCircleHelper@color+1,drawFastVLine@color+1
  3125  000952  5023               	movf	fillCircleHelper@x0,w,c
  3126  000954  2437               	addwf	fillCircleHelper@x,w,c
  3127  000956  EC75  F007         	call	_drawFastVLine
  3128                           
  3129                           ;ST7735_TFT.c: 605: drawFastVLine(x0+y, y0-x, 2*x+1+delta, color);
  3130  00095A  5037               	movf	fillCircleHelper@x,w,c
  3131  00095C  0800               	sublw	0
  3132  00095E  2425               	addwf	fillCircleHelper@y0,w,c
  3133  000960  6E18               	movwf	drawFastVLine@y,c
  3134  000962  5037               	movf	fillCircleHelper@x,w,c
  3135  000964  2437               	addwf	fillCircleHelper@x,w,c
  3136  000966  242B               	addwf	fillCircleHelper@delta,w,c
  3137  000968  6E2F               	movwf	??_fillCircleHelper& (0+255),c
  3138  00096A  282F               	incf	??_fillCircleHelper,w,c
  3139  00096C  6E19               	movwf	drawFastVLine@h,c
  3140  00096E  C02D  F01A         	movff	fillCircleHelper@color,drawFastVLine@color
  3141  000972  C02E  F01B         	movff	fillCircleHelper@color+1,drawFastVLine@color+1
  3142  000976  5023               	movf	fillCircleHelper@x0,w,c
  3143  000978  2439               	addwf	fillCircleHelper@y,w,c
  3144  00097A  EC75  F007         	call	_drawFastVLine
  3145  00097E  D000               	goto	l3515
  3146  000980                     l3515:
  3147                           
  3148                           ;ST7735_TFT.c: 606: }
  3149                           ;ST7735_TFT.c: 607: if (cornername & 0x2) {
  3150  000980  A229               	btfss	fillCircleHelper@cornername,1,c
  3151  000982  D027               	goto	l3519
  3152                           
  3153                           ;ST7735_TFT.c: 608: drawFastVLine(x0-x, y0-y, 2*y+1+delta, color);
  3154  000984  5039               	movf	fillCircleHelper@y,w,c
  3155  000986  0800               	sublw	0
  3156  000988  2425               	addwf	fillCircleHelper@y0,w,c
  3157  00098A  6E18               	movwf	drawFastVLine@y,c
  3158  00098C  5039               	movf	fillCircleHelper@y,w,c
  3159  00098E  2439               	addwf	fillCircleHelper@y,w,c
  3160  000990  242B               	addwf	fillCircleHelper@delta,w,c
  3161  000992  6E2F               	movwf	??_fillCircleHelper& (0+255),c
  3162  000994  282F               	incf	??_fillCircleHelper,w,c
  3163  000996  6E19               	movwf	drawFastVLine@h,c
  3164  000998  C02D  F01A         	movff	fillCircleHelper@color,drawFastVLine@color
  3165  00099C  C02E  F01B         	movff	fillCircleHelper@color+1,drawFastVLine@color+1
  3166  0009A0  5037               	movf	fillCircleHelper@x,w,c
  3167  0009A2  0800               	sublw	0
  3168  0009A4  2423               	addwf	fillCircleHelper@x0,w,c
  3169  0009A6  EC75  F007         	call	_drawFastVLine
  3170                           
  3171                           ;ST7735_TFT.c: 609: drawFastVLine(x0-y, y0-x, 2*x+1+delta, color);
  3172  0009AA  5037               	movf	fillCircleHelper@x,w,c
  3173  0009AC  0800               	sublw	0
  3174  0009AE  2425               	addwf	fillCircleHelper@y0,w,c
  3175  0009B0  6E18               	movwf	drawFastVLine@y,c
  3176  0009B2  5037               	movf	fillCircleHelper@x,w,c
  3177  0009B4  2437               	addwf	fillCircleHelper@x,w,c
  3178  0009B6  242B               	addwf	fillCircleHelper@delta,w,c
  3179  0009B8  6E2F               	movwf	??_fillCircleHelper& (0+255),c
  3180  0009BA  282F               	incf	??_fillCircleHelper,w,c
  3181  0009BC  6E19               	movwf	drawFastVLine@h,c
  3182  0009BE  C02D  F01A         	movff	fillCircleHelper@color,drawFastVLine@color
  3183  0009C2  C02E  F01B         	movff	fillCircleHelper@color+1,drawFastVLine@color+1
  3184  0009C6  5039               	movf	fillCircleHelper@y,w,c
  3185  0009C8  0800               	sublw	0
  3186  0009CA  2423               	addwf	fillCircleHelper@x0,w,c
  3187  0009CC  EC75  F007         	call	_drawFastVLine
  3188  0009D0  D000               	goto	l3519
  3189  0009D2                     l3519:
  3190  0009D2  5039               	movf	fillCircleHelper@y,w,c
  3191  0009D4  5C37               	subwf	fillCircleHelper@x,w,c
  3192  0009D6  5038               	movf	fillCircleHelper@x+1,w,c
  3193  0009D8  0A80               	xorlw	128
  3194  0009DA  6E2F               	movwf	??_fillCircleHelper& (0+255),c
  3195  0009DC  503A               	movf	fillCircleHelper@y+1,w,c
  3196  0009DE  0A80               	xorlw	128
  3197  0009E0  582F               	subwfb	??_fillCircleHelper& (0+255),w,c
  3198  0009E2  A0D8               	btfss	status,0,c
  3199  0009E4  D78F               	goto	l3499
  3200  0009E6  0012               	return		;funcret
  3201  0009E8                     __end_of_fillCircleHelper:
  3202                           	opt stack 0
  3203                           tblptru	equ	0xFF8
  3204                           tblptrh	equ	0xFF7
  3205                           tblptrl	equ	0xFF6
  3206                           tablat	equ	0xFF5
  3207                           prodh	equ	0xFF4
  3208                           prodl	equ	0xFF3
  3209                           intcon	equ	0xFF2
  3210                           intcon2	equ	0xFF1
  3211                           postinc0	equ	0xFEE
  3212                           wreg	equ	0xFE8
  3213                           postdec1	equ	0xFE5
  3214                           fsr1l	equ	0xFE1
  3215                           indf2	equ	0xFDF
  3216                           postinc2	equ	0xFDE
  3217                           postdec2	equ	0xFDD
  3218                           fsr2h	equ	0xFDA
  3219                           fsr2l	equ	0xFD9
  3220                           status	equ	0xFD8
  3221                           
  3222 ;; *************** function _drawCircle *****************
  3223 ;; Defined at:
  3224 ;;		line 528 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab10.1.X/ST7735_TFT.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;  x0              2   27[COMRAM] int 
  3227 ;;  y0              2   29[COMRAM] int 
  3228 ;;  r               2   31[COMRAM] int 
  3229 ;;  color           2   33[COMRAM] unsigned int 
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;  y               2   45[COMRAM] int 
  3232 ;;  x               2   43[COMRAM] int 
  3233 ;;  f               2   41[COMRAM] int 
  3234 ;;  ddF_y           2   39[COMRAM] int 
  3235 ;;  ddF_x           2   37[COMRAM] int 
  3236 ;; Return value:  Size  Location     Type
  3237 ;;		None               void
  3238 ;; Registers used:
  3239 ;;		wreg, status,2, status,0, cstack
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3245 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3246 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3247 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3248 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3249 ;;Total ram usage:       20 bytes
  3250 ;; Hardware stack levels used:    1
  3251 ;; Hardware stack levels required when called:    7
  3252 ;; This function calls:
  3253 ;;		_drawPixel
  3254 ;; This function is called by:
  3255 ;;		_main
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259                           	psect	text9
  3260  0002BE                     __ptext9:
  3261                           	opt stack 0
  3262  0002BE                     _drawCircle:
  3263                           	opt stack 23
  3264                           
  3265                           ;ST7735_TFT.c: 530: signed int f, ddF_x, ddF_y, x, y;
  3266                           ;ST7735_TFT.c: 531: f = 1 - r, ddF_x = 1, ddF_y = -2 * r, x = 0, y = r;
  3267                           
  3268                           ;incstack = 0
  3269  0002BE  C020  F024         	movff	drawCircle@r,??_drawCircle
  3270  0002C2  C021  F025         	movff	drawCircle@r+1,??_drawCircle+1
  3271  0002C6  1E24               	comf	??_drawCircle,f,c
  3272  0002C8  1E25               	comf	??_drawCircle+1,f,c
  3273  0002CA  4A24               	infsnz	??_drawCircle,f,c
  3274  0002CC  2A25               	incf	??_drawCircle+1,f,c
  3275  0002CE  0E01               	movlw	1
  3276  0002D0  2424               	addwf	??_drawCircle,w,c
  3277  0002D2  6E2A               	movwf	drawCircle@f,c
  3278  0002D4  0E00               	movlw	0
  3279  0002D6  2025               	addwfc	??_drawCircle+1,w,c
  3280  0002D8  6E2B               	movwf	drawCircle@f+1,c
  3281  0002DA  0E00               	movlw	0
  3282  0002DC  6E27               	movwf	drawCircle@ddF_x+1,c
  3283  0002DE  0E01               	movlw	1
  3284  0002E0  6E26               	movwf	drawCircle@ddF_x,c
  3285  0002E2  C020  F024         	movff	drawCircle@r,??_drawCircle
  3286  0002E6  C021  F025         	movff	drawCircle@r+1,??_drawCircle+1
  3287  0002EA  90D8               	bcf	status,0,c
  3288  0002EC  3624               	rlcf	??_drawCircle,f,c
  3289  0002EE  3625               	rlcf	??_drawCircle+1,f,c
  3290  0002F0  1E24               	comf	??_drawCircle,f,c
  3291  0002F2  1E25               	comf	??_drawCircle+1,f,c
  3292  0002F4  4A24               	infsnz	??_drawCircle,f,c
  3293  0002F6  2A25               	incf	??_drawCircle+1,f,c
  3294  0002F8  C024  F028         	movff	??_drawCircle,drawCircle@ddF_y
  3295  0002FC  C025  F029         	movff	??_drawCircle+1,drawCircle@ddF_y+1
  3296  000300  0E00               	movlw	0
  3297  000302  6E2D               	movwf	drawCircle@x+1,c
  3298  000304  0E00               	movlw	0
  3299  000306  6E2C               	movwf	drawCircle@x,c
  3300  000308  C020  F02E         	movff	drawCircle@r,drawCircle@y
  3301  00030C  C021  F02F         	movff	drawCircle@r+1,drawCircle@y+1
  3302                           
  3303                           ;ST7735_TFT.c: 532: drawPixel(x0 , y0 + r, color);
  3304  000310  501E               	movf	drawCircle@y0,w,c
  3305  000312  2420               	addwf	drawCircle@r,w,c
  3306  000314  6E18               	movwf	drawPixel@y,c
  3307  000316  C022  F019         	movff	drawCircle@color,drawPixel@color
  3308  00031A  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3309  00031E  501C               	movf	drawCircle@x0,w,c
  3310  000320  ECCE  F009         	call	_drawPixel
  3311                           
  3312                           ;ST7735_TFT.c: 533: drawPixel(x0 , y0 - r, color);
  3313  000324  5020               	movf	drawCircle@r,w,c
  3314  000326  0800               	sublw	0
  3315  000328  241E               	addwf	drawCircle@y0,w,c
  3316  00032A  6E18               	movwf	drawPixel@y,c
  3317  00032C  C022  F019         	movff	drawCircle@color,drawPixel@color
  3318  000330  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3319  000334  501C               	movf	drawCircle@x0,w,c
  3320  000336  ECCE  F009         	call	_drawPixel
  3321                           
  3322                           ;ST7735_TFT.c: 534: drawPixel(x0+r, y0 , color);
  3323  00033A  C01E  F018         	movff	drawCircle@y0,drawPixel@y
  3324  00033E  C022  F019         	movff	drawCircle@color,drawPixel@color
  3325  000342  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3326  000346  501C               	movf	drawCircle@x0,w,c
  3327  000348  2420               	addwf	drawCircle@r,w,c
  3328  00034A  ECCE  F009         	call	_drawPixel
  3329                           
  3330                           ;ST7735_TFT.c: 535: drawPixel(x0-r, y0 , color);
  3331  00034E  C01E  F018         	movff	drawCircle@y0,drawPixel@y
  3332  000352  C022  F019         	movff	drawCircle@color,drawPixel@color
  3333  000356  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3334  00035A  5020               	movf	drawCircle@r,w,c
  3335  00035C  0800               	sublw	0
  3336  00035E  241C               	addwf	drawCircle@x0,w,c
  3337  000360  ECCE  F009         	call	_drawPixel
  3338                           
  3339                           ;ST7735_TFT.c: 536: while (x < y) {
  3340  000364  D078               	goto	l3669
  3341  000366                     l3641:
  3342                           
  3343                           ;ST7735_TFT.c: 537: if (f >= 0) {
  3344  000366  BE2B               	btfsc	drawCircle@f+1,7,c
  3345  000368  D00B               	goto	l327
  3346                           
  3347                           ;ST7735_TFT.c: 538: y--;
  3348  00036A  062E               	decf	drawCircle@y,f,c
  3349  00036C  A0D8               	btfss	status,0,c
  3350  00036E  062F               	decf	drawCircle@y+1,f,c
  3351                           
  3352                           ;ST7735_TFT.c: 539: ddF_y += 2;
  3353  000370  0E02               	movlw	2
  3354  000372  2628               	addwf	drawCircle@ddF_y,f,c
  3355  000374  0E00               	movlw	0
  3356  000376  2229               	addwfc	drawCircle@ddF_y+1,f,c
  3357                           
  3358                           ;ST7735_TFT.c: 540: f += ddF_y;
  3359  000378  5028               	movf	drawCircle@ddF_y,w,c
  3360  00037A  262A               	addwf	drawCircle@f,f,c
  3361  00037C  5029               	movf	drawCircle@ddF_y+1,w,c
  3362  00037E  222B               	addwfc	drawCircle@f+1,f,c
  3363  000380                     l327:
  3364                           
  3365                           ;ST7735_TFT.c: 541: }
  3366                           ;ST7735_TFT.c: 542: x++;
  3367  000380  4A2C               	infsnz	drawCircle@x,f,c
  3368  000382  2A2D               	incf	drawCircle@x+1,f,c
  3369                           
  3370                           ;ST7735_TFT.c: 543: ddF_x += 2;
  3371  000384  0E02               	movlw	2
  3372  000386  2626               	addwf	drawCircle@ddF_x,f,c
  3373  000388  0E00               	movlw	0
  3374  00038A  2227               	addwfc	drawCircle@ddF_x+1,f,c
  3375                           
  3376                           ;ST7735_TFT.c: 544: f += ddF_x;
  3377  00038C  5026               	movf	drawCircle@ddF_x,w,c
  3378  00038E  262A               	addwf	drawCircle@f,f,c
  3379  000390  5027               	movf	drawCircle@ddF_x+1,w,c
  3380  000392  222B               	addwfc	drawCircle@f+1,f,c
  3381                           
  3382                           ;ST7735_TFT.c: 545: drawPixel(x0 + x, y0 + y, color);
  3383  000394  501E               	movf	drawCircle@y0,w,c
  3384  000396  242E               	addwf	drawCircle@y,w,c
  3385  000398  6E18               	movwf	drawPixel@y,c
  3386  00039A  C022  F019         	movff	drawCircle@color,drawPixel@color
  3387  00039E  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3388  0003A2  501C               	movf	drawCircle@x0,w,c
  3389  0003A4  242C               	addwf	drawCircle@x,w,c
  3390  0003A6  ECCE  F009         	call	_drawPixel
  3391                           
  3392                           ;ST7735_TFT.c: 546: drawPixel(x0 - x, y0 + y, color);
  3393  0003AA  501E               	movf	drawCircle@y0,w,c
  3394  0003AC  242E               	addwf	drawCircle@y,w,c
  3395  0003AE  6E18               	movwf	drawPixel@y,c
  3396  0003B0  C022  F019         	movff	drawCircle@color,drawPixel@color
  3397  0003B4  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3398  0003B8  502C               	movf	drawCircle@x,w,c
  3399  0003BA  0800               	sublw	0
  3400  0003BC  241C               	addwf	drawCircle@x0,w,c
  3401  0003BE  ECCE  F009         	call	_drawPixel
  3402                           
  3403                           ;ST7735_TFT.c: 547: drawPixel(x0 + x, y0 - y, color);
  3404  0003C2  502E               	movf	drawCircle@y,w,c
  3405  0003C4  0800               	sublw	0
  3406  0003C6  241E               	addwf	drawCircle@y0,w,c
  3407  0003C8  6E18               	movwf	drawPixel@y,c
  3408  0003CA  C022  F019         	movff	drawCircle@color,drawPixel@color
  3409  0003CE  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3410  0003D2  501C               	movf	drawCircle@x0,w,c
  3411  0003D4  242C               	addwf	drawCircle@x,w,c
  3412  0003D6  ECCE  F009         	call	_drawPixel
  3413                           
  3414                           ;ST7735_TFT.c: 548: drawPixel(x0 - x, y0 - y, color);
  3415  0003DA  502E               	movf	drawCircle@y,w,c
  3416  0003DC  0800               	sublw	0
  3417  0003DE  241E               	addwf	drawCircle@y0,w,c
  3418  0003E0  6E18               	movwf	drawPixel@y,c
  3419  0003E2  C022  F019         	movff	drawCircle@color,drawPixel@color
  3420  0003E6  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3421  0003EA  502C               	movf	drawCircle@x,w,c
  3422  0003EC  0800               	sublw	0
  3423  0003EE  241C               	addwf	drawCircle@x0,w,c
  3424  0003F0  ECCE  F009         	call	_drawPixel
  3425                           
  3426                           ;ST7735_TFT.c: 549: drawPixel(x0 + y, y0 + x, color);
  3427  0003F4  501E               	movf	drawCircle@y0,w,c
  3428  0003F6  242C               	addwf	drawCircle@x,w,c
  3429  0003F8  6E18               	movwf	drawPixel@y,c
  3430  0003FA  C022  F019         	movff	drawCircle@color,drawPixel@color
  3431  0003FE  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3432  000402  501C               	movf	drawCircle@x0,w,c
  3433  000404  242E               	addwf	drawCircle@y,w,c
  3434  000406  ECCE  F009         	call	_drawPixel
  3435                           
  3436                           ;ST7735_TFT.c: 550: drawPixel(x0 - y, y0 + x, color);
  3437  00040A  501E               	movf	drawCircle@y0,w,c
  3438  00040C  242C               	addwf	drawCircle@x,w,c
  3439  00040E  6E18               	movwf	drawPixel@y,c
  3440  000410  C022  F019         	movff	drawCircle@color,drawPixel@color
  3441  000414  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3442  000418  502E               	movf	drawCircle@y,w,c
  3443  00041A  0800               	sublw	0
  3444  00041C  241C               	addwf	drawCircle@x0,w,c
  3445  00041E  ECCE  F009         	call	_drawPixel
  3446                           
  3447                           ;ST7735_TFT.c: 551: drawPixel(x0 + y, y0 - x, color);
  3448  000422  502C               	movf	drawCircle@x,w,c
  3449  000424  0800               	sublw	0
  3450  000426  241E               	addwf	drawCircle@y0,w,c
  3451  000428  6E18               	movwf	drawPixel@y,c
  3452  00042A  C022  F019         	movff	drawCircle@color,drawPixel@color
  3453  00042E  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3454  000432  501C               	movf	drawCircle@x0,w,c
  3455  000434  242E               	addwf	drawCircle@y,w,c
  3456  000436  ECCE  F009         	call	_drawPixel
  3457                           
  3458                           ;ST7735_TFT.c: 552: drawPixel(x0 - y, y0 - x, color);
  3459  00043A  502C               	movf	drawCircle@x,w,c
  3460  00043C  0800               	sublw	0
  3461  00043E  241E               	addwf	drawCircle@y0,w,c
  3462  000440  6E18               	movwf	drawPixel@y,c
  3463  000442  C022  F019         	movff	drawCircle@color,drawPixel@color
  3464  000446  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  3465  00044A  502E               	movf	drawCircle@y,w,c
  3466  00044C  0800               	sublw	0
  3467  00044E  241C               	addwf	drawCircle@x0,w,c
  3468  000450  ECCE  F009         	call	_drawPixel
  3469  000454  D000               	goto	l3669
  3470  000456                     l3669:
  3471  000456  502E               	movf	drawCircle@y,w,c
  3472  000458  5C2C               	subwf	drawCircle@x,w,c
  3473  00045A  502D               	movf	drawCircle@x+1,w,c
  3474  00045C  0A80               	xorlw	128
  3475  00045E  6E24               	movwf	??_drawCircle& (0+255),c
  3476  000460  502F               	movf	drawCircle@y+1,w,c
  3477  000462  0A80               	xorlw	128
  3478  000464  5824               	subwfb	??_drawCircle& (0+255),w,c
  3479  000466  A0D8               	btfss	status,0,c
  3480  000468  D77E               	goto	l3641
  3481  00046A  0012               	return		;funcret
  3482  00046C                     __end_of_drawCircle:
  3483                           	opt stack 0
  3484                           tblptru	equ	0xFF8
  3485                           tblptrh	equ	0xFF7
  3486                           tblptrl	equ	0xFF6
  3487                           tablat	equ	0xFF5
  3488                           prodh	equ	0xFF4
  3489                           prodl	equ	0xFF3
  3490                           intcon	equ	0xFF2
  3491                           intcon2	equ	0xFF1
  3492                           postinc0	equ	0xFEE
  3493                           wreg	equ	0xFE8
  3494                           postdec1	equ	0xFE5
  3495                           fsr1l	equ	0xFE1
  3496                           indf2	equ	0xFDF
  3497                           postinc2	equ	0xFDE
  3498                           postdec2	equ	0xFDD
  3499                           fsr2h	equ	0xFDA
  3500                           fsr2l	equ	0xFD9
  3501                           status	equ	0xFD8
  3502                           
  3503 ;; *************** function _Wait_One_Sec *****************
  3504 ;; Defined at:
  3505 ;;		line 185 in file "Lab10.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;		None
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;  k               2   16[COMRAM] int 
  3510 ;; Return value:  Size  Location     Type
  3511 ;;		None               void
  3512 ;; Registers used:
  3513 ;;		wreg, status,2, status,0
  3514 ;; Tracked objects:
  3515 ;;		On entry : 0/0
  3516 ;;		On exit  : 0/0
  3517 ;;		Unchanged: 0/0
  3518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3520 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;Total ram usage:        2 bytes
  3524 ;; Hardware stack levels used:    1
  3525 ;; Hardware stack levels required when called:    3
  3526 ;; This function calls:
  3527 ;;		Nothing
  3528 ;; This function is called by:
  3529 ;;		_main
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532                           
  3533                           	psect	text10
  3534  00141E                     __ptext10:
  3535                           	opt stack 0
  3536  00141E                     _Wait_One_Sec:
  3537                           	opt stack 27
  3538                           
  3539                           ;Lab10.c: 186: for (int k = 0; k < 17000;k++);
  3540                           
  3541                           ;incstack = 0
  3542  00141E  0E00               	movlw	0
  3543  001420  6E12               	movwf	Wait_One_Sec@k+1,c
  3544  001422  0E00               	movlw	0
  3545  001424  6E11               	movwf	Wait_One_Sec@k,c
  3546  001426                     l2633:
  3547  001426  BE12               	btfsc	Wait_One_Sec@k+1,7,c
  3548  001428  D008               	goto	l2637
  3549  00142A  0E68               	movlw	104
  3550  00142C  5C11               	subwf	Wait_One_Sec@k,w,c
  3551  00142E  0E42               	movlw	66
  3552  001430  5812               	subwfb	Wait_One_Sec@k+1,w,c
  3553  001432  B0D8               	btfsc	status,0,c
  3554  001434  D005               	goto	l148
  3555  001436  D001               	goto	l2637
  3556  001438  D003               	goto	l148
  3557  00143A                     l2637:
  3558  00143A  4A11               	infsnz	Wait_One_Sec@k,f,c
  3559  00143C  2A12               	incf	Wait_One_Sec@k+1,f,c
  3560  00143E  D7F3               	goto	l2633
  3561  001440                     l148:
  3562  001440  0012               	return		;funcret
  3563  001442                     __end_of_Wait_One_Sec:
  3564                           	opt stack 0
  3565                           tblptru	equ	0xFF8
  3566                           tblptrh	equ	0xFF7
  3567                           tblptrl	equ	0xFF6
  3568                           tablat	equ	0xFF5
  3569                           prodh	equ	0xFF4
  3570                           prodl	equ	0xFF3
  3571                           intcon	equ	0xFF2
  3572                           intcon2	equ	0xFF1
  3573                           postinc0	equ	0xFEE
  3574                           wreg	equ	0xFE8
  3575                           postdec1	equ	0xFE5
  3576                           fsr1l	equ	0xFE1
  3577                           indf2	equ	0xFDF
  3578                           postinc2	equ	0xFDE
  3579                           postdec2	equ	0xFDD
  3580                           fsr2h	equ	0xFDA
  3581                           fsr2l	equ	0xFD9
  3582                           status	equ	0xFD8
  3583                           
  3584 ;; *************** function _Initialize_Screen *****************
  3585 ;; Defined at:
  3586 ;;		line 261 in file "Lab10.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;		None
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;		None
  3591 ;; Return value:  Size  Location     Type
  3592 ;;		None               void
  3593 ;; Registers used:
  3594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3604 ;;Total ram usage:        0 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; Hardware stack levels required when called:   10
  3607 ;; This function calls:
  3608 ;;		_LCD_Reset
  3609 ;;		_TFT_GreenTab_Initialize
  3610 ;;		_drawtext
  3611 ;;		_fillScreen
  3612 ;;		_strcpy
  3613 ;; This function is called by:
  3614 ;;		_main
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           	psect	text11
  3619  000DD0                     __ptext11:
  3620                           	opt stack 0
  3621  000DD0                     _Initialize_Screen:
  3622                           	opt stack 20
  3623                           
  3624                           ;Lab10.c: 263: LCD_Reset();
  3625                           
  3626                           ;incstack = 0
  3627  000DD0  EC5F  F00A         	call	_LCD_Reset	;wreg free
  3628                           
  3629                           ;Lab10.c: 264: TFT_GreenTab_Initialize();
  3630  000DD4  ECE6  F009         	call	_TFT_GreenTab_Initialize	;wreg free
  3631                           
  3632                           ;Lab10.c: 265: fillScreen(0x0000);
  3633  000DD8  0E00               	movlw	0
  3634  000DDA  6E25               	movwf	fillScreen@color+1,c
  3635  000DDC  0E00               	movlw	0
  3636  000DDE  6E24               	movwf	fillScreen@color,c
  3637  000DE0  EC32  F00A         	call	_fillScreen	;wreg free
  3638                           
  3639                           ;Lab10.c: 268: txt = buffer;
  3640  000DE4  0ED4               	movlw	low _buffer
  3641  000DE6  6E67               	movwf	_txt,c
  3642  000DE8  0E00               	movlw	high _buffer
  3643  000DEA  6E68               	movwf	_txt+1,c
  3644                           
  3645                           ;Lab10.c: 269: strcpy(txt, "ECE3301L Spring 21-S3");
  3646  000DEC  C067  F011         	movff	_txt,strcpy@to
  3647  000DF0  C068  F012         	movff	_txt+1,strcpy@to+1
  3648  000DF4  0ED0               	movlw	low STR_2
  3649  000DF6  6E13               	movwf	strcpy@from,c
  3650  000DF8  0EFF               	movlw	high STR_2
  3651  000DFA  6E14               	movwf	strcpy@from+1,c
  3652  000DFC  ECB5  F009         	call	_strcpy	;wreg free
  3653                           
  3654                           ;Lab10.c: 270: drawtext(2, 2, txt, 0xFFFF, 0x0000, 1);
  3655  000E00  0E02               	movlw	2
  3656  000E02  6E39               	movwf	drawtext@y,c
  3657  000E04  C067  F03A         	movff	_txt,drawtext@_text
  3658  000E08  C068  F03B         	movff	_txt+1,drawtext@_text+1
  3659  000E0C  0EFF               	movlw	255
  3660  000E0E  6E3D               	movwf	drawtext@color+1,c
  3661  000E10  683C               	setf	drawtext@color,c
  3662  000E12  0E00               	movlw	0
  3663  000E14  6E3F               	movwf	drawtext@bg+1,c
  3664  000E16  0E00               	movlw	0
  3665  000E18  6E3E               	movwf	drawtext@bg,c
  3666  000E1A  0E01               	movlw	1
  3667  000E1C  6E40               	movwf	drawtext@size,c
  3668  000E1E  0E02               	movlw	2
  3669  000E20  EC7C  F005         	call	_drawtext
  3670                           
  3671                           ;Lab10.c: 272: strcpy(txt, "LAB 10 ");
  3672  000E24  C067  F011         	movff	_txt,strcpy@to
  3673  000E28  C068  F012         	movff	_txt+1,strcpy@to+1
  3674  000E2C  0EF7               	movlw	low STR_3
  3675  000E2E  6E13               	movwf	strcpy@from,c
  3676  000E30  0EFF               	movlw	high STR_3
  3677  000E32  6E14               	movwf	strcpy@from+1,c
  3678  000E34  ECB5  F009         	call	_strcpy	;wreg free
  3679                           
  3680                           ;Lab10.c: 273: drawtext(50, 10, txt, 0xFFFF, 0x0000, 1);
  3681  000E38  0E0A               	movlw	10
  3682  000E3A  6E39               	movwf	drawtext@y,c
  3683  000E3C  C067  F03A         	movff	_txt,drawtext@_text
  3684  000E40  C068  F03B         	movff	_txt+1,drawtext@_text+1
  3685  000E44  0EFF               	movlw	255
  3686  000E46  6E3D               	movwf	drawtext@color+1,c
  3687  000E48  683C               	setf	drawtext@color,c
  3688  000E4A  0E00               	movlw	0
  3689  000E4C  6E3F               	movwf	drawtext@bg+1,c
  3690  000E4E  0E00               	movlw	0
  3691  000E50  6E3E               	movwf	drawtext@bg,c
  3692  000E52  0E01               	movlw	1
  3693  000E54  6E40               	movwf	drawtext@size,c
  3694  000E56  0E32               	movlw	50
  3695  000E58  EC7C  F005         	call	_drawtext
  3696  000E5C  0012               	return		;funcret
  3697  000E5E                     __end_of_Initialize_Screen:
  3698                           	opt stack 0
  3699                           tblptru	equ	0xFF8
  3700                           tblptrh	equ	0xFF7
  3701                           tblptrl	equ	0xFF6
  3702                           tablat	equ	0xFF5
  3703                           prodh	equ	0xFF4
  3704                           prodl	equ	0xFF3
  3705                           intcon	equ	0xFF2
  3706                           intcon2	equ	0xFF1
  3707                           postinc0	equ	0xFEE
  3708                           wreg	equ	0xFE8
  3709                           postdec1	equ	0xFE5
  3710                           fsr1l	equ	0xFE1
  3711                           indf2	equ	0xFDF
  3712                           postinc2	equ	0xFDE
  3713                           postdec2	equ	0xFDD
  3714                           fsr2h	equ	0xFDA
  3715                           fsr2l	equ	0xFD9
  3716                           status	equ	0xFD8
  3717                           
  3718 ;; *************** function _strcpy *****************
  3719 ;; Defined at:
  3720 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcpy.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;  to              2   16[COMRAM] PTR unsigned char 
  3723 ;;		 -> NULL(0), buffer(31), 
  3724 ;;  from            2   18[COMRAM] PTR const unsigned char 
  3725 ;;		 -> STR_3(8), STR_2(22), 
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  cp              2   20[COMRAM] PTR unsigned char 
  3728 ;;		 -> NULL(0), buffer(31), 
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  2   16[COMRAM] PTR unsigned char 
  3731 ;; Registers used:
  3732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3738 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3739 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3741 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3742 ;;Total ram usage:        6 bytes
  3743 ;; Hardware stack levels used:    1
  3744 ;; Hardware stack levels required when called:    3
  3745 ;; This function calls:
  3746 ;;		Nothing
  3747 ;; This function is called by:
  3748 ;;		_Initialize_Screen
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752                           	psect	text12
  3753  00136A                     __ptext12:
  3754                           	opt stack 0
  3755  00136A                     _strcpy:
  3756                           	opt stack 26
  3757                           
  3758                           ;incstack = 0
  3759  00136A  C011  F015         	movff	strcpy@to,strcpy@cp
  3760  00136E  C012  F016         	movff	strcpy@to+1,strcpy@cp+1
  3761  001372  D005               	goto	l2559
  3762  001374                     l2557:
  3763  001374  4A15               	infsnz	strcpy@cp,f,c
  3764  001376  2A16               	incf	strcpy@cp+1,f,c
  3765  001378  4A13               	infsnz	strcpy@from,f,c
  3766  00137A  2A14               	incf	strcpy@from+1,f,c
  3767  00137C  D000               	goto	l2559
  3768  00137E                     l2559:
  3769  00137E  C013  FFF6         	movff	strcpy@from,tblptrl
  3770  001382  C014  FFF7         	movff	strcpy@from+1,tblptrh
  3771  001386                     	if	0	;tblptru may be non-zero
  3772  001386                     	endif
  3773  001386                     	if	0	;tblptru may be non-zero
  3774  001386                     	endif
  3775  001386  C015  FFD9         	movff	strcpy@cp,fsr2l
  3776  00138A  C016  FFDA         	movff	strcpy@cp+1,fsr2h
  3777  00138E  0008               	tblrd		*
  3778  001390  CFF5 FFDF          	movff	tablat,indf2
  3779  001394  50DF               	movf	indf2,w,c
  3780  001396  A4D8               	btfss	status,2,c
  3781  001398  D7ED               	goto	l2557
  3782                           
  3783                           ;	Return value of _strcpy is never used
  3784  00139A  0012               	return		;funcret
  3785  00139C                     __end_of_strcpy:
  3786                           	opt stack 0
  3787                           tblptru	equ	0xFF8
  3788                           tblptrh	equ	0xFF7
  3789                           tblptrl	equ	0xFF6
  3790                           tablat	equ	0xFF5
  3791                           prodh	equ	0xFF4
  3792                           prodl	equ	0xFF3
  3793                           intcon	equ	0xFF2
  3794                           intcon2	equ	0xFF1
  3795                           postinc0	equ	0xFEE
  3796                           wreg	equ	0xFE8
  3797                           postdec1	equ	0xFE5
  3798                           fsr1l	equ	0xFE1
  3799                           indf2	equ	0xFDF
  3800                           postinc2	equ	0xFDE
  3801                           postdec2	equ	0xFDD
  3802                           fsr2h	equ	0xFDA
  3803                           fsr2l	equ	0xFD9
  3804                           status	equ	0xFD8
  3805                           
  3806 ;; *************** function _fillScreen *****************
  3807 ;; Defined at:
  3808 ;;		line 619 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab10.1.X/ST7735_TFT.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;  color           2   35[COMRAM] unsigned int 
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;		None
  3813 ;; Return value:  Size  Location     Type
  3814 ;;		None               void
  3815 ;; Registers used:
  3816 ;;		wreg, status,2, status,0, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3825 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3826 ;;Total ram usage:        2 bytes
  3827 ;; Hardware stack levels used:    1
  3828 ;; Hardware stack levels required when called:    7
  3829 ;; This function calls:
  3830 ;;		_fillRectangle
  3831 ;; This function is called by:
  3832 ;;		_Initialize_Screen
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           	psect	text13
  3837  001464                     __ptext13:
  3838                           	opt stack 0
  3839  001464                     _fillScreen:
  3840                           	opt stack 22
  3841                           
  3842                           ;ST7735_TFT.c: 621: fillRectangle(0, 0, 128, 160, color);
  3843                           
  3844                           ;incstack = 0
  3845  001464  0E00               	movlw	0
  3846  001466  6E18               	movwf	fillRectangle@y,c
  3847  001468  0E80               	movlw	128
  3848  00146A  6E19               	movwf	fillRectangle@w,c
  3849  00146C  0EA0               	movlw	160
  3850  00146E  6E1A               	movwf	fillRectangle@h,c
  3851  001470  C024  F01B         	movff	fillScreen@color,fillRectangle@color
  3852  001474  C025  F01C         	movff	fillScreen@color+1,fillRectangle@color+1
  3853  001478  0E00               	movlw	0
  3854  00147A  EC7A  F006         	call	_fillRectangle
  3855  00147E  0012               	return		;funcret
  3856  001480                     __end_of_fillScreen:
  3857                           	opt stack 0
  3858                           tblptru	equ	0xFF8
  3859                           tblptrh	equ	0xFF7
  3860                           tblptrl	equ	0xFF6
  3861                           tablat	equ	0xFF5
  3862                           prodh	equ	0xFF4
  3863                           prodl	equ	0xFF3
  3864                           intcon	equ	0xFF2
  3865                           intcon2	equ	0xFF1
  3866                           postinc0	equ	0xFEE
  3867                           wreg	equ	0xFE8
  3868                           postdec1	equ	0xFE5
  3869                           fsr1l	equ	0xFE1
  3870                           indf2	equ	0xFDF
  3871                           postinc2	equ	0xFDE
  3872                           postdec2	equ	0xFDD
  3873                           fsr2h	equ	0xFDA
  3874                           fsr2l	equ	0xFD9
  3875                           status	equ	0xFD8
  3876                           
  3877 ;; *************** function _fillRectangle *****************
  3878 ;; Defined at:
  3879 ;;		line 503 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab10.1.X/ST7735_TFT.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;  x               1    wreg     unsigned char 
  3882 ;;  y               1   23[COMRAM] unsigned char 
  3883 ;;  w               1   24[COMRAM] unsigned char 
  3884 ;;  h               1   25[COMRAM] unsigned char 
  3885 ;;  color           2   26[COMRAM] unsigned int 
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;  x               1   34[COMRAM] unsigned char 
  3888 ;;  lo              1   33[COMRAM] unsigned char 
  3889 ;;  hi              1   32[COMRAM] unsigned char 
  3890 ;; Return value:  Size  Location     Type
  3891 ;;		None               void
  3892 ;; Registers used:
  3893 ;;		wreg, status,2, status,0, cstack
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3899 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3900 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3901 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3902 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;Total ram usage:       12 bytes
  3904 ;; Hardware stack levels used:    1
  3905 ;; Hardware stack levels required when called:    6
  3906 ;; This function calls:
  3907 ;;		_setAddrWindow
  3908 ;;		_spiwrite
  3909 ;; This function is called by:
  3910 ;;		_fillScreen
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           
  3914                           	psect	text14
  3915  000CF4                     __ptext14:
  3916                           	opt stack 0
  3917  000CF4                     _fillRectangle:
  3918                           	opt stack 22
  3919                           
  3920                           ;incstack = 0
  3921                           ;fillRectangle@x stored from wreg
  3922  000CF4  6E23               	movwf	fillRectangle@x,c
  3923                           
  3924                           ;ST7735_TFT.c: 505: unsigned char hi, lo;
  3925                           ;ST7735_TFT.c: 506: if((x >= 128) || (y >= 160))
  3926  000CF6  0E80               	movlw	128
  3927  000CF8  6023               	cpfslt	fillRectangle@x,c
  3928  000CFA  D069               	goto	l316
  3929  000CFC  0E9F               	movlw	159
  3930  000CFE  6418               	cpfsgt	fillRectangle@y,c
  3931  000D00  D001               	goto	l3393
  3932                           
  3933                           ;ST7735_TFT.c: 507: return;
  3934  000D02  D065               	goto	l316
  3935  000D04                     l3393:
  3936                           
  3937                           ;ST7735_TFT.c: 508: if((x + w - 1) >= 128)
  3938  000D04  0EFF               	movlw	255
  3939  000D06  6E1D               	movwf	??_fillRectangle& (0+255),c
  3940  000D08  0EFF               	movlw	255
  3941  000D0A  6E1E               	movwf	(??_fillRectangle+1)& (0+255),c
  3942  000D0C  5019               	movf	fillRectangle@w,w,c
  3943  000D0E  C023  F01F         	movff	fillRectangle@x,??_fillRectangle+2
  3944  000D12  6A20               	clrf	(??_fillRectangle+3)& (0+255),c
  3945  000D14  261F               	addwf	??_fillRectangle+2,f,c
  3946  000D16  0E00               	movlw	0
  3947  000D18  2220               	addwfc	??_fillRectangle+3,f,c
  3948  000D1A  501D               	movf	??_fillRectangle,w,c
  3949  000D1C  261F               	addwf	??_fillRectangle+2,f,c
  3950  000D1E  501E               	movf	??_fillRectangle+1,w,c
  3951  000D20  2220               	addwfc	??_fillRectangle+3,f,c
  3952  000D22  BE20               	btfsc	??_fillRectangle+3,7,c
  3953  000D24  D00A               	goto	l317
  3954  000D26  5020               	movf	??_fillRectangle+3,w,c
  3955  000D28  E104               	bnz	u2400
  3956  000D2A  0E80               	movlw	128
  3957  000D2C  5C1F               	subwf	??_fillRectangle+2,w,c
  3958  000D2E  A0D8               	btfss	status,0,c
  3959  000D30  D004               	goto	l317
  3960  000D32                     u2400:
  3961                           
  3962                           ;ST7735_TFT.c: 509: w = 128 - x;
  3963  000D32  5023               	movf	fillRectangle@x,w,c
  3964  000D34  0800               	sublw	0
  3965  000D36  0F80               	addlw	128
  3966  000D38  6E19               	movwf	fillRectangle@w,c
  3967  000D3A                     l317:
  3968                           
  3969                           ;ST7735_TFT.c: 510: if((y + h - 1) >= 160)
  3970  000D3A  0EFF               	movlw	255
  3971  000D3C  6E1D               	movwf	??_fillRectangle& (0+255),c
  3972  000D3E  0EFF               	movlw	255
  3973  000D40  6E1E               	movwf	(??_fillRectangle+1)& (0+255),c
  3974  000D42  501A               	movf	fillRectangle@h,w,c
  3975  000D44  C018  F01F         	movff	fillRectangle@y,??_fillRectangle+2
  3976  000D48  6A20               	clrf	(??_fillRectangle+3)& (0+255),c
  3977  000D4A  261F               	addwf	??_fillRectangle+2,f,c
  3978  000D4C  0E00               	movlw	0
  3979  000D4E  2220               	addwfc	??_fillRectangle+3,f,c
  3980  000D50  501D               	movf	??_fillRectangle,w,c
  3981  000D52  261F               	addwf	??_fillRectangle+2,f,c
  3982  000D54  501E               	movf	??_fillRectangle+1,w,c
  3983  000D56  2220               	addwfc	??_fillRectangle+3,f,c
  3984  000D58  BE20               	btfsc	??_fillRectangle+3,7,c
  3985  000D5A  D00B               	goto	l3399
  3986  000D5C  5020               	movf	??_fillRectangle+3,w,c
  3987  000D5E  E104               	bnz	u2410
  3988  000D60  0EA0               	movlw	160
  3989  000D62  5C1F               	subwf	??_fillRectangle+2,w,c
  3990  000D64  A0D8               	btfss	status,0,c
  3991  000D66  D005               	goto	l3399
  3992  000D68                     u2410:
  3993                           
  3994                           ;ST7735_TFT.c: 511: h = 160 - y;
  3995  000D68  5018               	movf	fillRectangle@y,w,c
  3996  000D6A  0800               	sublw	0
  3997  000D6C  0FA0               	addlw	160
  3998  000D6E  6E1A               	movwf	fillRectangle@h,c
  3999  000D70  D000               	goto	l3399
  4000  000D72                     l3399:
  4001                           
  4002                           ;ST7735_TFT.c: 512: setAddrWindow(x, y, x+w-1, y+h-1);
  4003  000D72  C018  F014         	movff	fillRectangle@y,setAddrWindow@y0
  4004  000D76  5023               	movf	fillRectangle@x,w,c
  4005  000D78  2419               	addwf	fillRectangle@w,w,c
  4006  000D7A  6E1D               	movwf	??_fillRectangle& (0+255),c
  4007  000D7C  041D               	decf	??_fillRectangle,w,c
  4008  000D7E  6E15               	movwf	setAddrWindow@x1,c
  4009  000D80  5018               	movf	fillRectangle@y,w,c
  4010  000D82  241A               	addwf	fillRectangle@h,w,c
  4011  000D84  6E1E               	movwf	(??_fillRectangle+1)& (0+255),c
  4012  000D86  041E               	decf	??_fillRectangle+1,w,c
  4013  000D88  6E16               	movwf	setAddrWindow@y1,c
  4014  000D8A  5023               	movf	fillRectangle@x,w,c
  4015  000D8C  EC2B  F009         	call	_setAddrWindow
  4016                           
  4017                           ;ST7735_TFT.c: 513: hi = color >> 8; lo = color;
  4018  000D90  501C               	movf	fillRectangle@color+1,w,c
  4019  000D92  6E21               	movwf	fillRectangle@hi,c
  4020  000D94  C01B  F022         	movff	fillRectangle@color,fillRectangle@lo
  4021                           
  4022                           ;ST7735_TFT.c: 514: PORTCbits.RC0 = 1;
  4023  000D98  8082               	bsf	3970,0,c	;volatile
  4024                           
  4025                           ;ST7735_TFT.c: 515: PORTCbits.RC1 = 0;
  4026  000D9A  9282               	bcf	3970,1,c	;volatile
  4027                           
  4028                           ;ST7735_TFT.c: 517: for(y=h; y>0; y--) {
  4029  000D9C  C01A  F018         	movff	fillRectangle@h,fillRectangle@y
  4030  000DA0                     l3411:
  4031  000DA0  5018               	movf	fillRectangle@y,w,c
  4032  000DA2  B4D8               	btfsc	status,2,c
  4033  000DA4  D013               	goto	l320
  4034  000DA6  D001               	goto	l319
  4035  000DA8  D011               	goto	l320
  4036  000DAA                     l319:
  4037                           
  4038                           ;ST7735_TFT.c: 518: for(x = w; x > 0; x--) {
  4039  000DAA  C019  F023         	movff	fillRectangle@w,fillRectangle@x
  4040  000DAE                     l3415:
  4041  000DAE  5023               	movf	fillRectangle@x,w,c
  4042  000DB0  B4D8               	btfsc	status,2,c
  4043  000DB2  D00A               	goto	l3425
  4044  000DB4  D001               	goto	l3419
  4045  000DB6  D008               	goto	l3425
  4046  000DB8                     l3419:
  4047                           
  4048                           ;ST7735_TFT.c: 519: spiwrite(hi);
  4049  000DB8  5021               	movf	fillRectangle@hi,w,c
  4050  000DBA  EC55  F00A         	call	_spiwrite
  4051                           
  4052                           ;ST7735_TFT.c: 520: spiwrite(lo);
  4053  000DBE  5022               	movf	fillRectangle@lo,w,c
  4054  000DC0  EC55  F00A         	call	_spiwrite
  4055  000DC4  0623               	decf	fillRectangle@x,f,c
  4056  000DC6  D7F3               	goto	l3415
  4057  000DC8                     l3425:
  4058  000DC8  0618               	decf	fillRectangle@y,f,c
  4059  000DCA  D7EA               	goto	l3411
  4060  000DCC                     l320:
  4061                           
  4062                           ;ST7735_TFT.c: 521: }
  4063                           ;ST7735_TFT.c: 522: }
  4064                           ;ST7735_TFT.c: 523: PORTCbits.RC1 = 1;
  4065  000DCC  8282               	bsf	3970,1,c	;volatile
  4066  000DCE                     l316:
  4067  000DCE  0012               	return		;funcret
  4068  000DD0                     __end_of_fillRectangle:
  4069                           	opt stack 0
  4070                           tblptru	equ	0xFF8
  4071                           tblptrh	equ	0xFF7
  4072                           tblptrl	equ	0xFF6
  4073                           tablat	equ	0xFF5
  4074                           prodh	equ	0xFF4
  4075                           prodl	equ	0xFF3
  4076                           intcon	equ	0xFF2
  4077                           intcon2	equ	0xFF1
  4078                           postinc0	equ	0xFEE
  4079                           wreg	equ	0xFE8
  4080                           postdec1	equ	0xFE5
  4081                           fsr1l	equ	0xFE1
  4082                           indf2	equ	0xFDF
  4083                           postinc2	equ	0xFDE
  4084                           postdec2	equ	0xFDD
  4085                           fsr2h	equ	0xFDA
  4086                           fsr2l	equ	0xFD9
  4087                           status	equ	0xFD8
  4088                           
  4089 ;; *************** function _drawtext *****************
  4090 ;; Defined at:
  4091 ;;		line 474 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab10.1.X/ST7735_TFT.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;  x               1    wreg     unsigned char 
  4094 ;;  y               1   56[COMRAM] unsigned char 
  4095 ;;  _text           2   57[COMRAM] PTR unsigned char 
  4096 ;;		 -> NULL(0), buffer(31), txt1(84), 
  4097 ;;  color           2   59[COMRAM] unsigned int 
  4098 ;;  bg              2   61[COMRAM] unsigned int 
  4099 ;;  size            1   63[COMRAM] unsigned char 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;  x               1    0[BANK0 ] unsigned char 
  4102 ;;  i               2    3[BANK0 ] unsigned int 
  4103 ;;  textsize        2    1[BANK0 ] unsigned int 
  4104 ;;  cursor_x        1    6[BANK0 ] unsigned char 
  4105 ;;  cursor_y        1    5[BANK0 ] unsigned char 
  4106 ;; Return value:  Size  Location     Type
  4107 ;;		None               void
  4108 ;; Registers used:
  4109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4110 ;; Tracked objects:
  4111 ;;		On entry : 0/0
  4112 ;;		On exit  : 0/0
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4115 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4117 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4118 ;;      Totals:        10       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4119 ;;Total ram usage:       17 bytes
  4120 ;; Hardware stack levels used:    1
  4121 ;; Hardware stack levels required when called:    9
  4122 ;; This function calls:
  4123 ;;		_drawChar
  4124 ;;		_strlen
  4125 ;; This function is called by:
  4126 ;;		_main
  4127 ;;		_Initialize_Screen
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           	psect	text15
  4132  000AF8                     __ptext15:
  4133                           	opt stack 0
  4134  000AF8                     _drawtext:
  4135                           	opt stack 21
  4136                           
  4137                           ;incstack = 0
  4138                           ;drawtext@x stored from wreg
  4139  000AF8  0100               	movlb	0	; () banked
  4140  000AFA  6FF3               	movwf	drawtext@x& (0+255),b
  4141                           
  4142                           ; BSR set to: 0
  4143                           ;ST7735_TFT.c: 476: unsigned char cursor_x, cursor_y;
  4144                           ;ST7735_TFT.c: 477: unsigned int textsize, i;
  4145                           ;ST7735_TFT.c: 478: cursor_x = x, cursor_y = y;
  4146  000AFC  C0F3  F0F9         	movff	drawtext@x,drawtext@cursor_x
  4147                           
  4148                           ; BSR set to: 0
  4149  000B00  C039  F0F8         	movff	drawtext@y,drawtext@cursor_y
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;ST7735_TFT.c: 479: textsize = strlen(_text);
  4153  000B04  C03A  F011         	movff	drawtext@_text,strlen@s
  4154  000B08  C03B  F012         	movff	drawtext@_text+1,strlen@s+1
  4155  000B0C  EC77  F009         	call	_strlen	;wreg free
  4156  000B10  C011  F0F4         	movff	?_strlen,drawtext@textsize
  4157  000B14  C012  F0F5         	movff	?_strlen+1,drawtext@textsize+1
  4158                           
  4159                           ;ST7735_TFT.c: 480: for(i = 0; i < textsize; i++){
  4160  000B18  0E00               	movlw	0
  4161  000B1A  0100               	movlb	0	; () banked
  4162  000B1C  6FF7               	movwf	(drawtext@i+1)& (0+255),b
  4163  000B1E  0E00               	movlw	0
  4164  000B20  6FF6               	movwf	drawtext@i& (0+255),b
  4165  000B22  D064               	goto	l3463
  4166  000B24                     l3437:
  4167                           
  4168                           ; BSR set to: 0
  4169                           ;ST7735_TFT.c: 481: if(wrap && ((cursor_x + size * 5) > 128)){
  4170  000B24  505C               	movf	_wrap,w,c
  4171  000B26  B4D8               	btfsc	status,2,c
  4172  000B28  D034               	goto	l3453
  4173                           
  4174                           ; BSR set to: 0
  4175  000B2A  5040               	movf	drawtext@size,w,c
  4176  000B2C  0D05               	mullw	5
  4177  000B2E  0100               	movlb	0	; () banked
  4178  000B30  51F9               	movf	drawtext@cursor_x& (0+255),w,b
  4179  000B32  6E41               	movwf	??_drawtext& (0+255),c
  4180  000B34  6A42               	clrf	(??_drawtext+1)& (0+255),c
  4181  000B36  50F3               	movf	prodl,w,c
  4182  000B38  2641               	addwf	??_drawtext,f,c
  4183  000B3A  50F4               	movf	prodh,w,c
  4184  000B3C  2242               	addwfc	??_drawtext+1,f,c
  4185  000B3E  BE42               	btfsc	??_drawtext+1,7,c
  4186  000B40  D028               	goto	l3453
  4187  000B42  5042               	movf	??_drawtext+1,w,c
  4188  000B44  E104               	bnz	u2470
  4189  000B46  0E81               	movlw	129
  4190  000B48  5C41               	subwf	??_drawtext,w,c
  4191  000B4A  A0D8               	btfss	status,0,c
  4192  000B4C  D022               	goto	l3453
  4193  000B4E                     u2470:
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;ST7735_TFT.c: 482: cursor_x = 0;
  4197  000B4E  0E00               	movlw	0
  4198  000B50  0100               	movlb	0	; () banked
  4199  000B52  6FF9               	movwf	drawtext@cursor_x& (0+255),b
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;ST7735_TFT.c: 483: cursor_y = cursor_y + size * 7 + 3 ;
  4203  000B54  5040               	movf	drawtext@size,w,c
  4204  000B56  0D07               	mullw	7
  4205  000B58  50F3               	movf	prodl,w,c
  4206  000B5A  0100               	movlb	0	; () banked
  4207  000B5C  25F8               	addwf	drawtext@cursor_y& (0+255),w,b
  4208  000B5E  0F03               	addlw	3
  4209  000B60  0100               	movlb	0	; () banked
  4210  000B62  6FF8               	movwf	drawtext@cursor_y& (0+255),b
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;ST7735_TFT.c: 484: if(cursor_y > 160) cursor_y = 160;
  4214  000B64  0EA0               	movlw	160
  4215  000B66  0100               	movlb	0	; () banked
  4216  000B68  65F8               	cpfsgt	drawtext@cursor_y& (0+255),b
  4217  000B6A  D004               	goto	l3449
  4218                           
  4219                           ; BSR set to: 0
  4220  000B6C  0EA0               	movlw	160
  4221  000B6E  0100               	movlb	0	; () banked
  4222  000B70  6FF8               	movwf	drawtext@cursor_y& (0+255),b
  4223  000B72  D000               	goto	l3449
  4224  000B74                     l3449:
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;ST7735_TFT.c: 485: if(_text[i] == 0x20) goto _skip; }
  4228  000B74  0100               	movlb	0	; () banked
  4229  000B76  51F6               	movf	drawtext@i& (0+255),w,b
  4230  000B78  243A               	addwf	drawtext@_text,w,c
  4231  000B7A  6ED9               	movwf	fsr2l,c
  4232  000B7C  0100               	movlb	0	; () banked
  4233  000B7E  51F7               	movf	(drawtext@i+1)& (0+255),w,b
  4234  000B80  203B               	addwfc	drawtext@_text+1,w,c
  4235  000B82  6EDA               	movwf	fsr2h,c
  4236  000B84  0E20               	movlw	32
  4237  000B86  18DE               	xorwf	postinc2,w,c
  4238  000B88  B4D8               	btfsc	status,2,c
  4239  000B8A  D02C               	goto	l3461
  4240  000B8C  D002               	goto	l3453
  4241                           
  4242                           ; BSR set to: 0
  4243  000B8E  D02A               	goto	l3461
  4244                           
  4245                           ; BSR set to: 0
  4246  000B90  D000               	goto	l3453
  4247  000B92                     l3453:
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;ST7735_TFT.c: 486: drawChar(cursor_x, cursor_y, _text[i], color, bg, size);
  4251  000B92  C0F8  F02E         	movff	drawtext@cursor_y,drawChar@y
  4252  000B96  0100               	movlb	0	; () banked
  4253  000B98  51F6               	movf	drawtext@i& (0+255),w,b
  4254  000B9A  243A               	addwf	drawtext@_text,w,c
  4255  000B9C  6ED9               	movwf	fsr2l,c
  4256  000B9E  0100               	movlb	0	; () banked
  4257  000BA0  51F7               	movf	(drawtext@i+1)& (0+255),w,b
  4258  000BA2  203B               	addwfc	drawtext@_text+1,w,c
  4259  000BA4  6EDA               	movwf	fsr2h,c
  4260  000BA6  50DF               	movf	indf2,w,c
  4261  000BA8  6E2F               	movwf	drawChar@c,c
  4262  000BAA  C03C  F030         	movff	drawtext@color,drawChar@color
  4263  000BAE  C03D  F031         	movff	drawtext@color+1,drawChar@color+1
  4264  000BB2  C03E  F032         	movff	drawtext@bg,drawChar@bg
  4265  000BB6  C03F  F033         	movff	drawtext@bg+1,drawChar@bg+1
  4266  000BBA  C040  F034         	movff	drawtext@size,drawChar@size
  4267  000BBE  0100               	movlb	0	; () banked
  4268  000BC0  51F9               	movf	drawtext@cursor_x& (0+255),w,b
  4269  000BC2  ECAD  F003         	call	_drawChar
  4270                           
  4271                           ;ST7735_TFT.c: 487: cursor_x = cursor_x + size * 6;
  4272  000BC6  5040               	movf	drawtext@size,w,c
  4273  000BC8  0D06               	mullw	6
  4274  000BCA  50F3               	movf	prodl,w,c
  4275  000BCC  0100               	movlb	0	; () banked
  4276  000BCE  25F9               	addwf	drawtext@cursor_x& (0+255),w,b
  4277  000BD0  0100               	movlb	0	; () banked
  4278  000BD2  6FF9               	movwf	drawtext@cursor_x& (0+255),b
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;ST7735_TFT.c: 488: if(cursor_x > 128) cursor_x = 128;
  4282  000BD4  0E80               	movlw	128
  4283  000BD6  0100               	movlb	0	; () banked
  4284  000BD8  65F9               	cpfsgt	drawtext@cursor_x& (0+255),b
  4285  000BDA  D004               	goto	l3461
  4286                           
  4287                           ; BSR set to: 0
  4288  000BDC  0E80               	movlw	128
  4289  000BDE  0100               	movlb	0	; () banked
  4290  000BE0  6FF9               	movwf	drawtext@cursor_x& (0+255),b
  4291                           
  4292                           ; BSR set to: 0
  4293  000BE2  D000               	goto	l3461
  4294  000BE4                     l3461:
  4295                           
  4296                           ; BSR set to: 0
  4297  000BE4  0100               	movlb	0	; () banked
  4298  000BE6  4BF6               	infsnz	drawtext@i& (0+255),f,b
  4299  000BE8  2BF7               	incf	(drawtext@i+1)& (0+255),f,b
  4300  000BEA  D000               	goto	l3463
  4301  000BEC                     l3463:
  4302                           
  4303                           ; BSR set to: 0
  4304  000BEC  0100               	movlb	0	; () banked
  4305  000BEE  51F4               	movf	drawtext@textsize& (0+255),w,b
  4306  000BF0  0100               	movlb	0	; () banked
  4307  000BF2  5DF6               	subwf	drawtext@i& (0+255),w,b
  4308  000BF4  0100               	movlb	0	; () banked
  4309  000BF6  51F5               	movf	(drawtext@textsize+1)& (0+255),w,b
  4310  000BF8  0100               	movlb	0	; () banked
  4311  000BFA  59F7               	subwfb	(drawtext@i+1)& (0+255),w,b
  4312  000BFC  A0D8               	btfss	status,0,c
  4313  000BFE  D792               	goto	l3437
  4314                           
  4315                           ; BSR set to: 0
  4316                           
  4317                           ; BSR set to: 0
  4318  000C00  0012               	return		;funcret
  4319  000C02                     __end_of_drawtext:
  4320                           	opt stack 0
  4321                           tblptru	equ	0xFF8
  4322                           tblptrh	equ	0xFF7
  4323                           tblptrl	equ	0xFF6
  4324                           tablat	equ	0xFF5
  4325                           prodh	equ	0xFF4
  4326                           prodl	equ	0xFF3
  4327                           intcon	equ	0xFF2
  4328                           intcon2	equ	0xFF1
  4329                           postinc0	equ	0xFEE
  4330                           wreg	equ	0xFE8
  4331                           postdec1	equ	0xFE5
  4332                           fsr1l	equ	0xFE1
  4333                           indf2	equ	0xFDF
  4334                           postinc2	equ	0xFDE
  4335                           postdec2	equ	0xFDD
  4336                           fsr2h	equ	0xFDA
  4337                           fsr2l	equ	0xFD9
  4338                           status	equ	0xFD8
  4339                           
  4340 ;; *************** function _strlen *****************
  4341 ;; Defined at:
  4342 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strlen.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;  s               2   16[COMRAM] PTR const unsigned char 
  4345 ;;		 -> NULL(0), buffer(31), txt1(84), 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;  cp              2   20[COMRAM] PTR const unsigned char 
  4348 ;;		 -> NULL(0), buffer(31), txt1(84), 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  2   16[COMRAM] unsigned int 
  4351 ;; Registers used:
  4352 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4359 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4360 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4361 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4362 ;;Total ram usage:        6 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; Hardware stack levels required when called:    3
  4365 ;; This function calls:
  4366 ;;		Nothing
  4367 ;; This function is called by:
  4368 ;;		_drawtext
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           	psect	text16
  4373  0012EE                     __ptext16:
  4374                           	opt stack 0
  4375  0012EE                     _strlen:
  4376                           	opt stack 26
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;incstack = 0
  4380  0012EE  C011  F015         	movff	strlen@s,strlen@cp
  4381  0012F2  C012  F016         	movff	strlen@s+1,strlen@cp+1
  4382  0012F6  D003               	goto	l3383
  4383  0012F8                     l3381:
  4384  0012F8  4A15               	infsnz	strlen@cp,f,c
  4385  0012FA  2A16               	incf	strlen@cp+1,f,c
  4386  0012FC  D000               	goto	l3383
  4387  0012FE                     l3383:
  4388  0012FE  C015  FFD9         	movff	strlen@cp,fsr2l
  4389  001302  C016  FFDA         	movff	strlen@cp+1,fsr2h
  4390  001306  50DF               	movf	indf2,w,c
  4391  001308  A4D8               	btfss	status,2,c
  4392  00130A  D7F6               	goto	l3381
  4393  00130C  C011  F013         	movff	strlen@s,??_strlen
  4394  001310  C012  F014         	movff	strlen@s+1,??_strlen+1
  4395  001314  1E13               	comf	??_strlen,f,c
  4396  001316  1E14               	comf	??_strlen+1,f,c
  4397  001318  4A13               	infsnz	??_strlen,f,c
  4398  00131A  2A14               	incf	??_strlen+1,f,c
  4399  00131C  5015               	movf	strlen@cp,w,c
  4400  00131E  2413               	addwf	??_strlen,w,c
  4401  001320  6E11               	movwf	?_strlen,c
  4402  001322  5016               	movf	strlen@cp+1,w,c
  4403  001324  2014               	addwfc	??_strlen+1,w,c
  4404  001326  6E12               	movwf	?_strlen+1,c
  4405  001328  D000               	goto	l1027
  4406  00132A                     l1027:
  4407  00132A  0012               	return		;funcret
  4408  00132C                     __end_of_strlen:
  4409                           	opt stack 0
  4410                           tblptru	equ	0xFF8
  4411                           tblptrh	equ	0xFF7
  4412                           tblptrl	equ	0xFF6
  4413                           tablat	equ	0xFF5
  4414                           prodh	equ	0xFF4
  4415                           prodl	equ	0xFF3
  4416                           intcon	equ	0xFF2
  4417                           intcon2	equ	0xFF1
  4418                           postinc0	equ	0xFEE
  4419                           wreg	equ	0xFE8
  4420                           postdec1	equ	0xFE5
  4421                           fsr1l	equ	0xFE1
  4422                           indf2	equ	0xFDF
  4423                           postinc2	equ	0xFDE
  4424                           postdec2	equ	0xFDD
  4425                           fsr2h	equ	0xFDA
  4426                           fsr2l	equ	0xFD9
  4427                           status	equ	0xFD8
  4428                           
  4429 ;; *************** function _drawChar *****************
  4430 ;; Defined at:
  4431 ;;		line 447 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab10.1.X/ST7735_TFT.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  x               1    wreg     unsigned char 
  4434 ;;  y               1   45[COMRAM] unsigned char 
  4435 ;;  c               1   46[COMRAM] unsigned char 
  4436 ;;  color           2   47[COMRAM] unsigned int 
  4437 ;;  bg              2   49[COMRAM] unsigned int 
  4438 ;;  size            1   51[COMRAM] unsigned char 
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;  x               1   53[COMRAM] unsigned char 
  4441 ;;  line            1   52[COMRAM] unsigned char 
  4442 ;;  i               1   55[COMRAM] unsigned char 
  4443 ;;  j               1   54[COMRAM] unsigned char 
  4444 ;; Return value:  Size  Location     Type
  4445 ;;		None               void
  4446 ;; Registers used:
  4447 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4448 ;; Tracked objects:
  4449 ;;		On entry : 0/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4453 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4454 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4456 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4457 ;;Total ram usage:       11 bytes
  4458 ;; Hardware stack levels used:    1
  4459 ;; Hardware stack levels required when called:    8
  4460 ;; This function calls:
  4461 ;;		___wmul
  4462 ;;		_drawPixel
  4463 ;;		_fillRect
  4464 ;; This function is called by:
  4465 ;;		_drawtext
  4466 ;; This function uses a non-reentrant model
  4467 ;;
  4468                           
  4469                           	psect	text17
  4470  00075A                     __ptext17:
  4471                           	opt stack 0
  4472  00075A                     _drawChar:
  4473                           	opt stack 21
  4474                           
  4475                           ;incstack = 0
  4476                           ;drawChar@x stored from wreg
  4477  00075A  6E36               	movwf	drawChar@x,c
  4478                           
  4479                           ;ST7735_TFT.c: 449: char i, j;
  4480                           ;ST7735_TFT.c: 450: if((x >= 128) || (y >= 160))
  4481  00075C  0E80               	movlw	128
  4482  00075E  6036               	cpfslt	drawChar@x,c
  4483  000760  D0A6               	goto	l279
  4484  000762  0E9F               	movlw	159
  4485  000764  642E               	cpfsgt	drawChar@y,c
  4486  000766  D001               	goto	l3329
  4487                           
  4488                           ;ST7735_TFT.c: 451: return;
  4489  000768  D0A2               	goto	l279
  4490  00076A                     l3329:
  4491                           
  4492                           ;ST7735_TFT.c: 452: if(size < 1) size = 1;
  4493  00076A  5034               	movf	drawChar@size,w,c
  4494  00076C  A4D8               	btfss	status,2,c
  4495  00076E  D003               	goto	l3333
  4496  000770  0E01               	movlw	1
  4497  000772  6E34               	movwf	drawChar@size,c
  4498  000774  D000               	goto	l3333
  4499  000776                     l3333:
  4500                           
  4501                           ;ST7735_TFT.c: 453: if((c < ' ') || (c > '~'))
  4502  000776  0E1F               	movlw	31
  4503  000778  642F               	cpfsgt	drawChar@c,c
  4504  00077A  D004               	goto	l3337
  4505  00077C  0E7E               	movlw	126
  4506  00077E  642F               	cpfsgt	drawChar@c,c
  4507  000780  D003               	goto	l281
  4508  000782  D000               	goto	l3337
  4509  000784                     l3337:
  4510                           
  4511                           ;ST7735_TFT.c: 454: c = '?';
  4512  000784  0E3F               	movlw	63
  4513  000786  6E2F               	movwf	drawChar@c,c
  4514  000788                     l281:
  4515                           
  4516                           ;ST7735_TFT.c: 455: for(i=0; i<5; i++ ) {
  4517  000788  0E00               	movlw	0
  4518  00078A  6E38               	movwf	drawChar@i,c
  4519  00078C                     l3339:
  4520  00078C  0E04               	movlw	4
  4521  00078E  6438               	cpfsgt	drawChar@i,c
  4522  000790  D001               	goto	l3343
  4523  000792  D08D               	goto	l279
  4524  000794                     l3343:
  4525                           
  4526                           ;ST7735_TFT.c: 456: unsigned char line;
  4527                           ;ST7735_TFT.c: 457: if(c < 'S')
  4528  000794  0E53               	movlw	83
  4529  000796  602F               	cpfslt	drawChar@c,c
  4530  000798  D015               	goto	l3347
  4531                           
  4532                           ;ST7735_TFT.c: 458: line = font[(c - 32)*5 + i];
  4533  00079A  0EE0               	movlw	224
  4534  00079C  242F               	addwf	drawChar@c,w,c
  4535  00079E  6E11               	movwf	___wmul@multiplier,c
  4536  0007A0  6A12               	clrf	___wmul@multiplier+1,c
  4537  0007A2  0EFF               	movlw	255
  4538  0007A4  2212               	addwfc	___wmul@multiplier+1,f,c
  4539  0007A6  0E00               	movlw	0
  4540  0007A8  6E14               	movwf	___wmul@multiplicand+1,c
  4541  0007AA  0E05               	movlw	5
  4542  0007AC  6E13               	movwf	___wmul@multiplicand,c
  4543  0007AE  ECFB  F009         	call	___wmul	;wreg free
  4544  0007B2  5038               	movf	drawChar@i,w,c
  4545  0007B4  2611               	addwf	?___wmul,f,c
  4546  0007B6  0E00               	movlw	0
  4547  0007B8  2212               	addwfc	?___wmul+1,f,c
  4548  0007BA  0EBF               	movlw	low _font
  4549  0007BC  2411               	addwf	?___wmul,w,c
  4550  0007BE  6EF6               	movwf	tblptrl,c
  4551  0007C0  0EFD               	movlw	high _font
  4552  0007C2  D014               	goto	L2
  4553  0007C4                     l3347:
  4554                           
  4555                           ;ST7735_TFT.c: 459: else
  4556                           ;ST7735_TFT.c: 460: line = font2[(c - 'S')*5 + i];
  4557  0007C4  0EAD               	movlw	173
  4558  0007C6  242F               	addwf	drawChar@c,w,c
  4559  0007C8  6E11               	movwf	___wmul@multiplier,c
  4560  0007CA  6A12               	clrf	___wmul@multiplier+1,c
  4561  0007CC  0EFF               	movlw	255
  4562  0007CE  2212               	addwfc	___wmul@multiplier+1,f,c
  4563  0007D0  0E00               	movlw	0
  4564  0007D2  6E14               	movwf	___wmul@multiplicand+1,c
  4565  0007D4  0E05               	movlw	5
  4566  0007D6  6E13               	movwf	___wmul@multiplicand,c
  4567  0007D8  ECFB  F009         	call	___wmul	;wreg free
  4568  0007DC  5038               	movf	drawChar@i,w,c
  4569  0007DE  2611               	addwf	?___wmul,f,c
  4570  0007E0  0E00               	movlw	0
  4571  0007E2  2212               	addwfc	?___wmul+1,f,c
  4572  0007E4  0EBE               	movlw	low _font2
  4573  0007E6  2411               	addwf	?___wmul,w,c
  4574  0007E8  6EF6               	movwf	tblptrl,c
  4575  0007EA  0EFE               	movlw	high _font2
  4576  0007EC                     L2:
  4577  0007EC  2012               	addwfc	?___wmul+1,w,c
  4578  0007EE  6EF7               	movwf	tblptrh,c
  4579  0007F0                     	if	0	;There are less than 3 active tblptr bytes
  4580  0007F0                     	endif
  4581  0007F0  0008               	tblrd		*
  4582  0007F2  CFF5 F035          	movff	tablat,drawChar@line
  4583  0007F6  D000               	goto	l3349
  4584  0007F8                     l3349:
  4585                           
  4586                           ;ST7735_TFT.c: 461: for(j=0; j<7; j++, line >>= 1) {
  4587  0007F8  0E00               	movlw	0
  4588  0007FA  6E37               	movwf	drawChar@j,c
  4589  0007FC                     l3351:
  4590  0007FC  0E06               	movlw	6
  4591  0007FE  6437               	cpfsgt	drawChar@j,c
  4592  000800  D001               	goto	l288
  4593  000802  D053               	goto	l3375
  4594  000804                     l288:
  4595                           
  4596                           ;ST7735_TFT.c: 462: if(line & 0x01) {
  4597  000804  A035               	btfss	drawChar@line,0,c
  4598  000806  D023               	goto	l3361
  4599                           
  4600                           ;ST7735_TFT.c: 463: if(size == 1) drawPixel(x+i, y+j, color);
  4601  000808  0434               	decf	drawChar@size,w,c
  4602  00080A  A4D8               	btfss	status,2,c
  4603  00080C  D00C               	goto	l3359
  4604  00080E  502E               	movf	drawChar@y,w,c
  4605  000810  2437               	addwf	drawChar@j,w,c
  4606  000812  6E18               	movwf	drawPixel@y,c
  4607  000814  C030  F019         	movff	drawChar@color,drawPixel@color
  4608  000818  C031  F01A         	movff	drawChar@color+1,drawPixel@color+1
  4609  00081C  5036               	movf	drawChar@x,w,c
  4610  00081E  2438               	addwf	drawChar@i,w,c
  4611  000820  ECCE  F009         	call	_drawPixel
  4612  000824  D03E               	goto	l3369
  4613  000826                     l3359:
  4614                           
  4615                           ;ST7735_TFT.c: 464: else fillRect(x+(i*size), y+(j*size), size, size, color);
  4616  000826  5037               	movf	drawChar@j,w,c
  4617  000828  0234               	mulwf	drawChar@size,c
  4618  00082A  50F3               	movf	prodl,w,c
  4619  00082C  242E               	addwf	drawChar@y,w,c
  4620  00082E  6E23               	movwf	fillRect@y,c
  4621  000830  C034  F024         	movff	drawChar@size,fillRect@w
  4622  000834  C034  F025         	movff	drawChar@size,fillRect@h
  4623  000838  C030  F026         	movff	drawChar@color,fillRect@color
  4624  00083C  C031  F027         	movff	drawChar@color+1,fillRect@color+1
  4625  000840  5038               	movf	drawChar@i,w,c
  4626  000842  0234               	mulwf	drawChar@size,c
  4627  000844  50F3               	movf	prodl,w,c
  4628  000846  2436               	addwf	drawChar@x,w,c
  4629  000848  EC52  F009         	call	_fillRect
  4630                           
  4631                           ;ST7735_TFT.c: 465: }
  4632  00084C  D02A               	goto	l3369
  4633  00084E                     l3361:
  4634                           
  4635                           ;ST7735_TFT.c: 466: else if(bg != color) {
  4636  00084E  5030               	movf	drawChar@color,w,c
  4637  000850  1832               	xorwf	drawChar@bg,w,c
  4638  000852  E104               	bnz	u2330
  4639  000854  5031               	movf	drawChar@color+1,w,c
  4640  000856  1833               	xorwf	drawChar@bg+1,w,c
  4641  000858  B4D8               	btfsc	status,2,c
  4642  00085A  D023               	goto	l3369
  4643  00085C                     u2330:
  4644                           
  4645                           ;ST7735_TFT.c: 467: if(size == 1) drawPixel(x+i, y+j, bg);
  4646  00085C  0434               	decf	drawChar@size,w,c
  4647  00085E  A4D8               	btfss	status,2,c
  4648  000860  D00C               	goto	l3367
  4649  000862  502E               	movf	drawChar@y,w,c
  4650  000864  2437               	addwf	drawChar@j,w,c
  4651  000866  6E18               	movwf	drawPixel@y,c
  4652  000868  C032  F019         	movff	drawChar@bg,drawPixel@color
  4653  00086C  C033  F01A         	movff	drawChar@bg+1,drawPixel@color+1
  4654  000870  5036               	movf	drawChar@x,w,c
  4655  000872  2438               	addwf	drawChar@i,w,c
  4656  000874  ECCE  F009         	call	_drawPixel
  4657  000878  D014               	goto	l3369
  4658  00087A                     l3367:
  4659                           
  4660                           ;ST7735_TFT.c: 468: else fillRect(x+i*size, y+j*size, size, size, bg);
  4661  00087A  5037               	movf	drawChar@j,w,c
  4662  00087C  0234               	mulwf	drawChar@size,c
  4663  00087E  50F3               	movf	prodl,w,c
  4664  000880  242E               	addwf	drawChar@y,w,c
  4665  000882  6E23               	movwf	fillRect@y,c
  4666  000884  C034  F024         	movff	drawChar@size,fillRect@w
  4667  000888  C034  F025         	movff	drawChar@size,fillRect@h
  4668  00088C  C032  F026         	movff	drawChar@bg,fillRect@color
  4669  000890  C033  F027         	movff	drawChar@bg+1,fillRect@color+1
  4670  000894  5038               	movf	drawChar@i,w,c
  4671  000896  0234               	mulwf	drawChar@size,c
  4672  000898  50F3               	movf	prodl,w,c
  4673  00089A  2436               	addwf	drawChar@x,w,c
  4674  00089C  EC52  F009         	call	_fillRect
  4675  0008A0  D000               	goto	l3369
  4676  0008A2                     l3369:
  4677  0008A2  2A37               	incf	drawChar@j,f,c
  4678  0008A4  90D8               	bcf	status,0,c
  4679  0008A6  3235               	rrcf	drawChar@line,f,c
  4680  0008A8  D7A9               	goto	l3351
  4681  0008AA                     l3375:
  4682  0008AA  2A38               	incf	drawChar@i,f,c
  4683  0008AC  D76F               	goto	l3339
  4684  0008AE                     l279:
  4685  0008AE  0012               	return		;funcret
  4686  0008B0                     __end_of_drawChar:
  4687                           	opt stack 0
  4688                           tblptru	equ	0xFF8
  4689                           tblptrh	equ	0xFF7
  4690                           tblptrl	equ	0xFF6
  4691                           tablat	equ	0xFF5
  4692                           prodh	equ	0xFF4
  4693                           prodl	equ	0xFF3
  4694                           intcon	equ	0xFF2
  4695                           intcon2	equ	0xFF1
  4696                           postinc0	equ	0xFEE
  4697                           wreg	equ	0xFE8
  4698                           postdec1	equ	0xFE5
  4699                           fsr1l	equ	0xFE1
  4700                           indf2	equ	0xFDF
  4701                           postinc2	equ	0xFDE
  4702                           postdec2	equ	0xFDD
  4703                           fsr2h	equ	0xFDA
  4704                           fsr2l	equ	0xFD9
  4705                           status	equ	0xFD8
  4706                           
  4707 ;; *************** function _fillRect *****************
  4708 ;; Defined at:
  4709 ;;		line 437 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab10.1.X/ST7735_TFT.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;  x               1    wreg     unsigned char 
  4712 ;;  y               1   34[COMRAM] unsigned char 
  4713 ;;  w               1   35[COMRAM] unsigned char 
  4714 ;;  h               1   36[COMRAM] unsigned char 
  4715 ;;  color           2   37[COMRAM] unsigned int 
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;  x               1   42[COMRAM] unsigned char 
  4718 ;;  i               2   43[COMRAM] int 
  4719 ;; Return value:  Size  Location     Type
  4720 ;;		None               void
  4721 ;; Registers used:
  4722 ;;		wreg, status,2, status,0, cstack
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4728 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4729 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4730 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4731 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4732 ;;Total ram usage:       11 bytes
  4733 ;; Hardware stack levels used:    1
  4734 ;; Hardware stack levels required when called:    7
  4735 ;; This function calls:
  4736 ;;		_drawFastVLine
  4737 ;; This function is called by:
  4738 ;;		_drawChar
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742                           	psect	text18
  4743  0012A4                     __ptext18:
  4744                           	opt stack 0
  4745  0012A4                     _fillRect:
  4746                           	opt stack 21
  4747                           
  4748                           ;incstack = 0
  4749                           ;fillRect@x stored from wreg
  4750  0012A4  6E2B               	movwf	fillRect@x,c
  4751                           
  4752                           ;ST7735_TFT.c: 439: signed int i;
  4753                           ;ST7735_TFT.c: 441: for (i = x; i < x + w; i++)
  4754  0012A6  C02B  F02C         	movff	fillRect@x,fillRect@i
  4755  0012AA  6A2D               	clrf	fillRect@i+1,c
  4756  0012AC  D00E               	goto	l3231
  4757  0012AE                     l3227:
  4758                           
  4759                           ;ST7735_TFT.c: 442: {
  4760                           ;ST7735_TFT.c: 443: drawFastVLine(i, y, h, color);
  4761  0012AE  C023  F018         	movff	fillRect@y,drawFastVLine@y
  4762  0012B2  C025  F019         	movff	fillRect@h,drawFastVLine@h
  4763  0012B6  C026  F01A         	movff	fillRect@color,drawFastVLine@color
  4764  0012BA  C027  F01B         	movff	fillRect@color+1,drawFastVLine@color+1
  4765  0012BE  502C               	movf	fillRect@i,w,c
  4766  0012C0  EC75  F007         	call	_drawFastVLine
  4767  0012C4  4A2C               	infsnz	fillRect@i,f,c
  4768  0012C6  2A2D               	incf	fillRect@i+1,f,c
  4769  0012C8  D000               	goto	l3231
  4770  0012CA                     l3231:
  4771  0012CA  5024               	movf	fillRect@w,w,c
  4772  0012CC  C02B  F028         	movff	fillRect@x,??_fillRect
  4773  0012D0  6A29               	clrf	(??_fillRect+1)& (0+255),c
  4774  0012D2  2628               	addwf	??_fillRect,f,c
  4775  0012D4  0E00               	movlw	0
  4776  0012D6  2229               	addwfc	??_fillRect+1,f,c
  4777  0012D8  5028               	movf	??_fillRect,w,c
  4778  0012DA  5C2C               	subwf	fillRect@i,w,c
  4779  0012DC  502D               	movf	fillRect@i+1,w,c
  4780  0012DE  0A80               	xorlw	128
  4781  0012E0  6E2A               	movwf	(??_fillRect+2)& (0+255),c
  4782  0012E2  5029               	movf	??_fillRect+1,w,c
  4783  0012E4  0A80               	xorlw	128
  4784  0012E6  582A               	subwfb	(??_fillRect+2)& (0+255),w,c
  4785  0012E8  A0D8               	btfss	status,0,c
  4786  0012EA  D7E1               	goto	l3227
  4787  0012EC  0012               	return		;funcret
  4788  0012EE                     __end_of_fillRect:
  4789                           	opt stack 0
  4790                           tblptru	equ	0xFF8
  4791                           tblptrh	equ	0xFF7
  4792                           tblptrl	equ	0xFF6
  4793                           tablat	equ	0xFF5
  4794                           prodh	equ	0xFF4
  4795                           prodl	equ	0xFF3
  4796                           intcon	equ	0xFF2
  4797                           intcon2	equ	0xFF1
  4798                           postinc0	equ	0xFEE
  4799                           wreg	equ	0xFE8
  4800                           postdec1	equ	0xFE5
  4801                           fsr1l	equ	0xFE1
  4802                           indf2	equ	0xFDF
  4803                           postinc2	equ	0xFDE
  4804                           postdec2	equ	0xFDD
  4805                           fsr2h	equ	0xFDA
  4806                           fsr2l	equ	0xFD9
  4807                           status	equ	0xFD8
  4808                           
  4809 ;; *************** function _drawFastVLine *****************
  4810 ;; Defined at:
  4811 ;;		line 416 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab10.1.X/ST7735_TFT.c"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;  x               1    wreg     unsigned char 
  4814 ;;  y               1   23[COMRAM] unsigned char 
  4815 ;;  h               1   24[COMRAM] unsigned char 
  4816 ;;  color           2   25[COMRAM] unsigned int 
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;  x               1   33[COMRAM] unsigned char 
  4819 ;;  lo              1   32[COMRAM] unsigned char 
  4820 ;;  hi              1   31[COMRAM] unsigned char 
  4821 ;; Return value:  Size  Location     Type
  4822 ;;		None               void
  4823 ;; Registers used:
  4824 ;;		wreg, status,2, status,0, cstack
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4830 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4831 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4832 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4833 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4834 ;;Total ram usage:       11 bytes
  4835 ;; Hardware stack levels used:    1
  4836 ;; Hardware stack levels required when called:    6
  4837 ;; This function calls:
  4838 ;;		_setAddrWindow
  4839 ;;		_spiwrite
  4840 ;; This function is called by:
  4841 ;;		_fillRect
  4842 ;;		_fillCircleHelper
  4843 ;;		_fillCircle
  4844 ;;		_drawRect
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           	psect	text19
  4849  000EEA                     __ptext19:
  4850                           	opt stack 0
  4851  000EEA                     _drawFastVLine:
  4852                           	opt stack 22
  4853                           
  4854                           ;incstack = 0
  4855                           ;drawFastVLine@x stored from wreg
  4856  000EEA  6E22               	movwf	drawFastVLine@x,c
  4857                           
  4858                           ;ST7735_TFT.c: 418: unsigned char hi, lo;
  4859                           ;ST7735_TFT.c: 419: if((x >= 128) || (y >= 160))
  4860  000EEC  0E80               	movlw	128
  4861  000EEE  6022               	cpfslt	drawFastVLine@x,c
  4862  000EF0  D03F               	goto	l263
  4863  000EF2  0E9F               	movlw	159
  4864  000EF4  6418               	cpfsgt	drawFastVLine@y,c
  4865  000EF6  D001               	goto	l3177
  4866                           
  4867                           ;ST7735_TFT.c: 420: return;
  4868  000EF8  D03B               	goto	l263
  4869  000EFA                     l3177:
  4870                           
  4871                           ;ST7735_TFT.c: 421: if((y + h - 1) >= 160)
  4872  000EFA  0EFF               	movlw	255
  4873  000EFC  6E1C               	movwf	??_drawFastVLine& (0+255),c
  4874  000EFE  0EFF               	movlw	255
  4875  000F00  6E1D               	movwf	(??_drawFastVLine+1)& (0+255),c
  4876  000F02  5019               	movf	drawFastVLine@h,w,c
  4877  000F04  C018  F01E         	movff	drawFastVLine@y,??_drawFastVLine+2
  4878  000F08  6A1F               	clrf	(??_drawFastVLine+3)& (0+255),c
  4879  000F0A  261E               	addwf	??_drawFastVLine+2,f,c
  4880  000F0C  0E00               	movlw	0
  4881  000F0E  221F               	addwfc	??_drawFastVLine+3,f,c
  4882  000F10  501C               	movf	??_drawFastVLine,w,c
  4883  000F12  261E               	addwf	??_drawFastVLine+2,f,c
  4884  000F14  501D               	movf	??_drawFastVLine+1,w,c
  4885  000F16  221F               	addwfc	??_drawFastVLine+3,f,c
  4886  000F18  BE1F               	btfsc	??_drawFastVLine+3,7,c
  4887  000F1A  D00B               	goto	l3181
  4888  000F1C  501F               	movf	??_drawFastVLine+3,w,c
  4889  000F1E  E104               	bnz	u2170
  4890  000F20  0EA0               	movlw	160
  4891  000F22  5C1E               	subwf	??_drawFastVLine+2,w,c
  4892  000F24  A0D8               	btfss	status,0,c
  4893  000F26  D005               	goto	l3181
  4894  000F28                     u2170:
  4895                           
  4896                           ;ST7735_TFT.c: 422: h = 160 - y;
  4897  000F28  5018               	movf	drawFastVLine@y,w,c
  4898  000F2A  0800               	sublw	0
  4899  000F2C  0FA0               	addlw	160
  4900  000F2E  6E19               	movwf	drawFastVLine@h,c
  4901  000F30  D000               	goto	l3181
  4902  000F32                     l3181:
  4903                           
  4904                           ;ST7735_TFT.c: 423: hi = color >> 8; lo = color;
  4905  000F32  501B               	movf	drawFastVLine@color+1,w,c
  4906  000F34  6E20               	movwf	drawFastVLine@hi,c
  4907  000F36  C01A  F021         	movff	drawFastVLine@color,drawFastVLine@lo
  4908                           
  4909                           ;ST7735_TFT.c: 424: setAddrWindow(x, y, x, y + h - 1);
  4910  000F3A  C018  F014         	movff	drawFastVLine@y,setAddrWindow@y0
  4911  000F3E  C022  F015         	movff	drawFastVLine@x,setAddrWindow@x1
  4912  000F42  5018               	movf	drawFastVLine@y,w,c
  4913  000F44  2419               	addwf	drawFastVLine@h,w,c
  4914  000F46  6E1C               	movwf	??_drawFastVLine& (0+255),c
  4915  000F48  041C               	decf	??_drawFastVLine,w,c
  4916  000F4A  6E16               	movwf	setAddrWindow@y1,c
  4917  000F4C  5022               	movf	drawFastVLine@x,w,c
  4918  000F4E  EC2B  F009         	call	_setAddrWindow
  4919                           
  4920                           ;ST7735_TFT.c: 425: PORTCbits.RC0 = 1;
  4921  000F52  8082               	bsf	3970,0,c	;volatile
  4922                           
  4923                           ;ST7735_TFT.c: 426: PORTCbits.RC1 = 0;
  4924  000F54  9282               	bcf	3970,1,c	;volatile
  4925                           
  4926                           ;ST7735_TFT.c: 428: while (h--) {
  4927  000F56  D007               	goto	l3193
  4928  000F58                     l3191:
  4929                           
  4930                           ;ST7735_TFT.c: 429: spiwrite(hi);
  4931  000F58  5020               	movf	drawFastVLine@hi,w,c
  4932  000F5A  EC55  F00A         	call	_spiwrite
  4933                           
  4934                           ;ST7735_TFT.c: 430: spiwrite(lo);
  4935  000F5E  5021               	movf	drawFastVLine@lo,w,c
  4936  000F60  EC55  F00A         	call	_spiwrite
  4937  000F64  D000               	goto	l3193
  4938  000F66                     l3193:
  4939  000F66  0619               	decf	drawFastVLine@h,f,c
  4940  000F68  2819               	incf	drawFastVLine@h,w,c
  4941  000F6A  A4D8               	btfss	status,2,c
  4942  000F6C  D7F5               	goto	l3191
  4943                           
  4944                           ;ST7735_TFT.c: 431: }
  4945                           ;ST7735_TFT.c: 432: PORTCbits.RC1 = 1;
  4946  000F6E  8282               	bsf	3970,1,c	;volatile
  4947  000F70                     l263:
  4948  000F70  0012               	return		;funcret
  4949  000F72                     __end_of_drawFastVLine:
  4950                           	opt stack 0
  4951                           tblptru	equ	0xFF8
  4952                           tblptrh	equ	0xFF7
  4953                           tblptrl	equ	0xFF6
  4954                           tablat	equ	0xFF5
  4955                           prodh	equ	0xFF4
  4956                           prodl	equ	0xFF3
  4957                           intcon	equ	0xFF2
  4958                           intcon2	equ	0xFF1
  4959                           postinc0	equ	0xFEE
  4960                           wreg	equ	0xFE8
  4961                           postdec1	equ	0xFE5
  4962                           fsr1l	equ	0xFE1
  4963                           indf2	equ	0xFDF
  4964                           postinc2	equ	0xFDE
  4965                           postdec2	equ	0xFDD
  4966                           fsr2h	equ	0xFDA
  4967                           fsr2l	equ	0xFD9
  4968                           status	equ	0xFD8
  4969                           
  4970 ;; *************** function _drawPixel *****************
  4971 ;; Defined at:
  4972 ;;		line 407 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab10.1.X/ST7735_TFT.c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;  x               1    wreg     unsigned char 
  4975 ;;  y               1   23[COMRAM] unsigned char 
  4976 ;;  color           2   24[COMRAM] unsigned int 
  4977 ;; Auto vars:     Size  Location     Type
  4978 ;;  x               1   26[COMRAM] unsigned char 
  4979 ;; Return value:  Size  Location     Type
  4980 ;;		None               void
  4981 ;; Registers used:
  4982 ;;		wreg, status,2, status,0, cstack
  4983 ;; Tracked objects:
  4984 ;;		On entry : 0/0
  4985 ;;		On exit  : 0/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4988 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4989 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4991 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4992 ;;Total ram usage:        4 bytes
  4993 ;; Hardware stack levels used:    1
  4994 ;; Hardware stack levels required when called:    6
  4995 ;; This function calls:
  4996 ;;		_setAddrWindow
  4997 ;;		_write_data
  4998 ;; This function is called by:
  4999 ;;		_drawChar
  5000 ;;		_drawCircle
  5001 ;;		_drawCircleHelper
  5002 ;; This function uses a non-reentrant model
  5003 ;;
  5004                           
  5005                           	psect	text20
  5006  00139C                     __ptext20:
  5007                           	opt stack 0
  5008  00139C                     _drawPixel:
  5009                           	opt stack 22
  5010                           
  5011                           ;incstack = 0
  5012                           ;drawPixel@x stored from wreg
  5013  00139C  6E1B               	movwf	drawPixel@x,c
  5014                           
  5015                           ;ST7735_TFT.c: 409: if((x >= 128) || (y >= 160))
  5016  00139E  0E80               	movlw	128
  5017  0013A0  601B               	cpfslt	drawPixel@x,c
  5018  0013A2  D013               	goto	l257
  5019  0013A4  0E9F               	movlw	159
  5020  0013A6  6418               	cpfsgt	drawPixel@y,c
  5021  0013A8  D001               	goto	l3219
  5022                           
  5023                           ;ST7735_TFT.c: 410: return;
  5024  0013AA  D00F               	goto	l257
  5025  0013AC                     l3219:
  5026                           
  5027                           ;ST7735_TFT.c: 411: setAddrWindow(x,y,x+1,y+1);
  5028  0013AC  C018  F014         	movff	drawPixel@y,setAddrWindow@y0
  5029  0013B0  281B               	incf	drawPixel@x,w,c
  5030  0013B2  6E15               	movwf	setAddrWindow@x1,c
  5031  0013B4  2818               	incf	drawPixel@y,w,c
  5032  0013B6  6E16               	movwf	setAddrWindow@y1,c
  5033  0013B8  501B               	movf	drawPixel@x,w,c
  5034  0013BA  EC2B  F009         	call	_setAddrWindow
  5035                           
  5036                           ;ST7735_TFT.c: 412: write_data(color >> 8);
  5037  0013BE  501A               	movf	drawPixel@color+1,w,c
  5038  0013C0  EC71  F00A         	call	_write_data
  5039                           
  5040                           ;ST7735_TFT.c: 413: write_data(color & 0xFF);
  5041  0013C4  5019               	movf	drawPixel@color,w,c
  5042  0013C6  EC71  F00A         	call	_write_data
  5043  0013CA                     l257:
  5044  0013CA  0012               	return		;funcret
  5045  0013CC                     __end_of_drawPixel:
  5046                           	opt stack 0
  5047                           tblptru	equ	0xFF8
  5048                           tblptrh	equ	0xFF7
  5049                           tblptrl	equ	0xFF6
  5050                           tablat	equ	0xFF5
  5051                           prodh	equ	0xFF4
  5052                           prodl	equ	0xFF3
  5053                           intcon	equ	0xFF2
  5054                           intcon2	equ	0xFF1
  5055                           postinc0	equ	0xFEE
  5056                           wreg	equ	0xFE8
  5057                           postdec1	equ	0xFE5
  5058                           fsr1l	equ	0xFE1
  5059                           indf2	equ	0xFDF
  5060                           postinc2	equ	0xFDE
  5061                           postdec2	equ	0xFDD
  5062                           fsr2h	equ	0xFDA
  5063                           fsr2l	equ	0xFD9
  5064                           status	equ	0xFD8
  5065                           
  5066 ;; *************** function _setAddrWindow *****************
  5067 ;; Defined at:
  5068 ;;		line 392 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab10.1.X/ST7735_TFT.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;  x0              1    wreg     unsigned char 
  5071 ;;  y0              1   19[COMRAM] unsigned char 
  5072 ;;  x1              1   20[COMRAM] unsigned char 
  5073 ;;  y1              1   21[COMRAM] unsigned char 
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;  x0              1   22[COMRAM] unsigned char 
  5076 ;; Return value:  Size  Location     Type
  5077 ;;		None               void
  5078 ;; Registers used:
  5079 ;;		wreg, status,2, status,0, cstack
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5085 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5086 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5088 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5089 ;;Total ram usage:        4 bytes
  5090 ;; Hardware stack levels used:    1
  5091 ;; Hardware stack levels required when called:    5
  5092 ;; This function calls:
  5093 ;;		_write_command
  5094 ;;		_write_data
  5095 ;; This function is called by:
  5096 ;;		_drawPixel
  5097 ;;		_drawFastVLine
  5098 ;;		_fillRectangle
  5099 ;;		_drawFastHLine
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           	psect	text21
  5104  001256                     __ptext21:
  5105                           	opt stack 0
  5106  001256                     _setAddrWindow:
  5107                           	opt stack 22
  5108                           
  5109                           ;incstack = 0
  5110                           ;setAddrWindow@x0 stored from wreg
  5111  001256  6E17               	movwf	setAddrWindow@x0,c
  5112                           
  5113                           ;ST7735_TFT.c: 394: write_command(0x2A);
  5114  001258  0E2A               	movlw	42
  5115  00125A  EC79  F00A         	call	_write_command
  5116                           
  5117                           ;ST7735_TFT.c: 395: write_data(0);
  5118  00125E  0E00               	movlw	0
  5119  001260  EC71  F00A         	call	_write_data
  5120                           
  5121                           ;ST7735_TFT.c: 396: write_data(x0 + colstart);
  5122  001264  5017               	movf	setAddrWindow@x0,w,c
  5123  001266  246D               	addwf	_colstart,w,c
  5124  001268  EC71  F00A         	call	_write_data
  5125                           
  5126                           ;ST7735_TFT.c: 397: write_data(0);
  5127  00126C  0E00               	movlw	0
  5128  00126E  EC71  F00A         	call	_write_data
  5129                           
  5130                           ;ST7735_TFT.c: 398: write_data(x1 + colstart);
  5131  001272  5015               	movf	setAddrWindow@x1,w,c
  5132  001274  246D               	addwf	_colstart,w,c
  5133  001276  EC71  F00A         	call	_write_data
  5134                           
  5135                           ;ST7735_TFT.c: 399: write_command(0x2B);
  5136  00127A  0E2B               	movlw	43
  5137  00127C  EC79  F00A         	call	_write_command
  5138                           
  5139                           ;ST7735_TFT.c: 400: write_data(0);
  5140  001280  0E00               	movlw	0
  5141  001282  EC71  F00A         	call	_write_data
  5142                           
  5143                           ;ST7735_TFT.c: 401: write_data(y0 + rowstart);
  5144  001286  5014               	movf	setAddrWindow@y0,w,c
  5145  001288  246F               	addwf	_rowstart,w,c
  5146  00128A  EC71  F00A         	call	_write_data
  5147                           
  5148                           ;ST7735_TFT.c: 402: write_data(0);
  5149  00128E  0E00               	movlw	0
  5150  001290  EC71  F00A         	call	_write_data
  5151                           
  5152                           ;ST7735_TFT.c: 403: write_data(y1 + rowstart);
  5153  001294  5016               	movf	setAddrWindow@y1,w,c
  5154  001296  246F               	addwf	_rowstart,w,c
  5155  001298  EC71  F00A         	call	_write_data
  5156                           
  5157                           ;ST7735_TFT.c: 404: write_command(0x2C);
  5158  00129C  0E2C               	movlw	44
  5159  00129E  EC79  F00A         	call	_write_command
  5160  0012A2  0012               	return		;funcret
  5161  0012A4                     __end_of_setAddrWindow:
  5162                           	opt stack 0
  5163                           tblptru	equ	0xFF8
  5164                           tblptrh	equ	0xFF7
  5165                           tblptrl	equ	0xFF6
  5166                           tablat	equ	0xFF5
  5167                           prodh	equ	0xFF4
  5168                           prodl	equ	0xFF3
  5169                           intcon	equ	0xFF2
  5170                           intcon2	equ	0xFF1
  5171                           postinc0	equ	0xFEE
  5172                           wreg	equ	0xFE8
  5173                           postdec1	equ	0xFE5
  5174                           fsr1l	equ	0xFE1
  5175                           indf2	equ	0xFDF
  5176                           postinc2	equ	0xFDE
  5177                           postdec2	equ	0xFDD
  5178                           fsr2h	equ	0xFDA
  5179                           fsr2l	equ	0xFD9
  5180                           status	equ	0xFD8
  5181                           
  5182 ;; *************** function _TFT_GreenTab_Initialize *****************
  5183 ;; Defined at:
  5184 ;;		line 644 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab10.1.X/ST7735_TFT.c"
  5185 ;; Parameters:    Size  Location     Type
  5186 ;;		None
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;		None
  5189 ;; Return value:  Size  Location     Type
  5190 ;;		None               void
  5191 ;; Registers used:
  5192 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5193 ;; Tracked objects:
  5194 ;;		On entry : 0/0
  5195 ;;		On exit  : 0/0
  5196 ;;		Unchanged: 0/0
  5197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5202 ;;Total ram usage:        0 bytes
  5203 ;; Hardware stack levels used:    1
  5204 ;; Hardware stack levels required when called:    6
  5205 ;; This function calls:
  5206 ;;		_Rcmd1
  5207 ;;		_Rcmd2red
  5208 ;;		_Rcmd3
  5209 ;;		_write_command
  5210 ;;		_write_data
  5211 ;; This function is called by:
  5212 ;;		_Initialize_Screen
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           	psect	text22
  5217  0013CC                     __ptext22:
  5218                           	opt stack 0
  5219  0013CC                     _TFT_GreenTab_Initialize:
  5220                           	opt stack 23
  5221                           
  5222                           ;ST7735_TFT.c: 646: PORTCbits.RC1 = 1;
  5223                           
  5224                           ;incstack = 0
  5225  0013CC  8282               	bsf	3970,1,c	;volatile
  5226                           
  5227                           ;ST7735_TFT.c: 647: PORTCbits.RC0 = 0;
  5228  0013CE  9082               	bcf	3970,0,c	;volatile
  5229                           
  5230                           ;ST7735_TFT.c: 649: SSPSTAT=0x80;
  5231  0013D0  0E80               	movlw	128
  5232  0013D2  6EC7               	movwf	4039,c	;volatile
  5233                           
  5234                           ;ST7735_TFT.c: 650: SSPCON1=0x30;
  5235  0013D4  0E30               	movlw	48
  5236  0013D6  6EC6               	movwf	4038,c	;volatile
  5237                           
  5238                           ;ST7735_TFT.c: 653: Rcmd1();
  5239  0013D8  ECF4  F004         	call	_Rcmd1	;wreg free
  5240                           
  5241                           ;ST7735_TFT.c: 654: Rcmd2red();
  5242  0013DC  EC96  F009         	call	_Rcmd2red	;wreg free
  5243                           
  5244                           ;ST7735_TFT.c: 655: Rcmd3();
  5245  0013E0  EC01  F006         	call	_Rcmd3	;wreg free
  5246                           
  5247                           ;ST7735_TFT.c: 656: write_command(0x36);
  5248  0013E4  0E36               	movlw	54
  5249  0013E6  EC79  F00A         	call	_write_command
  5250                           
  5251                           ;ST7735_TFT.c: 657: write_data(0xC0);
  5252  0013EA  0EC0               	movlw	192
  5253  0013EC  EC71  F00A         	call	_write_data
  5254                           
  5255                           ;ST7735_TFT.c: 658: _tft_type = 1;
  5256  0013F0  0E01               	movlw	1
  5257  0013F2  6E6B               	movwf	__tft_type,c
  5258  0013F4  0012               	return		;funcret
  5259  0013F6                     __end_of_TFT_GreenTab_Initialize:
  5260                           	opt stack 0
  5261                           tblptru	equ	0xFF8
  5262                           tblptrh	equ	0xFF7
  5263                           tblptrl	equ	0xFF6
  5264                           tablat	equ	0xFF5
  5265                           prodh	equ	0xFF4
  5266                           prodl	equ	0xFF3
  5267                           intcon	equ	0xFF2
  5268                           intcon2	equ	0xFF1
  5269                           postinc0	equ	0xFEE
  5270                           wreg	equ	0xFE8
  5271                           postdec1	equ	0xFE5
  5272                           fsr1l	equ	0xFE1
  5273                           indf2	equ	0xFDF
  5274                           postinc2	equ	0xFDE
  5275                           postdec2	equ	0xFDD
  5276                           fsr2h	equ	0xFDA
  5277                           fsr2l	equ	0xFD9
  5278                           status	equ	0xFD8
  5279                           
  5280 ;; *************** function _Rcmd3 *****************
  5281 ;; Defined at:
  5282 ;;		line 338 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab10.1.X/ST7735_TFT.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;		None
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;		None
  5287 ;; Return value:  Size  Location     Type
  5288 ;;		None               void
  5289 ;; Registers used:
  5290 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5300 ;;Total ram usage:        0 bytes
  5301 ;; Hardware stack levels used:    1
  5302 ;; Hardware stack levels required when called:    5
  5303 ;; This function calls:
  5304 ;;		_delay_ms
  5305 ;;		_write_command
  5306 ;;		_write_data
  5307 ;; This function is called by:
  5308 ;;		_TFT_GreenTab_Initialize
  5309 ;;		_TFT_BlackTab_Initialize
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           	psect	text23
  5314  000C02                     __ptext23:
  5315                           	opt stack 0
  5316  000C02                     _Rcmd3:
  5317                           	opt stack 23
  5318                           
  5319                           ;ST7735_TFT.c: 340: write_command(0xE0);
  5320                           
  5321                           ;incstack = 0
  5322  000C02  0EE0               	movlw	224
  5323  000C04  EC79  F00A         	call	_write_command
  5324                           
  5325                           ;ST7735_TFT.c: 341: write_data(0x02); write_data(0x1C); write_data(0x07); write_data(0x1
      +                          2);
  5326  000C08  0E02               	movlw	2
  5327  000C0A  EC71  F00A         	call	_write_data
  5328  000C0E  0E1C               	movlw	28
  5329  000C10  EC71  F00A         	call	_write_data
  5330  000C14  0E07               	movlw	7
  5331  000C16  EC71  F00A         	call	_write_data
  5332  000C1A  0E12               	movlw	18
  5333  000C1C  EC71  F00A         	call	_write_data
  5334                           
  5335                           ;ST7735_TFT.c: 342: write_data(0x37); write_data(0x32); write_data(0x29); write_data(0x2
      +                          D);
  5336  000C20  0E37               	movlw	55
  5337  000C22  EC71  F00A         	call	_write_data
  5338  000C26  0E32               	movlw	50
  5339  000C28  EC71  F00A         	call	_write_data
  5340  000C2C  0E29               	movlw	41
  5341  000C2E  EC71  F00A         	call	_write_data
  5342  000C32  0E2D               	movlw	45
  5343  000C34  EC71  F00A         	call	_write_data
  5344                           
  5345                           ;ST7735_TFT.c: 343: write_data(0x29); write_data(0x25); write_data(0x2B); write_data(0x3
      +                          9);
  5346  000C38  0E29               	movlw	41
  5347  000C3A  EC71  F00A         	call	_write_data
  5348  000C3E  0E25               	movlw	37
  5349  000C40  EC71  F00A         	call	_write_data
  5350  000C44  0E2B               	movlw	43
  5351  000C46  EC71  F00A         	call	_write_data
  5352  000C4A  0E39               	movlw	57
  5353  000C4C  EC71  F00A         	call	_write_data
  5354                           
  5355                           ;ST7735_TFT.c: 344: write_data(0x00); write_data(0x01); write_data(0x03); write_data(0x1
      +                          0);
  5356  000C50  0E00               	movlw	0
  5357  000C52  EC71  F00A         	call	_write_data
  5358  000C56  0E01               	movlw	1
  5359  000C58  EC71  F00A         	call	_write_data
  5360  000C5C  0E03               	movlw	3
  5361  000C5E  EC71  F00A         	call	_write_data
  5362  000C62  0E10               	movlw	16
  5363  000C64  EC71  F00A         	call	_write_data
  5364                           
  5365                           ;ST7735_TFT.c: 345: write_command(0xE1);
  5366  000C68  0EE1               	movlw	225
  5367  000C6A  EC79  F00A         	call	_write_command
  5368                           
  5369                           ;ST7735_TFT.c: 346: write_data(0x03); write_data(0x1D); write_data(0x07); write_data(0x0
      +                          6);
  5370  000C6E  0E03               	movlw	3
  5371  000C70  EC71  F00A         	call	_write_data
  5372  000C74  0E1D               	movlw	29
  5373  000C76  EC71  F00A         	call	_write_data
  5374  000C7A  0E07               	movlw	7
  5375  000C7C  EC71  F00A         	call	_write_data
  5376  000C80  0E06               	movlw	6
  5377  000C82  EC71  F00A         	call	_write_data
  5378                           
  5379                           ;ST7735_TFT.c: 347: write_data(0x2E); write_data(0x2C); write_data(0x29); write_data(0x2
      +                          D);
  5380  000C86  0E2E               	movlw	46
  5381  000C88  EC71  F00A         	call	_write_data
  5382  000C8C  0E2C               	movlw	44
  5383  000C8E  EC71  F00A         	call	_write_data
  5384  000C92  0E29               	movlw	41
  5385  000C94  EC71  F00A         	call	_write_data
  5386  000C98  0E2D               	movlw	45
  5387  000C9A  EC71  F00A         	call	_write_data
  5388                           
  5389                           ;ST7735_TFT.c: 348: write_data(0x2E); write_data(0x2E); write_data(0x37); write_data(0x3
      +                          F);
  5390  000C9E  0E2E               	movlw	46
  5391  000CA0  EC71  F00A         	call	_write_data
  5392  000CA4  0E2E               	movlw	46
  5393  000CA6  EC71  F00A         	call	_write_data
  5394  000CAA  0E37               	movlw	55
  5395  000CAC  EC71  F00A         	call	_write_data
  5396  000CB0  0E3F               	movlw	63
  5397  000CB2  EC71  F00A         	call	_write_data
  5398                           
  5399                           ;ST7735_TFT.c: 349: write_data(0x00); write_data(0x00); write_data(0x02); write_data(0x1
      +                          0);
  5400  000CB6  0E00               	movlw	0
  5401  000CB8  EC71  F00A         	call	_write_data
  5402  000CBC  0E00               	movlw	0
  5403  000CBE  EC71  F00A         	call	_write_data
  5404  000CC2  0E02               	movlw	2
  5405  000CC4  EC71  F00A         	call	_write_data
  5406  000CC8  0E10               	movlw	16
  5407  000CCA  EC71  F00A         	call	_write_data
  5408                           
  5409                           ;ST7735_TFT.c: 350: write_command(0x13);
  5410  000CCE  0E13               	movlw	19
  5411  000CD0  EC79  F00A         	call	_write_command
  5412                           
  5413                           ;ST7735_TFT.c: 351: delay_ms(10);
  5414  000CD4  0E00               	movlw	0
  5415  000CD6  6E18               	movwf	delay_ms@ms+1,c
  5416  000CD8  0E0A               	movlw	10
  5417  000CDA  6E17               	movwf	delay_ms@ms,c
  5418  000CDC  EC02  F009         	call	_delay_ms	;wreg free
  5419                           
  5420                           ;ST7735_TFT.c: 352: write_command(0x29);
  5421  000CE0  0E29               	movlw	41
  5422  000CE2  EC79  F00A         	call	_write_command
  5423                           
  5424                           ;ST7735_TFT.c: 353: delay_ms(100);
  5425  000CE6  0E00               	movlw	0
  5426  000CE8  6E18               	movwf	delay_ms@ms+1,c
  5427  000CEA  0E64               	movlw	100
  5428  000CEC  6E17               	movwf	delay_ms@ms,c
  5429  000CEE  EC02  F009         	call	_delay_ms	;wreg free
  5430  000CF2  0012               	return		;funcret
  5431  000CF4                     __end_of_Rcmd3:
  5432                           	opt stack 0
  5433                           tblptru	equ	0xFF8
  5434                           tblptrh	equ	0xFF7
  5435                           tblptrl	equ	0xFF6
  5436                           tablat	equ	0xFF5
  5437                           prodh	equ	0xFF4
  5438                           prodl	equ	0xFF3
  5439                           intcon	equ	0xFF2
  5440                           intcon2	equ	0xFF1
  5441                           postinc0	equ	0xFEE
  5442                           wreg	equ	0xFE8
  5443                           postdec1	equ	0xFE5
  5444                           fsr1l	equ	0xFE1
  5445                           indf2	equ	0xFDF
  5446                           postinc2	equ	0xFDE
  5447                           postdec2	equ	0xFDD
  5448                           fsr2h	equ	0xFDA
  5449                           fsr2l	equ	0xFD9
  5450                           status	equ	0xFD8
  5451                           
  5452 ;; *************** function _Rcmd2red *****************
  5453 ;; Defined at:
  5454 ;;		line 328 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab10.1.X/ST7735_TFT.c"
  5455 ;; Parameters:    Size  Location     Type
  5456 ;;		None
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;		None
  5459 ;; Return value:  Size  Location     Type
  5460 ;;		None               void
  5461 ;; Registers used:
  5462 ;;		wreg, status,2, cstack
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5472 ;;Total ram usage:        0 bytes
  5473 ;; Hardware stack levels used:    1
  5474 ;; Hardware stack levels required when called:    5
  5475 ;; This function calls:
  5476 ;;		_write_command
  5477 ;;		_write_data
  5478 ;; This function is called by:
  5479 ;;		_TFT_GreenTab_Initialize
  5480 ;; This function uses a non-reentrant model
  5481 ;;
  5482                           
  5483                           	psect	text24
  5484  00132C                     __ptext24:
  5485                           	opt stack 0
  5486  00132C                     _Rcmd2red:
  5487                           	opt stack 23
  5488                           
  5489                           ;ST7735_TFT.c: 330: write_command(0x2A);
  5490                           
  5491                           ;incstack = 0
  5492  00132C  0E2A               	movlw	42
  5493  00132E  EC79  F00A         	call	_write_command
  5494                           
  5495                           ;ST7735_TFT.c: 331: write_data(0x00); write_data(0x00);
  5496  001332  0E00               	movlw	0
  5497  001334  EC71  F00A         	call	_write_data
  5498  001338  0E00               	movlw	0
  5499  00133A  EC71  F00A         	call	_write_data
  5500                           
  5501                           ;ST7735_TFT.c: 332: write_data(0x00); write_data(0x7F);
  5502  00133E  0E00               	movlw	0
  5503  001340  EC71  F00A         	call	_write_data
  5504  001344  0E7F               	movlw	127
  5505  001346  EC71  F00A         	call	_write_data
  5506                           
  5507                           ;ST7735_TFT.c: 333: write_command(0x2B);
  5508  00134A  0E2B               	movlw	43
  5509  00134C  EC79  F00A         	call	_write_command
  5510                           
  5511                           ;ST7735_TFT.c: 334: write_data(0x00); write_data(0x00);
  5512  001350  0E00               	movlw	0
  5513  001352  EC71  F00A         	call	_write_data
  5514  001356  0E00               	movlw	0
  5515  001358  EC71  F00A         	call	_write_data
  5516                           
  5517                           ;ST7735_TFT.c: 335: write_data(0x00); write_data(0x9F);
  5518  00135C  0E00               	movlw	0
  5519  00135E  EC71  F00A         	call	_write_data
  5520  001362  0E9F               	movlw	159
  5521  001364  EC71  F00A         	call	_write_data
  5522  001368  0012               	return		;funcret
  5523  00136A                     __end_of_Rcmd2red:
  5524                           	opt stack 0
  5525                           tblptru	equ	0xFF8
  5526                           tblptrh	equ	0xFF7
  5527                           tblptrl	equ	0xFF6
  5528                           tablat	equ	0xFF5
  5529                           prodh	equ	0xFF4
  5530                           prodl	equ	0xFF3
  5531                           intcon	equ	0xFF2
  5532                           intcon2	equ	0xFF1
  5533                           postinc0	equ	0xFEE
  5534                           wreg	equ	0xFE8
  5535                           postdec1	equ	0xFE5
  5536                           fsr1l	equ	0xFE1
  5537                           indf2	equ	0xFDF
  5538                           postinc2	equ	0xFDE
  5539                           postdec2	equ	0xFDD
  5540                           fsr2h	equ	0xFDA
  5541                           fsr2l	equ	0xFD9
  5542                           status	equ	0xFD8
  5543                           
  5544 ;; *************** function _Rcmd1 *****************
  5545 ;; Defined at:
  5546 ;;		line 281 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab10.1.X/ST7735_TFT.c"
  5547 ;; Parameters:    Size  Location     Type
  5548 ;;		None
  5549 ;; Auto vars:     Size  Location     Type
  5550 ;;		None
  5551 ;; Return value:  Size  Location     Type
  5552 ;;		None               void
  5553 ;; Registers used:
  5554 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5555 ;; Tracked objects:
  5556 ;;		On entry : 0/0
  5557 ;;		On exit  : 0/0
  5558 ;;		Unchanged: 0/0
  5559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5564 ;;Total ram usage:        0 bytes
  5565 ;; Hardware stack levels used:    1
  5566 ;; Hardware stack levels required when called:    5
  5567 ;; This function calls:
  5568 ;;		_delay_ms
  5569 ;;		_write_command
  5570 ;;		_write_data
  5571 ;; This function is called by:
  5572 ;;		_TFT_GreenTab_Initialize
  5573 ;;		_TFT_BlackTab_Initialize
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577                           	psect	text25
  5578  0009E8                     __ptext25:
  5579                           	opt stack 0
  5580  0009E8                     _Rcmd1:
  5581                           	opt stack 23
  5582                           
  5583                           ;ST7735_TFT.c: 283: write_command(0x01);
  5584                           
  5585                           ;incstack = 0
  5586  0009E8  0E01               	movlw	1
  5587  0009EA  EC79  F00A         	call	_write_command
  5588                           
  5589                           ;ST7735_TFT.c: 284: delay_ms(150);
  5590  0009EE  0E00               	movlw	0
  5591  0009F0  6E18               	movwf	delay_ms@ms+1,c
  5592  0009F2  0E96               	movlw	150
  5593  0009F4  6E17               	movwf	delay_ms@ms,c
  5594  0009F6  EC02  F009         	call	_delay_ms	;wreg free
  5595                           
  5596                           ;ST7735_TFT.c: 285: write_command(0x11);
  5597  0009FA  0E11               	movlw	17
  5598  0009FC  EC79  F00A         	call	_write_command
  5599                           
  5600                           ;ST7735_TFT.c: 286: delay_ms(500);
  5601  000A00  0E01               	movlw	1
  5602  000A02  6E18               	movwf	delay_ms@ms+1,c
  5603  000A04  0EF4               	movlw	244
  5604  000A06  6E17               	movwf	delay_ms@ms,c
  5605  000A08  EC02  F009         	call	_delay_ms	;wreg free
  5606                           
  5607                           ;ST7735_TFT.c: 287: write_command(0xB1);
  5608  000A0C  0EB1               	movlw	177
  5609  000A0E  EC79  F00A         	call	_write_command
  5610                           
  5611                           ;ST7735_TFT.c: 288: write_data(0x01);
  5612  000A12  0E01               	movlw	1
  5613  000A14  EC71  F00A         	call	_write_data
  5614                           
  5615                           ;ST7735_TFT.c: 289: write_data(0x2C);
  5616  000A18  0E2C               	movlw	44
  5617  000A1A  EC71  F00A         	call	_write_data
  5618                           
  5619                           ;ST7735_TFT.c: 290: write_data(0x2D);
  5620  000A1E  0E2D               	movlw	45
  5621  000A20  EC71  F00A         	call	_write_data
  5622                           
  5623                           ;ST7735_TFT.c: 291: write_command(0xB2);
  5624  000A24  0EB2               	movlw	178
  5625  000A26  EC79  F00A         	call	_write_command
  5626                           
  5627                           ;ST7735_TFT.c: 292: write_data(0x01);
  5628  000A2A  0E01               	movlw	1
  5629  000A2C  EC71  F00A         	call	_write_data
  5630                           
  5631                           ;ST7735_TFT.c: 293: write_data(0x2C);
  5632  000A30  0E2C               	movlw	44
  5633  000A32  EC71  F00A         	call	_write_data
  5634                           
  5635                           ;ST7735_TFT.c: 294: write_data(0x2D);
  5636  000A36  0E2D               	movlw	45
  5637  000A38  EC71  F00A         	call	_write_data
  5638                           
  5639                           ;ST7735_TFT.c: 295: write_command(0xB3);
  5640  000A3C  0EB3               	movlw	179
  5641  000A3E  EC79  F00A         	call	_write_command
  5642                           
  5643                           ;ST7735_TFT.c: 296: write_data(0x01);
  5644  000A42  0E01               	movlw	1
  5645  000A44  EC71  F00A         	call	_write_data
  5646                           
  5647                           ;ST7735_TFT.c: 297: write_data(0x2C);
  5648  000A48  0E2C               	movlw	44
  5649  000A4A  EC71  F00A         	call	_write_data
  5650                           
  5651                           ;ST7735_TFT.c: 298: write_data(0x2D);
  5652  000A4E  0E2D               	movlw	45
  5653  000A50  EC71  F00A         	call	_write_data
  5654                           
  5655                           ;ST7735_TFT.c: 299: write_data(0x01);
  5656  000A54  0E01               	movlw	1
  5657  000A56  EC71  F00A         	call	_write_data
  5658                           
  5659                           ;ST7735_TFT.c: 300: write_data(0x2C);
  5660  000A5A  0E2C               	movlw	44
  5661  000A5C  EC71  F00A         	call	_write_data
  5662                           
  5663                           ;ST7735_TFT.c: 301: write_data(0x2D);
  5664  000A60  0E2D               	movlw	45
  5665  000A62  EC71  F00A         	call	_write_data
  5666                           
  5667                           ;ST7735_TFT.c: 302: write_command(0xB4);
  5668  000A66  0EB4               	movlw	180
  5669  000A68  EC79  F00A         	call	_write_command
  5670                           
  5671                           ;ST7735_TFT.c: 303: write_data(0x07);
  5672  000A6C  0E07               	movlw	7
  5673  000A6E  EC71  F00A         	call	_write_data
  5674                           
  5675                           ;ST7735_TFT.c: 304: write_command(0xC0);
  5676  000A72  0EC0               	movlw	192
  5677  000A74  EC79  F00A         	call	_write_command
  5678                           
  5679                           ;ST7735_TFT.c: 305: write_data(0xA2);
  5680  000A78  0EA2               	movlw	162
  5681  000A7A  EC71  F00A         	call	_write_data
  5682                           
  5683                           ;ST7735_TFT.c: 306: write_data(0x02);
  5684  000A7E  0E02               	movlw	2
  5685  000A80  EC71  F00A         	call	_write_data
  5686                           
  5687                           ;ST7735_TFT.c: 307: write_data(0x84);
  5688  000A84  0E84               	movlw	132
  5689  000A86  EC71  F00A         	call	_write_data
  5690                           
  5691                           ;ST7735_TFT.c: 308: write_command(0xC1);
  5692  000A8A  0EC1               	movlw	193
  5693  000A8C  EC79  F00A         	call	_write_command
  5694                           
  5695                           ;ST7735_TFT.c: 309: write_data(0xC5);
  5696  000A90  0EC5               	movlw	197
  5697  000A92  EC71  F00A         	call	_write_data
  5698                           
  5699                           ;ST7735_TFT.c: 310: write_command(0xC2);
  5700  000A96  0EC2               	movlw	194
  5701  000A98  EC79  F00A         	call	_write_command
  5702                           
  5703                           ;ST7735_TFT.c: 311: write_data(0x0A);
  5704  000A9C  0E0A               	movlw	10
  5705  000A9E  EC71  F00A         	call	_write_data
  5706                           
  5707                           ;ST7735_TFT.c: 312: write_data(0x00);
  5708  000AA2  0E00               	movlw	0
  5709  000AA4  EC71  F00A         	call	_write_data
  5710                           
  5711                           ;ST7735_TFT.c: 313: write_command(0xC3);
  5712  000AA8  0EC3               	movlw	195
  5713  000AAA  EC79  F00A         	call	_write_command
  5714                           
  5715                           ;ST7735_TFT.c: 314: write_data(0x8A);
  5716  000AAE  0E8A               	movlw	138
  5717  000AB0  EC71  F00A         	call	_write_data
  5718                           
  5719                           ;ST7735_TFT.c: 315: write_data(0x2A);
  5720  000AB4  0E2A               	movlw	42
  5721  000AB6  EC71  F00A         	call	_write_data
  5722                           
  5723                           ;ST7735_TFT.c: 316: write_command(0xC4);
  5724  000ABA  0EC4               	movlw	196
  5725  000ABC  EC79  F00A         	call	_write_command
  5726                           
  5727                           ;ST7735_TFT.c: 317: write_data(0x8A);
  5728  000AC0  0E8A               	movlw	138
  5729  000AC2  EC71  F00A         	call	_write_data
  5730                           
  5731                           ;ST7735_TFT.c: 318: write_data(0xEE);
  5732  000AC6  0EEE               	movlw	238
  5733  000AC8  EC71  F00A         	call	_write_data
  5734                           
  5735                           ;ST7735_TFT.c: 319: write_command(0xC5);
  5736  000ACC  0EC5               	movlw	197
  5737  000ACE  EC79  F00A         	call	_write_command
  5738                           
  5739                           ;ST7735_TFT.c: 320: write_data(0x0E);
  5740  000AD2  0E0E               	movlw	14
  5741  000AD4  EC71  F00A         	call	_write_data
  5742                           
  5743                           ;ST7735_TFT.c: 321: write_command(0x20);
  5744  000AD8  0E20               	movlw	32
  5745  000ADA  EC79  F00A         	call	_write_command
  5746                           
  5747                           ;ST7735_TFT.c: 322: write_command(0x36);
  5748  000ADE  0E36               	movlw	54
  5749  000AE0  EC79  F00A         	call	_write_command
  5750                           
  5751                           ;ST7735_TFT.c: 323: write_data(0xC8);
  5752  000AE4  0EC8               	movlw	200
  5753  000AE6  EC71  F00A         	call	_write_data
  5754                           
  5755                           ;ST7735_TFT.c: 324: write_command(0x3A);
  5756  000AEA  0E3A               	movlw	58
  5757  000AEC  EC79  F00A         	call	_write_command
  5758                           
  5759                           ;ST7735_TFT.c: 325: write_data(0x05);
  5760  000AF0  0E05               	movlw	5
  5761  000AF2  EC71  F00A         	call	_write_data
  5762  000AF6  0012               	return		;funcret
  5763  000AF8                     __end_of_Rcmd1:
  5764                           	opt stack 0
  5765                           tblptru	equ	0xFF8
  5766                           tblptrh	equ	0xFF7
  5767                           tblptrl	equ	0xFF6
  5768                           tablat	equ	0xFF5
  5769                           prodh	equ	0xFF4
  5770                           prodl	equ	0xFF3
  5771                           intcon	equ	0xFF2
  5772                           intcon2	equ	0xFF1
  5773                           postinc0	equ	0xFEE
  5774                           wreg	equ	0xFE8
  5775                           postdec1	equ	0xFE5
  5776                           fsr1l	equ	0xFE1
  5777                           indf2	equ	0xFDF
  5778                           postinc2	equ	0xFDE
  5779                           postdec2	equ	0xFDD
  5780                           fsr2h	equ	0xFDA
  5781                           fsr2l	equ	0xFD9
  5782                           status	equ	0xFD8
  5783                           
  5784 ;; *************** function _write_data *****************
  5785 ;; Defined at:
  5786 ;;		line 209 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab10.1.X/ST7735_TFT.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;  data_           1    wreg     unsigned char 
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;  data_           1   18[COMRAM] unsigned char 
  5791 ;; Return value:  Size  Location     Type
  5792 ;;		None               void
  5793 ;; Registers used:
  5794 ;;		wreg, status,2, cstack
  5795 ;; Tracked objects:
  5796 ;;		On entry : 0/0
  5797 ;;		On exit  : 0/0
  5798 ;;		Unchanged: 0/0
  5799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5801 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5803 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5804 ;;Total ram usage:        1 bytes
  5805 ;; Hardware stack levels used:    1
  5806 ;; Hardware stack levels required when called:    4
  5807 ;; This function calls:
  5808 ;;		_spiwrite
  5809 ;; This function is called by:
  5810 ;;		_Rcmd1
  5811 ;;		_Rcmd2red
  5812 ;;		_Rcmd3
  5813 ;;		_setAddrWindow
  5814 ;;		_drawPixel
  5815 ;;		_TFT_GreenTab_Initialize
  5816 ;;		_Bcmd
  5817 ;;		_setScrollDefinition
  5818 ;;		_Rcmd2green
  5819 ;;		_VerticalScroll
  5820 ;; This function uses a non-reentrant model
  5821 ;;
  5822                           
  5823                           	psect	text26
  5824  0014E2                     __ptext26:
  5825                           	opt stack 0
  5826  0014E2                     _write_data:
  5827                           	opt stack 22
  5828                           
  5829                           ;incstack = 0
  5830                           ;write_data@data_ stored from wreg
  5831  0014E2  6E13               	movwf	write_data@data_,c
  5832                           
  5833                           ;ST7735_TFT.c: 211: PORTCbits.RC1 = 0;
  5834  0014E4  9282               	bcf	3970,1,c	;volatile
  5835                           
  5836                           ;ST7735_TFT.c: 212: PORTCbits.RC0 = 1;
  5837  0014E6  8082               	bsf	3970,0,c	;volatile
  5838                           
  5839                           ;ST7735_TFT.c: 213: spiwrite(data_);
  5840  0014E8  5013               	movf	write_data@data_,w,c
  5841  0014EA  EC55  F00A         	call	_spiwrite
  5842                           
  5843                           ;ST7735_TFT.c: 214: PORTCbits.RC1 = 1;
  5844  0014EE  8282               	bsf	3970,1,c	;volatile
  5845  0014F0  0012               	return		;funcret
  5846  0014F2                     __end_of_write_data:
  5847                           	opt stack 0
  5848                           tblptru	equ	0xFF8
  5849                           tblptrh	equ	0xFF7
  5850                           tblptrl	equ	0xFF6
  5851                           tablat	equ	0xFF5
  5852                           prodh	equ	0xFF4
  5853                           prodl	equ	0xFF3
  5854                           intcon	equ	0xFF2
  5855                           intcon2	equ	0xFF1
  5856                           postinc0	equ	0xFEE
  5857                           wreg	equ	0xFE8
  5858                           postdec1	equ	0xFE5
  5859                           fsr1l	equ	0xFE1
  5860                           indf2	equ	0xFDF
  5861                           postinc2	equ	0xFDE
  5862                           postdec2	equ	0xFDD
  5863                           fsr2h	equ	0xFDA
  5864                           fsr2l	equ	0xFD9
  5865                           status	equ	0xFD8
  5866                           
  5867 ;; *************** function _write_command *****************
  5868 ;; Defined at:
  5869 ;;		line 198 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab10.1.X/ST7735_TFT.c"
  5870 ;; Parameters:    Size  Location     Type
  5871 ;;  cmd_            1    wreg     unsigned char 
  5872 ;; Auto vars:     Size  Location     Type
  5873 ;;  cmd_            1   18[COMRAM] unsigned char 
  5874 ;; Return value:  Size  Location     Type
  5875 ;;		None               void
  5876 ;; Registers used:
  5877 ;;		wreg, status,2, cstack
  5878 ;; Tracked objects:
  5879 ;;		On entry : 0/0
  5880 ;;		On exit  : 0/0
  5881 ;;		Unchanged: 0/0
  5882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5884 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5886 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5887 ;;Total ram usage:        1 bytes
  5888 ;; Hardware stack levels used:    1
  5889 ;; Hardware stack levels required when called:    4
  5890 ;; This function calls:
  5891 ;;		_spiwrite
  5892 ;; This function is called by:
  5893 ;;		_Rcmd1
  5894 ;;		_Rcmd2red
  5895 ;;		_Rcmd3
  5896 ;;		_setAddrWindow
  5897 ;;		_TFT_GreenTab_Initialize
  5898 ;;		_Bcmd
  5899 ;;		_setScrollDefinition
  5900 ;;		_Rcmd2green
  5901 ;;		_VerticalScroll
  5902 ;; This function uses a non-reentrant model
  5903 ;;
  5904                           
  5905                           	psect	text27
  5906  0014F2                     __ptext27:
  5907                           	opt stack 0
  5908  0014F2                     _write_command:
  5909                           	opt stack 22
  5910                           
  5911                           ;incstack = 0
  5912                           ;write_command@cmd_ stored from wreg
  5913  0014F2  6E13               	movwf	write_command@cmd_,c
  5914                           
  5915                           ;ST7735_TFT.c: 200: PORTCbits.RC1 = 0;
  5916  0014F4  9282               	bcf	3970,1,c	;volatile
  5917                           
  5918                           ;ST7735_TFT.c: 202: PORTCbits.RC0 = 0;
  5919  0014F6  9082               	bcf	3970,0,c	;volatile
  5920                           
  5921                           ;ST7735_TFT.c: 203: spiwrite(cmd_);
  5922  0014F8  5013               	movf	write_command@cmd_,w,c
  5923  0014FA  EC55  F00A         	call	_spiwrite
  5924                           
  5925                           ;ST7735_TFT.c: 205: PORTCbits.RC1 = 1;
  5926  0014FE  8282               	bsf	3970,1,c	;volatile
  5927  001500  0012               	return		;funcret
  5928  001502                     __end_of_write_command:
  5929                           	opt stack 0
  5930                           tblptru	equ	0xFF8
  5931                           tblptrh	equ	0xFF7
  5932                           tblptrl	equ	0xFF6
  5933                           tablat	equ	0xFF5
  5934                           prodh	equ	0xFF4
  5935                           prodl	equ	0xFF3
  5936                           intcon	equ	0xFF2
  5937                           intcon2	equ	0xFF1
  5938                           postinc0	equ	0xFEE
  5939                           wreg	equ	0xFE8
  5940                           postdec1	equ	0xFE5
  5941                           fsr1l	equ	0xFE1
  5942                           indf2	equ	0xFDF
  5943                           postinc2	equ	0xFDE
  5944                           postdec2	equ	0xFDD
  5945                           fsr2h	equ	0xFDA
  5946                           fsr2l	equ	0xFD9
  5947                           status	equ	0xFD8
  5948                           
  5949 ;; *************** function _spiwrite *****************
  5950 ;; Defined at:
  5951 ;;		line 189 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab10.1.X/ST7735_TFT.c"
  5952 ;; Parameters:    Size  Location     Type
  5953 ;;  spidata         1    wreg     unsigned char 
  5954 ;; Auto vars:     Size  Location     Type
  5955 ;;  spidata         1   17[COMRAM] unsigned char 
  5956 ;;  x               1   16[COMRAM] unsigned char 
  5957 ;; Return value:  Size  Location     Type
  5958 ;;		None               void
  5959 ;; Registers used:
  5960 ;;		wreg
  5961 ;; Tracked objects:
  5962 ;;		On entry : 0/0
  5963 ;;		On exit  : 0/0
  5964 ;;		Unchanged: 0/0
  5965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5967 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5969 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5970 ;;Total ram usage:        2 bytes
  5971 ;; Hardware stack levels used:    1
  5972 ;; Hardware stack levels required when called:    3
  5973 ;; This function calls:
  5974 ;;		Nothing
  5975 ;; This function is called by:
  5976 ;;		_write_command
  5977 ;;		_write_data
  5978 ;;		_drawFastVLine
  5979 ;;		_fillRectangle
  5980 ;;		_drawFastHLine
  5981 ;; This function uses a non-reentrant model
  5982 ;;
  5983                           
  5984                           	psect	text28
  5985  0014AA                     __ptext28:
  5986                           	opt stack 0
  5987  0014AA                     _spiwrite:
  5988                           	opt stack 24
  5989                           
  5990                           ;incstack = 0
  5991                           ;spiwrite@spidata stored from wreg
  5992  0014AA  6E12               	movwf	spiwrite@spidata,c
  5993                           
  5994                           ;ST7735_TFT.c: 191: char x;
  5995                           ;ST7735_TFT.c: 192: PIR1bits.SSPIF = 0;
  5996  0014AC  969E               	bcf	3998,3,c	;volatile
  5997                           
  5998                           ;ST7735_TFT.c: 193: x = SSPBUF;
  5999  0014AE  CFC9 F011          	movff	4041,spiwrite@x	;volatile
  6000                           
  6001                           ;ST7735_TFT.c: 194: SSPBUF = spidata;
  6002  0014B2  C012  FFC9         	movff	spiwrite@spidata,4041	;volatile
  6003                           
  6004                           ;ST7735_TFT.c: 195: while (!SSPSTATbits.BF);
  6005  0014B6  D000               	goto	l213
  6006  0014B8                     l213:
  6007  0014B8  A0C7               	btfss	4039,0,c	;volatile
  6008  0014BA  D7FE               	goto	l213
  6009  0014BC  0012               	return		;funcret
  6010  0014BE                     __end_of_spiwrite:
  6011                           	opt stack 0
  6012                           tblptru	equ	0xFF8
  6013                           tblptrh	equ	0xFF7
  6014                           tblptrl	equ	0xFF6
  6015                           tablat	equ	0xFF5
  6016                           prodh	equ	0xFF4
  6017                           prodl	equ	0xFF3
  6018                           intcon	equ	0xFF2
  6019                           intcon2	equ	0xFF1
  6020                           postinc0	equ	0xFEE
  6021                           wreg	equ	0xFE8
  6022                           postdec1	equ	0xFE5
  6023                           fsr1l	equ	0xFE1
  6024                           indf2	equ	0xFDF
  6025                           postinc2	equ	0xFDE
  6026                           postdec2	equ	0xFDD
  6027                           fsr2h	equ	0xFDA
  6028                           fsr2l	equ	0xFD9
  6029                           status	equ	0xFD8
  6030                           
  6031 ;; *************** function _LCD_Reset *****************
  6032 ;; Defined at:
  6033 ;;		line 217 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab10.1.X/ST7735_TFT.c"
  6034 ;; Parameters:    Size  Location     Type
  6035 ;;		None
  6036 ;; Auto vars:     Size  Location     Type
  6037 ;;		None
  6038 ;; Return value:  Size  Location     Type
  6039 ;;		None               void
  6040 ;; Registers used:
  6041 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6042 ;; Tracked objects:
  6043 ;;		On entry : 0/0
  6044 ;;		On exit  : 0/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6051 ;;Total ram usage:        0 bytes
  6052 ;; Hardware stack levels used:    1
  6053 ;; Hardware stack levels required when called:    5
  6054 ;; This function calls:
  6055 ;;		_delay_ms
  6056 ;; This function is called by:
  6057 ;;		_Initialize_Screen
  6058 ;; This function uses a non-reentrant model
  6059 ;;
  6060                           
  6061                           	psect	text29
  6062  0014BE                     __ptext29:
  6063                           	opt stack 0
  6064  0014BE                     _LCD_Reset:
  6065                           	opt stack 24
  6066                           
  6067                           ;ST7735_TFT.c: 219: PORTCbits.RC2 = 0;
  6068                           
  6069                           ;incstack = 0
  6070  0014BE  9482               	bcf	3970,2,c	;volatile
  6071                           
  6072                           ;ST7735_TFT.c: 220: delay_ms(100);
  6073  0014C0  0E00               	movlw	0
  6074  0014C2  6E18               	movwf	delay_ms@ms+1,c
  6075  0014C4  0E64               	movlw	100
  6076  0014C6  6E17               	movwf	delay_ms@ms,c
  6077  0014C8  EC02  F009         	call	_delay_ms	;wreg free
  6078                           
  6079                           ;ST7735_TFT.c: 221: PORTCbits.RC2 = 1;
  6080  0014CC  8482               	bsf	3970,2,c	;volatile
  6081  0014CE  0012               	return		;funcret
  6082  0014D0                     __end_of_LCD_Reset:
  6083                           	opt stack 0
  6084                           tblptru	equ	0xFF8
  6085                           tblptrh	equ	0xFF7
  6086                           tblptrl	equ	0xFF6
  6087                           tablat	equ	0xFF5
  6088                           prodh	equ	0xFF4
  6089                           prodl	equ	0xFF3
  6090                           intcon	equ	0xFF2
  6091                           intcon2	equ	0xFF1
  6092                           postinc0	equ	0xFEE
  6093                           wreg	equ	0xFE8
  6094                           postdec1	equ	0xFE5
  6095                           fsr1l	equ	0xFE1
  6096                           indf2	equ	0xFDF
  6097                           postinc2	equ	0xFDE
  6098                           postdec2	equ	0xFDD
  6099                           fsr2h	equ	0xFDA
  6100                           fsr2l	equ	0xFD9
  6101                           status	equ	0xFD8
  6102                           
  6103 ;; *************** function _delay_ms *****************
  6104 ;; Defined at:
  6105 ;;		line 64 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab10.1.X/ST7735_TFT.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;  ms              2   22[COMRAM] int 
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;  count           2   26[COMRAM] int 
  6110 ;; Return value:  Size  Location     Type
  6111 ;;		None               void
  6112 ;; Registers used:
  6113 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6114 ;; Tracked objects:
  6115 ;;		On entry : 0/0
  6116 ;;		On exit  : 0/0
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6120 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6121 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6122 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6123 ;;Total ram usage:        6 bytes
  6124 ;; Hardware stack levels used:    1
  6125 ;; Hardware stack levels required when called:    4
  6126 ;; This function calls:
  6127 ;;		___wmul
  6128 ;; This function is called by:
  6129 ;;		_LCD_Reset
  6130 ;;		_Rcmd1
  6131 ;;		_Rcmd3
  6132 ;;		_Bcmd
  6133 ;; This function uses a non-reentrant model
  6134 ;;
  6135                           
  6136                           	psect	text30
  6137  001204                     __ptext30:
  6138                           	opt stack 0
  6139  001204                     _delay_ms:
  6140                           	opt stack 23
  6141                           
  6142                           ;ST7735_TFT.c: 70: int count;
  6143                           ;ST7735_TFT.c: 71: count = 8000000/4000/8 * ms;
  6144                           
  6145                           ;incstack = 0
  6146  001204  C017  F011         	movff	delay_ms@ms,___wmul@multiplier
  6147  001208  C018  F012         	movff	delay_ms@ms+1,___wmul@multiplier+1
  6148  00120C  0E00               	movlw	0
  6149  00120E  6E14               	movwf	___wmul@multiplicand+1,c
  6150  001210  0EFA               	movlw	250
  6151  001212  6E13               	movwf	___wmul@multiplicand,c
  6152  001214  ECFB  F009         	call	___wmul	;wreg free
  6153  001218  C011  F01B         	movff	?___wmul,delay_ms@count
  6154  00121C  C012  F01C         	movff	?___wmul+1,delay_ms@count+1
  6155                           
  6156                           ;ST7735_TFT.c: 72: count = (0xffff - count);
  6157  001220  C01B  F019         	movff	delay_ms@count,??_delay_ms
  6158  001224  C01C  F01A         	movff	delay_ms@count+1,??_delay_ms+1
  6159  001228  1E19               	comf	??_delay_ms,f,c
  6160  00122A  1E1A               	comf	??_delay_ms+1,f,c
  6161  00122C  4A19               	infsnz	??_delay_ms,f,c
  6162  00122E  2A1A               	incf	??_delay_ms+1,f,c
  6163  001230  0EFF               	movlw	255
  6164  001232  2419               	addwf	??_delay_ms,w,c
  6165  001234  6E1B               	movwf	delay_ms@count,c
  6166  001236  0EFF               	movlw	255
  6167  001238  201A               	addwfc	??_delay_ms+1,w,c
  6168  00123A  6E1C               	movwf	delay_ms@count+1,c
  6169                           
  6170                           ;ST7735_TFT.c: 74: T3CON = 0xb8;
  6171  00123C  0EB8               	movlw	184
  6172  00123E  6EB1               	movwf	4017,c	;volatile
  6173                           
  6174                           ;ST7735_TFT.c: 76: TMR3L = count & 0x00ff;
  6175  001240  C01B  FFB2         	movff	delay_ms@count,4018	;volatile
  6176                           
  6177                           ;ST7735_TFT.c: 77: TMR3H = count >> 8;
  6178  001244  501C               	movf	delay_ms@count+1,w,c
  6179  001246  6EB3               	movwf	4019,c	;volatile
  6180                           
  6181                           ;ST7735_TFT.c: 79: PIR2bits.TMR3IF = 0;
  6182  001248  92A1               	bcf	4001,1,c	;volatile
  6183                           
  6184                           ;ST7735_TFT.c: 80: T3CONbits.TMR3ON = 1;
  6185  00124A  80B1               	bsf	4017,0,c	;volatile
  6186                           
  6187                           ;ST7735_TFT.c: 82: while (PIR2bits.TMR3IF == 0);
  6188  00124C  D000               	goto	l203
  6189  00124E                     l203:
  6190  00124E  A2A1               	btfss	4001,1,c	;volatile
  6191  001250  D7FE               	goto	l203
  6192                           
  6193                           ;ST7735_TFT.c: 83: T3CONbits.TMR3ON = 0;
  6194  001252  90B1               	bcf	4017,0,c	;volatile
  6195  001254  0012               	return		;funcret
  6196  001256                     __end_of_delay_ms:
  6197                           	opt stack 0
  6198                           tblptru	equ	0xFF8
  6199                           tblptrh	equ	0xFF7
  6200                           tblptrl	equ	0xFF6
  6201                           tablat	equ	0xFF5
  6202                           prodh	equ	0xFF4
  6203                           prodl	equ	0xFF3
  6204                           intcon	equ	0xFF2
  6205                           intcon2	equ	0xFF1
  6206                           postinc0	equ	0xFEE
  6207                           wreg	equ	0xFE8
  6208                           postdec1	equ	0xFE5
  6209                           fsr1l	equ	0xFE1
  6210                           indf2	equ	0xFDF
  6211                           postinc2	equ	0xFDE
  6212                           postdec2	equ	0xFDD
  6213                           fsr2h	equ	0xFDA
  6214                           fsr2l	equ	0xFD9
  6215                           status	equ	0xFD8
  6216                           
  6217 ;; *************** function ___wmul *****************
  6218 ;; Defined at:
  6219 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;  multiplier      2   16[COMRAM] unsigned int 
  6222 ;;  multiplicand    2   18[COMRAM] unsigned int 
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;  product         2   20[COMRAM] unsigned int 
  6225 ;; Return value:  Size  Location     Type
  6226 ;;                  2   16[COMRAM] unsigned int 
  6227 ;; Registers used:
  6228 ;;		wreg, status,2, status,0, prodl, prodh
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/0
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6234 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6235 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6237 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6238 ;;Total ram usage:        6 bytes
  6239 ;; Hardware stack levels used:    1
  6240 ;; Hardware stack levels required when called:    3
  6241 ;; This function calls:
  6242 ;;		Nothing
  6243 ;; This function is called by:
  6244 ;;		_delay_ms
  6245 ;;		_drawChar
  6246 ;;		_printf
  6247 ;; This function uses a non-reentrant model
  6248 ;;
  6249                           
  6250                           	psect	text31
  6251  0013F6                     __ptext31:
  6252                           	opt stack 0
  6253  0013F6                     ___wmul:
  6254                           	opt stack 26
  6255                           
  6256                           ;incstack = 0
  6257  0013F6  5011               	movf	___wmul@multiplier,w,c
  6258  0013F8  0213               	mulwf	___wmul@multiplicand,c
  6259  0013FA  CFF3 F015          	movff	prodl,___wmul@product
  6260  0013FE  CFF4 F016          	movff	prodh,___wmul@product+1
  6261  001402  5011               	movf	___wmul@multiplier,w,c
  6262  001404  0214               	mulwf	___wmul@multiplicand+1,c
  6263  001406  50F3               	movf	prodl,w,c
  6264  001408  2616               	addwf	___wmul@product+1,f,c
  6265  00140A  5012               	movf	___wmul@multiplier+1,w,c
  6266  00140C  0213               	mulwf	___wmul@multiplicand,c
  6267  00140E  50F3               	movf	prodl,w,c
  6268  001410  2616               	addwf	___wmul@product+1,f,c
  6269  001412  C015  F011         	movff	___wmul@product,?___wmul
  6270  001416  C016  F012         	movff	___wmul@product+1,?___wmul+1
  6271  00141A  D000               	goto	l465
  6272  00141C                     l465:
  6273  00141C  0012               	return		;funcret
  6274  00141E                     __end_of___wmul:
  6275                           	opt stack 0
  6276                           tblptru	equ	0xFF8
  6277                           tblptrh	equ	0xFF7
  6278                           tblptrl	equ	0xFF6
  6279                           tablat	equ	0xFF5
  6280                           prodh	equ	0xFF4
  6281                           prodl	equ	0xFF3
  6282                           intcon	equ	0xFF2
  6283                           intcon2	equ	0xFF1
  6284                           postinc0	equ	0xFEE
  6285                           wreg	equ	0xFE8
  6286                           postdec1	equ	0xFE5
  6287                           fsr1l	equ	0xFE1
  6288                           indf2	equ	0xFDF
  6289                           postinc2	equ	0xFDE
  6290                           postdec2	equ	0xFDD
  6291                           fsr2h	equ	0xFDA
  6292                           fsr2l	equ	0xFD9
  6293                           status	equ	0xFD8
  6294                           
  6295 ;; *************** function _Deactivate_Buzzer *****************
  6296 ;; Defined at:
  6297 ;;		line 197 in file "Lab10.c"
  6298 ;; Parameters:    Size  Location     Type
  6299 ;;		None
  6300 ;; Auto vars:     Size  Location     Type
  6301 ;;		None
  6302 ;; Return value:  Size  Location     Type
  6303 ;;		None               void
  6304 ;; Registers used:
  6305 ;;		wreg, status,2
  6306 ;; Tracked objects:
  6307 ;;		On entry : 0/0
  6308 ;;		On exit  : 0/0
  6309 ;;		Unchanged: 0/0
  6310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6315 ;;Total ram usage:        0 bytes
  6316 ;; Hardware stack levels used:    1
  6317 ;; Hardware stack levels required when called:    3
  6318 ;; This function calls:
  6319 ;;		Nothing
  6320 ;; This function is called by:
  6321 ;;		_main
  6322 ;; This function uses a non-reentrant model
  6323 ;;
  6324                           
  6325                           	psect	text32
  6326  00151C                     __ptext32:
  6327                           	opt stack 0
  6328  00151C                     _Deactivate_Buzzer:
  6329                           	opt stack 27
  6330                           
  6331                           ;Lab10.c: 199: CCP2CON = 0x0;
  6332                           
  6333                           ;incstack = 0
  6334  00151C  0E00               	movlw	0
  6335  00151E  6EBA               	movwf	4026,c	;volatile
  6336                           
  6337                           ;Lab10.c: 200: PORTBbits.RB3 = 0;
  6338  001520  9681               	bcf	3969,3,c	;volatile
  6339  001522  0012               	return		;funcret
  6340  001524                     __end_of_Deactivate_Buzzer:
  6341                           	opt stack 0
  6342                           tblptru	equ	0xFF8
  6343                           tblptrh	equ	0xFF7
  6344                           tblptrl	equ	0xFF6
  6345                           tablat	equ	0xFF5
  6346                           prodh	equ	0xFF4
  6347                           prodl	equ	0xFF3
  6348                           intcon	equ	0xFF2
  6349                           intcon2	equ	0xFF1
  6350                           postinc0	equ	0xFEE
  6351                           wreg	equ	0xFE8
  6352                           postdec1	equ	0xFE5
  6353                           fsr1l	equ	0xFE1
  6354                           indf2	equ	0xFDF
  6355                           postinc2	equ	0xFDE
  6356                           postdec2	equ	0xFDD
  6357                           fsr2h	equ	0xFDA
  6358                           fsr2l	equ	0xFD9
  6359                           status	equ	0xFD8
  6360                           
  6361 ;; *************** function _Activate_Buzzer *****************
  6362 ;; Defined at:
  6363 ;;		line 189 in file "Lab10.c"
  6364 ;; Parameters:    Size  Location     Type
  6365 ;;		None
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;		None
  6368 ;; Return value:  Size  Location     Type
  6369 ;;		None               void
  6370 ;; Registers used:
  6371 ;;		wreg, status,2
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6381 ;;Total ram usage:        0 bytes
  6382 ;; Hardware stack levels used:    1
  6383 ;; Hardware stack levels required when called:    3
  6384 ;; This function calls:
  6385 ;;		Nothing
  6386 ;; This function is called by:
  6387 ;;		_main
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391                           	psect	text33
  6392  0014D0                     __ptext33:
  6393                           	opt stack 0
  6394  0014D0                     _Activate_Buzzer:
  6395                           	opt stack 27
  6396                           
  6397                           ;Lab10.c: 191: PR2 = 0b11111001;
  6398                           
  6399                           ;incstack = 0
  6400  0014D0  0EF9               	movlw	249
  6401  0014D2  6ECB               	movwf	4043,c	;volatile
  6402                           
  6403                           ;Lab10.c: 192: T2CON = 0b00000101 ;
  6404  0014D4  0E05               	movlw	5
  6405  0014D6  6ECA               	movwf	4042,c	;volatile
  6406                           
  6407                           ;Lab10.c: 193: CCPR2L = 0b01001010 ;
  6408  0014D8  0E4A               	movlw	74
  6409  0014DA  6EBB               	movwf	4027,c	;volatile
  6410                           
  6411                           ;Lab10.c: 194: CCP2CON = 0b00111100 ;
  6412  0014DC  0E3C               	movlw	60
  6413  0014DE  6EBA               	movwf	4026,c	;volatile
  6414  0014E0  0012               	return		;funcret
  6415  0014E2                     __end_of_Activate_Buzzer:
  6416                           	opt stack 0
  6417                           tblptru	equ	0xFF8
  6418                           tblptrh	equ	0xFF7
  6419                           tblptrl	equ	0xFF6
  6420                           tablat	equ	0xFF5
  6421                           prodh	equ	0xFF4
  6422                           prodl	equ	0xFF3
  6423                           intcon	equ	0xFF2
  6424                           intcon2	equ	0xFF1
  6425                           postinc0	equ	0xFEE
  6426                           wreg	equ	0xFE8
  6427                           postdec1	equ	0xFE5
  6428                           fsr1l	equ	0xFE1
  6429                           indf2	equ	0xFDF
  6430                           postinc2	equ	0xFDE
  6431                           postdec2	equ	0xFDD
  6432                           fsr2h	equ	0xFDA
  6433                           fsr2l	equ	0xFD9
  6434                           status	equ	0xFD8
  6435                           
  6436 ;; *************** function _chkisr *****************
  6437 ;; Defined at:
  6438 ;;		line 75 in file "Lab10.c"
  6439 ;; Parameters:    Size  Location     Type
  6440 ;;		None
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;		None
  6443 ;; Return value:  Size  Location     Type
  6444 ;;		None               void
  6445 ;; Registers used:
  6446 ;;		wreg, status,2, status,0, cstack
  6447 ;; Tracked objects:
  6448 ;;		On entry : 0/0
  6449 ;;		On exit  : 0/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6454 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6455 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6456 ;;Total ram usage:       14 bytes
  6457 ;; Hardware stack levels used:    1
  6458 ;; Hardware stack levels required when called:    2
  6459 ;; This function calls:
  6460 ;;		_INT0_isr
  6461 ;;		_TIMER1_isr
  6462 ;; This function is called by:
  6463 ;;		Interrupt level 2
  6464 ;; This function uses a non-reentrant model
  6465 ;;
  6466                           
  6467                           	psect	intcode
  6468  000008                     __pintcode:
  6469                           	opt stack 0
  6470  000008                     _chkisr:
  6471                           	opt stack 20
  6472                           
  6473                           ;incstack = 0
  6474  000008  CFFA F003          	movff	pclath,??_chkisr
  6475  00000C  CFFB F004          	movff	pclatu,??_chkisr+1
  6476  000010  CFE9 F005          	movff	fsr0l,??_chkisr+2
  6477  000014  ED39  F008         	call	int_func,f	;refresh shadow registers
  6478                           pclatu	equ	0xFFB
  6479                           pclath	equ	0xFFA
  6480                           tblptru	equ	0xFF8
  6481                           tblptrh	equ	0xFF7
  6482                           tblptrl	equ	0xFF6
  6483                           tablat	equ	0xFF5
  6484                           prodh	equ	0xFF4
  6485                           prodl	equ	0xFF3
  6486                           intcon	equ	0xFF2
  6487                           intcon2	equ	0xFF1
  6488                           postinc0	equ	0xFEE
  6489                           fsr0l	equ	0xFE9
  6490                           wreg	equ	0xFE8
  6491                           postdec1	equ	0xFE5
  6492                           fsr1l	equ	0xFE1
  6493                           indf2	equ	0xFDF
  6494                           postinc2	equ	0xFDE
  6495                           postdec2	equ	0xFDD
  6496                           fsr2h	equ	0xFDA
  6497                           fsr2l	equ	0xFD9
  6498                           status	equ	0xFD8
  6499                           
  6500                           	psect	intcode_body
  6501  001072                     __pintcode_body:
  6502                           	opt stack 20
  6503  001072                     int_func:
  6504                           	opt stack 20
  6505  001072  0006               	pop		; remove dummy address from shadow register refresh
  6506  001074  CFEA F006          	movff	fsr0h,??_chkisr+3
  6507  001078  CFE1 F007          	movff	fsr1l,??_chkisr+4
  6508  00107C  CFE2 F008          	movff	fsr1h,??_chkisr+5
  6509  001080  CFD9 F009          	movff	fsr2l,??_chkisr+6
  6510  001084  CFDA F00A          	movff	fsr2h,??_chkisr+7
  6511  001088  CFF3 F00B          	movff	prodl,??_chkisr+8
  6512  00108C  CFF4 F00C          	movff	prodh,??_chkisr+9
  6513  001090  CFF6 F00D          	movff	tblptrl,??_chkisr+10
  6514  001094  CFF7 F00E          	movff	tblptrh,??_chkisr+11
  6515  001098  CFF8 F00F          	movff	tblptru,??_chkisr+12
  6516  00109C  CFF5 F010          	movff	tablat,??_chkisr+13
  6517                           
  6518                           ;Lab10.c: 77: if (PIR1bits.TMR1IF == 1) TIMER1_isr();
  6519  0010A0  A09E               	btfss	3998,0,c	;volatile
  6520  0010A2  D003               	goto	i2l1829
  6521  0010A4  EC88  F00A         	call	_TIMER1_isr	;wreg free
  6522  0010A8  D000               	goto	i2l1829
  6523  0010AA                     i2l1829:
  6524                           
  6525                           ;Lab10.c: 78: if (INTCONbits.INT0IF == 1) INT0_isr();
  6526  0010AA  A2F2               	btfss	intcon,1,c	;volatile
  6527  0010AC  D003               	goto	i2l116
  6528  0010AE  ECFD  F002         	call	_INT0_isr	;wreg free
  6529  0010B2  D000               	goto	i2l116
  6530  0010B4                     i2l116:
  6531  0010B4  C010  FFF5         	movff	??_chkisr+13,tablat
  6532  0010B8  C00F  FFF8         	movff	??_chkisr+12,tblptru
  6533  0010BC  C00E  FFF7         	movff	??_chkisr+11,tblptrh
  6534  0010C0  C00D  FFF6         	movff	??_chkisr+10,tblptrl
  6535  0010C4  C00C  FFF4         	movff	??_chkisr+9,prodh
  6536  0010C8  C00B  FFF3         	movff	??_chkisr+8,prodl
  6537  0010CC  C00A  FFDA         	movff	??_chkisr+7,fsr2h
  6538  0010D0  C009  FFD9         	movff	??_chkisr+6,fsr2l
  6539  0010D4  C008  FFE2         	movff	??_chkisr+5,fsr1h
  6540  0010D8  C007  FFE1         	movff	??_chkisr+4,fsr1l
  6541  0010DC  C006  FFEA         	movff	??_chkisr+3,fsr0h
  6542  0010E0  C005  FFE9         	movff	??_chkisr+2,fsr0l
  6543  0010E4  C004  FFFB         	movff	??_chkisr+1,pclatu
  6544  0010E8  C003  FFFA         	movff	??_chkisr,pclath
  6545  0010EC  0011               	retfie		f
  6546  0010EE                     __end_of_chkisr:
  6547                           	opt stack 0
  6548                           pclatu	equ	0xFFB
  6549                           pclath	equ	0xFFA
  6550                           tblptru	equ	0xFF8
  6551                           tblptrh	equ	0xFF7
  6552                           tblptrl	equ	0xFF6
  6553                           tablat	equ	0xFF5
  6554                           prodh	equ	0xFF4
  6555                           prodl	equ	0xFF3
  6556                           intcon	equ	0xFF2
  6557                           intcon2	equ	0xFF1
  6558                           postinc0	equ	0xFEE
  6559                           fsr0h	equ	0xFEA
  6560                           fsr0l	equ	0xFE9
  6561                           wreg	equ	0xFE8
  6562                           postdec1	equ	0xFE5
  6563                           fsr1h	equ	0xFE2
  6564                           fsr1l	equ	0xFE1
  6565                           indf2	equ	0xFDF
  6566                           postinc2	equ	0xFDE
  6567                           postdec2	equ	0xFDD
  6568                           fsr2h	equ	0xFDA
  6569                           fsr2l	equ	0xFD9
  6570                           status	equ	0xFD8
  6571                           
  6572 ;; *************** function _TIMER1_isr *****************
  6573 ;; Defined at:
  6574 ;;		line 81 in file "Lab10.c"
  6575 ;; Parameters:    Size  Location     Type
  6576 ;;		None
  6577 ;; Auto vars:     Size  Location     Type
  6578 ;;		None
  6579 ;; Return value:  Size  Location     Type
  6580 ;;		None               void
  6581 ;; Registers used:
  6582 ;;		wreg, status,2
  6583 ;; Tracked objects:
  6584 ;;		On entry : 0/0
  6585 ;;		On exit  : 0/0
  6586 ;;		Unchanged: 0/0
  6587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6592 ;;Total ram usage:        0 bytes
  6593 ;; Hardware stack levels used:    1
  6594 ;; This function calls:
  6595 ;;		Nothing
  6596 ;; This function is called by:
  6597 ;;		_chkisr
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601                           	psect	text35
  6602  001510                     __ptext35:
  6603                           	opt stack 0
  6604  001510                     _TIMER1_isr:
  6605                           	opt stack 21
  6606                           
  6607                           ;Lab10.c: 83: Nec_state = 0;
  6608                           
  6609                           ;incstack = 0
  6610  001510  0E00               	movlw	0
  6611  001512  6E6A               	movwf	_Nec_state,c
  6612                           
  6613                           ;Lab10.c: 84: INTCON2bits.INTEDG0 = 0;
  6614  001514  9CF1               	bcf	intcon2,6,c	;volatile
  6615                           
  6616                           ;Lab10.c: 85: T1CONbits.TMR1ON = 0;
  6617  001516  90CD               	bcf	4045,0,c	;volatile
  6618                           
  6619                           ;Lab10.c: 86: PIR1bits.TMR1IF = 0;
  6620  001518  909E               	bcf	3998,0,c	;volatile
  6621  00151A  0012               	return		;funcret
  6622  00151C                     __end_of_TIMER1_isr:
  6623                           	opt stack 0
  6624                           pclatu	equ	0xFFB
  6625                           pclath	equ	0xFFA
  6626                           tblptru	equ	0xFF8
  6627                           tblptrh	equ	0xFF7
  6628                           tblptrl	equ	0xFF6
  6629                           tablat	equ	0xFF5
  6630                           prodh	equ	0xFF4
  6631                           prodl	equ	0xFF3
  6632                           intcon	equ	0xFF2
  6633                           intcon2	equ	0xFF1
  6634                           postinc0	equ	0xFEE
  6635                           fsr0h	equ	0xFEA
  6636                           fsr0l	equ	0xFE9
  6637                           wreg	equ	0xFE8
  6638                           postdec1	equ	0xFE5
  6639                           fsr1h	equ	0xFE2
  6640                           fsr1l	equ	0xFE1
  6641                           indf2	equ	0xFDF
  6642                           postinc2	equ	0xFDE
  6643                           postdec2	equ	0xFDD
  6644                           fsr2h	equ	0xFDA
  6645                           fsr2l	equ	0xFD9
  6646                           status	equ	0xFD8
  6647                           
  6648 ;; *************** function _INT0_isr *****************
  6649 ;; Defined at:
  6650 ;;		line 95 in file "Lab10.c"
  6651 ;; Parameters:    Size  Location     Type
  6652 ;;		None
  6653 ;; Auto vars:     Size  Location     Type
  6654 ;;		None
  6655 ;; Return value:  Size  Location     Type
  6656 ;;		None               void
  6657 ;; Registers used:
  6658 ;;		wreg, status,2, status,0, cstack
  6659 ;; Tracked objects:
  6660 ;;		On entry : 0/0
  6661 ;;		On exit  : 0/0
  6662 ;;		Unchanged: 0/0
  6663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6666 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6667 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6668 ;;Total ram usage:        2 bytes
  6669 ;; Hardware stack levels used:    1
  6670 ;; Hardware stack levels required when called:    1
  6671 ;; This function calls:
  6672 ;;		_force_nec_state0
  6673 ;; This function is called by:
  6674 ;;		_chkisr
  6675 ;; This function uses a non-reentrant model
  6676 ;;
  6677                           
  6678                           	psect	text36
  6679  0005FA                     __ptext36:
  6680                           	opt stack 0
  6681  0005FA                     _INT0_isr:
  6682                           	opt stack 20
  6683                           
  6684                           ;Lab10.c: 97: INTCONbits.INT0IF = 0;
  6685                           
  6686                           ;incstack = 0
  6687  0005FA  92F2               	bcf	intcon,1,c	;volatile
  6688                           
  6689                           ;Lab10.c: 98: if (Nec_state != 0)
  6690  0005FC  506A               	movf	_Nec_state,w,c
  6691  0005FE  B4D8               	btfsc	status,2,c
  6692  000600  D09A               	goto	i2l1633
  6693                           
  6694                           ;Lab10.c: 99: {
  6695                           ;Lab10.c: 100: Time_Elapsed = (TMR1H << 8) | TMR1L;
  6696  000602  50CE               	movf	4046,w,c	;volatile
  6697  000604  CFCF F001          	movff	4047,??_INT0_isr	;volatile
  6698  000608  6A02               	clrf	(??_INT0_isr+1)& (0+255),c
  6699  00060A  C001  F002         	movff	??_INT0_isr,??_INT0_isr+1
  6700  00060E  6A01               	clrf	??_INT0_isr,c
  6701  000610  1001               	iorwf	??_INT0_isr,w,c
  6702  000612  6E61               	movwf	_Time_Elapsed,c
  6703  000614  5002               	movf	??_INT0_isr+1,w,c
  6704  000616  6E62               	movwf	_Time_Elapsed+1,c
  6705                           
  6706                           ;Lab10.c: 101: TMR1H = 0;
  6707  000618  0E00               	movlw	0
  6708  00061A  6ECF               	movwf	4047,c	;volatile
  6709                           
  6710                           ;Lab10.c: 102: TMR1L = 0;
  6711  00061C  0E00               	movlw	0
  6712  00061E  6ECE               	movwf	4046,c	;volatile
  6713                           
  6714                           ;Lab10.c: 103: }
  6715                           ;Lab10.c: 105: switch(Nec_state)
  6716  000620  D08A               	goto	i2l1633
  6717  000622                     i2l1567:
  6718                           
  6719                           ;Lab10.c: 108: {
  6720                           ;Lab10.c: 110: TMR1H = 0;
  6721  000622  0E00               	movlw	0
  6722  000624  6ECF               	movwf	4047,c	;volatile
  6723                           
  6724                           ;Lab10.c: 111: TMR1L = 0;
  6725  000626  0E00               	movlw	0
  6726  000628  6ECE               	movwf	4046,c	;volatile
  6727                           
  6728                           ;Lab10.c: 112: PIR1bits.TMR1IF = 0;
  6729  00062A  909E               	bcf	3998,0,c	;volatile
  6730                           
  6731                           ;Lab10.c: 113: T1CON= 0x90;
  6732  00062C  0E90               	movlw	144
  6733  00062E  6ECD               	movwf	4045,c	;volatile
  6734                           
  6735                           ;Lab10.c: 114: T1CONbits.TMR1ON = 1;
  6736  000630  80CD               	bsf	4045,0,c	;volatile
  6737                           
  6738                           ;Lab10.c: 115: bit_count = 0;
  6739  000632  0E00               	movlw	0
  6740  000634  6E6C               	movwf	_bit_count,c
  6741                           
  6742                           ;Lab10.c: 116: Nec_code = 0;
  6743  000636  0E00               	movlw	0
  6744  000638  6E5D               	movwf	_Nec_code,c
  6745  00063A  0E00               	movlw	0
  6746  00063C  6E5E               	movwf	_Nec_code+1,c
  6747  00063E  0E00               	movlw	0
  6748  000640  6E5F               	movwf	_Nec_code+2,c
  6749  000642  0E00               	movlw	0
  6750  000644  6E60               	movwf	_Nec_code+3,c
  6751                           
  6752                           ;Lab10.c: 117: Nec_state = 1;
  6753  000646  0E01               	movlw	1
  6754  000648  6E6A               	movwf	_Nec_state,c
  6755  00064A  D073               	goto	i2l1627
  6756                           
  6757                           ;Lab10.c: 119: return;
  6758                           
  6759                           ;Lab10.c: 118: INTCON2bits.INTEDG0 = 1;
  6760  00064C  D085               	goto	i2l128
  6761  00064E                     i2l1577:
  6762                           
  6763                           ;Lab10.c: 123: {
  6764                           ;Lab10.c: 124: if ((Time_Elapsed < 9500) && (Time_Elapsed > 8500)){
  6765  00064E  0E1C               	movlw	28
  6766  000650  5C61               	subwf	_Time_Elapsed,w,c
  6767  000652  0E25               	movlw	37
  6768  000654  5862               	subwfb	_Time_Elapsed+1,w,c
  6769  000656  B0D8               	btfsc	status,0,c
  6770  000658  D009               	goto	i2l1583
  6771  00065A  0E35               	movlw	53
  6772  00065C  5C61               	subwf	_Time_Elapsed,w,c
  6773  00065E  0E21               	movlw	33
  6774  000660  5862               	subwfb	_Time_Elapsed+1,w,c
  6775  000662  A0D8               	btfss	status,0,c
  6776  000664  D003               	goto	i2l1583
  6777                           
  6778                           ;Lab10.c: 125: Nec_state = 2;
  6779  000666  0E02               	movlw	2
  6780  000668  6E6A               	movwf	_Nec_state,c
  6781                           
  6782                           ;Lab10.c: 126: }
  6783  00066A  D02A               	goto	i2l1609
  6784  00066C                     i2l1583:
  6785                           
  6786                           ;Lab10.c: 127: else {
  6787                           ;Lab10.c: 128: force_nec_state0();
  6788  00066C  EC92  F00A         	call	_force_nec_state0	;wreg free
  6789  000670  D027               	goto	i2l1609
  6790  000672  D026               	goto	i2l1609
  6791                           
  6792                           ;Lab10.c: 131: return;
  6793                           
  6794                           ;Lab10.c: 129: }
  6795                           ;Lab10.c: 130: INTCON2bits.INTEDG0 = 0;
  6796  000674  D071               	goto	i2l128
  6797  000676                     i2l1589:
  6798                           
  6799                           ;Lab10.c: 135: {
  6800                           ;Lab10.c: 136: if ((Time_Elapsed < 5000) && (Time_Elapsed > 4000)){
  6801  000676  0E88               	movlw	136
  6802  000678  5C61               	subwf	_Time_Elapsed,w,c
  6803  00067A  0E13               	movlw	19
  6804  00067C  5862               	subwfb	_Time_Elapsed+1,w,c
  6805  00067E  B0D8               	btfsc	status,0,c
  6806  000680  D009               	goto	i2l1595
  6807  000682  0EA1               	movlw	161
  6808  000684  5C61               	subwf	_Time_Elapsed,w,c
  6809  000686  0E0F               	movlw	15
  6810  000688  5862               	subwfb	_Time_Elapsed+1,w,c
  6811  00068A  A0D8               	btfss	status,0,c
  6812  00068C  D003               	goto	i2l1595
  6813  00068E                     
  6814                           ;Lab10.c: 137: Nec_state = 3;
  6815  00068E  0E03               	movlw	3
  6816  000690  6E6A               	movwf	_Nec_state,c
  6817                           
  6818                           ;Lab10.c: 138: }
  6819  000692  D04F               	goto	i2l1627
  6820  000694                     i2l1595:
  6821                           
  6822                           ;Lab10.c: 139: else {
  6823                           ;Lab10.c: 140: force_nec_state0();
  6824  000694  EC92  F00A         	call	_force_nec_state0	;wreg free
  6825  000698  D04C               	goto	i2l1627
  6826  00069A  D04B               	goto	i2l1627
  6827                           
  6828                           ;Lab10.c: 143: return;
  6829                           
  6830                           ;Lab10.c: 141: }
  6831                           ;Lab10.c: 142: INTCON2bits.INTEDG0 = 1;
  6832  00069C  D05D               	goto	i2l128
  6833  00069E                     i2l1601:
  6834                           
  6835                           ;Lab10.c: 147: {
  6836                           ;Lab10.c: 148: if ((Time_Elapsed < 700) && (Time_Elapsed > 400)){
  6837  00069E  0EBC               	movlw	188
  6838  0006A0  5C61               	subwf	_Time_Elapsed,w,c
  6839  0006A2  0E02               	movlw	2
  6840  0006A4  5862               	subwfb	_Time_Elapsed+1,w,c
  6841  0006A6  B0D8               	btfsc	status,0,c
  6842  0006A8  D008               	goto	i2l1607
  6843  0006AA  0E91               	movlw	145
  6844  0006AC  5C61               	subwf	_Time_Elapsed,w,c
  6845  0006AE  0E01               	movlw	1
  6846  0006B0  5862               	subwfb	_Time_Elapsed+1,w,c
  6847  0006B2  A0D8               	btfss	status,0,c
  6848  0006B4  D002               	goto	i2l1607
  6849                           
  6850                           ;Lab10.c: 149: Nec_state = 4;
  6851  0006B6  0E04               	movlw	4
  6852  0006B8  D7D7               	goto	L3
  6853  0006BA                     i2l1607:
  6854                           
  6855                           ;Lab10.c: 151: else {
  6856                           ;Lab10.c: 152: force_nec_state0();
  6857  0006BA  EC92  F00A         	call	_force_nec_state0	;wreg free
  6858  0006BE  D000               	goto	i2l1609
  6859  0006C0                     i2l1609:
  6860                           
  6861                           ;Lab10.c: 153: }
  6862                           ;Lab10.c: 154: INTCON2bits.INTEDG0 = 0;
  6863  0006C0  9CF1               	bcf	intcon2,6,c	;volatile
  6864                           
  6865                           ;Lab10.c: 155: return;
  6866  0006C2  D04A               	goto	i2l128
  6867  0006C4                     i2l1613:
  6868                           
  6869                           ;Lab10.c: 159: {
  6870                           ;Lab10.c: 160: if ((Time_Elapsed < 1800) && (Time_Elapsed > 400)){
  6871  0006C4  0E08               	movlw	8
  6872  0006C6  5C61               	subwf	_Time_Elapsed,w,c
  6873  0006C8  0E07               	movlw	7
  6874  0006CA  5862               	subwfb	_Time_Elapsed+1,w,c
  6875  0006CC  B0D8               	btfsc	status,0,c
  6876  0006CE  D02E               	goto	i2l1625
  6877  0006D0  0E91               	movlw	145
  6878  0006D2  5C61               	subwf	_Time_Elapsed,w,c
  6879  0006D4  0E01               	movlw	1
  6880  0006D6  5862               	subwfb	_Time_Elapsed+1,w,c
  6881  0006D8  A0D8               	btfss	status,0,c
  6882  0006DA  D028               	goto	i2l1625
  6883                           
  6884                           ;Lab10.c: 161: Nec_code = Nec_code << 1;
  6885  0006DC  90D8               	bcf	status,0,c
  6886  0006DE  345D               	rlcf	_Nec_code,w,c
  6887  0006E0  6E5D               	movwf	_Nec_code,c
  6888  0006E2  345E               	rlcf	_Nec_code+1,w,c
  6889  0006E4  6E5E               	movwf	_Nec_code+1,c
  6890  0006E6  345F               	rlcf	_Nec_code+2,w,c
  6891  0006E8  6E5F               	movwf	_Nec_code+2,c
  6892  0006EA  3460               	rlcf	_Nec_code+3,w,c
  6893  0006EC  6E60               	movwf	_Nec_code+3,c
  6894                           
  6895                           ;Lab10.c: 163: if (Time_Elapsed > 1000){
  6896  0006EE  0EE9               	movlw	233
  6897  0006F0  5C61               	subwf	_Time_Elapsed,w,c
  6898  0006F2  0E03               	movlw	3
  6899  0006F4  5862               	subwfb	_Time_Elapsed+1,w,c
  6900  0006F6  A0D8               	btfss	status,0,c
  6901  0006F8  D00C               	goto	i2l140
  6902                           
  6903                           ;Lab10.c: 164: Nec_code = Nec_code + 1;
  6904  0006FA  0E01               	movlw	1
  6905  0006FC  245D               	addwf	_Nec_code,w,c
  6906  0006FE  6E5D               	movwf	_Nec_code,c
  6907  000700  0E00               	movlw	0
  6908  000702  205E               	addwfc	_Nec_code+1,w,c
  6909  000704  6E5E               	movwf	_Nec_code+1,c
  6910  000706  0E00               	movlw	0
  6911  000708  205F               	addwfc	_Nec_code+2,w,c
  6912  00070A  6E5F               	movwf	_Nec_code+2,c
  6913  00070C  0E00               	movlw	0
  6914  00070E  2060               	addwfc	_Nec_code+3,w,c
  6915  000710  6E60               	movwf	_Nec_code+3,c
  6916  000712                     i2l140:
  6917                           
  6918                           ;Lab10.c: 165: }
  6919                           ;Lab10.c: 167: bit_count = bit_count + 1;
  6920  000712  286C               	incf	_bit_count,w,c
  6921  000714  6E6C               	movwf	_bit_count,c
  6922                           
  6923                           ;Lab10.c: 169: if (bit_count > 31){
  6924  000716  0E1F               	movlw	31
  6925  000718  646C               	cpfsgt	_bit_count,c
  6926  00071A  D7B9               	goto	L4
  6927                           
  6928                           ;Lab10.c: 170: nec_ok = 1;
  6929  00071C  0E00               	movlw	0
  6930  00071E  6E66               	movwf	_nec_ok+1,c
  6931  000720  0E01               	movlw	1
  6932  000722  6E65               	movwf	_nec_ok,c
  6933                           
  6934                           ;Lab10.c: 171: INTCONbits.INT0IE = 0;
  6935  000724  98F2               	bcf	intcon,4,c	;volatile
  6936                           
  6937                           ;Lab10.c: 172: Nec_state = 0;
  6938  000726  0E00               	movlw	0
  6939  000728  6E6A               	movwf	_Nec_state,c
  6940  00072A  D7B1               	goto	L4
  6941  00072C                     i2l1625:
  6942                           
  6943                           ;Lab10.c: 176: else {
  6944                           ;Lab10.c: 177: force_nec_state0();
  6945  00072C  EC92  F00A         	call	_force_nec_state0	;wreg free
  6946  000730  D000               	goto	i2l1627
  6947  000732                     i2l1627:
  6948                           
  6949                           ;Lab10.c: 178: }
  6950                           ;Lab10.c: 179: INTCON2bits.INTEDG0 = 1;
  6951  000732  8CF1               	bsf	intcon2,6,c	;volatile
  6952                           
  6953                           ;Lab10.c: 181: }
  6954                           ;Lab10.c: 182: }
  6955                           
  6956                           ;Lab10.c: 180: return;
  6957  000734  D011               	goto	i2l128
  6958  000736                     i2l1633:
  6959  000736  506A               	movf	_Nec_state,w,c
  6960                           
  6961                           ; Switch size 1, requested type "space"
  6962                           ; Number of cases is 5, Range of values is 0 to 4
  6963                           ; switch strategies available:
  6964                           ; Name         Instructions Cycles
  6965                           ; simple_byte           16     9 (average)
  6966                           ;	Chosen strategy is simple_byte
  6967  000738  0A00               	xorlw	0	; case 0
  6968  00073A  B4D8               	btfsc	status,2,c
  6969  00073C  D772               	goto	i2l1567
  6970  00073E  0A01               	xorlw	1	; case 1
  6971  000740  B4D8               	btfsc	status,2,c
  6972  000742  D785               	goto	i2l1577
  6973  000744  0A03               	xorlw	3	; case 2
  6974  000746  B4D8               	btfsc	status,2,c
  6975  000748  D796               	goto	i2l1589
  6976  00074A  0A01               	xorlw	1	; case 3
  6977  00074C  B4D8               	btfsc	status,2,c
  6978  00074E  D7A7               	goto	i2l1601
  6979  000750  0A07               	xorlw	7	; case 4
  6980  000752  B4D8               	btfsc	status,2,c
  6981  000754  D7B7               	goto	i2l1613
  6982  000756  D000               	goto	i2l128
  6983  000758                     i2l128:
  6984  000758  0012               	return		;funcret
  6985  00075A                     __end_of_INT0_isr:
  6986                           	opt stack 0
  6987                           pclatu	equ	0xFFB
  6988                           pclath	equ	0xFFA
  6989                           tblptru	equ	0xFF8
  6990                           tblptrh	equ	0xFF7
  6991                           tblptrl	equ	0xFF6
  6992                           tablat	equ	0xFF5
  6993                           prodh	equ	0xFF4
  6994                           prodl	equ	0xFF3
  6995                           intcon	equ	0xFF2
  6996                           intcon2	equ	0xFF1
  6997                           postinc0	equ	0xFEE
  6998                           fsr0h	equ	0xFEA
  6999                           fsr0l	equ	0xFE9
  7000                           wreg	equ	0xFE8
  7001                           postdec1	equ	0xFE5
  7002                           fsr1h	equ	0xFE2
  7003                           fsr1l	equ	0xFE1
  7004                           indf2	equ	0xFDF
  7005                           postinc2	equ	0xFDE
  7006                           postdec2	equ	0xFDD
  7007                           fsr2h	equ	0xFDA
  7008                           fsr2l	equ	0xFD9
  7009                           status	equ	0xFD8
  7010                           
  7011 ;; *************** function _force_nec_state0 *****************
  7012 ;; Defined at:
  7013 ;;		line 89 in file "Lab10.c"
  7014 ;; Parameters:    Size  Location     Type
  7015 ;;		None
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;		None
  7018 ;; Return value:  Size  Location     Type
  7019 ;;		None               void
  7020 ;; Registers used:
  7021 ;;		wreg, status,2
  7022 ;; Tracked objects:
  7023 ;;		On entry : 0/0
  7024 ;;		On exit  : 0/0
  7025 ;;		Unchanged: 0/0
  7026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7031 ;;Total ram usage:        0 bytes
  7032 ;; Hardware stack levels used:    1
  7033 ;; This function calls:
  7034 ;;		Nothing
  7035 ;; This function is called by:
  7036 ;;		_INT0_isr
  7037 ;; This function uses a non-reentrant model
  7038 ;;
  7039                           
  7040                           	psect	text37
  7041  001524                     __ptext37:
  7042                           	opt stack 0
  7043  001524                     _force_nec_state0:
  7044                           	opt stack 20
  7045                           
  7046                           ;Lab10.c: 91: Nec_state=0;
  7047                           
  7048                           ;incstack = 0
  7049  001524  0E00               	movlw	0
  7050  001526  6E6A               	movwf	_Nec_state,c
  7051                           
  7052                           ;Lab10.c: 92: T1CONbits.TMR1ON = 0;
  7053  001528  90CD               	bcf	4045,0,c	;volatile
  7054  00152A  0012               	return		;funcret
  7055  00152C                     __end_of_force_nec_state0:
  7056                           	opt stack 0
  7057                           pclatu	equ	0xFFB
  7058                           pclath	equ	0xFFA
  7059                           tblptru	equ	0xFF8
  7060                           tblptrh	equ	0xFF7
  7061                           tblptrl	equ	0xFF6
  7062                           tablat	equ	0xFF5
  7063                           prodh	equ	0xFF4
  7064                           prodl	equ	0xFF3
  7065                           intcon	equ	0xFF2
  7066                           intcon2	equ	0xFF1
  7067                           postinc0	equ	0xFEE
  7068                           fsr0h	equ	0xFEA
  7069                           fsr0l	equ	0xFE9
  7070                           wreg	equ	0xFE8
  7071                           postdec1	equ	0xFE5
  7072                           fsr1h	equ	0xFE2
  7073                           fsr1l	equ	0xFE1
  7074                           indf2	equ	0xFDF
  7075                           postinc2	equ	0xFDE
  7076                           postdec2	equ	0xFDD
  7077                           fsr2h	equ	0xFDA
  7078                           fsr2l	equ	0xFD9
  7079                           status	equ	0xFD8
  7080                           pclatu	equ	0xFFB
  7081                           pclath	equ	0xFFA
  7082                           tblptru	equ	0xFF8
  7083                           tblptrh	equ	0xFF7
  7084                           tblptrl	equ	0xFF6
  7085                           tablat	equ	0xFF5
  7086                           prodh	equ	0xFF4
  7087                           prodl	equ	0xFF3
  7088                           intcon	equ	0xFF2
  7089                           intcon2	equ	0xFF1
  7090                           postinc0	equ	0xFEE
  7091                           fsr0h	equ	0xFEA
  7092                           fsr0l	equ	0xFE9
  7093                           wreg	equ	0xFE8
  7094                           postdec1	equ	0xFE5
  7095                           fsr1h	equ	0xFE2
  7096                           fsr1l	equ	0xFE1
  7097                           indf2	equ	0xFDF
  7098                           postinc2	equ	0xFDE
  7099                           postdec2	equ	0xFDD
  7100                           fsr2h	equ	0xFDA
  7101                           fsr2l	equ	0xFD9
  7102                           status	equ	0xFD8
  7103                           
  7104                           	psect	rparam
  7105  0000                     pclatu	equ	0xFFB
  7106                           pclath	equ	0xFFA
  7107                           tblptru	equ	0xFF8
  7108                           tblptrh	equ	0xFF7
  7109                           tblptrl	equ	0xFF6
  7110                           tablat	equ	0xFF5
  7111                           prodh	equ	0xFF4
  7112                           prodl	equ	0xFF3
  7113                           intcon	equ	0xFF2
  7114                           intcon2	equ	0xFF1
  7115                           postinc0	equ	0xFEE
  7116                           fsr0h	equ	0xFEA
  7117                           fsr0l	equ	0xFE9
  7118                           wreg	equ	0xFE8
  7119                           postdec1	equ	0xFE5
  7120                           fsr1h	equ	0xFE2
  7121                           fsr1l	equ	0xFE1
  7122                           indf2	equ	0xFDF
  7123                           postinc2	equ	0xFDE
  7124                           postdec2	equ	0xFDD
  7125                           fsr2h	equ	0xFDA
  7126                           fsr2l	equ	0xFD9
  7127                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    507
    Data        232
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     70     111
    BANK0           128      7     122
    BANK1           256      0     126
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    nbr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 84
		 -> NULL(NULL[0]), buffer(BANK0[31]), txt1(BANK1[84]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 84
		 -> NULL(NULL[0]), buffer(BANK0[31]), txt1(BANK1[84]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_3(CODE[8]), STR_2(CODE[22]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 31
		 -> NULL(NULL[0]), buffer(BANK0[31]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 31
		 -> NULL(NULL[0]), buffer(BANK0[31]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_1(CODE[22]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    drawtext@_text	PTR unsigned char  size(2) Largest target is 84
		 -> NULL(NULL[0]), buffer(BANK0[31]), txt1(BANK1[84]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 31
		 -> NULL(NULL[0]), buffer(BANK0[31]), 

    txt	PTR unsigned char  size(2) Largest target is 31
		 -> NULL(NULL[0]), buffer(BANK0[31]), 


Critical Paths under _main in COMRAM

    _main->_drawtext
    _main->_fillCircle
    _printf->___lldiv
    _init_UART->_OpenUSART
    _fillCircle->_fillCircleHelper
    _fillCircleHelper->_drawFastVLine
    _drawCircle->_drawPixel
    _Initialize_Screen->_drawtext
    _fillScreen->_fillRectangle
    _fillRectangle->_setAddrWindow
    _drawtext->_drawChar
    _drawChar->_fillRect
    _fillRect->_drawFastVLine
    _drawFastVLine->_setAddrWindow
    _drawPixel->_setAddrWindow
    _setAddrWindow->_write_command
    _setAddrWindow->_write_data
    _Rcmd3->_delay_ms
    _Rcmd2red->_write_command
    _Rcmd2red->_write_data
    _Rcmd1->_delay_ms
    _write_data->_spiwrite
    _write_command->_spiwrite
    _LCD_Reset->_delay_ms
    _delay_ms->___wmul

Critical Paths under _chkisr in COMRAM

    _chkisr->_INT0_isr

Critical Paths under _main in BANK0

    _main->_drawtext
    _Initialize_Screen->_drawtext

Critical Paths under _chkisr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _chkisr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _chkisr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _chkisr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _chkisr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _chkisr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _chkisr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _chkisr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _chkisr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _chkisr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _chkisr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _chkisr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _chkisr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _chkisr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _chkisr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _chkisr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   51039
                                             66 COMRAM     4     4      0
                    _Activate_Buzzer
                  _Deactivate_Buzzer
                  _Initialize_Screen
                       _Wait_One_Sec
                         _drawCircle
                           _drawtext
                         _fillCircle
                          _init_UART
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              34    26      8    2174
                                             29 COMRAM    25    17      8
                            ___lldiv
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                             16 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     268
                                             16 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     273
                                             16 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _fillCircle                                           8     0      8    8344
                                             58 COMRAM     8     0      8
                      _drawFastVLine
                   _fillCircleHelper
 ---------------------------------------------------------------------------------
 (2) _fillCircleHelper                                    24    12     12    4703
                                             34 COMRAM    24    12     12
                      _drawFastVLine
 ---------------------------------------------------------------------------------
 (1) _drawCircle                                          20    12      8    6484
                                             27 COMRAM    20    12      8
                          _drawPixel
 ---------------------------------------------------------------------------------
 (1) _Wait_One_Sec                                         2     2      0      46
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Initialize_Screen                                    0     0      0   20901
                          _LCD_Reset
            _TFT_GreenTab_Initialize
                           _drawtext
                         _fillScreen
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4     287
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _fillScreen                                           2     0      2    2192
                                             35 COMRAM     2     0      2
                      _fillRectangle
 ---------------------------------------------------------------------------------
 (3) _fillRectangle                                       12     7      5    2096
                                             23 COMRAM    12     7      5
                      _setAddrWindow
                           _spiwrite
 ---------------------------------------------------------------------------------
 (1) _drawtext                                            17     9      8   12526
                                             56 COMRAM    10     2      8
                                              0 BANK0      7     7      0
                           _drawChar
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     195
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _drawChar                                            11     4      7   10644
                                             45 COMRAM    11     4      7
                             ___wmul
                          _drawPixel
                           _fillRect
 ---------------------------------------------------------------------------------
 (3) _fillRect                                            11     6      5    3876
                                             34 COMRAM    11     6      5
                      _drawFastVLine
 ---------------------------------------------------------------------------------
 (3) _drawFastVLine                                       11     7      4    3102
                                             23 COMRAM    11     7      4
                      _setAddrWindow
                           _spiwrite
 ---------------------------------------------------------------------------------
 (3) _drawPixel                                            4     1      3    4207
                                             23 COMRAM     4     1      3
                      _setAddrWindow
                         _write_data
 ---------------------------------------------------------------------------------
 (4) _setAddrWindow                                        4     1      3    1034
                                             19 COMRAM     4     1      3
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (2) _TFT_GreenTab_Initialize                              0     0      0    4104
                              _Rcmd1
                           _Rcmd2red
                              _Rcmd3
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd3                                                0     0      0    1922
                           _delay_ms
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd2red                                             0     0      0     130
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd1                                                0     0      0    1922
                           _delay_ms
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (5) _write_data                                           1     1      0      65
                                             18 COMRAM     1     1      0
                           _spiwrite
 ---------------------------------------------------------------------------------
 (5) _write_command                                        1     1      0      65
                                             18 COMRAM     1     1      0
                           _spiwrite
 ---------------------------------------------------------------------------------
 (4) _spiwrite                                             2     2      0      34
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Reset                                            0     0      0    1792
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             6     4      2    1792
                                             22 COMRAM     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     752
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Deactivate_Buzzer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Activate_Buzzer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _chkisr                                              14    14      0       0
                                              2 COMRAM    14    14      0
                           _INT0_isr
                         _TIMER1_isr
 ---------------------------------------------------------------------------------
 (10) _TIMER1_isr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _INT0_isr                                            2     2      0       0
                                              0 COMRAM     2     2      0
                   _force_nec_state0
 ---------------------------------------------------------------------------------
 (11) _force_nec_state0                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Activate_Buzzer
   _Deactivate_Buzzer
   _Initialize_Screen
     _LCD_Reset
       _delay_ms
         ___wmul
     _TFT_GreenTab_Initialize
       _Rcmd1
         _delay_ms
           ___wmul
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _Rcmd2red
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _Rcmd3
         _delay_ms
           ___wmul
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _write_command
         _spiwrite
       _write_data
         _spiwrite
     _drawtext
       _drawChar
         ___wmul
         _drawPixel
           _setAddrWindow
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _write_data
             _spiwrite
         _fillRect
           _drawFastVLine
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
       _strlen
     _fillScreen
       _fillRectangle
         _setAddrWindow
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _spiwrite
     _strcpy
   _Wait_One_Sec
   _drawCircle
     _drawPixel
       _setAddrWindow
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _write_data
         _spiwrite
   _drawtext
     _drawChar
       ___wmul
       _drawPixel
         _setAddrWindow
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _write_data
           _spiwrite
       _fillRect
         _drawFastVLine
           _setAddrWindow
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _spiwrite
     _strlen
   _fillCircle
     _drawFastVLine
       _setAddrWindow
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _spiwrite
     _fillCircleHelper
       _drawFastVLine
         _setAddrWindow
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _spiwrite
   _init_UART
     _OpenUSART
   _printf
     ___lldiv
     ___wmul
     _isdigit
     _putch

 _chkisr (ROOT)
   _INT0_isr
     _force_nec_state0
   _TIMER1_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      7E       7       49.2%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      7      7A       5       95.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     46      6F       1       87.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     167      34        0.0%
DATA                 0      0     167       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Apr 19 21:45:01 2021

                     drawCircle@f 002A                       drawCircle@r 0020  
                     drawCircle@x 002C                       drawCircle@y 002E  
                               _i 006E                       _SSPSTATbits 000FC7  
                    drawCircle@x0 001C                      drawCircle@y0 001E  
             ___wmul@multiplicand 0013                               l105 1506  
                             l203 124E                               l213 14B8  
                             l320 0DCC                               l316 0DCE  
                             l148 1440                               l317 0D3A  
                             l263 0F70                               l319 0DAA  
                             l327 0380                               l408 0114  
                             l257 13CA                               l281 0788  
                             l345 091E                               l460 1142  
                             l453 111A                               l429 02BC  
                             l462 115C                               l279 08AE  
                             l288 0804                               l465 141C  
                             l457 1134                               l458 1136  
                             l459 1140                               l925 0ED8  
                             l896 1462                               _PR2 000FCB  
               _Deactivate_Buzzer 151C                               _nbr 0063  
                             _txt 0067                               prod 000FF3  
                             wreg 000FE8                ?_Deactivate_Buzzer 0001  
                 ??_fillRectangle 001D                      __CFG_LVP$OFF 000000  
         _TFT_GreenTab_Initialize 13CC                      __CFG_WDT$OFF 000000  
                            l1027 132A                    drawFastVLine@h 0019  
                  drawFastVLine@x 0022                    drawFastVLine@y 0018  
                            l3231 12CA                              l2601 145A  
                            l3219 13AC                              l3227 12AE  
                            l3411 0DA0                              l2451 1100  
                            l2611 0E80                              l3181 0F32  
                            l3333 0776                              l2613 0E8E  
                            l3191 0F58                              l3351 07FC  
                            l3343 0794                              l3415 0DAE  
                            l2471 112C                              l2463 111E  
                            l2455 110A                              l2623 0EC8  
                            l2615 0E96                              l3193 0F66  
                            l3177 0EFA                              l3361 084E  
                            l3337 0784                              l3329 076A  
                            l3425 0DC8                              l2633 1426  
                            l3347 07C4                              l3339 078C  
                            l3419 0DB8                              l3515 0980  
                            l2459 1112                              l3611 021C  
                            l3603 01F0                              l3349 07F8  
                            l3381 12F8                              l3461 0BE4  
                            l3453 0B92                              l3437 0B24  
                            l2557 1374                              l2637 143A  
                            l3605 01F8                              l3541 0036  
                            l3367 087A                              l3359 0826  
                            l3375 08AA                              l3383 12FE  
                            l3463 0BEC                              l2559 137E  
                            l3519 09D2                              l3543 0044  
                            l3369 08A2                              l3449 0B74  
                            l3393 0D04                              l3641 0366  
                            l3617 028C                              l3609 0210  
                            l3561 00E4                              l3553 0082  
                            l3537 0026                              l3571 0134  
                            l3547 004E                              l3619 02A0  
                            l3581 016A                              l3565 00EE  
                            l3549 0064                              l3399 0D72  
                            l3575 015A                              l3751 0502  
                            l3735 04BE                              l3593 01C2  
                            l3585 019A                              l3577 015E  
                            l3499 0904                              l3595 01CC  
                            l3763 0538                              l3755 0516  
                            l3669 0456                              l3589 019E  
                            l3599 01D8                              l3759 0530  
                            STR_1 FFBA                              STR_2 FFD0  
                            STR_3 FFF7                              STR_4 FFE6  
                            u2400 0D32                              u2170 0F28  
                            u2330 085C                              u2410 0D68  
                            u2470 0B4E                              _TRMT 007D61  
             ??_Deactivate_Buzzer 0011                              _main 046C  
                            _font FDBF                              fsr0h 000FEA  
                            _txt1 012A                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              _wrap 005C  
                            pclat 000FFA                __size_of_LCD_Reset 0012  
                            prodh 000FF4                              prodl 000FF3  
                            start 0018                   ??_drawFastVLine 001C  
                    ___param_bank 000010                       ?_TIMER1_isr 0001  
                __end_of_INT0_isr 075A         __end_of_Deactivate_Buzzer 1524  
                 drawFastVLine@hi 0020                   drawFastVLine@lo 0021  
                           ?_main 0001                   drawCircle@ddF_x 0026  
                 drawCircle@ddF_y 0028                   __end_of___lldiv 0EEA  
                           _T1CON 000FCD                             _T2CON 000FCA  
                           _T3CON 000FB1                             i2l140 0712  
                           i2l116 10B4                             i2l128 0758  
                 drawCircle@color 0022                             _RCSTA 000FAB  
                           _TMR1H 000FCF                             _TMR3H 000FB3  
                           _TMR1L 000FCE                             _TMR3L 000FB2  
                           _SPBRG 000FAF                             _PORTD 000F83  
                           _PORTE 000F84                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                             _TXREG 000FAD  
                           _TXSTA 000FAC                             _Rcmd1 09E8  
                           _Rcmd3 0C02                             _nRBPU 007F8F  
                           _color 0080                             _font2 FEBE  
           fillCircleHelper@ddF_x 0031             fillCircleHelper@ddF_y 0033  
                 __end_of_isdigit 1464             fillCircleHelper@delta 002B  
                           _putch 1502             fillCircleHelper@color 002D  
                           main@i 0044                    __CFG_BOREN$OFF 000000  
                           tablat 000FF5                             status 000FD8  
                 write_data@data_ 0013                   __initialization 0F72  
                    __end_of_main 05FA                      __end_of_font FEBE  
                __end_of_Rcmd2red 136A                            ??_main 0043  
                   __activetblptr 000002                 __end_of_LCD_Reset 14D0  
       ??_TFT_GreenTab_Initialize 001D                            ?_Rcmd1 0001  
                          ?_Rcmd3 0001                            _ADCON1 000FC1  
                          _CCPR2L 000FBB                            ?_putch 0001  
                          i2l1601 069E                            i2l1613 06C4  
                          i2l1607 06BA                            i2l1625 072C  
                          i2l1609 06C0                            i2l1633 0736  
                          i2l1627 0732                            i2l1583 066C  
                          i2l1567 0622                            i2l1577 064E  
                          i2l1595 0694                            i2l1589 0676  
                          i2l1829 10AA                            _OSCCON 000FD3  
             __size_of_TIMER1_isr 000C                            _SPBRGH 000FB0  
                          _SSPBUF 000FC9                  _force_nec_state0 1524  
                __end_of_delay_ms 1256                  __end_of_fillRect 12EE  
                __end_of_drawChar 08B0                __size_of_OpenUSART 0070  
        __size_of_Activate_Buzzer 0012                            ___wmul 13F6  
       __size_of_fillCircleHelper 0138                  __end_of_drawtext 0C02  
                       ??___lldiv 0019                            _chkisr 0008  
                          _array1 0047                            _buffer 00D4  
                          _nec_ok 0065                            clear_0 0F78  
                          clear_1 0F84        __size_of_Deactivate_Buzzer 0008  
                          _printf 001C                      drawtext@size 0040  
                          _strcpy 136A                            _strlen 12EE  
                    __pdataCOMRAM 0047                         ??_isdigit 0011  
                    __mediumconst FDBE                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                          putch@c 0011                  __end_of_spiwrite 14BE  
                      __accesstop 0080           __end_of__initialization 0FEA  
                       ?_INT0_isr 0001                     ___rparam_used 000001  
                   __end_of_Rcmd1 0AF8                     __end_of_Rcmd3 0CF4  
                  __pcstackCOMRAM 0001                      __pidataBANK0 115E  
                    __pidataBANK1 0FF4                     __end_of_font2 FF9A  
                   __end_of_putch 1510                    drawPixel@color 0019  
          __size_of_write_command 0010        fillCircleHelper@cornername 0029  
                         ??_Rcmd1 001D                           ??_Rcmd3 001D  
              __size_of_drawPixel 0030                 __end_of_OpenUSART 115E  
                         ??_putch 0011                        __pbssBANK0 00D4  
                       ?_Rcmd2red 0001                __size_of_init_UART 0014  
                 spiwrite@spidata 0012                        ??_INT0_isr 0001  
                   ?_Wait_One_Sec 0001                __CFG_CCP2MX$PORTBE 000000  
                         ?___wmul 0011                           ?_chkisr 0001  
          __size_of_setAddrWindow 004E                           _CCP2CON 000FBA  
                    ??_TIMER1_isr 0001                        _fillCircle 11B2  
                         ?_printf 001E                           ?_strcpy 0011  
                         ?_strlen 0011                 ??_Activate_Buzzer 0011  
                      _fillScreen 1464                        _drawCircle 02BE  
                       ?_delay_ms 0017                         ?_fillRect 0023  
                       ?_drawChar 002E                           _SSPCON1 000FC6  
                         _SSPSTAT 000FC7             __end_of_fillRectangle 0DD0  
                       ?_drawtext 0039                        ??_Rcmd2red 0014  
                  ??_Wait_One_Sec 0011                __end_of_TIMER1_isr 151C  
                   _write_command 14F2                           __Hparam 0000  
                         __Lparam 0000                 __end_of_drawPixel 13CC  
           __end_of_drawFastVLine 0F72                  _fillCircleHelper 08B0  
                         ___lldiv 0E5E                   __size_of___wmul 0028  
                 __size_of_chkisr 10E6                         ?_spiwrite 0001  
                         __pcinit 0F72                           __ramtop 1000  
                         __ptext0 046C                           __ptext1 001C  
                         __ptext2 1502                           __ptext3 1442  
                         __ptext4 0E5E                           __ptext5 1496  
                         __ptext6 10EE                           __ptext7 11B2  
                         __ptext8 08B0                           __ptext9 02BE  
                 __size_of_printf 02A2                 __end_of_init_UART 14AA  
                         _colord1 00AA                           _colord2 0100  
                 __size_of_strcpy 0032                   __size_of_strlen 003E  
               __end_of_hexpowers FFBA          __end_of_force_nec_state0 152C  
                       _T1CONbits 000FCD                           _isdigit 1442  
                       _T3CONbits 000FB1                        ??_delay_ms 0019  
                   drawtext@_text 003A                     drawtext@color 003C  
                      ??_fillRect 0028                        ??_drawChar 0035  
                       _LCD_Reset 14BE                     _setAddrWindow 1256  
                  __pintcode_body 1072                     Wait_One_Sec@k 0011  
                      delay_ms@ms 0017              end_of_initialization 0FEA  
                      ??_drawtext 0041                    ?_write_command 0001  
                   __Lmediumconst FDBE                           int_func 1072  
                 ___lldiv@divisor 0015                   ___lldiv@counter 001D  
                       _RCSTAbits 000FAB                           printf@c 0036  
                         printf@f 001E                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE                        ??_spiwrite 0011  
                         strlen@s 0011                   fillCircle@color 0041  
                     ?_fillCircle 003B                  drawtext@cursor_x 00F9  
                drawtext@cursor_y 00F8                         _PORTBbits 000F81  
                       _PORTCbits 000F82                       ?_fillScreen 0024  
                     ?_drawCircle 001C                        drawChar@bg 0032  
                       _TRISCbits 000F94                    ?_setAddrWindow 0014  
                      ?_LCD_Reset 0001                  drawtext@textsize 00F4  
                      drawPixel@x 001B                        drawPixel@y 0018  
                     printf@width 0034                         _TXSTAbits 000FAC  
               __size_of_INT0_isr 0160                    __end_of___wmul 141E  
                   delay_ms@count 001B                        _write_data 14E2  
                   __pidataCOMRAM 1480                    __end_of_chkisr 10EE  
        ?_TFT_GreenTab_Initialize 0001                        drawtext@bg 003E  
                       _Nec_code1 0069              __end_of_Wait_One_Sec 1442  
                  __end_of_printf 02BE                    __end_of_strcpy 139C  
                  __end_of_strlen 132C                         _Nec_state 006A  
             start_initialization 0F72                   ??_write_command 0013  
                       _OpenUSART 10EE               __size_of_fillCircle 0052  
                __CFG_OSC$INTIO67 000000                 __size_of_Rcmd2red 003E  
             __size_of_fillScreen 001C               __size_of_drawCircle 01AE  
                 _Activate_Buzzer 14D0                          ??___wmul 0015  
                        ??_chkisr 0003                       __pdataBANK0 0080  
                     __pdataBANK1 0100                   setAddrWindow@x0 0017  
                 setAddrWindow@x1 0015                   setAddrWindow@y0 0014  
                 setAddrWindow@y1 0016                          ??_printf 0026  
                        ??_strcpy 0015                          ??_strlen 0013  
                     __pbssCOMRAM 005D                   ??_setAddrWindow 0017  
                   __pcstackBANK0 00F3                       ??_LCD_Reset 001D  
                    _isdigit$1613 0012          __end_of_fillCircleHelper 09E8  
               __size_of_delay_ms 0052                 __size_of_fillRect 004A  
               __size_of_drawChar 0156                        ?_OpenUSART 0011  
               __size_of_drawtext 010A                         _bit_count 006C  
                       __pintcode 0008   __end_of_TFT_GreenTab_Initialize 13F6  
                   __pmediumconst FDBE                          ?___lldiv 0011  
                       __tft_type 006B                drawFastVLine@color 001A  
                     ?_write_data 0001                         _drawPixel 139C  
               __size_of_spiwrite 0014                 ?_force_nec_state0 0001  
                        ?_isdigit 0001                 _Initialize_Screen 0DD0  
                  __size_of_Rcmd1 0110                    __size_of_Rcmd3 00F2  
                       _init_UART 1496                ??_force_nec_state0 0001  
                       _hexpowers FF9A                ?_Initialize_Screen 0001  
                  __size_of_putch 000E           __end_of_Activate_Buzzer 14E2  
                  ___wmul@product 0015               ??_Initialize_Screen 0043  
                        _INT0_isr 05FA                          _PIE1bits 000F9D  
                        _PIR1bits 000F9E                          _PIR2bits 000FA1  
           __size_of_Wait_One_Sec 0024                         fillRect@h 0025  
                       fillRect@i 002C                         fillRect@w 0024  
                       fillRect@x 002B                         fillRect@y 0023  
                       drawChar@c 002F                         drawChar@i 0038  
                       drawChar@j 0037                      ??_fillCircle 0043  
                       drawChar@x 0036                         drawChar@y 002E  
                      ?_drawPixel 0018            __size_of_fillRectangle 00DC  
               ___wmul@multiplier 0011         __end_of_Initialize_Screen 0E5E  
                    ??_fillScreen 0026                      ??_drawCircle 0024  
                      printf@flag 0033                        printf@prec 002B  
                       main@found 0046                        ?_init_UART 0001  
                     _INTCON2bits 000FF1                         copy_data0 0F9E  
                       copy_data1 0FBE                         copy_data2 0FDE  
                       drawtext@i 00F6            __size_of_drawFastVLine 0088  
                       drawtext@x 00F3                         drawtext@y 0039  
                        _Nec_code 005D                 write_command@cmd_ 0013  
                     ??_OpenUSART 0013                          _Rcmd2red 132C  
             __size_of_write_data 0010                   OpenUSART@config 0013  
                    _Time_Elapsed 0061                __end_of_fillCircle 1204  
                    _Wait_One_Sec 141E                          __Hrparam 0000  
              __end_of_fillScreen 1480                          __Lrparam 0000  
              __end_of_drawCircle 046C                  __size_of___lldiv 008C  
                __size_of_isdigit 0022                          _delay_ms 1204  
                        __ptext10 141E                          __ptext11 0DD0  
                        __ptext20 139C                          __ptext12 136A  
                        __ptext21 1256                          __ptext13 1464  
                        __ptext30 1204                          __ptext22 13CC  
                        __ptext14 0CF4                          __ptext31 13F6  
                        __ptext23 0C02                          __ptext15 0AF8  
                        __ptext32 151C                          __ptext24 132C  
                        __ptext16 12EE                          __ptext33 14D0  
                        __ptext25 09E8                          __ptext17 075A  
                        __ptext26 14E2                          __ptext18 12A4  
                        __ptext35 1510                          __ptext27 14F2  
                        __ptext19 0EEA                          __ptext36 05FA  
                        __ptext28 14AA                          __ptext37 1524  
                        __ptext29 14BE                          _fillRect 12A4  
                        _drawChar 075A  __size_of_TFT_GreenTab_Initialize 002A  
                        _colstart 006D                          _drawtext 0AF8  
                      strcpy@from 0013                     _fillRectangle 0CF4  
                ?_Activate_Buzzer 0001                     __size_of_main 018E  
                 fillRectangle@hi 0021                   fillRectangle@lo 0022  
                   _drawFastVLine 0EEA                         printf@idx 002A  
                        _spiwrite 14AA                         printf@val 002D  
                     ??_drawPixel 001B                          _rowstart 006F  
              fillCircleHelper@x0 0023                fillCircleHelper@y0 0025  
      __size_of_Initialize_Screen 008E                        _INTCONbits 000FF2  
                  OpenUSART@spbrg 0011                       ??_init_UART 0014  
                        isdigit@c 0013                 ?_fillCircleHelper 0023  
                       spiwrite@x 0011                          intlevel2 0000  
                  ?_fillRectangle 0018                ??_fillCircleHelper 002F  
           __end_of_write_command 1502                  ___lldiv@dividend 0011  
                 fillScreen@color 0024                      fillCircle@x0 003B  
                    fillCircle@y0 003D                    fillRectangle@h 001A  
                  fillRectangle@w 0019                    fillRectangle@x 0023  
                  fillRectangle@y 0018                    ?_drawFastVLine 0018  
                        printf@ap 0031                 fillCircleHelper@f 0035  
               fillCircleHelper@r 0027                 fillCircleHelper@x 0037  
               fillCircleHelper@y 0039                      ??_write_data 0013  
                      _TIMER1_isr 1510                     fillRect@color 0026  
                ___lldiv@quotient 0019                          strcpy@cp 0015  
                        strlen@cp 0015                          strcpy@to 0011  
                     fillCircle@r 003F             __end_of_setAddrWindow 12A4  
              fillRectangle@color 001B                     drawChar@color 0030  
              __end_of_write_data 14F2         __size_of_force_nec_state0 0008  
                    drawChar@line 0035                      drawChar@size 0034  
