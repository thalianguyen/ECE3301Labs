

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri May 14 19:49:31 2021

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,delta=1
   105                           	psect	text89,global,reloc=2,class=CODE,delta=1
   106                           	psect	text90,global,reloc=2,class=CODE,delta=1
   107                           	psect	text91,global,reloc=2,class=CODE,delta=1
   108                           	psect	text92,global,reloc=2,class=CODE,delta=1
   109                           	psect	text93,global,reloc=2,class=CODE,delta=1
   110                           	psect	text94,global,reloc=2,class=CODE,delta=1
   111                           	psect	text95,global,reloc=2,class=CODE,delta=1
   112                           	psect	text96,global,reloc=2,class=CODE,delta=1
   113                           	psect	text97,global,reloc=2,class=CODE,delta=1
   114                           	psect	text98,global,reloc=2,class=CODE,delta=1
   115                           	psect	text99,global,reloc=2,class=CODE,delta=1
   116                           	psect	text100,global,reloc=2,class=CODE,delta=1
   117                           	psect	text101,global,reloc=2,class=CODE,delta=1
   118                           	psect	text102,global,reloc=2,class=CODE,delta=1
   119                           	psect	text103,global,reloc=2,class=CODE,delta=1
   120                           	psect	text104,global,reloc=2,class=CODE,delta=1
   121                           	psect	text105,global,reloc=2,class=CODE,delta=1
   122                           	psect	text106,global,reloc=2,class=CODE,delta=1
   123                           	psect	text107,global,reloc=2,class=CODE,delta=1
   124                           	psect	text108,global,reloc=2,class=CODE,delta=1
   125                           	psect	text109,global,reloc=2,class=CODE,delta=1
   126                           	psect	text110,global,reloc=2,class=CODE,delta=1
   127                           	psect	text111,global,reloc=2,class=CODE,delta=1
   128                           	psect	text112,global,reloc=2,class=CODE,delta=1
   129                           	psect	text113,global,reloc=2,class=CODE,delta=1
   130                           	psect	text114,global,reloc=2,class=CODE,delta=1
   131                           	psect	text115,global,reloc=2,class=CODE,delta=1
   132                           	psect	text116,global,reloc=2,class=CODE,delta=1
   133                           	psect	text117,global,reloc=2,class=CODE,delta=1
   134                           	psect	text118,global,reloc=2,class=CODE,delta=1
   135                           	psect	text119,global,reloc=2,class=CODE,delta=1
   136                           	psect	text120,global,reloc=2,class=CODE,delta=1
   137                           	psect	text121,global,reloc=2,class=CODE,delta=1
   138                           	psect	text122,global,reloc=2,class=CODE,delta=1
   139                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   140                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   141                           	psect	text124,global,reloc=2,class=CODE,delta=1
   142                           	psect	text125,global,reloc=2,class=CODE,delta=1
   143                           	psect	text126,global,reloc=2,class=CODE,delta=1
   144                           	psect	text127,global,reloc=2,class=CODE,delta=1
   145                           	psect	text128,global,reloc=2,class=CODE,delta=1
   146                           	psect	text129,global,reloc=2,class=CODE,delta=1
   147                           	psect	text130,global,reloc=2,class=CODE,delta=1
   148                           	psect	text131,global,reloc=2,class=CODE,delta=1
   149                           	psect	text132,global,reloc=2,class=CODE,delta=1
   150                           	psect	text133,global,reloc=2,class=CODE,delta=1
   151                           	psect	text134,global,reloc=2,class=CODE,delta=1
   152                           	psect	text135,global,reloc=2,class=CODE,delta=1
   153                           	psect	text136,global,reloc=2,class=CODE,delta=1
   154                           	psect	text137,global,reloc=2,class=CODE,delta=1
   155                           	psect	text138,global,reloc=2,class=CODE,delta=1
   156                           	psect	text139,global,reloc=2,class=CODE,delta=1
   157                           	psect	text140,global,reloc=2,class=CODE,delta=1
   158                           	psect	text141,global,reloc=2,class=CODE,delta=1
   159                           	psect	text142,global,reloc=2,class=CODE,delta=1
   160                           	psect	text143,global,reloc=2,class=CODE,delta=1
   161                           	psect	text144,global,reloc=2,class=CODE,delta=1
   162                           	psect	text145,global,reloc=2,class=CODE,delta=1
   163                           	psect	text146,global,reloc=2,class=CODE,delta=1
   164                           	psect	text147,global,reloc=2,class=CODE,delta=1
   165                           	psect	text148,global,reloc=2,class=CODE,delta=1
   166                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   167                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   168  0000                     
   169                           	psect	idataBANK1
   170  007E62                     __pidataBANK1:
   171                           	opt stack 0
   172                           
   173                           ;initializer for _buffer
   174  007E62  20                 	db	32
   175  007E63  45                 	db	69
   176  007E64  43                 	db	67
   177  007E65  45                 	db	69
   178  007E66  33                 	db	51
   179  007E67  33                 	db	51
   180  007E68  30                 	db	48
   181  007E69  31                 	db	49
   182  007E6A  4C                 	db	76
   183  007E6B  20                 	db	32
   184  007E6C  53                 	db	83
   185  007E6D  70                 	db	112
   186  007E6E  27                 	db	39
   187  007E6F  32                 	db	50
   188  007E70  31                 	db	49
   189  007E71  20                 	db	32
   190  007E72  46                 	db	70
   191  007E73  69                 	db	105
   192  007E74  6E                 	db	110
   193  007E75  61                 	db	97
   194  007E76  6C                 	db	108
   195  007E77  00                 	db	0
   196  007E78  00                 	db	0
   197  007E79  00                 	db	0
   198  007E7A  00                 	db	0
   199  007E7B  00                 	db	0
   200  007E7C  00                 	db	0
   201  007E7D  00                 	db	0
   202  007E7E  00                 	db	0
   203  007E7F  00                 	db	0
   204  007E80  00                 	db	0
   205                           
   206                           ;initializer for _array1
   207  007E81  A2                 	db	162
   208  007E82  62                 	db	98
   209  007E83  E2                 	db	226
   210  007E84  22                 	db	34
   211  007E85  02                 	db	2
   212  007E86  C2                 	db	194
   213  007E87  E0                 	db	224
   214  007E88  A8                 	db	168
   215  007E89  90                 	db	144
   216  007E8A  68                 	db	104
   217  007E8B  98                 	db	152
   218  007E8C  B0                 	db	176
   219  007E8D  30                 	db	48
   220  007E8E  18                 	db	24
   221  007E8F  7A                 	db	122
   222  007E90  10                 	db	16
   223  007E91  38                 	db	56
   224  007E92  5A                 	db	90
   225  007E93  42                 	db	66
   226  007E94  4A                 	db	74
   227  007E95  52                 	db	82
   228                           
   229                           ;initializer for _fan_set_temp
   230  007E96  4B                 	db	75
   231                           
   232                           ;initializer for _tempSecond
   233  007E97  FF                 	db	255
   234                           
   235                           ;initializer for _wrap
   236  007E98  01                 	db	1
   237                           
   238                           ;initializer for _alarm_time
   239  007E99  30                 	db	48
   240  007E9A  30                 	db	48
   241  007E9B  3A                 	db	58
   242  007E9C  30                 	db	48
   243  007E9D  30                 	db	48
   244  007E9E  3A                 	db	58
   245  007E9F  30                 	db	48
   246  007EA0  30                 	db	48
   247  007EA1  00                 	db	0
   248                           
   249                           ;initializer for _date
   250  007EA2  30                 	db	48
   251  007EA3  30                 	db	48
   252  007EA4  2F                 	db	47
   253  007EA5  30                 	db	48
   254  007EA6  30                 	db	48
   255  007EA7  2F                 	db	47
   256  007EA8  30                 	db	48
   257  007EA9  30                 	db	48
   258  007EAA  00                 	db	0
   259                           
   260                           ;initializer for _setup_alarm_time
   261  007EAB  30                 	db	48
   262  007EAC  30                 	db	48
   263  007EAD  3A                 	db	58
   264  007EAE  30                 	db	48
   265  007EAF  30                 	db	48
   266  007EB0  3A                 	db	58
   267  007EB1  30                 	db	48
   268  007EB2  30                 	db	48
   269  007EB3  00                 	db	0
   270                           
   271                           ;initializer for _setup_date
   272  007EB4  30                 	db	48
   273  007EB5  31                 	db	49
   274  007EB6  2F                 	db	47
   275  007EB7  30                 	db	48
   276  007EB8  31                 	db	49
   277  007EB9  2F                 	db	47
   278  007EBA  30                 	db	48
   279  007EBB  30                 	db	48
   280  007EBC  00                 	db	0
   281                           
   282                           ;initializer for _setup_time
   283  007EBD  30                 	db	48
   284  007EBE  30                 	db	48
   285  007EBF  3A                 	db	58
   286  007EC0  30                 	db	48
   287  007EC1  30                 	db	48
   288  007EC2  3A                 	db	58
   289  007EC3  30                 	db	48
   290  007EC4  30                 	db	48
   291  007EC5  00                 	db	0
   292                           
   293                           ;initializer for _time
   294  007EC6  30                 	db	48
   295  007EC7  30                 	db	48
   296  007EC8  3A                 	db	58
   297  007EC9  30                 	db	48
   298  007ECA  30                 	db	48
   299  007ECB  3A                 	db	58
   300  007ECC  30                 	db	48
   301  007ECD  30                 	db	48
   302  007ECE  00                 	db	0
   303                           
   304                           ;initializer for _Volt_Txt
   305  007ECF  30                 	db	48
   306  007ED0  2E                 	db	46
   307  007ED1  30                 	db	48
   308  007ED2  30                 	db	48
   309  007ED3  56                 	db	86
   310  007ED4  00                 	db	0
   311                           
   312                           ;initializer for _Fan_Set_Temp_Txt
   313  007ED5  30                 	db	48
   314  007ED6  37                 	db	55
   315  007ED7  35                 	db	53
   316  007ED8  46                 	db	70
   317  007ED9  00                 	db	0
   318                           
   319                           ;initializer for _RPM_Txt
   320  007EDA  30                 	db	48
   321  007EDB  30                 	db	48
   322  007EDC  30                 	db	48
   323  007EDD  30                 	db	48
   324  007EDE  00                 	db	0
   325                           
   326                           ;initializer for _setup_fan_set_text
   327  007EDF  30                 	db	48
   328  007EE0  37                 	db	55
   329  007EE1  35                 	db	53
   330  007EE2  46                 	db	70
   331  007EE3  00                 	db	0
   332                           
   333                           ;initializer for _Alarm_SW_Txt
   334  007EE4  4F                 	db	79
   335  007EE5  46                 	db	70
   336  007EE6  46                 	db	70
   337  007EE7  00                 	db	0
   338                           
   339                           ;initializer for _DC_Txt
   340  007EE8  30                 	db	48
   341  007EE9  30                 	db	48
   342  007EEA  30                 	db	48
   343  007EEB  00                 	db	0
   344                           
   345                           ;initializer for _Fan_SW_Txt
   346  007EEC  4F                 	db	79
   347  007EED  46                 	db	70
   348  007EEE  46                 	db	70
   349  007EEF  00                 	db	0
   350                           
   351                           ;initializer for _tempC
   352  007EF0  2B                 	db	43
   353  007EF1  32                 	db	50
   354  007EF2  35                 	db	53
   355  007EF3  00                 	db	0
   356                           
   357                           ;initializer for _tempF
   358  007EF4  2B                 	db	43
   359  007EF5  37                 	db	55
   360  007EF6  37                 	db	55
   361  007EF7  00                 	db	0
   362                           
   363                           ;initializer for _RTC_ALARM_Txt
   364  007EF8  30                 	db	48
   365  007EF9  00                 	db	0
   366                           
   367                           	psect	mediumconst
   368  00FC32                     __pmediumconst:
   369                           	opt stack 0
   370  00FC32  00                 	db	0
   371  00FC33                     _font:
   372                           	opt stack 0
   373  00FC33  00                 	db	0
   374  00FC34  00                 	db	0
   375  00FC35  00                 	db	0
   376  00FC36  00                 	db	0
   377  00FC37  00                 	db	0
   378  00FC38  00                 	db	0
   379  00FC39  00                 	db	0
   380  00FC3A  5F                 	db	95
   381  00FC3B  00                 	db	0
   382  00FC3C  00                 	db	0
   383  00FC3D  00                 	db	0
   384  00FC3E  07                 	db	7
   385  00FC3F  00                 	db	0
   386  00FC40  07                 	db	7
   387  00FC41  00                 	db	0
   388  00FC42  14                 	db	20
   389  00FC43  7F                 	db	127
   390  00FC44  14                 	db	20
   391  00FC45  7F                 	db	127
   392  00FC46  14                 	db	20
   393  00FC47  24                 	db	36
   394  00FC48  2A                 	db	42
   395  00FC49  7F                 	db	127
   396  00FC4A  2A                 	db	42
   397  00FC4B  12                 	db	18
   398  00FC4C  23                 	db	35
   399  00FC4D  13                 	db	19
   400  00FC4E  08                 	db	8
   401  00FC4F  64                 	db	100
   402  00FC50  62                 	db	98
   403  00FC51  36                 	db	54
   404  00FC52  49                 	db	73
   405  00FC53  56                 	db	86
   406  00FC54  20                 	db	32
   407  00FC55  50                 	db	80
   408  00FC56  00                 	db	0
   409  00FC57  08                 	db	8
   410  00FC58  07                 	db	7
   411  00FC59  03                 	db	3
   412  00FC5A  00                 	db	0
   413  00FC5B  00                 	db	0
   414  00FC5C  1C                 	db	28
   415  00FC5D  22                 	db	34
   416  00FC5E  41                 	db	65
   417  00FC5F  00                 	db	0
   418  00FC60  00                 	db	0
   419  00FC61  41                 	db	65
   420  00FC62  22                 	db	34
   421  00FC63  1C                 	db	28
   422  00FC64  00                 	db	0
   423  00FC65  2A                 	db	42
   424  00FC66  1C                 	db	28
   425  00FC67  7F                 	db	127
   426  00FC68  1C                 	db	28
   427  00FC69  2A                 	db	42
   428  00FC6A  08                 	db	8
   429  00FC6B  08                 	db	8
   430  00FC6C  3E                 	db	62
   431  00FC6D  08                 	db	8
   432  00FC6E  08                 	db	8
   433  00FC6F  00                 	db	0
   434  00FC70  80                 	db	128
   435  00FC71  70                 	db	112
   436  00FC72  30                 	db	48
   437  00FC73  00                 	db	0
   438  00FC74  08                 	db	8
   439  00FC75  08                 	db	8
   440  00FC76  08                 	db	8
   441  00FC77  08                 	db	8
   442  00FC78  08                 	db	8
   443  00FC79  00                 	db	0
   444  00FC7A  00                 	db	0
   445  00FC7B  60                 	db	96
   446  00FC7C  60                 	db	96
   447  00FC7D  00                 	db	0
   448  00FC7E  20                 	db	32
   449  00FC7F  10                 	db	16
   450  00FC80  08                 	db	8
   451  00FC81  04                 	db	4
   452  00FC82  02                 	db	2
   453  00FC83  3E                 	db	62
   454  00FC84  51                 	db	81
   455  00FC85  49                 	db	73
   456  00FC86  45                 	db	69
   457  00FC87  3E                 	db	62
   458  00FC88  00                 	db	0
   459  00FC89  42                 	db	66
   460  00FC8A  7F                 	db	127
   461  00FC8B  40                 	db	64
   462  00FC8C  00                 	db	0
   463  00FC8D  72                 	db	114
   464  00FC8E  49                 	db	73
   465  00FC8F  49                 	db	73
   466  00FC90  49                 	db	73
   467  00FC91  46                 	db	70
   468  00FC92  21                 	db	33
   469  00FC93  41                 	db	65
   470  00FC94  49                 	db	73
   471  00FC95  4D                 	db	77
   472  00FC96  33                 	db	51
   473  00FC97  18                 	db	24
   474  00FC98  14                 	db	20
   475  00FC99  12                 	db	18
   476  00FC9A  7F                 	db	127
   477  00FC9B  10                 	db	16
   478  00FC9C  27                 	db	39
   479  00FC9D  45                 	db	69
   480  00FC9E  45                 	db	69
   481  00FC9F  45                 	db	69
   482  00FCA0  39                 	db	57
   483  00FCA1  3C                 	db	60
   484  00FCA2  4A                 	db	74
   485  00FCA3  49                 	db	73
   486  00FCA4  49                 	db	73
   487  00FCA5  31                 	db	49
   488  00FCA6  41                 	db	65
   489  00FCA7  21                 	db	33
   490  00FCA8  11                 	db	17
   491  00FCA9  09                 	db	9
   492  00FCAA  07                 	db	7
   493  00FCAB  36                 	db	54
   494  00FCAC  49                 	db	73
   495  00FCAD  49                 	db	73
   496  00FCAE  49                 	db	73
   497  00FCAF  36                 	db	54
   498  00FCB0  46                 	db	70
   499  00FCB1  49                 	db	73
   500  00FCB2  49                 	db	73
   501  00FCB3  29                 	db	41
   502  00FCB4  1E                 	db	30
   503  00FCB5  00                 	db	0
   504  00FCB6  00                 	db	0
   505  00FCB7  14                 	db	20
   506  00FCB8  00                 	db	0
   507  00FCB9  00                 	db	0
   508  00FCBA  00                 	db	0
   509  00FCBB  40                 	db	64
   510  00FCBC  34                 	db	52
   511  00FCBD  00                 	db	0
   512  00FCBE  00                 	db	0
   513  00FCBF  00                 	db	0
   514  00FCC0  08                 	db	8
   515  00FCC1  14                 	db	20
   516  00FCC2  22                 	db	34
   517  00FCC3  41                 	db	65
   518  00FCC4  14                 	db	20
   519  00FCC5  14                 	db	20
   520  00FCC6  14                 	db	20
   521  00FCC7  14                 	db	20
   522  00FCC8  14                 	db	20
   523  00FCC9  00                 	db	0
   524  00FCCA  41                 	db	65
   525  00FCCB  22                 	db	34
   526  00FCCC  14                 	db	20
   527  00FCCD  08                 	db	8
   528  00FCCE  02                 	db	2
   529  00FCCF  01                 	db	1
   530  00FCD0  59                 	db	89
   531  00FCD1  09                 	db	9
   532  00FCD2  06                 	db	6
   533  00FCD3  3E                 	db	62
   534  00FCD4  41                 	db	65
   535  00FCD5  5D                 	db	93
   536  00FCD6  59                 	db	89
   537  00FCD7  4E                 	db	78
   538  00FCD8  7C                 	db	124
   539  00FCD9  12                 	db	18
   540  00FCDA  11                 	db	17
   541  00FCDB  12                 	db	18
   542  00FCDC  7C                 	db	124
   543  00FCDD  7F                 	db	127
   544  00FCDE  49                 	db	73
   545  00FCDF  49                 	db	73
   546  00FCE0  49                 	db	73
   547  00FCE1  36                 	db	54
   548  00FCE2  3E                 	db	62
   549  00FCE3  41                 	db	65
   550  00FCE4  41                 	db	65
   551  00FCE5  41                 	db	65
   552  00FCE6  22                 	db	34
   553  00FCE7  7F                 	db	127
   554  00FCE8  41                 	db	65
   555  00FCE9  41                 	db	65
   556  00FCEA  41                 	db	65
   557  00FCEB  3E                 	db	62
   558  00FCEC  7F                 	db	127
   559  00FCED  49                 	db	73
   560  00FCEE  49                 	db	73
   561  00FCEF  49                 	db	73
   562  00FCF0  41                 	db	65
   563  00FCF1  7F                 	db	127
   564  00FCF2  09                 	db	9
   565  00FCF3  09                 	db	9
   566  00FCF4  09                 	db	9
   567  00FCF5  01                 	db	1
   568  00FCF6  3E                 	db	62
   569  00FCF7  41                 	db	65
   570  00FCF8  41                 	db	65
   571  00FCF9  51                 	db	81
   572  00FCFA  73                 	db	115
   573  00FCFB  7F                 	db	127
   574  00FCFC  08                 	db	8
   575  00FCFD  08                 	db	8
   576  00FCFE  08                 	db	8
   577  00FCFF  7F                 	db	127
   578  00FD00  00                 	db	0
   579  00FD01  41                 	db	65
   580  00FD02  7F                 	db	127
   581  00FD03  41                 	db	65
   582  00FD04  00                 	db	0
   583  00FD05  20                 	db	32
   584  00FD06  40                 	db	64
   585  00FD07  41                 	db	65
   586  00FD08  3F                 	db	63
   587  00FD09  01                 	db	1
   588  00FD0A  7F                 	db	127
   589  00FD0B  08                 	db	8
   590  00FD0C  14                 	db	20
   591  00FD0D  22                 	db	34
   592  00FD0E  41                 	db	65
   593  00FD0F  7F                 	db	127
   594  00FD10  40                 	db	64
   595  00FD11  40                 	db	64
   596  00FD12  40                 	db	64
   597  00FD13  40                 	db	64
   598  00FD14  7F                 	db	127
   599  00FD15  02                 	db	2
   600  00FD16  1C                 	db	28
   601  00FD17  02                 	db	2
   602  00FD18  7F                 	db	127
   603  00FD19  7F                 	db	127
   604  00FD1A  04                 	db	4
   605  00FD1B  08                 	db	8
   606  00FD1C  10                 	db	16
   607  00FD1D  7F                 	db	127
   608  00FD1E  3E                 	db	62
   609  00FD1F  41                 	db	65
   610  00FD20  41                 	db	65
   611  00FD21  41                 	db	65
   612  00FD22  3E                 	db	62
   613  00FD23  7F                 	db	127
   614  00FD24  09                 	db	9
   615  00FD25  09                 	db	9
   616  00FD26  09                 	db	9
   617  00FD27  06                 	db	6
   618  00FD28  3E                 	db	62
   619  00FD29  41                 	db	65
   620  00FD2A  51                 	db	81
   621  00FD2B  21                 	db	33
   622  00FD2C  5E                 	db	94
   623  00FD2D  7F                 	db	127
   624  00FD2E  09                 	db	9
   625  00FD2F  19                 	db	25
   626  00FD30  29                 	db	41
   627  00FD31  46                 	db	70
   628  00FD32                     __end_of_font:
   629                           	opt stack 0
   630  00FD32                     _font2:
   631                           	opt stack 0
   632  00FD32  26                 	db	38
   633  00FD33  49                 	db	73
   634  00FD34  49                 	db	73
   635  00FD35  49                 	db	73
   636  00FD36  32                 	db	50
   637  00FD37  03                 	db	3
   638  00FD38  01                 	db	1
   639  00FD39  7F                 	db	127
   640  00FD3A  01                 	db	1
   641  00FD3B  03                 	db	3
   642  00FD3C  3F                 	db	63
   643  00FD3D  40                 	db	64
   644  00FD3E  40                 	db	64
   645  00FD3F  40                 	db	64
   646  00FD40  3F                 	db	63
   647  00FD41  1F                 	db	31
   648  00FD42  20                 	db	32
   649  00FD43  40                 	db	64
   650  00FD44  20                 	db	32
   651  00FD45  1F                 	db	31
   652  00FD46  3F                 	db	63
   653  00FD47  40                 	db	64
   654  00FD48  38                 	db	56
   655  00FD49  40                 	db	64
   656  00FD4A  3F                 	db	63
   657  00FD4B  63                 	db	99
   658  00FD4C  14                 	db	20
   659  00FD4D  08                 	db	8
   660  00FD4E  14                 	db	20
   661  00FD4F  63                 	db	99
   662  00FD50  03                 	db	3
   663  00FD51  04                 	db	4
   664  00FD52  78                 	db	120
   665  00FD53  04                 	db	4
   666  00FD54  03                 	db	3
   667  00FD55  61                 	db	97
   668  00FD56  59                 	db	89
   669  00FD57  49                 	db	73
   670  00FD58  4D                 	db	77
   671  00FD59  43                 	db	67
   672  00FD5A  00                 	db	0
   673  00FD5B  7F                 	db	127
   674  00FD5C  41                 	db	65
   675  00FD5D  41                 	db	65
   676  00FD5E  41                 	db	65
   677  00FD5F  02                 	db	2
   678  00FD60  04                 	db	4
   679  00FD61  08                 	db	8
   680  00FD62  10                 	db	16
   681  00FD63  20                 	db	32
   682  00FD64  00                 	db	0
   683  00FD65  41                 	db	65
   684  00FD66  41                 	db	65
   685  00FD67  41                 	db	65
   686  00FD68  7F                 	db	127
   687  00FD69  04                 	db	4
   688  00FD6A  02                 	db	2
   689  00FD6B  01                 	db	1
   690  00FD6C  02                 	db	2
   691  00FD6D  04                 	db	4
   692  00FD6E  40                 	db	64
   693  00FD6F  40                 	db	64
   694  00FD70  40                 	db	64
   695  00FD71  40                 	db	64
   696  00FD72  40                 	db	64
   697  00FD73  00                 	db	0
   698  00FD74  03                 	db	3
   699  00FD75  07                 	db	7
   700  00FD76  08                 	db	8
   701  00FD77  00                 	db	0
   702  00FD78  20                 	db	32
   703  00FD79  54                 	db	84
   704  00FD7A  54                 	db	84
   705  00FD7B  78                 	db	120
   706  00FD7C  40                 	db	64
   707  00FD7D  7F                 	db	127
   708  00FD7E  28                 	db	40
   709  00FD7F  44                 	db	68
   710  00FD80  44                 	db	68
   711  00FD81  38                 	db	56
   712  00FD82  38                 	db	56
   713  00FD83  44                 	db	68
   714  00FD84  44                 	db	68
   715  00FD85  44                 	db	68
   716  00FD86  28                 	db	40
   717  00FD87  38                 	db	56
   718  00FD88  44                 	db	68
   719  00FD89  44                 	db	68
   720  00FD8A  28                 	db	40
   721  00FD8B  7F                 	db	127
   722  00FD8C  38                 	db	56
   723  00FD8D  54                 	db	84
   724  00FD8E  54                 	db	84
   725  00FD8F  54                 	db	84
   726  00FD90  18                 	db	24
   727  00FD91  00                 	db	0
   728  00FD92  08                 	db	8
   729  00FD93  7E                 	db	126
   730  00FD94  09                 	db	9
   731  00FD95  02                 	db	2
   732  00FD96  18                 	db	24
   733  00FD97  A4                 	db	164
   734  00FD98  A4                 	db	164
   735  00FD99  9C                 	db	156
   736  00FD9A  78                 	db	120
   737  00FD9B  7F                 	db	127
   738  00FD9C  08                 	db	8
   739  00FD9D  04                 	db	4
   740  00FD9E  04                 	db	4
   741  00FD9F  78                 	db	120
   742  00FDA0  00                 	db	0
   743  00FDA1  44                 	db	68
   744  00FDA2  7D                 	db	125
   745  00FDA3  40                 	db	64
   746  00FDA4  00                 	db	0
   747  00FDA5  20                 	db	32
   748  00FDA6  40                 	db	64
   749  00FDA7  40                 	db	64
   750  00FDA8  3D                 	db	61
   751  00FDA9  00                 	db	0
   752  00FDAA  7F                 	db	127
   753  00FDAB  10                 	db	16
   754  00FDAC  28                 	db	40
   755  00FDAD  44                 	db	68
   756  00FDAE  00                 	db	0
   757  00FDAF  00                 	db	0
   758  00FDB0  41                 	db	65
   759  00FDB1  7F                 	db	127
   760  00FDB2  40                 	db	64
   761  00FDB3  00                 	db	0
   762  00FDB4  7C                 	db	124
   763  00FDB5  04                 	db	4
   764  00FDB6  78                 	db	120
   765  00FDB7  04                 	db	4
   766  00FDB8  78                 	db	120
   767  00FDB9  7C                 	db	124
   768  00FDBA  08                 	db	8
   769  00FDBB  04                 	db	4
   770  00FDBC  04                 	db	4
   771  00FDBD  78                 	db	120
   772  00FDBE  38                 	db	56
   773  00FDBF  44                 	db	68
   774  00FDC0  44                 	db	68
   775  00FDC1  44                 	db	68
   776  00FDC2  38                 	db	56
   777  00FDC3  FC                 	db	252
   778  00FDC4  18                 	db	24
   779  00FDC5  24                 	db	36
   780  00FDC6  24                 	db	36
   781  00FDC7  18                 	db	24
   782  00FDC8  18                 	db	24
   783  00FDC9  24                 	db	36
   784  00FDCA  24                 	db	36
   785  00FDCB  18                 	db	24
   786  00FDCC  FC                 	db	252
   787  00FDCD  7C                 	db	124
   788  00FDCE  08                 	db	8
   789  00FDCF  04                 	db	4
   790  00FDD0  04                 	db	4
   791  00FDD1  08                 	db	8
   792  00FDD2  48                 	db	72
   793  00FDD3  54                 	db	84
   794  00FDD4  54                 	db	84
   795  00FDD5  54                 	db	84
   796  00FDD6  24                 	db	36
   797  00FDD7  04                 	db	4
   798  00FDD8  04                 	db	4
   799  00FDD9  3F                 	db	63
   800  00FDDA  44                 	db	68
   801  00FDDB  24                 	db	36
   802  00FDDC  3C                 	db	60
   803  00FDDD  40                 	db	64
   804  00FDDE  40                 	db	64
   805  00FDDF  20                 	db	32
   806  00FDE0  7C                 	db	124
   807  00FDE1  1C                 	db	28
   808  00FDE2  20                 	db	32
   809  00FDE3  40                 	db	64
   810  00FDE4  20                 	db	32
   811  00FDE5  1C                 	db	28
   812  00FDE6  3C                 	db	60
   813  00FDE7  40                 	db	64
   814  00FDE8  30                 	db	48
   815  00FDE9  40                 	db	64
   816  00FDEA  3C                 	db	60
   817  00FDEB  44                 	db	68
   818  00FDEC  28                 	db	40
   819  00FDED  10                 	db	16
   820  00FDEE  28                 	db	40
   821  00FDEF  44                 	db	68
   822  00FDF0  4C                 	db	76
   823  00FDF1  90                 	db	144
   824  00FDF2  90                 	db	144
   825  00FDF3  90                 	db	144
   826  00FDF4  7C                 	db	124
   827  00FDF5  44                 	db	68
   828  00FDF6  64                 	db	100
   829  00FDF7  54                 	db	84
   830  00FDF8  4C                 	db	76
   831  00FDF9  44                 	db	68
   832  00FDFA  00                 	db	0
   833  00FDFB  08                 	db	8
   834  00FDFC  36                 	db	54
   835  00FDFD  41                 	db	65
   836  00FDFE  00                 	db	0
   837  00FDFF  00                 	db	0
   838  00FE00  00                 	db	0
   839  00FE01  77                 	db	119
   840  00FE02  00                 	db	0
   841  00FE03  00                 	db	0
   842  00FE04  00                 	db	0
   843  00FE05  41                 	db	65
   844  00FE06  36                 	db	54
   845  00FE07  08                 	db	8
   846  00FE08  00                 	db	0
   847  00FE09  02                 	db	2
   848  00FE0A  01                 	db	1
   849  00FE0B  02                 	db	2
   850  00FE0C  04                 	db	4
   851  00FE0D  02                 	db	2
   852  00FE0E                     __end_of_font2:
   853                           	opt stack 0
   854  00FE0E                     _dpowers:
   855                           	opt stack 0
   856  00FE0E  0001               	dw	1
   857  00FE10  0000               	dw	0
   858  00FE12  000A               	dw	10
   859  00FE14  0000               	dw	0
   860  00FE16  0064               	dw	100
   861  00FE18  0000               	dw	0
   862  00FE1A  03E8               	dw	1000
   863  00FE1C  0000               	dw	0
   864  00FE1E  2710               	dw	10000
   865  00FE20  0000               	dw	0
   866  00FE22  86A0               	dw	34464
   867  00FE24  0001               	dw	1
   868  00FE26  4240               	dw	16960
   869  00FE28  000F               	dw	15
   870  00FE2A  9680               	dw	38528
   871  00FE2C  0098               	dw	152
   872  00FE2E  E100               	dw	57600
   873  00FE30  05F5               	dw	1525
   874  00FE32  CA00               	dw	51712
   875  00FE34  3B9A               	dw	15258
   876  00FE36                     __end_of_dpowers:
   877                           	opt stack 0
   878  00FE36                     __npowers_:
   879                           	opt stack 0
   880  00FE36  00                 	db	0
   881  00FE37  80                 	db	128
   882  00FE38  3F                 	db	63
   883  00FE39  CD                 	db	205
   884  00FE3A  CC                 	db	204
   885  00FE3B  3D                 	db	61
   886  00FE3C  D7                 	db	215
   887  00FE3D  23                 	db	35
   888  00FE3E  3C                 	db	60
   889  00FE3F  12                 	db	18
   890  00FE40  83                 	db	131
   891  00FE41  3A                 	db	58
   892  00FE42  B7                 	db	183
   893  00FE43  D1                 	db	209
   894  00FE44  38                 	db	56
   895  00FE45  C6                 	db	198
   896  00FE46  27                 	db	39
   897  00FE47  37                 	db	55
   898  00FE48  38                 	db	56
   899  00FE49  86                 	db	134
   900  00FE4A  35                 	db	53
   901  00FE4B  C0                 	db	192
   902  00FE4C  D6                 	db	214
   903  00FE4D  33                 	db	51
   904  00FE4E  CC                 	db	204
   905  00FE4F  2B                 	db	43
   906  00FE50  32                 	db	50
   907  00FE51  70                 	db	112
   908  00FE52  89                 	db	137
   909  00FE53  30                 	db	48
   910  00FE54  E7                 	db	231
   911  00FE55  DB                 	db	219
   912  00FE56  2E                 	db	46
   913  00FE57  E5                 	db	229
   914  00FE58  3C                 	db	60
   915  00FE59  1E                 	db	30
   916  00FE5A  42                 	db	66
   917  00FE5B  A2                 	db	162
   918  00FE5C  0D                 	db	13
   919  00FE5D                     __end_of__npowers_:
   920                           	opt stack 0
   921  00FE5D                     __powers_:
   922                           	opt stack 0
   923  00FE5D  00                 	db	0
   924  00FE5E  80                 	db	128
   925  00FE5F  3F                 	db	63
   926  00FE60  00                 	db	0
   927  00FE61  20                 	db	32
   928  00FE62  41                 	db	65
   929  00FE63  00                 	db	0
   930  00FE64  C8                 	db	200
   931  00FE65  42                 	db	66
   932  00FE66  00                 	db	0
   933  00FE67  7A                 	db	122
   934  00FE68  44                 	db	68
   935  00FE69  40                 	db	64
   936  00FE6A  1C                 	db	28
   937  00FE6B  46                 	db	70
   938  00FE6C  50                 	db	80
   939  00FE6D  C3                 	db	195
   940  00FE6E  47                 	db	71
   941  00FE6F  24                 	db	36
   942  00FE70  74                 	db	116
   943  00FE71  49                 	db	73
   944  00FE72  97                 	db	151
   945  00FE73  18                 	db	24
   946  00FE74  4B                 	db	75
   947  00FE75  BC                 	db	188
   948  00FE76  BE                 	db	190
   949  00FE77  4C                 	db	76
   950  00FE78  6B                 	db	107
   951  00FE79  6E                 	db	110
   952  00FE7A  4E                 	db	78
   953  00FE7B  03                 	db	3
   954  00FE7C  15                 	db	21
   955  00FE7D  50                 	db	80
   956  00FE7E  79                 	db	121
   957  00FE7F  AD                 	db	173
   958  00FE80  60                 	db	96
   959  00FE81  F3                 	db	243
   960  00FE82  49                 	db	73
   961  00FE83  71                 	db	113
   962  00FE84                     __end_of__powers_:
   963                           	opt stack 0
   964  00FE84                     _hexpowers:
   965                           	opt stack 0
   966  00FE84  0001               	dw	1
   967  00FE86  0000               	dw	0
   968  00FE88  0010               	dw	16
   969  00FE8A  0000               	dw	0
   970  00FE8C  0100               	dw	256
   971  00FE8E  0000               	dw	0
   972  00FE90  1000               	dw	4096
   973  00FE92  0000               	dw	0
   974  00FE94  0000               	dw	0
   975  00FE96  0001               	dw	1
   976  00FE98  0000               	dw	0
   977  00FE9A  0010               	dw	16
   978  00FE9C  0000               	dw	0
   979  00FE9E  0100               	dw	256
   980  00FEA0  0000               	dw	0
   981  00FEA2  1000               	dw	4096
   982  00FEA4                     __end_of_hexpowers:
   983                           	opt stack 0
   984  0000                     _ADCON0	set	4034
   985  0000                     _ADCON0bits	set	4034
   986  0000                     _ADCON1	set	4033
   987  0000                     _ADCON2	set	4032
   988  0000                     _ADRESH	set	4036
   989  0000                     _ADRESL	set	4035
   990  0000                     _CCP1CON	set	4029
   991  0000                     _CCP2CON	set	4026
   992  0000                     _CCPR1L	set	4030
   993  0000                     _CCPR2L	set	4027
   994  0000                     _INTCON2bits	set	4081
   995  0000                     _INTCON3bits	set	4080
   996  0000                     _INTCONbits	set	4082
   997  0000                     _OSCCON	set	4051
   998  0000                     _PIE1bits	set	3997
   999  0000                     _PIR1bits	set	3998
  1000  0000                     _PORTAbits	set	3968
  1001  0000                     _PORTBbits	set	3969
  1002  0000                     _PORTD	set	3971
  1003  0000                     _PORTDbits	set	3971
  1004  0000                     _PORTE	set	3972
  1005  0000                     _PR2	set	4043
  1006  0000                     _RCSTA	set	4011
  1007  0000                     _RCSTAbits	set	4011
  1008  0000                     _SPBRG	set	4015
  1009  0000                     _SPBRGH	set	4016
  1010  0000                     _SSPBUF	set	4041
  1011  0000                     _SSPCON1	set	4038
  1012  0000                     _SSPSTAT	set	4039
  1013  0000                     _SSPSTATbits	set	4039
  1014  0000                     _T0CON	set	4053
  1015  0000                     _T0CONbits	set	4053
  1016  0000                     _T1CON	set	4045
  1017  0000                     _T1CONbits	set	4045
  1018  0000                     _T2CON	set	4042
  1019  0000                     _T3CON	set	4017
  1020  0000                     _TMR0H	set	4055
  1021  0000                     _TMR0L	set	4054
  1022  0000                     _TMR1H	set	4047
  1023  0000                     _TMR1L	set	4046
  1024  0000                     _TMR3L	set	4018
  1025  0000                     _TRISA	set	3986
  1026  0000                     _TRISB	set	3987
  1027  0000                     _TRISC	set	3988
  1028  0000                     _TRISCbits	set	3988
  1029  0000                     _TRISD	set	3989
  1030  0000                     _TRISDbits	set	3989
  1031  0000                     _TRISE	set	3990
  1032  0000                     _TXREG	set	4013
  1033  0000                     _TXSTA	set	4012
  1034  0000                     _TXSTAbits	set	4012
  1035  0000                     _RBPU	set	32655
  1036  0000                     _TRMT	set	32097
  1037  00FEA4                     STR_3:
  1038                           
  1039                           ; BSR set to: 1
  1040  00FEA4  25                 	db	37
  1041  00FEA5  30                 	db	48	;'0'
  1042  00FEA6  32                 	db	50	;'2'
  1043  00FEA7  78                 	db	120	;'x'
  1044  00FEA8  3A                 	db	58	;':'
  1045  00FEA9  25                 	db	37
  1046  00FEAA  30                 	db	48	;'0'
  1047  00FEAB  32                 	db	50	;'2'
  1048  00FEAC  78                 	db	120	;'x'
  1049  00FEAD  3A                 	db	58	;':'
  1050  00FEAE  25                 	db	37
  1051  00FEAF  30                 	db	48	;'0'
  1052  00FEB0  32                 	db	50	;'2'
  1053  00FEB1  78                 	db	120	;'x'
  1054  00FEB2  20                 	db	32
  1055  00FEB3  25                 	db	37
  1056  00FEB4  30                 	db	48	;'0'
  1057  00FEB5  32                 	db	50	;'2'
  1058  00FEB6  78                 	db	120	;'x'
  1059  00FEB7  2F                 	db	47
  1060  00FEB8  25                 	db	37
  1061  00FEB9  30                 	db	48	;'0'
  1062  00FEBA  32                 	db	50	;'2'
  1063  00FEBB  78                 	db	120	;'x'
  1064  00FEBC  2F                 	db	47
  1065  00FEBD  25                 	db	37
  1066  00FEBE  30                 	db	48	;'0'
  1067  00FEBF  32                 	db	50	;'2'
  1068  00FEC0  78                 	db	120	;'x'
  1069  00FEC1  00                 	db	0
  1070  00FEC2                     STR_36:
  1071                           
  1072                           ; BSR set to: 1
  1073  00FEC2  43                 	db	67	;'C'
  1074  00FEC3  61                 	db	97	;'a'
  1075  00FEC4  6E                 	db	110	;'n'
  1076  00FEC5  6E                 	db	110	;'n'
  1077  00FEC6  6F                 	db	111	;'o'
  1078  00FEC7  74                 	db	116	;'t'
  1079  00FEC8  20                 	db	32
  1080  00FEC9  66                 	db	102	;'f'
  1081  00FECA  69                 	db	105	;'i'
  1082  00FECB  6E                 	db	110	;'n'
  1083  00FECC  64                 	db	100	;'d'
  1084  00FECD  20                 	db	32
  1085  00FECE  62                 	db	98	;'b'
  1086  00FECF  75                 	db	117	;'u'
  1087  00FED0  74                 	db	116	;'t'
  1088  00FED1  74                 	db	116	;'t'
  1089  00FED2  6F                 	db	111	;'o'
  1090  00FED3  6E                 	db	110	;'n'
  1091  00FED4  20                 	db	32
  1092  00FED5  0D                 	db	13
  1093  00FED6  0A                 	db	10
  1094  00FED7  00                 	db	0
  1095  00FED8                     STR_5:
  1096                           
  1097                           ; BSR set to: 1
  1098  00FED8  61                 	db	97	;'a'
  1099  00FED9  6C                 	db	108	;'l'
  1100  00FEDA  61                 	db	97	;'a'
  1101  00FEDB  72                 	db	114	;'r'
  1102  00FEDC  6D                 	db	109	;'m'
  1103  00FEDD  20                 	db	32
  1104  00FEDE  3D                 	db	61	;'='
  1105  00FEDF  20                 	db	32
  1106  00FEE0  25                 	db	37
  1107  00FEE1  64                 	db	100	;'d'
  1108  00FEE2  20                 	db	32
  1109  00FEE3  6D                 	db	109	;'m'
  1110  00FEE4  61                 	db	97	;'a'
  1111  00FEE5  74                 	db	116	;'t'
  1112  00FEE6  63                 	db	99	;'c'
  1113  00FEE7  68                 	db	104	;'h'
  1114  00FEE8  20                 	db	32
  1115  00FEE9  3D                 	db	61	;'='
  1116  00FEEA  20                 	db	32
  1117  00FEEB  25                 	db	37
  1118  00FEEC  64                 	db	100	;'d'
  1119  00FEED  00                 	db	0
  1120  00FEEE                     STR_1:
  1121                           
  1122                           ; BSR set to: 1
  1123  00FEEE  0D                 	db	13
  1124  00FEEF  0A                 	db	10
  1125  00FEF0  20                 	db	32
  1126  00FEF1  49                 	db	73	;'I'
  1127  00FEF2  6E                 	db	110	;'n'
  1128  00FEF3  74                 	db	116	;'t'
  1129  00FEF4  65                 	db	101	;'e'
  1130  00FEF5  72                 	db	114	;'r'
  1131  00FEF6  72                 	db	114	;'r'
  1132  00FEF7  75                 	db	117	;'u'
  1133  00FEF8  70                 	db	112	;'p'
  1134  00FEF9  74                 	db	116	;'t'
  1135  00FEFA  20                 	db	32
  1136  00FEFB  32                 	db	50	;'2'
  1137  00FEFC  20                 	db	32
  1138  00FEFD  66                 	db	102	;'f'
  1139  00FEFE  6F                 	db	111	;'o'
  1140  00FEFF  75                 	db	117	;'u'
  1141  00FF00  6E                 	db	110	;'n'
  1142  00FF01  64                 	db	100	;'d'
  1143  00FF02  2E                 	db	46
  1144  00FF03  00                 	db	0
  1145  00FF04                     STR_7:
  1146                           
  1147                           ; BSR set to: 1
  1148  00FF04  45                 	db	69	;'E'
  1149  00FF05  43                 	db	67	;'C'
  1150  00FF06  45                 	db	69	;'E'
  1151  00FF07  33                 	db	51	;'3'
  1152  00FF08  33                 	db	51	;'3'
  1153  00FF09  30                 	db	48	;'0'
  1154  00FF0A  31                 	db	49	;'1'
  1155  00FF0B  4C                 	db	76	;'L'
  1156  00FF0C  20                 	db	32
  1157  00FF0D  53                 	db	83	;'S'
  1158  00FF0E  70                 	db	112	;'p'
  1159  00FF0F  32                 	db	50	;'2'
  1160  00FF10  31                 	db	49	;'1'
  1161  00FF11  20                 	db	32
  1162  00FF12  46                 	db	70	;'F'
  1163  00FF13  69                 	db	105	;'i'
  1164  00FF14  6E                 	db	110	;'n'
  1165  00FF15  61                 	db	97	;'a'
  1166  00FF16  6C                 	db	108	;'l'
  1167  00FF17  00                 	db	0
  1168  00FF18  00                 	db	0
  1169  00FF19                     STR_4:
  1170                           
  1171                           ; BSR set to: 1
  1172  00FF19  20                 	db	32
  1173  00FF1A  54                 	db	84	;'T'
  1174  00FF1B  65                 	db	101	;'e'
  1175  00FF1C  6D                 	db	109	;'m'
  1176  00FF1D  70                 	db	112	;'p'
  1177  00FF1E  20                 	db	32
  1178  00FF1F  3D                 	db	61	;'='
  1179  00FF20  20                 	db	32
  1180  00FF21  25                 	db	37
  1181  00FF22  64                 	db	100	;'d'
  1182  00FF23  20                 	db	32
  1183  00FF24  43                 	db	67	;'C'
  1184  00FF25  20                 	db	32
  1185  00FF26  3D                 	db	61	;'='
  1186  00FF27  20                 	db	32
  1187  00FF28  25                 	db	37
  1188  00FF29  64                 	db	100	;'d'
  1189  00FF2A  20                 	db	32
  1190  00FF2B  46                 	db	70	;'F'
  1191  00FF2C  20                 	db	32
  1192  00FF2D  00                 	db	0
  1193  00FF2E                     STR_25:
  1194                           
  1195                           ; BSR set to: 1
  1196  00FF2E  45                 	db	69	;'E'
  1197  00FF2F  43                 	db	67	;'C'
  1198  00FF30  45                 	db	69	;'E'
  1199  00FF31  33                 	db	51	;'3'
  1200  00FF32  33                 	db	51	;'3'
  1201  00FF33  30                 	db	48	;'0'
  1202  00FF34  31                 	db	49	;'1'
  1203  00FF35  4C                 	db	76	;'L'
  1204  00FF36  20                 	db	32
  1205  00FF37  53                 	db	83	;'S'
  1206  00FF38  70                 	db	112	;'p'
  1207  00FF39  32                 	db	50	;'2'
  1208  00FF3A  31                 	db	49	;'1'
  1209  00FF3B  20                 	db	32
  1210  00FF3C  46                 	db	70	;'F'
  1211  00FF3D  69                 	db	105	;'i'
  1212  00FF3E  6E                 	db	110	;'n'
  1213  00FF3F  61                 	db	97	;'a'
  1214  00FF40  6C                 	db	108	;'l'
  1215  00FF41  00                 	db	0
  1216  00FF42                     STR_6:
  1217                           
  1218                           ; BSR set to: 1
  1219  00FF42  52                 	db	82	;'R'
  1220  00FF43  50                 	db	80	;'P'
  1221  00FF44  4D                 	db	77	;'M'
  1222  00FF45  20                 	db	32
  1223  00FF46  3D                 	db	61	;'='
  1224  00FF47  20                 	db	32
  1225  00FF48  25                 	db	37
  1226  00FF49  64                 	db	100	;'d'
  1227  00FF4A  20                 	db	32
  1228  00FF4B  20                 	db	32
  1229  00FF4C  64                 	db	100	;'d'
  1230  00FF4D  63                 	db	99	;'c'
  1231  00FF4E  20                 	db	32
  1232  00FF4F  3D                 	db	61	;'='
  1233  00FF50  20                 	db	32
  1234  00FF51  25                 	db	37
  1235  00FF52  64                 	db	100	;'d'
  1236  00FF53  0D                 	db	13
  1237  00FF54  0A                 	db	10
  1238  00FF55  00                 	db	0
  1239  00FF56                     STR_37:
  1240                           
  1241                           ; BSR set to: 1
  1242  00FF56  30                 	db	48	;'0'
  1243  00FF57  31                 	db	49	;'1'
  1244  00FF58  32                 	db	50	;'2'
  1245  00FF59  33                 	db	51	;'3'
  1246  00FF5A  34                 	db	52	;'4'
  1247  00FF5B  35                 	db	53	;'5'
  1248  00FF5C  36                 	db	54	;'6'
  1249  00FF5D  37                 	db	55	;'7'
  1250  00FF5E  38                 	db	56	;'8'
  1251  00FF5F  39                 	db	57	;'9'
  1252  00FF60  61                 	db	97	;'a'
  1253  00FF61  62                 	db	98	;'b'
  1254  00FF62  63                 	db	99	;'c'
  1255  00FF63  64                 	db	100	;'d'
  1256  00FF64  65                 	db	101	;'e'
  1257  00FF65  66                 	db	102	;'f'
  1258  00FF66  00                 	db	0
  1259  00FF67                     STR_31:
  1260                           
  1261                           ; BSR set to: 1
  1262  00FF67  20                 	db	32
  1263  00FF68  20                 	db	32
  1264  00FF69  53                 	db	83	;'S'
  1265  00FF6A  65                 	db	101	;'e'
  1266  00FF6B  74                 	db	116	;'t'
  1267  00FF6C  20                 	db	32
  1268  00FF6D  46                 	db	70	;'F'
  1269  00FF6E  61                 	db	97	;'a'
  1270  00FF6F  6E                 	db	110	;'n'
  1271  00FF70  20                 	db	32
  1272  00FF71  54                 	db	84	;'T'
  1273  00FF72  65                 	db	101	;'e'
  1274  00FF73  6D                 	db	109	;'m'
  1275  00FF74  70                 	db	112	;'p'
  1276  00FF75  00                 	db	0
  1277  00FF76                     STR_8:
  1278                           
  1279                           ; BSR set to: 1
  1280  00FF76  54                 	db	84	;'T'
  1281  00FF77  65                 	db	101	;'e'
  1282  00FF78  6D                 	db	109	;'m'
  1283  00FF79  70                 	db	112	;'p'
  1284  00FF7A  65                 	db	101	;'e'
  1285  00FF7B  72                 	db	114	;'r'
  1286  00FF7C  61                 	db	97	;'a'
  1287  00FF7D  74                 	db	116	;'t'
  1288  00FF7E  75                 	db	117	;'u'
  1289  00FF7F  72                 	db	114	;'r'
  1290  00FF80  65                 	db	101	;'e'
  1291  00FF81  3A                 	db	58	;':'
  1292  00FF82  00                 	db	0
  1293  00FF83                     STR_15:
  1294                           
  1295                           ; BSR set to: 1
  1296  00FF83  46                 	db	70	;'F'
  1297  00FF84  41                 	db	65	;'A'
  1298  00FF85  4E                 	db	78	;'N'
  1299  00FF86  20                 	db	32
  1300  00FF87  53                 	db	83	;'S'
  1301  00FF88  65                 	db	101	;'e'
  1302  00FF89  74                 	db	116	;'t'
  1303  00FF8A  20                 	db	32
  1304  00FF8B  54                 	db	84	;'T'
  1305  00FF8C  65                 	db	101	;'e'
  1306  00FF8D  6D                 	db	109	;'m'
  1307  00FF8E  70                 	db	112	;'p'
  1308  00FF8F  00                 	db	0
  1309  00FF90                     STR_33:
  1310                           
  1311                           ; BSR set to: 1
  1312  00FF90  54                 	db	84	;'T'
  1313  00FF91  69                 	db	105	;'i'
  1314  00FF92  6D                 	db	109	;'m'
  1315  00FF93  65                 	db	101	;'e'
  1316  00FF94  20                 	db	32
  1317  00FF95  53                 	db	83	;'S'
  1318  00FF96  65                 	db	101	;'e'
  1319  00FF97  74                 	db	116	;'t'
  1320  00FF98  75                 	db	117	;'u'
  1321  00FF99  70                 	db	112	;'p'
  1322  00FF9A  00                 	db	0
  1323  00FF9B  00                 	db	0
  1324  00FF9C                     STR_30:
  1325                           
  1326                           ; BSR set to: 1
  1327  00FF9C  20                 	db	32
  1328  00FF9D  46                 	db	70	;'F'
  1329  00FF9E  61                 	db	97	;'a'
  1330  00FF9F  6E                 	db	110	;'n'
  1331  00FFA0  20                 	db	32
  1332  00FFA1  53                 	db	83	;'S'
  1333  00FFA2  65                 	db	101	;'e'
  1334  00FFA3  74                 	db	116	;'t'
  1335  00FFA4  75                 	db	117	;'u'
  1336  00FFA5  70                 	db	112	;'p'
  1337  00FFA6  00                 	db	0
  1338  00FFA7  00                 	db	0
  1339  00FFA8                     STR_28:
  1340                           
  1341                           ; BSR set to: 1
  1342  00FFA8  25                 	db	37
  1343  00FFA9  78                 	db	120	;'x'
  1344  00FFAA  3A                 	db	58	;':'
  1345  00FFAB  25                 	db	37
  1346  00FFAC  78                 	db	120	;'x'
  1347  00FFAD  3A                 	db	58	;':'
  1348  00FFAE  25                 	db	37
  1349  00FFAF  78                 	db	120	;'x'
  1350  00FFB0  0D                 	db	13
  1351  00FFB1  0A                 	db	10
  1352  00FFB2  00                 	db	0
  1353  00FFB3                     STR_26:
  1354                           
  1355                           ; BSR set to: 1
  1356  00FFB3  41                 	db	65	;'A'
  1357  00FFB4  6C                 	db	108	;'l'
  1358  00FFB5  72                 	db	114	;'r'
  1359  00FFB6  6D                 	db	109	;'m'
  1360  00FFB7  20                 	db	32
  1361  00FFB8  53                 	db	83	;'S'
  1362  00FFB9  65                 	db	101	;'e'
  1363  00FFBA  74                 	db	116	;'t'
  1364  00FFBB  75                 	db	117	;'u'
  1365  00FFBC  70                 	db	112	;'p'
  1366  00FFBD  00                 	db	0
  1367  00FFBE                     STR_13:
  1368                           
  1369                           ; BSR set to: 1
  1370  00FFBE  41                 	db	65	;'A'
  1371  00FFBF  6C                 	db	108	;'l'
  1372  00FFC0  61                 	db	97	;'a'
  1373  00FFC1  72                 	db	114	;'r'
  1374  00FFC2  6D                 	db	109	;'m'
  1375  00FFC3  20                 	db	32
  1376  00FFC4  54                 	db	84	;'T'
  1377  00FFC5  69                 	db	105	;'i'
  1378  00FFC6  6D                 	db	109	;'m'
  1379  00FFC7  65                 	db	101	;'e'
  1380  00FFC8  00                 	db	0
  1381  00FFC9                     STR_14:
  1382                           
  1383                           ; BSR set to: 1
  1384  00FFC9  41                 	db	65	;'A'
  1385  00FFCA  6C                 	db	108	;'l'
  1386  00FFCB  61                 	db	97	;'a'
  1387  00FFCC  72                 	db	114	;'r'
  1388  00FFCD  6D                 	db	109	;'m'
  1389  00FFCE  20                 	db	32
  1390  00FFCF  53                 	db	83	;'S'
  1391  00FFD0  57                 	db	87	;'W'
  1392  00FFD1  00                 	db	0
  1393  00FFD2                     STR_16:
  1394                           
  1395                           ; BSR set to: 1
  1396  00FFD2  46                 	db	70	;'F'
  1397  00FFD3  61                 	db	97	;'a'
  1398  00FFD4  6E                 	db	110	;'n'
  1399  00FFD5  20                 	db	32
  1400  00FFD6  53                 	db	83	;'S'
  1401  00FFD7  57                 	db	87	;'W'
  1402  00FFD8  00                 	db	0
  1403  00FFD9                     STR_2:
  1404                           
  1405                           ; BSR set to: 1
  1406  00FFD9  76                 	db	118	;'v'
  1407  00FFDA  6F                 	db	111	;'o'
  1408  00FFDB  6C                 	db	108	;'l'
  1409  00FFDC  74                 	db	116	;'t'
  1410  00FFDD  20                 	db	32
  1411  00FFDE  3D                 	db	61	;'='
  1412  00FFDF  00                 	db	0
  1413  00FFE0                     STR_12:
  1414                           
  1415                           ; BSR set to: 1
  1416  00FFE0  44                 	db	68	;'D'
  1417  00FFE1  61                 	db	97	;'a'
  1418  00FFE2  74                 	db	116	;'t'
  1419  00FFE3  65                 	db	101	;'e'
  1420  00FFE4  00                 	db	0
  1421  00FFE5                     STR_19:
  1422                           
  1423                           ; BSR set to: 1
  1424  00FFE5  56                 	db	86	;'V'
  1425  00FFE6  6F                 	db	111	;'o'
  1426  00FFE7  6C                 	db	108	;'l'
  1427  00FFE8  74                 	db	116	;'t'
  1428  00FFE9  00                 	db	0
  1429  00FFEA                     STR_21:
  1430                           
  1431                           ; BSR set to: 1
  1432  00FFEA  4F                 	db	79	;'O'
  1433  00FFEB  4E                 	db	78	;'N'
  1434  00FFEC  20                 	db	32
  1435  00FFED  00                 	db	0
  1436  00FFEE                     STR_22:
  1437                           
  1438                           ; BSR set to: 1
  1439  00FFEE  4F                 	db	79	;'O'
  1440  00FFEF  46                 	db	70	;'F'
  1441  00FFF0  46                 	db	70	;'F'
  1442  00FFF1  00                 	db	0
  1443  00FFF2                     STR_20:
  1444                           
  1445                           ; BSR set to: 1
  1446  00FFF2  52                 	db	82	;'R'
  1447  00FFF3  50                 	db	80	;'P'
  1448  00FFF4  4D                 	db	77	;'M'
  1449  00FFF5  00                 	db	0
  1450  00FFF6                     STR_9:
  1451                           
  1452                           ; BSR set to: 1
  1453  00FFF6  43                 	db	67	;'C'
  1454  00FFF7  2F                 	db	47
  1455  00FFF8  00                 	db	0
  1456  00FFF9                     STR_17:
  1457                           
  1458                           ; BSR set to: 1
  1459  00FFF9  44                 	db	68	;'D'
  1460  00FFFA  43                 	db	67	;'C'
  1461  00FFFB  00                 	db	0
  1462  00FFFC                     STR_18:
  1463                           
  1464                           ; BSR set to: 1
  1465  00FFFC  52                 	db	82	;'R'
  1466  00FFFD  4D                 	db	77	;'M'
  1467  00FFFE  00                 	db	0
  1468  0000                     
  1469                           ; #config settings
  1470  00FFFF  00                 	db	0	; dummy byte at the end
  1471  0000                     
  1472                           	psect	cinit
  1473  008A50                     __pcinit:
  1474                           	opt stack 0
  1475  008A50                     start_initialization:
  1476                           	opt stack 0
  1477  008A50                     __initialization:
  1478                           	opt stack 0
  1479                           
  1480                           ; Clear objects allocated to BANK1 (50 bytes)
  1481  008A50  EE01  F098         	lfsr	0,__pbssBANK1
  1482  008A54  0E32               	movlw	50
  1483  008A56                     clear_0:
  1484  008A56  6AEE               	clrf	postinc0,c
  1485  008A58  06E8               	decf	wreg,f,c
  1486  008A5A  E1FD               	bnz	clear_0
  1487                           
  1488                           ; Clear objects allocated to BANK0 (14 bytes)
  1489  008A5C  EE00  F0E4         	lfsr	0,__pbssBANK0
  1490  008A60  0E0E               	movlw	14
  1491  008A62                     clear_1:
  1492  008A62  6AEE               	clrf	postinc0,c
  1493  008A64  06E8               	decf	wreg,f,c
  1494  008A66  E1FD               	bnz	clear_1
  1495                           
  1496                           ; Clear objects allocated to COMRAM (5 bytes)
  1497  008A68  6A7F               	clrf	(__pbssCOMRAM+4)& (0+255),c
  1498  008A6A  6A7E               	clrf	(__pbssCOMRAM+3)& (0+255),c
  1499  008A6C  6A7D               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1500  008A6E  6A7C               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1501  008A70  6A7B               	clrf	__pbssCOMRAM& (0+255),c
  1502                           
  1503                           ; Initialize objects allocated to BANK1 (152 bytes)
  1504                           ; load TBLPTR registers with __pidataBANK1
  1505  008A72  0E62               	movlw	low __pidataBANK1
  1506  008A74  6EF6               	movwf	tblptrl,c
  1507  008A76  0E7E               	movlw	high __pidataBANK1
  1508  008A78  6EF7               	movwf	tblptrh,c
  1509  008A7A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1510  008A7C  6EF8               	movwf	tblptru,c
  1511  008A7E  EE01  F000         	lfsr	0,__pdataBANK1
  1512  008A82  EE10 F098          	lfsr	1,152
  1513  008A86                     copy_data0:
  1514  008A86  0009               	tblrd		*+
  1515  008A88  CFF5 FFEE          	movff	tablat,postinc0
  1516  008A8C  50E5               	movf	postdec1,w,c
  1517  008A8E  50E1               	movf	fsr1l,w,c
  1518  008A90  E1FA               	bnz	copy_data0
  1519  008A92                     end_of_initialization:
  1520                           	opt stack 0
  1521  008A92                     __end_of__initialization:
  1522                           	opt stack 0
  1523  008A92  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1524  008A94  6EF8               	movwf	tblptru,c
  1525  008A96  0100               	movlb	0
  1526  008A98  EFDB  F028         	goto	_main	;jump to C main() function
  1527                           tblptru	equ	0xFF8
  1528                           tblptrh	equ	0xFF7
  1529                           tblptrl	equ	0xFF6
  1530                           tablat	equ	0xFF5
  1531                           postinc0	equ	0xFEE
  1532                           wreg	equ	0xFE8
  1533                           postdec1	equ	0xFE5
  1534                           fsr1l	equ	0xFE1
  1535                           
  1536                           	psect	bssCOMRAM
  1537  00007B                     __pbssCOMRAM:
  1538                           	opt stack 0
  1539  00007B                     _Time_Elapsed:
  1540                           	opt stack 0
  1541  00007B                     	ds	2
  1542  00007D                     _FAN:
  1543                           	opt stack 0
  1544  00007D                     	ds	1
  1545  00007E                     __tft_type:
  1546                           	opt stack 0
  1547  00007E                     	ds	1
  1548  00007F                     _dow:
  1549                           	opt stack 0
  1550  00007F                     	ds	1
  1551                           tblptru	equ	0xFF8
  1552                           tblptrh	equ	0xFF7
  1553                           tblptrl	equ	0xFF6
  1554                           tablat	equ	0xFF5
  1555                           postinc0	equ	0xFEE
  1556                           wreg	equ	0xFE8
  1557                           postdec1	equ	0xFE5
  1558                           fsr1l	equ	0xFE1
  1559                           
  1560                           	psect	bssBANK0
  1561  0000E4                     __pbssBANK0:
  1562                           	opt stack 0
  1563  0000E4                     _txt:
  1564                           	opt stack 0
  1565  0000E4                     	ds	2
  1566  0000E6                     _alarm_date:
  1567                           	opt stack 0
  1568  0000E6                     	ds	1
  1569  0000E7                     _alarm_hour:
  1570                           	opt stack 0
  1571  0000E7                     	ds	1
  1572  0000E8                     _alarm_minute:
  1573                           	opt stack 0
  1574  0000E8                     	ds	1
  1575  0000E9                     _alarm_second:
  1576                           	opt stack 0
  1577  0000E9                     	ds	1
  1578  0000EA                     _day:
  1579                           	opt stack 0
  1580  0000EA                     	ds	1
  1581  0000EB                     _duty_cycle:
  1582                           	opt stack 0
  1583  0000EB                     	ds	1
  1584  0000EC                     _found:
  1585                           	opt stack 0
  1586  0000EC                     	ds	1
  1587  0000ED                     _hour:
  1588                           	opt stack 0
  1589  0000ED                     	ds	1
  1590  0000EE                     _minute:
  1591                           	opt stack 0
  1592  0000EE                     	ds	1
  1593  0000EF                     _month:
  1594                           	opt stack 0
  1595  0000EF                     	ds	1
  1596  0000F0                     _second:
  1597                           	opt stack 0
  1598  0000F0                     	ds	1
  1599  0000F1                     _year:
  1600                           	opt stack 0
  1601  0000F1                     	ds	1
  1602                           tblptru	equ	0xFF8
  1603                           tblptrh	equ	0xFF7
  1604                           tblptrl	equ	0xFF6
  1605                           tablat	equ	0xFF5
  1606                           postinc0	equ	0xFEE
  1607                           wreg	equ	0xFE8
  1608                           postdec1	equ	0xFE5
  1609                           fsr1l	equ	0xFE1
  1610                           
  1611                           	psect	bssBANK1
  1612  000198                     __pbssBANK1:
  1613                           	opt stack 0
  1614  000198                     _Nec_code:
  1615                           	opt stack 0
  1616  000198                     	ds	4
  1617  00019C                     _volt:
  1618                           	opt stack 0
  1619  00019C                     	ds	3
  1620  00019F                     _ALARMEN:
  1621                           	opt stack 0
  1622  00019F                     	ds	2
  1623  0001A1                     _DS1621_tempC:
  1624                           	opt stack 0
  1625  0001A1                     	ds	2
  1626  0001A3                     _DS1621_tempF:
  1627                           	opt stack 0
  1628  0001A3                     	ds	2
  1629  0001A5                     _MATCHED:
  1630                           	opt stack 0
  1631  0001A5                     	ds	2
  1632  0001A7                     _alarm_mode:
  1633                           	opt stack 0
  1634  0001A7                     	ds	2
  1635  0001A9                     _color:
  1636                           	opt stack 0
  1637  0001A9                     	ds	2
  1638  0001AB                     _nbr:
  1639                           	opt stack 0
  1640  0001AB                     	ds	2
  1641  0001AD                     _nec_ok:
  1642                           	opt stack 0
  1643  0001AD                     	ds	2
  1644  0001AF                     _rpm:
  1645                           	opt stack 0
  1646  0001AF                     	ds	2
  1647  0001B1                     _rps:
  1648                           	opt stack 0
  1649  0001B1                     	ds	2
  1650  0001B3                     _INT1_flag:
  1651                           	opt stack 0
  1652  0001B3                     	ds	1
  1653  0001B4                     _INT2_flag:
  1654                           	opt stack 0
  1655  0001B4                     	ds	1
  1656  0001B5                     _In_Alarm_Time_Setup:
  1657                           	opt stack 0
  1658  0001B5                     	ds	1
  1659  0001B6                     _In_Fan_Temp_Setup:
  1660                           	opt stack 0
  1661  0001B6                     	ds	1
  1662  0001B7                     _In_Time_Setup:
  1663                           	opt stack 0
  1664  0001B7                     	ds	1
  1665  0001B8                     _Nec_code1:
  1666                           	opt stack 0
  1667  0001B8                     	ds	1
  1668  0001B9                     _Nec_state:
  1669                           	opt stack 0
  1670  0001B9                     	ds	1
  1671  0001BA                     _Select_Alarm_Field:
  1672                           	opt stack 0
  1673  0001BA                     	ds	1
  1674  0001BB                     _Select_Fan_Temp_Field:
  1675                           	opt stack 0
  1676  0001BB                     	ds	1
  1677  0001BC                     _Select_Field:
  1678                           	opt stack 0
  1679  0001BC                     	ds	1
  1680  0001BD                     _bit_count:
  1681                           	opt stack 0
  1682  0001BD                     	ds	1
  1683  0001BE                     _colstart:
  1684                           	opt stack 0
  1685  0001BE                     	ds	1
  1686  0001BF                     _rowstart:
  1687                           	opt stack 0
  1688  0001BF                     	ds	1
  1689  0001C0                     _setup_alarm_hour:
  1690                           	opt stack 0
  1691  0001C0                     	ds	1
  1692  0001C1                     _setup_alarm_minute:
  1693                           	opt stack 0
  1694  0001C1                     	ds	1
  1695  0001C2                     _setup_alarm_second:
  1696                           	opt stack 0
  1697  0001C2                     	ds	1
  1698  0001C3                     _setup_day:
  1699                           	opt stack 0
  1700  0001C3                     	ds	1
  1701  0001C4                     _setup_fan_set_temp:
  1702                           	opt stack 0
  1703  0001C4                     	ds	1
  1704  0001C5                     _setup_hour:
  1705                           	opt stack 0
  1706  0001C5                     	ds	1
  1707  0001C6                     _setup_minute:
  1708                           	opt stack 0
  1709  0001C6                     	ds	1
  1710  0001C7                     _setup_month:
  1711                           	opt stack 0
  1712  0001C7                     	ds	1
  1713  0001C8                     _setup_second:
  1714                           	opt stack 0
  1715  0001C8                     	ds	1
  1716  0001C9                     _setup_year:
  1717                           	opt stack 0
  1718  0001C9                     	ds	1
  1719                           tblptru	equ	0xFF8
  1720                           tblptrh	equ	0xFF7
  1721                           tblptrl	equ	0xFF6
  1722                           tablat	equ	0xFF5
  1723                           postinc0	equ	0xFEE
  1724                           wreg	equ	0xFE8
  1725                           postdec1	equ	0xFE5
  1726                           fsr1l	equ	0xFE1
  1727                           
  1728                           	psect	dataBANK1
  1729  000100                     __pdataBANK1:
  1730                           	opt stack 0
  1731  000100                     _buffer:
  1732                           	opt stack 0
  1733  000100                     	ds	31
  1734  00011F                     _array1:
  1735                           	opt stack 0
  1736  00011F                     	ds	21
  1737  000134                     _fan_set_temp:
  1738                           	opt stack 0
  1739  000134                     	ds	1
  1740  000135                     _tempSecond:
  1741                           	opt stack 0
  1742  000135                     	ds	1
  1743  000136                     _wrap:
  1744                           	opt stack 0
  1745  000136                     	ds	1
  1746  000137                     _alarm_time:
  1747                           	opt stack 0
  1748  000137                     	ds	9
  1749  000140                     _date:
  1750                           	opt stack 0
  1751  000140                     	ds	9
  1752  000149                     _setup_alarm_time:
  1753                           	opt stack 0
  1754  000149                     	ds	9
  1755  000152                     _setup_date:
  1756                           	opt stack 0
  1757  000152                     	ds	9
  1758  00015B                     _setup_time:
  1759                           	opt stack 0
  1760  00015B                     	ds	9
  1761  000164                     _time:
  1762                           	opt stack 0
  1763  000164                     	ds	9
  1764  00016D                     _Volt_Txt:
  1765                           	opt stack 0
  1766  00016D                     	ds	6
  1767  000173                     _Fan_Set_Temp_Txt:
  1768                           	opt stack 0
  1769  000173                     	ds	5
  1770  000178                     _RPM_Txt:
  1771                           	opt stack 0
  1772  000178                     	ds	5
  1773  00017D                     _setup_fan_set_text:
  1774                           	opt stack 0
  1775  00017D                     	ds	5
  1776  000182                     _Alarm_SW_Txt:
  1777                           	opt stack 0
  1778  000182                     	ds	4
  1779  000186                     _DC_Txt:
  1780                           	opt stack 0
  1781  000186                     	ds	4
  1782  00018A                     _Fan_SW_Txt:
  1783                           	opt stack 0
  1784  00018A                     	ds	4
  1785  00018E                     _tempC:
  1786                           	opt stack 0
  1787  00018E                     	ds	4
  1788  000192                     _tempF:
  1789                           	opt stack 0
  1790  000192                     	ds	4
  1791  000196                     _RTC_ALARM_Txt:
  1792                           	opt stack 0
  1793  000196                     	ds	2
  1794                           tblptru	equ	0xFF8
  1795                           tblptrh	equ	0xFF7
  1796                           tblptrl	equ	0xFF6
  1797                           tablat	equ	0xFF5
  1798                           postinc0	equ	0xFEE
  1799                           wreg	equ	0xFE8
  1800                           postdec1	equ	0xFE5
  1801                           fsr1l	equ	0xFE1
  1802                           
  1803                           	psect	cstackBANK2
  1804  000200                     __pcstackBANK2:
  1805                           	opt stack 0
  1806  000200                     _printf$3114:
  1807                           	opt stack 0
  1808                           
  1809                           ; 3 bytes @ 0x0
  1810  000200                     	ds	3
  1811  000203                     printf@idx:
  1812                           	opt stack 0
  1813                           
  1814                           ; 1 bytes @ 0x3
  1815  000203                     	ds	1
  1816  000204                     _printf$2205:
  1817                           	opt stack 0
  1818                           
  1819                           ; 2 bytes @ 0x4
  1820  000204                     	ds	2
  1821  000206                     _printf$2206:
  1822                           	opt stack 0
  1823                           
  1824                           ; 2 bytes @ 0x6
  1825  000206                     	ds	2
  1826  000208                     _printf$2209:
  1827                           	opt stack 0
  1828                           
  1829                           ; 2 bytes @ 0x8
  1830  000208                     	ds	2
  1831  00020A                     _printf$2210:
  1832                           	opt stack 0
  1833                           
  1834                           ; 2 bytes @ 0xA
  1835  00020A                     	ds	2
  1836  00020C                     _printf$2211:
  1837                           	opt stack 0
  1838                           
  1839                           ; 2 bytes @ 0xC
  1840  00020C                     	ds	2
  1841  00020E                     _printf$2212:
  1842                           	opt stack 0
  1843                           
  1844                           ; 2 bytes @ 0xE
  1845  00020E                     	ds	2
  1846  000210                     printf@temp:
  1847                           	opt stack 0
  1848                           
  1849                           ; 3 bytes @ 0x10
  1850  000210                     	ds	3
  1851  000213                     printf@ap:
  1852                           	opt stack 0
  1853                           
  1854                           ; 2 bytes @ 0x13
  1855  000213                     	ds	2
  1856  000215                     printf@tmpval:
  1857                           	opt stack 0
  1858                           
  1859                           ; 4 bytes @ 0x15
  1860  000215                     	ds	4
  1861  000219                     printf@exp:
  1862                           	opt stack 0
  1863                           
  1864                           ; 2 bytes @ 0x19
  1865  000219                     	ds	2
  1866  00021B                     printf@width:
  1867                           	opt stack 0
  1868                           
  1869                           ; 2 bytes @ 0x1B
  1870  00021B                     	ds	2
  1871  00021D                     printf@val:
  1872                           	opt stack 0
  1873                           
  1874                           ; 4 bytes @ 0x1D
  1875  00021D                     	ds	4
  1876  000221                     printf@fval:
  1877                           	opt stack 0
  1878                           
  1879                           ; 3 bytes @ 0x21
  1880  000221                     	ds	3
  1881  000224                     printf@prec:
  1882                           	opt stack 0
  1883                           
  1884                           ; 2 bytes @ 0x24
  1885  000224                     	ds	2
  1886  000226                     printf@c:
  1887                           	opt stack 0
  1888                           
  1889                           ; 1 bytes @ 0x26
  1890  000226                     	ds	1
  1891  000227                     printf@flag:
  1892                           	opt stack 0
  1893                           
  1894                           ; 2 bytes @ 0x27
  1895  000227                     	ds	2
  1896                           tblptru	equ	0xFF8
  1897                           tblptrh	equ	0xFF7
  1898                           tblptrl	equ	0xFF6
  1899                           tablat	equ	0xFF5
  1900                           postinc0	equ	0xFEE
  1901                           wreg	equ	0xFE8
  1902                           postdec1	equ	0xFE5
  1903                           fsr1l	equ	0xFE1
  1904                           
  1905                           	psect	cstackBANK1
  1906  0001CA                     __pcstackBANK1:
  1907                           	opt stack 0
  1908  0001CA                     ?_printf:
  1909                           	opt stack 0
  1910  0001CA                     printf@f:
  1911                           	opt stack 0
  1912                           
  1913                           ; 2 bytes @ 0x0
  1914  0001CA                     	ds	14
  1915  0001D8                     ??_printf:
  1916                           
  1917                           ; 0 bytes @ 0xE
  1918  0001D8                     	ds	6
  1919  0001DE                     ??_main:
  1920                           
  1921                           ; 0 bytes @ 0x14
  1922  0001DE                     	ds	1
  1923                           tblptru	equ	0xFF8
  1924                           tblptrh	equ	0xFF7
  1925                           tblptrl	equ	0xFF6
  1926                           tablat	equ	0xFF5
  1927                           postinc0	equ	0xFEE
  1928                           wreg	equ	0xFE8
  1929                           postdec1	equ	0xFE5
  1930                           fsr1l	equ	0xFE1
  1931                           
  1932                           	psect	cstackBANK0
  1933  000080                     __pcstackBANK0:
  1934                           	opt stack 0
  1935  000080                     ??_chkisr:
  1936                           
  1937                           ; 0 bytes @ 0x0
  1938  000080                     	ds	14
  1939  00008E                     ??_bcd_2_dec:
  1940  00008E                     ??_isdigit:
  1941  00008E                     ?_strlen:
  1942                           	opt stack 0
  1943  00008E                     ?_get_full_ADC:
  1944                           	opt stack 0
  1945  00008E                     ?_get_duty_cycle:
  1946                           	opt stack 0
  1947  00008E                     ?___wmul:
  1948                           	opt stack 0
  1949  00008E                     ?___ftpack:
  1950                           	opt stack 0
  1951  00008E                     ?__tdiv_to_l_:
  1952                           	opt stack 0
  1953  00008E                     ?__div_to_l_:
  1954                           	opt stack 0
  1955  00008E                     ?___lldiv:
  1956                           	opt stack 0
  1957  00008E                     I2C_Read@ack:
  1958                           	opt stack 0
  1959  00008E                     I2C_Write@outByte:
  1960                           	opt stack 0
  1961  00008E                     putch@c:
  1962                           	opt stack 0
  1963  00008E                     spiwrite@x:
  1964                           	opt stack 0
  1965  00008E                     Set_RGB_Color@color:
  1966                           	opt stack 0
  1967  00008E                     get_duty_cycle@temp:
  1968                           	opt stack 0
  1969  00008E                     Wait_One_Sec@k:
  1970                           	opt stack 0
  1971  00008E                     OpenUSART@spbrg:
  1972                           	opt stack 0
  1973  00008E                     ___wmul@multiplier:
  1974                           	opt stack 0
  1975  00008E                     strcpy@to:
  1976                           	opt stack 0
  1977  00008E                     strlen@s:
  1978                           	opt stack 0
  1979  00008E                     __div_to_l_@f1:
  1980                           	opt stack 0
  1981  00008E                     ___ftpack@arg:
  1982                           	opt stack 0
  1983  00008E                     __tdiv_to_l_@f1:
  1984                           	opt stack 0
  1985  00008E                     I2C_Init@c:
  1986                           	opt stack 0
  1987  00008E                     ___lldiv@dividend:
  1988                           	opt stack 0
  1989                           
  1990                           ; 4 bytes @ 0xE
  1991  00008E                     	ds	1
  1992  00008F                     I2C_Read@n:
  1993                           	opt stack 0
  1994  00008F                     I2C_Write@n:
  1995                           	opt stack 0
  1996  00008F                     spiwrite@spidata:
  1997                           	opt stack 0
  1998  00008F                     _isdigit$2749:
  1999                           	opt stack 0
  2000                           
  2001                           ; 1 bytes @ 0xF
  2002  00008F                     	ds	1
  2003  000090                     ??_strlen:
  2004  000090                     ??_get_full_ADC:
  2005  000090                     I2C_Read@inByte:
  2006                           	opt stack 0
  2007  000090                     I2C_Write_Address_Write_One_Byte@Address:
  2008                           	opt stack 0
  2009  000090                     I2C_Write_Cmd_Only@Cmd:
  2010                           	opt stack 0
  2011  000090                     I2C_Write_Cmd_Write_Data@Cmd:
  2012                           	opt stack 0
  2013  000090                     write_command@cmd_:
  2014                           	opt stack 0
  2015  000090                     write_data@data_:
  2016                           	opt stack 0
  2017  000090                     OpenUSART@config:
  2018                           	opt stack 0
  2019  000090                     isdigit@c:
  2020                           	opt stack 0
  2021  000090                     get_duty_cycle@set_temp:
  2022                           	opt stack 0
  2023  000090                     bcd_2_dec@dec:
  2024                           	opt stack 0
  2025  000090                     ___wmul@multiplicand:
  2026                           	opt stack 0
  2027  000090                     strcpy@from:
  2028                           	opt stack 0
  2029                           
  2030                           ; 2 bytes @ 0x10
  2031  000090                     	ds	1
  2032  000091                     ?_DS1621_Read_Temp:
  2033                           	opt stack 0
  2034  000091                     I2C_Write_Address_Read_One_Byte@Address:
  2035                           	opt stack 0
  2036  000091                     I2C_Write_Address_Write_One_Byte@Data_Out:
  2037                           	opt stack 0
  2038  000091                     I2C_Write_Cmd_Only@Device:
  2039                           	opt stack 0
  2040  000091                     I2C_Write_Cmd_Write_Data@Data_Out:
  2041                           	opt stack 0
  2042  000091                     DS3231_Read_Time@Address:
  2043                           	opt stack 0
  2044  000091                     DS3231_Read_Alarm_Time@Address:
  2045                           	opt stack 0
  2046  000091                     setAddrWindow@y0:
  2047                           	opt stack 0
  2048  000091                     ___ftpack@exp:
  2049                           	opt stack 0
  2050  000091                     __div_to_l_@f2:
  2051                           	opt stack 0
  2052  000091                     __tdiv_to_l_@f2:
  2053                           	opt stack 0
  2054                           
  2055                           ; 3 bytes @ 0x11
  2056  000091                     	ds	1
  2057  000092                     ??_get_duty_cycle:
  2058  000092                     I2C_Write_Address_Read_One_Byte@Data_Ret:
  2059                           	opt stack 0
  2060  000092                     I2C_Write_Address_Write_One_Byte@Device:
  2061                           	opt stack 0
  2062  000092                     I2C_Write_Cmd_Write_Data@Device:
  2063                           	opt stack 0
  2064  000092                     DS3231_Read_Time@Device:
  2065                           	opt stack 0
  2066  000092                     DS3231_Read_Alarm_Time@Device:
  2067                           	opt stack 0
  2068  000092                     setAddrWindow@x1:
  2069                           	opt stack 0
  2070  000092                     bcd_2_dec@bcd:
  2071                           	opt stack 0
  2072  000092                     ___ftpack@sign:
  2073                           	opt stack 0
  2074  000092                     get_full_ADC@result:
  2075                           	opt stack 0
  2076  000092                     ___wmul@product:
  2077                           	opt stack 0
  2078  000092                     strcpy@cp:
  2079                           	opt stack 0
  2080  000092                     strlen@cp:
  2081                           	opt stack 0
  2082  000092                     ___lldiv@divisor:
  2083                           	opt stack 0
  2084                           
  2085                           ; 4 bytes @ 0x12
  2086  000092                     	ds	1
  2087  000093                     ??___ftpack:
  2088  000093                     I2C_Write_Address_Read_One_Byte@Device:
  2089                           	opt stack 0
  2090  000093                     DS1621_Init@Device:
  2091                           	opt stack 0
  2092  000093                     DS1621_Read_Temp@Cmd:
  2093                           	opt stack 0
  2094  000093                     setAddrWindow@y1:
  2095                           	opt stack 0
  2096                           
  2097                           ; 1 bytes @ 0x13
  2098  000093                     	ds	1
  2099  000094                     ??__tdiv_to_l_:
  2100  000094                     ?___awdiv:
  2101                           	opt stack 0
  2102  000094                     DS1621_Read_Temp@Data_Ret:
  2103                           	opt stack 0
  2104  000094                     DS3231_Init@Address_7:
  2105                           	opt stack 0
  2106  000094                     setAddrWindow@x0:
  2107                           	opt stack 0
  2108  000094                     delay_ms@ms:
  2109                           	opt stack 0
  2110  000094                     ___awdiv@dividend:
  2111                           	opt stack 0
  2112  000094                     __div_to_l_@quot:
  2113                           	opt stack 0
  2114                           
  2115                           ; 4 bytes @ 0x14
  2116  000094                     	ds	1
  2117  000095                     DS1621_Read_Temp@Device:
  2118                           	opt stack 0
  2119  000095                     DS3231_Init@Address_E:
  2120                           	opt stack 0
  2121  000095                     drawPixel@y:
  2122                           	opt stack 0
  2123  000095                     drawFastVLine@y:
  2124                           	opt stack 0
  2125  000095                     fillRectangle@y:
  2126                           	opt stack 0
  2127                           
  2128                           ; 1 bytes @ 0x15
  2129  000095                     	ds	1
  2130  000096                     ??_delay_ms:
  2131  000096                     ?___awtoft:
  2132                           	opt stack 0
  2133  000096                     ?___lbtoft:
  2134                           	opt stack 0
  2135  000096                     DS3231_Init@control_E:
  2136                           	opt stack 0
  2137  000096                     drawFastVLine@h:
  2138                           	opt stack 0
  2139  000096                     fillRectangle@w:
  2140                           	opt stack 0
  2141  000096                     drawPixel@color:
  2142                           	opt stack 0
  2143  000096                     ___awdiv@divisor:
  2144                           	opt stack 0
  2145  000096                     ___awtoft@c:
  2146                           	opt stack 0
  2147  000096                     ___lldiv@quotient:
  2148                           	opt stack 0
  2149                           
  2150                           ; 4 bytes @ 0x16
  2151  000096                     	ds	1
  2152  000097                     DS3231_Init@Device:
  2153                           	opt stack 0
  2154  000097                     fillRectangle@h:
  2155                           	opt stack 0
  2156  000097                     drawFastVLine@color:
  2157                           	opt stack 0
  2158  000097                     __tdiv_to_l_@quot:
  2159                           	opt stack 0
  2160                           
  2161                           ; 4 bytes @ 0x17
  2162  000097                     	ds	1
  2163  000098                     DS3231_Turn_Off_Alarm@Address_E:
  2164                           	opt stack 0
  2165  000098                     DS3231_Turn_On_Alarm@Address_E:
  2166                           	opt stack 0
  2167  000098                     drawPixel@x:
  2168                           	opt stack 0
  2169  000098                     ___awdiv@counter:
  2170                           	opt stack 0
  2171  000098                     __div_to_l_@cntr:
  2172                           	opt stack 0
  2173  000098                     delay_ms@count:
  2174                           	opt stack 0
  2175  000098                     fillRectangle@color:
  2176                           	opt stack 0
  2177                           
  2178                           ; 2 bytes @ 0x18
  2179  000098                     	ds	1
  2180  000099                     ??_drawFastVLine:
  2181  000099                     DS3231_Turn_Off_Alarm@Address_F:
  2182                           	opt stack 0
  2183  000099                     DS3231_Turn_On_Alarm@Address_F:
  2184                           	opt stack 0
  2185  000099                     ___awdiv@sign:
  2186                           	opt stack 0
  2187  000099                     ___awtoft@sign:
  2188                           	opt stack 0
  2189  000099                     __div_to_l_@exp1:
  2190                           	opt stack 0
  2191  000099                     ___lbtoft@c:
  2192                           	opt stack 0
  2193  000099                     drawCircle@x0:
  2194                           	opt stack 0
  2195                           
  2196                           ; 2 bytes @ 0x19
  2197  000099                     	ds	1
  2198  00009A                     ??_fillRectangle:
  2199  00009A                     DS3231_Turn_Off_Alarm@control_E:
  2200                           	opt stack 0
  2201  00009A                     DS3231_Turn_On_Alarm@control_E:
  2202                           	opt stack 0
  2203  00009A                     ___lldiv@counter:
  2204                           	opt stack 0
  2205  00009A                     ___awdiv@quotient:
  2206                           	opt stack 0
  2207                           
  2208                           ; 2 bytes @ 0x1A
  2209  00009A                     	ds	1
  2210  00009B                     ?___llmod:
  2211                           	opt stack 0
  2212  00009B                     DS3231_Turn_Off_Alarm@control_F:
  2213                           	opt stack 0
  2214  00009B                     DS3231_Turn_On_Alarm@control_F:
  2215                           	opt stack 0
  2216  00009B                     __tdiv_to_l_@cntr:
  2217                           	opt stack 0
  2218  00009B                     drawCircle@y0:
  2219                           	opt stack 0
  2220  00009B                     ___llmod@dividend:
  2221                           	opt stack 0
  2222                           
  2223                           ; 4 bytes @ 0x1B
  2224  00009B                     	ds	1
  2225  00009C                     ?_get_RPM:
  2226                           	opt stack 0
  2227  00009C                     ?___ftmul:
  2228                           	opt stack 0
  2229  00009C                     DS3231_Turn_Off_Alarm@Device:
  2230                           	opt stack 0
  2231  00009C                     DS3231_Turn_On_Alarm@Device:
  2232                           	opt stack 0
  2233  00009C                     __tdiv_to_l_@exp1:
  2234                           	opt stack 0
  2235  00009C                     ___ftmul@f1:
  2236                           	opt stack 0
  2237                           
  2238                           ; 3 bytes @ 0x1C
  2239  00009C                     	ds	1
  2240  00009D                     drawFastVLine@hi:
  2241                           	opt stack 0
  2242  00009D                     drawCircle@r:
  2243                           	opt stack 0
  2244                           
  2245                           ; 2 bytes @ 0x1D
  2246  00009D                     	ds	1
  2247  00009E                     drawFastVLine@lo:
  2248                           	opt stack 0
  2249  00009E                     fillRectangle@hi:
  2250                           	opt stack 0
  2251  00009E                     get_RPM@RPS:
  2252                           	opt stack 0
  2253                           
  2254                           ; 2 bytes @ 0x1E
  2255  00009E                     	ds	1
  2256  00009F                     drawFastVLine@x:
  2257                           	opt stack 0
  2258  00009F                     fillRectangle@lo:
  2259                           	opt stack 0
  2260  00009F                     drawCircle@color:
  2261                           	opt stack 0
  2262  00009F                     ___ftmul@f2:
  2263                           	opt stack 0
  2264  00009F                     ___llmod@divisor:
  2265                           	opt stack 0
  2266                           
  2267                           ; 4 bytes @ 0x1F
  2268  00009F                     	ds	1
  2269  0000A0                     fillRect@y:
  2270                           	opt stack 0
  2271  0000A0                     fillRectangle@x:
  2272                           	opt stack 0
  2273                           
  2274                           ; 1 bytes @ 0x20
  2275  0000A0                     	ds	1
  2276  0000A1                     ??_drawCircle:
  2277  0000A1                     fillRect@w:
  2278                           	opt stack 0
  2279  0000A1                     fillScreen@color:
  2280                           	opt stack 0
  2281                           
  2282                           ; 2 bytes @ 0x21
  2283  0000A1                     	ds	1
  2284  0000A2                     ??___ftmul:
  2285  0000A2                     fillRect@h:
  2286                           	opt stack 0
  2287                           
  2288                           ; 1 bytes @ 0x22
  2289  0000A2                     	ds	1
  2290  0000A3                     ___llmod@counter:
  2291                           	opt stack 0
  2292  0000A3                     fillRect@color:
  2293                           	opt stack 0
  2294  0000A3                     drawCircle@ddF_x:
  2295                           	opt stack 0
  2296                           
  2297                           ; 2 bytes @ 0x23
  2298  0000A3                     	ds	2
  2299  0000A5                     ??_fillRect:
  2300  0000A5                     ___ftmul@exp:
  2301                           	opt stack 0
  2302  0000A5                     drawCircle@ddF_y:
  2303                           	opt stack 0
  2304                           
  2305                           ; 2 bytes @ 0x25
  2306  0000A5                     	ds	1
  2307  0000A6                     ___ftmul@f3_as_product:
  2308                           	opt stack 0
  2309                           
  2310                           ; 3 bytes @ 0x26
  2311  0000A6                     	ds	1
  2312  0000A7                     drawCircle@f:
  2313                           	opt stack 0
  2314                           
  2315                           ; 2 bytes @ 0x27
  2316  0000A7                     	ds	1
  2317  0000A8                     fillRect@x:
  2318                           	opt stack 0
  2319                           
  2320                           ; 1 bytes @ 0x28
  2321  0000A8                     	ds	1
  2322  0000A9                     ___ftmul@cntr:
  2323                           	opt stack 0
  2324  0000A9                     fillRect@i:
  2325                           	opt stack 0
  2326  0000A9                     drawCircle@x:
  2327                           	opt stack 0
  2328                           
  2329                           ; 2 bytes @ 0x29
  2330  0000A9                     	ds	1
  2331  0000AA                     ___ftmul@sign:
  2332                           	opt stack 0
  2333                           
  2334                           ; 1 bytes @ 0x2A
  2335  0000AA                     	ds	1
  2336  0000AB                     ?___fttol:
  2337                           	opt stack 0
  2338  0000AB                     drawChar@y:
  2339                           	opt stack 0
  2340  0000AB                     Update_Setup_Screen_Cursor_Forward@field:
  2341                           	opt stack 0
  2342  0000AB                     Update_Setup_Screen_Cursor_Backward@field:
  2343                           	opt stack 0
  2344  0000AB                     drawCircle@y:
  2345                           	opt stack 0
  2346  0000AB                     ___fttol@f1:
  2347                           	opt stack 0
  2348                           
  2349                           ; 3 bytes @ 0x2B
  2350  0000AB                     	ds	1
  2351  0000AC                     drawChar@c:
  2352                           	opt stack 0
  2353  0000AC                     Update_Setup_Screen_Cursor_Forward@yinc:
  2354                           	opt stack 0
  2355  0000AC                     Update_Setup_Screen_Cursor_Backward@yinc:
  2356                           	opt stack 0
  2357                           
  2358                           ; 1 bytes @ 0x2C
  2359  0000AC                     	ds	1
  2360  0000AD                     Update_Setup_Screen_Cursor_Forward@xinc:
  2361                           	opt stack 0
  2362  0000AD                     Update_Setup_Screen_Cursor_Backward@xinc:
  2363                           	opt stack 0
  2364  0000AD                     drawChar@color:
  2365                           	opt stack 0
  2366                           
  2367                           ; 2 bytes @ 0x2D
  2368  0000AD                     	ds	1
  2369  0000AE                     
  2370                           ; 0 bytes @ 0x2E
  2371  0000AE                     	ds	1
  2372  0000AF                     ??___fttol:
  2373  0000AF                     drawChar@bg:
  2374                           	opt stack 0
  2375                           
  2376                           ; 2 bytes @ 0x2F
  2377  0000AF                     	ds	2
  2378  0000B1                     drawChar@size:
  2379                           	opt stack 0
  2380                           
  2381                           ; 1 bytes @ 0x31
  2382  0000B1                     	ds	1
  2383  0000B2                     drawChar@line:
  2384                           	opt stack 0
  2385                           
  2386                           ; 1 bytes @ 0x32
  2387  0000B2                     	ds	1
  2388  0000B3                     drawChar@x:
  2389                           	opt stack 0
  2390                           
  2391                           ; 1 bytes @ 0x33
  2392  0000B3                     	ds	1
  2393  0000B4                     drawChar@j:
  2394                           	opt stack 0
  2395  0000B4                     ___fttol@sign1:
  2396                           	opt stack 0
  2397                           
  2398                           ; 1 bytes @ 0x34
  2399  0000B4                     	ds	1
  2400  0000B5                     drawChar@i:
  2401                           	opt stack 0
  2402  0000B5                     ___fttol@lval:
  2403                           	opt stack 0
  2404                           
  2405                           ; 4 bytes @ 0x35
  2406  0000B5                     	ds	1
  2407  0000B6                     drawtext@y:
  2408                           	opt stack 0
  2409                           
  2410                           ; 1 bytes @ 0x36
  2411  0000B6                     	ds	1
  2412  0000B7                     drawtext@_text:
  2413                           	opt stack 0
  2414                           
  2415                           ; 2 bytes @ 0x37
  2416  0000B7                     	ds	2
  2417  0000B9                     ___fttol@exp1:
  2418                           	opt stack 0
  2419  0000B9                     drawtext@color:
  2420                           	opt stack 0
  2421                           
  2422                           ; 2 bytes @ 0x39
  2423  0000B9                     	ds	1
  2424  0000BA                     ?___awmod:
  2425                           	opt stack 0
  2426  0000BA                     ?___lltoft:
  2427                           	opt stack 0
  2428  0000BA                     ___awmod@dividend:
  2429                           	opt stack 0
  2430  0000BA                     ___lltoft@c:
  2431                           	opt stack 0
  2432                           
  2433                           ; 4 bytes @ 0x3A
  2434  0000BA                     	ds	1
  2435  0000BB                     drawtext@bg:
  2436                           	opt stack 0
  2437                           
  2438                           ; 2 bytes @ 0x3B
  2439  0000BB                     	ds	1
  2440  0000BC                     ___awmod@divisor:
  2441                           	opt stack 0
  2442                           
  2443                           ; 2 bytes @ 0x3C
  2444  0000BC                     	ds	1
  2445  0000BD                     drawtext@size:
  2446                           	opt stack 0
  2447                           
  2448                           ; 1 bytes @ 0x3D
  2449  0000BD                     	ds	1
  2450  0000BE                     ??_drawtext:
  2451  0000BE                     ??___lltoft:
  2452  0000BE                     ___awmod@counter:
  2453                           	opt stack 0
  2454                           
  2455                           ; 1 bytes @ 0x3E
  2456  0000BE                     	ds	1
  2457  0000BF                     ___awmod@sign:
  2458                           	opt stack 0
  2459                           
  2460                           ; 1 bytes @ 0x3F
  2461  0000BF                     	ds	1
  2462  0000C0                     ?_dec_2_bcd:
  2463                           	opt stack 0
  2464  0000C0                     ?_fround:
  2465                           	opt stack 0
  2466  0000C0                     ?_scale:
  2467                           	opt stack 0
  2468  0000C0                     drawtext@x:
  2469                           	opt stack 0
  2470                           
  2471                           ; 1 bytes @ 0x40
  2472  0000C0                     	ds	1
  2473  0000C1                     drawtext@textsize:
  2474                           	opt stack 0
  2475                           
  2476                           ; 2 bytes @ 0x41
  2477  0000C1                     	ds	1
  2478  0000C2                     ??_dec_2_bcd:
  2479  0000C2                     ___lltoft@exp:
  2480                           	opt stack 0
  2481                           
  2482                           ; 1 bytes @ 0x42
  2483  0000C2                     	ds	1
  2484  0000C3                     ?___ftneg:
  2485                           	opt stack 0
  2486  0000C3                     drawtext@i:
  2487                           	opt stack 0
  2488  0000C3                     ___ftneg@f1:
  2489                           	opt stack 0
  2490  0000C3                     _fround$3112:
  2491                           	opt stack 0
  2492  0000C3                     _scale$3113:
  2493                           	opt stack 0
  2494                           
  2495                           ; 3 bytes @ 0x43
  2496  0000C3                     	ds	1
  2497  0000C4                     dec_2_bcd@bcd:
  2498                           	opt stack 0
  2499                           
  2500                           ; 2 bytes @ 0x44
  2501  0000C4                     	ds	1
  2502  0000C5                     drawtext@cursor_y:
  2503                           	opt stack 0
  2504                           
  2505                           ; 1 bytes @ 0x45
  2506  0000C5                     	ds	1
  2507  0000C6                     drawtext@cursor_x:
  2508                           	opt stack 0
  2509  0000C6                     dec_2_bcd@dec:
  2510                           	opt stack 0
  2511  0000C6                     scale@scl:
  2512                           	opt stack 0
  2513  0000C6                     _fround$3111:
  2514                           	opt stack 0
  2515                           
  2516                           ; 3 bytes @ 0x46
  2517  0000C6                     	ds	1
  2518  0000C7                     ??_Update_Screen:
  2519  0000C7                     ?___ftdiv:
  2520                           	opt stack 0
  2521  0000C7                     DS3231_Write_Time@Device:
  2522                           	opt stack 0
  2523  0000C7                     DS3231_Write_Alarm_Time@Device:
  2524                           	opt stack 0
  2525  0000C7                     Update_Setup_Fan_Screen@dc_char1:
  2526                           	opt stack 0
  2527  0000C7                     ___ftdiv@f1:
  2528                           	opt stack 0
  2529                           
  2530                           ; 3 bytes @ 0x47
  2531  0000C7                     	ds	1
  2532  0000C8                     DS3231_Write_Time@Address:
  2533                           	opt stack 0
  2534  0000C8                     DS3231_Write_Alarm_Time@Address:
  2535                           	opt stack 0
  2536  0000C8                     Update_Setup_Fan_Screen@dc_char2:
  2537                           	opt stack 0
  2538                           
  2539                           ; 1 bytes @ 0x48
  2540  0000C8                     	ds	1
  2541  0000C9                     Update_Setup_Fan_Screen@dc_char3:
  2542                           	opt stack 0
  2543  0000C9                     fround@prec:
  2544                           	opt stack 0
  2545  0000C9                     Update_Screen@neg_tempF:
  2546                           	opt stack 0
  2547                           
  2548                           ; 2 bytes @ 0x49
  2549  0000C9                     	ds	1
  2550  0000CA                     ?___ftadd:
  2551                           	opt stack 0
  2552  0000CA                     ___ftadd@f1:
  2553                           	opt stack 0
  2554  0000CA                     ___ftdiv@f2:
  2555                           	opt stack 0
  2556                           
  2557                           ; 3 bytes @ 0x4A
  2558  0000CA                     	ds	3
  2559  0000CD                     ??___ftdiv:
  2560  0000CD                     ___ftadd@f2:
  2561                           	opt stack 0
  2562                           
  2563                           ; 3 bytes @ 0x4D
  2564  0000CD                     	ds	3
  2565  0000D0                     ??___ftadd:
  2566  0000D0                     ___ftdiv@cntr:
  2567                           	opt stack 0
  2568                           
  2569                           ; 1 bytes @ 0x50
  2570  0000D0                     	ds	1
  2571  0000D1                     ___ftdiv@f3:
  2572                           	opt stack 0
  2573                           
  2574                           ; 3 bytes @ 0x51
  2575  0000D1                     	ds	2
  2576  0000D3                     ___ftadd@sign:
  2577                           	opt stack 0
  2578                           
  2579                           ; 1 bytes @ 0x53
  2580  0000D3                     	ds	1
  2581  0000D4                     ___ftadd@exp2:
  2582                           	opt stack 0
  2583  0000D4                     ___ftdiv@exp:
  2584                           	opt stack 0
  2585                           
  2586                           ; 1 bytes @ 0x54
  2587  0000D4                     	ds	1
  2588  0000D5                     ___ftadd@exp1:
  2589                           	opt stack 0
  2590  0000D5                     ___ftdiv@sign:
  2591                           	opt stack 0
  2592                           
  2593                           ; 1 bytes @ 0x55
  2594  0000D5                     	ds	1
  2595  0000D6                     ??_do_update_pwm:
  2596  0000D6                     ?_read_volt:
  2597                           	opt stack 0
  2598  0000D6                     ?___ftsub:
  2599                           	opt stack 0
  2600  0000D6                     ___ftge@ff1:
  2601                           	opt stack 0
  2602  0000D6                     ___ftsub@f1:
  2603                           	opt stack 0
  2604                           
  2605                           ; 3 bytes @ 0x56
  2606  0000D6                     	ds	3
  2607  0000D9                     do_update_pwm@dc_f:
  2608                           	opt stack 0
  2609  0000D9                     read_volt@voltage:
  2610                           	opt stack 0
  2611  0000D9                     ___ftge@ff2:
  2612                           	opt stack 0
  2613  0000D9                     ___ftsub@f2:
  2614                           	opt stack 0
  2615                           
  2616                           ; 3 bytes @ 0x59
  2617  0000D9                     	ds	3
  2618  0000DC                     ??___ftge:
  2619  0000DC                     do_update_pwm@duty_cycle:
  2620                           	opt stack 0
  2621  0000DC                     read_volt@num_step:
  2622                           	opt stack 0
  2623                           
  2624                           ; 2 bytes @ 0x5C
  2625  0000DC                     	ds	1
  2626  0000DD                     do_update_pwm@dc_I:
  2627                           	opt stack 0
  2628                           
  2629                           ; 2 bytes @ 0x5D
  2630  0000DD                     	ds	2
  2631  0000DF                     
  2632                           ; 0 bytes @ 0x5F
  2633  0000DF                     	ds	1
  2634  0000E0                     check_for_button_input@j:
  2635                           	opt stack 0
  2636                           
  2637                           ; 2 bytes @ 0x60
  2638  0000E0                     	ds	2
  2639  0000E2                     ??_Setup_Temp_Fan:
  2640                           
  2641                           ; 0 bytes @ 0x62
  2642  0000E2                     	ds	2
  2643                           tblptru	equ	0xFF8
  2644                           tblptrh	equ	0xFF7
  2645                           tblptrl	equ	0xFF6
  2646                           tablat	equ	0xFF5
  2647                           postinc0	equ	0xFEE
  2648                           wreg	equ	0xFE8
  2649                           postdec1	equ	0xFE5
  2650                           fsr1l	equ	0xFE1
  2651                           
  2652                           	psect	cstackCOMRAM
  2653  000001                     __pcstackCOMRAM:
  2654                           	opt stack 0
  2655  000001                     ??_INT0_isr:
  2656  000001                     ??i2_isdigit:
  2657  000001                     ?i2___awmod:
  2658                           	opt stack 0
  2659  000001                     ?i2___ftpack:
  2660                           	opt stack 0
  2661  000001                     ?i2__div_to_l_:
  2662                           	opt stack 0
  2663  000001                     ?i2__tdiv_to_l_:
  2664                           	opt stack 0
  2665  000001                     ?i2___fttol:
  2666                           	opt stack 0
  2667  000001                     ?i2___lldiv:
  2668                           	opt stack 0
  2669  000001                     i2putch@c:
  2670                           	opt stack 0
  2671  000001                     i2___awmod@dividend:
  2672                           	opt stack 0
  2673  000001                     i2__div_to_l_@f1:
  2674                           	opt stack 0
  2675  000001                     i2___ftpack@arg:
  2676                           	opt stack 0
  2677  000001                     i2__tdiv_to_l_@f1:
  2678                           	opt stack 0
  2679  000001                     i2___fttol@f1:
  2680                           	opt stack 0
  2681  000001                     i2___lldiv@dividend:
  2682                           	opt stack 0
  2683                           
  2684                           ; 4 bytes @ 0x0
  2685  000001                     	ds	1
  2686  000002                     i2_isdigit$2749:
  2687                           	opt stack 0
  2688                           
  2689                           ; 1 bytes @ 0x1
  2690  000002                     	ds	1
  2691  000003                     i2isdigit@c:
  2692                           	opt stack 0
  2693  000003                     i2___awmod@divisor:
  2694                           	opt stack 0
  2695                           
  2696                           ; 2 bytes @ 0x2
  2697  000003                     	ds	1
  2698  000004                     i2___ftpack@exp:
  2699                           	opt stack 0
  2700  000004                     i2__div_to_l_@f2:
  2701                           	opt stack 0
  2702  000004                     i2__tdiv_to_l_@f2:
  2703                           	opt stack 0
  2704                           
  2705                           ; 3 bytes @ 0x3
  2706  000004                     	ds	1
  2707  000005                     ??i2___fttol:
  2708  000005                     i2___awmod@counter:
  2709                           	opt stack 0
  2710  000005                     i2___ftpack@sign:
  2711                           	opt stack 0
  2712  000005                     i2___lldiv@divisor:
  2713                           	opt stack 0
  2714                           
  2715                           ; 4 bytes @ 0x4
  2716  000005                     	ds	1
  2717  000006                     ??i2___ftpack:
  2718  000006                     i2___awmod@sign:
  2719                           	opt stack 0
  2720                           
  2721                           ; 1 bytes @ 0x5
  2722  000006                     	ds	1
  2723  000007                     ??i2__tdiv_to_l_:
  2724  000007                     ?i2___awdiv:
  2725                           	opt stack 0
  2726  000007                     i2___awdiv@dividend:
  2727                           	opt stack 0
  2728  000007                     i2__div_to_l_@quot:
  2729                           	opt stack 0
  2730                           
  2731                           ; 4 bytes @ 0x6
  2732  000007                     	ds	2
  2733  000009                     i2___awdiv@divisor:
  2734                           	opt stack 0
  2735  000009                     i2___lldiv@quotient:
  2736                           	opt stack 0
  2737                           
  2738                           ; 4 bytes @ 0x8
  2739  000009                     	ds	1
  2740  00000A                     i2___fttol@sign1:
  2741                           	opt stack 0
  2742  00000A                     i2__tdiv_to_l_@quot:
  2743                           	opt stack 0
  2744                           
  2745                           ; 4 bytes @ 0x9
  2746  00000A                     	ds	1
  2747  00000B                     i2___awdiv@counter:
  2748                           	opt stack 0
  2749  00000B                     i2__div_to_l_@cntr:
  2750                           	opt stack 0
  2751  00000B                     i2___fttol@lval:
  2752                           	opt stack 0
  2753                           
  2754                           ; 4 bytes @ 0xA
  2755  00000B                     	ds	1
  2756  00000C                     i2___awdiv@sign:
  2757                           	opt stack 0
  2758  00000C                     i2__div_to_l_@exp1:
  2759                           	opt stack 0
  2760                           
  2761                           ; 1 bytes @ 0xB
  2762  00000C                     	ds	1
  2763  00000D                     i2___lldiv@counter:
  2764                           	opt stack 0
  2765  00000D                     i2___awdiv@quotient:
  2766                           	opt stack 0
  2767                           
  2768                           ; 2 bytes @ 0xC
  2769  00000D                     	ds	1
  2770  00000E                     ?i2___llmod:
  2771                           	opt stack 0
  2772  00000E                     i2__tdiv_to_l_@cntr:
  2773                           	opt stack 0
  2774  00000E                     i2___llmod@dividend:
  2775                           	opt stack 0
  2776                           
  2777                           ; 4 bytes @ 0xD
  2778  00000E                     	ds	1
  2779  00000F                     ?i2___wmul:
  2780                           	opt stack 0
  2781  00000F                     i2__tdiv_to_l_@exp1:
  2782                           	opt stack 0
  2783  00000F                     i2___fttol@exp1:
  2784                           	opt stack 0
  2785  00000F                     i2___wmul@multiplier:
  2786                           	opt stack 0
  2787                           
  2788                           ; 2 bytes @ 0xE
  2789  00000F                     	ds	1
  2790  000010                     ?i2___lltoft:
  2791                           	opt stack 0
  2792  000010                     i2___lltoft@c:
  2793                           	opt stack 0
  2794                           
  2795                           ; 4 bytes @ 0xF
  2796  000010                     	ds	1
  2797  000011                     i2___wmul@multiplicand:
  2798                           	opt stack 0
  2799                           
  2800                           ; 2 bytes @ 0x10
  2801  000011                     	ds	1
  2802  000012                     i2___llmod@divisor:
  2803                           	opt stack 0
  2804                           
  2805                           ; 4 bytes @ 0x11
  2806  000012                     	ds	1
  2807  000013                     i2___wmul@product:
  2808                           	opt stack 0
  2809                           
  2810                           ; 2 bytes @ 0x12
  2811  000013                     	ds	1
  2812  000014                     ??i2___lltoft:
  2813                           
  2814                           ; 0 bytes @ 0x13
  2815  000014                     	ds	2
  2816  000016                     i2___llmod@counter:
  2817                           	opt stack 0
  2818                           
  2819                           ; 1 bytes @ 0x15
  2820  000016                     	ds	2
  2821  000018                     i2___lltoft@exp:
  2822                           	opt stack 0
  2823                           
  2824                           ; 1 bytes @ 0x17
  2825  000018                     	ds	1
  2826  000019                     ?i2___ftneg:
  2827                           	opt stack 0
  2828  000019                     i2___ftneg@f1:
  2829                           	opt stack 0
  2830                           
  2831                           ; 3 bytes @ 0x18
  2832  000019                     	ds	3
  2833  00001C                     ?i2___ftmul:
  2834                           	opt stack 0
  2835  00001C                     i2___ftmul@f1:
  2836                           	opt stack 0
  2837                           
  2838                           ; 3 bytes @ 0x1B
  2839  00001C                     	ds	3
  2840  00001F                     i2___ftmul@f2:
  2841                           	opt stack 0
  2842                           
  2843                           ; 3 bytes @ 0x1E
  2844  00001F                     	ds	3
  2845  000022                     ??i2___ftmul:
  2846                           
  2847                           ; 0 bytes @ 0x21
  2848  000022                     	ds	3
  2849  000025                     i2___ftmul@exp:
  2850                           	opt stack 0
  2851                           
  2852                           ; 1 bytes @ 0x24
  2853  000025                     	ds	1
  2854  000026                     i2___ftmul@f3_as_product:
  2855                           	opt stack 0
  2856                           
  2857                           ; 3 bytes @ 0x25
  2858  000026                     	ds	3
  2859  000029                     i2___ftmul@cntr:
  2860                           	opt stack 0
  2861                           
  2862                           ; 1 bytes @ 0x28
  2863  000029                     	ds	1
  2864  00002A                     i2___ftmul@sign:
  2865                           	opt stack 0
  2866                           
  2867                           ; 1 bytes @ 0x29
  2868  00002A                     	ds	1
  2869  00002B                     ?i2_fround:
  2870                           	opt stack 0
  2871  00002B                     ?i2_scale:
  2872                           	opt stack 0
  2873                           
  2874                           ; 3 bytes @ 0x2A
  2875  00002B                     	ds	3
  2876  00002E                     i2_fround$3292:
  2877                           	opt stack 0
  2878  00002E                     i2_scale$3293:
  2879                           	opt stack 0
  2880                           
  2881                           ; 3 bytes @ 0x2D
  2882  00002E                     	ds	3
  2883  000031                     i2scale@scl:
  2884                           	opt stack 0
  2885  000031                     i2_fround$3291:
  2886                           	opt stack 0
  2887                           
  2888                           ; 3 bytes @ 0x30
  2889  000031                     	ds	1
  2890  000032                     ?i2___ftdiv:
  2891                           	opt stack 0
  2892  000032                     i2___ftdiv@f1:
  2893                           	opt stack 0
  2894                           
  2895                           ; 3 bytes @ 0x31
  2896  000032                     	ds	2
  2897  000034                     i2fround@prec:
  2898                           	opt stack 0
  2899                           
  2900                           ; 1 bytes @ 0x33
  2901  000034                     	ds	1
  2902  000035                     ?i2___ftadd:
  2903                           	opt stack 0
  2904  000035                     i2___ftadd@f1:
  2905                           	opt stack 0
  2906  000035                     i2___ftdiv@f2:
  2907                           	opt stack 0
  2908                           
  2909                           ; 3 bytes @ 0x34
  2910  000035                     	ds	3
  2911  000038                     ??i2___ftdiv:
  2912  000038                     i2___ftadd@f2:
  2913                           	opt stack 0
  2914                           
  2915                           ; 3 bytes @ 0x37
  2916  000038                     	ds	3
  2917  00003B                     ??i2___ftadd:
  2918  00003B                     i2___ftdiv@cntr:
  2919                           	opt stack 0
  2920                           
  2921                           ; 1 bytes @ 0x3A
  2922  00003B                     	ds	1
  2923  00003C                     i2___ftdiv@f3:
  2924                           	opt stack 0
  2925                           
  2926                           ; 3 bytes @ 0x3B
  2927  00003C                     	ds	2
  2928  00003E                     i2___ftadd@sign:
  2929                           	opt stack 0
  2930                           
  2931                           ; 1 bytes @ 0x3D
  2932  00003E                     	ds	1
  2933  00003F                     i2___ftadd@exp2:
  2934                           	opt stack 0
  2935  00003F                     i2___ftdiv@exp:
  2936                           	opt stack 0
  2937                           
  2938                           ; 1 bytes @ 0x3E
  2939  00003F                     	ds	1
  2940  000040                     i2___ftadd@exp1:
  2941                           	opt stack 0
  2942  000040                     i2___ftdiv@sign:
  2943                           	opt stack 0
  2944                           
  2945                           ; 1 bytes @ 0x3F
  2946  000040                     	ds	1
  2947  000041                     ?i2___ftsub:
  2948                           	opt stack 0
  2949  000041                     i2___ftge@ff1:
  2950                           	opt stack 0
  2951  000041                     i2___ftsub@f1:
  2952                           	opt stack 0
  2953                           
  2954                           ; 3 bytes @ 0x40
  2955  000041                     	ds	3
  2956  000044                     i2___ftge@ff2:
  2957                           	opt stack 0
  2958  000044                     i2___ftsub@f2:
  2959                           	opt stack 0
  2960                           
  2961                           ; 3 bytes @ 0x43
  2962  000044                     	ds	3
  2963  000047                     ??i2___ftge:
  2964  000047                     
  2965                           ; 0 bytes @ 0x46
  2966  000047                     	ds	3
  2967  00004A                     ?i2_printf:
  2968                           	opt stack 0
  2969  00004A                     i2printf@f:
  2970                           	opt stack 0
  2971                           
  2972                           ; 2 bytes @ 0x49
  2973  00004A                     	ds	2
  2974  00004C                     ??i2_printf:
  2975                           
  2976                           ; 0 bytes @ 0x4B
  2977  00004C                     	ds	6
  2978  000052                     i2_printf$3294:
  2979                           	opt stack 0
  2980                           
  2981                           ; 3 bytes @ 0x51
  2982  000052                     	ds	3
  2983  000055                     i2printf@idx:
  2984                           	opt stack 0
  2985                           
  2986                           ; 1 bytes @ 0x54
  2987  000055                     	ds	1
  2988  000056                     i2_printf$2205:
  2989                           	opt stack 0
  2990                           
  2991                           ; 2 bytes @ 0x55
  2992  000056                     	ds	2
  2993  000058                     i2_printf$2206:
  2994                           	opt stack 0
  2995                           
  2996                           ; 2 bytes @ 0x57
  2997  000058                     	ds	2
  2998  00005A                     i2_printf$2209:
  2999                           	opt stack 0
  3000                           
  3001                           ; 2 bytes @ 0x59
  3002  00005A                     	ds	2
  3003  00005C                     i2_printf$2210:
  3004                           	opt stack 0
  3005                           
  3006                           ; 2 bytes @ 0x5B
  3007  00005C                     	ds	2
  3008  00005E                     i2_printf$2211:
  3009                           	opt stack 0
  3010                           
  3011                           ; 2 bytes @ 0x5D
  3012  00005E                     	ds	2
  3013  000060                     i2_printf$2212:
  3014                           	opt stack 0
  3015                           
  3016                           ; 2 bytes @ 0x5F
  3017  000060                     	ds	2
  3018  000062                     i2printf@temp:
  3019                           	opt stack 0
  3020                           
  3021                           ; 3 bytes @ 0x61
  3022  000062                     	ds	3
  3023  000065                     i2printf@ap:
  3024                           	opt stack 0
  3025                           
  3026                           ; 2 bytes @ 0x64
  3027  000065                     	ds	2
  3028  000067                     i2printf@tmpval:
  3029                           	opt stack 0
  3030                           
  3031                           ; 4 bytes @ 0x66
  3032  000067                     	ds	4
  3033  00006B                     i2printf@exp:
  3034                           	opt stack 0
  3035                           
  3036                           ; 2 bytes @ 0x6A
  3037  00006B                     	ds	2
  3038  00006D                     i2printf@width:
  3039                           	opt stack 0
  3040                           
  3041                           ; 2 bytes @ 0x6C
  3042  00006D                     	ds	2
  3043  00006F                     i2printf@val:
  3044                           	opt stack 0
  3045                           
  3046                           ; 4 bytes @ 0x6E
  3047  00006F                     	ds	4
  3048  000073                     i2printf@fval:
  3049                           	opt stack 0
  3050                           
  3051                           ; 3 bytes @ 0x72
  3052  000073                     	ds	3
  3053  000076                     i2printf@prec:
  3054                           	opt stack 0
  3055                           
  3056                           ; 2 bytes @ 0x75
  3057  000076                     	ds	2
  3058  000078                     i2printf@c:
  3059                           	opt stack 0
  3060                           
  3061                           ; 1 bytes @ 0x77
  3062  000078                     	ds	1
  3063  000079                     i2printf@flag:
  3064                           	opt stack 0
  3065                           
  3066                           ; 2 bytes @ 0x78
  3067  000079                     	ds	2
  3068  00007B                     tblptru	equ	0xFF8
  3069                           tblptrh	equ	0xFF7
  3070                           tblptrl	equ	0xFF6
  3071                           tablat	equ	0xFF5
  3072                           postinc0	equ	0xFEE
  3073                           wreg	equ	0xFE8
  3074                           postdec1	equ	0xFE5
  3075                           fsr1l	equ	0xFE1
  3076                           
  3077                           ; 0 bytes @ 0x7A
  3078 ;;
  3079 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3080 ;;
  3081 ;; *************** function _main *****************
  3082 ;; Defined at:
  3083 ;;		line 121 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Main.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;		None
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;		None
  3088 ;; Return value:  Size  Location     Type
  3089 ;;		None               void
  3090 ;; Registers used:
  3091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3099 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3100 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3101 ;;Total ram usage:        1 bytes
  3102 ;; Hardware stack levels required when called:   16
  3103 ;; This function calls:
  3104 ;;		_DS1621_Read_Temp
  3105 ;;		_DS3231_Read_Alarm_Time
  3106 ;;		_DS3231_Read_Time
  3107 ;;		_DS3231_Turn_Off_Alarm
  3108 ;;		_Do_Beep_Bad
  3109 ;;		_Do_Beep_Good
  3110 ;;		_Do_Init
  3111 ;;		_Do_Setup_Alarm_Time
  3112 ;;		_Do_Setup_Time
  3113 ;;		_Initialize_Screen
  3114 ;;		_Monitor_Fan
  3115 ;;		_Setup_Temp_Fan
  3116 ;;		_Toggle_Fan_Monitor
  3117 ;;		_Update_Screen
  3118 ;;		___awdiv
  3119 ;;		___wmul
  3120 ;;		_check_for_button_input
  3121 ;;		_get_RPM
  3122 ;;		_printf
  3123 ;;		_read_volt
  3124 ;;		_test_alarm
  3125 ;; This function is called by:
  3126 ;;		Startup code after reset
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           	psect	text0
  3131  0051B6                     __ptext0:
  3132                           	opt stack 0
  3133  0051B6                     _main:
  3134                           	opt stack 15
  3135                           
  3136                           ;Main.c: 123: Do_Init();
  3137                           
  3138                           ; BSR set to: 1
  3139                           ;incstack = 0
  3140  0051B6  EC2C  F043         	call	_Do_Init	;wreg free
  3141                           
  3142                           ;Main.c: 124: Initialize_Screen();
  3143  0051BA  ECAD  F01D         	call	_Initialize_Screen	;wreg free
  3144                           
  3145                           ;Main.c: 125: MATCHED = 0;
  3146  0051BE  0E00               	movlw	0
  3147  0051C0  0101               	movlb	1	; () banked
  3148  0051C2  6FA6               	movwf	(_MATCHED+1)& (0+255),b
  3149  0051C4  0E00               	movlw	0
  3150  0051C6  6FA5               	movwf	_MATCHED& (0+255),b
  3151                           
  3152                           ; BSR set to: 1
  3153                           ;Main.c: 126: DS3231_Turn_Off_Alarm();
  3154  0051C8  EC8E  F042         	call	_DS3231_Turn_Off_Alarm	;wreg free
  3155                           
  3156                           ;Main.c: 127: DS3231_Read_Alarm_Time();
  3157  0051CC  EC50  F044         	call	_DS3231_Read_Alarm_Time	;wreg free
  3158                           
  3159                           ;Main.c: 129: tempSecond = 0xff;
  3160  0051D0  0101               	movlb	1	; () banked
  3161  0051D2  6935               	setf	_tempSecond& (0+255),b
  3162  0051D4  D000               	goto	l15571
  3163  0051D6                     l15571:
  3164                           
  3165                           ; BSR set to: 1
  3166                           ;Main.c: 131: {
  3167                           ;Main.c: 132: DS3231_Read_Time();
  3168  0051D6  ECAB  F041         	call	_DS3231_Read_Time	;wreg free
  3169                           
  3170                           ;Main.c: 134: if(tempSecond != second)
  3171  0051DA  0100               	movlb	0	; () banked
  3172  0051DC  51F0               	movf	_second& (0+255),w,b
  3173  0051DE  0101               	movlb	1	; () banked
  3174  0051E0  1935               	xorwf	_tempSecond& (0+255),w,b
  3175  0051E2  B4D8               	btfsc	status,2,c
  3176  0051E4  D0A4               	goto	l15599
  3177                           
  3178                           ; BSR set to: 1
  3179                           ;Main.c: 135: {
  3180                           ;Main.c: 136: tempSecond = second;
  3181  0051E6  C0F0  F135         	movff	_second,_tempSecond
  3182                           
  3183                           ; BSR set to: 1
  3184                           ;Main.c: 137: rpm = get_RPM();
  3185  0051EA  ECBD  F045         	call	_get_RPM	;wreg free
  3186  0051EE  C09C  F1AF         	movff	?_get_RPM,_rpm
  3187  0051F2  C09D  F1B0         	movff	?_get_RPM+1,_rpm+1
  3188                           
  3189                           ;Main.c: 138: volt = read_volt();
  3190  0051F6  ECC4  F042         	call	_read_volt	;wreg free
  3191  0051FA  C0D6  F19C         	movff	?_read_volt,_volt
  3192  0051FE  C0D7  F19D         	movff	?_read_volt+1,_volt+1
  3193  005202  C0D8  F19E         	movff	?_read_volt+2,_volt+2
  3194                           
  3195                           ;Main.c: 139: printf ("volt =", volt);
  3196  005206  0ED9               	movlw	low STR_2
  3197  005208  0101               	movlb	1	; () banked
  3198  00520A  6FCA               	movwf	printf@f& (0+255),b
  3199  00520C  0EFF               	movlw	high STR_2
  3200  00520E  0101               	movlb	1	; () banked
  3201  005210  6FCB               	movwf	(printf@f+1)& (0+255),b
  3202  005212  C19C  F1CC         	movff	_volt,?_printf+2
  3203  005216  C19D  F1CD         	movff	_volt+1,?_printf+3
  3204  00521A  C19E  F1CE         	movff	_volt+2,?_printf+4
  3205  00521E  EC0E  F000         	call	_printf	;wreg free
  3206                           
  3207                           ;Main.c: 140: DS1621_tempC = DS1621_Read_Temp();
  3208  005222  EC74  F045         	call	_DS1621_Read_Temp	;wreg free
  3209  005226  C091  F1A1         	movff	?_DS1621_Read_Temp,_DS1621_tempC
  3210  00522A  C092  F1A2         	movff	?_DS1621_Read_Temp+1,_DS1621_tempC+1
  3211                           
  3212                           ;Main.c: 141: DS1621_tempF = (DS1621_tempC * 9 / 5) + 32;
  3213  00522E  C1A1  F08E         	movff	_DS1621_tempC,___wmul@multiplier
  3214  005232  C1A2  F08F         	movff	_DS1621_tempC+1,___wmul@multiplier+1
  3215  005236  0E00               	movlw	0
  3216  005238  0100               	movlb	0	; () banked
  3217  00523A  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3218  00523C  0E09               	movlw	9
  3219  00523E  6F90               	movwf	___wmul@multiplicand& (0+255),b
  3220  005240  EC7F  F046         	call	___wmul	;wreg free
  3221  005244  C08E  F094         	movff	?___wmul,___awdiv@dividend
  3222  005248  C08F  F095         	movff	?___wmul+1,___awdiv@dividend+1
  3223  00524C  0E00               	movlw	0
  3224  00524E  0100               	movlb	0	; () banked
  3225  005250  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  3226  005252  0E05               	movlw	5
  3227  005254  6F96               	movwf	___awdiv@divisor& (0+255),b
  3228  005256  EC74  F03A         	call	___awdiv	;wreg free
  3229  00525A  0E20               	movlw	32
  3230  00525C  0100               	movlb	0	; () banked
  3231  00525E  2594               	addwf	?___awdiv& (0+255),w,b
  3232  005260  0101               	movlb	1	; () banked
  3233  005262  6FA3               	movwf	_DS1621_tempF& (0+255),b
  3234  005264  0E00               	movlw	0
  3235  005266  0100               	movlb	0	; () banked
  3236  005268  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  3237  00526A  0101               	movlb	1	; () banked
  3238  00526C  6FA4               	movwf	(_DS1621_tempF+1)& (0+255),b
  3239                           
  3240                           ; BSR set to: 1
  3241                           ;Main.c: 143: printf ("%02x:%02x:%02x %02x/%02x/%02x",hour,minute,second,month,day,year)
      +                          ;
  3242  00526E  0EA4               	movlw	low STR_3
  3243  005270  0101               	movlb	1	; () banked
  3244  005272  6FCA               	movwf	printf@f& (0+255),b
  3245  005274  0EFE               	movlw	high STR_3
  3246  005276  0101               	movlb	1	; () banked
  3247  005278  6FCB               	movwf	(printf@f+1)& (0+255),b
  3248  00527A  C0ED  F1CC         	movff	_hour,?_printf+2
  3249  00527E  0101               	movlb	1	; () banked
  3250  005280  6BCD               	clrf	(?_printf+3)& (0+255),b
  3251  005282  C0EE  F1CE         	movff	_minute,?_printf+4
  3252  005286  0101               	movlb	1	; () banked
  3253  005288  6BCF               	clrf	(?_printf+5)& (0+255),b
  3254  00528A  C0F0  F1D0         	movff	_second,?_printf+6
  3255  00528E  0101               	movlb	1	; () banked
  3256  005290  6BD1               	clrf	(?_printf+7)& (0+255),b
  3257  005292  C0EF  F1D2         	movff	_month,?_printf+8
  3258  005296  0101               	movlb	1	; () banked
  3259  005298  6BD3               	clrf	(?_printf+9)& (0+255),b
  3260  00529A  C0EA  F1D4         	movff	_day,?_printf+10
  3261  00529E  0101               	movlb	1	; () banked
  3262  0052A0  6BD5               	clrf	(?_printf+11)& (0+255),b
  3263  0052A2  C0F1  F1D6         	movff	_year,?_printf+12
  3264  0052A6  0101               	movlb	1	; () banked
  3265  0052A8  6BD7               	clrf	(?_printf+13)& (0+255),b
  3266  0052AA  EC0E  F000         	call	_printf	;wreg free
  3267                           
  3268                           ;Main.c: 144: printf (" Temp = %d C = %d F ", DS1621_tempC, DS1621_tempF);
  3269  0052AE  0E19               	movlw	low STR_4
  3270  0052B0  0101               	movlb	1	; () banked
  3271  0052B2  6FCA               	movwf	printf@f& (0+255),b
  3272  0052B4  0EFF               	movlw	high STR_4
  3273  0052B6  0101               	movlb	1	; () banked
  3274  0052B8  6FCB               	movwf	(printf@f+1)& (0+255),b
  3275  0052BA  C1A1  F1CC         	movff	_DS1621_tempC,?_printf+2
  3276  0052BE  C1A2  F1CD         	movff	_DS1621_tempC+1,?_printf+3
  3277  0052C2  C1A3  F1CE         	movff	_DS1621_tempF,?_printf+4
  3278  0052C6  C1A4  F1CF         	movff	_DS1621_tempF+1,?_printf+5
  3279  0052CA  EC0E  F000         	call	_printf	;wreg free
  3280                           
  3281                           ;Main.c: 145: printf ("alarm = %d match = %d", PORTAbits.RA2, MATCHED);
  3282  0052CE  0ED8               	movlw	low STR_5
  3283  0052D0  0101               	movlb	1	; () banked
  3284  0052D2  6FCA               	movwf	printf@f& (0+255),b
  3285  0052D4  0EFE               	movlw	high STR_5
  3286  0052D6  0101               	movlb	1	; () banked
  3287  0052D8  6FCB               	movwf	(printf@f+1)& (0+255),b
  3288  0052DA  A480               	btfss	3968,2,c	;volatile
  3289  0052DC  D004               	goto	u18590
  3290  0052DE  0101               	movlb	1	; () banked
  3291  0052E0  6BDE               	clrf	??_main& (0+255),b
  3292  0052E2  2BDE               	incf	??_main& (0+255),f,b
  3293  0052E4  D002               	goto	u18598
  3294  0052E6                     u18590:
  3295  0052E6  0101               	movlb	1	; () banked
  3296  0052E8  6BDE               	clrf	??_main& (0+255),b
  3297  0052EA                     u18598:
  3298  0052EA  0101               	movlb	1	; () banked
  3299  0052EC  51DE               	movf	??_main& (0+255),w,b
  3300  0052EE  0101               	movlb	1	; () banked
  3301  0052F0  6FCC               	movwf	(?_printf+2)& (0+255),b
  3302  0052F2  6BCD               	clrf	(?_printf+3)& (0+255),b
  3303  0052F4  C1A5  F1CE         	movff	_MATCHED,?_printf+4
  3304  0052F8  C1A6  F1CF         	movff	_MATCHED+1,?_printf+5
  3305  0052FC  EC0E  F000         	call	_printf	;wreg free
  3306                           
  3307                           ;Main.c: 146: printf ("RPM = %d  dc = %d\r\n", rpm, duty_cycle);
  3308  005300  0E42               	movlw	low STR_6
  3309  005302  0101               	movlb	1	; () banked
  3310  005304  6FCA               	movwf	printf@f& (0+255),b
  3311  005306  0EFF               	movlw	high STR_6
  3312  005308  0101               	movlb	1	; () banked
  3313  00530A  6FCB               	movwf	(printf@f+1)& (0+255),b
  3314  00530C  C1AF  F1CC         	movff	_rpm,?_printf+2
  3315  005310  C1B0  F1CD         	movff	_rpm+1,?_printf+3
  3316  005314  C0EB  F1CE         	movff	_duty_cycle,?_printf+4
  3317  005318  0101               	movlb	1	; () banked
  3318  00531A  6BCF               	clrf	(?_printf+5)& (0+255),b
  3319  00531C  EC0E  F000         	call	_printf	;wreg free
  3320                           
  3321                           ;Main.c: 147: Monitor_Fan();
  3322  005320  ECB6  F046         	call	_Monitor_Fan	;wreg free
  3323                           
  3324                           ;Main.c: 148: test_alarm();
  3325  005324  EC54  F035         	call	_test_alarm	;wreg free
  3326                           
  3327                           ;Main.c: 149: Update_Screen();
  3328  005328  ECB1  F017         	call	_Update_Screen	;wreg free
  3329  00532C  D000               	goto	l15599
  3330  00532E                     l15599:
  3331                           
  3332                           ;Main.c: 150: }
  3333                           ;Main.c: 152: if (check_for_button_input() == 1)
  3334  00532E  EC7D  F03F         	call	_check_for_button_input	;wreg free
  3335  005332  06E8               	decf	wreg,f,c
  3336  005334  A4D8               	btfss	status,2,c
  3337  005336  D02D               	goto	l15625
  3338                           
  3339                           ;Main.c: 153: {
  3340                           ;Main.c: 155: nec_ok = 0;
  3341  005338  0E00               	movlw	0
  3342  00533A  0101               	movlb	1	; () banked
  3343  00533C  6FAE               	movwf	(_nec_ok+1)& (0+255),b
  3344  00533E  0E00               	movlw	0
  3345  005340  6FAD               	movwf	_nec_ok& (0+255),b
  3346                           
  3347                           ;Main.c: 156: switch (found)
  3348  005342  D017               	goto	l15623
  3349  005344                     l15603:
  3350                           
  3351                           ;Main.c: 159: Do_Beep_Good();
  3352  005344  EC57  F048         	call	_Do_Beep_Good	;wreg free
  3353                           
  3354                           ;Main.c: 160: Do_Setup_Time();
  3355  005348  EC4B  F037         	call	_Do_Setup_Time	;wreg free
  3356                           
  3357                           ;Main.c: 161: break;
  3358  00534C  D022               	goto	l15625
  3359  00534E                     l15607:
  3360                           
  3361                           ;Main.c: 164: Do_Beep_Good();
  3362  00534E  EC57  F048         	call	_Do_Beep_Good	;wreg free
  3363                           
  3364                           ;Main.c: 165: Do_Setup_Alarm_Time();
  3365  005352  EC05  F03A         	call	_Do_Setup_Alarm_Time	;wreg free
  3366                           
  3367                           ;Main.c: 166: break;
  3368  005356  D01D               	goto	l15625
  3369  005358                     l15611:
  3370                           
  3371                           ;Main.c: 169: Do_Beep_Good();
  3372  005358  EC57  F048         	call	_Do_Beep_Good	;wreg free
  3373                           
  3374                           ;Main.c: 170: Setup_Temp_Fan();
  3375  00535C  ECE0  F03E         	call	_Setup_Temp_Fan	;wreg free
  3376                           
  3377                           ;Main.c: 171: break;
  3378  005360  D018               	goto	l15625
  3379  005362                     l15615:
  3380                           
  3381                           ;Main.c: 174: Do_Beep_Good();
  3382  005362  EC57  F048         	call	_Do_Beep_Good	;wreg free
  3383                           
  3384                           ;Main.c: 175: Toggle_Fan_Monitor();
  3385  005366  ECE4  F048         	call	_Toggle_Fan_Monitor	;wreg free
  3386                           
  3387                           ;Main.c: 176: break;
  3388  00536A  D013               	goto	l15625
  3389  00536C                     l15619:
  3390                           
  3391                           ;Main.c: 179: Do_Beep_Bad();
  3392  00536C  EC64  F048         	call	_Do_Beep_Bad	;wreg free
  3393                           
  3394                           ;Main.c: 181: }
  3395                           
  3396                           ;Main.c: 180: break;
  3397  005370  D010               	goto	l15625
  3398  005372                     l15623:
  3399  005372  0100               	movlb	0	; () banked
  3400  005374  51EC               	movf	_found& (0+255),w,b
  3401                           
  3402                           ; Switch size 1, requested type "space"
  3403                           ; Number of cases is 4, Range of values is 0 to 5
  3404                           ; switch strategies available:
  3405                           ; Name         Instructions Cycles
  3406                           ; simple_byte           13     7 (average)
  3407                           ;	Chosen strategy is simple_byte
  3408  005376  0A00               	xorlw	0	; case 0
  3409  005378  B4D8               	btfsc	status,2,c
  3410  00537A  D7E4               	goto	l15603
  3411  00537C  0A01               	xorlw	1	; case 1
  3412  00537E  B4D8               	btfsc	status,2,c
  3413  005380  D7E6               	goto	l15607
  3414  005382  0A03               	xorlw	3	; case 2
  3415  005384  B4D8               	btfsc	status,2,c
  3416  005386  D7E8               	goto	l15611
  3417  005388  0A07               	xorlw	7	; case 5
  3418  00538A  B4D8               	btfsc	status,2,c
  3419  00538C  D7EA               	goto	l15615
  3420  00538E  D7EE               	goto	l15619
  3421                           
  3422                           ; BSR set to: 0
  3423  005390  D000               	goto	l15625
  3424  005392                     l15625:
  3425                           
  3426                           ;Main.c: 182: }
  3427                           ;Main.c: 183: if (INT2_flag == 1)
  3428  005392  0101               	movlb	1	; () banked
  3429  005394  05B4               	decf	_INT2_flag& (0+255),w,b
  3430  005396  A4D8               	btfss	status,2,c
  3431  005398  D71E               	goto	l15571
  3432                           
  3433                           ; BSR set to: 1
  3434                           ;Main.c: 184: {
  3435                           ;Main.c: 185: INT2_flag = 0;
  3436  00539A  0E00               	movlw	0
  3437  00539C  0101               	movlb	1	; () banked
  3438  00539E  6FB4               	movwf	_INT2_flag& (0+255),b
  3439                           
  3440                           ; BSR set to: 1
  3441                           ;Main.c: 186: if (ALARMEN == 0) ALARMEN = 1;
  3442  0053A0  0101               	movlb	1	; () banked
  3443  0053A2  519F               	movf	_ALARMEN& (0+255),w,b
  3444  0053A4  0101               	movlb	1	; () banked
  3445  0053A6  11A0               	iorwf	(_ALARMEN+1)& (0+255),w,b
  3446  0053A8  A4D8               	btfss	status,2,c
  3447  0053AA  D005               	goto	l15633
  3448                           
  3449                           ; BSR set to: 1
  3450  0053AC  0E00               	movlw	0
  3451  0053AE  0101               	movlb	1	; () banked
  3452  0053B0  6FA0               	movwf	(_ALARMEN+1)& (0+255),b
  3453  0053B2  0E01               	movlw	1
  3454  0053B4  D004               	goto	L1
  3455  0053B6                     l15633:
  3456                           
  3457                           ; BSR set to: 1
  3458                           ;Main.c: 187: else ALARMEN = 0;
  3459  0053B6  0E00               	movlw	0
  3460  0053B8  0101               	movlb	1	; () banked
  3461  0053BA  6FA0               	movwf	(_ALARMEN+1)& (0+255),b
  3462  0053BC  0E00               	movlw	0
  3463  0053BE                     L1:
  3464  0053BE  6F9F               	movwf	_ALARMEN& (0+255),b
  3465                           
  3466                           ; BSR set to: 1
  3467                           
  3468                           ; BSR set to: 1
  3469                           
  3470                           ; BSR set to: 1
  3471  0053C0  D70A               	goto	l15571
  3472                           
  3473                           ; BSR set to: 1
  3474                           
  3475                           ; BSR set to: 1
  3476  0053C2  EF0C  F000         	goto	start
  3477  0053C6                     __end_of_main:
  3478                           	opt stack 0
  3479                           tblptru	equ	0xFF8
  3480                           tblptrh	equ	0xFF7
  3481                           tblptrl	equ	0xFF6
  3482                           tablat	equ	0xFF5
  3483                           postinc0	equ	0xFEE
  3484                           wreg	equ	0xFE8
  3485                           postdec1	equ	0xFE5
  3486                           fsr1l	equ	0xFE1
  3487                           status	equ	0xFD8
  3488                           
  3489 ;; *************** function _test_alarm *****************
  3490 ;; Defined at:
  3491 ;;		line 193 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Main.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;		None
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;		None
  3496 ;; Return value:  Size  Location     Type
  3497 ;;		None               void
  3498 ;; Registers used:
  3499 ;;		wreg, status,2, status,0, cstack
  3500 ;; Tracked objects:
  3501 ;;		On entry : 0/0
  3502 ;;		On exit  : 0/0
  3503 ;;		Unchanged: 0/0
  3504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3509 ;;Total ram usage:        0 bytes
  3510 ;; Hardware stack levels used:    1
  3511 ;; Hardware stack levels required when called:   12
  3512 ;; This function calls:
  3513 ;;		_Activate_Buzzer_4KHz
  3514 ;;		_DS3231_Turn_Off_Alarm
  3515 ;;		_DS3231_Turn_On_Alarm
  3516 ;;		_Deactivate_Buzzer
  3517 ;;		_Set_RGB_Color
  3518 ;;		___ftge
  3519 ;; This function is called by:
  3520 ;;		_main
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524                           	psect	text1
  3525  006AA8                     __ptext1:
  3526                           	opt stack 0
  3527  006AA8                     _test_alarm:
  3528                           	opt stack 18
  3529                           
  3530                           ;Main.c: 195: if ((alarm_mode == 0) && (ALARMEN== 1)){
  3531                           
  3532                           ; BSR set to: 1
  3533                           ;incstack = 0
  3534  006AA8  0101               	movlb	1	; () banked
  3535  006AAA  51A7               	movf	_alarm_mode& (0+255),w,b
  3536  006AAC  0101               	movlb	1	; () banked
  3537  006AAE  11A8               	iorwf	(_alarm_mode+1)& (0+255),w,b
  3538  006AB0  A4D8               	btfss	status,2,c
  3539  006AB2  D00E               	goto	l15143
  3540                           
  3541                           ; BSR set to: 1
  3542  006AB4  0101               	movlb	1	; () banked
  3543  006AB6  059F               	decf	_ALARMEN& (0+255),w,b
  3544  006AB8  0101               	movlb	1	; () banked
  3545  006ABA  11A0               	iorwf	(_ALARMEN+1)& (0+255),w,b
  3546  006ABC  A4D8               	btfss	status,2,c
  3547  006ABE  D008               	goto	l15143
  3548                           
  3549                           ; BSR set to: 1
  3550                           ;Main.c: 196: DS3231_Turn_On_Alarm();
  3551  006AC0  EC58  F042         	call	_DS3231_Turn_On_Alarm	;wreg free
  3552                           
  3553                           ;Main.c: 197: alarm_mode = 1;
  3554  006AC4  0E00               	movlw	0
  3555  006AC6  0101               	movlb	1	; () banked
  3556  006AC8  6FA8               	movwf	(_alarm_mode+1)& (0+255),b
  3557  006ACA  0E01               	movlw	1
  3558  006ACC  6FA7               	movwf	_alarm_mode& (0+255),b
  3559                           
  3560                           ;Main.c: 198: }
  3561  006ACE  D06B               	goto	l559
  3562  006AD0                     l15143:
  3563                           
  3564                           ; BSR set to: 1
  3565                           ;Main.c: 200: else if ((alarm_mode == 1) && (ALARMEN== 0)){
  3566  006AD0  0101               	movlb	1	; () banked
  3567  006AD2  05A7               	decf	_alarm_mode& (0+255),w,b
  3568  006AD4  0101               	movlb	1	; () banked
  3569  006AD6  11A8               	iorwf	(_alarm_mode+1)& (0+255),w,b
  3570  006AD8  A4D8               	btfss	status,2,c
  3571  006ADA  D013               	goto	l15159
  3572                           
  3573                           ; BSR set to: 1
  3574  006ADC  0101               	movlb	1	; () banked
  3575  006ADE  519F               	movf	_ALARMEN& (0+255),w,b
  3576  006AE0  0101               	movlb	1	; () banked
  3577  006AE2  11A0               	iorwf	(_ALARMEN+1)& (0+255),w,b
  3578  006AE4  A4D8               	btfss	status,2,c
  3579  006AE6  D00D               	goto	l15159
  3580                           
  3581                           ; BSR set to: 1
  3582                           ;Main.c: 201: DS3231_Turn_Off_Alarm();
  3583  006AE8  EC8E  F042         	call	_DS3231_Turn_Off_Alarm	;wreg free
  3584                           
  3585                           ;Main.c: 202: alarm_mode = 0;
  3586  006AEC  0E00               	movlw	0
  3587  006AEE  0101               	movlb	1	; () banked
  3588  006AF0  6FA8               	movwf	(_alarm_mode+1)& (0+255),b
  3589  006AF2  0E00               	movlw	0
  3590  006AF4  6FA7               	movwf	_alarm_mode& (0+255),b
  3591                           
  3592                           ; BSR set to: 1
  3593                           ;Main.c: 203: PORTDbits.RD0 = 0;
  3594  006AF6  9083               	bcf	3971,0,c	;volatile
  3595                           
  3596                           ; BSR set to: 1
  3597                           ;Main.c: 204: PORTDbits.RD1 = 0;
  3598  006AF8  9283               	bcf	3971,1,c	;volatile
  3599                           
  3600                           ; BSR set to: 1
  3601                           ;Main.c: 205: PORTDbits.RD2 = 0;
  3602  006AFA  9483               	bcf	3971,2,c	;volatile
  3603                           
  3604                           ; BSR set to: 1
  3605                           ;Main.c: 206: Deactivate_Buzzer();
  3606  006AFC  EC6F  F049         	call	_Deactivate_Buzzer	;wreg free
  3607                           
  3608                           ;Main.c: 207: }
  3609  006B00  D052               	goto	l559
  3610  006B02                     l15159:
  3611                           
  3612                           ;Main.c: 209: else if ((alarm_mode == 1) && (ALARMEN == 1)){
  3613  006B02  0101               	movlb	1	; () banked
  3614  006B04  05A7               	decf	_alarm_mode& (0+255),w,b
  3615  006B06  0101               	movlb	1	; () banked
  3616  006B08  11A8               	iorwf	(_alarm_mode+1)& (0+255),w,b
  3617  006B0A  A4D8               	btfss	status,2,c
  3618  006B0C  D04C               	goto	l559
  3619                           
  3620                           ; BSR set to: 1
  3621  006B0E  0101               	movlb	1	; () banked
  3622  006B10  059F               	decf	_ALARMEN& (0+255),w,b
  3623  006B12  0101               	movlb	1	; () banked
  3624  006B14  11A0               	iorwf	(_ALARMEN+1)& (0+255),w,b
  3625  006B16  A4D8               	btfss	status,2,c
  3626  006B18  D046               	goto	l559
  3627                           
  3628                           ; BSR set to: 1
  3629                           ;Main.c: 210: if (PORTAbits.RA2 == 1) {
  3630  006B1A  A480               	btfss	3968,2,c	;volatile
  3631  006B1C  D00B               	goto	l555
  3632                           
  3633                           ; BSR set to: 1
  3634                           ;Main.c: 211: Activate_Buzzer_4KHz();
  3635  006B1E  ECDB  F048         	call	_Activate_Buzzer_4KHz	;wreg free
  3636                           
  3637                           ;Main.c: 212: Set_RGB_Color(color);
  3638  006B22  0101               	movlb	1	; () banked
  3639  006B24  51A9               	movf	_color& (0+255),w,b
  3640  006B26  EC1A  F049         	call	_Set_RGB_Color
  3641                           
  3642                           ;Main.c: 213: MATCHED = 1;
  3643  006B2A  0E00               	movlw	0
  3644  006B2C  0101               	movlb	1	; () banked
  3645  006B2E  6FA6               	movwf	(_MATCHED+1)& (0+255),b
  3646  006B30  0E01               	movlw	1
  3647  006B32  6FA5               	movwf	_MATCHED& (0+255),b
  3648  006B34                     l555:
  3649                           
  3650                           ; BSR set to: 1
  3651                           ;Main.c: 214: }
  3652                           ;Main.c: 216: if (MATCHED == 1){
  3653  006B34  0101               	movlb	1	; () banked
  3654  006B36  05A5               	decf	_MATCHED& (0+255),w,b
  3655  006B38  0101               	movlb	1	; () banked
  3656  006B3A  11A6               	iorwf	(_MATCHED+1)& (0+255),w,b
  3657  006B3C  A4D8               	btfss	status,2,c
  3658  006B3E  D033               	goto	l559
  3659                           
  3660                           ; BSR set to: 1
  3661                           ;Main.c: 217: if (volt > 3.0){
  3662  006B40  0E00               	movlw	0
  3663  006B42  0100               	movlb	0	; () banked
  3664  006B44  6FD6               	movwf	___ftge@ff1& (0+255),b
  3665  006B46  0E40               	movlw	64
  3666  006B48  0100               	movlb	0	; () banked
  3667  006B4A  6FD7               	movwf	(___ftge@ff1+1)& (0+255),b
  3668  006B4C  0E40               	movlw	64
  3669  006B4E  0100               	movlb	0	; () banked
  3670  006B50  6FD8               	movwf	(___ftge@ff1+2)& (0+255),b
  3671  006B52  C19C  F0D9         	movff	_volt,___ftge@ff2
  3672  006B56  C19D  F0DA         	movff	_volt+1,___ftge@ff2+1
  3673  006B5A  C19E  F0DB         	movff	_volt+2,___ftge@ff2+2
  3674  006B5E  ECDC  F03A         	call	___ftge	;wreg free
  3675  006B62  0100               	movlb	0	; () banked
  3676  006B64  B0D8               	btfsc	status,0,c
  3677  006B66  D017               	goto	l15185
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;Main.c: 218: Set_RGB_Color(0);
  3681  006B68  0E00               	movlw	0
  3682  006B6A  EC1A  F049         	call	_Set_RGB_Color
  3683                           
  3684                           ;Main.c: 219: Deactivate_Buzzer();
  3685  006B6E  EC6F  F049         	call	_Deactivate_Buzzer	;wreg free
  3686                           
  3687                           ;Main.c: 220: DS3231_Turn_Off_Alarm();
  3688  006B72  EC8E  F042         	call	_DS3231_Turn_Off_Alarm	;wreg free
  3689                           
  3690                           ;Main.c: 221: MATCHED = 0;
  3691  006B76  0E00               	movlw	0
  3692  006B78  0101               	movlb	1	; () banked
  3693  006B7A  6FA6               	movwf	(_MATCHED+1)& (0+255),b
  3694  006B7C  0E00               	movlw	0
  3695  006B7E  6FA5               	movwf	_MATCHED& (0+255),b
  3696                           
  3697                           ; BSR set to: 1
  3698                           ;Main.c: 222: alarm_mode = 0;
  3699  006B80  0E00               	movlw	0
  3700  006B82  0101               	movlb	1	; () banked
  3701  006B84  6FA8               	movwf	(_alarm_mode+1)& (0+255),b
  3702  006B86  0E00               	movlw	0
  3703  006B88  6FA7               	movwf	_alarm_mode& (0+255),b
  3704                           
  3705                           ; BSR set to: 1
  3706                           ;Main.c: 223: ALARMEN = 0;
  3707  006B8A  0E00               	movlw	0
  3708  006B8C  0101               	movlb	1	; () banked
  3709  006B8E  6FA0               	movwf	(_ALARMEN+1)& (0+255),b
  3710  006B90  0E00               	movlw	0
  3711  006B92  6F9F               	movwf	_ALARMEN& (0+255),b
  3712                           
  3713                           ;Main.c: 224: }
  3714  006B94  D008               	goto	l559
  3715  006B96                     l15185:
  3716                           
  3717                           ;Main.c: 225: else {
  3718                           ;Main.c: 226: Set_RGB_Color(color);
  3719  006B96  0101               	movlb	1	; () banked
  3720  006B98  51A9               	movf	_color& (0+255),w,b
  3721  006B9A  EC1A  F049         	call	_Set_RGB_Color
  3722                           
  3723                           ;Main.c: 227: color++;
  3724  006B9E  0101               	movlb	1	; () banked
  3725  006BA0  4BA9               	infsnz	_color& (0+255),f,b
  3726  006BA2  2BAA               	incf	(_color+1)& (0+255),f,b
  3727                           
  3728                           ; BSR set to: 1
  3729                           
  3730                           ; BSR set to: 1
  3731                           
  3732                           ; BSR set to: 1
  3733                           
  3734                           ; BSR set to: 1
  3735  006BA4  D000               	goto	l559
  3736  006BA6                     l559:
  3737  006BA6  0012               	return		;funcret
  3738  006BA8                     __end_of_test_alarm:
  3739                           	opt stack 0
  3740                           tblptru	equ	0xFF8
  3741                           tblptrh	equ	0xFF7
  3742                           tblptrl	equ	0xFF6
  3743                           tablat	equ	0xFF5
  3744                           postinc0	equ	0xFEE
  3745                           wreg	equ	0xFE8
  3746                           postdec1	equ	0xFE5
  3747                           fsr1l	equ	0xFE1
  3748                           status	equ	0xFD8
  3749                           
  3750 ;; *************** function _Set_RGB_Color *****************
  3751 ;; Defined at:
  3752 ;;		line 145 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/utils.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;  color           1    wreg     unsigned char 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  color           1   14[BANK0 ] unsigned char 
  3757 ;; Return value:  Size  Location     Type
  3758 ;;		None               void
  3759 ;; Registers used:
  3760 ;;		wreg, status,2, status,0
  3761 ;; Tracked objects:
  3762 ;;		On entry : 0/0
  3763 ;;		On exit  : 0/0
  3764 ;;		Unchanged: 0/0
  3765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3767 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3769 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3770 ;;Total ram usage:        1 bytes
  3771 ;; Hardware stack levels used:    1
  3772 ;; Hardware stack levels required when called:    6
  3773 ;; This function calls:
  3774 ;;		Nothing
  3775 ;; This function is called by:
  3776 ;;		_test_alarm
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text2
  3781  009234                     __ptext2:
  3782                           	opt stack 0
  3783  009234                     _Set_RGB_Color:
  3784                           	opt stack 23
  3785                           
  3786                           ;incstack = 0
  3787                           ;Set_RGB_Color@color stored from wreg
  3788  009234  0100               	movlb	0	; () banked
  3789  009236  6F8E               	movwf	Set_RGB_Color@color& (0+255),b
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;utils.c: 148: PORTD = ((PORTD & 0xF8) | (color));
  3793  009238  5083               	movf	3971,w,c	;volatile
  3794  00923A  0BF8               	andlw	248
  3795  00923C  0100               	movlb	0	; () banked
  3796  00923E  118E               	iorwf	Set_RGB_Color@color& (0+255),w,b
  3797  009240  6E83               	movwf	3971,c	;volatile
  3798                           
  3799                           ; BSR set to: 0
  3800  009242  0012               	return		;funcret
  3801  009244                     __end_of_Set_RGB_Color:
  3802                           	opt stack 0
  3803                           tblptru	equ	0xFF8
  3804                           tblptrh	equ	0xFF7
  3805                           tblptrl	equ	0xFF6
  3806                           tablat	equ	0xFF5
  3807                           postinc0	equ	0xFEE
  3808                           wreg	equ	0xFE8
  3809                           postdec1	equ	0xFE5
  3810                           fsr1l	equ	0xFE1
  3811                           status	equ	0xFD8
  3812                           
  3813 ;; *************** function _DS3231_Turn_On_Alarm *****************
  3814 ;; Defined at:
  3815 ;;		line 234 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/I2C_Support.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;		None
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;  Device          1   28[BANK0 ] unsigned char 
  3820 ;;  control_F       1   27[BANK0 ] unsigned char 
  3821 ;;  control_E       1   26[BANK0 ] unsigned char 
  3822 ;;  Address_F       1   25[BANK0 ] unsigned char 
  3823 ;;  Address_E       1   24[BANK0 ] unsigned char 
  3824 ;; Return value:  Size  Location     Type
  3825 ;;		None               void
  3826 ;; Registers used:
  3827 ;;		wreg, status,2, status,0, cstack
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3834 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3836 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3837 ;;Total ram usage:        5 bytes
  3838 ;; Hardware stack levels used:    1
  3839 ;; Hardware stack levels required when called:   11
  3840 ;; This function calls:
  3841 ;;		_DS3231_Init
  3842 ;;		_I2C_Write_Address_Read_One_Byte
  3843 ;;		_I2C_Write_Address_Write_One_Byte
  3844 ;; This function is called by:
  3845 ;;		_test_alarm
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text3
  3850  0084B0                     __ptext3:
  3851                           	opt stack 0
  3852  0084B0                     _DS3231_Turn_On_Alarm:
  3853                           	opt stack 18
  3854                           
  3855                           ;I2C_Support.c: 236: char Device = 0x68;
  3856                           
  3857                           ; BSR set to: 0
  3858                           ;incstack = 0
  3859  0084B0  0E68               	movlw	104
  3860  0084B2  0100               	movlb	0	; () banked
  3861  0084B4  6F9C               	movwf	DS3231_Turn_On_Alarm@Device& (0+255),b
  3862                           
  3863                           ;I2C_Support.c: 237: char Address_E = 0x0E;
  3864  0084B6  0E0E               	movlw	14
  3865  0084B8  0100               	movlb	0	; () banked
  3866  0084BA  6F98               	movwf	DS3231_Turn_On_Alarm@Address_E& (0+255),b
  3867                           
  3868                           ;I2C_Support.c: 238: char Address_F = 0x0F;
  3869  0084BC  0E0F               	movlw	15
  3870  0084BE  0100               	movlb	0	; () banked
  3871  0084C0  6F99               	movwf	DS3231_Turn_On_Alarm@Address_F& (0+255),b
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;I2C_Support.c: 239: char control_E;
  3875                           ;I2C_Support.c: 240: char control_F;
  3876                           ;I2C_Support.c: 242: control_E = I2C_Write_Address_Read_One_Byte(Device, Address_E);
  3877  0084C2  C098  F091         	movff	DS3231_Turn_On_Alarm@Address_E,I2C_Write_Address_Read_One_Byte@Address
  3878  0084C6  0100               	movlb	0	; () banked
  3879  0084C8  519C               	movf	DS3231_Turn_On_Alarm@Device& (0+255),w,b
  3880  0084CA  EC23  F046         	call	_I2C_Write_Address_Read_One_Byte
  3881  0084CE  0100               	movlb	0	; () banked
  3882  0084D0  6F9A               	movwf	DS3231_Turn_On_Alarm@control_E& (0+255),b
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;I2C_Support.c: 243: control_E = control_E | 0x01;
  3886  0084D2  0100               	movlb	0	; () banked
  3887  0084D4  519A               	movf	DS3231_Turn_On_Alarm@control_E& (0+255),w,b
  3888  0084D6  0901               	iorlw	1
  3889  0084D8  0100               	movlb	0	; () banked
  3890  0084DA  6F9A               	movwf	DS3231_Turn_On_Alarm@control_E& (0+255),b
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;I2C_Support.c: 244: I2C_Write_Address_Write_One_Byte(Device, Address_E, control_E);
  3894  0084DC  C098  F090         	movff	DS3231_Turn_On_Alarm@Address_E,I2C_Write_Address_Write_One_Byte@Address
  3895  0084E0  C09A  F091         	movff	DS3231_Turn_On_Alarm@control_E,I2C_Write_Address_Write_One_Byte@Data_Out
  3896  0084E4  0100               	movlb	0	; () banked
  3897  0084E6  519C               	movf	DS3231_Turn_On_Alarm@Device& (0+255),w,b
  3898  0084E8  EC59  F047         	call	_I2C_Write_Address_Write_One_Byte
  3899                           
  3900                           ;I2C_Support.c: 246: control_F = I2C_Write_Address_Read_One_Byte(Device, Address_F);
  3901  0084EC  C099  F091         	movff	DS3231_Turn_On_Alarm@Address_F,I2C_Write_Address_Read_One_Byte@Address
  3902  0084F0  0100               	movlb	0	; () banked
  3903  0084F2  519C               	movf	DS3231_Turn_On_Alarm@Device& (0+255),w,b
  3904  0084F4  EC23  F046         	call	_I2C_Write_Address_Read_One_Byte
  3905  0084F8  0100               	movlb	0	; () banked
  3906  0084FA  6F9B               	movwf	DS3231_Turn_On_Alarm@control_F& (0+255),b
  3907                           
  3908                           ; BSR set to: 0
  3909                           ;I2C_Support.c: 247: control_F = control_F & 0xFE;
  3910  0084FC  0100               	movlb	0	; () banked
  3911  0084FE  519B               	movf	DS3231_Turn_On_Alarm@control_F& (0+255),w,b
  3912  008500  0BFE               	andlw	254
  3913  008502  0100               	movlb	0	; () banked
  3914  008504  6F9B               	movwf	DS3231_Turn_On_Alarm@control_F& (0+255),b
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;I2C_Support.c: 248: I2C_Write_Address_Write_One_Byte(Device, Address_F, control_F);
  3918  008506  C099  F090         	movff	DS3231_Turn_On_Alarm@Address_F,I2C_Write_Address_Write_One_Byte@Address
  3919  00850A  C09B  F091         	movff	DS3231_Turn_On_Alarm@control_F,I2C_Write_Address_Write_One_Byte@Data_Out
  3920  00850E  0100               	movlb	0	; () banked
  3921  008510  519C               	movf	DS3231_Turn_On_Alarm@Device& (0+255),w,b
  3922  008512  EC59  F047         	call	_I2C_Write_Address_Write_One_Byte
  3923                           
  3924                           ;I2C_Support.c: 249: DS3231_Init();
  3925  008516  ECD0  F036         	call	_DS3231_Init	;wreg free
  3926  00851A  0012               	return		;funcret
  3927  00851C                     __end_of_DS3231_Turn_On_Alarm:
  3928                           	opt stack 0
  3929                           tblptru	equ	0xFF8
  3930                           tblptrh	equ	0xFF7
  3931                           tblptrl	equ	0xFF6
  3932                           tablat	equ	0xFF5
  3933                           postinc0	equ	0xFEE
  3934                           wreg	equ	0xFE8
  3935                           postdec1	equ	0xFE5
  3936                           fsr1l	equ	0xFE1
  3937                           status	equ	0xFD8
  3938                           
  3939 ;; *************** function _DS3231_Turn_Off_Alarm *****************
  3940 ;; Defined at:
  3941 ;;		line 217 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/I2C_Support.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;		None
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;  Device          1   28[BANK0 ] unsigned char 
  3946 ;;  control_F       1   27[BANK0 ] unsigned char 
  3947 ;;  control_E       1   26[BANK0 ] unsigned char 
  3948 ;;  Address_F       1   25[BANK0 ] unsigned char 
  3949 ;;  Address_E       1   24[BANK0 ] unsigned char 
  3950 ;; Return value:  Size  Location     Type
  3951 ;;		None               void
  3952 ;; Registers used:
  3953 ;;		wreg, status,2, status,0, cstack
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3960 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3962 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3963 ;;Total ram usage:        5 bytes
  3964 ;; Hardware stack levels used:    1
  3965 ;; Hardware stack levels required when called:   11
  3966 ;; This function calls:
  3967 ;;		_DS3231_Init
  3968 ;;		_I2C_Write_Address_Read_One_Byte
  3969 ;;		_I2C_Write_Address_Write_One_Byte
  3970 ;; This function is called by:
  3971 ;;		_main
  3972 ;;		_test_alarm
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976                           	psect	text4
  3977  00851C                     __ptext4:
  3978                           	opt stack 0
  3979  00851C                     _DS3231_Turn_Off_Alarm:
  3980                           	opt stack 18
  3981                           
  3982                           ;I2C_Support.c: 219: char Device = 0x68;
  3983                           
  3984                           ;incstack = 0
  3985  00851C  0E68               	movlw	104
  3986  00851E  0100               	movlb	0	; () banked
  3987  008520  6F9C               	movwf	DS3231_Turn_Off_Alarm@Device& (0+255),b
  3988                           
  3989                           ;I2C_Support.c: 220: char Address_E = 0x0E;
  3990  008522  0E0E               	movlw	14
  3991  008524  0100               	movlb	0	; () banked
  3992  008526  6F98               	movwf	DS3231_Turn_Off_Alarm@Address_E& (0+255),b
  3993                           
  3994                           ;I2C_Support.c: 221: char Address_F = 0x0F;
  3995  008528  0E0F               	movlw	15
  3996  00852A  0100               	movlb	0	; () banked
  3997  00852C  6F99               	movwf	DS3231_Turn_Off_Alarm@Address_F& (0+255),b
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;I2C_Support.c: 222: char control_E;
  4001                           ;I2C_Support.c: 223: char control_F;
  4002                           ;I2C_Support.c: 225: control_E = I2C_Write_Address_Read_One_Byte(Device, Address_E);
  4003  00852E  C098  F091         	movff	DS3231_Turn_Off_Alarm@Address_E,I2C_Write_Address_Read_One_Byte@Address
  4004  008532  0100               	movlb	0	; () banked
  4005  008534  519C               	movf	DS3231_Turn_Off_Alarm@Device& (0+255),w,b
  4006  008536  EC23  F046         	call	_I2C_Write_Address_Read_One_Byte
  4007  00853A  0100               	movlb	0	; () banked
  4008  00853C  6F9A               	movwf	DS3231_Turn_Off_Alarm@control_E& (0+255),b
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;I2C_Support.c: 226: control_E = control_E & 0xFE;
  4012  00853E  0100               	movlb	0	; () banked
  4013  008540  519A               	movf	DS3231_Turn_Off_Alarm@control_E& (0+255),w,b
  4014  008542  0BFE               	andlw	254
  4015  008544  0100               	movlb	0	; () banked
  4016  008546  6F9A               	movwf	DS3231_Turn_Off_Alarm@control_E& (0+255),b
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;I2C_Support.c: 227: I2C_Write_Address_Write_One_Byte(Device, Address_E, control_E);
  4020  008548  C098  F090         	movff	DS3231_Turn_Off_Alarm@Address_E,I2C_Write_Address_Write_One_Byte@Address
  4021  00854C  C09A  F091         	movff	DS3231_Turn_Off_Alarm@control_E,I2C_Write_Address_Write_One_Byte@Data_Out
  4022  008550  0100               	movlb	0	; () banked
  4023  008552  519C               	movf	DS3231_Turn_Off_Alarm@Device& (0+255),w,b
  4024  008554  EC59  F047         	call	_I2C_Write_Address_Write_One_Byte
  4025                           
  4026                           ;I2C_Support.c: 228: control_F = I2C_Write_Address_Read_One_Byte(Device, Address_F);
  4027  008558  C099  F091         	movff	DS3231_Turn_Off_Alarm@Address_F,I2C_Write_Address_Read_One_Byte@Address
  4028  00855C  0100               	movlb	0	; () banked
  4029  00855E  519C               	movf	DS3231_Turn_Off_Alarm@Device& (0+255),w,b
  4030  008560  EC23  F046         	call	_I2C_Write_Address_Read_One_Byte
  4031  008564  0100               	movlb	0	; () banked
  4032  008566  6F9B               	movwf	DS3231_Turn_Off_Alarm@control_F& (0+255),b
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;I2C_Support.c: 229: control_F = control_F & 0xFE;
  4036  008568  0100               	movlb	0	; () banked
  4037  00856A  519B               	movf	DS3231_Turn_Off_Alarm@control_F& (0+255),w,b
  4038  00856C  0BFE               	andlw	254
  4039  00856E  0100               	movlb	0	; () banked
  4040  008570  6F9B               	movwf	DS3231_Turn_Off_Alarm@control_F& (0+255),b
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;I2C_Support.c: 230: I2C_Write_Address_Write_One_Byte(Device, Address_F, control_F);
  4044  008572  C099  F090         	movff	DS3231_Turn_Off_Alarm@Address_F,I2C_Write_Address_Write_One_Byte@Address
  4045  008576  C09B  F091         	movff	DS3231_Turn_Off_Alarm@control_F,I2C_Write_Address_Write_One_Byte@Data_Out
  4046  00857A  0100               	movlb	0	; () banked
  4047  00857C  519C               	movf	DS3231_Turn_Off_Alarm@Device& (0+255),w,b
  4048  00857E  EC59  F047         	call	_I2C_Write_Address_Write_One_Byte
  4049                           
  4050                           ;I2C_Support.c: 231: DS3231_Init();
  4051  008582  ECD0  F036         	call	_DS3231_Init	;wreg free
  4052  008586  0012               	return		;funcret
  4053  008588                     __end_of_DS3231_Turn_Off_Alarm:
  4054                           	opt stack 0
  4055                           tblptru	equ	0xFF8
  4056                           tblptrh	equ	0xFF7
  4057                           tblptrl	equ	0xFF6
  4058                           tablat	equ	0xFF5
  4059                           postinc0	equ	0xFEE
  4060                           wreg	equ	0xFE8
  4061                           postdec1	equ	0xFE5
  4062                           fsr1l	equ	0xFE1
  4063                           status	equ	0xFD8
  4064                           
  4065 ;; *************** function _DS3231_Init *****************
  4066 ;; Defined at:
  4067 ;;		line 156 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/I2C_Support.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;		None
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;  Device          1   23[BANK0 ] unsigned char 
  4072 ;;  control_E       1   22[BANK0 ] unsigned char 
  4073 ;;  Address_E       1   21[BANK0 ] unsigned char 
  4074 ;;  Address_7       1   20[BANK0 ] unsigned char 
  4075 ;; Return value:  Size  Location     Type
  4076 ;;		None               void
  4077 ;; Registers used:
  4078 ;;		wreg, status,2, status,0, cstack
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 0/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4085 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;Total ram usage:        4 bytes
  4089 ;; Hardware stack levels used:    1
  4090 ;; Hardware stack levels required when called:   10
  4091 ;; This function calls:
  4092 ;;		_I2C_ReStart
  4093 ;;		_I2C_Read
  4094 ;;		_I2C_Start
  4095 ;;		_I2C_Stop
  4096 ;;		_I2C_Write
  4097 ;;		_I2C_Write_Address_Read_One_Byte
  4098 ;;		_I2C_Write_Address_Write_One_Byte
  4099 ;; This function is called by:
  4100 ;;		_DS3231_Turn_Off_Alarm
  4101 ;;		_DS3231_Turn_On_Alarm
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105                           	psect	text5
  4106  006DA0                     __ptext5:
  4107                           	opt stack 0
  4108  006DA0                     _DS3231_Init:
  4109                           	opt stack 18
  4110                           
  4111                           ;I2C_Support.c: 158: char Device = 0x68;
  4112                           
  4113                           ;incstack = 0
  4114  006DA0  0E68               	movlw	104
  4115  006DA2  0100               	movlb	0	; () banked
  4116  006DA4  6F97               	movwf	DS3231_Init@Device& (0+255),b
  4117                           
  4118                           ;I2C_Support.c: 159: char Address_7 = 0x07;
  4119  006DA6  0E07               	movlw	7
  4120  006DA8  0100               	movlb	0	; () banked
  4121  006DAA  6F94               	movwf	DS3231_Init@Address_7& (0+255),b
  4122                           
  4123                           ;I2C_Support.c: 160: char Address_E = 0x0E;
  4124  006DAC  0E0E               	movlw	14
  4125  006DAE  0100               	movlb	0	; () banked
  4126  006DB0  6F95               	movwf	DS3231_Init@Address_E& (0+255),b
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;I2C_Support.c: 161: char control_E;
  4130                           ;I2C_Support.c: 163: control_E = I2C_Write_Address_Read_One_Byte(Device, Address_E);
  4131  006DB2  C095  F091         	movff	DS3231_Init@Address_E,I2C_Write_Address_Read_One_Byte@Address
  4132  006DB6  0100               	movlb	0	; () banked
  4133  006DB8  5197               	movf	DS3231_Init@Device& (0+255),w,b
  4134  006DBA  EC23  F046         	call	_I2C_Write_Address_Read_One_Byte
  4135  006DBE  0100               	movlb	0	; () banked
  4136  006DC0  6F96               	movwf	DS3231_Init@control_E& (0+255),b
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;I2C_Support.c: 164: control_E = control_E & 0x01;
  4140  006DC2  0100               	movlb	0	; () banked
  4141  006DC4  5196               	movf	DS3231_Init@control_E& (0+255),w,b
  4142  006DC6  0B01               	andlw	1
  4143  006DC8  0100               	movlb	0	; () banked
  4144  006DCA  6F96               	movwf	DS3231_Init@control_E& (0+255),b
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;I2C_Support.c: 165: control_E = control_E | 0x25;
  4148  006DCC  0100               	movlb	0	; () banked
  4149  006DCE  5196               	movf	DS3231_Init@control_E& (0+255),w,b
  4150  006DD0  0925               	iorlw	37
  4151  006DD2  0100               	movlb	0	; () banked
  4152  006DD4  6F96               	movwf	DS3231_Init@control_E& (0+255),b
  4153                           
  4154                           ; BSR set to: 0
  4155                           ;I2C_Support.c: 166: I2C_Write_Address_Write_One_Byte(Device, Address_E, control_E);
  4156  006DD6  C095  F090         	movff	DS3231_Init@Address_E,I2C_Write_Address_Write_One_Byte@Address
  4157  006DDA  C096  F091         	movff	DS3231_Init@control_E,I2C_Write_Address_Write_One_Byte@Data_Out
  4158  006DDE  0100               	movlb	0	; () banked
  4159  006DE0  5197               	movf	DS3231_Init@Device& (0+255),w,b
  4160  006DE2  EC59  F047         	call	_I2C_Write_Address_Write_One_Byte
  4161                           
  4162                           ;I2C_Support.c: 167: I2C_Start();
  4163  006DE6  EC08  F049         	call	_I2C_Start	;wreg free
  4164                           
  4165                           ;I2C_Support.c: 168: I2C_Write((Device << 1) | 0);
  4166  006DEA  0100               	movlb	0	; () banked
  4167  006DEC  5197               	movf	DS3231_Init@Device& (0+255),w,b
  4168  006DEE  2597               	addwf	DS3231_Init@Device& (0+255),w,b
  4169  006DF0  EC4E  F045         	call	_I2C_Write
  4170                           
  4171                           ;I2C_Support.c: 169: I2C_Write(Address_7);
  4172  006DF4  0100               	movlb	0	; () banked
  4173  006DF6  5194               	movf	DS3231_Init@Address_7& (0+255),w,b
  4174  006DF8  EC4E  F045         	call	_I2C_Write
  4175                           
  4176                           ;I2C_Support.c: 170: I2C_ReStart();
  4177  006DFC  EC93  F048         	call	_I2C_ReStart	;wreg free
  4178                           
  4179                           ;I2C_Support.c: 171: I2C_Write((Device << 1) | 1);
  4180  006E00  80D8               	bsf	status,0,c
  4181  006E02  0100               	movlb	0	; () banked
  4182  006E04  3597               	rlcf	DS3231_Init@Device& (0+255),w,b
  4183  006E06  EC4E  F045         	call	_I2C_Write
  4184                           
  4185                           ;I2C_Support.c: 172: alarm_second = I2C_Read(1);
  4186  006E0A  0E01               	movlw	1
  4187  006E0C  EC7F  F044         	call	_I2C_Read
  4188  006E10  0100               	movlb	0	; () banked
  4189  006E12  6FE9               	movwf	_alarm_second& (0+255),b
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;I2C_Support.c: 173: alarm_minute = I2C_Read(1);
  4193  006E14  0E01               	movlw	1
  4194  006E16  EC7F  F044         	call	_I2C_Read
  4195  006E1A  0100               	movlb	0	; () banked
  4196  006E1C  6FE8               	movwf	_alarm_minute& (0+255),b
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;I2C_Support.c: 174: alarm_hour = I2C_Read(1);
  4200  006E1E  0E01               	movlw	1
  4201  006E20  EC7F  F044         	call	_I2C_Read
  4202  006E24  0100               	movlb	0	; () banked
  4203  006E26  6FE7               	movwf	_alarm_hour& (0+255),b
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;I2C_Support.c: 175: alarm_date = I2C_Read(0);
  4207  006E28  0E00               	movlw	0
  4208  006E2A  EC7F  F044         	call	_I2C_Read
  4209  006E2E  0100               	movlb	0	; () banked
  4210  006E30  6FE6               	movwf	_alarm_date& (0+255),b
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;I2C_Support.c: 177: alarm_second = alarm_second & 0x7f;
  4214  006E32  0100               	movlb	0	; () banked
  4215  006E34  51E9               	movf	_alarm_second& (0+255),w,b
  4216  006E36  0B7F               	andlw	127
  4217  006E38  0100               	movlb	0	; () banked
  4218  006E3A  6FE9               	movwf	_alarm_second& (0+255),b
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;I2C_Support.c: 178: alarm_minute = alarm_minute & 0x7f;
  4222  006E3C  0100               	movlb	0	; () banked
  4223  006E3E  51E8               	movf	_alarm_minute& (0+255),w,b
  4224  006E40  0B7F               	andlw	127
  4225  006E42  0100               	movlb	0	; () banked
  4226  006E44  6FE8               	movwf	_alarm_minute& (0+255),b
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;I2C_Support.c: 179: alarm_hour = alarm_hour & 0x7f;
  4230  006E46  0100               	movlb	0	; () banked
  4231  006E48  51E7               	movf	_alarm_hour& (0+255),w,b
  4232  006E4A  0B7F               	andlw	127
  4233  006E4C  0100               	movlb	0	; () banked
  4234  006E4E  6FE7               	movwf	_alarm_hour& (0+255),b
  4235                           
  4236                           ; BSR set to: 0
  4237                           ;I2C_Support.c: 180: alarm_date = alarm_date | 0x80;
  4238  006E50  0100               	movlb	0	; () banked
  4239  006E52  51E6               	movf	_alarm_date& (0+255),w,b
  4240  006E54  0980               	iorlw	128
  4241  006E56  0100               	movlb	0	; () banked
  4242  006E58  6FE6               	movwf	_alarm_date& (0+255),b
  4243                           
  4244                           ; BSR set to: 0
  4245                           ;I2C_Support.c: 182: I2C_Start();
  4246  006E5A  EC08  F049         	call	_I2C_Start	;wreg free
  4247                           
  4248                           ;I2C_Support.c: 183: I2C_Write((Device << 1) | 0);
  4249  006E5E  0100               	movlb	0	; () banked
  4250  006E60  5197               	movf	DS3231_Init@Device& (0+255),w,b
  4251  006E62  2597               	addwf	DS3231_Init@Device& (0+255),w,b
  4252  006E64  EC4E  F045         	call	_I2C_Write
  4253                           
  4254                           ;I2C_Support.c: 184: I2C_Write(Address_7);
  4255  006E68  0100               	movlb	0	; () banked
  4256  006E6A  5194               	movf	DS3231_Init@Address_7& (0+255),w,b
  4257  006E6C  EC4E  F045         	call	_I2C_Write
  4258                           
  4259                           ;I2C_Support.c: 186: I2C_Write(alarm_second);
  4260  006E70  0100               	movlb	0	; () banked
  4261  006E72  51E9               	movf	_alarm_second& (0+255),w,b
  4262  006E74  EC4E  F045         	call	_I2C_Write
  4263                           
  4264                           ;I2C_Support.c: 187: I2C_Write(alarm_minute);
  4265  006E78  0100               	movlb	0	; () banked
  4266  006E7A  51E8               	movf	_alarm_minute& (0+255),w,b
  4267  006E7C  EC4E  F045         	call	_I2C_Write
  4268                           
  4269                           ;I2C_Support.c: 188: I2C_Write(alarm_hour);
  4270  006E80  0100               	movlb	0	; () banked
  4271  006E82  51E7               	movf	_alarm_hour& (0+255),w,b
  4272  006E84  EC4E  F045         	call	_I2C_Write
  4273                           
  4274                           ;I2C_Support.c: 189: I2C_Write(alarm_date);
  4275  006E88  0100               	movlb	0	; () banked
  4276  006E8A  51E6               	movf	_alarm_date& (0+255),w,b
  4277  006E8C  EC4E  F045         	call	_I2C_Write
  4278                           
  4279                           ;I2C_Support.c: 190: I2C_Stop();
  4280  006E90  ECFF  F048         	call	_I2C_Stop	;wreg free
  4281  006E94  0012               	return		;funcret
  4282  006E96                     __end_of_DS3231_Init:
  4283                           	opt stack 0
  4284                           tblptru	equ	0xFF8
  4285                           tblptrh	equ	0xFF7
  4286                           tblptrl	equ	0xFF6
  4287                           tablat	equ	0xFF5
  4288                           postinc0	equ	0xFEE
  4289                           wreg	equ	0xFE8
  4290                           postdec1	equ	0xFE5
  4291                           fsr1l	equ	0xFE1
  4292                           status	equ	0xFD8
  4293                           
  4294 ;; *************** function _I2C_Write_Address_Write_One_Byte *****************
  4295 ;; Defined at:
  4296 ;;		line 135 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/I2C_Soft.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;  Device          1    wreg     unsigned char 
  4299 ;;  Address         1   16[BANK0 ] unsigned char 
  4300 ;;  Data_Out        1   17[BANK0 ] unsigned char 
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;  Device          1   18[BANK0 ] unsigned char 
  4303 ;; Return value:  Size  Location     Type
  4304 ;;		None               void
  4305 ;; Registers used:
  4306 ;;		wreg, status,2, status,0, cstack
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4312 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4315 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4316 ;;Total ram usage:        3 bytes
  4317 ;; Hardware stack levels used:    1
  4318 ;; Hardware stack levels required when called:    8
  4319 ;; This function calls:
  4320 ;;		_I2C_Start
  4321 ;;		_I2C_Stop
  4322 ;;		_I2C_Write
  4323 ;; This function is called by:
  4324 ;;		_DS3231_Init
  4325 ;;		_DS3231_Turn_Off_Alarm
  4326 ;;		_DS3231_Turn_On_Alarm
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329                           
  4330                           	psect	text6
  4331  008EB2                     __ptext6:
  4332                           	opt stack 0
  4333  008EB2                     _I2C_Write_Address_Write_One_Byte:
  4334                           	opt stack 20
  4335                           
  4336                           ;incstack = 0
  4337                           ;I2C_Write_Address_Write_One_Byte@Device stored from wreg
  4338  008EB2  0100               	movlb	0	; () banked
  4339  008EB4  6F92               	movwf	I2C_Write_Address_Write_One_Byte@Device& (0+255),b
  4340                           
  4341                           ; BSR set to: 0
  4342                           ;I2C_Soft.c: 137: I2C_Start();
  4343  008EB6  EC08  F049         	call	_I2C_Start	;wreg free
  4344                           
  4345                           ;I2C_Soft.c: 138: I2C_Write((Device << 1) | 0);
  4346  008EBA  0100               	movlb	0	; () banked
  4347  008EBC  5192               	movf	I2C_Write_Address_Write_One_Byte@Device& (0+255),w,b
  4348  008EBE  2592               	addwf	I2C_Write_Address_Write_One_Byte@Device& (0+255),w,b
  4349  008EC0  EC4E  F045         	call	_I2C_Write
  4350                           
  4351                           ;I2C_Soft.c: 139: I2C_Write(Address);
  4352  008EC4  0100               	movlb	0	; () banked
  4353  008EC6  5190               	movf	I2C_Write_Address_Write_One_Byte@Address& (0+255),w,b
  4354  008EC8  EC4E  F045         	call	_I2C_Write
  4355                           
  4356                           ;I2C_Soft.c: 140: I2C_Write(Data_Out);
  4357  008ECC  0100               	movlb	0	; () banked
  4358  008ECE  5191               	movf	I2C_Write_Address_Write_One_Byte@Data_Out& (0+255),w,b
  4359  008ED0  EC4E  F045         	call	_I2C_Write
  4360                           
  4361                           ;I2C_Soft.c: 141: I2C_Stop();
  4362  008ED4  ECFF  F048         	call	_I2C_Stop	;wreg free
  4363  008ED8  0012               	return		;funcret
  4364  008EDA                     __end_of_I2C_Write_Address_Write_One_Byte:
  4365                           	opt stack 0
  4366                           tblptru	equ	0xFF8
  4367                           tblptrh	equ	0xFF7
  4368                           tblptrl	equ	0xFF6
  4369                           tablat	equ	0xFF5
  4370                           postinc0	equ	0xFEE
  4371                           wreg	equ	0xFE8
  4372                           postdec1	equ	0xFE5
  4373                           fsr1l	equ	0xFE1
  4374                           status	equ	0xFD8
  4375                           
  4376 ;; *************** function _I2C_Write_Address_Read_One_Byte *****************
  4377 ;; Defined at:
  4378 ;;		line 122 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/I2C_Soft.c"
  4379 ;; Parameters:    Size  Location     Type
  4380 ;;  Device          1    wreg     unsigned char 
  4381 ;;  Address         1   17[BANK0 ] unsigned char 
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;  Device          1   19[BANK0 ] unsigned char 
  4384 ;;  Data_Ret        1   18[BANK0 ] unsigned char 
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      unsigned char 
  4387 ;; Registers used:
  4388 ;;		wreg, status,2, status,0, cstack
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4394 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4395 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4397 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4398 ;;Total ram usage:        3 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; Hardware stack levels required when called:    9
  4401 ;; This function calls:
  4402 ;;		_I2C_ReStart
  4403 ;;		_I2C_Read
  4404 ;;		_I2C_Start
  4405 ;;		_I2C_Stop
  4406 ;;		_I2C_Write
  4407 ;; This function is called by:
  4408 ;;		_DS3231_Init
  4409 ;;		_DS3231_Turn_Off_Alarm
  4410 ;;		_DS3231_Turn_On_Alarm
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           	psect	text7
  4415  008C46                     __ptext7:
  4416                           	opt stack 0
  4417  008C46                     _I2C_Write_Address_Read_One_Byte:
  4418                           	opt stack 19
  4419                           
  4420                           ;incstack = 0
  4421                           ;I2C_Write_Address_Read_One_Byte@Device stored from wreg
  4422  008C46  0100               	movlb	0	; () banked
  4423  008C48  6F93               	movwf	I2C_Write_Address_Read_One_Byte@Device& (0+255),b
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;I2C_Soft.c: 124: char Data_Ret;
  4427                           ;I2C_Soft.c: 125: I2C_Start();
  4428  008C4A  EC08  F049         	call	_I2C_Start	;wreg free
  4429                           
  4430                           ;I2C_Soft.c: 126: I2C_Write((Device << 1) | 0);
  4431  008C4E  0100               	movlb	0	; () banked
  4432  008C50  5193               	movf	I2C_Write_Address_Read_One_Byte@Device& (0+255),w,b
  4433  008C52  2593               	addwf	I2C_Write_Address_Read_One_Byte@Device& (0+255),w,b
  4434  008C54  EC4E  F045         	call	_I2C_Write
  4435                           
  4436                           ;I2C_Soft.c: 127: I2C_Write(Address);
  4437  008C58  0100               	movlb	0	; () banked
  4438  008C5A  5191               	movf	I2C_Write_Address_Read_One_Byte@Address& (0+255),w,b
  4439  008C5C  EC4E  F045         	call	_I2C_Write
  4440                           
  4441                           ;I2C_Soft.c: 128: I2C_ReStart();
  4442  008C60  EC93  F048         	call	_I2C_ReStart	;wreg free
  4443                           
  4444                           ;I2C_Soft.c: 129: I2C_Write((Device << 1) | 1);
  4445  008C64  80D8               	bsf	status,0,c
  4446  008C66  0100               	movlb	0	; () banked
  4447  008C68  3593               	rlcf	I2C_Write_Address_Read_One_Byte@Device& (0+255),w,b
  4448  008C6A  EC4E  F045         	call	_I2C_Write
  4449                           
  4450                           ;I2C_Soft.c: 130: Data_Ret = I2C_Read(0);
  4451  008C6E  0E00               	movlw	0
  4452  008C70  EC7F  F044         	call	_I2C_Read
  4453  008C74  0100               	movlb	0	; () banked
  4454  008C76  6F92               	movwf	I2C_Write_Address_Read_One_Byte@Data_Ret& (0+255),b
  4455                           
  4456                           ;I2C_Soft.c: 131: I2C_Stop();
  4457  008C78  ECFF  F048         	call	_I2C_Stop	;wreg free
  4458                           
  4459                           ;I2C_Soft.c: 132: return Data_Ret;
  4460  008C7C  0100               	movlb	0	; () banked
  4461  008C7E  5192               	movf	I2C_Write_Address_Read_One_Byte@Data_Ret& (0+255),w,b
  4462  008C80  D000               	goto	l127
  4463  008C82                     l127:
  4464                           
  4465                           ; BSR set to: 0
  4466  008C82  0012               	return		;funcret
  4467  008C84                     __end_of_I2C_Write_Address_Read_One_Byte:
  4468                           	opt stack 0
  4469                           tblptru	equ	0xFF8
  4470                           tblptrh	equ	0xFF7
  4471                           tblptrl	equ	0xFF6
  4472                           tablat	equ	0xFF5
  4473                           postinc0	equ	0xFEE
  4474                           wreg	equ	0xFE8
  4475                           postdec1	equ	0xFE5
  4476                           fsr1l	equ	0xFE1
  4477                           status	equ	0xFD8
  4478                           
  4479 ;; *************** function _Activate_Buzzer_4KHz *****************
  4480 ;; Defined at:
  4481 ;;		line 118 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/utils.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;		None
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;		None
  4486 ;; Return value:  Size  Location     Type
  4487 ;;		None               void
  4488 ;; Registers used:
  4489 ;;		wreg, status,2
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4499 ;;Total ram usage:        0 bytes
  4500 ;; Hardware stack levels used:    1
  4501 ;; Hardware stack levels required when called:    6
  4502 ;; This function calls:
  4503 ;;		Nothing
  4504 ;; This function is called by:
  4505 ;;		_test_alarm
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509                           	psect	text8
  4510  0091B6                     __ptext8:
  4511                           	opt stack 0
  4512  0091B6                     _Activate_Buzzer_4KHz:
  4513                           	opt stack 23
  4514                           
  4515                           ;utils.c: 120: PR2 = 0b01111100 ;
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;incstack = 0
  4519  0091B6  0E7C               	movlw	124
  4520  0091B8  6ECB               	movwf	4043,c	;volatile
  4521                           
  4522                           ;utils.c: 121: T2CON = 0b00000101 ;
  4523  0091BA  0E05               	movlw	5
  4524  0091BC  6ECA               	movwf	4042,c	;volatile
  4525                           
  4526                           ;utils.c: 122: CCPR2L = 0b00111110 ;
  4527  0091BE  0E3E               	movlw	62
  4528  0091C0  6EBB               	movwf	4027,c	;volatile
  4529                           
  4530                           ;utils.c: 123: CCP2CON = 0b00011100 ;
  4531  0091C2  0E1C               	movlw	28
  4532  0091C4  6EBA               	movwf	4026,c	;volatile
  4533  0091C6  0012               	return		;funcret
  4534  0091C8                     __end_of_Activate_Buzzer_4KHz:
  4535                           	opt stack 0
  4536                           tblptru	equ	0xFF8
  4537                           tblptrh	equ	0xFF7
  4538                           tblptrl	equ	0xFF6
  4539                           tablat	equ	0xFF5
  4540                           postinc0	equ	0xFEE
  4541                           wreg	equ	0xFE8
  4542                           postdec1	equ	0xFE5
  4543                           fsr1l	equ	0xFE1
  4544                           status	equ	0xFD8
  4545                           
  4546 ;; *************** function _read_volt *****************
  4547 ;; Defined at:
  4548 ;;		line 152 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/utils.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;		None
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;  voltage         3   89[BANK0 ] float 
  4553 ;;  num_step        2   92[BANK0 ] int 
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  3   86[BANK0 ] float 
  4556 ;; Registers used:
  4557 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4563 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4564 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4566 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4567 ;;Total ram usage:        8 bytes
  4568 ;; Hardware stack levels used:    1
  4569 ;; Hardware stack levels required when called:    8
  4570 ;; This function calls:
  4571 ;;		___awtoft
  4572 ;;		___ftdiv
  4573 ;;		___wmul
  4574 ;;		_get_full_ADC
  4575 ;; This function is called by:
  4576 ;;		_main
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           	psect	text9
  4581  008588                     __ptext9:
  4582                           	opt stack 0
  4583  008588                     _read_volt:
  4584                           	opt stack 22
  4585                           
  4586                           ;utils.c: 155: float voltage;
  4587                           ;utils.c: 156: int num_step = get_full_ADC();
  4588                           
  4589                           ;incstack = 0
  4590  008588  ECD0  F046         	call	_get_full_ADC	;wreg free
  4591  00858C  C08E  F0DC         	movff	?_get_full_ADC,read_volt@num_step
  4592  008590  C08F  F0DD         	movff	?_get_full_ADC+1,read_volt@num_step+1
  4593                           
  4594                           ;utils.c: 157: voltage = num_step * 5 /1024.0;
  4595  008594  C0DC  F08E         	movff	read_volt@num_step,___wmul@multiplier
  4596  008598  C0DD  F08F         	movff	read_volt@num_step+1,___wmul@multiplier+1
  4597  00859C  0E00               	movlw	0
  4598  00859E  0100               	movlb	0	; () banked
  4599  0085A0  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4600  0085A2  0E05               	movlw	5
  4601  0085A4  6F90               	movwf	___wmul@multiplicand& (0+255),b
  4602  0085A6  EC7F  F046         	call	___wmul	;wreg free
  4603  0085AA  C08E  F096         	movff	?___wmul,___awtoft@c
  4604  0085AE  C08F  F097         	movff	?___wmul+1,___awtoft@c+1
  4605  0085B2  EC99  F045         	call	___awtoft	;wreg free
  4606  0085B6  C096  F0C7         	movff	?___awtoft,___ftdiv@f1
  4607  0085BA  C097  F0C8         	movff	?___awtoft+1,___ftdiv@f1+1
  4608  0085BE  C098  F0C9         	movff	?___awtoft+2,___ftdiv@f1+2
  4609  0085C2  0E00               	movlw	0
  4610  0085C4  0100               	movlb	0	; () banked
  4611  0085C6  6FCA               	movwf	___ftdiv@f2& (0+255),b
  4612  0085C8  0E80               	movlw	128
  4613  0085CA  0100               	movlb	0	; () banked
  4614  0085CC  6FCB               	movwf	(___ftdiv@f2+1)& (0+255),b
  4615  0085CE  0E44               	movlw	68
  4616  0085D0  0100               	movlb	0	; () banked
  4617  0085D2  6FCC               	movwf	(___ftdiv@f2+2)& (0+255),b
  4618  0085D4  ECD1  F030         	call	___ftdiv	;wreg free
  4619  0085D8  C0C7  F0D9         	movff	?___ftdiv,read_volt@voltage
  4620  0085DC  C0C8  F0DA         	movff	?___ftdiv+1,read_volt@voltage+1
  4621  0085E0  C0C9  F0DB         	movff	?___ftdiv+2,read_volt@voltage+2
  4622                           
  4623                           ;utils.c: 158: return voltage;
  4624  0085E4  C0D9  F0D6         	movff	read_volt@voltage,?_read_volt
  4625  0085E8  C0DA  F0D7         	movff	read_volt@voltage+1,?_read_volt+1
  4626  0085EC  C0DB  F0D8         	movff	read_volt@voltage+2,?_read_volt+2
  4627  0085F0  D000               	goto	l1367
  4628  0085F2                     l1367:
  4629  0085F2  0012               	return		;funcret
  4630  0085F4                     __end_of_read_volt:
  4631                           	opt stack 0
  4632                           tblptru	equ	0xFF8
  4633                           tblptrh	equ	0xFF7
  4634                           tblptrl	equ	0xFF6
  4635                           tablat	equ	0xFF5
  4636                           postinc0	equ	0xFEE
  4637                           wreg	equ	0xFE8
  4638                           postdec1	equ	0xFE5
  4639                           fsr1l	equ	0xFE1
  4640                           status	equ	0xFD8
  4641                           
  4642 ;; *************** function _get_full_ADC *****************
  4643 ;; Defined at:
  4644 ;;		line 161 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/utils.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;		None
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;  result          2   18[BANK0 ] int 
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  2   14[BANK0 ] unsigned int 
  4651 ;; Registers used:
  4652 ;;		wreg, status,2, status,0
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4658 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4659 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4660 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4661 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4662 ;;Total ram usage:        6 bytes
  4663 ;; Hardware stack levels used:    1
  4664 ;; Hardware stack levels required when called:    6
  4665 ;; This function calls:
  4666 ;;		Nothing
  4667 ;; This function is called by:
  4668 ;;		_read_volt
  4669 ;; This function uses a non-reentrant model
  4670 ;;
  4671                           
  4672                           	psect	text10
  4673  008DA0                     __ptext10:
  4674                           	opt stack 0
  4675  008DA0                     _get_full_ADC:
  4676                           	opt stack 23
  4677                           
  4678                           ;utils.c: 163: int result;
  4679                           ;utils.c: 164: ADCON0bits.GO=1;
  4680                           
  4681                           ;incstack = 0
  4682  008DA0  82C2               	bsf	4034,1,c	;volatile
  4683                           
  4684                           ;utils.c: 165: while(ADCON0bits.DONE==1);
  4685  008DA2  D000               	goto	l1370
  4686  008DA4                     l1370:
  4687  008DA4  B2C2               	btfsc	4034,1,c	;volatile
  4688  008DA6  D7FE               	goto	l1370
  4689                           
  4690                           ;utils.c: 166: result = (ADRESH * 0x100) + ADRESL;
  4691  008DA8  50C4               	movf	4036,w,c	;volatile
  4692  008DAA  0100               	movlb	0	; () banked
  4693  008DAC  6F91               	movwf	(??_get_full_ADC+1)& (0+255),b
  4694  008DAE  6B90               	clrf	??_get_full_ADC& (0+255),b
  4695  008DB0  50C3               	movf	4035,w,c	;volatile
  4696  008DB2  0100               	movlb	0	; () banked
  4697  008DB4  2590               	addwf	??_get_full_ADC& (0+255),w,b
  4698  008DB6  0100               	movlb	0	; () banked
  4699  008DB8  6F92               	movwf	get_full_ADC@result& (0+255),b
  4700  008DBA  0E00               	movlw	0
  4701  008DBC  0100               	movlb	0	; () banked
  4702  008DBE  2191               	addwfc	(??_get_full_ADC+1)& (0+255),w,b
  4703  008DC0  0100               	movlb	0	; () banked
  4704  008DC2  6F93               	movwf	(get_full_ADC@result+1)& (0+255),b
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;utils.c: 167: return result;
  4708  008DC4  C092  F08E         	movff	get_full_ADC@result,?_get_full_ADC
  4709  008DC8  C093  F08F         	movff	get_full_ADC@result+1,?_get_full_ADC+1
  4710  008DCC  D000               	goto	l1373
  4711  008DCE                     l1373:
  4712                           
  4713                           ; BSR set to: 0
  4714  008DCE  0012               	return		;funcret
  4715  008DD0                     __end_of_get_full_ADC:
  4716                           	opt stack 0
  4717                           tblptru	equ	0xFF8
  4718                           tblptrh	equ	0xFF7
  4719                           tblptrl	equ	0xFF6
  4720                           tablat	equ	0xFF5
  4721                           postinc0	equ	0xFEE
  4722                           wreg	equ	0xFE8
  4723                           postdec1	equ	0xFE5
  4724                           fsr1l	equ	0xFE1
  4725                           status	equ	0xFD8
  4726                           
  4727 ;; *************** function ___awtoft *****************
  4728 ;; Defined at:
  4729 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;  c               2   22[BANK0 ] int 
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;  sign            1   25[BANK0 ] unsigned char 
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  3   22[BANK0 ] float 
  4736 ;; Registers used:
  4737 ;;		wreg, status,2, status,0, cstack
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4743 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4744 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4746 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4747 ;;Total ram usage:        4 bytes
  4748 ;; Hardware stack levels used:    1
  4749 ;; Hardware stack levels required when called:    7
  4750 ;; This function calls:
  4751 ;;		___ftpack
  4752 ;; This function is called by:
  4753 ;;		_read_volt
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           	psect	text11
  4758  008B32                     __ptext11:
  4759                           	opt stack 0
  4760  008B32                     ___awtoft:
  4761                           	opt stack 22
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;incstack = 0
  4765  008B32  0E00               	movlw	0
  4766  008B34  0100               	movlb	0	; () banked
  4767  008B36  6F99               	movwf	___awtoft@sign& (0+255),b
  4768                           
  4769                           ; BSR set to: 0
  4770  008B38  0100               	movlb	0	; () banked
  4771  008B3A  AF97               	btfss	(___awtoft@c+1)& (0+255),7,b
  4772  008B3C  D009               	goto	l14489
  4773                           
  4774                           ; BSR set to: 0
  4775  008B3E  0100               	movlb	0	; () banked
  4776  008B40  6D96               	negf	___awtoft@c& (0+255),b
  4777  008B42  1F97               	comf	(___awtoft@c+1)& (0+255),f,b
  4778  008B44  B0D8               	btfsc	status,0,c
  4779  008B46  2B97               	incf	(___awtoft@c+1)& (0+255),f,b
  4780                           
  4781                           ; BSR set to: 0
  4782  008B48  0E01               	movlw	1
  4783  008B4A  0100               	movlb	0	; () banked
  4784  008B4C  6F99               	movwf	___awtoft@sign& (0+255),b
  4785  008B4E  D000               	goto	l14489
  4786  008B50                     l14489:
  4787                           
  4788                           ; BSR set to: 0
  4789  008B50  C096  F08E         	movff	___awtoft@c,___ftpack@arg
  4790  008B54  C097  F08F         	movff	___awtoft@c+1,___ftpack@arg+1
  4791  008B58  0100               	movlb	0	; () banked
  4792  008B5A  6B90               	clrf	(___ftpack@arg+2)& (0+255),b
  4793  008B5C  0E8E               	movlw	142
  4794  008B5E  0100               	movlb	0	; () banked
  4795  008B60  6F91               	movwf	___ftpack@exp& (0+255),b
  4796  008B62  C099  F092         	movff	___awtoft@sign,___ftpack@sign
  4797  008B66  ECA0  F032         	call	___ftpack	;wreg free
  4798  008B6A  C08E  F096         	movff	?___ftpack,?___awtoft
  4799  008B6E  C08F  F097         	movff	?___ftpack+1,?___awtoft+1
  4800  008B72  C090  F098         	movff	?___ftpack+2,?___awtoft+2
  4801  008B76  D000               	goto	l1915
  4802  008B78                     l1915:
  4803  008B78  0012               	return		;funcret
  4804  008B7A                     __end_of___awtoft:
  4805                           	opt stack 0
  4806                           tblptru	equ	0xFF8
  4807                           tblptrh	equ	0xFF7
  4808                           tblptrl	equ	0xFF6
  4809                           tablat	equ	0xFF5
  4810                           postinc0	equ	0xFEE
  4811                           wreg	equ	0xFE8
  4812                           postdec1	equ	0xFE5
  4813                           fsr1l	equ	0xFE1
  4814                           status	equ	0xFD8
  4815                           
  4816 ;; *************** function _get_RPM *****************
  4817 ;; Defined at:
  4818 ;;		line 54 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Fan_Support.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;		None
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;  RPS             2   30[BANK0 ] int 
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  2   28[BANK0 ] int 
  4825 ;; Registers used:
  4826 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4832 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4833 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4835 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4836 ;;Total ram usage:        4 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; Hardware stack levels required when called:    7
  4839 ;; This function calls:
  4840 ;;		___awdiv
  4841 ;;		___wmul
  4842 ;; This function is called by:
  4843 ;;		_main
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847                           	psect	text12
  4848  008B7A                     __ptext12:
  4849                           	opt stack 0
  4850  008B7A                     _get_RPM:
  4851                           	opt stack 23
  4852                           
  4853                           ;Fan_Support.c: 56: int RPS = TMR3L/2;
  4854                           
  4855                           ;incstack = 0
  4856  008B7A  CFB2 F094          	movff	4018,___awdiv@dividend	;volatile
  4857  008B7E  0100               	movlb	0	; () banked
  4858  008B80  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  4859  008B82  0E00               	movlw	0
  4860  008B84  0100               	movlb	0	; () banked
  4861  008B86  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  4862  008B88  0E02               	movlw	2
  4863  008B8A  6F96               	movwf	___awdiv@divisor& (0+255),b
  4864  008B8C  EC74  F03A         	call	___awdiv	;wreg free
  4865  008B90  C094  F09E         	movff	?___awdiv,get_RPM@RPS
  4866  008B94  C095  F09F         	movff	?___awdiv+1,get_RPM@RPS+1
  4867                           
  4868                           ;Fan_Support.c: 57: TMR3L = 0;
  4869  008B98  0E00               	movlw	0
  4870  008B9A  6EB2               	movwf	4018,c	;volatile
  4871                           
  4872                           ;Fan_Support.c: 58: return (RPS*60);
  4873  008B9C  C09E  F08E         	movff	get_RPM@RPS,___wmul@multiplier
  4874  008BA0  C09F  F08F         	movff	get_RPM@RPS+1,___wmul@multiplier+1
  4875  008BA4  0E00               	movlw	0
  4876  008BA6  0100               	movlb	0	; () banked
  4877  008BA8  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4878  008BAA  0E3C               	movlw	60
  4879  008BAC  6F90               	movwf	___wmul@multiplicand& (0+255),b
  4880  008BAE  EC7F  F046         	call	___wmul	;wreg free
  4881  008BB2  C08E  F09C         	movff	?___wmul,?_get_RPM
  4882  008BB6  C08F  F09D         	movff	?___wmul+1,?_get_RPM+1
  4883  008BBA  D000               	goto	l39
  4884  008BBC                     l39:
  4885  008BBC  0012               	return		;funcret
  4886  008BBE                     __end_of_get_RPM:
  4887                           	opt stack 0
  4888                           tblptru	equ	0xFF8
  4889                           tblptrh	equ	0xFF7
  4890                           tblptrl	equ	0xFF6
  4891                           tablat	equ	0xFF5
  4892                           postinc0	equ	0xFEE
  4893                           wreg	equ	0xFE8
  4894                           postdec1	equ	0xFE5
  4895                           fsr1l	equ	0xFE1
  4896                           status	equ	0xFD8
  4897                           
  4898 ;; *************** function _Update_Screen *****************
  4899 ;; Defined at:
  4900 ;;		line 76 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Main_Screen.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;		None
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;  neg_tempF       2   73[BANK0 ] int 
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  2  375[None  ] int 
  4907 ;; Registers used:
  4908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4915 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4916 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4917 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4918 ;;Total ram usage:        4 bytes
  4919 ;; Hardware stack levels used:    1
  4920 ;; Hardware stack levels required when called:   13
  4921 ;; This function calls:
  4922 ;;		___awdiv
  4923 ;;		___awmod
  4924 ;;		___ftmul
  4925 ;;		___fttol
  4926 ;;		_drawtext
  4927 ;;		_strcpy
  4928 ;; This function is called by:
  4929 ;;		_main
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           	psect	text13
  4934  002F62                     __ptext13:
  4935                           	opt stack 0
  4936  002F62                     _Update_Screen:
  4937                           	opt stack 17
  4938                           
  4939                           ;Main_Screen.c: 78: if ((DS1621_tempC & 0x80) == 0x80)
  4940                           
  4941                           ;incstack = 0
  4942  002F62  0101               	movlb	1	; () banked
  4943  002F64  AFA1               	btfss	_DS1621_tempC& (0+255),7,b
  4944  002F66  D025               	goto	l15197
  4945                           
  4946                           ; BSR set to: 1
  4947                           ;Main_Screen.c: 79: {
  4948                           ;Main_Screen.c: 80: tempC[0] = '-';
  4949  002F68  0E2D               	movlw	45
  4950  002F6A  0101               	movlb	1	; () banked
  4951  002F6C  6F8E               	movwf	_tempC& (0+255),b
  4952                           
  4953                           ; BSR set to: 1
  4954                           ;Main_Screen.c: 81: tempC[1] = (DS1621_tempC & 0x7f)/10 + '0';
  4955  002F6E  0E7F               	movlw	127
  4956  002F70  0101               	movlb	1	; () banked
  4957  002F72  15A1               	andwf	_DS1621_tempC& (0+255),w,b
  4958  002F74  0100               	movlb	0	; () banked
  4959  002F76  6F94               	movwf	___awdiv@dividend& (0+255),b
  4960  002F78  0100               	movlb	0	; () banked
  4961  002F7A  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  4962  002F7C  0E00               	movlw	0
  4963  002F7E  0100               	movlb	0	; () banked
  4964  002F80  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  4965  002F82  0E0A               	movlw	10
  4966  002F84  6F96               	movwf	___awdiv@divisor& (0+255),b
  4967  002F86  EC74  F03A         	call	___awdiv	;wreg free
  4968  002F8A  0100               	movlb	0	; () banked
  4969  002F8C  5194               	movf	?___awdiv& (0+255),w,b
  4970  002F8E  0F30               	addlw	48
  4971  002F90  0101               	movlb	1	; () banked
  4972  002F92  6F8F               	movwf	(_tempC+1)& (0+255),b
  4973                           
  4974                           ; BSR set to: 1
  4975                           ;Main_Screen.c: 82: tempC[2] = (DS1621_tempC & 0x7f)%10 + '0';
  4976  002F94  0E7F               	movlw	127
  4977  002F96  0101               	movlb	1	; () banked
  4978  002F98  15A1               	andwf	_DS1621_tempC& (0+255),w,b
  4979  002F9A  0100               	movlb	0	; () banked
  4980  002F9C  6FBA               	movwf	___awmod@dividend& (0+255),b
  4981  002F9E  0100               	movlb	0	; () banked
  4982  002FA0  6BBB               	clrf	(___awmod@dividend+1)& (0+255),b
  4983  002FA2  0E00               	movlw	0
  4984  002FA4  0100               	movlb	0	; () banked
  4985  002FA6  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
  4986  002FA8  0E0A               	movlw	10
  4987  002FAA  6FBC               	movwf	___awmod@divisor& (0+255),b
  4988  002FAC  EC87  F03D         	call	___awmod	;wreg free
  4989  002FB0  D01E               	goto	L2
  4990  002FB2                     l15197:
  4991                           
  4992                           ; BSR set to: 1
  4993                           ;Main_Screen.c: 84: else
  4994                           ;Main_Screen.c: 85: {
  4995                           ;Main_Screen.c: 86: tempC[0] = '+';
  4996  002FB2  0E2B               	movlw	43
  4997  002FB4  0101               	movlb	1	; () banked
  4998  002FB6  6F8E               	movwf	_tempC& (0+255),b
  4999                           
  5000                           ; BSR set to: 1
  5001                           ;Main_Screen.c: 87: tempC[1] = DS1621_tempC/10 + '0';
  5002  002FB8  C1A1  F094         	movff	_DS1621_tempC,___awdiv@dividend
  5003  002FBC  C1A2  F095         	movff	_DS1621_tempC+1,___awdiv@dividend+1
  5004  002FC0  0E00               	movlw	0
  5005  002FC2  0100               	movlb	0	; () banked
  5006  002FC4  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5007  002FC6  0E0A               	movlw	10
  5008  002FC8  6F96               	movwf	___awdiv@divisor& (0+255),b
  5009  002FCA  EC74  F03A         	call	___awdiv	;wreg free
  5010  002FCE  0100               	movlb	0	; () banked
  5011  002FD0  5194               	movf	?___awdiv& (0+255),w,b
  5012  002FD2  0F30               	addlw	48
  5013  002FD4  0101               	movlb	1	; () banked
  5014  002FD6  6F8F               	movwf	(_tempC+1)& (0+255),b
  5015                           
  5016                           ; BSR set to: 1
  5017                           ;Main_Screen.c: 88: tempC[2] = DS1621_tempC%10 + '0';
  5018  002FD8  C1A1  F0BA         	movff	_DS1621_tempC,___awmod@dividend
  5019  002FDC  C1A2  F0BB         	movff	_DS1621_tempC+1,___awmod@dividend+1
  5020  002FE0  0E00               	movlw	0
  5021  002FE2  0100               	movlb	0	; () banked
  5022  002FE4  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
  5023  002FE6  0E0A               	movlw	10
  5024  002FE8  6FBC               	movwf	___awmod@divisor& (0+255),b
  5025  002FEA  EC87  F03D         	call	___awmod	;wreg free
  5026  002FEE                     L2:
  5027  002FEE  0100               	movlb	0	; () banked
  5028  002FF0  51BA               	movf	?___awmod& (0+255),w,b
  5029  002FF2  0F30               	addlw	48
  5030  002FF4  0101               	movlb	1	; () banked
  5031  002FF6  6F90               	movwf	(_tempC+2)& (0+255),b
  5032  002FF8  D000               	goto	l15203
  5033  002FFA                     l15203:
  5034                           
  5035                           ; BSR set to: 1
  5036                           ;Main_Screen.c: 89: }
  5037                           ;Main_Screen.c: 91: if (DS1621_tempF < 0)
  5038  002FFA  0101               	movlb	1	; () banked
  5039  002FFC  AFA4               	btfss	(_DS1621_tempF+1)& (0+255),7,b
  5040  002FFE  D02C               	goto	l15213
  5041                           
  5042                           ; BSR set to: 1
  5043                           ;Main_Screen.c: 92: {
  5044                           ;Main_Screen.c: 93: tempF[0] = '-';
  5045  003000  0E2D               	movlw	45
  5046  003002  0101               	movlb	1	; () banked
  5047  003004  6F92               	movwf	_tempF& (0+255),b
  5048                           
  5049                           ; BSR set to: 1
  5050                           ;Main_Screen.c: 94: int neg_tempF = -DS1621_tempF;
  5051  003006  C1A3  F0C7         	movff	_DS1621_tempF,??_Update_Screen
  5052  00300A  C1A4  F0C8         	movff	_DS1621_tempF+1,??_Update_Screen+1
  5053  00300E  0100               	movlb	0	; () banked
  5054  003010  1FC7               	comf	??_Update_Screen& (0+255),f,b
  5055  003012  1FC8               	comf	(??_Update_Screen+1)& (0+255),f,b
  5056  003014  4BC7               	infsnz	??_Update_Screen& (0+255),f,b
  5057  003016  2BC8               	incf	(??_Update_Screen+1)& (0+255),f,b
  5058  003018  C0C7  F0C9         	movff	??_Update_Screen,Update_Screen@neg_tempF
  5059  00301C  C0C8  F0CA         	movff	??_Update_Screen+1,Update_Screen@neg_tempF+1
  5060                           
  5061                           ; BSR set to: 0
  5062                           ;Main_Screen.c: 95: tempF[1] = neg_tempF/10 + '0';
  5063  003020  C0C9  F094         	movff	Update_Screen@neg_tempF,___awdiv@dividend
  5064  003024  C0CA  F095         	movff	Update_Screen@neg_tempF+1,___awdiv@dividend+1
  5065  003028  0E00               	movlw	0
  5066  00302A  0100               	movlb	0	; () banked
  5067  00302C  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5068  00302E  0E0A               	movlw	10
  5069  003030  6F96               	movwf	___awdiv@divisor& (0+255),b
  5070  003032  EC74  F03A         	call	___awdiv	;wreg free
  5071  003036  0100               	movlb	0	; () banked
  5072  003038  5194               	movf	?___awdiv& (0+255),w,b
  5073  00303A  0F30               	addlw	48
  5074  00303C  0101               	movlb	1	; () banked
  5075  00303E  6F93               	movwf	(_tempF+1)& (0+255),b
  5076                           
  5077                           ; BSR set to: 1
  5078                           ;Main_Screen.c: 96: tempF[2] = neg_tempF%10 + '0';
  5079  003040  C0C9  F0BA         	movff	Update_Screen@neg_tempF,___awmod@dividend
  5080  003044  C0CA  F0BB         	movff	Update_Screen@neg_tempF+1,___awmod@dividend+1
  5081  003048  0E00               	movlw	0
  5082  00304A  0100               	movlb	0	; () banked
  5083  00304C  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
  5084  00304E  0E0A               	movlw	10
  5085  003050  6FBC               	movwf	___awmod@divisor& (0+255),b
  5086  003052  EC87  F03D         	call	___awmod	;wreg free
  5087  003056  D01E               	goto	L3
  5088  003058                     l15213:
  5089                           
  5090                           ; BSR set to: 1
  5091                           ;Main_Screen.c: 98: else
  5092                           ;Main_Screen.c: 99: {
  5093                           ;Main_Screen.c: 100: tempF[0] = '+';
  5094  003058  0E2B               	movlw	43
  5095  00305A  0101               	movlb	1	; () banked
  5096  00305C  6F92               	movwf	_tempF& (0+255),b
  5097                           
  5098                           ; BSR set to: 1
  5099                           ;Main_Screen.c: 101: tempF[1] = DS1621_tempF/10 + '0';
  5100  00305E  C1A3  F094         	movff	_DS1621_tempF,___awdiv@dividend
  5101  003062  C1A4  F095         	movff	_DS1621_tempF+1,___awdiv@dividend+1
  5102  003066  0E00               	movlw	0
  5103  003068  0100               	movlb	0	; () banked
  5104  00306A  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5105  00306C  0E0A               	movlw	10
  5106  00306E  6F96               	movwf	___awdiv@divisor& (0+255),b
  5107  003070  EC74  F03A         	call	___awdiv	;wreg free
  5108  003074  0100               	movlb	0	; () banked
  5109  003076  5194               	movf	?___awdiv& (0+255),w,b
  5110  003078  0F30               	addlw	48
  5111  00307A  0101               	movlb	1	; () banked
  5112  00307C  6F93               	movwf	(_tempF+1)& (0+255),b
  5113                           
  5114                           ; BSR set to: 1
  5115                           ;Main_Screen.c: 102: tempF[2] = DS1621_tempF%10 + '0';
  5116  00307E  C1A3  F0BA         	movff	_DS1621_tempF,___awmod@dividend
  5117  003082  C1A4  F0BB         	movff	_DS1621_tempF+1,___awmod@dividend+1
  5118  003086  0E00               	movlw	0
  5119  003088  0100               	movlb	0	; () banked
  5120  00308A  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
  5121  00308C  0E0A               	movlw	10
  5122  00308E  6FBC               	movwf	___awmod@divisor& (0+255),b
  5123  003090  EC87  F03D         	call	___awmod	;wreg free
  5124  003094                     L3:
  5125  003094  0100               	movlb	0	; () banked
  5126  003096  51BA               	movf	?___awmod& (0+255),w,b
  5127  003098  0F30               	addlw	48
  5128  00309A  0101               	movlb	1	; () banked
  5129  00309C  6F94               	movwf	(_tempF+2)& (0+255),b
  5130  00309E  D000               	goto	l15219
  5131  0030A0                     l15219:
  5132                           
  5133                           ; BSR set to: 1
  5134                           ;Main_Screen.c: 103: }
  5135                           ;Main_Screen.c: 104: time[0] = (hour>>4) + '0';
  5136  0030A0  0100               	movlb	0	; () banked
  5137  0030A2  39ED               	swapf	_hour& (0+255),w,b
  5138  0030A4  0B0F               	andlw	15
  5139  0030A6  0F30               	addlw	48
  5140  0030A8  0101               	movlb	1	; () banked
  5141  0030AA  6F64               	movwf	_time& (0+255),b
  5142                           
  5143                           ; BSR set to: 1
  5144                           ;Main_Screen.c: 105: time[1] = (hour & 0x0f)+ '0';
  5145  0030AC  0100               	movlb	0	; () banked
  5146  0030AE  51ED               	movf	_hour& (0+255),w,b
  5147  0030B0  0B0F               	andlw	15
  5148  0030B2  0F30               	addlw	48
  5149  0030B4  0101               	movlb	1	; () banked
  5150  0030B6  6F65               	movwf	(_time+1)& (0+255),b
  5151                           
  5152                           ; BSR set to: 1
  5153                           ;Main_Screen.c: 106: time[3] = (minute>>4) + '0';
  5154  0030B8  0100               	movlb	0	; () banked
  5155  0030BA  39EE               	swapf	_minute& (0+255),w,b
  5156  0030BC  0B0F               	andlw	15
  5157  0030BE  0F30               	addlw	48
  5158  0030C0  0101               	movlb	1	; () banked
  5159  0030C2  6F67               	movwf	(_time+3)& (0+255),b
  5160                           
  5161                           ; BSR set to: 1
  5162                           ;Main_Screen.c: 107: time[4] = (minute & 0x0f) + '0';
  5163  0030C4  0100               	movlb	0	; () banked
  5164  0030C6  51EE               	movf	_minute& (0+255),w,b
  5165  0030C8  0B0F               	andlw	15
  5166  0030CA  0F30               	addlw	48
  5167  0030CC  0101               	movlb	1	; () banked
  5168  0030CE  6F68               	movwf	(_time+4)& (0+255),b
  5169                           
  5170                           ; BSR set to: 1
  5171                           ;Main_Screen.c: 108: time[6] = (second>>4) + '0';
  5172  0030D0  0100               	movlb	0	; () banked
  5173  0030D2  39F0               	swapf	_second& (0+255),w,b
  5174  0030D4  0B0F               	andlw	15
  5175  0030D6  0F30               	addlw	48
  5176  0030D8  0101               	movlb	1	; () banked
  5177  0030DA  6F6A               	movwf	(_time+6)& (0+255),b
  5178                           
  5179                           ; BSR set to: 1
  5180                           ;Main_Screen.c: 109: time[7] = (second & 0x0f) + '0';
  5181  0030DC  0100               	movlb	0	; () banked
  5182  0030DE  51F0               	movf	_second& (0+255),w,b
  5183  0030E0  0B0F               	andlw	15
  5184  0030E2  0F30               	addlw	48
  5185  0030E4  0101               	movlb	1	; () banked
  5186  0030E6  6F6B               	movwf	(_time+7)& (0+255),b
  5187                           
  5188                           ; BSR set to: 1
  5189                           ;Main_Screen.c: 110: date[0] = (month>>4) + '0';
  5190  0030E8  0100               	movlb	0	; () banked
  5191  0030EA  39EF               	swapf	_month& (0+255),w,b
  5192  0030EC  0B0F               	andlw	15
  5193  0030EE  0F30               	addlw	48
  5194  0030F0  0101               	movlb	1	; () banked
  5195  0030F2  6F40               	movwf	_date& (0+255),b
  5196                           
  5197                           ; BSR set to: 1
  5198                           ;Main_Screen.c: 111: date[1] = (month & 0x0f) + '0';
  5199  0030F4  0100               	movlb	0	; () banked
  5200  0030F6  51EF               	movf	_month& (0+255),w,b
  5201  0030F8  0B0F               	andlw	15
  5202  0030FA  0F30               	addlw	48
  5203  0030FC  0101               	movlb	1	; () banked
  5204  0030FE  6F41               	movwf	(_date+1)& (0+255),b
  5205                           
  5206                           ; BSR set to: 1
  5207                           ;Main_Screen.c: 112: date[3] = (day>>4) + '0';
  5208  003100  0100               	movlb	0	; () banked
  5209  003102  39EA               	swapf	_day& (0+255),w,b
  5210  003104  0B0F               	andlw	15
  5211  003106  0F30               	addlw	48
  5212  003108  0101               	movlb	1	; () banked
  5213  00310A  6F43               	movwf	(_date+3)& (0+255),b
  5214                           
  5215                           ; BSR set to: 1
  5216                           ;Main_Screen.c: 113: date[4] = (day & 0x0f) + '0';
  5217  00310C  0100               	movlb	0	; () banked
  5218  00310E  51EA               	movf	_day& (0+255),w,b
  5219  003110  0B0F               	andlw	15
  5220  003112  0F30               	addlw	48
  5221  003114  0101               	movlb	1	; () banked
  5222  003116  6F44               	movwf	(_date+4)& (0+255),b
  5223                           
  5224                           ; BSR set to: 1
  5225                           ;Main_Screen.c: 114: date[6] = (year>>4) + '0';
  5226  003118  0100               	movlb	0	; () banked
  5227  00311A  39F1               	swapf	_year& (0+255),w,b
  5228  00311C  0B0F               	andlw	15
  5229  00311E  0F30               	addlw	48
  5230  003120  0101               	movlb	1	; () banked
  5231  003122  6F46               	movwf	(_date+6)& (0+255),b
  5232                           
  5233                           ; BSR set to: 1
  5234                           ;Main_Screen.c: 115: date[7] = (year &0x0f) + '0';
  5235  003124  0100               	movlb	0	; () banked
  5236  003126  51F1               	movf	_year& (0+255),w,b
  5237  003128  0B0F               	andlw	15
  5238  00312A  0F30               	addlw	48
  5239  00312C  0101               	movlb	1	; () banked
  5240  00312E  6F47               	movwf	(_date+7)& (0+255),b
  5241                           
  5242                           ; BSR set to: 1
  5243                           ;Main_Screen.c: 116: alarm_time[0] = (alarm_hour>>4) + '0';
  5244  003130  0100               	movlb	0	; () banked
  5245  003132  39E7               	swapf	_alarm_hour& (0+255),w,b
  5246  003134  0B0F               	andlw	15
  5247  003136  0F30               	addlw	48
  5248  003138  0101               	movlb	1	; () banked
  5249  00313A  6F37               	movwf	_alarm_time& (0+255),b
  5250                           
  5251                           ; BSR set to: 1
  5252                           ;Main_Screen.c: 117: alarm_time[1] = (alarm_hour & 0x0f)+ '0';
  5253  00313C  0100               	movlb	0	; () banked
  5254  00313E  51E7               	movf	_alarm_hour& (0+255),w,b
  5255  003140  0B0F               	andlw	15
  5256  003142  0F30               	addlw	48
  5257  003144  0101               	movlb	1	; () banked
  5258  003146  6F38               	movwf	(_alarm_time+1)& (0+255),b
  5259                           
  5260                           ; BSR set to: 1
  5261                           ;Main_Screen.c: 118: alarm_time[3] = (alarm_minute>>4) + '0';
  5262  003148  0100               	movlb	0	; () banked
  5263  00314A  39E8               	swapf	_alarm_minute& (0+255),w,b
  5264  00314C  0B0F               	andlw	15
  5265  00314E  0F30               	addlw	48
  5266  003150  0101               	movlb	1	; () banked
  5267  003152  6F3A               	movwf	(_alarm_time+3)& (0+255),b
  5268                           
  5269                           ; BSR set to: 1
  5270                           ;Main_Screen.c: 119: alarm_time[4] = (alarm_minute & 0x0f) + '0';
  5271  003154  0100               	movlb	0	; () banked
  5272  003156  51E8               	movf	_alarm_minute& (0+255),w,b
  5273  003158  0B0F               	andlw	15
  5274  00315A  0F30               	addlw	48
  5275  00315C  0101               	movlb	1	; () banked
  5276  00315E  6F3B               	movwf	(_alarm_time+4)& (0+255),b
  5277                           
  5278                           ; BSR set to: 1
  5279                           ;Main_Screen.c: 120: alarm_time[6] = (alarm_second>>4) + '0';
  5280  003160  0100               	movlb	0	; () banked
  5281  003162  39E9               	swapf	_alarm_second& (0+255),w,b
  5282  003164  0B0F               	andlw	15
  5283  003166  0F30               	addlw	48
  5284  003168  0101               	movlb	1	; () banked
  5285  00316A  6F3D               	movwf	(_alarm_time+6)& (0+255),b
  5286                           
  5287                           ; BSR set to: 1
  5288                           ;Main_Screen.c: 121: alarm_time[7] = (alarm_second & 0x0f) + '0';
  5289  00316C  0100               	movlb	0	; () banked
  5290  00316E  51E9               	movf	_alarm_second& (0+255),w,b
  5291  003170  0B0F               	andlw	15
  5292  003172  0F30               	addlw	48
  5293  003174  0101               	movlb	1	; () banked
  5294  003176  6F3E               	movwf	(_alarm_time+7)& (0+255),b
  5295                           
  5296                           ; BSR set to: 1
  5297                           ;Main_Screen.c: 123: if (ALARMEN == 1)
  5298  003178  0101               	movlb	1	; () banked
  5299  00317A  059F               	decf	_ALARMEN& (0+255),w,b
  5300  00317C  0101               	movlb	1	; () banked
  5301  00317E  11A0               	iorwf	(_ALARMEN+1)& (0+255),w,b
  5302  003180  A4D8               	btfss	status,2,c
  5303  003182  D00F               	goto	l15259
  5304                           
  5305                           ; BSR set to: 1
  5306                           ;Main_Screen.c: 124: {
  5307                           ;Main_Screen.c: 125: strcpy(Alarm_SW_Txt, "ON ");
  5308  003184  0E82               	movlw	low _Alarm_SW_Txt
  5309  003186  0100               	movlb	0	; () banked
  5310  003188  6F8E               	movwf	strcpy@to& (0+255),b
  5311  00318A  0E01               	movlw	high _Alarm_SW_Txt
  5312  00318C  0100               	movlb	0	; () banked
  5313  00318E  6F8F               	movwf	(strcpy@to+1)& (0+255),b
  5314  003190  0EEA               	movlw	low STR_21
  5315  003192  0100               	movlb	0	; () banked
  5316  003194  6F90               	movwf	strcpy@from& (0+255),b
  5317  003196  0EFF               	movlw	high STR_21
  5318  003198  0100               	movlb	0	; () banked
  5319  00319A  6F91               	movwf	(strcpy@from+1)& (0+255),b
  5320  00319C  EC9B  F046         	call	_strcpy	;wreg free
  5321                           
  5322                           ;Main_Screen.c: 126: }
  5323  0031A0  D00F               	goto	l15261
  5324  0031A2                     l15259:
  5325                           
  5326                           ;Main_Screen.c: 127: else
  5327                           ;Main_Screen.c: 128: {
  5328                           ;Main_Screen.c: 129: strcpy(Alarm_SW_Txt, "OFF");
  5329  0031A2  0E82               	movlw	low _Alarm_SW_Txt
  5330  0031A4  0100               	movlb	0	; () banked
  5331  0031A6  6F8E               	movwf	strcpy@to& (0+255),b
  5332  0031A8  0E01               	movlw	high _Alarm_SW_Txt
  5333  0031AA  0100               	movlb	0	; () banked
  5334  0031AC  6F8F               	movwf	(strcpy@to+1)& (0+255),b
  5335  0031AE  0EEE               	movlw	low STR_22
  5336  0031B0  0100               	movlb	0	; () banked
  5337  0031B2  6F90               	movwf	strcpy@from& (0+255),b
  5338  0031B4  0EFF               	movlw	high STR_22
  5339  0031B6  0100               	movlb	0	; () banked
  5340  0031B8  6F91               	movwf	(strcpy@from+1)& (0+255),b
  5341  0031BA  EC9B  F046         	call	_strcpy	;wreg free
  5342  0031BE  D000               	goto	l15261
  5343  0031C0                     l15261:
  5344                           
  5345                           ;Main_Screen.c: 130: }
  5346                           ;Main_Screen.c: 132: Fan_Set_Temp_Txt[0] = fan_set_temp/100 + '0';
  5347  0031C0  C134  F094         	movff	_fan_set_temp,___awdiv@dividend
  5348  0031C4  0100               	movlb	0	; () banked
  5349  0031C6  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  5350  0031C8  0E00               	movlw	0
  5351  0031CA  0100               	movlb	0	; () banked
  5352  0031CC  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5353  0031CE  0E64               	movlw	100
  5354  0031D0  6F96               	movwf	___awdiv@divisor& (0+255),b
  5355  0031D2  EC74  F03A         	call	___awdiv	;wreg free
  5356  0031D6  0100               	movlb	0	; () banked
  5357  0031D8  5194               	movf	?___awdiv& (0+255),w,b
  5358  0031DA  0F30               	addlw	48
  5359  0031DC  0101               	movlb	1	; () banked
  5360  0031DE  6F73               	movwf	_Fan_Set_Temp_Txt& (0+255),b
  5361                           
  5362                           ; BSR set to: 1
  5363                           ;Main_Screen.c: 133: Fan_Set_Temp_Txt[1] = (fan_set_temp/10)%10 + '0';
  5364  0031E0  0E00               	movlw	0
  5365  0031E2  0100               	movlb	0	; () banked
  5366  0031E4  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5367  0031E6  0E0A               	movlw	10
  5368  0031E8  6F96               	movwf	___awdiv@divisor& (0+255),b
  5369  0031EA  C134  F094         	movff	_fan_set_temp,___awdiv@dividend
  5370  0031EE  0100               	movlb	0	; () banked
  5371  0031F0  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  5372  0031F2  EC74  F03A         	call	___awdiv	;wreg free
  5373  0031F6  C094  F0BA         	movff	?___awdiv,___awmod@dividend
  5374  0031FA  C095  F0BB         	movff	?___awdiv+1,___awmod@dividend+1
  5375  0031FE  0E00               	movlw	0
  5376  003200  0100               	movlb	0	; () banked
  5377  003202  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
  5378  003204  0E0A               	movlw	10
  5379  003206  6FBC               	movwf	___awmod@divisor& (0+255),b
  5380  003208  EC87  F03D         	call	___awmod	;wreg free
  5381  00320C  0100               	movlb	0	; () banked
  5382  00320E  51BA               	movf	?___awmod& (0+255),w,b
  5383  003210  0F30               	addlw	48
  5384  003212  0101               	movlb	1	; () banked
  5385  003214  6F74               	movwf	(_Fan_Set_Temp_Txt+1)& (0+255),b
  5386                           
  5387                           ; BSR set to: 1
  5388                           ;Main_Screen.c: 134: Fan_Set_Temp_Txt[2] = (fan_set_temp%10) + '0';
  5389  003216  C134  F0BA         	movff	_fan_set_temp,___awmod@dividend
  5390  00321A  0100               	movlb	0	; () banked
  5391  00321C  6BBB               	clrf	(___awmod@dividend+1)& (0+255),b
  5392  00321E  0E00               	movlw	0
  5393  003220  0100               	movlb	0	; () banked
  5394  003222  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
  5395  003224  0E0A               	movlw	10
  5396  003226  6FBC               	movwf	___awmod@divisor& (0+255),b
  5397  003228  EC87  F03D         	call	___awmod	;wreg free
  5398  00322C  0100               	movlb	0	; () banked
  5399  00322E  51BA               	movf	?___awmod& (0+255),w,b
  5400  003230  0F30               	addlw	48
  5401  003232  0101               	movlb	1	; () banked
  5402  003234  6F75               	movwf	(_Fan_Set_Temp_Txt+2)& (0+255),b
  5403                           
  5404                           ; BSR set to: 1
  5405                           ;Main_Screen.c: 136: if (FAN == 1)
  5406  003236  047D               	decf	_FAN,w,c
  5407  003238  A4D8               	btfss	status,2,c
  5408  00323A  D00F               	goto	l15271
  5409                           
  5410                           ; BSR set to: 1
  5411                           ;Main_Screen.c: 137: {
  5412                           ;Main_Screen.c: 138: strcpy(Fan_SW_Txt, "ON ");
  5413  00323C  0E8A               	movlw	low _Fan_SW_Txt
  5414  00323E  0100               	movlb	0	; () banked
  5415  003240  6F8E               	movwf	strcpy@to& (0+255),b
  5416  003242  0E01               	movlw	high _Fan_SW_Txt
  5417  003244  0100               	movlb	0	; () banked
  5418  003246  6F8F               	movwf	(strcpy@to+1)& (0+255),b
  5419  003248  0EEA               	movlw	low STR_21
  5420  00324A  0100               	movlb	0	; () banked
  5421  00324C  6F90               	movwf	strcpy@from& (0+255),b
  5422  00324E  0EFF               	movlw	high STR_21
  5423  003250  0100               	movlb	0	; () banked
  5424  003252  6F91               	movwf	(strcpy@from+1)& (0+255),b
  5425  003254  EC9B  F046         	call	_strcpy	;wreg free
  5426                           
  5427                           ;Main_Screen.c: 139: }
  5428  003258  D00F               	goto	l15273
  5429  00325A                     l15271:
  5430                           
  5431                           ;Main_Screen.c: 140: else
  5432                           ;Main_Screen.c: 141: {
  5433                           ;Main_Screen.c: 142: strcpy(Fan_SW_Txt, "OFF");
  5434  00325A  0E8A               	movlw	low _Fan_SW_Txt
  5435  00325C  0100               	movlb	0	; () banked
  5436  00325E  6F8E               	movwf	strcpy@to& (0+255),b
  5437  003260  0E01               	movlw	high _Fan_SW_Txt
  5438  003262  0100               	movlb	0	; () banked
  5439  003264  6F8F               	movwf	(strcpy@to+1)& (0+255),b
  5440  003266  0EEE               	movlw	low STR_22
  5441  003268  0100               	movlb	0	; () banked
  5442  00326A  6F90               	movwf	strcpy@from& (0+255),b
  5443  00326C  0EFF               	movlw	high STR_22
  5444  00326E  0100               	movlb	0	; () banked
  5445  003270  6F91               	movwf	(strcpy@from+1)& (0+255),b
  5446  003272  EC9B  F046         	call	_strcpy	;wreg free
  5447  003276  D000               	goto	l15273
  5448  003278                     l15273:
  5449                           
  5450                           ;Main_Screen.c: 143: }
  5451                           ;Main_Screen.c: 145: if (PORTAbits.RA2 == 0) RTC_ALARM_Txt[0] = '1';
  5452  003278  B480               	btfsc	3968,2,c	;volatile
  5453  00327A  D002               	goto	l15277
  5454  00327C  0E31               	movlw	49
  5455  00327E  D001               	goto	L4
  5456  003280                     l15277:
  5457                           
  5458                           ;Main_Screen.c: 146: else RTC_ALARM_Txt[0] = '0';
  5459  003280  0E30               	movlw	48
  5460  003282                     L4:
  5461  003282  0101               	movlb	1	; () banked
  5462  003284  6F96               	movwf	_RTC_ALARM_Txt& (0+255),b
  5463  003286  D000               	goto	l15279
  5464  003288                     l15279:
  5465                           
  5466                           ; BSR set to: 1
  5467                           ;Main_Screen.c: 149: DC_Txt[0] = duty_cycle/100 + '0';
  5468  003288  C0EB  F094         	movff	_duty_cycle,___awdiv@dividend
  5469  00328C  0100               	movlb	0	; () banked
  5470  00328E  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  5471  003290  0E00               	movlw	0
  5472  003292  0100               	movlb	0	; () banked
  5473  003294  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5474  003296  0E64               	movlw	100
  5475  003298  6F96               	movwf	___awdiv@divisor& (0+255),b
  5476  00329A  EC74  F03A         	call	___awdiv	;wreg free
  5477  00329E  0100               	movlb	0	; () banked
  5478  0032A0  5194               	movf	?___awdiv& (0+255),w,b
  5479  0032A2  0F30               	addlw	48
  5480  0032A4  0101               	movlb	1	; () banked
  5481  0032A6  6F86               	movwf	_DC_Txt& (0+255),b
  5482                           
  5483                           ; BSR set to: 1
  5484                           ;Main_Screen.c: 150: DC_Txt[1] = (duty_cycle/10)%10 + '0';
  5485  0032A8  0E00               	movlw	0
  5486  0032AA  0100               	movlb	0	; () banked
  5487  0032AC  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5488  0032AE  0E0A               	movlw	10
  5489  0032B0  6F96               	movwf	___awdiv@divisor& (0+255),b
  5490  0032B2  C0EB  F094         	movff	_duty_cycle,___awdiv@dividend
  5491  0032B6  0100               	movlb	0	; () banked
  5492  0032B8  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  5493  0032BA  EC74  F03A         	call	___awdiv	;wreg free
  5494  0032BE  C094  F0BA         	movff	?___awdiv,___awmod@dividend
  5495  0032C2  C095  F0BB         	movff	?___awdiv+1,___awmod@dividend+1
  5496  0032C6  0E00               	movlw	0
  5497  0032C8  0100               	movlb	0	; () banked
  5498  0032CA  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
  5499  0032CC  0E0A               	movlw	10
  5500  0032CE  6FBC               	movwf	___awmod@divisor& (0+255),b
  5501  0032D0  EC87  F03D         	call	___awmod	;wreg free
  5502  0032D4  0100               	movlb	0	; () banked
  5503  0032D6  51BA               	movf	?___awmod& (0+255),w,b
  5504  0032D8  0F30               	addlw	48
  5505  0032DA  0101               	movlb	1	; () banked
  5506  0032DC  6F87               	movwf	(_DC_Txt+1)& (0+255),b
  5507                           
  5508                           ; BSR set to: 1
  5509                           ;Main_Screen.c: 151: DC_Txt[2] = (duty_cycle)%10 + '0';
  5510  0032DE  C0EB  F0BA         	movff	_duty_cycle,___awmod@dividend
  5511  0032E2  0100               	movlb	0	; () banked
  5512  0032E4  6BBB               	clrf	(___awmod@dividend+1)& (0+255),b
  5513  0032E6  0E00               	movlw	0
  5514  0032E8  0100               	movlb	0	; () banked
  5515  0032EA  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
  5516  0032EC  0E0A               	movlw	10
  5517  0032EE  6FBC               	movwf	___awmod@divisor& (0+255),b
  5518  0032F0  EC87  F03D         	call	___awmod	;wreg free
  5519  0032F4  0100               	movlb	0	; () banked
  5520  0032F6  51BA               	movf	?___awmod& (0+255),w,b
  5521  0032F8  0F30               	addlw	48
  5522  0032FA  0101               	movlb	1	; () banked
  5523  0032FC  6F88               	movwf	(_DC_Txt+2)& (0+255),b
  5524                           
  5525                           ; BSR set to: 1
  5526                           ;Main_Screen.c: 153: Volt_Txt[0] = ((int)volt) + '0';
  5527  0032FE  C19C  F0AB         	movff	_volt,___fttol@f1
  5528  003302  C19D  F0AC         	movff	_volt+1,___fttol@f1+1
  5529  003306  C19E  F0AD         	movff	_volt+2,___fttol@f1+2
  5530  00330A  EC72  F031         	call	___fttol	;wreg free
  5531  00330E  0100               	movlb	0	; () banked
  5532  003310  51AB               	movf	?___fttol& (0+255),w,b
  5533  003312  0F30               	addlw	48
  5534  003314  0101               	movlb	1	; () banked
  5535  003316  6F6D               	movwf	_Volt_Txt& (0+255),b
  5536                           
  5537                           ; BSR set to: 1
  5538                           ;Main_Screen.c: 154: Volt_Txt[2] = ((int)(volt*10))%10 + '0';
  5539  003318  0E00               	movlw	0
  5540  00331A  0100               	movlb	0	; () banked
  5541  00331C  6F9F               	movwf	___ftmul@f2& (0+255),b
  5542  00331E  0E20               	movlw	32
  5543  003320  0100               	movlb	0	; () banked
  5544  003322  6FA0               	movwf	(___ftmul@f2+1)& (0+255),b
  5545  003324  0E41               	movlw	65
  5546  003326  0100               	movlb	0	; () banked
  5547  003328  6FA1               	movwf	(___ftmul@f2+2)& (0+255),b
  5548  00332A  C19C  F09C         	movff	_volt,___ftmul@f1
  5549  00332E  C19D  F09D         	movff	_volt+1,___ftmul@f1+1
  5550  003332  C19E  F09E         	movff	_volt+2,___ftmul@f1+2
  5551  003336  ECDE  F02E         	call	___ftmul	;wreg free
  5552  00333A  C09C  F0AB         	movff	?___ftmul,___fttol@f1
  5553  00333E  C09D  F0AC         	movff	?___ftmul+1,___fttol@f1+1
  5554  003342  C09E  F0AD         	movff	?___ftmul+2,___fttol@f1+2
  5555  003346  EC72  F031         	call	___fttol	;wreg free
  5556  00334A  C0AB  F0BA         	movff	?___fttol,___awmod@dividend
  5557  00334E  C0AC  F0BB         	movff	?___fttol+1,___awmod@dividend+1
  5558  003352  0E00               	movlw	0
  5559  003354  0100               	movlb	0	; () banked
  5560  003356  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
  5561  003358  0E0A               	movlw	10
  5562  00335A  6FBC               	movwf	___awmod@divisor& (0+255),b
  5563  00335C  EC87  F03D         	call	___awmod	;wreg free
  5564  003360  0100               	movlb	0	; () banked
  5565  003362  51BA               	movf	?___awmod& (0+255),w,b
  5566  003364  0F30               	addlw	48
  5567  003366  0101               	movlb	1	; () banked
  5568  003368  6F6F               	movwf	(_Volt_Txt+2)& (0+255),b
  5569                           
  5570                           ; BSR set to: 1
  5571                           ;Main_Screen.c: 155: Volt_Txt[3] = ((int)(volt*100))%10 + '0';
  5572  00336A  0E00               	movlw	0
  5573  00336C  0100               	movlb	0	; () banked
  5574  00336E  6F9F               	movwf	___ftmul@f2& (0+255),b
  5575  003370  0EC8               	movlw	200
  5576  003372  0100               	movlb	0	; () banked
  5577  003374  6FA0               	movwf	(___ftmul@f2+1)& (0+255),b
  5578  003376  0E42               	movlw	66
  5579  003378  0100               	movlb	0	; () banked
  5580  00337A  6FA1               	movwf	(___ftmul@f2+2)& (0+255),b
  5581  00337C  C19C  F09C         	movff	_volt,___ftmul@f1
  5582  003380  C19D  F09D         	movff	_volt+1,___ftmul@f1+1
  5583  003384  C19E  F09E         	movff	_volt+2,___ftmul@f1+2
  5584  003388  ECDE  F02E         	call	___ftmul	;wreg free
  5585  00338C  C09C  F0AB         	movff	?___ftmul,___fttol@f1
  5586  003390  C09D  F0AC         	movff	?___ftmul+1,___fttol@f1+1
  5587  003394  C09E  F0AD         	movff	?___ftmul+2,___fttol@f1+2
  5588  003398  EC72  F031         	call	___fttol	;wreg free
  5589  00339C  C0AB  F0BA         	movff	?___fttol,___awmod@dividend
  5590  0033A0  C0AC  F0BB         	movff	?___fttol+1,___awmod@dividend+1
  5591  0033A4  0E00               	movlw	0
  5592  0033A6  0100               	movlb	0	; () banked
  5593  0033A8  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
  5594  0033AA  0E0A               	movlw	10
  5595  0033AC  6FBC               	movwf	___awmod@divisor& (0+255),b
  5596  0033AE  EC87  F03D         	call	___awmod	;wreg free
  5597  0033B2  0100               	movlb	0	; () banked
  5598  0033B4  51BA               	movf	?___awmod& (0+255),w,b
  5599  0033B6  0F30               	addlw	48
  5600  0033B8  0101               	movlb	1	; () banked
  5601  0033BA  6F70               	movwf	(_Volt_Txt+3)& (0+255),b
  5602                           
  5603                           ; BSR set to: 1
  5604                           ;Main_Screen.c: 157: RPM_Txt[0] = rpm/1000 + '0';
  5605  0033BC  C1AF  F094         	movff	_rpm,___awdiv@dividend
  5606  0033C0  C1B0  F095         	movff	_rpm+1,___awdiv@dividend+1
  5607  0033C4  0E03               	movlw	3
  5608  0033C6  0100               	movlb	0	; () banked
  5609  0033C8  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5610  0033CA  0EE8               	movlw	232
  5611  0033CC  6F96               	movwf	___awdiv@divisor& (0+255),b
  5612  0033CE  EC74  F03A         	call	___awdiv	;wreg free
  5613  0033D2  0100               	movlb	0	; () banked
  5614  0033D4  5194               	movf	?___awdiv& (0+255),w,b
  5615  0033D6  0F30               	addlw	48
  5616  0033D8  0101               	movlb	1	; () banked
  5617  0033DA  6F78               	movwf	_RPM_Txt& (0+255),b
  5618                           
  5619                           ; BSR set to: 1
  5620                           ;Main_Screen.c: 158: RPM_Txt[1] = (rpm/100)%10 + '0';
  5621  0033DC  0E00               	movlw	0
  5622  0033DE  0100               	movlb	0	; () banked
  5623  0033E0  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5624  0033E2  0E64               	movlw	100
  5625  0033E4  6F96               	movwf	___awdiv@divisor& (0+255),b
  5626  0033E6  C1AF  F094         	movff	_rpm,___awdiv@dividend
  5627  0033EA  C1B0  F095         	movff	_rpm+1,___awdiv@dividend+1
  5628  0033EE  EC74  F03A         	call	___awdiv	;wreg free
  5629  0033F2  C094  F0BA         	movff	?___awdiv,___awmod@dividend
  5630  0033F6  C095  F0BB         	movff	?___awdiv+1,___awmod@dividend+1
  5631  0033FA  0E00               	movlw	0
  5632  0033FC  0100               	movlb	0	; () banked
  5633  0033FE  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
  5634  003400  0E0A               	movlw	10
  5635  003402  6FBC               	movwf	___awmod@divisor& (0+255),b
  5636  003404  EC87  F03D         	call	___awmod	;wreg free
  5637  003408  0100               	movlb	0	; () banked
  5638  00340A  51BA               	movf	?___awmod& (0+255),w,b
  5639  00340C  0F30               	addlw	48
  5640  00340E  0101               	movlb	1	; () banked
  5641  003410  6F79               	movwf	(_RPM_Txt+1)& (0+255),b
  5642                           
  5643                           ; BSR set to: 1
  5644                           ;Main_Screen.c: 159: RPM_Txt[2] = (rpm/10)%10 + '0';
  5645  003412  0E00               	movlw	0
  5646  003414  0100               	movlb	0	; () banked
  5647  003416  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5648  003418  0E0A               	movlw	10
  5649  00341A  6F96               	movwf	___awdiv@divisor& (0+255),b
  5650  00341C  C1AF  F094         	movff	_rpm,___awdiv@dividend
  5651  003420  C1B0  F095         	movff	_rpm+1,___awdiv@dividend+1
  5652  003424  EC74  F03A         	call	___awdiv	;wreg free
  5653  003428  C094  F0BA         	movff	?___awdiv,___awmod@dividend
  5654  00342C  C095  F0BB         	movff	?___awdiv+1,___awmod@dividend+1
  5655  003430  0E00               	movlw	0
  5656  003432  0100               	movlb	0	; () banked
  5657  003434  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
  5658  003436  0E0A               	movlw	10
  5659  003438  6FBC               	movwf	___awmod@divisor& (0+255),b
  5660  00343A  EC87  F03D         	call	___awmod	;wreg free
  5661  00343E  0100               	movlb	0	; () banked
  5662  003440  51BA               	movf	?___awmod& (0+255),w,b
  5663  003442  0F30               	addlw	48
  5664  003444  0101               	movlb	1	; () banked
  5665  003446  6F7A               	movwf	(_RPM_Txt+2)& (0+255),b
  5666                           
  5667                           ; BSR set to: 1
  5668                           ;Main_Screen.c: 160: RPM_Txt[3] = (rpm%10) + '0';
  5669  003448  C1AF  F0BA         	movff	_rpm,___awmod@dividend
  5670  00344C  C1B0  F0BB         	movff	_rpm+1,___awmod@dividend+1
  5671  003450  0E00               	movlw	0
  5672  003452  0100               	movlb	0	; () banked
  5673  003454  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
  5674  003456  0E0A               	movlw	10
  5675  003458  6FBC               	movwf	___awmod@divisor& (0+255),b
  5676  00345A  EC87  F03D         	call	___awmod	;wreg free
  5677  00345E  0100               	movlb	0	; () banked
  5678  003460  51BA               	movf	?___awmod& (0+255),w,b
  5679  003462  0F30               	addlw	48
  5680  003464  0101               	movlb	1	; () banked
  5681  003466  6F7B               	movwf	(_RPM_Txt+3)& (0+255),b
  5682                           
  5683                           ; BSR set to: 1
  5684                           ;Main_Screen.c: 162: drawtext(1, 23, tempC , 0xFFE0 , 0x0000 , 2);
  5685  003468  0E17               	movlw	23
  5686  00346A  0100               	movlb	0	; () banked
  5687  00346C  6FB6               	movwf	drawtext@y& (0+255),b
  5688  00346E  0E8E               	movlw	low _tempC
  5689  003470  0100               	movlb	0	; () banked
  5690  003472  6FB7               	movwf	drawtext@_text& (0+255),b
  5691  003474  0E01               	movlw	high _tempC
  5692  003476  0100               	movlb	0	; () banked
  5693  003478  6FB8               	movwf	(drawtext@_text+1)& (0+255),b
  5694  00347A  0EFF               	movlw	255
  5695  00347C  0100               	movlb	0	; () banked
  5696  00347E  6FBA               	movwf	(drawtext@color+1)& (0+255),b
  5697  003480  0EE0               	movlw	224
  5698  003482  6FB9               	movwf	drawtext@color& (0+255),b
  5699  003484  0E00               	movlw	0
  5700  003486  0100               	movlb	0	; () banked
  5701  003488  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
  5702  00348A  0E00               	movlw	0
  5703  00348C  6FBB               	movwf	drawtext@bg& (0+255),b
  5704  00348E  0E02               	movlw	2
  5705  003490  0100               	movlb	0	; () banked
  5706  003492  6FBD               	movwf	drawtext@size& (0+255),b
  5707  003494  0E01               	movlw	1
  5708  003496  EC0B  F032         	call	_drawtext
  5709                           
  5710                           ;Main_Screen.c: 163: drawtext(70, 23, tempF , 0xFFE0 , 0x0000 , 2);
  5711  00349A  0E17               	movlw	23
  5712  00349C  0100               	movlb	0	; () banked
  5713  00349E  6FB6               	movwf	drawtext@y& (0+255),b
  5714  0034A0  0E92               	movlw	low _tempF
  5715  0034A2  0100               	movlb	0	; () banked
  5716  0034A4  6FB7               	movwf	drawtext@_text& (0+255),b
  5717  0034A6  0E01               	movlw	high _tempF
  5718  0034A8  0100               	movlb	0	; () banked
  5719  0034AA  6FB8               	movwf	(drawtext@_text+1)& (0+255),b
  5720  0034AC  0EFF               	movlw	255
  5721  0034AE  0100               	movlb	0	; () banked
  5722  0034B0  6FBA               	movwf	(drawtext@color+1)& (0+255),b
  5723  0034B2  0EE0               	movlw	224
  5724  0034B4  6FB9               	movwf	drawtext@color& (0+255),b
  5725  0034B6  0E00               	movlw	0
  5726  0034B8  0100               	movlb	0	; () banked
  5727  0034BA  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
  5728  0034BC  0E00               	movlw	0
  5729  0034BE  6FBB               	movwf	drawtext@bg& (0+255),b
  5730  0034C0  0E02               	movlw	2
  5731  0034C2  0100               	movlb	0	; () banked
  5732  0034C4  6FBD               	movwf	drawtext@size& (0+255),b
  5733  0034C6  0E46               	movlw	70
  5734  0034C8  EC0B  F032         	call	_drawtext
  5735                           
  5736                           ;Main_Screen.c: 164: drawtext(15 , 52 , time , 0x07FF , 0x0000 , 2);
  5737  0034CC  0E34               	movlw	52
  5738  0034CE  0100               	movlb	0	; () banked
  5739  0034D0  6FB6               	movwf	drawtext@y& (0+255),b
  5740  0034D2  0E64               	movlw	low _time
  5741  0034D4  0100               	movlb	0	; () banked
  5742  0034D6  6FB7               	movwf	drawtext@_text& (0+255),b
  5743  0034D8  0E01               	movlw	high _time
  5744  0034DA  0100               	movlb	0	; () banked
  5745  0034DC  6FB8               	movwf	(drawtext@_text+1)& (0+255),b
  5746  0034DE  0E07               	movlw	7
  5747  0034E0  0100               	movlb	0	; () banked
  5748  0034E2  6FBA               	movwf	(drawtext@color+1)& (0+255),b
  5749  0034E4  69B9               	setf	drawtext@color& (0+255),b
  5750  0034E6  0E00               	movlw	0
  5751  0034E8  0100               	movlb	0	; () banked
  5752  0034EA  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
  5753  0034EC  0E00               	movlw	0
  5754  0034EE  6FBB               	movwf	drawtext@bg& (0+255),b
  5755  0034F0  0E02               	movlw	2
  5756  0034F2  0100               	movlb	0	; () banked
  5757  0034F4  6FBD               	movwf	drawtext@size& (0+255),b
  5758  0034F6  0E0F               	movlw	15
  5759  0034F8  EC0B  F032         	call	_drawtext
  5760                           
  5761                           ;Main_Screen.c: 165: drawtext(15 , 82 , date , 0x07E0 , 0x0000 , 2);
  5762  0034FC  0E52               	movlw	82
  5763  0034FE  0100               	movlb	0	; () banked
  5764  003500  6FB6               	movwf	drawtext@y& (0+255),b
  5765  003502  0E40               	movlw	low _date
  5766  003504  0100               	movlb	0	; () banked
  5767  003506  6FB7               	movwf	drawtext@_text& (0+255),b
  5768  003508  0E01               	movlw	high _date
  5769  00350A  0100               	movlb	0	; () banked
  5770  00350C  6FB8               	movwf	(drawtext@_text+1)& (0+255),b
  5771  00350E  0E07               	movlw	7
  5772  003510  0100               	movlb	0	; () banked
  5773  003512  6FBA               	movwf	(drawtext@color+1)& (0+255),b
  5774  003514  0EE0               	movlw	224
  5775  003516  6FB9               	movwf	drawtext@color& (0+255),b
  5776  003518  0E00               	movlw	0
  5777  00351A  0100               	movlb	0	; () banked
  5778  00351C  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
  5779  00351E  0E00               	movlw	0
  5780  003520  6FBB               	movwf	drawtext@bg& (0+255),b
  5781  003522  0E02               	movlw	2
  5782  003524  0100               	movlb	0	; () banked
  5783  003526  6FBD               	movwf	drawtext@size& (0+255),b
  5784  003528  0E0F               	movlw	15
  5785  00352A  EC0B  F032         	call	_drawtext
  5786                           
  5787                           ;Main_Screen.c: 166: drawtext(10 , 110 , alarm_time , 0x07FF , 0x0000 , 1);
  5788  00352E  0E6E               	movlw	110
  5789  003530  0100               	movlb	0	; () banked
  5790  003532  6FB6               	movwf	drawtext@y& (0+255),b
  5791  003534  0E37               	movlw	low _alarm_time
  5792  003536  0100               	movlb	0	; () banked
  5793  003538  6FB7               	movwf	drawtext@_text& (0+255),b
  5794  00353A  0E01               	movlw	high _alarm_time
  5795  00353C  0100               	movlb	0	; () banked
  5796  00353E  6FB8               	movwf	(drawtext@_text+1)& (0+255),b
  5797  003540  0E07               	movlw	7
  5798  003542  0100               	movlb	0	; () banked
  5799  003544  6FBA               	movwf	(drawtext@color+1)& (0+255),b
  5800  003546  69B9               	setf	drawtext@color& (0+255),b
  5801  003548  0E00               	movlw	0
  5802  00354A  0100               	movlb	0	; () banked
  5803  00354C  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
  5804  00354E  0E00               	movlw	0
  5805  003550  6FBB               	movwf	drawtext@bg& (0+255),b
  5806  003552  0E01               	movlw	1
  5807  003554  0100               	movlb	0	; () banked
  5808  003556  6FBD               	movwf	drawtext@size& (0+255),b
  5809  003558  0E0A               	movlw	10
  5810  00355A  EC0B  F032         	call	_drawtext
  5811                           
  5812                           ;Main_Screen.c: 167: drawtext(95 , 110 , Alarm_SW_Txt , 0x07FF , 0x0000 , 1);
  5813  00355E  0E6E               	movlw	110
  5814  003560  0100               	movlb	0	; () banked
  5815  003562  6FB6               	movwf	drawtext@y& (0+255),b
  5816  003564  0E82               	movlw	low _Alarm_SW_Txt
  5817  003566  0100               	movlb	0	; () banked
  5818  003568  6FB7               	movwf	drawtext@_text& (0+255),b
  5819  00356A  0E01               	movlw	high _Alarm_SW_Txt
  5820  00356C  0100               	movlb	0	; () banked
  5821  00356E  6FB8               	movwf	(drawtext@_text+1)& (0+255),b
  5822  003570  0E07               	movlw	7
  5823  003572  0100               	movlb	0	; () banked
  5824  003574  6FBA               	movwf	(drawtext@color+1)& (0+255),b
  5825  003576  69B9               	setf	drawtext@color& (0+255),b
  5826  003578  0E00               	movlw	0
  5827  00357A  0100               	movlb	0	; () banked
  5828  00357C  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
  5829  00357E  0E00               	movlw	0
  5830  003580  6FBB               	movwf	drawtext@bg& (0+255),b
  5831  003582  0E01               	movlw	1
  5832  003584  0100               	movlb	0	; () banked
  5833  003586  6FBD               	movwf	drawtext@size& (0+255),b
  5834  003588  0E5F               	movlw	95
  5835  00358A  EC0B  F032         	call	_drawtext
  5836                           
  5837                           ;Main_Screen.c: 168: drawtext(35, 130 ,Fan_Set_Temp_Txt, 0xF800, 0x0000, 1);
  5838  00358E  0E82               	movlw	130
  5839  003590  0100               	movlb	0	; () banked
  5840  003592  6FB6               	movwf	drawtext@y& (0+255),b
  5841  003594  0E73               	movlw	low _Fan_Set_Temp_Txt
  5842  003596  0100               	movlb	0	; () banked
  5843  003598  6FB7               	movwf	drawtext@_text& (0+255),b
  5844  00359A  0E01               	movlw	high _Fan_Set_Temp_Txt
  5845  00359C  0100               	movlb	0	; () banked
  5846  00359E  6FB8               	movwf	(drawtext@_text+1)& (0+255),b
  5847  0035A0  0EF8               	movlw	248
  5848  0035A2  0100               	movlb	0	; () banked
  5849  0035A4  6FBA               	movwf	(drawtext@color+1)& (0+255),b
  5850  0035A6  0E00               	movlw	0
  5851  0035A8  6FB9               	movwf	drawtext@color& (0+255),b
  5852  0035AA  0E00               	movlw	0
  5853  0035AC  0100               	movlb	0	; () banked
  5854  0035AE  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
  5855  0035B0  0E00               	movlw	0
  5856  0035B2  6FBB               	movwf	drawtext@bg& (0+255),b
  5857  0035B4  0E01               	movlw	1
  5858  0035B6  0100               	movlb	0	; () banked
  5859  0035B8  6FBD               	movwf	drawtext@size& (0+255),b
  5860  0035BA  0E23               	movlw	35
  5861  0035BC  EC0B  F032         	call	_drawtext
  5862                           
  5863                           ;Main_Screen.c: 169: drawtext(95, 130, Fan_SW_Txt, 0xF800 , 0x0000 , 1);
  5864  0035C0  0E82               	movlw	130
  5865  0035C2  0100               	movlb	0	; () banked
  5866  0035C4  6FB6               	movwf	drawtext@y& (0+255),b
  5867  0035C6  0E8A               	movlw	low _Fan_SW_Txt
  5868  0035C8  0100               	movlb	0	; () banked
  5869  0035CA  6FB7               	movwf	drawtext@_text& (0+255),b
  5870  0035CC  0E01               	movlw	high _Fan_SW_Txt
  5871  0035CE  0100               	movlb	0	; () banked
  5872  0035D0  6FB8               	movwf	(drawtext@_text+1)& (0+255),b
  5873  0035D2  0EF8               	movlw	248
  5874  0035D4  0100               	movlb	0	; () banked
  5875  0035D6  6FBA               	movwf	(drawtext@color+1)& (0+255),b
  5876  0035D8  0E00               	movlw	0
  5877  0035DA  6FB9               	movwf	drawtext@color& (0+255),b
  5878  0035DC  0E00               	movlw	0
  5879  0035DE  0100               	movlb	0	; () banked
  5880  0035E0  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
  5881  0035E2  0E00               	movlw	0
  5882  0035E4  6FBB               	movwf	drawtext@bg& (0+255),b
  5883  0035E6  0E01               	movlw	1
  5884  0035E8  0100               	movlb	0	; () banked
  5885  0035EA  6FBD               	movwf	drawtext@size& (0+255),b
  5886  0035EC  0E5F               	movlw	95
  5887  0035EE  EC0B  F032         	call	_drawtext
  5888                           
  5889                           ;Main_Screen.c: 170: drawtext(10, 150, DC_Txt, 0x07E0, 0x0000, 1);
  5890  0035F2  0E96               	movlw	150
  5891  0035F4  0100               	movlb	0	; () banked
  5892  0035F6  6FB6               	movwf	drawtext@y& (0+255),b
  5893  0035F8  0E86               	movlw	low _DC_Txt
  5894  0035FA  0100               	movlb	0	; () banked
  5895  0035FC  6FB7               	movwf	drawtext@_text& (0+255),b
  5896  0035FE  0E01               	movlw	high _DC_Txt
  5897  003600  0100               	movlb	0	; () banked
  5898  003602  6FB8               	movwf	(drawtext@_text+1)& (0+255),b
  5899  003604  0E07               	movlw	7
  5900  003606  0100               	movlb	0	; () banked
  5901  003608  6FBA               	movwf	(drawtext@color+1)& (0+255),b
  5902  00360A  0EE0               	movlw	224
  5903  00360C  6FB9               	movwf	drawtext@color& (0+255),b
  5904  00360E  0E00               	movlw	0
  5905  003610  0100               	movlb	0	; () banked
  5906  003612  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
  5907  003614  0E00               	movlw	0
  5908  003616  6FBB               	movwf	drawtext@bg& (0+255),b
  5909  003618  0E01               	movlw	1
  5910  00361A  0100               	movlb	0	; () banked
  5911  00361C  6FBD               	movwf	drawtext@size& (0+255),b
  5912  00361E  0E0A               	movlw	10
  5913  003620  EC0B  F032         	call	_drawtext
  5914                           
  5915                           ;Main_Screen.c: 171: drawtext(35, 150, RTC_ALARM_Txt, 0x07E0, 0x0000, 1);
  5916  003624  0E96               	movlw	150
  5917  003626  0100               	movlb	0	; () banked
  5918  003628  6FB6               	movwf	drawtext@y& (0+255),b
  5919  00362A  0E96               	movlw	low _RTC_ALARM_Txt
  5920  00362C  0100               	movlb	0	; () banked
  5921  00362E  6FB7               	movwf	drawtext@_text& (0+255),b
  5922  003630  0E01               	movlw	high _RTC_ALARM_Txt
  5923  003632  0100               	movlb	0	; () banked
  5924  003634  6FB8               	movwf	(drawtext@_text+1)& (0+255),b
  5925  003636  0E07               	movlw	7
  5926  003638  0100               	movlb	0	; () banked
  5927  00363A  6FBA               	movwf	(drawtext@color+1)& (0+255),b
  5928  00363C  0EE0               	movlw	224
  5929  00363E  6FB9               	movwf	drawtext@color& (0+255),b
  5930  003640  0E00               	movlw	0
  5931  003642  0100               	movlb	0	; () banked
  5932  003644  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
  5933  003646  0E00               	movlw	0
  5934  003648  6FBB               	movwf	drawtext@bg& (0+255),b
  5935  00364A  0E01               	movlw	1
  5936  00364C  0100               	movlb	0	; () banked
  5937  00364E  6FBD               	movwf	drawtext@size& (0+255),b
  5938  003650  0E23               	movlw	35
  5939  003652  EC0B  F032         	call	_drawtext
  5940                           
  5941                           ;Main_Screen.c: 172: drawtext(50, 150, Volt_Txt, 0x07E0, 0x0000, 1);
  5942  003656  0E96               	movlw	150
  5943  003658  0100               	movlb	0	; () banked
  5944  00365A  6FB6               	movwf	drawtext@y& (0+255),b
  5945  00365C  0E6D               	movlw	low _Volt_Txt
  5946  00365E  0100               	movlb	0	; () banked
  5947  003660  6FB7               	movwf	drawtext@_text& (0+255),b
  5948  003662  0E01               	movlw	high _Volt_Txt
  5949  003664  0100               	movlb	0	; () banked
  5950  003666  6FB8               	movwf	(drawtext@_text+1)& (0+255),b
  5951  003668  0E07               	movlw	7
  5952  00366A  0100               	movlb	0	; () banked
  5953  00366C  6FBA               	movwf	(drawtext@color+1)& (0+255),b
  5954  00366E  0EE0               	movlw	224
  5955  003670  6FB9               	movwf	drawtext@color& (0+255),b
  5956  003672  0E00               	movlw	0
  5957  003674  0100               	movlb	0	; () banked
  5958  003676  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
  5959  003678  0E00               	movlw	0
  5960  00367A  6FBB               	movwf	drawtext@bg& (0+255),b
  5961  00367C  0E01               	movlw	1
  5962  00367E  0100               	movlb	0	; () banked
  5963  003680  6FBD               	movwf	drawtext@size& (0+255),b
  5964  003682  0E32               	movlw	50
  5965  003684  EC0B  F032         	call	_drawtext
  5966                           
  5967                           ;Main_Screen.c: 173: drawtext(93, 150, RPM_Txt, 0x07E0, 0x0000, 1);
  5968  003688  0E96               	movlw	150
  5969  00368A  0100               	movlb	0	; () banked
  5970  00368C  6FB6               	movwf	drawtext@y& (0+255),b
  5971  00368E  0E78               	movlw	low _RPM_Txt
  5972  003690  0100               	movlb	0	; () banked
  5973  003692  6FB7               	movwf	drawtext@_text& (0+255),b
  5974  003694  0E01               	movlw	high _RPM_Txt
  5975  003696  0100               	movlb	0	; () banked
  5976  003698  6FB8               	movwf	(drawtext@_text+1)& (0+255),b
  5977  00369A  0E07               	movlw	7
  5978  00369C  0100               	movlb	0	; () banked
  5979  00369E  6FBA               	movwf	(drawtext@color+1)& (0+255),b
  5980  0036A0  0EE0               	movlw	224
  5981  0036A2  6FB9               	movwf	drawtext@color& (0+255),b
  5982  0036A4  0E00               	movlw	0
  5983  0036A6  0100               	movlb	0	; () banked
  5984  0036A8  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
  5985  0036AA  0E00               	movlw	0
  5986  0036AC  6FBB               	movwf	drawtext@bg& (0+255),b
  5987  0036AE  0E01               	movlw	1
  5988  0036B0  0100               	movlb	0	; () banked
  5989  0036B2  6FBD               	movwf	drawtext@size& (0+255),b
  5990  0036B4  0E5D               	movlw	93
  5991  0036B6  EC0B  F032         	call	_drawtext
  5992  0036BA  0012               	return		;funcret
  5993  0036BC                     __end_of_Update_Screen:
  5994                           	opt stack 0
  5995                           tblptru	equ	0xFF8
  5996                           tblptrh	equ	0xFF7
  5997                           tblptrl	equ	0xFF6
  5998                           tablat	equ	0xFF5
  5999                           postinc0	equ	0xFEE
  6000                           wreg	equ	0xFE8
  6001                           postdec1	equ	0xFE5
  6002                           fsr1l	equ	0xFE1
  6003                           status	equ	0xFD8
  6004                           
  6005 ;; *************** function _Toggle_Fan_Monitor *****************
  6006 ;; Defined at:
  6007 ;;		line 42 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Fan_Support.c"
  6008 ;; Parameters:    Size  Location     Type
  6009 ;;		None
  6010 ;; Auto vars:     Size  Location     Type
  6011 ;;		None
  6012 ;; Return value:  Size  Location     Type
  6013 ;;		None               void
  6014 ;; Registers used:
  6015 ;;		wreg, status,2
  6016 ;; Tracked objects:
  6017 ;;		On entry : 0/0
  6018 ;;		On exit  : 0/0
  6019 ;;		Unchanged: 0/0
  6020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6025 ;;Total ram usage:        0 bytes
  6026 ;; Hardware stack levels used:    1
  6027 ;; Hardware stack levels required when called:    6
  6028 ;; This function calls:
  6029 ;;		Nothing
  6030 ;; This function is called by:
  6031 ;;		_main
  6032 ;; This function uses a non-reentrant model
  6033 ;;
  6034                           
  6035                           	psect	text14
  6036  0091C8                     __ptext14:
  6037                           	opt stack 0
  6038  0091C8                     _Toggle_Fan_Monitor:
  6039                           	opt stack 24
  6040                           
  6041                           ;Fan_Support.c: 45: if (FAN == 0){
  6042                           
  6043                           ;incstack = 0
  6044  0091C8  507D               	movf	_FAN,w,c
  6045  0091CA  A4D8               	btfss	status,2,c
  6046  0091CC  D002               	goto	l10981
  6047                           
  6048                           ;Fan_Support.c: 46: FAN = 1;
  6049  0091CE  0E01               	movlw	1
  6050  0091D0  D001               	goto	L5
  6051  0091D2                     l10981:
  6052                           
  6053                           ;Fan_Support.c: 48: else {
  6054                           ;Fan_Support.c: 49: FAN = 0;
  6055  0091D2  0E00               	movlw	0
  6056  0091D4                     L5:
  6057  0091D4  6E7D               	movwf	_FAN,c
  6058  0091D6  D000               	goto	l36
  6059  0091D8                     l36:
  6060  0091D8  0012               	return		;funcret
  6061  0091DA                     __end_of_Toggle_Fan_Monitor:
  6062                           	opt stack 0
  6063                           tblptru	equ	0xFF8
  6064                           tblptrh	equ	0xFF7
  6065                           tblptrl	equ	0xFF6
  6066                           tablat	equ	0xFF5
  6067                           postinc0	equ	0xFEE
  6068                           wreg	equ	0xFE8
  6069                           postdec1	equ	0xFE5
  6070                           fsr1l	equ	0xFE1
  6071                           status	equ	0xFD8
  6072                           
  6073 ;; *************** function _Setup_Temp_Fan *****************
  6074 ;; Defined at:
  6075 ;;		line 24 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Fan_Temp.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;		None
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;		None
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  2  385[None  ] int 
  6082 ;; Registers used:
  6083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6091 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6092 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6093 ;;Total ram usage:        2 bytes
  6094 ;; Hardware stack levels used:    1
  6095 ;; Hardware stack levels required when called:   15
  6096 ;; This function calls:
  6097 ;;		_Decrease_Fan_Temp
  6098 ;;		_Do_Beep_Bad
  6099 ;;		_Do_Beep_Good
  6100 ;;		_Do_Save_New_Fan_Temp
  6101 ;;		_Exit_Setup_Fan_Temp
  6102 ;;		_Increase_Fan_Temp
  6103 ;;		_Initialize_Setup_Fan_Screen
  6104 ;;		_Update_Setup_Fan_Screen
  6105 ;;		_check_for_button_input
  6106 ;; This function is called by:
  6107 ;;		_main
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           
  6111                           	psect	text15
  6112  007DC0                     __ptext15:
  6113                           	opt stack 0
  6114  007DC0                     _Setup_Temp_Fan:
  6115                           	opt stack 15
  6116                           
  6117                           ;Setup_Fan_Temp.c: 27: In_Fan_Temp_Setup = 1;
  6118                           
  6119                           ;incstack = 0
  6120  007DC0  0E01               	movlw	1
  6121  007DC2  0101               	movlb	1	; () banked
  6122  007DC4  6FB6               	movwf	_In_Fan_Temp_Setup& (0+255),b
  6123                           
  6124                           ; BSR set to: 1
  6125                           ;Setup_Fan_Temp.c: 28: setup_fan_set_temp = fan_set_temp;
  6126  007DC6  C134  F1C4         	movff	_fan_set_temp,_setup_fan_set_temp
  6127                           
  6128                           ; BSR set to: 1
  6129                           ;Setup_Fan_Temp.c: 29: Initialize_Setup_Fan_Screen();
  6130  007DCA  EC96  F039         	call	_Initialize_Setup_Fan_Screen	;wreg free
  6131                           
  6132                           ;Setup_Fan_Temp.c: 30: Update_Setup_Fan_Screen();
  6133  007DCE  EC09  F03C         	call	_Update_Setup_Fan_Screen	;wreg free
  6134                           
  6135                           ;Setup_Fan_Temp.c: 32: while (In_Fan_Temp_Setup == 1)
  6136  007DD2  D042               	goto	l15479
  6137  007DD4                     l15449:
  6138                           
  6139                           ;Setup_Fan_Temp.c: 33: {
  6140                           ;Setup_Fan_Temp.c: 34: if (check_for_button_input() == 1)
  6141  007DD4  0E01               	movlw	1
  6142  007DD6  0100               	movlb	0	; () banked
  6143  007DD8  6FE2               	movwf	??_Setup_Temp_Fan& (0+255),b
  6144  007DDA  0E00               	movlw	0
  6145  007DDC  0100               	movlb	0	; () banked
  6146  007DDE  6FE3               	movwf	(??_Setup_Temp_Fan+1)& (0+255),b
  6147  007DE0  EC7D  F03F         	call	_check_for_button_input	;wreg free
  6148  007DE4  0100               	movlb	0	; () banked
  6149  007DE6  19E2               	xorwf	??_Setup_Temp_Fan& (0+255),w,b
  6150  007DE8  11E3               	iorwf	(??_Setup_Temp_Fan+1)& (0+255),w,b
  6151  007DEA  A4D8               	btfss	status,2,c
  6152  007DEC  D035               	goto	l15479
  6153                           
  6154                           ; BSR set to: 0
  6155                           ;Setup_Fan_Temp.c: 35: {
  6156                           ;Setup_Fan_Temp.c: 36: nec_ok = 0;
  6157  007DEE  0E00               	movlw	0
  6158  007DF0  0101               	movlb	1	; () banked
  6159  007DF2  6FAE               	movwf	(_nec_ok+1)& (0+255),b
  6160  007DF4  0E00               	movlw	0
  6161  007DF6  6FAD               	movwf	_nec_ok& (0+255),b
  6162                           
  6163                           ; BSR set to: 1
  6164                           ;Setup_Fan_Temp.c: 37: if (found >= 5 && found <= 8)
  6165  007DF8  0E04               	movlw	4
  6166  007DFA  0100               	movlb	0	; () banked
  6167  007DFC  65EC               	cpfsgt	_found& (0+255),b
  6168  007DFE  D029               	goto	l15477
  6169                           
  6170                           ; BSR set to: 0
  6171  007E00  0E09               	movlw	9
  6172  007E02  0100               	movlb	0	; () banked
  6173  007E04  61EC               	cpfslt	_found& (0+255),b
  6174  007E06  D025               	goto	l15477
  6175                           
  6176                           ; BSR set to: 0
  6177                           ;Setup_Fan_Temp.c: 38: {
  6178                           ;Setup_Fan_Temp.c: 39: Do_Beep_Good();
  6179  007E08  EC57  F048         	call	_Do_Beep_Good	;wreg free
  6180                           
  6181                           ;Setup_Fan_Temp.c: 41: if (found == 5) Do_Save_New_Fan_Temp();
  6182  007E0C  0E05               	movlw	5
  6183  007E0E  0100               	movlb	0	; () banked
  6184  007E10  19EC               	xorwf	_found& (0+255),w,b
  6185  007E12  A4D8               	btfss	status,2,c
  6186  007E14  D003               	goto	l15463
  6187                           
  6188                           ; BSR set to: 0
  6189  007E16  ECA9  F048         	call	_Do_Save_New_Fan_Temp	;wreg free
  6190  007E1A  D018               	goto	l15475
  6191  007E1C                     l15463:
  6192                           
  6193                           ;Setup_Fan_Temp.c: 42: else if (found == 6) Decrease_Fan_Temp();
  6194  007E1C  0E06               	movlw	6
  6195  007E1E  0100               	movlb	0	; () banked
  6196  007E20  19EC               	xorwf	_found& (0+255),w,b
  6197  007E22  A4D8               	btfss	status,2,c
  6198  007E24  D003               	goto	l15467
  6199                           
  6200                           ; BSR set to: 0
  6201  007E26  EC4A  F048         	call	_Decrease_Fan_Temp	;wreg free
  6202  007E2A  D010               	goto	l15475
  6203  007E2C                     l15467:
  6204                           
  6205                           ;Setup_Fan_Temp.c: 43: else if (found == 7) Increase_Fan_Temp();
  6206  007E2C  0E07               	movlw	7
  6207  007E2E  0100               	movlb	0	; () banked
  6208  007E30  19EC               	xorwf	_found& (0+255),w,b
  6209  007E32  A4D8               	btfss	status,2,c
  6210  007E34  D003               	goto	l15471
  6211                           
  6212                           ; BSR set to: 0
  6213  007E36  EC3D  F048         	call	_Increase_Fan_Temp	;wreg free
  6214  007E3A  D008               	goto	l15475
  6215  007E3C                     l15471:
  6216                           
  6217                           ;Setup_Fan_Temp.c: 44: else if (found == 8) Exit_Setup_Fan_Temp();
  6218  007E3C  0E08               	movlw	8
  6219  007E3E  0100               	movlb	0	; () banked
  6220  007E40  19EC               	xorwf	_found& (0+255),w,b
  6221  007E42  A4D8               	btfss	status,2,c
  6222  007E44  D003               	goto	l15475
  6223                           
  6224                           ; BSR set to: 0
  6225  007E46  EC22  F049         	call	_Exit_Setup_Fan_Temp	;wreg free
  6226  007E4A  D000               	goto	l15475
  6227  007E4C                     l15475:
  6228                           
  6229                           ;Setup_Fan_Temp.c: 46: found = 0xff;
  6230  007E4C  0100               	movlb	0	; () banked
  6231  007E4E  69EC               	setf	_found& (0+255),b
  6232                           
  6233                           ;Setup_Fan_Temp.c: 47: }
  6234  007E50  D003               	goto	l15479
  6235  007E52                     l15477:
  6236                           
  6237                           ; BSR set to: 0
  6238                           ;Setup_Fan_Temp.c: 48: else
  6239                           ;Setup_Fan_Temp.c: 49: {
  6240                           ;Setup_Fan_Temp.c: 50: Do_Beep_Bad();
  6241  007E52  EC64  F048         	call	_Do_Beep_Bad	;wreg free
  6242  007E56  D000               	goto	l15479
  6243  007E58                     l15479:
  6244  007E58  0101               	movlb	1	; () banked
  6245  007E5A  05B6               	decf	_In_Fan_Temp_Setup& (0+255),w,b
  6246  007E5C  B4D8               	btfsc	status,2,c
  6247  007E5E  D7BA               	goto	l15449
  6248                           
  6249                           ; BSR set to: 1
  6250                           
  6251                           ; BSR set to: 1
  6252  007E60  0012               	return		;funcret
  6253  007E62                     __end_of_Setup_Temp_Fan:
  6254                           	opt stack 0
  6255                           tblptru	equ	0xFF8
  6256                           tblptrh	equ	0xFF7
  6257                           tblptrl	equ	0xFF6
  6258                           tablat	equ	0xFF5
  6259                           postinc0	equ	0xFEE
  6260                           wreg	equ	0xFE8
  6261                           postdec1	equ	0xFE5
  6262                           fsr1l	equ	0xFE1
  6263                           status	equ	0xFD8
  6264                           
  6265 ;; *************** function _Initialize_Setup_Fan_Screen *****************
  6266 ;; Defined at:
  6267 ;;		line 92 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Fan_Temp.c"
  6268 ;; Parameters:    Size  Location     Type
  6269 ;;		None
  6270 ;; Auto vars:     Size  Location     Type
  6271 ;;		None
  6272 ;; Return value:  Size  Location     Type
  6273 ;;		None               void
  6274 ;; Registers used:
  6275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6276 ;; Tracked objects:
  6277 ;;		On entry : 0/0
  6278 ;;		On exit  : 0/0
  6279 ;;		Unchanged: 0/0
  6280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6285 ;;Total ram usage:        0 bytes
  6286 ;; Hardware stack levels used:    1
  6287 ;; Hardware stack levels required when called:   13
  6288 ;; This function calls:
  6289 ;;		_drawtext
  6290 ;;		_fillScreen
  6291 ;;		_strcpy
  6292 ;; This function is called by:
  6293 ;;		_Setup_Temp_Fan
  6294 ;; This function uses a non-reentrant model
  6295 ;;
  6296                           
  6297                           	psect	text16
  6298  00732C                     __ptext16:
  6299                           	opt stack 0
  6300  00732C                     _Initialize_Setup_Fan_Screen:
  6301                           	opt stack 16
  6302                           
  6303                           ;Setup_Fan_Temp.c: 94: fillScreen(0x0000);
  6304                           
  6305                           ; BSR set to: 1
  6306                           ;incstack = 0
  6307  00732C  0E00               	movlw	0
  6308  00732E  0100               	movlb	0	; () banked
  6309  007330  6FA2               	movwf	(fillScreen@color+1)& (0+255),b
  6310  007332  0E00               	movlw	0
  6311  007334  6FA1               	movwf	fillScreen@color& (0+255),b
  6312  007336  ECBB  F047         	call	_fillScreen	;wreg free
  6313                           
  6314                           ;Setup_Fan_Temp.c: 96: strcpy(txt, "ECE3301L Sp21 Final\0");
  6315  00733A  C0E4  F08E         	movff	_txt,strcpy@to
  6316  00733E  C0E5  F08F         	movff	_txt+1,strcpy@to+1
  6317  007342  0E04               	movlw	low STR_7
  6318  007344  0100               	movlb	0	; () banked
  6319  007346  6F90               	movwf	strcpy@from& (0+255),b
  6320  007348  0EFF               	movlw	high STR_7
  6321  00734A  0100               	movlb	0	; () banked
  6322  00734C  6F91               	movwf	(strcpy@from+1)& (0+255),b
  6323  00734E  EC9B  F046         	call	_strcpy	;wreg free
  6324                           
  6325                           ;Setup_Fan_Temp.c: 97: drawtext(1 , 1, txt, 0xFFFF , 0x0000, 1);
  6326  007352  0E01               	movlw	1
  6327  007354  0100               	movlb	0	; () banked
  6328  007356  6FB6               	movwf	drawtext@y& (0+255),b
  6329  007358  C0E4  F0B7         	movff	_txt,drawtext@_text
  6330  00735C  C0E5  F0B8         	movff	_txt+1,drawtext@_text+1
  6331  007360  0EFF               	movlw	255
  6332  007362  0100               	movlb	0	; () banked
  6333  007364  6FBA               	movwf	(drawtext@color+1)& (0+255),b
  6334  007366  69B9               	setf	drawtext@color& (0+255),b
  6335  007368  0E00               	movlw	0
  6336  00736A  0100               	movlb	0	; () banked
  6337  00736C  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
  6338  00736E  0E00               	movlw	0
  6339  007370  6FBB               	movwf	drawtext@bg& (0+255),b
  6340  007372  0E01               	movlw	1
  6341  007374  0100               	movlb	0	; () banked
  6342  007376  6FBD               	movwf	drawtext@size& (0+255),b
  6343  007378  0E01               	movlw	1
  6344  00737A  EC0B  F032         	call	_drawtext
  6345                           
  6346                           ;Setup_Fan_Temp.c: 99: strcpy(txt, " Fan Setup\0");
  6347  00737E  C0E4  F08E         	movff	_txt,strcpy@to
  6348  007382  C0E5  F08F         	movff	_txt+1,strcpy@to+1
  6349  007386  0E9C               	movlw	low STR_30
  6350  007388  0100               	movlb	0	; () banked
  6351  00738A  6F90               	movwf	strcpy@from& (0+255),b
  6352  00738C  0EFF               	movlw	high STR_30
  6353  00738E  0100               	movlb	0	; () banked
  6354  007390  6F91               	movwf	(strcpy@from+1)& (0+255),b
  6355  007392  EC9B  F046         	call	_strcpy	;wreg free
  6356                           
  6357                           ;Setup_Fan_Temp.c: 100: drawtext(1 , 1+25, txt, 0xFFE0, 0x0000, 2);
  6358  007396  0E1A               	movlw	26
  6359  007398  0100               	movlb	0	; () banked
  6360  00739A  6FB6               	movwf	drawtext@y& (0+255),b
  6361  00739C  C0E4  F0B7         	movff	_txt,drawtext@_text
  6362  0073A0  C0E5  F0B8         	movff	_txt+1,drawtext@_text+1
  6363  0073A4  0EFF               	movlw	255
  6364  0073A6  0100               	movlb	0	; () banked
  6365  0073A8  6FBA               	movwf	(drawtext@color+1)& (0+255),b
  6366  0073AA  0EE0               	movlw	224
  6367  0073AC  6FB9               	movwf	drawtext@color& (0+255),b
  6368  0073AE  0E00               	movlw	0
  6369  0073B0  0100               	movlb	0	; () banked
  6370  0073B2  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
  6371  0073B4  0E00               	movlw	0
  6372  0073B6  6FBB               	movwf	drawtext@bg& (0+255),b
  6373  0073B8  0E02               	movlw	2
  6374  0073BA  0100               	movlb	0	; () banked
  6375  0073BC  6FBD               	movwf	drawtext@size& (0+255),b
  6376  0073BE  0E01               	movlw	1
  6377  0073C0  EC0B  F032         	call	_drawtext
  6378                           
  6379                           ;Setup_Fan_Temp.c: 102: strcpy(txt, "  Set Fan Temp");
  6380  0073C4  C0E4  F08E         	movff	_txt,strcpy@to
  6381  0073C8  C0E5  F08F         	movff	_txt+1,strcpy@to+1
  6382  0073CC  0E67               	movlw	low STR_31
  6383  0073CE  0100               	movlb	0	; () banked
  6384  0073D0  6F90               	movwf	strcpy@from& (0+255),b
  6385  0073D2  0EFF               	movlw	high STR_31
  6386  0073D4  0100               	movlb	0	; () banked
  6387  0073D6  6F91               	movwf	(strcpy@from+1)& (0+255),b
  6388  0073D8  EC9B  F046         	call	_strcpy	;wreg free
  6389                           
  6390                           ;Setup_Fan_Temp.c: 103: drawtext(15 , 60, txt, 0x07FF , 0x0000, 1);
  6391  0073DC  0E3C               	movlw	60
  6392  0073DE  0100               	movlb	0	; () banked
  6393  0073E0  6FB6               	movwf	drawtext@y& (0+255),b
  6394  0073E2  C0E4  F0B7         	movff	_txt,drawtext@_text
  6395  0073E6  C0E5  F0B8         	movff	_txt+1,drawtext@_text+1
  6396  0073EA  0E07               	movlw	7
  6397  0073EC  0100               	movlb	0	; () banked
  6398  0073EE  6FBA               	movwf	(drawtext@color+1)& (0+255),b
  6399  0073F0  69B9               	setf	drawtext@color& (0+255),b
  6400  0073F2  0E00               	movlw	0
  6401  0073F4  0100               	movlb	0	; () banked
  6402  0073F6  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
  6403  0073F8  0E00               	movlw	0
  6404  0073FA  6FBB               	movwf	drawtext@bg& (0+255),b
  6405  0073FC  0E01               	movlw	1
  6406  0073FE  0100               	movlb	0	; () banked
  6407  007400  6FBD               	movwf	drawtext@size& (0+255),b
  6408  007402  0E0F               	movlw	15
  6409  007404  EC0B  F032         	call	_drawtext
  6410  007408  0012               	return		;funcret
  6411  00740A                     __end_of_Initialize_Setup_Fan_Screen:
  6412                           	opt stack 0
  6413                           tblptru	equ	0xFF8
  6414                           tblptrh	equ	0xFF7
  6415                           tblptrl	equ	0xFF6
  6416                           tablat	equ	0xFF5
  6417                           postinc0	equ	0xFEE
  6418                           wreg	equ	0xFE8
  6419                           postdec1	equ	0xFE5
  6420                           fsr1l	equ	0xFE1
  6421                           status	equ	0xFD8
  6422                           
  6423 ;; *************** function _Increase_Fan_Temp *****************
  6424 ;; Defined at:
  6425 ;;		line 56 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Fan_Temp.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;		None
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;		None
  6430 ;; Return value:  Size  Location     Type
  6431 ;;		None               void
  6432 ;; Registers used:
  6433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6434 ;; Tracked objects:
  6435 ;;		On entry : 0/0
  6436 ;;		On exit  : 0/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6443 ;;Total ram usage:        0 bytes
  6444 ;; Hardware stack levels used:    1
  6445 ;; Hardware stack levels required when called:   14
  6446 ;; This function calls:
  6447 ;;		_Update_Setup_Fan_Screen
  6448 ;; This function is called by:
  6449 ;;		_Setup_Temp_Fan
  6450 ;; This function uses a non-reentrant model
  6451 ;;
  6452                           
  6453                           	psect	text17
  6454  00907A                     __ptext17:
  6455                           	opt stack 0
  6456  00907A                     _Increase_Fan_Temp:
  6457                           	opt stack 15
  6458                           
  6459                           ;Setup_Fan_Temp.c: 60: setup_fan_set_temp++;
  6460                           
  6461                           ;incstack = 0
  6462  00907A  0101               	movlb	1	; () banked
  6463  00907C  2BC4               	incf	_setup_fan_set_temp& (0+255),f,b
  6464                           
  6465                           ; BSR set to: 1
  6466                           ;Setup_Fan_Temp.c: 61: if (setup_fan_set_temp > 110) setup_fan_set_temp = 110;
  6467  00907E  0E6E               	movlw	110
  6468  009080  0101               	movlb	1	; () banked
  6469  009082  65C4               	cpfsgt	_setup_fan_set_temp& (0+255),b
  6470  009084  D004               	goto	l14355
  6471                           
  6472                           ; BSR set to: 1
  6473  009086  0E6E               	movlw	110
  6474  009088  0101               	movlb	1	; () banked
  6475  00908A  6FC4               	movwf	_setup_fan_set_temp& (0+255),b
  6476  00908C  D000               	goto	l14355
  6477  00908E                     l14355:
  6478                           
  6479                           ; BSR set to: 1
  6480                           ;Setup_Fan_Temp.c: 62: Update_Setup_Fan_Screen();
  6481  00908E  EC09  F03C         	call	_Update_Setup_Fan_Screen	;wreg free
  6482  009092  0012               	return		;funcret
  6483  009094                     __end_of_Increase_Fan_Temp:
  6484                           	opt stack 0
  6485                           tblptru	equ	0xFF8
  6486                           tblptrh	equ	0xFF7
  6487                           tblptrl	equ	0xFF6
  6488                           tablat	equ	0xFF5
  6489                           postinc0	equ	0xFEE
  6490                           wreg	equ	0xFE8
  6491                           postdec1	equ	0xFE5
  6492                           fsr1l	equ	0xFE1
  6493                           status	equ	0xFD8
  6494                           
  6495 ;; *************** function _Exit_Setup_Fan_Temp *****************
  6496 ;; Defined at:
  6497 ;;		line 77 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Fan_Temp.c"
  6498 ;; Parameters:    Size  Location     Type
  6499 ;;		None
  6500 ;; Auto vars:     Size  Location     Type
  6501 ;;		None
  6502 ;; Return value:  Size  Location     Type
  6503 ;;		None               void
  6504 ;; Registers used:
  6505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6506 ;; Tracked objects:
  6507 ;;		On entry : 0/0
  6508 ;;		On exit  : 0/0
  6509 ;;		Unchanged: 0/0
  6510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6515 ;;Total ram usage:        0 bytes
  6516 ;; Hardware stack levels used:    1
  6517 ;; Hardware stack levels required when called:   14
  6518 ;; This function calls:
  6519 ;;		_DS3231_Read_Time
  6520 ;;		_Initialize_Screen
  6521 ;; This function is called by:
  6522 ;;		_Setup_Temp_Fan
  6523 ;; This function uses a non-reentrant model
  6524 ;;
  6525                           
  6526                           	psect	text18
  6527  009244                     __ptext18:
  6528                           	opt stack 0
  6529  009244                     _Exit_Setup_Fan_Temp:
  6530                           	opt stack 15
  6531                           
  6532                           ;Setup_Fan_Temp.c: 79: DS3231_Read_Time();
  6533                           
  6534                           ;incstack = 0
  6535  009244  ECAB  F041         	call	_DS3231_Read_Time	;wreg free
  6536                           
  6537                           ;Setup_Fan_Temp.c: 80: Initialize_Screen();
  6538  009248  ECAD  F01D         	call	_Initialize_Screen	;wreg free
  6539                           
  6540                           ;Setup_Fan_Temp.c: 81: In_Fan_Temp_Setup = 0;
  6541  00924C  0E00               	movlw	0
  6542  00924E  0101               	movlb	1	; () banked
  6543  009250  6FB6               	movwf	_In_Fan_Temp_Setup& (0+255),b
  6544                           
  6545                           ; BSR set to: 1
  6546  009252  0012               	return		;funcret
  6547  009254                     __end_of_Exit_Setup_Fan_Temp:
  6548                           	opt stack 0
  6549                           tblptru	equ	0xFF8
  6550                           tblptrh	equ	0xFF7
  6551                           tblptrl	equ	0xFF6
  6552                           tablat	equ	0xFF5
  6553                           postinc0	equ	0xFEE
  6554                           wreg	equ	0xFE8
  6555                           postdec1	equ	0xFE5
  6556                           fsr1l	equ	0xFE1
  6557                           status	equ	0xFD8
  6558                           
  6559 ;; *************** function _Do_Save_New_Fan_Temp *****************
  6560 ;; Defined at:
  6561 ;;		line 84 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Fan_Temp.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;		None
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;		None
  6566 ;; Return value:  Size  Location     Type
  6567 ;;		None               void
  6568 ;; Registers used:
  6569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/0
  6572 ;;		On exit  : 0/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6579 ;;Total ram usage:        0 bytes
  6580 ;; Hardware stack levels used:    1
  6581 ;; Hardware stack levels required when called:   14
  6582 ;; This function calls:
  6583 ;;		_DS3231_Read_Time
  6584 ;;		_Initialize_Screen
  6585 ;; This function is called by:
  6586 ;;		_Setup_Temp_Fan
  6587 ;; This function uses a non-reentrant model
  6588 ;;
  6589                           
  6590                           	psect	text19
  6591  009152                     __ptext19:
  6592                           	opt stack 0
  6593  009152                     _Do_Save_New_Fan_Temp:
  6594                           	opt stack 15
  6595                           
  6596                           ;Setup_Fan_Temp.c: 86: fan_set_temp = setup_fan_set_temp;
  6597                           
  6598                           ; BSR set to: 1
  6599                           ;incstack = 0
  6600  009152  C1C4  F134         	movff	_setup_fan_set_temp,_fan_set_temp
  6601                           
  6602                           ;Setup_Fan_Temp.c: 87: DS3231_Read_Time();
  6603  009156  ECAB  F041         	call	_DS3231_Read_Time	;wreg free
  6604                           
  6605                           ;Setup_Fan_Temp.c: 88: Initialize_Screen();
  6606  00915A  ECAD  F01D         	call	_Initialize_Screen	;wreg free
  6607                           
  6608                           ;Setup_Fan_Temp.c: 89: In_Fan_Temp_Setup = 0;
  6609  00915E  0E00               	movlw	0
  6610  009160  0101               	movlb	1	; () banked
  6611  009162  6FB6               	movwf	_In_Fan_Temp_Setup& (0+255),b
  6612                           
  6613                           ; BSR set to: 1
  6614  009164  0012               	return		;funcret
  6615  009166                     __end_of_Do_Save_New_Fan_Temp:
  6616                           	opt stack 0
  6617                           tblptru	equ	0xFF8
  6618                           tblptrh	equ	0xFF7
  6619                           tblptrl	equ	0xFF6
  6620                           tablat	equ	0xFF5
  6621                           postinc0	equ	0xFEE
  6622                           wreg	equ	0xFE8
  6623                           postdec1	equ	0xFE5
  6624                           fsr1l	equ	0xFE1
  6625                           status	equ	0xFD8
  6626                           
  6627 ;; *************** function _Decrease_Fan_Temp *****************
  6628 ;; Defined at:
  6629 ;;		line 66 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Fan_Temp.c"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;		None
  6632 ;; Auto vars:     Size  Location     Type
  6633 ;;		None
  6634 ;; Return value:  Size  Location     Type
  6635 ;;		None               void
  6636 ;; Registers used:
  6637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/0
  6640 ;;		On exit  : 0/0
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6647 ;;Total ram usage:        0 bytes
  6648 ;; Hardware stack levels used:    1
  6649 ;; Hardware stack levels required when called:   14
  6650 ;; This function calls:
  6651 ;;		_Update_Setup_Fan_Screen
  6652 ;; This function is called by:
  6653 ;;		_Setup_Temp_Fan
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           	psect	text20
  6658  009094                     __ptext20:
  6659                           	opt stack 0
  6660  009094                     _Decrease_Fan_Temp:
  6661                           	opt stack 15
  6662                           
  6663                           ;Setup_Fan_Temp.c: 70: --setup_fan_set_temp;
  6664                           
  6665                           ; BSR set to: 1
  6666                           ;incstack = 0
  6667  009094  0101               	movlb	1	; () banked
  6668  009096  07C4               	decf	_setup_fan_set_temp& (0+255),f,b
  6669                           
  6670                           ; BSR set to: 1
  6671                           ;Setup_Fan_Temp.c: 71: if (setup_fan_set_temp < 50) setup_fan_set_temp = 50;
  6672  009098  0E32               	movlw	50
  6673  00909A  0101               	movlb	1	; () banked
  6674  00909C  61C4               	cpfslt	_setup_fan_set_temp& (0+255),b
  6675  00909E  D004               	goto	l14347
  6676                           
  6677                           ; BSR set to: 1
  6678  0090A0  0E32               	movlw	50
  6679  0090A2  0101               	movlb	1	; () banked
  6680  0090A4  6FC4               	movwf	_setup_fan_set_temp& (0+255),b
  6681  0090A6  D000               	goto	l14347
  6682  0090A8                     l14347:
  6683                           
  6684                           ; BSR set to: 1
  6685                           ;Setup_Fan_Temp.c: 72: Update_Setup_Fan_Screen();
  6686  0090A8  EC09  F03C         	call	_Update_Setup_Fan_Screen	;wreg free
  6687  0090AC  0012               	return		;funcret
  6688  0090AE                     __end_of_Decrease_Fan_Temp:
  6689                           	opt stack 0
  6690                           tblptru	equ	0xFF8
  6691                           tblptrh	equ	0xFF7
  6692                           tblptrl	equ	0xFF6
  6693                           tablat	equ	0xFF5
  6694                           postinc0	equ	0xFEE
  6695                           wreg	equ	0xFE8
  6696                           postdec1	equ	0xFE5
  6697                           fsr1l	equ	0xFE1
  6698                           status	equ	0xFD8
  6699                           
  6700 ;; *************** function _Update_Setup_Fan_Screen *****************
  6701 ;; Defined at:
  6702 ;;		line 106 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Fan_Temp.c"
  6703 ;; Parameters:    Size  Location     Type
  6704 ;;		None
  6705 ;; Auto vars:     Size  Location     Type
  6706 ;;  dc_char3        1   73[BANK0 ] unsigned char 
  6707 ;;  dc_char2        1   72[BANK0 ] unsigned char 
  6708 ;;  dc_char1        1   71[BANK0 ] unsigned char 
  6709 ;; Return value:  Size  Location     Type
  6710 ;;		None               void
  6711 ;; Registers used:
  6712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6713 ;; Tracked objects:
  6714 ;;		On entry : 0/0
  6715 ;;		On exit  : 0/0
  6716 ;;		Unchanged: 0/0
  6717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6719 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6721 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6722 ;;Total ram usage:        3 bytes
  6723 ;; Hardware stack levels used:    1
  6724 ;; Hardware stack levels required when called:   13
  6725 ;; This function calls:
  6726 ;;		___awdiv
  6727 ;;		___awmod
  6728 ;;		_drawtext
  6729 ;; This function is called by:
  6730 ;;		_Setup_Temp_Fan
  6731 ;;		_Increase_Fan_Temp
  6732 ;;		_Decrease_Fan_Temp
  6733 ;; This function uses a non-reentrant model
  6734 ;;
  6735                           
  6736                           	psect	text21
  6737  007812                     __ptext21:
  6738                           	opt stack 0
  6739  007812                     _Update_Setup_Fan_Screen:
  6740                           	opt stack 16
  6741                           
  6742                           ;Setup_Fan_Temp.c: 108: char dc_char1 = setup_fan_set_temp/100;
  6743                           
  6744                           ;incstack = 0
  6745  007812  C1C4  F094         	movff	_setup_fan_set_temp,___awdiv@dividend
  6746  007816  0100               	movlb	0	; () banked
  6747  007818  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  6748  00781A  0E00               	movlw	0
  6749  00781C  0100               	movlb	0	; () banked
  6750  00781E  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  6751  007820  0E64               	movlw	100
  6752  007822  6F96               	movwf	___awdiv@divisor& (0+255),b
  6753  007824  EC74  F03A         	call	___awdiv	;wreg free
  6754  007828  0100               	movlb	0	; () banked
  6755  00782A  5194               	movf	?___awdiv& (0+255),w,b
  6756  00782C  0100               	movlb	0	; () banked
  6757  00782E  6FC7               	movwf	Update_Setup_Fan_Screen@dc_char1& (0+255),b
  6758                           
  6759                           ;Setup_Fan_Temp.c: 109: char dc_char2 = (setup_fan_set_temp/10) % 10;
  6760  007830  0E00               	movlw	0
  6761  007832  0100               	movlb	0	; () banked
  6762  007834  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  6763  007836  0E0A               	movlw	10
  6764  007838  6F96               	movwf	___awdiv@divisor& (0+255),b
  6765  00783A  C1C4  F094         	movff	_setup_fan_set_temp,___awdiv@dividend
  6766  00783E  0100               	movlb	0	; () banked
  6767  007840  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  6768  007842  EC74  F03A         	call	___awdiv	;wreg free
  6769  007846  C094  F0BA         	movff	?___awdiv,___awmod@dividend
  6770  00784A  C095  F0BB         	movff	?___awdiv+1,___awmod@dividend+1
  6771  00784E  0E00               	movlw	0
  6772  007850  0100               	movlb	0	; () banked
  6773  007852  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
  6774  007854  0E0A               	movlw	10
  6775  007856  6FBC               	movwf	___awmod@divisor& (0+255),b
  6776  007858  EC87  F03D         	call	___awmod	;wreg free
  6777  00785C  0100               	movlb	0	; () banked
  6778  00785E  51BA               	movf	?___awmod& (0+255),w,b
  6779  007860  0100               	movlb	0	; () banked
  6780  007862  6FC8               	movwf	Update_Setup_Fan_Screen@dc_char2& (0+255),b
  6781                           
  6782                           ;Setup_Fan_Temp.c: 110: char dc_char3 = setup_fan_set_temp % 10;
  6783  007864  C1C4  F0BA         	movff	_setup_fan_set_temp,___awmod@dividend
  6784  007868  0100               	movlb	0	; () banked
  6785  00786A  6BBB               	clrf	(___awmod@dividend+1)& (0+255),b
  6786  00786C  0E00               	movlw	0
  6787  00786E  0100               	movlb	0	; () banked
  6788  007870  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
  6789  007872  0E0A               	movlw	10
  6790  007874  6FBC               	movwf	___awmod@divisor& (0+255),b
  6791  007876  EC87  F03D         	call	___awmod	;wreg free
  6792  00787A  0100               	movlb	0	; () banked
  6793  00787C  51BA               	movf	?___awmod& (0+255),w,b
  6794  00787E  0100               	movlb	0	; () banked
  6795  007880  6FC9               	movwf	Update_Setup_Fan_Screen@dc_char3& (0+255),b
  6796                           
  6797                           ; BSR set to: 0
  6798                           ;Setup_Fan_Temp.c: 111: setup_fan_set_text[0] = dc_char1 + '0';
  6799  007882  0100               	movlb	0	; () banked
  6800  007884  51C7               	movf	Update_Setup_Fan_Screen@dc_char1& (0+255),w,b
  6801  007886  0F30               	addlw	48
  6802  007888  0101               	movlb	1	; () banked
  6803  00788A  6F7D               	movwf	_setup_fan_set_text& (0+255),b
  6804                           
  6805                           ; BSR set to: 1
  6806                           ;Setup_Fan_Temp.c: 112: setup_fan_set_text[1] = dc_char2 + '0';
  6807  00788C  0100               	movlb	0	; () banked
  6808  00788E  51C8               	movf	Update_Setup_Fan_Screen@dc_char2& (0+255),w,b
  6809  007890  0F30               	addlw	48
  6810  007892  0101               	movlb	1	; () banked
  6811  007894  6F7E               	movwf	(_setup_fan_set_text+1)& (0+255),b
  6812                           
  6813                           ; BSR set to: 1
  6814                           ;Setup_Fan_Temp.c: 113: setup_fan_set_text[2] = dc_char3 + '0';
  6815  007896  0100               	movlb	0	; () banked
  6816  007898  51C9               	movf	Update_Setup_Fan_Screen@dc_char3& (0+255),w,b
  6817  00789A  0F30               	addlw	48
  6818  00789C  0101               	movlb	1	; () banked
  6819  00789E  6F7F               	movwf	(_setup_fan_set_text+2)& (0+255),b
  6820                           
  6821                           ; BSR set to: 1
  6822                           ;Setup_Fan_Temp.c: 114: drawtext(40, 74 ,setup_fan_set_text, 0xF800, 0x0000, 2);
  6823  0078A0  0E4A               	movlw	74
  6824  0078A2  0100               	movlb	0	; () banked
  6825  0078A4  6FB6               	movwf	drawtext@y& (0+255),b
  6826  0078A6  0E7D               	movlw	low _setup_fan_set_text
  6827  0078A8  0100               	movlb	0	; () banked
  6828  0078AA  6FB7               	movwf	drawtext@_text& (0+255),b
  6829  0078AC  0E01               	movlw	high _setup_fan_set_text
  6830  0078AE  0100               	movlb	0	; () banked
  6831  0078B0  6FB8               	movwf	(drawtext@_text+1)& (0+255),b
  6832  0078B2  0EF8               	movlw	248
  6833  0078B4  0100               	movlb	0	; () banked
  6834  0078B6  6FBA               	movwf	(drawtext@color+1)& (0+255),b
  6835  0078B8  0E00               	movlw	0
  6836  0078BA  6FB9               	movwf	drawtext@color& (0+255),b
  6837  0078BC  0E00               	movlw	0
  6838  0078BE  0100               	movlb	0	; () banked
  6839  0078C0  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
  6840  0078C2  0E00               	movlw	0
  6841  0078C4  6FBB               	movwf	drawtext@bg& (0+255),b
  6842  0078C6  0E02               	movlw	2
  6843  0078C8  0100               	movlb	0	; () banked
  6844  0078CA  6FBD               	movwf	drawtext@size& (0+255),b
  6845  0078CC  0E28               	movlw	40
  6846  0078CE  EC0B  F032         	call	_drawtext
  6847  0078D2  0012               	return		;funcret
  6848  0078D4                     __end_of_Update_Setup_Fan_Screen:
  6849                           	opt stack 0
  6850                           tblptru	equ	0xFF8
  6851                           tblptrh	equ	0xFF7
  6852                           tblptrl	equ	0xFF6
  6853                           tablat	equ	0xFF5
  6854                           postinc0	equ	0xFEE
  6855                           wreg	equ	0xFE8
  6856                           postdec1	equ	0xFE5
  6857                           fsr1l	equ	0xFE1
  6858                           status	equ	0xFD8
  6859                           
  6860 ;; *************** function _Monitor_Fan *****************
  6861 ;; Defined at:
  6862 ;;		line 31 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Fan_Support.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;		None
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;		None
  6867 ;; Return value:  Size  Location     Type
  6868 ;;		None               void
  6869 ;; Registers used:
  6870 ;;		wreg, status,2, status,0, cstack
  6871 ;; Tracked objects:
  6872 ;;		On entry : 0/0
  6873 ;;		On exit  : 0/0
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6880 ;;Total ram usage:        0 bytes
  6881 ;; Hardware stack levels used:    1
  6882 ;; Hardware stack levels required when called:    9
  6883 ;; This function calls:
  6884 ;;		_do_update_pwm
  6885 ;;		_get_duty_cycle
  6886 ;; This function is called by:
  6887 ;;		_main
  6888 ;; This function uses a non-reentrant model
  6889 ;;
  6890                           
  6891                           	psect	text22
  6892  008D6C                     __ptext22:
  6893                           	opt stack 0
  6894  008D6C                     _Monitor_Fan:
  6895                           	opt stack 21
  6896                           
  6897                           ;Fan_Support.c: 33: duty_cycle = get_duty_cycle(DS1621_tempF, fan_set_temp);
  6898                           
  6899                           ;incstack = 0
  6900  008D6C  C1A3  F08E         	movff	_DS1621_tempF,get_duty_cycle@temp
  6901  008D70  C1A4  F08F         	movff	_DS1621_tempF+1,get_duty_cycle@temp+1
  6902  008D74  C134  F090         	movff	_fan_set_temp,get_duty_cycle@set_temp
  6903  008D78  0100               	movlb	0	; () banked
  6904  008D7A  6B91               	clrf	(get_duty_cycle@set_temp+1)& (0+255),b
  6905  008D7C  ECAD  F044         	call	_get_duty_cycle	;wreg free
  6906  008D80  0100               	movlb	0	; () banked
  6907  008D82  518E               	movf	?_get_duty_cycle& (0+255),w,b
  6908  008D84  0100               	movlb	0	; () banked
  6909  008D86  6FEB               	movwf	_duty_cycle& (0+255),b
  6910                           
  6911                           ;Fan_Support.c: 34: do_update_pwm(duty_cycle);
  6912  008D88  0100               	movlb	0	; () banked
  6913  008D8A  51EB               	movf	_duty_cycle& (0+255),w,b
  6914  008D8C  ECB4  F038         	call	_do_update_pwm
  6915                           
  6916                           ;Fan_Support.c: 35: if (FAN == 1)
  6917  008D90  047D               	decf	_FAN,w,c
  6918  008D92  A4D8               	btfss	status,2,c
  6919  008D94  D002               	goto	l29
  6920                           
  6921                           ;Fan_Support.c: 36: {
  6922                           ;Fan_Support.c: 37: PORTAbits.RA5 = 1;
  6923  008D96  8A80               	bsf	3968,5,c	;volatile
  6924                           
  6925                           ;Fan_Support.c: 38: }
  6926  008D98  D002               	goto	l31
  6927  008D9A                     l29:
  6928                           
  6929                           ;Fan_Support.c: 39: else PORTAbits.RA5 = 0;
  6930  008D9A  9A80               	bcf	3968,5,c	;volatile
  6931  008D9C  D000               	goto	l31
  6932  008D9E                     l31:
  6933  008D9E  0012               	return		;funcret
  6934  008DA0                     __end_of_Monitor_Fan:
  6935                           	opt stack 0
  6936                           tblptru	equ	0xFF8
  6937                           tblptrh	equ	0xFF7
  6938                           tblptrl	equ	0xFF6
  6939                           tablat	equ	0xFF5
  6940                           postinc0	equ	0xFEE
  6941                           wreg	equ	0xFE8
  6942                           postdec1	equ	0xFE5
  6943                           fsr1l	equ	0xFE1
  6944                           status	equ	0xFD8
  6945                           
  6946 ;; *************** function _get_duty_cycle *****************
  6947 ;; Defined at:
  6948 ;;		line 11 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Fan_Support.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;  temp            2   14[BANK0 ] int 
  6951 ;;  set_temp        2   16[BANK0 ] int 
  6952 ;; Auto vars:     Size  Location     Type
  6953 ;;		None
  6954 ;; Return value:  Size  Location     Type
  6955 ;;                  2   14[BANK0 ] int 
  6956 ;; Registers used:
  6957 ;;		wreg, status,2, status,0
  6958 ;; Tracked objects:
  6959 ;;		On entry : 0/0
  6960 ;;		On exit  : 0/0
  6961 ;;		Unchanged: 0/0
  6962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6963 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6965 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6966 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6967 ;;Total ram usage:        5 bytes
  6968 ;; Hardware stack levels used:    1
  6969 ;; Hardware stack levels required when called:    6
  6970 ;; This function calls:
  6971 ;;		Nothing
  6972 ;; This function is called by:
  6973 ;;		_Monitor_Fan
  6974 ;; This function uses a non-reentrant model
  6975 ;;
  6976                           
  6977                           	psect	text23
  6978  00895A                     __ptext23:
  6979                           	opt stack 0
  6980  00895A                     _get_duty_cycle:
  6981                           	opt stack 23
  6982                           
  6983                           ;Fan_Support.c: 17: if (temp > set_temp){
  6984                           
  6985                           ;incstack = 0
  6986  00895A  0100               	movlb	0	; () banked
  6987  00895C  518E               	movf	get_duty_cycle@temp& (0+255),w,b
  6988  00895E  0100               	movlb	0	; () banked
  6989  008960  5D90               	subwf	get_duty_cycle@set_temp& (0+255),w,b
  6990  008962  0100               	movlb	0	; () banked
  6991  008964  5191               	movf	(get_duty_cycle@set_temp+1)& (0+255),w,b
  6992  008966  0A80               	xorlw	128
  6993  008968  0100               	movlb	0	; () banked
  6994  00896A  6F92               	movwf	??_get_duty_cycle& (0+255),b
  6995  00896C  0100               	movlb	0	; () banked
  6996  00896E  518F               	movf	(get_duty_cycle@temp+1)& (0+255),w,b
  6997  008970  0A80               	xorlw	128
  6998  008972  0100               	movlb	0	; () banked
  6999  008974  5992               	subwfb	??_get_duty_cycle& (0+255),w,b
  7000  008976  B0D8               	btfsc	status,0,c
  7001  008978  D002               	goto	l9927
  7002                           
  7003                           ; BSR set to: 0
  7004                           ;Fan_Support.c: 18: duty_cycle = 0;
  7005  00897A  0E00               	movlw	0
  7006  00897C  D00A               	goto	L6
  7007  00897E                     l9927:
  7008                           
  7009                           ; BSR set to: 0
  7010                           ;Fan_Support.c: 20: else {
  7011                           ;Fan_Support.c: 21: duty_cycle = 2*(set_temp - temp);
  7012  00897E  0100               	movlb	0	; () banked
  7013  008980  518E               	movf	get_duty_cycle@temp& (0+255),w,b
  7014  008982  0800               	sublw	0
  7015  008984  0100               	movlb	0	; () banked
  7016  008986  2590               	addwf	get_duty_cycle@set_temp& (0+255),w,b
  7017  008988  0100               	movlb	0	; () banked
  7018  00898A  6F92               	movwf	??_get_duty_cycle& (0+255),b
  7019  00898C  0100               	movlb	0	; () banked
  7020  00898E  90D8               	bcf	status,0,c
  7021  008990  3592               	rlcf	??_get_duty_cycle& (0+255),w,b
  7022  008992                     L6:
  7023  008992  0100               	movlb	0	; () banked
  7024  008994  6FEB               	movwf	_duty_cycle& (0+255),b
  7025                           
  7026                           ; BSR set to: 0
  7027                           ;Fan_Support.c: 22: }
  7028                           ;Fan_Support.c: 23: if (duty_cycle > 100){
  7029  008996  0E64               	movlw	100
  7030  008998  0100               	movlb	0	; () banked
  7031  00899A  65EB               	cpfsgt	_duty_cycle& (0+255),b
  7032  00899C  D004               	goto	l9931
  7033                           
  7034                           ; BSR set to: 0
  7035                           ;Fan_Support.c: 24: duty_cycle = 100;
  7036  00899E  0E64               	movlw	100
  7037  0089A0  0100               	movlb	0	; () banked
  7038  0089A2  6FEB               	movwf	_duty_cycle& (0+255),b
  7039  0089A4  D000               	goto	l9931
  7040  0089A6                     l9931:
  7041                           
  7042                           ; BSR set to: 0
  7043                           ;Fan_Support.c: 25: }
  7044                           ;Fan_Support.c: 27: return duty_cycle;
  7045  0089A6  C0EB  F08E         	movff	_duty_cycle,?_get_duty_cycle
  7046  0089AA  0100               	movlb	0	; () banked
  7047  0089AC  6B8F               	clrf	(?_get_duty_cycle+1)& (0+255),b
  7048  0089AE  D000               	goto	l26
  7049  0089B0                     l26:
  7050                           
  7051                           ; BSR set to: 0
  7052  0089B0  0012               	return		;funcret
  7053  0089B2                     __end_of_get_duty_cycle:
  7054                           	opt stack 0
  7055                           tblptru	equ	0xFF8
  7056                           tblptrh	equ	0xFF7
  7057                           tblptrl	equ	0xFF6
  7058                           tablat	equ	0xFF5
  7059                           postinc0	equ	0xFEE
  7060                           wreg	equ	0xFE8
  7061                           postdec1	equ	0xFE5
  7062                           fsr1l	equ	0xFE1
  7063                           status	equ	0xFD8
  7064                           
  7065 ;; *************** function _Do_Setup_Time *****************
  7066 ;; Defined at:
  7067 ;;		line 33 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Time.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;		None
  7070 ;; Auto vars:     Size  Location     Type
  7071 ;;		None
  7072 ;; Return value:  Size  Location     Type
  7073 ;;                  2  381[None  ] int 
  7074 ;; Registers used:
  7075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7076 ;; Tracked objects:
  7077 ;;		On entry : 0/0
  7078 ;;		On exit  : 0/0
  7079 ;;		Unchanged: 0/0
  7080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7085 ;;Total ram usage:        0 bytes
  7086 ;; Hardware stack levels used:    1
  7087 ;; Hardware stack levels required when called:   15
  7088 ;; This function calls:
  7089 ;;		_DS3231_Read_Time
  7090 ;;		_Decrease_Time
  7091 ;;		_Do_Beep_Bad
  7092 ;;		_Do_Beep_Good
  7093 ;;		_Do_Save_New_Time
  7094 ;;		_Exit_Time_Setup
  7095 ;;		_Go_Next_Field
  7096 ;;		_Go_Prev_Field
  7097 ;;		_Increase_Time
  7098 ;;		_Initialize_Setup_Time_Screen
  7099 ;;		_Update_Setup_Time_Screen
  7100 ;;		_bcd_2_dec
  7101 ;;		_check_for_button_input
  7102 ;; This function is called by:
  7103 ;;		_main
  7104 ;; This function uses a non-reentrant model
  7105 ;;
  7106                           
  7107                           	psect	text24
  7108  006E96                     __ptext24:
  7109                           	opt stack 0
  7110  006E96                     _Do_Setup_Time:
  7111                           	opt stack 15
  7112                           
  7113                           ;Setup_Time.c: 36: Select_Field = 0;
  7114                           
  7115                           ; BSR set to: 0
  7116                           ;incstack = 0
  7117  006E96  0E00               	movlw	0
  7118  006E98  0101               	movlb	1	; () banked
  7119  006E9A  6FBC               	movwf	_Select_Field& (0+255),b
  7120                           
  7121                           ; BSR set to: 1
  7122                           ;Setup_Time.c: 38: DS3231_Read_Time();
  7123  006E9C  ECAB  F041         	call	_DS3231_Read_Time	;wreg free
  7124                           
  7125                           ;Setup_Time.c: 39: setup_second = bcd_2_dec(second);
  7126  006EA0  0100               	movlb	0	; () banked
  7127  006EA2  51F0               	movf	_second& (0+255),w,b
  7128  006EA4  EC61  F046         	call	_bcd_2_dec
  7129  006EA8  0101               	movlb	1	; () banked
  7130  006EAA  6FC8               	movwf	_setup_second& (0+255),b
  7131                           
  7132                           ; BSR set to: 1
  7133                           ;Setup_Time.c: 40: setup_minute = bcd_2_dec(minute);
  7134  006EAC  0100               	movlb	0	; () banked
  7135  006EAE  51EE               	movf	_minute& (0+255),w,b
  7136  006EB0  EC61  F046         	call	_bcd_2_dec
  7137  006EB4  0101               	movlb	1	; () banked
  7138  006EB6  6FC6               	movwf	_setup_minute& (0+255),b
  7139                           
  7140                           ; BSR set to: 1
  7141                           ;Setup_Time.c: 41: setup_hour = bcd_2_dec(hour);
  7142  006EB8  0100               	movlb	0	; () banked
  7143  006EBA  51ED               	movf	_hour& (0+255),w,b
  7144  006EBC  EC61  F046         	call	_bcd_2_dec
  7145  006EC0  0101               	movlb	1	; () banked
  7146  006EC2  6FC5               	movwf	_setup_hour& (0+255),b
  7147                           
  7148                           ; BSR set to: 1
  7149                           ;Setup_Time.c: 42: setup_day = bcd_2_dec(day);
  7150  006EC4  0100               	movlb	0	; () banked
  7151  006EC6  51EA               	movf	_day& (0+255),w,b
  7152  006EC8  EC61  F046         	call	_bcd_2_dec
  7153  006ECC  0101               	movlb	1	; () banked
  7154  006ECE  6FC3               	movwf	_setup_day& (0+255),b
  7155                           
  7156                           ; BSR set to: 1
  7157                           ;Setup_Time.c: 43: setup_month = bcd_2_dec(month);
  7158  006ED0  0100               	movlb	0	; () banked
  7159  006ED2  51EF               	movf	_month& (0+255),w,b
  7160  006ED4  EC61  F046         	call	_bcd_2_dec
  7161  006ED8  0101               	movlb	1	; () banked
  7162  006EDA  6FC7               	movwf	_setup_month& (0+255),b
  7163                           
  7164                           ; BSR set to: 1
  7165                           ;Setup_Time.c: 44: setup_year = bcd_2_dec(year);
  7166  006EDC  0100               	movlb	0	; () banked
  7167  006EDE  51F1               	movf	_year& (0+255),w,b
  7168  006EE0  EC61  F046         	call	_bcd_2_dec
  7169  006EE4  0101               	movlb	1	; () banked
  7170  006EE6  6FC9               	movwf	_setup_year& (0+255),b
  7171                           
  7172                           ; BSR set to: 1
  7173                           ;Setup_Time.c: 46: Initialize_Setup_Time_Screen();
  7174  006EE8  EC8C  F02F         	call	_Initialize_Setup_Time_Screen	;wreg free
  7175                           
  7176                           ;Setup_Time.c: 47: Update_Setup_Time_Screen();
  7177  006EEC  ECE3  F029         	call	_Update_Setup_Time_Screen	;wreg free
  7178                           
  7179                           ;Setup_Time.c: 48: In_Time_Setup = 1;
  7180  006EF0  0E01               	movlw	1
  7181  006EF2  0101               	movlb	1	; () banked
  7182  006EF4  6FB7               	movwf	_In_Time_Setup& (0+255),b
  7183                           
  7184                           ;Setup_Time.c: 50: while (In_Time_Setup == 1)
  7185  006EF6  D045               	goto	l15381
  7186  006EF8                     l15345:
  7187                           
  7188                           ; BSR set to: 1
  7189                           ;Setup_Time.c: 51: {
  7190                           ;Setup_Time.c: 52: if (check_for_button_input() == 1)
  7191  006EF8  EC7D  F03F         	call	_check_for_button_input	;wreg free
  7192  006EFC  06E8               	decf	wreg,f,c
  7193  006EFE  A4D8               	btfss	status,2,c
  7194  006F00  D040               	goto	l15381
  7195                           
  7196                           ;Setup_Time.c: 53: {
  7197                           ;Setup_Time.c: 55: if (found >= 3 && found <= 8)
  7198  006F02  0E02               	movlw	2
  7199  006F04  0100               	movlb	0	; () banked
  7200  006F06  65EC               	cpfsgt	_found& (0+255),b
  7201  006F08  D039               	goto	l15379
  7202                           
  7203                           ; BSR set to: 0
  7204  006F0A  0E09               	movlw	9
  7205  006F0C  0100               	movlb	0	; () banked
  7206  006F0E  61EC               	cpfslt	_found& (0+255),b
  7207  006F10  D035               	goto	l15379
  7208                           
  7209                           ; BSR set to: 0
  7210                           ;Setup_Time.c: 56: {
  7211                           ;Setup_Time.c: 57: Do_Beep_Good();
  7212  006F12  EC57  F048         	call	_Do_Beep_Good	;wreg free
  7213                           
  7214                           ;Setup_Time.c: 58: if (found == 3) Go_Prev_Field();
  7215  006F16  0E03               	movlw	3
  7216  006F18  0100               	movlb	0	; () banked
  7217  006F1A  19EC               	xorwf	_found& (0+255),w,b
  7218  006F1C  A4D8               	btfss	status,2,c
  7219  006F1E  D003               	goto	l15357
  7220                           
  7221                           ; BSR set to: 0
  7222  006F20  ECDD  F047         	call	_Go_Prev_Field	;wreg free
  7223  006F24  D028               	goto	l15377
  7224  006F26                     l15357:
  7225                           
  7226                           ;Setup_Time.c: 59: else if (found == 4) Go_Next_Field();
  7227  006F26  0E04               	movlw	4
  7228  006F28  0100               	movlb	0	; () banked
  7229  006F2A  19EC               	xorwf	_found& (0+255),w,b
  7230  006F2C  A4D8               	btfss	status,2,c
  7231  006F2E  D003               	goto	l15361
  7232                           
  7233                           ; BSR set to: 0
  7234  006F30  ECED  F047         	call	_Go_Next_Field	;wreg free
  7235  006F34  D020               	goto	l15377
  7236  006F36                     l15361:
  7237                           
  7238                           ;Setup_Time.c: 60: else if (found == 5) Do_Save_New_Time();
  7239  006F36  0E05               	movlw	5
  7240  006F38  0100               	movlb	0	; () banked
  7241  006F3A  19EC               	xorwf	_found& (0+255),w,b
  7242  006F3C  A4D8               	btfss	status,2,c
  7243  006F3E  D003               	goto	l15365
  7244                           
  7245                           ; BSR set to: 0
  7246  006F40  ECB3  F048         	call	_Do_Save_New_Time	;wreg free
  7247  006F44  D018               	goto	l15377
  7248  006F46                     l15365:
  7249                           
  7250                           ;Setup_Time.c: 61: else if (found == 6) Decrease_Time();
  7251  006F46  0E06               	movlw	6
  7252  006F48  0100               	movlb	0	; () banked
  7253  006F4A  19EC               	xorwf	_found& (0+255),w,b
  7254  006F4C  A4D8               	btfss	status,2,c
  7255  006F4E  D003               	goto	l15369
  7256                           
  7257                           ; BSR set to: 0
  7258  006F50  ECE1  F03D         	call	_Decrease_Time	;wreg free
  7259  006F54  D010               	goto	l15377
  7260  006F56                     l15369:
  7261                           
  7262                           ;Setup_Time.c: 62: else if (found == 7) Increase_Time();
  7263  006F56  0E07               	movlw	7
  7264  006F58  0100               	movlb	0	; () banked
  7265  006F5A  19EC               	xorwf	_found& (0+255),w,b
  7266  006F5C  A4D8               	btfss	status,2,c
  7267  006F5E  D003               	goto	l15373
  7268                           
  7269                           ; BSR set to: 0
  7270  006F60  EC2C  F03D         	call	_Increase_Time	;wreg free
  7271  006F64  D008               	goto	l15377
  7272  006F66                     l15373:
  7273                           
  7274                           ;Setup_Time.c: 63: else if (found == 8) Exit_Time_Setup();
  7275  006F66  0E08               	movlw	8
  7276  006F68  0100               	movlb	0	; () banked
  7277  006F6A  19EC               	xorwf	_found& (0+255),w,b
  7278  006F6C  A4D8               	btfss	status,2,c
  7279  006F6E  D003               	goto	l15377
  7280                           
  7281                           ; BSR set to: 0
  7282  006F70  EC2A  F049         	call	_Exit_Time_Setup	;wreg free
  7283  006F74  D000               	goto	l15377
  7284  006F76                     l15377:
  7285                           
  7286                           ;Setup_Time.c: 64: found = 0xff;
  7287  006F76  0100               	movlb	0	; () banked
  7288  006F78  69EC               	setf	_found& (0+255),b
  7289                           
  7290                           ;Setup_Time.c: 65: }
  7291  006F7A  D003               	goto	l15381
  7292  006F7C                     l15379:
  7293                           
  7294                           ; BSR set to: 0
  7295                           ;Setup_Time.c: 66: else
  7296                           ;Setup_Time.c: 67: {
  7297                           ;Setup_Time.c: 68: Do_Beep_Bad();
  7298  006F7C  EC64  F048         	call	_Do_Beep_Bad	;wreg free
  7299  006F80  D000               	goto	l15381
  7300  006F82                     l15381:
  7301  006F82  0101               	movlb	1	; () banked
  7302  006F84  05B7               	decf	_In_Time_Setup& (0+255),w,b
  7303  006F86  B4D8               	btfsc	status,2,c
  7304  006F88  D7B7               	goto	l15345
  7305                           
  7306                           ; BSR set to: 1
  7307                           
  7308                           ; BSR set to: 1
  7309  006F8A  0012               	return		;funcret
  7310  006F8C                     __end_of_Do_Setup_Time:
  7311                           	opt stack 0
  7312                           tblptru	equ	0xFF8
  7313                           tblptrh	equ	0xFF7
  7314                           tblptrl	equ	0xFF6
  7315                           tablat	equ	0xFF5
  7316                           postinc0	equ	0xFEE
  7317                           wreg	equ	0xFE8
  7318                           postdec1	equ	0xFE5
  7319                           fsr1l	equ	0xFE1
  7320                           status	equ	0xFD8
  7321                           
  7322 ;; *************** function _Initialize_Setup_Time_Screen *****************
  7323 ;; Defined at:
  7324 ;;		line 189 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Time.c"
  7325 ;; Parameters:    Size  Location     Type
  7326 ;;		None
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;		None
  7329 ;; Return value:  Size  Location     Type
  7330 ;;		None               void
  7331 ;; Registers used:
  7332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7342 ;;Total ram usage:        0 bytes
  7343 ;; Hardware stack levels used:    1
  7344 ;; Hardware stack levels required when called:   13
  7345 ;; This function calls:
  7346 ;;		_drawtext
  7347 ;;		_fillRect
  7348 ;;		_fillScreen
  7349 ;;		_strcpy
  7350 ;; This function is called by:
  7351 ;;		_Do_Setup_Time
  7352 ;; This function uses a non-reentrant model
  7353 ;;
  7354                           
  7355                           	psect	text25
  7356  005F18                     __ptext25:
  7357                           	opt stack 0
  7358  005F18                     _Initialize_Setup_Time_Screen:
  7359                           	opt stack 16
  7360                           
  7361                           ;Setup_Time.c: 191: fillScreen(0x0000);
  7362                           
  7363                           ; BSR set to: 1
  7364                           ;incstack = 0
  7365  005F18  0E00               	movlw	0
  7366  005F1A  0100               	movlb	0	; () banked
  7367  005F1C  6FA2               	movwf	(fillScreen@color+1)& (0+255),b
  7368  005F1E  0E00               	movlw	0
  7369  005F20  6FA1               	movwf	fillScreen@color& (0+255),b
  7370  005F22  ECBB  F047         	call	_fillScreen	;wreg free
  7371                           
  7372                           ;Setup_Time.c: 193: strcpy(txt, "ECE3301L Sp21 Final\0");
  7373  005F26  C0E4  F08E         	movff	_txt,strcpy@to
  7374  005F2A  C0E5  F08F         	movff	_txt+1,strcpy@to+1
  7375  005F2E  0E04               	movlw	low STR_7
  7376  005F30  0100               	movlb	0	; () banked
  7377  005F32  6F90               	movwf	strcpy@from& (0+255),b
  7378  005F34  0EFF               	movlw	high STR_7
  7379  005F36  0100               	movlb	0	; () banked
  7380  005F38  6F91               	movwf	(strcpy@from+1)& (0+255),b
  7381  005F3A  EC9B  F046         	call	_strcpy	;wreg free
  7382                           
  7383                           ;Setup_Time.c: 194: drawtext(1 , 1, txt, 0xFFFF , 0x0000, 1);
  7384  005F3E  0E01               	movlw	1
  7385  005F40  0100               	movlb	0	; () banked
  7386  005F42  6FB6               	movwf	drawtext@y& (0+255),b
  7387  005F44  C0E4  F0B7         	movff	_txt,drawtext@_text
  7388  005F48  C0E5  F0B8         	movff	_txt+1,drawtext@_text+1
  7389  005F4C  0EFF               	movlw	255
  7390  005F4E  0100               	movlb	0	; () banked
  7391  005F50  6FBA               	movwf	(drawtext@color+1)& (0+255),b
  7392  005F52  69B9               	setf	drawtext@color& (0+255),b
  7393  005F54  0E00               	movlw	0
  7394  005F56  0100               	movlb	0	; () banked
  7395  005F58  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
  7396  005F5A  0E00               	movlw	0
  7397  005F5C  6FBB               	movwf	drawtext@bg& (0+255),b
  7398  005F5E  0E01               	movlw	1
  7399  005F60  0100               	movlb	0	; () banked
  7400  005F62  6FBD               	movwf	drawtext@size& (0+255),b
  7401  005F64  0E01               	movlw	1
  7402  005F66  EC0B  F032         	call	_drawtext
  7403                           
  7404                           ;Setup_Time.c: 197: strcpy(txt, "Time Setup\0");
  7405  005F6A  C0E4  F08E         	movff	_txt,strcpy@to
  7406  005F6E  C0E5  F08F         	movff	_txt+1,strcpy@to+1
  7407  005F72  0E90               	movlw	low STR_33
  7408  005F74  0100               	movlb	0	; () banked
  7409  005F76  6F90               	movwf	strcpy@from& (0+255),b
  7410  005F78  0EFF               	movlw	high STR_33
  7411  005F7A  0100               	movlb	0	; () banked
  7412  005F7C  6F91               	movwf	(strcpy@from+1)& (0+255),b
  7413  005F7E  EC9B  F046         	call	_strcpy	;wreg free
  7414                           
  7415                           ;Setup_Time.c: 198: drawtext(1+3 , 1+15, txt, 0xF81F, 0x0000, 2);
  7416  005F82  0E10               	movlw	16
  7417  005F84  0100               	movlb	0	; () banked
  7418  005F86  6FB6               	movwf	drawtext@y& (0+255),b
  7419  005F88  C0E4  F0B7         	movff	_txt,drawtext@_text
  7420  005F8C  C0E5  F0B8         	movff	_txt+1,drawtext@_text+1
  7421  005F90  0EF8               	movlw	248
  7422  005F92  0100               	movlb	0	; () banked
  7423  005F94  6FBA               	movwf	(drawtext@color+1)& (0+255),b
  7424  005F96  0E1F               	movlw	31
  7425  005F98  6FB9               	movwf	drawtext@color& (0+255),b
  7426  005F9A  0E00               	movlw	0
  7427  005F9C  0100               	movlb	0	; () banked
  7428  005F9E  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
  7429  005FA0  0E00               	movlw	0
  7430  005FA2  6FBB               	movwf	drawtext@bg& (0+255),b
  7431  005FA4  0E02               	movlw	2
  7432  005FA6  0100               	movlb	0	; () banked
  7433  005FA8  6FBD               	movwf	drawtext@size& (0+255),b
  7434  005FAA  0E04               	movlw	4
  7435  005FAC  EC0B  F032         	call	_drawtext
  7436                           
  7437                           ;Setup_Time.c: 200: strcpy(txt, "Time");
  7438  005FB0  C0E4  F08E         	movff	_txt,strcpy@to
  7439  005FB4  C0E5  F08F         	movff	_txt+1,strcpy@to+1
  7440  005FB8  0EC4               	movlw	low (STR_13+6)
  7441  005FBA  0100               	movlb	0	; () banked
  7442  005FBC  6F90               	movwf	strcpy@from& (0+255),b
  7443  005FBE  0EFF               	movlw	high (STR_13+6)
  7444  005FC0  0100               	movlb	0	; () banked
  7445  005FC2  6F91               	movwf	(strcpy@from+1)& (0+255),b
  7446  005FC4  EC9B  F046         	call	_strcpy	;wreg free
  7447                           
  7448                           ;Setup_Time.c: 201: drawtext(50 , 40 , txt, 0x001F , 0x0000, 1);
  7449  005FC8  0E28               	movlw	40
  7450  005FCA  0100               	movlb	0	; () banked
  7451  005FCC  6FB6               	movwf	drawtext@y& (0+255),b
  7452  005FCE  C0E4  F0B7         	movff	_txt,drawtext@_text
  7453  005FD2  C0E5  F0B8         	movff	_txt+1,drawtext@_text+1
  7454  005FD6  0E00               	movlw	0
  7455  005FD8  0100               	movlb	0	; () banked
  7456  005FDA  6FBA               	movwf	(drawtext@color+1)& (0+255),b
  7457  005FDC  0E1F               	movlw	31
  7458  005FDE  6FB9               	movwf	drawtext@color& (0+255),b
  7459  005FE0  0E00               	movlw	0
  7460  005FE2  0100               	movlb	0	; () banked
  7461  005FE4  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
  7462  005FE6  0E00               	movlw	0
  7463  005FE8  6FBB               	movwf	drawtext@bg& (0+255),b
  7464  005FEA  0E01               	movlw	1
  7465  005FEC  0100               	movlb	0	; () banked
  7466  005FEE  6FBD               	movwf	drawtext@size& (0+255),b
  7467  005FF0  0E32               	movlw	50
  7468  005FF2  EC0B  F032         	call	_drawtext
  7469                           
  7470                           ;Setup_Time.c: 203: fillRect(15-1, 52+16, 25,2,0x07FF);
  7471  005FF6  0E44               	movlw	68
  7472  005FF8  0100               	movlb	0	; () banked
  7473  005FFA  6FA0               	movwf	fillRect@y& (0+255),b
  7474  005FFC  0E19               	movlw	25
  7475  005FFE  0100               	movlb	0	; () banked
  7476  006000  6FA1               	movwf	fillRect@w& (0+255),b
  7477  006002  0E02               	movlw	2
  7478  006004  0100               	movlb	0	; () banked
  7479  006006  6FA2               	movwf	fillRect@h& (0+255),b
  7480  006008  0E07               	movlw	7
  7481  00600A  0100               	movlb	0	; () banked
  7482  00600C  6FA4               	movwf	(fillRect@color+1)& (0+255),b
  7483  00600E  69A3               	setf	fillRect@color& (0+255),b
  7484  006010  0E0E               	movlw	14
  7485  006012  ECFA  F042         	call	_fillRect
  7486                           
  7487                           ;Setup_Time.c: 204: strcpy(txt, "Date");
  7488  006016  C0E4  F08E         	movff	_txt,strcpy@to
  7489  00601A  C0E5  F08F         	movff	_txt+1,strcpy@to+1
  7490  00601E  0EE0               	movlw	low STR_12
  7491  006020  0100               	movlb	0	; () banked
  7492  006022  6F90               	movwf	strcpy@from& (0+255),b
  7493  006024  0EFF               	movlw	high STR_12
  7494  006026  0100               	movlb	0	; () banked
  7495  006028  6F91               	movwf	(strcpy@from+1)& (0+255),b
  7496  00602A  EC9B  F046         	call	_strcpy	;wreg free
  7497                           
  7498                           ;Setup_Time.c: 205: drawtext(50 , 71 , txt, 0xF800 , 0x0000, 1);
  7499  00602E  0E47               	movlw	71
  7500  006030  0100               	movlb	0	; () banked
  7501  006032  6FB6               	movwf	drawtext@y& (0+255),b
  7502  006034  C0E4  F0B7         	movff	_txt,drawtext@_text
  7503  006038  C0E5  F0B8         	movff	_txt+1,drawtext@_text+1
  7504  00603C  0EF8               	movlw	248
  7505  00603E  0100               	movlb	0	; () banked
  7506  006040  6FBA               	movwf	(drawtext@color+1)& (0+255),b
  7507  006042  0E00               	movlw	0
  7508  006044  6FB9               	movwf	drawtext@color& (0+255),b
  7509  006046  0E00               	movlw	0
  7510  006048  0100               	movlb	0	; () banked
  7511  00604A  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
  7512  00604C  0E00               	movlw	0
  7513  00604E  6FBB               	movwf	drawtext@bg& (0+255),b
  7514  006050  0E01               	movlw	1
  7515  006052  0100               	movlb	0	; () banked
  7516  006054  6FBD               	movwf	drawtext@size& (0+255),b
  7517  006056  0E32               	movlw	50
  7518  006058  EC0B  F032         	call	_drawtext
  7519  00605C  0012               	return		;funcret
  7520  00605E                     __end_of_Initialize_Setup_Time_Screen:
  7521                           	opt stack 0
  7522                           tblptru	equ	0xFF8
  7523                           tblptrh	equ	0xFF7
  7524                           tblptrl	equ	0xFF6
  7525                           tablat	equ	0xFF5
  7526                           postinc0	equ	0xFEE
  7527                           wreg	equ	0xFE8
  7528                           postdec1	equ	0xFE5
  7529                           fsr1l	equ	0xFE1
  7530                           status	equ	0xFD8
  7531                           
  7532 ;; *************** function _Increase_Time *****************
  7533 ;; Defined at:
  7534 ;;		line 74 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Time.c"
  7535 ;; Parameters:    Size  Location     Type
  7536 ;;		None
  7537 ;; Auto vars:     Size  Location     Type
  7538 ;;		None
  7539 ;; Return value:  Size  Location     Type
  7540 ;;		None               void
  7541 ;; Registers used:
  7542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7543 ;; Tracked objects:
  7544 ;;		On entry : 0/0
  7545 ;;		On exit  : 0/0
  7546 ;;		Unchanged: 0/0
  7547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7552 ;;Total ram usage:        0 bytes
  7553 ;; Hardware stack levels used:    1
  7554 ;; Hardware stack levels required when called:   14
  7555 ;; This function calls:
  7556 ;;		_Update_Setup_Time_Screen
  7557 ;; This function is called by:
  7558 ;;		_Do_Setup_Time
  7559 ;; This function uses a non-reentrant model
  7560 ;;
  7561                           
  7562                           	psect	text26
  7563  007A58                     __ptext26:
  7564                           	opt stack 0
  7565  007A58                     _Increase_Time:
  7566                           	opt stack 15
  7567                           
  7568                           ;Setup_Time.c: 76: switch (Select_Field)
  7569                           
  7570                           ;incstack = 0
  7571  007A58  D042               	goto	l14471
  7572  007A5A                     l14433:
  7573                           
  7574                           ;Setup_Time.c: 79: setup_hour++;
  7575  007A5A  0101               	movlb	1	; () banked
  7576  007A5C  2BC5               	incf	_setup_hour& (0+255),f,b
  7577                           
  7578                           ; BSR set to: 1
  7579                           ;Setup_Time.c: 80: if (setup_hour == 24) setup_hour = 0;
  7580  007A5E  0E18               	movlw	24
  7581  007A60  0101               	movlb	1	; () banked
  7582  007A62  19C5               	xorwf	_setup_hour& (0+255),w,b
  7583  007A64  A4D8               	btfss	status,2,c
  7584  007A66  D050               	goto	l14473
  7585                           
  7586                           ; BSR set to: 1
  7587  007A68  0E00               	movlw	0
  7588  007A6A  0101               	movlb	1	; () banked
  7589  007A6C  6FC5               	movwf	_setup_hour& (0+255),b
  7590                           
  7591                           ; BSR set to: 1
  7592                           ;Setup_Time.c: 81: break;
  7593  007A6E  D04C               	goto	l14473
  7594  007A70                     l14439:
  7595                           
  7596                           ; BSR set to: 1
  7597                           ;Setup_Time.c: 85: setup_minute++;
  7598  007A70  0101               	movlb	1	; () banked
  7599  007A72  2BC6               	incf	_setup_minute& (0+255),f,b
  7600                           
  7601                           ; BSR set to: 1
  7602                           ;Setup_Time.c: 86: if (setup_minute == 60) setup_minute = 0;
  7603  007A74  0E3C               	movlw	60
  7604  007A76  0101               	movlb	1	; () banked
  7605  007A78  19C6               	xorwf	_setup_minute& (0+255),w,b
  7606  007A7A  A4D8               	btfss	status,2,c
  7607  007A7C  D045               	goto	l14473
  7608                           
  7609                           ; BSR set to: 1
  7610  007A7E  0E00               	movlw	0
  7611  007A80  0101               	movlb	1	; () banked
  7612  007A82  6FC6               	movwf	_setup_minute& (0+255),b
  7613                           
  7614                           ; BSR set to: 1
  7615                           ;Setup_Time.c: 87: break;
  7616  007A84  D041               	goto	l14473
  7617  007A86                     l14445:
  7618                           
  7619                           ; BSR set to: 1
  7620                           ;Setup_Time.c: 91: setup_second++;
  7621  007A86  0101               	movlb	1	; () banked
  7622  007A88  2BC8               	incf	_setup_second& (0+255),f,b
  7623                           
  7624                           ; BSR set to: 1
  7625                           ;Setup_Time.c: 92: if (setup_second == 60) setup_second = 0;
  7626  007A8A  0E3C               	movlw	60
  7627  007A8C  0101               	movlb	1	; () banked
  7628  007A8E  19C8               	xorwf	_setup_second& (0+255),w,b
  7629  007A90  A4D8               	btfss	status,2,c
  7630  007A92  D03A               	goto	l14473
  7631                           
  7632                           ; BSR set to: 1
  7633  007A94  0E00               	movlw	0
  7634  007A96  0101               	movlb	1	; () banked
  7635  007A98  6FC8               	movwf	_setup_second& (0+255),b
  7636                           
  7637                           ; BSR set to: 1
  7638                           ;Setup_Time.c: 93: break;
  7639  007A9A  D036               	goto	l14473
  7640  007A9C                     l14451:
  7641                           
  7642                           ; BSR set to: 1
  7643                           ;Setup_Time.c: 97: setup_month++;
  7644  007A9C  0101               	movlb	1	; () banked
  7645  007A9E  2BC7               	incf	_setup_month& (0+255),f,b
  7646                           
  7647                           ; BSR set to: 1
  7648                           ;Setup_Time.c: 98: if (setup_month == 13) setup_month = 1;
  7649  007AA0  0E0D               	movlw	13
  7650  007AA2  0101               	movlb	1	; () banked
  7651  007AA4  19C7               	xorwf	_setup_month& (0+255),w,b
  7652  007AA6  A4D8               	btfss	status,2,c
  7653  007AA8  D02F               	goto	l14473
  7654                           
  7655                           ; BSR set to: 1
  7656  007AAA  0E01               	movlw	1
  7657  007AAC  0101               	movlb	1	; () banked
  7658  007AAE  6FC7               	movwf	_setup_month& (0+255),b
  7659                           
  7660                           ; BSR set to: 1
  7661                           ;Setup_Time.c: 99: break;
  7662  007AB0  D02B               	goto	l14473
  7663  007AB2                     l14457:
  7664                           
  7665                           ; BSR set to: 1
  7666                           ;Setup_Time.c: 103: setup_day++;
  7667  007AB2  0101               	movlb	1	; () banked
  7668  007AB4  2BC3               	incf	_setup_day& (0+255),f,b
  7669                           
  7670                           ; BSR set to: 1
  7671                           ;Setup_Time.c: 104: if (setup_day == 32) setup_day = 1;
  7672  007AB6  0E20               	movlw	32
  7673  007AB8  0101               	movlb	1	; () banked
  7674  007ABA  19C3               	xorwf	_setup_day& (0+255),w,b
  7675  007ABC  A4D8               	btfss	status,2,c
  7676  007ABE  D024               	goto	l14473
  7677                           
  7678                           ; BSR set to: 1
  7679  007AC0  0E01               	movlw	1
  7680  007AC2  0101               	movlb	1	; () banked
  7681  007AC4  6FC3               	movwf	_setup_day& (0+255),b
  7682                           
  7683                           ; BSR set to: 1
  7684                           ;Setup_Time.c: 105: break;
  7685  007AC6  D020               	goto	l14473
  7686  007AC8                     l14463:
  7687                           
  7688                           ; BSR set to: 1
  7689                           ;Setup_Time.c: 109: setup_year++;
  7690  007AC8  0101               	movlb	1	; () banked
  7691  007ACA  2BC9               	incf	_setup_year& (0+255),f,b
  7692                           
  7693                           ; BSR set to: 1
  7694                           ;Setup_Time.c: 110: if (setup_year == 100) setup_year = 0;
  7695  007ACC  0E64               	movlw	100
  7696  007ACE  0101               	movlb	1	; () banked
  7697  007AD0  19C9               	xorwf	_setup_year& (0+255),w,b
  7698  007AD2  A4D8               	btfss	status,2,c
  7699  007AD4  D019               	goto	l14473
  7700                           
  7701                           ; BSR set to: 1
  7702  007AD6  0E00               	movlw	0
  7703  007AD8  0101               	movlb	1	; () banked
  7704  007ADA  6FC9               	movwf	_setup_year& (0+255),b
  7705                           
  7706                           ; BSR set to: 1
  7707                           ;Setup_Time.c: 115: }
  7708                           
  7709                           ; BSR set to: 1
  7710                           ;Setup_Time.c: 114: break;
  7711                           
  7712                           ;Setup_Time.c: 113: default:
  7713                           
  7714                           ; BSR set to: 1
  7715                           ;Setup_Time.c: 111: break;
  7716  007ADC  D015               	goto	l14473
  7717  007ADE                     l14471:
  7718  007ADE  0101               	movlb	1	; () banked
  7719  007AE0  51BC               	movf	_Select_Field& (0+255),w,b
  7720                           
  7721                           ; Switch size 1, requested type "space"
  7722                           ; Number of cases is 6, Range of values is 0 to 5
  7723                           ; switch strategies available:
  7724                           ; Name         Instructions Cycles
  7725                           ; simple_byte           19    10 (average)
  7726                           ;	Chosen strategy is simple_byte
  7727  007AE2  0A00               	xorlw	0	; case 0
  7728  007AE4  B4D8               	btfsc	status,2,c
  7729  007AE6  D7B9               	goto	l14433
  7730  007AE8  0A01               	xorlw	1	; case 1
  7731  007AEA  B4D8               	btfsc	status,2,c
  7732  007AEC  D7C1               	goto	l14439
  7733  007AEE  0A03               	xorlw	3	; case 2
  7734  007AF0  B4D8               	btfsc	status,2,c
  7735  007AF2  D7C9               	goto	l14445
  7736  007AF4  0A01               	xorlw	1	; case 3
  7737  007AF6  B4D8               	btfsc	status,2,c
  7738  007AF8  D7D1               	goto	l14451
  7739  007AFA  0A07               	xorlw	7	; case 4
  7740  007AFC  B4D8               	btfsc	status,2,c
  7741  007AFE  D7D9               	goto	l14457
  7742  007B00  0A01               	xorlw	1	; case 5
  7743  007B02  B4D8               	btfsc	status,2,c
  7744  007B04  D7E1               	goto	l14463
  7745  007B06  D000               	goto	l14473
  7746  007B08                     l14473:
  7747                           
  7748                           ; BSR set to: 1
  7749                           ;Setup_Time.c: 116: Update_Setup_Time_Screen();
  7750  007B08  ECE3  F029         	call	_Update_Setup_Time_Screen	;wreg free
  7751  007B0C  0012               	return		;funcret
  7752  007B0E                     __end_of_Increase_Time:
  7753                           	opt stack 0
  7754                           tblptru	equ	0xFF8
  7755                           tblptrh	equ	0xFF7
  7756                           tblptrl	equ	0xFF6
  7757                           tablat	equ	0xFF5
  7758                           postinc0	equ	0xFEE
  7759                           wreg	equ	0xFE8
  7760                           postdec1	equ	0xFE5
  7761                           fsr1l	equ	0xFE1
  7762                           status	equ	0xFD8
  7763                           
  7764 ;; *************** function _Go_Prev_Field *****************
  7765 ;; Defined at:
  7766 ;;		line 168 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Time.c"
  7767 ;; Parameters:    Size  Location     Type
  7768 ;;		None
  7769 ;; Auto vars:     Size  Location     Type
  7770 ;;		None
  7771 ;; Return value:  Size  Location     Type
  7772 ;;		None               void
  7773 ;; Registers used:
  7774 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7775 ;; Tracked objects:
  7776 ;;		On entry : 0/0
  7777 ;;		On exit  : 0/0
  7778 ;;		Unchanged: 0/0
  7779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7784 ;;Total ram usage:        0 bytes
  7785 ;; Hardware stack levels used:    1
  7786 ;; Hardware stack levels required when called:   12
  7787 ;; This function calls:
  7788 ;;		_Update_Setup_Screen_Cursor_Backward
  7789 ;; This function is called by:
  7790 ;;		_Do_Setup_Time
  7791 ;; This function uses a non-reentrant model
  7792 ;;
  7793                           
  7794                           	psect	text27
  7795  008FBA                     __ptext27:
  7796                           	opt stack 0
  7797  008FBA                     _Go_Prev_Field:
  7798                           	opt stack 17
  7799                           
  7800                           ;Setup_Time.c: 170: if (Select_Field == 0) Select_Field = 5;
  7801                           
  7802                           ;incstack = 0
  7803  008FBA  0101               	movlb	1	; () banked
  7804  008FBC  51BC               	movf	_Select_Field& (0+255),w,b
  7805  008FBE  A4D8               	btfss	status,2,c
  7806  008FC0  D004               	goto	l10225
  7807                           
  7808                           ; BSR set to: 1
  7809  008FC2  0E05               	movlw	5
  7810  008FC4  0101               	movlb	1	; () banked
  7811  008FC6  6FBC               	movwf	_Select_Field& (0+255),b
  7812  008FC8  D003               	goto	l10227
  7813  008FCA                     l10225:
  7814                           
  7815                           ; BSR set to: 1
  7816                           ;Setup_Time.c: 171: else Select_Field--;
  7817  008FCA  0101               	movlb	1	; () banked
  7818  008FCC  07BC               	decf	_Select_Field& (0+255),f,b
  7819  008FCE  D000               	goto	l10227
  7820  008FD0                     l10227:
  7821                           
  7822                           ; BSR set to: 1
  7823                           ;Setup_Time.c: 172: Update_Setup_Screen_Cursor_Backward(Select_Field);
  7824  008FD0  0101               	movlb	1	; () banked
  7825  008FD2  51BC               	movf	_Select_Field& (0+255),w,b
  7826  008FD4  ECBB  F027         	call	_Update_Setup_Screen_Cursor_Backward
  7827  008FD8  0012               	return		;funcret
  7828  008FDA                     __end_of_Go_Prev_Field:
  7829                           	opt stack 0
  7830                           tblptru	equ	0xFF8
  7831                           tblptrh	equ	0xFF7
  7832                           tblptrl	equ	0xFF6
  7833                           tablat	equ	0xFF5
  7834                           postinc0	equ	0xFEE
  7835                           wreg	equ	0xFE8
  7836                           postdec1	equ	0xFE5
  7837                           fsr1l	equ	0xFE1
  7838                           status	equ	0xFD8
  7839                           
  7840 ;; *************** function _Go_Next_Field *****************
  7841 ;; Defined at:
  7842 ;;		line 159 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Time.c"
  7843 ;; Parameters:    Size  Location     Type
  7844 ;;		None
  7845 ;; Auto vars:     Size  Location     Type
  7846 ;;		None
  7847 ;; Return value:  Size  Location     Type
  7848 ;;		None               void
  7849 ;; Registers used:
  7850 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7851 ;; Tracked objects:
  7852 ;;		On entry : 0/0
  7853 ;;		On exit  : 0/0
  7854 ;;		Unchanged: 0/0
  7855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7860 ;;Total ram usage:        0 bytes
  7861 ;; Hardware stack levels used:    1
  7862 ;; Hardware stack levels required when called:   12
  7863 ;; This function calls:
  7864 ;;		_Update_Setup_Screen_Cursor_Forward
  7865 ;; This function is called by:
  7866 ;;		_Do_Setup_Time
  7867 ;; This function uses a non-reentrant model
  7868 ;;
  7869                           
  7870                           	psect	text28
  7871  008FDA                     __ptext28:
  7872                           	opt stack 0
  7873  008FDA                     _Go_Next_Field:
  7874                           	opt stack 17
  7875                           
  7876                           ;Setup_Time.c: 162: Select_Field++;
  7877                           
  7878                           ;incstack = 0
  7879  008FDA  0101               	movlb	1	; () banked
  7880  008FDC  2BBC               	incf	_Select_Field& (0+255),f,b
  7881                           
  7882                           ; BSR set to: 1
  7883                           ;Setup_Time.c: 163: if (Select_Field == 6) Select_Field = 0;
  7884  008FDE  0E06               	movlw	6
  7885  008FE0  0101               	movlb	1	; () banked
  7886  008FE2  19BC               	xorwf	_Select_Field& (0+255),w,b
  7887  008FE4  A4D8               	btfss	status,2,c
  7888  008FE6  D004               	goto	l10235
  7889                           
  7890                           ; BSR set to: 1
  7891  008FE8  0E00               	movlw	0
  7892  008FEA  0101               	movlb	1	; () banked
  7893  008FEC  6FBC               	movwf	_Select_Field& (0+255),b
  7894  008FEE  D000               	goto	l10235
  7895  008FF0                     l10235:
  7896                           
  7897                           ; BSR set to: 1
  7898                           ;Setup_Time.c: 164: Update_Setup_Screen_Cursor_Forward(Select_Field);
  7899  008FF0  0101               	movlb	1	; () banked
  7900  008FF2  51BC               	movf	_Select_Field& (0+255),w,b
  7901  008FF4  EC75  F025         	call	_Update_Setup_Screen_Cursor_Forward
  7902  008FF8  0012               	return		;funcret
  7903  008FFA                     __end_of_Go_Next_Field:
  7904                           	opt stack 0
  7905                           tblptru	equ	0xFF8
  7906                           tblptrh	equ	0xFF7
  7907                           tblptrl	equ	0xFF6
  7908                           tablat	equ	0xFF5
  7909                           postinc0	equ	0xFEE
  7910                           wreg	equ	0xFE8
  7911                           postdec1	equ	0xFE5
  7912                           fsr1l	equ	0xFE1
  7913                           status	equ	0xFD8
  7914                           
  7915 ;; *************** function _Exit_Time_Setup *****************
  7916 ;; Defined at:
  7917 ;;		line 183 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Time.c"
  7918 ;; Parameters:    Size  Location     Type
  7919 ;;		None
  7920 ;; Auto vars:     Size  Location     Type
  7921 ;;		None
  7922 ;; Return value:  Size  Location     Type
  7923 ;;		None               void
  7924 ;; Registers used:
  7925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7926 ;; Tracked objects:
  7927 ;;		On entry : 0/0
  7928 ;;		On exit  : 0/0
  7929 ;;		Unchanged: 0/0
  7930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7935 ;;Total ram usage:        0 bytes
  7936 ;; Hardware stack levels used:    1
  7937 ;; Hardware stack levels required when called:   14
  7938 ;; This function calls:
  7939 ;;		_DS3231_Read_Time
  7940 ;;		_Initialize_Screen
  7941 ;; This function is called by:
  7942 ;;		_Do_Setup_Time
  7943 ;; This function uses a non-reentrant model
  7944 ;;
  7945                           
  7946                           	psect	text29
  7947  009254                     __ptext29:
  7948                           	opt stack 0
  7949  009254                     _Exit_Time_Setup:
  7950                           	opt stack 15
  7951                           
  7952                           ;Setup_Time.c: 185: DS3231_Read_Time();
  7953                           
  7954                           ;incstack = 0
  7955  009254  ECAB  F041         	call	_DS3231_Read_Time	;wreg free
  7956                           
  7957                           ;Setup_Time.c: 186: Initialize_Screen();
  7958  009258  ECAD  F01D         	call	_Initialize_Screen	;wreg free
  7959                           
  7960                           ;Setup_Time.c: 187: In_Time_Setup = 0;
  7961  00925C  0E00               	movlw	0
  7962  00925E  0101               	movlb	1	; () banked
  7963  009260  6FB7               	movwf	_In_Time_Setup& (0+255),b
  7964                           
  7965                           ; BSR set to: 1
  7966  009262  0012               	return		;funcret
  7967  009264                     __end_of_Exit_Time_Setup:
  7968                           	opt stack 0
  7969                           tblptru	equ	0xFF8
  7970                           tblptrh	equ	0xFF7
  7971                           tblptrl	equ	0xFF6
  7972                           tablat	equ	0xFF5
  7973                           postinc0	equ	0xFEE
  7974                           wreg	equ	0xFE8
  7975                           postdec1	equ	0xFE5
  7976                           fsr1l	equ	0xFE1
  7977                           status	equ	0xFD8
  7978                           
  7979 ;; *************** function _Do_Save_New_Time *****************
  7980 ;; Defined at:
  7981 ;;		line 175 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Time.c"
  7982 ;; Parameters:    Size  Location     Type
  7983 ;;		None
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;		None
  7986 ;; Return value:  Size  Location     Type
  7987 ;;		None               void
  7988 ;; Registers used:
  7989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7990 ;; Tracked objects:
  7991 ;;		On entry : 0/0
  7992 ;;		On exit  : 0/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7999 ;;Total ram usage:        0 bytes
  8000 ;; Hardware stack levels used:    1
  8001 ;; Hardware stack levels required when called:   14
  8002 ;; This function calls:
  8003 ;;		_DS3231_Read_Time
  8004 ;;		_DS3231_Write_Time
  8005 ;;		_Initialize_Screen
  8006 ;; This function is called by:
  8007 ;;		_Do_Setup_Time
  8008 ;; This function uses a non-reentrant model
  8009 ;;
  8010                           
  8011                           	psect	text30
  8012  009166                     __ptext30:
  8013                           	opt stack 0
  8014  009166                     _Do_Save_New_Time:
  8015                           	opt stack 15
  8016                           
  8017                           ;Setup_Time.c: 177: DS3231_Write_Time();
  8018                           
  8019                           ; BSR set to: 1
  8020                           ;incstack = 0
  8021  009166  EC6A  F03C         	call	_DS3231_Write_Time	;wreg free
  8022                           
  8023                           ;Setup_Time.c: 178: DS3231_Read_Time();
  8024  00916A  ECAB  F041         	call	_DS3231_Read_Time	;wreg free
  8025                           
  8026                           ;Setup_Time.c: 179: Initialize_Screen();
  8027  00916E  ECAD  F01D         	call	_Initialize_Screen	;wreg free
  8028                           
  8029                           ;Setup_Time.c: 180: In_Time_Setup = 0;
  8030  009172  0E00               	movlw	0
  8031  009174  0101               	movlb	1	; () banked
  8032  009176  6FB7               	movwf	_In_Time_Setup& (0+255),b
  8033                           
  8034                           ; BSR set to: 1
  8035  009178  0012               	return		;funcret
  8036  00917A                     __end_of_Do_Save_New_Time:
  8037                           	opt stack 0
  8038                           tblptru	equ	0xFF8
  8039                           tblptrh	equ	0xFF7
  8040                           tblptrl	equ	0xFF6
  8041                           tablat	equ	0xFF5
  8042                           postinc0	equ	0xFEE
  8043                           wreg	equ	0xFE8
  8044                           postdec1	equ	0xFE5
  8045                           fsr1l	equ	0xFE1
  8046                           status	equ	0xFD8
  8047                           
  8048 ;; *************** function _DS3231_Write_Time *****************
  8049 ;; Defined at:
  8050 ;;		line 90 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/I2C_Support.c"
  8051 ;; Parameters:    Size  Location     Type
  8052 ;;		None
  8053 ;; Auto vars:     Size  Location     Type
  8054 ;;  Address         1   72[BANK0 ] unsigned char 
  8055 ;;  Device          1   71[BANK0 ] unsigned char 
  8056 ;; Return value:  Size  Location     Type
  8057 ;;		None               void
  8058 ;; Registers used:
  8059 ;;		wreg, status,2, status,0, cstack
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8066 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8068 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8069 ;;Total ram usage:        2 bytes
  8070 ;; Hardware stack levels used:    1
  8071 ;; Hardware stack levels required when called:    8
  8072 ;; This function calls:
  8073 ;;		_I2C_Start
  8074 ;;		_I2C_Stop
  8075 ;;		_I2C_Write
  8076 ;;		_dec_2_bcd
  8077 ;; This function is called by:
  8078 ;;		_Do_Save_New_Time
  8079 ;; This function uses a non-reentrant model
  8080 ;;
  8081                           
  8082                           	psect	text31
  8083  0078D4                     __ptext31:
  8084                           	opt stack 0
  8085  0078D4                     _DS3231_Write_Time:
  8086                           	opt stack 20
  8087                           
  8088                           ;I2C_Support.c: 92: char Device = 0x68;
  8089                           
  8090                           ; BSR set to: 1
  8091                           ;incstack = 0
  8092  0078D4  0E68               	movlw	104
  8093  0078D6  0100               	movlb	0	; () banked
  8094  0078D8  6FC7               	movwf	DS3231_Write_Time@Device& (0+255),b
  8095                           
  8096                           ;I2C_Support.c: 93: char Address = 0x00;
  8097  0078DA  0E00               	movlw	0
  8098  0078DC  0100               	movlb	0	; () banked
  8099  0078DE  6FC8               	movwf	DS3231_Write_Time@Address& (0+255),b
  8100                           
  8101                           ; BSR set to: 0
  8102                           ;I2C_Support.c: 94: second = dec_2_bcd(setup_second);
  8103  0078E0  0101               	movlb	1	; () banked
  8104  0078E2  51C8               	movf	_setup_second& (0+255),w,b
  8105  0078E4  ECE8  F041         	call	_dec_2_bcd
  8106  0078E8  0100               	movlb	0	; () banked
  8107  0078EA  51C0               	movf	?_dec_2_bcd& (0+255),w,b
  8108  0078EC  0100               	movlb	0	; () banked
  8109  0078EE  6FF0               	movwf	_second& (0+255),b
  8110                           
  8111                           ; BSR set to: 0
  8112                           ;I2C_Support.c: 95: minute = dec_2_bcd(setup_minute);
  8113  0078F0  0101               	movlb	1	; () banked
  8114  0078F2  51C6               	movf	_setup_minute& (0+255),w,b
  8115  0078F4  ECE8  F041         	call	_dec_2_bcd
  8116  0078F8  0100               	movlb	0	; () banked
  8117  0078FA  51C0               	movf	?_dec_2_bcd& (0+255),w,b
  8118  0078FC  0100               	movlb	0	; () banked
  8119  0078FE  6FEE               	movwf	_minute& (0+255),b
  8120                           
  8121                           ; BSR set to: 0
  8122                           ;I2C_Support.c: 96: hour = dec_2_bcd(setup_hour);
  8123  007900  0101               	movlb	1	; () banked
  8124  007902  51C5               	movf	_setup_hour& (0+255),w,b
  8125  007904  ECE8  F041         	call	_dec_2_bcd
  8126  007908  0100               	movlb	0	; () banked
  8127  00790A  51C0               	movf	?_dec_2_bcd& (0+255),w,b
  8128  00790C  0100               	movlb	0	; () banked
  8129  00790E  6FED               	movwf	_hour& (0+255),b
  8130                           
  8131                           ; BSR set to: 0
  8132                           ;I2C_Support.c: 97: dow = 0x01;
  8133  007910  0E01               	movlw	1
  8134  007912  6E7F               	movwf	_dow,c
  8135                           
  8136                           ;I2C_Support.c: 98: day = dec_2_bcd(setup_day);
  8137  007914  0101               	movlb	1	; () banked
  8138  007916  51C3               	movf	_setup_day& (0+255),w,b
  8139  007918  ECE8  F041         	call	_dec_2_bcd
  8140  00791C  0100               	movlb	0	; () banked
  8141  00791E  51C0               	movf	?_dec_2_bcd& (0+255),w,b
  8142  007920  0100               	movlb	0	; () banked
  8143  007922  6FEA               	movwf	_day& (0+255),b
  8144                           
  8145                           ;I2C_Support.c: 99: month = dec_2_bcd(setup_month);
  8146  007924  0101               	movlb	1	; () banked
  8147  007926  51C7               	movf	_setup_month& (0+255),w,b
  8148  007928  ECE8  F041         	call	_dec_2_bcd
  8149  00792C  0100               	movlb	0	; () banked
  8150  00792E  51C0               	movf	?_dec_2_bcd& (0+255),w,b
  8151  007930  0100               	movlb	0	; () banked
  8152  007932  6FEF               	movwf	_month& (0+255),b
  8153                           
  8154                           ;I2C_Support.c: 100: year = dec_2_bcd(setup_year);
  8155  007934  0101               	movlb	1	; () banked
  8156  007936  51C9               	movf	_setup_year& (0+255),w,b
  8157  007938  ECE8  F041         	call	_dec_2_bcd
  8158  00793C  0100               	movlb	0	; () banked
  8159  00793E  51C0               	movf	?_dec_2_bcd& (0+255),w,b
  8160  007940  0100               	movlb	0	; () banked
  8161  007942  6FF1               	movwf	_year& (0+255),b
  8162                           
  8163                           ; BSR set to: 0
  8164                           ;I2C_Support.c: 101: I2C_Start();
  8165  007944  EC08  F049         	call	_I2C_Start	;wreg free
  8166                           
  8167                           ;I2C_Support.c: 102: I2C_Write((Device << 1) | 0);
  8168  007948  0100               	movlb	0	; () banked
  8169  00794A  51C7               	movf	DS3231_Write_Time@Device& (0+255),w,b
  8170  00794C  25C7               	addwf	DS3231_Write_Time@Device& (0+255),w,b
  8171  00794E  EC4E  F045         	call	_I2C_Write
  8172                           
  8173                           ;I2C_Support.c: 103: I2C_Write(Address);
  8174  007952  0100               	movlb	0	; () banked
  8175  007954  51C8               	movf	DS3231_Write_Time@Address& (0+255),w,b
  8176  007956  EC4E  F045         	call	_I2C_Write
  8177                           
  8178                           ;I2C_Support.c: 104: I2C_Write(second);
  8179  00795A  0100               	movlb	0	; () banked
  8180  00795C  51F0               	movf	_second& (0+255),w,b
  8181  00795E  EC4E  F045         	call	_I2C_Write
  8182                           
  8183                           ;I2C_Support.c: 105: I2C_Write(minute);
  8184  007962  0100               	movlb	0	; () banked
  8185  007964  51EE               	movf	_minute& (0+255),w,b
  8186  007966  EC4E  F045         	call	_I2C_Write
  8187                           
  8188                           ;I2C_Support.c: 106: I2C_Write(hour);
  8189  00796A  0100               	movlb	0	; () banked
  8190  00796C  51ED               	movf	_hour& (0+255),w,b
  8191  00796E  EC4E  F045         	call	_I2C_Write
  8192                           
  8193                           ;I2C_Support.c: 107: I2C_Write(dow);
  8194  007972  507F               	movf	_dow,w,c
  8195  007974  EC4E  F045         	call	_I2C_Write
  8196                           
  8197                           ;I2C_Support.c: 108: I2C_Write(day);
  8198  007978  0100               	movlb	0	; () banked
  8199  00797A  51EA               	movf	_day& (0+255),w,b
  8200  00797C  EC4E  F045         	call	_I2C_Write
  8201                           
  8202                           ;I2C_Support.c: 109: I2C_Write(month);
  8203  007980  0100               	movlb	0	; () banked
  8204  007982  51EF               	movf	_month& (0+255),w,b
  8205  007984  EC4E  F045         	call	_I2C_Write
  8206                           
  8207                           ;I2C_Support.c: 110: I2C_Write(year);
  8208  007988  0100               	movlb	0	; () banked
  8209  00798A  51F1               	movf	_year& (0+255),w,b
  8210  00798C  EC4E  F045         	call	_I2C_Write
  8211                           
  8212                           ;I2C_Support.c: 111: I2C_Stop();
  8213  007990  ECFF  F048         	call	_I2C_Stop	;wreg free
  8214  007994  0012               	return		;funcret
  8215  007996                     __end_of_DS3231_Write_Time:
  8216                           	opt stack 0
  8217                           tblptru	equ	0xFF8
  8218                           tblptrh	equ	0xFF7
  8219                           tblptrl	equ	0xFF6
  8220                           tablat	equ	0xFF5
  8221                           postinc0	equ	0xFEE
  8222                           wreg	equ	0xFE8
  8223                           postdec1	equ	0xFE5
  8224                           fsr1l	equ	0xFE1
  8225                           status	equ	0xFD8
  8226                           
  8227 ;; *************** function _Decrease_Time *****************
  8228 ;; Defined at:
  8229 ;;		line 119 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Time.c"
  8230 ;; Parameters:    Size  Location     Type
  8231 ;;		None
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;		None
  8234 ;; Return value:  Size  Location     Type
  8235 ;;		None               void
  8236 ;; Registers used:
  8237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8238 ;; Tracked objects:
  8239 ;;		On entry : 0/0
  8240 ;;		On exit  : 0/0
  8241 ;;		Unchanged: 0/0
  8242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8247 ;;Total ram usage:        0 bytes
  8248 ;; Hardware stack levels used:    1
  8249 ;; Hardware stack levels required when called:   14
  8250 ;; This function calls:
  8251 ;;		_Update_Setup_Time_Screen
  8252 ;; This function is called by:
  8253 ;;		_Do_Setup_Time
  8254 ;; This function uses a non-reentrant model
  8255 ;;
  8256                           
  8257                           	psect	text32
  8258  007BC2                     __ptext32:
  8259                           	opt stack 0
  8260  007BC2                     _Decrease_Time:
  8261                           	opt stack 15
  8262                           
  8263                           ;Setup_Time.c: 121: switch (Select_Field)
  8264                           
  8265                           ;incstack = 0
  8266  007BC2  D040               	goto	l14427
  8267  007BC4                     l14389:
  8268                           
  8269                           ;Setup_Time.c: 124: if (setup_hour == 0) setup_hour = 23;
  8270  007BC4  0101               	movlb	1	; () banked
  8271  007BC6  51C5               	movf	_setup_hour& (0+255),w,b
  8272  007BC8  A4D8               	btfss	status,2,c
  8273  007BCA  D004               	goto	l14393
  8274                           
  8275                           ; BSR set to: 1
  8276  007BCC  0E17               	movlw	23
  8277  007BCE  0101               	movlb	1	; () banked
  8278  007BD0  6FC5               	movwf	_setup_hour& (0+255),b
  8279  007BD2  D04D               	goto	l14429
  8280  007BD4                     l14393:
  8281                           
  8282                           ; BSR set to: 1
  8283                           ;Setup_Time.c: 125: else --setup_hour;
  8284  007BD4  0101               	movlb	1	; () banked
  8285  007BD6  07C5               	decf	_setup_hour& (0+255),f,b
  8286                           
  8287                           ; BSR set to: 1
  8288                           ;Setup_Time.c: 126: break;
  8289  007BD8  D04A               	goto	l14429
  8290  007BDA                     l14395:
  8291                           
  8292                           ; BSR set to: 1
  8293                           ;Setup_Time.c: 129: if (setup_minute == 0) setup_minute = 59;
  8294  007BDA  0101               	movlb	1	; () banked
  8295  007BDC  51C6               	movf	_setup_minute& (0+255),w,b
  8296  007BDE  A4D8               	btfss	status,2,c
  8297  007BE0  D004               	goto	l14399
  8298                           
  8299                           ; BSR set to: 1
  8300  007BE2  0E3B               	movlw	59
  8301  007BE4  0101               	movlb	1	; () banked
  8302  007BE6  6FC6               	movwf	_setup_minute& (0+255),b
  8303  007BE8  D042               	goto	l14429
  8304  007BEA                     l14399:
  8305                           
  8306                           ; BSR set to: 1
  8307                           ;Setup_Time.c: 130: else --setup_minute;
  8308  007BEA  0101               	movlb	1	; () banked
  8309  007BEC  07C6               	decf	_setup_minute& (0+255),f,b
  8310                           
  8311                           ; BSR set to: 1
  8312                           ;Setup_Time.c: 131: break;
  8313  007BEE  D03F               	goto	l14429
  8314  007BF0                     l14401:
  8315                           
  8316                           ; BSR set to: 1
  8317                           ;Setup_Time.c: 134: if (setup_second == 0) setup_second = 59;
  8318  007BF0  0101               	movlb	1	; () banked
  8319  007BF2  51C8               	movf	_setup_second& (0+255),w,b
  8320  007BF4  A4D8               	btfss	status,2,c
  8321  007BF6  D004               	goto	l14405
  8322                           
  8323                           ; BSR set to: 1
  8324  007BF8  0E3B               	movlw	59
  8325  007BFA  0101               	movlb	1	; () banked
  8326  007BFC  6FC8               	movwf	_setup_second& (0+255),b
  8327  007BFE  D037               	goto	l14429
  8328  007C00                     l14405:
  8329                           
  8330                           ; BSR set to: 1
  8331                           ;Setup_Time.c: 135: else --setup_second;
  8332  007C00  0101               	movlb	1	; () banked
  8333  007C02  07C8               	decf	_setup_second& (0+255),f,b
  8334                           
  8335                           ; BSR set to: 1
  8336                           ;Setup_Time.c: 136: break;
  8337  007C04  D034               	goto	l14429
  8338  007C06                     l14407:
  8339                           
  8340                           ; BSR set to: 1
  8341                           ;Setup_Time.c: 139: if (setup_month == 1) setup_month = 12;
  8342  007C06  0101               	movlb	1	; () banked
  8343  007C08  05C7               	decf	_setup_month& (0+255),w,b
  8344  007C0A  A4D8               	btfss	status,2,c
  8345  007C0C  D004               	goto	l14411
  8346                           
  8347                           ; BSR set to: 1
  8348  007C0E  0E0C               	movlw	12
  8349  007C10  0101               	movlb	1	; () banked
  8350  007C12  6FC7               	movwf	_setup_month& (0+255),b
  8351  007C14  D02C               	goto	l14429
  8352  007C16                     l14411:
  8353                           
  8354                           ; BSR set to: 1
  8355                           ;Setup_Time.c: 140: else --setup_month;
  8356  007C16  0101               	movlb	1	; () banked
  8357  007C18  07C7               	decf	_setup_month& (0+255),f,b
  8358                           
  8359                           ; BSR set to: 1
  8360                           ;Setup_Time.c: 141: break;
  8361  007C1A  D029               	goto	l14429
  8362  007C1C                     l14413:
  8363                           
  8364                           ; BSR set to: 1
  8365                           ;Setup_Time.c: 144: if (setup_day == 1) setup_day = 31;
  8366  007C1C  0101               	movlb	1	; () banked
  8367  007C1E  05C3               	decf	_setup_day& (0+255),w,b
  8368  007C20  A4D8               	btfss	status,2,c
  8369  007C22  D002               	goto	l14417
  8370                           
  8371                           ; BSR set to: 1
  8372  007C24  0E1F               	movlw	31
  8373  007C26  D008               	goto	L7
  8374  007C28                     l14417:
  8375                           
  8376                           ; BSR set to: 1
  8377                           ;Setup_Time.c: 145: else --setup_day;
  8378  007C28  0101               	movlb	1	; () banked
  8379  007C2A  07C3               	decf	_setup_day& (0+255),f,b
  8380                           
  8381                           ; BSR set to: 1
  8382                           ;Setup_Time.c: 146: break;
  8383  007C2C  D020               	goto	l14429
  8384  007C2E                     l14419:
  8385                           
  8386                           ; BSR set to: 1
  8387                           ;Setup_Time.c: 149: if (setup_year == 0) setup_day = 99;
  8388  007C2E  0101               	movlb	1	; () banked
  8389  007C30  51C9               	movf	_setup_year& (0+255),w,b
  8390  007C32  A4D8               	btfss	status,2,c
  8391  007C34  D004               	goto	l14423
  8392                           
  8393                           ; BSR set to: 1
  8394  007C36  0E63               	movlw	99
  8395  007C38                     L7:
  8396  007C38  0101               	movlb	1	; () banked
  8397  007C3A  6FC3               	movwf	_setup_day& (0+255),b
  8398  007C3C  D018               	goto	l14429
  8399  007C3E                     l14423:
  8400                           
  8401                           ; BSR set to: 1
  8402                           ;Setup_Time.c: 150: else --setup_year;
  8403  007C3E  0101               	movlb	1	; () banked
  8404  007C40  07C9               	decf	_setup_year& (0+255),f,b
  8405                           
  8406                           ; BSR set to: 1
  8407                           ;Setup_Time.c: 155: }
  8408                           
  8409                           ; BSR set to: 1
  8410                           ;Setup_Time.c: 154: break;
  8411                           
  8412                           ;Setup_Time.c: 153: default:
  8413                           
  8414                           ; BSR set to: 1
  8415                           ;Setup_Time.c: 151: break;
  8416  007C42  D015               	goto	l14429
  8417  007C44                     l14427:
  8418  007C44  0101               	movlb	1	; () banked
  8419  007C46  51BC               	movf	_Select_Field& (0+255),w,b
  8420                           
  8421                           ; Switch size 1, requested type "space"
  8422                           ; Number of cases is 6, Range of values is 0 to 5
  8423                           ; switch strategies available:
  8424                           ; Name         Instructions Cycles
  8425                           ; simple_byte           19    10 (average)
  8426                           ;	Chosen strategy is simple_byte
  8427  007C48  0A00               	xorlw	0	; case 0
  8428  007C4A  B4D8               	btfsc	status,2,c
  8429  007C4C  D7BB               	goto	l14389
  8430  007C4E  0A01               	xorlw	1	; case 1
  8431  007C50  B4D8               	btfsc	status,2,c
  8432  007C52  D7C3               	goto	l14395
  8433  007C54  0A03               	xorlw	3	; case 2
  8434  007C56  B4D8               	btfsc	status,2,c
  8435  007C58  D7CB               	goto	l14401
  8436  007C5A  0A01               	xorlw	1	; case 3
  8437  007C5C  B4D8               	btfsc	status,2,c
  8438  007C5E  D7D3               	goto	l14407
  8439  007C60  0A07               	xorlw	7	; case 4
  8440  007C62  B4D8               	btfsc	status,2,c
  8441  007C64  D7DB               	goto	l14413
  8442  007C66  0A01               	xorlw	1	; case 5
  8443  007C68  B4D8               	btfsc	status,2,c
  8444  007C6A  D7E1               	goto	l14419
  8445  007C6C  D000               	goto	l14429
  8446  007C6E                     l14429:
  8447                           
  8448                           ; BSR set to: 1
  8449                           ;Setup_Time.c: 156: Update_Setup_Time_Screen();
  8450  007C6E  ECE3  F029         	call	_Update_Setup_Time_Screen	;wreg free
  8451  007C72  0012               	return		;funcret
  8452  007C74                     __end_of_Decrease_Time:
  8453                           	opt stack 0
  8454                           tblptru	equ	0xFF8
  8455                           tblptrh	equ	0xFF7
  8456                           tblptrl	equ	0xFF6
  8457                           tablat	equ	0xFF5
  8458                           postinc0	equ	0xFEE
  8459                           wreg	equ	0xFE8
  8460                           postdec1	equ	0xFE5
  8461                           fsr1l	equ	0xFE1
  8462                           status	equ	0xFD8
  8463                           
  8464 ;; *************** function _Update_Setup_Time_Screen *****************
  8465 ;; Defined at:
  8466 ;;		line 208 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Time.c"
  8467 ;; Parameters:    Size  Location     Type
  8468 ;;		None
  8469 ;; Auto vars:     Size  Location     Type
  8470 ;;		None
  8471 ;; Return value:  Size  Location     Type
  8472 ;;		None               void
  8473 ;; Registers used:
  8474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8475 ;; Tracked objects:
  8476 ;;		On entry : 0/0
  8477 ;;		On exit  : 0/0
  8478 ;;		Unchanged: 0/0
  8479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8484 ;;Total ram usage:        0 bytes
  8485 ;; Hardware stack levels used:    1
  8486 ;; Hardware stack levels required when called:   13
  8487 ;; This function calls:
  8488 ;;		___awdiv
  8489 ;;		___awmod
  8490 ;;		_drawtext
  8491 ;; This function is called by:
  8492 ;;		_Do_Setup_Time
  8493 ;;		_Increase_Time
  8494 ;;		_Decrease_Time
  8495 ;; This function uses a non-reentrant model
  8496 ;;
  8497                           
  8498                           	psect	text33
  8499  0053C6                     __ptext33:
  8500                           	opt stack 0
  8501  0053C6                     _Update_Setup_Time_Screen:
  8502                           	opt stack 16
  8503                           
  8504                           ;Setup_Time.c: 210: setup_time[0] = (setup_hour/10) + '0';
  8505                           
  8506                           ;incstack = 0
  8507  0053C6  C1C5  F094         	movff	_setup_hour,___awdiv@dividend
  8508  0053CA  0100               	movlb	0	; () banked
  8509  0053CC  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  8510  0053CE  0E00               	movlw	0
  8511  0053D0  0100               	movlb	0	; () banked
  8512  0053D2  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  8513  0053D4  0E0A               	movlw	10
  8514  0053D6  6F96               	movwf	___awdiv@divisor& (0+255),b
  8515  0053D8  EC74  F03A         	call	___awdiv	;wreg free
  8516  0053DC  0100               	movlb	0	; () banked
  8517  0053DE  5194               	movf	?___awdiv& (0+255),w,b
  8518  0053E0  0F30               	addlw	48
  8519  0053E2  0101               	movlb	1	; () banked
  8520  0053E4  6F5B               	movwf	_setup_time& (0+255),b
  8521                           
  8522                           ;Setup_Time.c: 211: setup_time[1] = (setup_hour%10) + '0';
  8523  0053E6  C1C5  F0BA         	movff	_setup_hour,___awmod@dividend
  8524  0053EA  0100               	movlb	0	; () banked
  8525  0053EC  6BBB               	clrf	(___awmod@dividend+1)& (0+255),b
  8526  0053EE  0E00               	movlw	0
  8527  0053F0  0100               	movlb	0	; () banked
  8528  0053F2  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
  8529  0053F4  0E0A               	movlw	10
  8530  0053F6  6FBC               	movwf	___awmod@divisor& (0+255),b
  8531  0053F8  EC87  F03D         	call	___awmod	;wreg free
  8532  0053FC  0100               	movlb	0	; () banked
  8533  0053FE  51BA               	movf	?___awmod& (0+255),w,b
  8534  005400  0F30               	addlw	48
  8535  005402  0101               	movlb	1	; () banked
  8536  005404  6F5C               	movwf	(_setup_time+1)& (0+255),b
  8537                           
  8538                           ;Setup_Time.c: 213: setup_time[3] = (setup_minute/10) + '0';
  8539  005406  C1C6  F094         	movff	_setup_minute,___awdiv@dividend
  8540  00540A  0100               	movlb	0	; () banked
  8541  00540C  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  8542  00540E  0E00               	movlw	0
  8543  005410  0100               	movlb	0	; () banked
  8544  005412  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  8545  005414  0E0A               	movlw	10
  8546  005416  6F96               	movwf	___awdiv@divisor& (0+255),b
  8547  005418  EC74  F03A         	call	___awdiv	;wreg free
  8548  00541C  0100               	movlb	0	; () banked
  8549  00541E  5194               	movf	?___awdiv& (0+255),w,b
  8550  005420  0F30               	addlw	48
  8551  005422  0101               	movlb	1	; () banked
  8552  005424  6F5E               	movwf	(_setup_time+3)& (0+255),b
  8553                           
  8554                           ;Setup_Time.c: 214: setup_time[4] = (setup_minute%10) + '0';
  8555  005426  C1C6  F0BA         	movff	_setup_minute,___awmod@dividend
  8556  00542A  0100               	movlb	0	; () banked
  8557  00542C  6BBB               	clrf	(___awmod@dividend+1)& (0+255),b
  8558  00542E  0E00               	movlw	0
  8559  005430  0100               	movlb	0	; () banked
  8560  005432  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
  8561  005434  0E0A               	movlw	10
  8562  005436  6FBC               	movwf	___awmod@divisor& (0+255),b
  8563  005438  EC87  F03D         	call	___awmod	;wreg free
  8564  00543C  0100               	movlb	0	; () banked
  8565  00543E  51BA               	movf	?___awmod& (0+255),w,b
  8566  005440  0F30               	addlw	48
  8567  005442  0101               	movlb	1	; () banked
  8568  005444  6F5F               	movwf	(_setup_time+4)& (0+255),b
  8569                           
  8570                           ;Setup_Time.c: 216: setup_time[6] = (setup_second/10) + '0';
  8571  005446  C1C8  F094         	movff	_setup_second,___awdiv@dividend
  8572  00544A  0100               	movlb	0	; () banked
  8573  00544C  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  8574  00544E  0E00               	movlw	0
  8575  005450  0100               	movlb	0	; () banked
  8576  005452  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  8577  005454  0E0A               	movlw	10
  8578  005456  6F96               	movwf	___awdiv@divisor& (0+255),b
  8579  005458  EC74  F03A         	call	___awdiv	;wreg free
  8580  00545C  0100               	movlb	0	; () banked
  8581  00545E  5194               	movf	?___awdiv& (0+255),w,b
  8582  005460  0F30               	addlw	48
  8583  005462  0101               	movlb	1	; () banked
  8584  005464  6F61               	movwf	(_setup_time+6)& (0+255),b
  8585                           
  8586                           ;Setup_Time.c: 217: setup_time[7] = (setup_second%10) + '0';
  8587  005466  C1C8  F0BA         	movff	_setup_second,___awmod@dividend
  8588  00546A  0100               	movlb	0	; () banked
  8589  00546C  6BBB               	clrf	(___awmod@dividend+1)& (0+255),b
  8590  00546E  0E00               	movlw	0
  8591  005470  0100               	movlb	0	; () banked
  8592  005472  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
  8593  005474  0E0A               	movlw	10
  8594  005476  6FBC               	movwf	___awmod@divisor& (0+255),b
  8595  005478  EC87  F03D         	call	___awmod	;wreg free
  8596  00547C  0100               	movlb	0	; () banked
  8597  00547E  51BA               	movf	?___awmod& (0+255),w,b
  8598  005480  0F30               	addlw	48
  8599  005482  0101               	movlb	1	; () banked
  8600  005484  6F62               	movwf	(_setup_time+7)& (0+255),b
  8601                           
  8602                           ;Setup_Time.c: 219: setup_date[0] = (setup_month/10) + '0';
  8603  005486  C1C7  F094         	movff	_setup_month,___awdiv@dividend
  8604  00548A  0100               	movlb	0	; () banked
  8605  00548C  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  8606  00548E  0E00               	movlw	0
  8607  005490  0100               	movlb	0	; () banked
  8608  005492  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  8609  005494  0E0A               	movlw	10
  8610  005496  6F96               	movwf	___awdiv@divisor& (0+255),b
  8611  005498  EC74  F03A         	call	___awdiv	;wreg free
  8612  00549C  0100               	movlb	0	; () banked
  8613  00549E  5194               	movf	?___awdiv& (0+255),w,b
  8614  0054A0  0F30               	addlw	48
  8615  0054A2  0101               	movlb	1	; () banked
  8616  0054A4  6F52               	movwf	_setup_date& (0+255),b
  8617                           
  8618                           ;Setup_Time.c: 220: setup_date[1] = (setup_month%10) + '0';
  8619  0054A6  C1C7  F0BA         	movff	_setup_month,___awmod@dividend
  8620  0054AA  0100               	movlb	0	; () banked
  8621  0054AC  6BBB               	clrf	(___awmod@dividend+1)& (0+255),b
  8622  0054AE  0E00               	movlw	0
  8623  0054B0  0100               	movlb	0	; () banked
  8624  0054B2  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
  8625  0054B4  0E0A               	movlw	10
  8626  0054B6  6FBC               	movwf	___awmod@divisor& (0+255),b
  8627  0054B8  EC87  F03D         	call	___awmod	;wreg free
  8628  0054BC  0100               	movlb	0	; () banked
  8629  0054BE  51BA               	movf	?___awmod& (0+255),w,b
  8630  0054C0  0F30               	addlw	48
  8631  0054C2  0101               	movlb	1	; () banked
  8632  0054C4  6F53               	movwf	(_setup_date+1)& (0+255),b
  8633                           
  8634                           ;Setup_Time.c: 222: setup_date[3] = (setup_day/10) + '0';
  8635  0054C6  C1C3  F094         	movff	_setup_day,___awdiv@dividend
  8636  0054CA  0100               	movlb	0	; () banked
  8637  0054CC  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  8638  0054CE  0E00               	movlw	0
  8639  0054D0  0100               	movlb	0	; () banked
  8640  0054D2  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  8641  0054D4  0E0A               	movlw	10
  8642  0054D6  6F96               	movwf	___awdiv@divisor& (0+255),b
  8643  0054D8  EC74  F03A         	call	___awdiv	;wreg free
  8644  0054DC  0100               	movlb	0	; () banked
  8645  0054DE  5194               	movf	?___awdiv& (0+255),w,b
  8646  0054E0  0F30               	addlw	48
  8647  0054E2  0101               	movlb	1	; () banked
  8648  0054E4  6F55               	movwf	(_setup_date+3)& (0+255),b
  8649                           
  8650                           ;Setup_Time.c: 223: setup_date[4] = (setup_day%10) + '0';
  8651  0054E6  C1C3  F0BA         	movff	_setup_day,___awmod@dividend
  8652  0054EA  0100               	movlb	0	; () banked
  8653  0054EC  6BBB               	clrf	(___awmod@dividend+1)& (0+255),b
  8654  0054EE  0E00               	movlw	0
  8655  0054F0  0100               	movlb	0	; () banked
  8656  0054F2  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
  8657  0054F4  0E0A               	movlw	10
  8658  0054F6  6FBC               	movwf	___awmod@divisor& (0+255),b
  8659  0054F8  EC87  F03D         	call	___awmod	;wreg free
  8660  0054FC  0100               	movlb	0	; () banked
  8661  0054FE  51BA               	movf	?___awmod& (0+255),w,b
  8662  005500  0F30               	addlw	48
  8663  005502  0101               	movlb	1	; () banked
  8664  005504  6F56               	movwf	(_setup_date+4)& (0+255),b
  8665                           
  8666                           ;Setup_Time.c: 225: setup_date[6] = (setup_year/10) + '0';
  8667  005506  C1C9  F094         	movff	_setup_year,___awdiv@dividend
  8668  00550A  0100               	movlb	0	; () banked
  8669  00550C  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  8670  00550E  0E00               	movlw	0
  8671  005510  0100               	movlb	0	; () banked
  8672  005512  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  8673  005514  0E0A               	movlw	10
  8674  005516  6F96               	movwf	___awdiv@divisor& (0+255),b
  8675  005518  EC74  F03A         	call	___awdiv	;wreg free
  8676  00551C  0100               	movlb	0	; () banked
  8677  00551E  5194               	movf	?___awdiv& (0+255),w,b
  8678  005520  0F30               	addlw	48
  8679  005522  0101               	movlb	1	; () banked
  8680  005524  6F58               	movwf	(_setup_date+6)& (0+255),b
  8681                           
  8682                           ;Setup_Time.c: 226: setup_date[7] = (setup_year%10) + '0';
  8683  005526  C1C9  F0BA         	movff	_setup_year,___awmod@dividend
  8684  00552A  0100               	movlb	0	; () banked
  8685  00552C  6BBB               	clrf	(___awmod@dividend+1)& (0+255),b
  8686  00552E  0E00               	movlw	0
  8687  005530  0100               	movlb	0	; () banked
  8688  005532  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
  8689  005534  0E0A               	movlw	10
  8690  005536  6FBC               	movwf	___awmod@divisor& (0+255),b
  8691  005538  EC87  F03D         	call	___awmod	;wreg free
  8692  00553C  0100               	movlb	0	; () banked
  8693  00553E  51BA               	movf	?___awmod& (0+255),w,b
  8694  005540  0F30               	addlw	48
  8695  005542  0101               	movlb	1	; () banked
  8696  005544  6F59               	movwf	(_setup_date+7)& (0+255),b
  8697                           
  8698                           ; BSR set to: 1
  8699                           ;Setup_Time.c: 228: drawtext(15, 52, setup_time, 0x07FF, 0x0000, 2);
  8700  005546  0E34               	movlw	52
  8701  005548  0100               	movlb	0	; () banked
  8702  00554A  6FB6               	movwf	drawtext@y& (0+255),b
  8703  00554C  0E5B               	movlw	low _setup_time
  8704  00554E  0100               	movlb	0	; () banked
  8705  005550  6FB7               	movwf	drawtext@_text& (0+255),b
  8706  005552  0E01               	movlw	high _setup_time
  8707  005554  0100               	movlb	0	; () banked
  8708  005556  6FB8               	movwf	(drawtext@_text+1)& (0+255),b
  8709  005558  0E07               	movlw	7
  8710  00555A  0100               	movlb	0	; () banked
  8711  00555C  6FBA               	movwf	(drawtext@color+1)& (0+255),b
  8712  00555E  69B9               	setf	drawtext@color& (0+255),b
  8713  005560  0E00               	movlw	0
  8714  005562  0100               	movlb	0	; () banked
  8715  005564  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
  8716  005566  0E00               	movlw	0
  8717  005568  6FBB               	movwf	drawtext@bg& (0+255),b
  8718  00556A  0E02               	movlw	2
  8719  00556C  0100               	movlb	0	; () banked
  8720  00556E  6FBD               	movwf	drawtext@size& (0+255),b
  8721  005570  0E0F               	movlw	15
  8722  005572  EC0B  F032         	call	_drawtext
  8723                           
  8724                           ;Setup_Time.c: 229: drawtext(15, 82, setup_date, 0x07E0, 0x0000, 2);
  8725  005576  0E52               	movlw	82
  8726  005578  0100               	movlb	0	; () banked
  8727  00557A  6FB6               	movwf	drawtext@y& (0+255),b
  8728  00557C  0E52               	movlw	low _setup_date
  8729  00557E  0100               	movlb	0	; () banked
  8730  005580  6FB7               	movwf	drawtext@_text& (0+255),b
  8731  005582  0E01               	movlw	high _setup_date
  8732  005584  0100               	movlb	0	; () banked
  8733  005586  6FB8               	movwf	(drawtext@_text+1)& (0+255),b
  8734  005588  0E07               	movlw	7
  8735  00558A  0100               	movlb	0	; () banked
  8736  00558C  6FBA               	movwf	(drawtext@color+1)& (0+255),b
  8737  00558E  0EE0               	movlw	224
  8738  005590  6FB9               	movwf	drawtext@color& (0+255),b
  8739  005592  0E00               	movlw	0
  8740  005594  0100               	movlb	0	; () banked
  8741  005596  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
  8742  005598  0E00               	movlw	0
  8743  00559A  6FBB               	movwf	drawtext@bg& (0+255),b
  8744  00559C  0E02               	movlw	2
  8745  00559E  0100               	movlb	0	; () banked
  8746  0055A0  6FBD               	movwf	drawtext@size& (0+255),b
  8747  0055A2  0E0F               	movlw	15
  8748  0055A4  EC0B  F032         	call	_drawtext
  8749  0055A8  0012               	return		;funcret
  8750  0055AA                     __end_of_Update_Setup_Time_Screen:
  8751                           	opt stack 0
  8752                           tblptru	equ	0xFF8
  8753                           tblptrh	equ	0xFF7
  8754                           tblptrl	equ	0xFF6
  8755                           tablat	equ	0xFF5
  8756                           postinc0	equ	0xFEE
  8757                           wreg	equ	0xFE8
  8758                           postdec1	equ	0xFE5
  8759                           fsr1l	equ	0xFE1
  8760                           status	equ	0xFD8
  8761                           
  8762 ;; *************** function _Do_Setup_Alarm_Time *****************
  8763 ;; Defined at:
  8764 ;;		line 24 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Alarm_Time.c"
  8765 ;; Parameters:    Size  Location     Type
  8766 ;;		None
  8767 ;; Auto vars:     Size  Location     Type
  8768 ;;		None
  8769 ;; Return value:  Size  Location     Type
  8770 ;;                  2  383[None  ] int 
  8771 ;; Registers used:
  8772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8773 ;; Tracked objects:
  8774 ;;		On entry : 0/0
  8775 ;;		On exit  : 0/0
  8776 ;;		Unchanged: 0/0
  8777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8782 ;;Total ram usage:        0 bytes
  8783 ;; Hardware stack levels used:    1
  8784 ;; Hardware stack levels required when called:   15
  8785 ;; This function calls:
  8786 ;;		_DS3231_Read_Alarm_Time
  8787 ;;		_Decrease_Alarm_Time
  8788 ;;		_Do_Beep_Bad
  8789 ;;		_Do_Beep_Good
  8790 ;;		_Do_Save_New_Alarm_Time
  8791 ;;		_Exit_Setup_Alarm_Time
  8792 ;;		_Go_Next_Alarm_Field
  8793 ;;		_Go_Prev_Alarm_Field
  8794 ;;		_Increase_Alarm_Time
  8795 ;;		_Initialize_Setup_Alarm_Time_Screen
  8796 ;;		_Update_Setup_Alarm_Time_Screen
  8797 ;;		_bcd_2_dec
  8798 ;;		_check_for_button_input
  8799 ;; This function is called by:
  8800 ;;		_main
  8801 ;; This function uses a non-reentrant model
  8802 ;;
  8803                           
  8804                           	psect	text34
  8805  00740A                     __ptext34:
  8806                           	opt stack 0
  8807  00740A                     _Do_Setup_Alarm_Time:
  8808                           	opt stack 15
  8809                           
  8810                           ;Setup_Alarm_Time.c: 26: Select_Alarm_Field = 0;
  8811                           
  8812                           ;incstack = 0
  8813  00740A  0E00               	movlw	0
  8814  00740C  0101               	movlb	1	; () banked
  8815  00740E  6FBA               	movwf	_Select_Alarm_Field& (0+255),b
  8816                           
  8817                           ;Setup_Alarm_Time.c: 27: In_Alarm_Time_Setup = 1;
  8818  007410  0E01               	movlw	1
  8819  007412  0101               	movlb	1	; () banked
  8820  007414  6FB5               	movwf	_In_Alarm_Time_Setup& (0+255),b
  8821                           
  8822                           ; BSR set to: 1
  8823                           ;Setup_Alarm_Time.c: 28: DS3231_Read_Alarm_Time();
  8824  007416  EC50  F044         	call	_DS3231_Read_Alarm_Time	;wreg free
  8825                           
  8826                           ;Setup_Alarm_Time.c: 29: alarm_second = bcd_2_dec(alarm_second);
  8827  00741A  0100               	movlb	0	; () banked
  8828  00741C  51E9               	movf	_alarm_second& (0+255),w,b
  8829  00741E  EC61  F046         	call	_bcd_2_dec
  8830  007422  0100               	movlb	0	; () banked
  8831  007424  6FE9               	movwf	_alarm_second& (0+255),b
  8832                           
  8833                           ; BSR set to: 0
  8834                           ;Setup_Alarm_Time.c: 30: alarm_minute = bcd_2_dec(alarm_minute);
  8835  007426  0100               	movlb	0	; () banked
  8836  007428  51E8               	movf	_alarm_minute& (0+255),w,b
  8837  00742A  EC61  F046         	call	_bcd_2_dec
  8838  00742E  0100               	movlb	0	; () banked
  8839  007430  6FE8               	movwf	_alarm_minute& (0+255),b
  8840                           
  8841                           ; BSR set to: 0
  8842                           ;Setup_Alarm_Time.c: 31: alarm_hour = bcd_2_dec(alarm_hour);
  8843  007432  0100               	movlb	0	; () banked
  8844  007434  51E7               	movf	_alarm_hour& (0+255),w,b
  8845  007436  EC61  F046         	call	_bcd_2_dec
  8846  00743A  0100               	movlb	0	; () banked
  8847  00743C  6FE7               	movwf	_alarm_hour& (0+255),b
  8848                           
  8849                           ; BSR set to: 0
  8850                           ;Setup_Alarm_Time.c: 32: setup_alarm_second = alarm_second;
  8851  00743E  C0E9  F1C2         	movff	_alarm_second,_setup_alarm_second
  8852                           
  8853                           ; BSR set to: 0
  8854                           ;Setup_Alarm_Time.c: 33: setup_alarm_minute = alarm_minute;
  8855  007442  C0E8  F1C1         	movff	_alarm_minute,_setup_alarm_minute
  8856                           
  8857                           ; BSR set to: 0
  8858                           ;Setup_Alarm_Time.c: 34: setup_alarm_hour = alarm_hour;
  8859  007446  C0E7  F1C0         	movff	_alarm_hour,_setup_alarm_hour
  8860                           
  8861                           ; BSR set to: 0
  8862                           ;Setup_Alarm_Time.c: 35: Initialize_Setup_Alarm_Time_Screen();
  8863  00744A  ECD4  F035         	call	_Initialize_Setup_Alarm_Time_Screen	;wreg free
  8864                           
  8865                           ;Setup_Alarm_Time.c: 36: Update_Setup_Alarm_Time_Screen();
  8866  00744E  EC30  F033         	call	_Update_Setup_Alarm_Time_Screen	;wreg free
  8867                           
  8868                           ;Setup_Alarm_Time.c: 37: while (In_Alarm_Time_Setup == 1)
  8869  007452  D045               	goto	l15439
  8870  007454                     l15403:
  8871                           
  8872                           ;Setup_Alarm_Time.c: 38: {
  8873                           ;Setup_Alarm_Time.c: 39: if (check_for_button_input() == 1)
  8874  007454  EC7D  F03F         	call	_check_for_button_input	;wreg free
  8875  007458  06E8               	decf	wreg,f,c
  8876  00745A  A4D8               	btfss	status,2,c
  8877  00745C  D040               	goto	l15439
  8878                           
  8879                           ;Setup_Alarm_Time.c: 40: {
  8880                           ;Setup_Alarm_Time.c: 41: if (found >= 3 && found <= 8)
  8881  00745E  0E02               	movlw	2
  8882  007460  0100               	movlb	0	; () banked
  8883  007462  65EC               	cpfsgt	_found& (0+255),b
  8884  007464  D039               	goto	l15437
  8885                           
  8886                           ; BSR set to: 0
  8887  007466  0E09               	movlw	9
  8888  007468  0100               	movlb	0	; () banked
  8889  00746A  61EC               	cpfslt	_found& (0+255),b
  8890  00746C  D035               	goto	l15437
  8891                           
  8892                           ; BSR set to: 0
  8893                           ;Setup_Alarm_Time.c: 42: {
  8894                           ;Setup_Alarm_Time.c: 43: Do_Beep_Good();
  8895  00746E  EC57  F048         	call	_Do_Beep_Good	;wreg free
  8896                           
  8897                           ;Setup_Alarm_Time.c: 44: if (found == 3) Go_Prev_Alarm_Field();
  8898  007472  0E03               	movlw	3
  8899  007474  0100               	movlb	0	; () banked
  8900  007476  19EC               	xorwf	_found& (0+255),w,b
  8901  007478  A4D8               	btfss	status,2,c
  8902  00747A  D003               	goto	l15415
  8903                           
  8904                           ; BSR set to: 0
  8905  00747C  ECFD  F047         	call	_Go_Prev_Alarm_Field	;wreg free
  8906  007480  D028               	goto	l15435
  8907  007482                     l15415:
  8908                           
  8909                           ;Setup_Alarm_Time.c: 45: else if (found == 4) Go_Next_Alarm_Field();
  8910  007482  0E04               	movlw	4
  8911  007484  0100               	movlb	0	; () banked
  8912  007486  19EC               	xorwf	_found& (0+255),w,b
  8913  007488  A4D8               	btfss	status,2,c
  8914  00748A  D003               	goto	l15419
  8915                           
  8916                           ; BSR set to: 0
  8917  00748C  EC0D  F048         	call	_Go_Next_Alarm_Field	;wreg free
  8918  007490  D020               	goto	l15435
  8919  007492                     l15419:
  8920                           
  8921                           ;Setup_Alarm_Time.c: 46: else if (found == 5) Do_Save_New_Alarm_Time();
  8922  007492  0E05               	movlw	5
  8923  007494  0100               	movlb	0	; () banked
  8924  007496  19EC               	xorwf	_found& (0+255),w,b
  8925  007498  A4D8               	btfss	status,2,c
  8926  00749A  D003               	goto	l15423
  8927                           
  8928                           ; BSR set to: 0
  8929  00749C  EC71  F048         	call	_Do_Save_New_Alarm_Time	;wreg free
  8930  0074A0  D018               	goto	l15435
  8931  0074A2                     l15423:
  8932                           
  8933                           ;Setup_Alarm_Time.c: 47: else if (found == 7) Increase_Alarm_Time();
  8934  0074A2  0E07               	movlw	7
  8935  0074A4  0100               	movlb	0	; () banked
  8936  0074A6  19EC               	xorwf	_found& (0+255),w,b
  8937  0074A8  A4D8               	btfss	status,2,c
  8938  0074AA  D003               	goto	l15427
  8939                           
  8940                           ; BSR set to: 0
  8941  0074AC  EC5E  F043         	call	_Increase_Alarm_Time	;wreg free
  8942  0074B0  D010               	goto	l15435
  8943  0074B2                     l15427:
  8944                           
  8945                           ;Setup_Alarm_Time.c: 48: else if (found == 6) Decrease_Alarm_Time();
  8946  0074B2  0E06               	movlw	6
  8947  0074B4  0100               	movlb	0	; () banked
  8948  0074B6  19EC               	xorwf	_found& (0+255),w,b
  8949  0074B8  A4D8               	btfss	status,2,c
  8950  0074BA  D003               	goto	l15431
  8951                           
  8952                           ; BSR set to: 0
  8953  0074BC  EC8F  F043         	call	_Decrease_Alarm_Time	;wreg free
  8954  0074C0  D008               	goto	l15435
  8955  0074C2                     l15431:
  8956                           
  8957                           ;Setup_Alarm_Time.c: 49: else if (found == 8) Exit_Setup_Alarm_Time();
  8958  0074C2  0E08               	movlw	8
  8959  0074C4  0100               	movlb	0	; () banked
  8960  0074C6  19EC               	xorwf	_found& (0+255),w,b
  8961  0074C8  A4D8               	btfss	status,2,c
  8962  0074CA  D003               	goto	l15435
  8963                           
  8964                           ; BSR set to: 0
  8965  0074CC  EC32  F049         	call	_Exit_Setup_Alarm_Time	;wreg free
  8966  0074D0  D000               	goto	l15435
  8967  0074D2                     l15435:
  8968                           
  8969                           ;Setup_Alarm_Time.c: 50: found = 0xff;
  8970  0074D2  0100               	movlb	0	; () banked
  8971  0074D4  69EC               	setf	_found& (0+255),b
  8972                           
  8973                           ;Setup_Alarm_Time.c: 51: }
  8974  0074D6  D003               	goto	l15439
  8975  0074D8                     l15437:
  8976                           
  8977                           ; BSR set to: 0
  8978                           ;Setup_Alarm_Time.c: 52: else
  8979                           ;Setup_Alarm_Time.c: 53: {
  8980                           ;Setup_Alarm_Time.c: 54: Do_Beep_Bad();
  8981  0074D8  EC64  F048         	call	_Do_Beep_Bad	;wreg free
  8982  0074DC  D000               	goto	l15439
  8983  0074DE                     l15439:
  8984  0074DE  0101               	movlb	1	; () banked
  8985  0074E0  05B5               	decf	_In_Alarm_Time_Setup& (0+255),w,b
  8986  0074E2  B4D8               	btfsc	status,2,c
  8987  0074E4  D7B7               	goto	l15403
  8988                           
  8989                           ; BSR set to: 1
  8990                           
  8991                           ; BSR set to: 1
  8992  0074E6  0012               	return		;funcret
  8993  0074E8                     __end_of_Do_Setup_Alarm_Time:
  8994                           	opt stack 0
  8995                           tblptru	equ	0xFF8
  8996                           tblptrh	equ	0xFF7
  8997                           tblptrl	equ	0xFF6
  8998                           tablat	equ	0xFF5
  8999                           postinc0	equ	0xFEE
  9000                           wreg	equ	0xFE8
  9001                           postdec1	equ	0xFE5
  9002                           fsr1l	equ	0xFE1
  9003                           status	equ	0xFD8
  9004                           
  9005 ;; *************** function _check_for_button_input *****************
  9006 ;; Defined at:
  9007 ;;		line 14 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/utils.c"
  9008 ;; Parameters:    Size  Location     Type
  9009 ;;		None
  9010 ;; Auto vars:     Size  Location     Type
  9011 ;;  j               2   96[BANK0 ] int 
  9012 ;; Return value:  Size  Location     Type
  9013 ;;                  1    wreg      unsigned char 
  9014 ;; Registers used:
  9015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9016 ;; Tracked objects:
  9017 ;;		On entry : 0/0
  9018 ;;		On exit  : 0/0
  9019 ;;		Unchanged: 0/0
  9020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9022 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9023 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9024 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9025 ;;Total ram usage:        3 bytes
  9026 ;; Hardware stack levels used:    1
  9027 ;; Hardware stack levels required when called:   10
  9028 ;; This function calls:
  9029 ;;		_printf
  9030 ;; This function is called by:
  9031 ;;		_main
  9032 ;;		_Do_Setup_Alarm_Time
  9033 ;;		_Setup_Temp_Fan
  9034 ;;		_Do_Setup_Time
  9035 ;; This function uses a non-reentrant model
  9036 ;;
  9037                           
  9038                           	psect	text35
  9039  007EFA                     __ptext35:
  9040                           	opt stack 0
  9041  007EFA                     _check_for_button_input:
  9042                           	opt stack 20
  9043                           
  9044                           ;utils.c: 16: if (nec_ok == 1)
  9045                           
  9046                           ; BSR set to: 1
  9047                           ;incstack = 0
  9048  007EFA  0101               	movlb	1	; () banked
  9049  007EFC  05AD               	decf	_nec_ok& (0+255),w,b
  9050  007EFE  0101               	movlb	1	; () banked
  9051  007F00  11AE               	iorwf	(_nec_ok+1)& (0+255),w,b
  9052  007F02  A4D8               	btfss	status,2,c
  9053  007F04  D045               	goto	l1321
  9054                           
  9055                           ; BSR set to: 1
  9056                           ;utils.c: 17: {
  9057                           ;utils.c: 18: nec_ok = 0;
  9058  007F06  0E00               	movlw	0
  9059  007F08  0101               	movlb	1	; () banked
  9060  007F0A  6FAE               	movwf	(_nec_ok+1)& (0+255),b
  9061  007F0C  0E00               	movlw	0
  9062  007F0E  6FAD               	movwf	_nec_ok& (0+255),b
  9063                           
  9064                           ; BSR set to: 1
  9065                           ;utils.c: 22: INTCONbits.INT0IE = 1;
  9066  007F10  88F2               	bsf	intcon,4,c	;volatile
  9067                           
  9068                           ; BSR set to: 1
  9069                           ;utils.c: 23: INTCON2bits.INTEDG0 = 0;
  9070  007F12  9CF1               	bcf	intcon2,6,c	;volatile
  9071                           
  9072                           ; BSR set to: 1
  9073                           ;utils.c: 25: found = 0xff;
  9074  007F14  0100               	movlb	0	; () banked
  9075  007F16  69EC               	setf	_found& (0+255),b
  9076                           
  9077                           ;utils.c: 26: for (int j=0; j< 21; j++)
  9078  007F18  0E00               	movlw	0
  9079  007F1A  0100               	movlb	0	; () banked
  9080  007F1C  6FE1               	movwf	(check_for_button_input@j+1)& (0+255),b
  9081  007F1E  0E00               	movlw	0
  9082  007F20  6FE0               	movwf	check_for_button_input@j& (0+255),b
  9083  007F22                     l14199:
  9084                           
  9085                           ; BSR set to: 0
  9086  007F22  0100               	movlb	0	; () banked
  9087  007F24  BFE1               	btfsc	(check_for_button_input@j+1)& (0+255),7,b
  9088  007F26  D00A               	goto	l14203
  9089  007F28  0100               	movlb	0	; () banked
  9090  007F2A  51E1               	movf	(check_for_button_input@j+1)& (0+255),w,b
  9091  007F2C  E121               	bnz	l14213
  9092  007F2E  0E15               	movlw	21
  9093  007F30  0100               	movlb	0	; () banked
  9094  007F32  5DE0               	subwf	check_for_button_input@j& (0+255),w,b
  9095  007F34  B0D8               	btfsc	status,0,c
  9096  007F36  D01C               	goto	l14213
  9097  007F38  D001               	goto	l14203
  9098                           
  9099                           ; BSR set to: 0
  9100  007F3A  D01A               	goto	l14213
  9101  007F3C                     l14203:
  9102                           
  9103                           ; BSR set to: 0
  9104                           ;utils.c: 27: {
  9105                           ;utils.c: 28: if (Nec_code1 == array1[j])
  9106  007F3C  0E1F               	movlw	low _array1
  9107  007F3E  0100               	movlb	0	; () banked
  9108  007F40  25E0               	addwf	check_for_button_input@j& (0+255),w,b
  9109  007F42  6ED9               	movwf	fsr2l,c
  9110  007F44  0E01               	movlw	high _array1
  9111  007F46  0100               	movlb	0	; () banked
  9112  007F48  21E1               	addwfc	(check_for_button_input@j+1)& (0+255),w,b
  9113  007F4A  6EDA               	movwf	fsr2h,c
  9114  007F4C  0101               	movlb	1	; () banked
  9115  007F4E  51B8               	movf	_Nec_code1& (0+255),w,b
  9116  007F50  18DE               	xorwf	postinc2,w,c
  9117  007F52  A4D8               	btfss	status,2,c
  9118  007F54  D008               	goto	l14209
  9119                           
  9120                           ; BSR set to: 1
  9121                           ;utils.c: 29: {
  9122                           ;utils.c: 30: found = j;
  9123  007F56  C0E0  F0EC         	movff	check_for_button_input@j,_found
  9124                           
  9125                           ; BSR set to: 1
  9126                           ;utils.c: 31: j = 21;
  9127  007F5A  0E00               	movlw	0
  9128  007F5C  0100               	movlb	0	; () banked
  9129  007F5E  6FE1               	movwf	(check_for_button_input@j+1)& (0+255),b
  9130  007F60  0E15               	movlw	21
  9131  007F62  6FE0               	movwf	check_for_button_input@j& (0+255),b
  9132  007F64  D000               	goto	l14209
  9133  007F66                     l14209:
  9134  007F66  0100               	movlb	0	; () banked
  9135  007F68  4BE0               	infsnz	check_for_button_input@j& (0+255),f,b
  9136  007F6A  2BE1               	incf	(check_for_button_input@j+1)& (0+255),f,b
  9137  007F6C  D7DA               	goto	l14199
  9138                           
  9139                           ; BSR set to: 0
  9140  007F6E  D000               	goto	l14213
  9141  007F70                     l14213:
  9142                           
  9143                           ; BSR set to: 0
  9144                           ;utils.c: 32: }
  9145                           ;utils.c: 33: }
  9146                           ;utils.c: 35: if (found == 0xff)
  9147  007F70  0100               	movlb	0	; () banked
  9148  007F72  29EC               	incf	_found& (0+255),w,b
  9149  007F74  A4D8               	btfss	status,2,c
  9150  007F76  D00A               	goto	l14223
  9151                           
  9152                           ; BSR set to: 0
  9153                           ;utils.c: 36: {
  9154                           ;utils.c: 37: printf ("Cannot find button \r\n");
  9155  007F78  0EC2               	movlw	low STR_36
  9156  007F7A  0101               	movlb	1	; () banked
  9157  007F7C  6FCA               	movwf	printf@f& (0+255),b
  9158  007F7E  0EFE               	movlw	high STR_36
  9159  007F80  0101               	movlb	1	; () banked
  9160  007F82  6FCB               	movwf	(printf@f+1)& (0+255),b
  9161  007F84  EC0E  F000         	call	_printf	;wreg free
  9162                           
  9163                           ;utils.c: 38: return (0);
  9164  007F88  0E00               	movlw	0
  9165                           
  9166                           ;utils.c: 39: }
  9167  007F8A  D002               	goto	l1321
  9168  007F8C                     l14223:
  9169                           
  9170                           ;utils.c: 40: else
  9171                           ;utils.c: 41: {
  9172                           ;utils.c: 42: return (1);
  9173  007F8C  0E01               	movlw	1
  9174  007F8E  D000               	goto	l1321
  9175  007F90                     l1321:
  9176  007F90  0012               	return		;funcret
  9177  007F92                     __end_of_check_for_button_input:
  9178                           	opt stack 0
  9179                           tblptru	equ	0xFF8
  9180                           tblptrh	equ	0xFF7
  9181                           tblptrl	equ	0xFF6
  9182                           tablat	equ	0xFF5
  9183                           intcon	equ	0xFF2
  9184                           intcon2	equ	0xFF1
  9185                           postinc0	equ	0xFEE
  9186                           wreg	equ	0xFE8
  9187                           postdec1	equ	0xFE5
  9188                           fsr1l	equ	0xFE1
  9189                           postinc2	equ	0xFDE
  9190                           fsr2h	equ	0xFDA
  9191                           fsr2l	equ	0xFD9
  9192                           status	equ	0xFD8
  9193                           
  9194 ;; *************** function _bcd_2_dec *****************
  9195 ;; Defined at:
  9196 ;;		line 47 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/utils.c"
  9197 ;; Parameters:    Size  Location     Type
  9198 ;;  bcd             1    wreg     unsigned char 
  9199 ;; Auto vars:     Size  Location     Type
  9200 ;;  bcd             1   18[BANK0 ] unsigned char 
  9201 ;;  dec             2   16[BANK0 ] int 
  9202 ;; Return value:  Size  Location     Type
  9203 ;;                  1    wreg      unsigned char 
  9204 ;; Registers used:
  9205 ;;		wreg, status,2, status,0, prodl, prodh
  9206 ;; Tracked objects:
  9207 ;;		On entry : 0/0
  9208 ;;		On exit  : 0/0
  9209 ;;		Unchanged: 0/0
  9210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9212 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9213 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9214 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9215 ;;Total ram usage:        5 bytes
  9216 ;; Hardware stack levels used:    1
  9217 ;; Hardware stack levels required when called:    6
  9218 ;; This function calls:
  9219 ;;		Nothing
  9220 ;; This function is called by:
  9221 ;;		_Do_Setup_Alarm_Time
  9222 ;;		_Do_Setup_Time
  9223 ;; This function uses a non-reentrant model
  9224 ;;
  9225                           
  9226                           	psect	text36
  9227  008CC2                     __ptext36:
  9228                           	opt stack 0
  9229  008CC2                     _bcd_2_dec:
  9230                           	opt stack 23
  9231                           
  9232                           ;incstack = 0
  9233                           ;bcd_2_dec@bcd stored from wreg
  9234  008CC2  0100               	movlb	0	; () banked
  9235  008CC4  6F92               	movwf	bcd_2_dec@bcd& (0+255),b
  9236                           
  9237                           ; BSR set to: 0
  9238                           ;utils.c: 49: int dec;
  9239                           ;utils.c: 50: dec = ((bcd>> 4) * 10) + (bcd & 0x0f);
  9240  008CC6  C092  F08E         	movff	bcd_2_dec@bcd,??_bcd_2_dec
  9241  008CCA  0E0F               	movlw	15
  9242  008CCC  0100               	movlb	0	; () banked
  9243  008CCE  178E               	andwf	??_bcd_2_dec& (0+255),f,b
  9244  008CD0  C092  F08F         	movff	bcd_2_dec@bcd,??_bcd_2_dec+1
  9245  008CD4  0100               	movlb	0	; () banked
  9246  008CD6  3B8F               	swapf	(??_bcd_2_dec+1)& (0+255),f,b
  9247  008CD8  0E0F               	movlw	15
  9248  008CDA  178F               	andwf	(??_bcd_2_dec+1)& (0+255),f,b
  9249  008CDC  0100               	movlb	0	; () banked
  9250  008CDE  518F               	movf	(??_bcd_2_dec+1)& (0+255),w,b
  9251  008CE0  0D0A               	mullw	10
  9252  008CE2  0100               	movlb	0	; () banked
  9253  008CE4  518E               	movf	??_bcd_2_dec& (0+255),w,b
  9254  008CE6  24F3               	addwf	prodl,w,c
  9255  008CE8  0100               	movlb	0	; () banked
  9256  008CEA  6F90               	movwf	bcd_2_dec@dec& (0+255),b
  9257  008CEC  0100               	movlb	0	; () banked
  9258  008CEE  0E00               	movlw	0
  9259  008CF0  20F4               	addwfc	prodh,w,c
  9260  008CF2  0100               	movlb	0	; () banked
  9261  008CF4  6F91               	movwf	(bcd_2_dec@dec+1)& (0+255),b
  9262                           
  9263                           ; BSR set to: 0
  9264                           ;utils.c: 51: return dec;
  9265  008CF6  0100               	movlb	0	; () banked
  9266  008CF8  5190               	movf	bcd_2_dec@dec& (0+255),w,b
  9267  008CFA  D000               	goto	l1325
  9268  008CFC                     l1325:
  9269                           
  9270                           ; BSR set to: 0
  9271  008CFC  0012               	return		;funcret
  9272  008CFE                     __end_of_bcd_2_dec:
  9273                           	opt stack 0
  9274                           tblptru	equ	0xFF8
  9275                           tblptrh	equ	0xFF7
  9276                           tblptrl	equ	0xFF6
  9277                           tablat	equ	0xFF5
  9278                           prodh	equ	0xFF4
  9279                           prodl	equ	0xFF3
  9280                           intcon	equ	0xFF2
  9281                           intcon2	equ	0xFF1
  9282                           postinc0	equ	0xFEE
  9283                           wreg	equ	0xFE8
  9284                           postdec1	equ	0xFE5
  9285                           fsr1l	equ	0xFE1
  9286                           postinc2	equ	0xFDE
  9287                           fsr2h	equ	0xFDA
  9288                           fsr2l	equ	0xFD9
  9289                           status	equ	0xFD8
  9290                           
  9291 ;; *************** function _Initialize_Setup_Alarm_Time_Screen *****************
  9292 ;; Defined at:
  9293 ;;		line 144 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Alarm_Time.c"
  9294 ;; Parameters:    Size  Location     Type
  9295 ;;		None
  9296 ;; Auto vars:     Size  Location     Type
  9297 ;;		None
  9298 ;; Return value:  Size  Location     Type
  9299 ;;		None               void
  9300 ;; Registers used:
  9301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9302 ;; Tracked objects:
  9303 ;;		On entry : 0/0
  9304 ;;		On exit  : 0/0
  9305 ;;		Unchanged: 0/0
  9306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9311 ;;Total ram usage:        0 bytes
  9312 ;; Hardware stack levels used:    1
  9313 ;; Hardware stack levels required when called:   13
  9314 ;; This function calls:
  9315 ;;		_drawtext
  9316 ;;		_fillRect
  9317 ;;		_fillScreen
  9318 ;;		_strcpy
  9319 ;; This function is called by:
  9320 ;;		_Do_Setup_Alarm_Time
  9321 ;; This function uses a non-reentrant model
  9322 ;;
  9323                           
  9324                           	psect	text37
  9325  006BA8                     __ptext37:
  9326                           	opt stack 0
  9327  006BA8                     _Initialize_Setup_Alarm_Time_Screen:
  9328                           	opt stack 16
  9329                           
  9330                           ;Setup_Alarm_Time.c: 146: fillScreen(0x0000);
  9331                           
  9332                           ; BSR set to: 0
  9333                           ;incstack = 0
  9334  006BA8  0E00               	movlw	0
  9335  006BAA  0100               	movlb	0	; () banked
  9336  006BAC  6FA2               	movwf	(fillScreen@color+1)& (0+255),b
  9337  006BAE  0E00               	movlw	0
  9338  006BB0  6FA1               	movwf	fillScreen@color& (0+255),b
  9339  006BB2  ECBB  F047         	call	_fillScreen	;wreg free
  9340                           
  9341                           ;Setup_Alarm_Time.c: 148: strcpy(txt, "ECE3301L Sp21 Final");
  9342  006BB6  C0E4  F08E         	movff	_txt,strcpy@to
  9343  006BBA  C0E5  F08F         	movff	_txt+1,strcpy@to+1
  9344  006BBE  0E2E               	movlw	low STR_25
  9345  006BC0  0100               	movlb	0	; () banked
  9346  006BC2  6F90               	movwf	strcpy@from& (0+255),b
  9347  006BC4  0EFF               	movlw	high STR_25
  9348  006BC6  0100               	movlb	0	; () banked
  9349  006BC8  6F91               	movwf	(strcpy@from+1)& (0+255),b
  9350  006BCA  EC9B  F046         	call	_strcpy	;wreg free
  9351                           
  9352                           ;Setup_Alarm_Time.c: 149: drawtext(1 , 1, txt, 0xFFFF , 0x0000, 1);
  9353  006BCE  0E01               	movlw	1
  9354  006BD0  0100               	movlb	0	; () banked
  9355  006BD2  6FB6               	movwf	drawtext@y& (0+255),b
  9356  006BD4  C0E4  F0B7         	movff	_txt,drawtext@_text
  9357  006BD8  C0E5  F0B8         	movff	_txt+1,drawtext@_text+1
  9358  006BDC  0EFF               	movlw	255
  9359  006BDE  0100               	movlb	0	; () banked
  9360  006BE0  6FBA               	movwf	(drawtext@color+1)& (0+255),b
  9361  006BE2  69B9               	setf	drawtext@color& (0+255),b
  9362  006BE4  0E00               	movlw	0
  9363  006BE6  0100               	movlb	0	; () banked
  9364  006BE8  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
  9365  006BEA  0E00               	movlw	0
  9366  006BEC  6FBB               	movwf	drawtext@bg& (0+255),b
  9367  006BEE  0E01               	movlw	1
  9368  006BF0  0100               	movlb	0	; () banked
  9369  006BF2  6FBD               	movwf	drawtext@size& (0+255),b
  9370  006BF4  0E01               	movlw	1
  9371  006BF6  EC0B  F032         	call	_drawtext
  9372                           
  9373                           ;Setup_Alarm_Time.c: 152: strcpy(txt, "Alrm Setup");
  9374  006BFA  C0E4  F08E         	movff	_txt,strcpy@to
  9375  006BFE  C0E5  F08F         	movff	_txt+1,strcpy@to+1
  9376  006C02  0EB3               	movlw	low STR_26
  9377  006C04  0100               	movlb	0	; () banked
  9378  006C06  6F90               	movwf	strcpy@from& (0+255),b
  9379  006C08  0EFF               	movlw	high STR_26
  9380  006C0A  0100               	movlb	0	; () banked
  9381  006C0C  6F91               	movwf	(strcpy@from+1)& (0+255),b
  9382  006C0E  EC9B  F046         	call	_strcpy	;wreg free
  9383                           
  9384                           ;Setup_Alarm_Time.c: 153: drawtext(1+5 , 1+20, txt, 0xF81F, 0x0000, 2);
  9385  006C12  0E15               	movlw	21
  9386  006C14  0100               	movlb	0	; () banked
  9387  006C16  6FB6               	movwf	drawtext@y& (0+255),b
  9388  006C18  C0E4  F0B7         	movff	_txt,drawtext@_text
  9389  006C1C  C0E5  F0B8         	movff	_txt+1,drawtext@_text+1
  9390  006C20  0EF8               	movlw	248
  9391  006C22  0100               	movlb	0	; () banked
  9392  006C24  6FBA               	movwf	(drawtext@color+1)& (0+255),b
  9393  006C26  0E1F               	movlw	31
  9394  006C28  6FB9               	movwf	drawtext@color& (0+255),b
  9395  006C2A  0E00               	movlw	0
  9396  006C2C  0100               	movlb	0	; () banked
  9397  006C2E  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
  9398  006C30  0E00               	movlw	0
  9399  006C32  6FBB               	movwf	drawtext@bg& (0+255),b
  9400  006C34  0E02               	movlw	2
  9401  006C36  0100               	movlb	0	; () banked
  9402  006C38  6FBD               	movwf	drawtext@size& (0+255),b
  9403  006C3A  0E06               	movlw	6
  9404  006C3C  EC0B  F032         	call	_drawtext
  9405                           
  9406                           ;Setup_Alarm_Time.c: 155: strcpy(txt, "Time");
  9407  006C40  C0E4  F08E         	movff	_txt,strcpy@to
  9408  006C44  C0E5  F08F         	movff	_txt+1,strcpy@to+1
  9409  006C48  0EC4               	movlw	low (STR_13+6)
  9410  006C4A  0100               	movlb	0	; () banked
  9411  006C4C  6F90               	movwf	strcpy@from& (0+255),b
  9412  006C4E  0EFF               	movlw	high (STR_13+6)
  9413  006C50  0100               	movlb	0	; () banked
  9414  006C52  6F91               	movwf	(strcpy@from+1)& (0+255),b
  9415  006C54  EC9B  F046         	call	_strcpy	;wreg free
  9416                           
  9417                           ;Setup_Alarm_Time.c: 156: drawtext(50 , 40 , txt, 0x001F , 0x0000, 1);
  9418  006C58  0E28               	movlw	40
  9419  006C5A  0100               	movlb	0	; () banked
  9420  006C5C  6FB6               	movwf	drawtext@y& (0+255),b
  9421  006C5E  C0E4  F0B7         	movff	_txt,drawtext@_text
  9422  006C62  C0E5  F0B8         	movff	_txt+1,drawtext@_text+1
  9423  006C66  0E00               	movlw	0
  9424  006C68  0100               	movlb	0	; () banked
  9425  006C6A  6FBA               	movwf	(drawtext@color+1)& (0+255),b
  9426  006C6C  0E1F               	movlw	31
  9427  006C6E  6FB9               	movwf	drawtext@color& (0+255),b
  9428  006C70  0E00               	movlw	0
  9429  006C72  0100               	movlb	0	; () banked
  9430  006C74  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
  9431  006C76  0E00               	movlw	0
  9432  006C78  6FBB               	movwf	drawtext@bg& (0+255),b
  9433  006C7A  0E01               	movlw	1
  9434  006C7C  0100               	movlb	0	; () banked
  9435  006C7E  6FBD               	movwf	drawtext@size& (0+255),b
  9436  006C80  0E32               	movlw	50
  9437  006C82  EC0B  F032         	call	_drawtext
  9438                           
  9439                           ;Setup_Alarm_Time.c: 157: fillRect(15-1, 52+16, 25,2,0x07FF);
  9440  006C86  0E44               	movlw	68
  9441  006C88  0100               	movlb	0	; () banked
  9442  006C8A  6FA0               	movwf	fillRect@y& (0+255),b
  9443  006C8C  0E19               	movlw	25
  9444  006C8E  0100               	movlb	0	; () banked
  9445  006C90  6FA1               	movwf	fillRect@w& (0+255),b
  9446  006C92  0E02               	movlw	2
  9447  006C94  0100               	movlb	0	; () banked
  9448  006C96  6FA2               	movwf	fillRect@h& (0+255),b
  9449  006C98  0E07               	movlw	7
  9450  006C9A  0100               	movlb	0	; () banked
  9451  006C9C  6FA4               	movwf	(fillRect@color+1)& (0+255),b
  9452  006C9E  69A3               	setf	fillRect@color& (0+255),b
  9453  006CA0  0E0E               	movlw	14
  9454  006CA2  ECFA  F042         	call	_fillRect
  9455  006CA6  0012               	return		;funcret
  9456  006CA8                     __end_of_Initialize_Setup_Alarm_Time_Screen:
  9457                           	opt stack 0
  9458                           tblptru	equ	0xFF8
  9459                           tblptrh	equ	0xFF7
  9460                           tblptrl	equ	0xFF6
  9461                           tablat	equ	0xFF5
  9462                           prodh	equ	0xFF4
  9463                           prodl	equ	0xFF3
  9464                           intcon	equ	0xFF2
  9465                           intcon2	equ	0xFF1
  9466                           postinc0	equ	0xFEE
  9467                           wreg	equ	0xFE8
  9468                           postdec1	equ	0xFE5
  9469                           fsr1l	equ	0xFE1
  9470                           postinc2	equ	0xFDE
  9471                           fsr2h	equ	0xFDA
  9472                           fsr2l	equ	0xFD9
  9473                           status	equ	0xFD8
  9474                           
  9475 ;; *************** function _Increase_Alarm_Time *****************
  9476 ;; Defined at:
  9477 ;;		line 60 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Alarm_Time.c"
  9478 ;; Parameters:    Size  Location     Type
  9479 ;;		None
  9480 ;; Auto vars:     Size  Location     Type
  9481 ;;		None
  9482 ;; Return value:  Size  Location     Type
  9483 ;;		None               void
  9484 ;; Registers used:
  9485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9486 ;; Tracked objects:
  9487 ;;		On entry : 0/0
  9488 ;;		On exit  : 0/0
  9489 ;;		Unchanged: 0/0
  9490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9495 ;;Total ram usage:        0 bytes
  9496 ;; Hardware stack levels used:    1
  9497 ;; Hardware stack levels required when called:   14
  9498 ;; This function calls:
  9499 ;;		_Update_Setup_Alarm_Time_Screen
  9500 ;; This function is called by:
  9501 ;;		_Do_Setup_Alarm_Time
  9502 ;; This function uses a non-reentrant model
  9503 ;;
  9504                           
  9505                           	psect	text38
  9506  0086BC                     __ptext38:
  9507                           	opt stack 0
  9508  0086BC                     _Increase_Alarm_Time:
  9509                           	opt stack 15
  9510                           
  9511                           ;Setup_Alarm_Time.c: 62: switch (Select_Alarm_Field)
  9512                           
  9513                           ;incstack = 0
  9514  0086BC  D021               	goto	l14283
  9515  0086BE                     l14263:
  9516                           
  9517                           ;Setup_Alarm_Time.c: 65: setup_alarm_hour++;
  9518  0086BE  0101               	movlb	1	; () banked
  9519  0086C0  2BC0               	incf	_setup_alarm_hour& (0+255),f,b
  9520                           
  9521                           ; BSR set to: 1
  9522                           ;Setup_Alarm_Time.c: 66: if (setup_alarm_hour == 24) setup_alarm_hour = 0;
  9523  0086C2  0E18               	movlw	24
  9524  0086C4  0101               	movlb	1	; () banked
  9525  0086C6  19C0               	xorwf	_setup_alarm_hour& (0+255),w,b
  9526  0086C8  A4D8               	btfss	status,2,c
  9527  0086CA  D026               	goto	l14285
  9528                           
  9529                           ; BSR set to: 1
  9530  0086CC  0E00               	movlw	0
  9531  0086CE  0101               	movlb	1	; () banked
  9532  0086D0  6FC0               	movwf	_setup_alarm_hour& (0+255),b
  9533                           
  9534                           ; BSR set to: 1
  9535                           ;Setup_Alarm_Time.c: 67: break;
  9536  0086D2  D022               	goto	l14285
  9537  0086D4                     l14269:
  9538                           
  9539                           ; BSR set to: 1
  9540                           ;Setup_Alarm_Time.c: 70: setup_alarm_minute++;
  9541  0086D4  0101               	movlb	1	; () banked
  9542  0086D6  2BC1               	incf	_setup_alarm_minute& (0+255),f,b
  9543                           
  9544                           ; BSR set to: 1
  9545                           ;Setup_Alarm_Time.c: 71: if (setup_alarm_minute == 60) setup_alarm_minute = 0;
  9546  0086D8  0E3C               	movlw	60
  9547  0086DA  0101               	movlb	1	; () banked
  9548  0086DC  19C1               	xorwf	_setup_alarm_minute& (0+255),w,b
  9549  0086DE  A4D8               	btfss	status,2,c
  9550  0086E0  D01B               	goto	l14285
  9551                           
  9552                           ; BSR set to: 1
  9553  0086E2  0E00               	movlw	0
  9554  0086E4  0101               	movlb	1	; () banked
  9555  0086E6  6FC1               	movwf	_setup_alarm_minute& (0+255),b
  9556                           
  9557                           ; BSR set to: 1
  9558                           ;Setup_Alarm_Time.c: 72: break;
  9559  0086E8  D017               	goto	l14285
  9560  0086EA                     l14275:
  9561                           
  9562                           ; BSR set to: 1
  9563                           ;Setup_Alarm_Time.c: 75: setup_alarm_second++;
  9564  0086EA  0101               	movlb	1	; () banked
  9565  0086EC  2BC2               	incf	_setup_alarm_second& (0+255),f,b
  9566                           
  9567                           ; BSR set to: 1
  9568                           ;Setup_Alarm_Time.c: 76: if (setup_alarm_second == 60) setup_alarm_second = 0;
  9569  0086EE  0E3C               	movlw	60
  9570  0086F0  0101               	movlb	1	; () banked
  9571  0086F2  19C2               	xorwf	_setup_alarm_second& (0+255),w,b
  9572  0086F4  A4D8               	btfss	status,2,c
  9573  0086F6  D010               	goto	l14285
  9574                           
  9575                           ; BSR set to: 1
  9576  0086F8  0E00               	movlw	0
  9577  0086FA  0101               	movlb	1	; () banked
  9578  0086FC  6FC2               	movwf	_setup_alarm_second& (0+255),b
  9579                           
  9580                           ; BSR set to: 1
  9581                           ;Setup_Alarm_Time.c: 81: }
  9582                           
  9583                           ; BSR set to: 1
  9584                           ;Setup_Alarm_Time.c: 80: break;
  9585                           
  9586                           ;Setup_Alarm_Time.c: 79: default:
  9587                           
  9588                           ; BSR set to: 1
  9589                           ;Setup_Alarm_Time.c: 77: break;
  9590  0086FE  D00C               	goto	l14285
  9591  008700                     l14283:
  9592  008700  0101               	movlb	1	; () banked
  9593  008702  51BA               	movf	_Select_Alarm_Field& (0+255),w,b
  9594                           
  9595                           ; Switch size 1, requested type "space"
  9596                           ; Number of cases is 3, Range of values is 0 to 2
  9597                           ; switch strategies available:
  9598                           ; Name         Instructions Cycles
  9599                           ; simple_byte           10     6 (average)
  9600                           ;	Chosen strategy is simple_byte
  9601  008704  0A00               	xorlw	0	; case 0
  9602  008706  B4D8               	btfsc	status,2,c
  9603  008708  D7DA               	goto	l14263
  9604  00870A  0A01               	xorlw	1	; case 1
  9605  00870C  B4D8               	btfsc	status,2,c
  9606  00870E  D7E2               	goto	l14269
  9607  008710  0A03               	xorlw	3	; case 2
  9608  008712  B4D8               	btfsc	status,2,c
  9609  008714  D7EA               	goto	l14275
  9610  008716  D000               	goto	l14285
  9611  008718                     l14285:
  9612                           
  9613                           ; BSR set to: 1
  9614                           ;Setup_Alarm_Time.c: 82: Update_Setup_Alarm_Time_Screen();
  9615  008718  EC30  F033         	call	_Update_Setup_Alarm_Time_Screen	;wreg free
  9616  00871C  0012               	return		;funcret
  9617  00871E                     __end_of_Increase_Alarm_Time:
  9618                           	opt stack 0
  9619                           tblptru	equ	0xFF8
  9620                           tblptrh	equ	0xFF7
  9621                           tblptrl	equ	0xFF6
  9622                           tablat	equ	0xFF5
  9623                           prodh	equ	0xFF4
  9624                           prodl	equ	0xFF3
  9625                           intcon	equ	0xFF2
  9626                           intcon2	equ	0xFF1
  9627                           postinc0	equ	0xFEE
  9628                           wreg	equ	0xFE8
  9629                           postdec1	equ	0xFE5
  9630                           fsr1l	equ	0xFE1
  9631                           postinc2	equ	0xFDE
  9632                           fsr2h	equ	0xFDA
  9633                           fsr2l	equ	0xFD9
  9634                           status	equ	0xFD8
  9635                           
  9636 ;; *************** function _Go_Prev_Alarm_Field *****************
  9637 ;; Defined at:
  9638 ;;		line 121 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Alarm_Time.c"
  9639 ;; Parameters:    Size  Location     Type
  9640 ;;		None
  9641 ;; Auto vars:     Size  Location     Type
  9642 ;;		None
  9643 ;; Return value:  Size  Location     Type
  9644 ;;		None               void
  9645 ;; Registers used:
  9646 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9647 ;; Tracked objects:
  9648 ;;		On entry : 0/0
  9649 ;;		On exit  : 0/0
  9650 ;;		Unchanged: 0/0
  9651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9656 ;;Total ram usage:        0 bytes
  9657 ;; Hardware stack levels used:    1
  9658 ;; Hardware stack levels required when called:   12
  9659 ;; This function calls:
  9660 ;;		_Update_Setup_Screen_Cursor_Backward
  9661 ;; This function is called by:
  9662 ;;		_Do_Setup_Alarm_Time
  9663 ;; This function uses a non-reentrant model
  9664 ;;
  9665                           
  9666                           	psect	text39
  9667  008FFA                     __ptext39:
  9668                           	opt stack 0
  9669  008FFA                     _Go_Prev_Alarm_Field:
  9670                           	opt stack 17
  9671                           
  9672                           ;Setup_Alarm_Time.c: 123: if (Select_Alarm_Field == 0) Select_Alarm_Field = 2;
  9673                           
  9674                           ;incstack = 0
  9675  008FFA  0101               	movlb	1	; () banked
  9676  008FFC  51BA               	movf	_Select_Alarm_Field& (0+255),w,b
  9677  008FFE  A4D8               	btfss	status,2,c
  9678  009000  D004               	goto	l10083
  9679                           
  9680                           ; BSR set to: 1
  9681  009002  0E02               	movlw	2
  9682  009004  0101               	movlb	1	; () banked
  9683  009006  6FBA               	movwf	_Select_Alarm_Field& (0+255),b
  9684  009008  D003               	goto	l10085
  9685  00900A                     l10083:
  9686                           
  9687                           ; BSR set to: 1
  9688                           ;Setup_Alarm_Time.c: 124: else Select_Alarm_Field--;
  9689  00900A  0101               	movlb	1	; () banked
  9690  00900C  07BA               	decf	_Select_Alarm_Field& (0+255),f,b
  9691  00900E  D000               	goto	l10085
  9692  009010                     l10085:
  9693                           
  9694                           ; BSR set to: 1
  9695                           ;Setup_Alarm_Time.c: 125: Update_Setup_Screen_Cursor_Backward(Select_Alarm_Field);
  9696  009010  0101               	movlb	1	; () banked
  9697  009012  51BA               	movf	_Select_Alarm_Field& (0+255),w,b
  9698  009014  ECBB  F027         	call	_Update_Setup_Screen_Cursor_Backward
  9699  009018  0012               	return		;funcret
  9700  00901A                     __end_of_Go_Prev_Alarm_Field:
  9701                           	opt stack 0
  9702                           tblptru	equ	0xFF8
  9703                           tblptrh	equ	0xFF7
  9704                           tblptrl	equ	0xFF6
  9705                           tablat	equ	0xFF5
  9706                           prodh	equ	0xFF4
  9707                           prodl	equ	0xFF3
  9708                           intcon	equ	0xFF2
  9709                           intcon2	equ	0xFF1
  9710                           postinc0	equ	0xFEE
  9711                           wreg	equ	0xFE8
  9712                           postdec1	equ	0xFE5
  9713                           fsr1l	equ	0xFE1
  9714                           postinc2	equ	0xFDE
  9715                           fsr2h	equ	0xFDA
  9716                           fsr2l	equ	0xFD9
  9717                           status	equ	0xFD8
  9718                           
  9719 ;; *************** function _Update_Setup_Screen_Cursor_Backward *****************
  9720 ;; Defined at:
  9721 ;;		line 271 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Time.c"
  9722 ;; Parameters:    Size  Location     Type
  9723 ;;  field           1    wreg     unsigned char 
  9724 ;; Auto vars:     Size  Location     Type
  9725 ;;  field           1   43[BANK0 ] unsigned char 
  9726 ;;  xinc            1   45[BANK0 ] unsigned char 
  9727 ;;  yinc            1   44[BANK0 ] unsigned char 
  9728 ;; Return value:  Size  Location     Type
  9729 ;;		None               void
  9730 ;; Registers used:
  9731 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9732 ;; Tracked objects:
  9733 ;;		On entry : 0/0
  9734 ;;		On exit  : 0/0
  9735 ;;		Unchanged: 0/0
  9736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9738 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9740 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9741 ;;Total ram usage:        3 bytes
  9742 ;; Hardware stack levels used:    1
  9743 ;; Hardware stack levels required when called:   11
  9744 ;; This function calls:
  9745 ;;		_fillRect
  9746 ;; This function is called by:
  9747 ;;		_Go_Prev_Alarm_Field
  9748 ;;		_Go_Prev_Field
  9749 ;; This function uses a non-reentrant model
  9750 ;;
  9751                           
  9752                           	psect	text40
  9753  004F76                     __ptext40:
  9754                           	opt stack 0
  9755  004F76                     _Update_Setup_Screen_Cursor_Backward:
  9756                           	opt stack 17
  9757                           
  9758                           ;incstack = 0
  9759                           ;Update_Setup_Screen_Cursor_Backward@field stored from wreg
  9760  004F76  0100               	movlb	0	; () banked
  9761  004F78  6FAB               	movwf	Update_Setup_Screen_Cursor_Backward@field& (0+255),b
  9762                           
  9763                           ; BSR set to: 0
  9764                           ;Setup_Time.c: 273: char xinc = 36;
  9765  004F7A  0E24               	movlw	36
  9766  004F7C  0100               	movlb	0	; () banked
  9767  004F7E  6FAD               	movwf	Update_Setup_Screen_Cursor_Backward@xinc& (0+255),b
  9768                           
  9769                           ;Setup_Time.c: 274: char yinc = 30;
  9770  004F80  0E1E               	movlw	30
  9771  004F82  0100               	movlb	0	; () banked
  9772  004F84  6FAC               	movwf	Update_Setup_Screen_Cursor_Backward@yinc& (0+255),b
  9773                           
  9774                           ;Setup_Time.c: 275: switch (field)
  9775  004F86  D101               	goto	l9529
  9776  004F88                     l9507:
  9777                           
  9778                           ; BSR set to: 0
  9779                           ;Setup_Time.c: 278: fillRect(15-1+xinc, 52+16, 25,2,0x0000);
  9780  004F88  0E44               	movlw	68
  9781  004F8A  0100               	movlb	0	; () banked
  9782  004F8C  6FA0               	movwf	fillRect@y& (0+255),b
  9783  004F8E  0E19               	movlw	25
  9784  004F90  0100               	movlb	0	; () banked
  9785  004F92  6FA1               	movwf	fillRect@w& (0+255),b
  9786  004F94  0E02               	movlw	2
  9787  004F96  0100               	movlb	0	; () banked
  9788  004F98  6FA2               	movwf	fillRect@h& (0+255),b
  9789  004F9A  0E00               	movlw	0
  9790  004F9C  0100               	movlb	0	; () banked
  9791  004F9E  6FA4               	movwf	(fillRect@color+1)& (0+255),b
  9792  004FA0  0E00               	movlw	0
  9793  004FA2  6FA3               	movwf	fillRect@color& (0+255),b
  9794  004FA4  0100               	movlb	0	; () banked
  9795  004FA6  51AD               	movf	Update_Setup_Screen_Cursor_Backward@xinc& (0+255),w,b
  9796  004FA8  0F0E               	addlw	14
  9797  004FAA  ECFA  F042         	call	_fillRect
  9798                           
  9799                           ;Setup_Time.c: 279: fillRect(15-1, 52+16, 25,2,0x07FF);
  9800  004FAE  0E44               	movlw	68
  9801  004FB0  0100               	movlb	0	; () banked
  9802  004FB2  6FA0               	movwf	fillRect@y& (0+255),b
  9803  004FB4  0E19               	movlw	25
  9804  004FB6  0100               	movlb	0	; () banked
  9805  004FB8  6FA1               	movwf	fillRect@w& (0+255),b
  9806  004FBA  0E02               	movlw	2
  9807  004FBC  0100               	movlb	0	; () banked
  9808  004FBE  6FA2               	movwf	fillRect@h& (0+255),b
  9809  004FC0  0E07               	movlw	7
  9810  004FC2  0100               	movlb	0	; () banked
  9811  004FC4  6FA4               	movwf	(fillRect@color+1)& (0+255),b
  9812  004FC6  69A3               	setf	fillRect@color& (0+255),b
  9813  004FC8  0E0E               	movlw	14
  9814  004FCA  ECFA  F042         	call	_fillRect
  9815                           
  9816                           ;Setup_Time.c: 280: break;
  9817  004FCE  D0F2               	goto	l1257
  9818  004FD0                     l9509:
  9819                           
  9820                           ;Setup_Time.c: 283: fillRect(15-1+2*xinc, 52+16, 25,2,0x0000);
  9821  004FD0  0E44               	movlw	68
  9822  004FD2  0100               	movlb	0	; () banked
  9823  004FD4  6FA0               	movwf	fillRect@y& (0+255),b
  9824  004FD6  0E19               	movlw	25
  9825  004FD8  0100               	movlb	0	; () banked
  9826  004FDA  6FA1               	movwf	fillRect@w& (0+255),b
  9827  004FDC  0E02               	movlw	2
  9828  004FDE  0100               	movlb	0	; () banked
  9829  004FE0  6FA2               	movwf	fillRect@h& (0+255),b
  9830  004FE2  0E00               	movlw	0
  9831  004FE4  0100               	movlb	0	; () banked
  9832  004FE6  6FA4               	movwf	(fillRect@color+1)& (0+255),b
  9833  004FE8  0E00               	movlw	0
  9834  004FEA  6FA3               	movwf	fillRect@color& (0+255),b
  9835  004FEC  0100               	movlb	0	; () banked
  9836  004FEE  51AD               	movf	Update_Setup_Screen_Cursor_Backward@xinc& (0+255),w,b
  9837  004FF0  0D02               	mullw	2
  9838  004FF2  50F3               	movf	prodl,w,c
  9839  004FF4  0F0E               	addlw	14
  9840  004FF6  ECFA  F042         	call	_fillRect
  9841                           
  9842                           ;Setup_Time.c: 284: fillRect(15-1+xinc, 52+16, 25,2,0x07FF);
  9843  004FFA  0E44               	movlw	68
  9844  004FFC  0100               	movlb	0	; () banked
  9845  004FFE  6FA0               	movwf	fillRect@y& (0+255),b
  9846  005000  0E19               	movlw	25
  9847  005002  0100               	movlb	0	; () banked
  9848  005004  6FA1               	movwf	fillRect@w& (0+255),b
  9849  005006  0E02               	movlw	2
  9850  005008  0100               	movlb	0	; () banked
  9851  00500A  6FA2               	movwf	fillRect@h& (0+255),b
  9852  00500C  0E07               	movlw	7
  9853  00500E  0100               	movlb	0	; () banked
  9854  005010  6FA4               	movwf	(fillRect@color+1)& (0+255),b
  9855  005012  69A3               	setf	fillRect@color& (0+255),b
  9856  005014  0100               	movlb	0	; () banked
  9857  005016  51AD               	movf	Update_Setup_Screen_Cursor_Backward@xinc& (0+255),w,b
  9858  005018  0F0E               	addlw	14
  9859  00501A  ECFA  F042         	call	_fillRect
  9860                           
  9861                           ;Setup_Time.c: 285: break;
  9862  00501E  D0CA               	goto	l1257
  9863  005020                     l9513:
  9864                           
  9865                           ;Setup_Time.c: 288: fillRect(15-1, 52+16, 25,2,0x0000);
  9866  005020  0E44               	movlw	68
  9867  005022  0100               	movlb	0	; () banked
  9868  005024  6FA0               	movwf	fillRect@y& (0+255),b
  9869  005026  0E19               	movlw	25
  9870  005028  0100               	movlb	0	; () banked
  9871  00502A  6FA1               	movwf	fillRect@w& (0+255),b
  9872  00502C  0E02               	movlw	2
  9873  00502E  0100               	movlb	0	; () banked
  9874  005030  6FA2               	movwf	fillRect@h& (0+255),b
  9875  005032  0E00               	movlw	0
  9876  005034  0100               	movlb	0	; () banked
  9877  005036  6FA4               	movwf	(fillRect@color+1)& (0+255),b
  9878  005038  0E00               	movlw	0
  9879  00503A  6FA3               	movwf	fillRect@color& (0+255),b
  9880  00503C  0E0E               	movlw	14
  9881  00503E  ECFA  F042         	call	_fillRect
  9882                           
  9883                           ;Setup_Time.c: 289: fillRect(15-1, 52+16+yinc, 25,2,0x0000);
  9884  005042  0100               	movlb	0	; () banked
  9885  005044  51AC               	movf	Update_Setup_Screen_Cursor_Backward@yinc& (0+255),w,b
  9886  005046  0F44               	addlw	68
  9887  005048  0100               	movlb	0	; () banked
  9888  00504A  6FA0               	movwf	fillRect@y& (0+255),b
  9889  00504C  0E19               	movlw	25
  9890  00504E  0100               	movlb	0	; () banked
  9891  005050  6FA1               	movwf	fillRect@w& (0+255),b
  9892  005052  0E02               	movlw	2
  9893  005054  0100               	movlb	0	; () banked
  9894  005056  6FA2               	movwf	fillRect@h& (0+255),b
  9895  005058  0E00               	movlw	0
  9896  00505A  0100               	movlb	0	; () banked
  9897  00505C  6FA4               	movwf	(fillRect@color+1)& (0+255),b
  9898  00505E  0E00               	movlw	0
  9899  005060  6FA3               	movwf	fillRect@color& (0+255),b
  9900  005062  0E0E               	movlw	14
  9901  005064  ECFA  F042         	call	_fillRect
  9902                           
  9903                           ;Setup_Time.c: 290: fillRect(15-1+2*xinc, 52+16, 25,2,0x07FF);
  9904  005068  0E44               	movlw	68
  9905  00506A  0100               	movlb	0	; () banked
  9906  00506C  6FA0               	movwf	fillRect@y& (0+255),b
  9907  00506E  0E19               	movlw	25
  9908  005070  0100               	movlb	0	; () banked
  9909  005072  6FA1               	movwf	fillRect@w& (0+255),b
  9910  005074  0E02               	movlw	2
  9911  005076  0100               	movlb	0	; () banked
  9912  005078  6FA2               	movwf	fillRect@h& (0+255),b
  9913  00507A  0E07               	movlw	7
  9914  00507C  0100               	movlb	0	; () banked
  9915  00507E  6FA4               	movwf	(fillRect@color+1)& (0+255),b
  9916  005080  69A3               	setf	fillRect@color& (0+255),b
  9917  005082  0100               	movlb	0	; () banked
  9918  005084  51AD               	movf	Update_Setup_Screen_Cursor_Backward@xinc& (0+255),w,b
  9919  005086  0D02               	mullw	2
  9920  005088  50F3               	movf	prodl,w,c
  9921  00508A  0F0E               	addlw	14
  9922  00508C  ECFA  F042         	call	_fillRect
  9923                           
  9924                           ;Setup_Time.c: 291: break;
  9925  005090  D091               	goto	l1257
  9926  005092                     l9517:
  9927                           
  9928                           ;Setup_Time.c: 294: fillRect(15-1+xinc, 52+16+yinc, 25,2,0x0000);
  9929  005092  0100               	movlb	0	; () banked
  9930  005094  51AC               	movf	Update_Setup_Screen_Cursor_Backward@yinc& (0+255),w,b
  9931  005096  0F44               	addlw	68
  9932  005098  0100               	movlb	0	; () banked
  9933  00509A  6FA0               	movwf	fillRect@y& (0+255),b
  9934  00509C  0E19               	movlw	25
  9935  00509E  0100               	movlb	0	; () banked
  9936  0050A0  6FA1               	movwf	fillRect@w& (0+255),b
  9937  0050A2  0E02               	movlw	2
  9938  0050A4  0100               	movlb	0	; () banked
  9939  0050A6  6FA2               	movwf	fillRect@h& (0+255),b
  9940  0050A8  0E00               	movlw	0
  9941  0050AA  0100               	movlb	0	; () banked
  9942  0050AC  6FA4               	movwf	(fillRect@color+1)& (0+255),b
  9943  0050AE  0E00               	movlw	0
  9944  0050B0  6FA3               	movwf	fillRect@color& (0+255),b
  9945  0050B2  0100               	movlb	0	; () banked
  9946  0050B4  51AD               	movf	Update_Setup_Screen_Cursor_Backward@xinc& (0+255),w,b
  9947  0050B6  0F0E               	addlw	14
  9948  0050B8  ECFA  F042         	call	_fillRect
  9949                           
  9950                           ;Setup_Time.c: 295: fillRect(15-1, 52+16+yinc, 25,2,0x07FF);
  9951  0050BC  0100               	movlb	0	; () banked
  9952  0050BE  51AC               	movf	Update_Setup_Screen_Cursor_Backward@yinc& (0+255),w,b
  9953  0050C0  0F44               	addlw	68
  9954  0050C2  0100               	movlb	0	; () banked
  9955  0050C4  6FA0               	movwf	fillRect@y& (0+255),b
  9956  0050C6  0E19               	movlw	25
  9957  0050C8  0100               	movlb	0	; () banked
  9958  0050CA  6FA1               	movwf	fillRect@w& (0+255),b
  9959  0050CC  0E02               	movlw	2
  9960  0050CE  0100               	movlb	0	; () banked
  9961  0050D0  6FA2               	movwf	fillRect@h& (0+255),b
  9962  0050D2  0E07               	movlw	7
  9963  0050D4  0100               	movlb	0	; () banked
  9964  0050D6  6FA4               	movwf	(fillRect@color+1)& (0+255),b
  9965  0050D8  69A3               	setf	fillRect@color& (0+255),b
  9966  0050DA  0E0E               	movlw	14
  9967  0050DC  ECFA  F042         	call	_fillRect
  9968                           
  9969                           ;Setup_Time.c: 296: break;
  9970  0050E0  D069               	goto	l1257
  9971  0050E2                     l9519:
  9972                           
  9973                           ;Setup_Time.c: 299: fillRect(15-1+2*xinc, 52+16+yinc, 25,2,0x0000);
  9974  0050E2  0100               	movlb	0	; () banked
  9975  0050E4  51AC               	movf	Update_Setup_Screen_Cursor_Backward@yinc& (0+255),w,b
  9976  0050E6  0F44               	addlw	68
  9977  0050E8  0100               	movlb	0	; () banked
  9978  0050EA  6FA0               	movwf	fillRect@y& (0+255),b
  9979  0050EC  0E19               	movlw	25
  9980  0050EE  0100               	movlb	0	; () banked
  9981  0050F0  6FA1               	movwf	fillRect@w& (0+255),b
  9982  0050F2  0E02               	movlw	2
  9983  0050F4  0100               	movlb	0	; () banked
  9984  0050F6  6FA2               	movwf	fillRect@h& (0+255),b
  9985  0050F8  0E00               	movlw	0
  9986  0050FA  0100               	movlb	0	; () banked
  9987  0050FC  6FA4               	movwf	(fillRect@color+1)& (0+255),b
  9988  0050FE  0E00               	movlw	0
  9989  005100  6FA3               	movwf	fillRect@color& (0+255),b
  9990  005102  0100               	movlb	0	; () banked
  9991  005104  51AD               	movf	Update_Setup_Screen_Cursor_Backward@xinc& (0+255),w,b
  9992  005106  0D02               	mullw	2
  9993  005108  50F3               	movf	prodl,w,c
  9994  00510A  0F0E               	addlw	14
  9995  00510C  ECFA  F042         	call	_fillRect
  9996                           
  9997                           ;Setup_Time.c: 300: fillRect(15-1+xinc, 52+16+yinc, 25,2,0x07FF);
  9998  005110  0100               	movlb	0	; () banked
  9999  005112  51AC               	movf	Update_Setup_Screen_Cursor_Backward@yinc& (0+255),w,b
 10000  005114  0F44               	addlw	68
 10001  005116  0100               	movlb	0	; () banked
 10002  005118  6FA0               	movwf	fillRect@y& (0+255),b
 10003  00511A  0E19               	movlw	25
 10004  00511C  0100               	movlb	0	; () banked
 10005  00511E  6FA1               	movwf	fillRect@w& (0+255),b
 10006  005120  0E02               	movlw	2
 10007  005122  0100               	movlb	0	; () banked
 10008  005124  6FA2               	movwf	fillRect@h& (0+255),b
 10009  005126  0E07               	movlw	7
 10010  005128  0100               	movlb	0	; () banked
 10011  00512A  6FA4               	movwf	(fillRect@color+1)& (0+255),b
 10012  00512C  69A3               	setf	fillRect@color& (0+255),b
 10013  00512E  0100               	movlb	0	; () banked
 10014  005130  51AD               	movf	Update_Setup_Screen_Cursor_Backward@xinc& (0+255),w,b
 10015  005132  0F0E               	addlw	14
 10016  005134  ECFA  F042         	call	_fillRect
 10017                           
 10018                           ;Setup_Time.c: 301: break;
 10019  005138  D03D               	goto	l1257
 10020  00513A                     l9523:
 10021                           
 10022                           ;Setup_Time.c: 304: fillRect(15-1, 52+16, 25,2,0x0000);
 10023  00513A  0E44               	movlw	68
 10024  00513C  0100               	movlb	0	; () banked
 10025  00513E  6FA0               	movwf	fillRect@y& (0+255),b
 10026  005140  0E19               	movlw	25
 10027  005142  0100               	movlb	0	; () banked
 10028  005144  6FA1               	movwf	fillRect@w& (0+255),b
 10029  005146  0E02               	movlw	2
 10030  005148  0100               	movlb	0	; () banked
 10031  00514A  6FA2               	movwf	fillRect@h& (0+255),b
 10032  00514C  0E00               	movlw	0
 10033  00514E  0100               	movlb	0	; () banked
 10034  005150  6FA4               	movwf	(fillRect@color+1)& (0+255),b
 10035  005152  0E00               	movlw	0
 10036  005154  6FA3               	movwf	fillRect@color& (0+255),b
 10037  005156  0E0E               	movlw	14
 10038  005158  ECFA  F042         	call	_fillRect
 10039                           
 10040                           ;Setup_Time.c: 305: fillRect(15-1+2*xinc, 52+16+yinc, 25,2,0x07FF);
 10041  00515C  0100               	movlb	0	; () banked
 10042  00515E  51AC               	movf	Update_Setup_Screen_Cursor_Backward@yinc& (0+255),w,b
 10043  005160  0F44               	addlw	68
 10044  005162  0100               	movlb	0	; () banked
 10045  005164  6FA0               	movwf	fillRect@y& (0+255),b
 10046  005166  0E19               	movlw	25
 10047  005168  0100               	movlb	0	; () banked
 10048  00516A  6FA1               	movwf	fillRect@w& (0+255),b
 10049  00516C  0E02               	movlw	2
 10050  00516E  0100               	movlb	0	; () banked
 10051  005170  6FA2               	movwf	fillRect@h& (0+255),b
 10052  005172  0E07               	movlw	7
 10053  005174  0100               	movlb	0	; () banked
 10054  005176  6FA4               	movwf	(fillRect@color+1)& (0+255),b
 10055  005178  69A3               	setf	fillRect@color& (0+255),b
 10056  00517A  0100               	movlb	0	; () banked
 10057  00517C  51AD               	movf	Update_Setup_Screen_Cursor_Backward@xinc& (0+255),w,b
 10058  00517E  0D02               	mullw	2
 10059  005180  50F3               	movf	prodl,w,c
 10060  005182  0F0E               	addlw	14
 10061  005184  ECFA  F042         	call	_fillRect
 10062                           
 10063                           ;Setup_Time.c: 307: }
 10064                           
 10065                           ;Setup_Time.c: 306: break;
 10066  005188  D015               	goto	l1257
 10067  00518A                     l9529:
 10068  00518A  0100               	movlb	0	; () banked
 10069  00518C  51AB               	movf	Update_Setup_Screen_Cursor_Backward@field& (0+255),w,b
 10070                           
 10071                           ; Switch size 1, requested type "space"
 10072                           ; Number of cases is 6, Range of values is 0 to 5
 10073                           ; switch strategies available:
 10074                           ; Name         Instructions Cycles
 10075                           ; simple_byte           19    10 (average)
 10076                           ;	Chosen strategy is simple_byte
 10077  00518E  0A00               	xorlw	0	; case 0
 10078  005190  B4D8               	btfsc	status,2,c
 10079  005192  D6FA               	goto	l9507
 10080  005194  0A01               	xorlw	1	; case 1
 10081  005196  B4D8               	btfsc	status,2,c
 10082  005198  D71B               	goto	l9509
 10083  00519A  0A03               	xorlw	3	; case 2
 10084  00519C  B4D8               	btfsc	status,2,c
 10085  00519E  D740               	goto	l9513
 10086  0051A0  0A01               	xorlw	1	; case 3
 10087  0051A2  B4D8               	btfsc	status,2,c
 10088  0051A4  D776               	goto	l9517
 10089  0051A6  0A07               	xorlw	7	; case 4
 10090  0051A8  B4D8               	btfsc	status,2,c
 10091  0051AA  D79B               	goto	l9519
 10092  0051AC  0A01               	xorlw	1	; case 5
 10093  0051AE  B4D8               	btfsc	status,2,c
 10094  0051B0  D7C4               	goto	l9523
 10095  0051B2  D000               	goto	l1257
 10096  0051B4                     l1257:
 10097  0051B4  0012               	return		;funcret
 10098  0051B6                     __end_of_Update_Setup_Screen_Cursor_Backward:
 10099                           	opt stack 0
 10100                           tblptru	equ	0xFF8
 10101                           tblptrh	equ	0xFF7
 10102                           tblptrl	equ	0xFF6
 10103                           tablat	equ	0xFF5
 10104                           prodh	equ	0xFF4
 10105                           prodl	equ	0xFF3
 10106                           intcon	equ	0xFF2
 10107                           intcon2	equ	0xFF1
 10108                           postinc0	equ	0xFEE
 10109                           wreg	equ	0xFE8
 10110                           postdec1	equ	0xFE5
 10111                           fsr1l	equ	0xFE1
 10112                           postinc2	equ	0xFDE
 10113                           fsr2h	equ	0xFDA
 10114                           fsr2l	equ	0xFD9
 10115                           status	equ	0xFD8
 10116                           
 10117 ;; *************** function _Go_Next_Alarm_Field *****************
 10118 ;; Defined at:
 10119 ;;		line 112 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Alarm_Time.c"
 10120 ;; Parameters:    Size  Location     Type
 10121 ;;		None
 10122 ;; Auto vars:     Size  Location     Type
 10123 ;;		None
 10124 ;; Return value:  Size  Location     Type
 10125 ;;		None               void
 10126 ;; Registers used:
 10127 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10128 ;; Tracked objects:
 10129 ;;		On entry : 0/0
 10130 ;;		On exit  : 0/0
 10131 ;;		Unchanged: 0/0
 10132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10137 ;;Total ram usage:        0 bytes
 10138 ;; Hardware stack levels used:    1
 10139 ;; Hardware stack levels required when called:   12
 10140 ;; This function calls:
 10141 ;;		_Update_Setup_Screen_Cursor_Forward
 10142 ;; This function is called by:
 10143 ;;		_Do_Setup_Alarm_Time
 10144 ;; This function uses a non-reentrant model
 10145 ;;
 10146                           
 10147                           	psect	text41
 10148  00901A                     __ptext41:
 10149                           	opt stack 0
 10150  00901A                     _Go_Next_Alarm_Field:
 10151                           	opt stack 17
 10152                           
 10153                           ;Setup_Alarm_Time.c: 115: Select_Alarm_Field++;
 10154                           
 10155                           ;incstack = 0
 10156  00901A  0101               	movlb	1	; () banked
 10157  00901C  2BBA               	incf	_Select_Alarm_Field& (0+255),f,b
 10158                           
 10159                           ; BSR set to: 1
 10160                           ;Setup_Alarm_Time.c: 116: if (Select_Alarm_Field == 3) Select_Alarm_Field = 0;
 10161  00901E  0E03               	movlw	3
 10162  009020  0101               	movlb	1	; () banked
 10163  009022  19BA               	xorwf	_Select_Alarm_Field& (0+255),w,b
 10164  009024  A4D8               	btfss	status,2,c
 10165  009026  D004               	goto	l10093
 10166                           
 10167                           ; BSR set to: 1
 10168  009028  0E00               	movlw	0
 10169  00902A  0101               	movlb	1	; () banked
 10170  00902C  6FBA               	movwf	_Select_Alarm_Field& (0+255),b
 10171  00902E  D000               	goto	l10093
 10172  009030                     l10093:
 10173                           
 10174                           ; BSR set to: 1
 10175                           ;Setup_Alarm_Time.c: 117: Update_Setup_Screen_Cursor_Forward(Select_Alarm_Field);
 10176  009030  0101               	movlb	1	; () banked
 10177  009032  51BA               	movf	_Select_Alarm_Field& (0+255),w,b
 10178  009034  EC75  F025         	call	_Update_Setup_Screen_Cursor_Forward
 10179  009038  0012               	return		;funcret
 10180  00903A                     __end_of_Go_Next_Alarm_Field:
 10181                           	opt stack 0
 10182                           tblptru	equ	0xFF8
 10183                           tblptrh	equ	0xFF7
 10184                           tblptrl	equ	0xFF6
 10185                           tablat	equ	0xFF5
 10186                           prodh	equ	0xFF4
 10187                           prodl	equ	0xFF3
 10188                           intcon	equ	0xFF2
 10189                           intcon2	equ	0xFF1
 10190                           postinc0	equ	0xFEE
 10191                           wreg	equ	0xFE8
 10192                           postdec1	equ	0xFE5
 10193                           fsr1l	equ	0xFE1
 10194                           postinc2	equ	0xFDE
 10195                           fsr2h	equ	0xFDA
 10196                           fsr2l	equ	0xFD9
 10197                           status	equ	0xFD8
 10198                           
 10199 ;; *************** function _Update_Setup_Screen_Cursor_Forward *****************
 10200 ;; Defined at:
 10201 ;;		line 232 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Time.c"
 10202 ;; Parameters:    Size  Location     Type
 10203 ;;  field           1    wreg     unsigned char 
 10204 ;; Auto vars:     Size  Location     Type
 10205 ;;  field           1   43[BANK0 ] unsigned char 
 10206 ;;  xinc            1   45[BANK0 ] unsigned char 
 10207 ;;  yinc            1   44[BANK0 ] unsigned char 
 10208 ;; Return value:  Size  Location     Type
 10209 ;;		None               void
 10210 ;; Registers used:
 10211 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10212 ;; Tracked objects:
 10213 ;;		On entry : 0/0
 10214 ;;		On exit  : 0/0
 10215 ;;		Unchanged: 0/0
 10216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10218 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10220 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10221 ;;Total ram usage:        3 bytes
 10222 ;; Hardware stack levels used:    1
 10223 ;; Hardware stack levels required when called:   11
 10224 ;; This function calls:
 10225 ;;		_fillRect
 10226 ;; This function is called by:
 10227 ;;		_Go_Next_Alarm_Field
 10228 ;;		_Go_Next_Field
 10229 ;; This function uses a non-reentrant model
 10230 ;;
 10231                           
 10232                           	psect	text42
 10233  004AEA                     __ptext42:
 10234                           	opt stack 0
 10235  004AEA                     _Update_Setup_Screen_Cursor_Forward:
 10236                           	opt stack 17
 10237                           
 10238                           ;incstack = 0
 10239                           ;Update_Setup_Screen_Cursor_Forward@field stored from wreg
 10240  004AEA  0100               	movlb	0	; () banked
 10241  004AEC  6FAB               	movwf	Update_Setup_Screen_Cursor_Forward@field& (0+255),b
 10242                           
 10243                           ; BSR set to: 0
 10244                           ;Setup_Time.c: 234: char xinc = 36;
 10245  004AEE  0E24               	movlw	36
 10246  004AF0  0100               	movlb	0	; () banked
 10247  004AF2  6FAD               	movwf	Update_Setup_Screen_Cursor_Forward@xinc& (0+255),b
 10248                           
 10249                           ;Setup_Time.c: 235: char yinc = 30;
 10250  004AF4  0E1E               	movlw	30
 10251  004AF6  0100               	movlb	0	; () banked
 10252  004AF8  6FAC               	movwf	Update_Setup_Screen_Cursor_Forward@yinc& (0+255),b
 10253                           
 10254                           ;Setup_Time.c: 236: switch (field)
 10255  004AFA  D105               	goto	l9503
 10256  004AFC                     l9481:
 10257                           
 10258                           ; BSR set to: 0
 10259                           ;Setup_Time.c: 239: fillRect(15-1+2*xinc, 52+16+yinc, 25,2,0x0000);
 10260  004AFC  0100               	movlb	0	; () banked
 10261  004AFE  51AC               	movf	Update_Setup_Screen_Cursor_Forward@yinc& (0+255),w,b
 10262  004B00  0F44               	addlw	68
 10263  004B02  0100               	movlb	0	; () banked
 10264  004B04  6FA0               	movwf	fillRect@y& (0+255),b
 10265  004B06  0E19               	movlw	25
 10266  004B08  0100               	movlb	0	; () banked
 10267  004B0A  6FA1               	movwf	fillRect@w& (0+255),b
 10268  004B0C  0E02               	movlw	2
 10269  004B0E  0100               	movlb	0	; () banked
 10270  004B10  6FA2               	movwf	fillRect@h& (0+255),b
 10271  004B12  0E00               	movlw	0
 10272  004B14  0100               	movlb	0	; () banked
 10273  004B16  6FA4               	movwf	(fillRect@color+1)& (0+255),b
 10274  004B18  0E00               	movlw	0
 10275  004B1A  6FA3               	movwf	fillRect@color& (0+255),b
 10276  004B1C  0100               	movlb	0	; () banked
 10277  004B1E  51AD               	movf	Update_Setup_Screen_Cursor_Forward@xinc& (0+255),w,b
 10278  004B20  0D02               	mullw	2
 10279  004B22  50F3               	movf	prodl,w,c
 10280  004B24  0F0E               	addlw	14
 10281  004B26  ECFA  F042         	call	_fillRect
 10282                           
 10283                           ;Setup_Time.c: 240: fillRect(15-1+2*xinc, 52+16, 25,2,0x0000);
 10284  004B2A  0E44               	movlw	68
 10285  004B2C  0100               	movlb	0	; () banked
 10286  004B2E  6FA0               	movwf	fillRect@y& (0+255),b
 10287  004B30  0E19               	movlw	25
 10288  004B32  0100               	movlb	0	; () banked
 10289  004B34  6FA1               	movwf	fillRect@w& (0+255),b
 10290  004B36  0E02               	movlw	2
 10291  004B38  0100               	movlb	0	; () banked
 10292  004B3A  6FA2               	movwf	fillRect@h& (0+255),b
 10293  004B3C  0E00               	movlw	0
 10294  004B3E  0100               	movlb	0	; () banked
 10295  004B40  6FA4               	movwf	(fillRect@color+1)& (0+255),b
 10296  004B42  0E00               	movlw	0
 10297  004B44  6FA3               	movwf	fillRect@color& (0+255),b
 10298  004B46  0100               	movlb	0	; () banked
 10299  004B48  51AD               	movf	Update_Setup_Screen_Cursor_Forward@xinc& (0+255),w,b
 10300  004B4A  0D02               	mullw	2
 10301  004B4C  50F3               	movf	prodl,w,c
 10302  004B4E  0F0E               	addlw	14
 10303  004B50  ECFA  F042         	call	_fillRect
 10304                           
 10305                           ;Setup_Time.c: 241: fillRect(15-1, 52+16, 25,2,0x07FF);
 10306  004B54  0E44               	movlw	68
 10307  004B56  0100               	movlb	0	; () banked
 10308  004B58  6FA0               	movwf	fillRect@y& (0+255),b
 10309  004B5A  0E19               	movlw	25
 10310  004B5C  0100               	movlb	0	; () banked
 10311  004B5E  6FA1               	movwf	fillRect@w& (0+255),b
 10312  004B60  0E02               	movlw	2
 10313  004B62  0100               	movlb	0	; () banked
 10314  004B64  6FA2               	movwf	fillRect@h& (0+255),b
 10315  004B66  0E07               	movlw	7
 10316  004B68  0100               	movlb	0	; () banked
 10317  004B6A  6FA4               	movwf	(fillRect@color+1)& (0+255),b
 10318  004B6C  69A3               	setf	fillRect@color& (0+255),b
 10319  004B6E  0E0E               	movlw	14
 10320  004B70  ECFA  F042         	call	_fillRect
 10321                           
 10322                           ;Setup_Time.c: 242: break;
 10323  004B74  D0DD               	goto	l1246
 10324  004B76                     l9485:
 10325                           
 10326                           ;Setup_Time.c: 245: fillRect(15-1, 52+16, 25,2,0x0000);
 10327  004B76  0E44               	movlw	68
 10328  004B78  0100               	movlb	0	; () banked
 10329  004B7A  6FA0               	movwf	fillRect@y& (0+255),b
 10330  004B7C  0E19               	movlw	25
 10331  004B7E  0100               	movlb	0	; () banked
 10332  004B80  6FA1               	movwf	fillRect@w& (0+255),b
 10333  004B82  0E02               	movlw	2
 10334  004B84  0100               	movlb	0	; () banked
 10335  004B86  6FA2               	movwf	fillRect@h& (0+255),b
 10336  004B88  0E00               	movlw	0
 10337  004B8A  0100               	movlb	0	; () banked
 10338  004B8C  6FA4               	movwf	(fillRect@color+1)& (0+255),b
 10339  004B8E  0E00               	movlw	0
 10340  004B90  6FA3               	movwf	fillRect@color& (0+255),b
 10341  004B92  0E0E               	movlw	14
 10342  004B94  ECFA  F042         	call	_fillRect
 10343                           
 10344                           ;Setup_Time.c: 246: fillRect(15-1+xinc, 52+16, 25,2,0x07FF);
 10345  004B98  0E44               	movlw	68
 10346  004B9A  0100               	movlb	0	; () banked
 10347  004B9C  6FA0               	movwf	fillRect@y& (0+255),b
 10348  004B9E  0E19               	movlw	25
 10349  004BA0  0100               	movlb	0	; () banked
 10350  004BA2  6FA1               	movwf	fillRect@w& (0+255),b
 10351  004BA4  0E02               	movlw	2
 10352  004BA6  0100               	movlb	0	; () banked
 10353  004BA8  6FA2               	movwf	fillRect@h& (0+255),b
 10354  004BAA  0E07               	movlw	7
 10355  004BAC  0100               	movlb	0	; () banked
 10356  004BAE  6FA4               	movwf	(fillRect@color+1)& (0+255),b
 10357  004BB0  69A3               	setf	fillRect@color& (0+255),b
 10358  004BB2  0100               	movlb	0	; () banked
 10359  004BB4  51AD               	movf	Update_Setup_Screen_Cursor_Forward@xinc& (0+255),w,b
 10360  004BB6  0F0E               	addlw	14
 10361  004BB8  ECFA  F042         	call	_fillRect
 10362                           
 10363                           ;Setup_Time.c: 247: break;
 10364  004BBC  D0B9               	goto	l1246
 10365  004BBE                     l9487:
 10366                           
 10367                           ;Setup_Time.c: 250: fillRect(15-1+xinc, 52+16, 25,2,0x0000);
 10368  004BBE  0E44               	movlw	68
 10369  004BC0  0100               	movlb	0	; () banked
 10370  004BC2  6FA0               	movwf	fillRect@y& (0+255),b
 10371  004BC4  0E19               	movlw	25
 10372  004BC6  0100               	movlb	0	; () banked
 10373  004BC8  6FA1               	movwf	fillRect@w& (0+255),b
 10374  004BCA  0E02               	movlw	2
 10375  004BCC  0100               	movlb	0	; () banked
 10376  004BCE  6FA2               	movwf	fillRect@h& (0+255),b
 10377  004BD0  0E00               	movlw	0
 10378  004BD2  0100               	movlb	0	; () banked
 10379  004BD4  6FA4               	movwf	(fillRect@color+1)& (0+255),b
 10380  004BD6  0E00               	movlw	0
 10381  004BD8  6FA3               	movwf	fillRect@color& (0+255),b
 10382  004BDA  0100               	movlb	0	; () banked
 10383  004BDC  51AD               	movf	Update_Setup_Screen_Cursor_Forward@xinc& (0+255),w,b
 10384  004BDE  0F0E               	addlw	14
 10385  004BE0  ECFA  F042         	call	_fillRect
 10386                           
 10387                           ;Setup_Time.c: 251: fillRect(15-1+2*xinc, 52+16, 25,2,0x07FF);
 10388  004BE4  0E44               	movlw	68
 10389  004BE6  0100               	movlb	0	; () banked
 10390  004BE8  6FA0               	movwf	fillRect@y& (0+255),b
 10391  004BEA  0E19               	movlw	25
 10392  004BEC  0100               	movlb	0	; () banked
 10393  004BEE  6FA1               	movwf	fillRect@w& (0+255),b
 10394  004BF0  0E02               	movlw	2
 10395  004BF2  0100               	movlb	0	; () banked
 10396  004BF4  6FA2               	movwf	fillRect@h& (0+255),b
 10397  004BF6  0E07               	movlw	7
 10398  004BF8  0100               	movlb	0	; () banked
 10399  004BFA  6FA4               	movwf	(fillRect@color+1)& (0+255),b
 10400  004BFC  69A3               	setf	fillRect@color& (0+255),b
 10401  004BFE  0100               	movlb	0	; () banked
 10402  004C00  51AD               	movf	Update_Setup_Screen_Cursor_Forward@xinc& (0+255),w,b
 10403  004C02  0D02               	mullw	2
 10404  004C04  50F3               	movf	prodl,w,c
 10405  004C06  0F0E               	addlw	14
 10406  004C08  ECFA  F042         	call	_fillRect
 10407                           
 10408                           ;Setup_Time.c: 252: break;
 10409  004C0C  D091               	goto	l1246
 10410  004C0E                     l9491:
 10411                           
 10412                           ;Setup_Time.c: 255: fillRect(15-1+2*xinc, 52+16, 25,2,0x0000);
 10413  004C0E  0E44               	movlw	68
 10414  004C10  0100               	movlb	0	; () banked
 10415  004C12  6FA0               	movwf	fillRect@y& (0+255),b
 10416  004C14  0E19               	movlw	25
 10417  004C16  0100               	movlb	0	; () banked
 10418  004C18  6FA1               	movwf	fillRect@w& (0+255),b
 10419  004C1A  0E02               	movlw	2
 10420  004C1C  0100               	movlb	0	; () banked
 10421  004C1E  6FA2               	movwf	fillRect@h& (0+255),b
 10422  004C20  0E00               	movlw	0
 10423  004C22  0100               	movlb	0	; () banked
 10424  004C24  6FA4               	movwf	(fillRect@color+1)& (0+255),b
 10425  004C26  0E00               	movlw	0
 10426  004C28  6FA3               	movwf	fillRect@color& (0+255),b
 10427  004C2A  0100               	movlb	0	; () banked
 10428  004C2C  51AD               	movf	Update_Setup_Screen_Cursor_Forward@xinc& (0+255),w,b
 10429  004C2E  0D02               	mullw	2
 10430  004C30  50F3               	movf	prodl,w,c
 10431  004C32  0F0E               	addlw	14
 10432  004C34  ECFA  F042         	call	_fillRect
 10433                           
 10434                           ;Setup_Time.c: 256: fillRect(15-1, 52+16+yinc, 25,2,0x07FF);
 10435  004C38  0100               	movlb	0	; () banked
 10436  004C3A  51AC               	movf	Update_Setup_Screen_Cursor_Forward@yinc& (0+255),w,b
 10437  004C3C  0F44               	addlw	68
 10438  004C3E  0100               	movlb	0	; () banked
 10439  004C40  6FA0               	movwf	fillRect@y& (0+255),b
 10440  004C42  0E19               	movlw	25
 10441  004C44  0100               	movlb	0	; () banked
 10442  004C46  6FA1               	movwf	fillRect@w& (0+255),b
 10443  004C48  0E02               	movlw	2
 10444  004C4A  0100               	movlb	0	; () banked
 10445  004C4C  6FA2               	movwf	fillRect@h& (0+255),b
 10446  004C4E  0E07               	movlw	7
 10447  004C50  0100               	movlb	0	; () banked
 10448  004C52  6FA4               	movwf	(fillRect@color+1)& (0+255),b
 10449  004C54  69A3               	setf	fillRect@color& (0+255),b
 10450  004C56  0E0E               	movlw	14
 10451  004C58  ECFA  F042         	call	_fillRect
 10452                           
 10453                           ;Setup_Time.c: 257: break;
 10454  004C5C  D069               	goto	l1246
 10455  004C5E                     l9495:
 10456                           
 10457                           ;Setup_Time.c: 260: fillRect(15-1, 52+16+yinc, 25,2,0x0000);
 10458  004C5E  0100               	movlb	0	; () banked
 10459  004C60  51AC               	movf	Update_Setup_Screen_Cursor_Forward@yinc& (0+255),w,b
 10460  004C62  0F44               	addlw	68
 10461  004C64  0100               	movlb	0	; () banked
 10462  004C66  6FA0               	movwf	fillRect@y& (0+255),b
 10463  004C68  0E19               	movlw	25
 10464  004C6A  0100               	movlb	0	; () banked
 10465  004C6C  6FA1               	movwf	fillRect@w& (0+255),b
 10466  004C6E  0E02               	movlw	2
 10467  004C70  0100               	movlb	0	; () banked
 10468  004C72  6FA2               	movwf	fillRect@h& (0+255),b
 10469  004C74  0E00               	movlw	0
 10470  004C76  0100               	movlb	0	; () banked
 10471  004C78  6FA4               	movwf	(fillRect@color+1)& (0+255),b
 10472  004C7A  0E00               	movlw	0
 10473  004C7C  6FA3               	movwf	fillRect@color& (0+255),b
 10474  004C7E  0E0E               	movlw	14
 10475  004C80  ECFA  F042         	call	_fillRect
 10476                           
 10477                           ;Setup_Time.c: 261: fillRect(15-1+xinc, 52+16+yinc, 25,2,0x07FF);
 10478  004C84  0100               	movlb	0	; () banked
 10479  004C86  51AC               	movf	Update_Setup_Screen_Cursor_Forward@yinc& (0+255),w,b
 10480  004C88  0F44               	addlw	68
 10481  004C8A  0100               	movlb	0	; () banked
 10482  004C8C  6FA0               	movwf	fillRect@y& (0+255),b
 10483  004C8E  0E19               	movlw	25
 10484  004C90  0100               	movlb	0	; () banked
 10485  004C92  6FA1               	movwf	fillRect@w& (0+255),b
 10486  004C94  0E02               	movlw	2
 10487  004C96  0100               	movlb	0	; () banked
 10488  004C98  6FA2               	movwf	fillRect@h& (0+255),b
 10489  004C9A  0E07               	movlw	7
 10490  004C9C  0100               	movlb	0	; () banked
 10491  004C9E  6FA4               	movwf	(fillRect@color+1)& (0+255),b
 10492  004CA0  69A3               	setf	fillRect@color& (0+255),b
 10493  004CA2  0100               	movlb	0	; () banked
 10494  004CA4  51AD               	movf	Update_Setup_Screen_Cursor_Forward@xinc& (0+255),w,b
 10495  004CA6  0F0E               	addlw	14
 10496  004CA8  ECFA  F042         	call	_fillRect
 10497                           
 10498                           ;Setup_Time.c: 262: break;
 10499  004CAC  D041               	goto	l1246
 10500  004CAE                     l9497:
 10501                           
 10502                           ;Setup_Time.c: 265: fillRect(15-1+xinc, 52+16+yinc, 25,2,0x0000);
 10503  004CAE  0100               	movlb	0	; () banked
 10504  004CB0  51AC               	movf	Update_Setup_Screen_Cursor_Forward@yinc& (0+255),w,b
 10505  004CB2  0F44               	addlw	68
 10506  004CB4  0100               	movlb	0	; () banked
 10507  004CB6  6FA0               	movwf	fillRect@y& (0+255),b
 10508  004CB8  0E19               	movlw	25
 10509  004CBA  0100               	movlb	0	; () banked
 10510  004CBC  6FA1               	movwf	fillRect@w& (0+255),b
 10511  004CBE  0E02               	movlw	2
 10512  004CC0  0100               	movlb	0	; () banked
 10513  004CC2  6FA2               	movwf	fillRect@h& (0+255),b
 10514  004CC4  0E00               	movlw	0
 10515  004CC6  0100               	movlb	0	; () banked
 10516  004CC8  6FA4               	movwf	(fillRect@color+1)& (0+255),b
 10517  004CCA  0E00               	movlw	0
 10518  004CCC  6FA3               	movwf	fillRect@color& (0+255),b
 10519  004CCE  0100               	movlb	0	; () banked
 10520  004CD0  51AD               	movf	Update_Setup_Screen_Cursor_Forward@xinc& (0+255),w,b
 10521  004CD2  0F0E               	addlw	14
 10522  004CD4  ECFA  F042         	call	_fillRect
 10523                           
 10524                           ;Setup_Time.c: 266: fillRect(15-1+2*xinc, 52+16+yinc, 25,2,0x07FF);
 10525  004CD8  0100               	movlb	0	; () banked
 10526  004CDA  51AC               	movf	Update_Setup_Screen_Cursor_Forward@yinc& (0+255),w,b
 10527  004CDC  0F44               	addlw	68
 10528  004CDE  0100               	movlb	0	; () banked
 10529  004CE0  6FA0               	movwf	fillRect@y& (0+255),b
 10530  004CE2  0E19               	movlw	25
 10531  004CE4  0100               	movlb	0	; () banked
 10532  004CE6  6FA1               	movwf	fillRect@w& (0+255),b
 10533  004CE8  0E02               	movlw	2
 10534  004CEA  0100               	movlb	0	; () banked
 10535  004CEC  6FA2               	movwf	fillRect@h& (0+255),b
 10536  004CEE  0E07               	movlw	7
 10537  004CF0  0100               	movlb	0	; () banked
 10538  004CF2  6FA4               	movwf	(fillRect@color+1)& (0+255),b
 10539  004CF4  69A3               	setf	fillRect@color& (0+255),b
 10540  004CF6  0100               	movlb	0	; () banked
 10541  004CF8  51AD               	movf	Update_Setup_Screen_Cursor_Forward@xinc& (0+255),w,b
 10542  004CFA  0D02               	mullw	2
 10543  004CFC  50F3               	movf	prodl,w,c
 10544  004CFE  0F0E               	addlw	14
 10545  004D00  ECFA  F042         	call	_fillRect
 10546                           
 10547                           ;Setup_Time.c: 268: }
 10548                           
 10549                           ;Setup_Time.c: 267: break;
 10550  004D04  D015               	goto	l1246
 10551  004D06                     l9503:
 10552  004D06  0100               	movlb	0	; () banked
 10553  004D08  51AB               	movf	Update_Setup_Screen_Cursor_Forward@field& (0+255),w,b
 10554                           
 10555                           ; Switch size 1, requested type "space"
 10556                           ; Number of cases is 6, Range of values is 0 to 5
 10557                           ; switch strategies available:
 10558                           ; Name         Instructions Cycles
 10559                           ; simple_byte           19    10 (average)
 10560                           ;	Chosen strategy is simple_byte
 10561  004D0A  0A00               	xorlw	0	; case 0
 10562  004D0C  B4D8               	btfsc	status,2,c
 10563  004D0E  D6F6               	goto	l9481
 10564  004D10  0A01               	xorlw	1	; case 1
 10565  004D12  B4D8               	btfsc	status,2,c
 10566  004D14  D730               	goto	l9485
 10567  004D16  0A03               	xorlw	3	; case 2
 10568  004D18  B4D8               	btfsc	status,2,c
 10569  004D1A  D751               	goto	l9487
 10570  004D1C  0A01               	xorlw	1	; case 3
 10571  004D1E  B4D8               	btfsc	status,2,c
 10572  004D20  D776               	goto	l9491
 10573  004D22  0A07               	xorlw	7	; case 4
 10574  004D24  B4D8               	btfsc	status,2,c
 10575  004D26  D79B               	goto	l9495
 10576  004D28  0A01               	xorlw	1	; case 5
 10577  004D2A  B4D8               	btfsc	status,2,c
 10578  004D2C  D7C0               	goto	l9497
 10579  004D2E  D000               	goto	l1246
 10580  004D30                     l1246:
 10581  004D30  0012               	return		;funcret
 10582  004D32                     __end_of_Update_Setup_Screen_Cursor_Forward:
 10583                           	opt stack 0
 10584                           tblptru	equ	0xFF8
 10585                           tblptrh	equ	0xFF7
 10586                           tblptrl	equ	0xFF6
 10587                           tablat	equ	0xFF5
 10588                           prodh	equ	0xFF4
 10589                           prodl	equ	0xFF3
 10590                           intcon	equ	0xFF2
 10591                           intcon2	equ	0xFF1
 10592                           postinc0	equ	0xFEE
 10593                           wreg	equ	0xFE8
 10594                           postdec1	equ	0xFE5
 10595                           fsr1l	equ	0xFE1
 10596                           postinc2	equ	0xFDE
 10597                           fsr2h	equ	0xFDA
 10598                           fsr2l	equ	0xFD9
 10599                           status	equ	0xFD8
 10600                           
 10601 ;; *************** function _Exit_Setup_Alarm_Time *****************
 10602 ;; Defined at:
 10603 ;;		line 128 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Alarm_Time.c"
 10604 ;; Parameters:    Size  Location     Type
 10605 ;;		None
 10606 ;; Auto vars:     Size  Location     Type
 10607 ;;		None
 10608 ;; Return value:  Size  Location     Type
 10609 ;;		None               void
 10610 ;; Registers used:
 10611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10612 ;; Tracked objects:
 10613 ;;		On entry : 0/0
 10614 ;;		On exit  : 0/0
 10615 ;;		Unchanged: 0/0
 10616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10621 ;;Total ram usage:        0 bytes
 10622 ;; Hardware stack levels used:    1
 10623 ;; Hardware stack levels required when called:   14
 10624 ;; This function calls:
 10625 ;;		_DS3231_Read_Time
 10626 ;;		_Initialize_Screen
 10627 ;; This function is called by:
 10628 ;;		_Do_Setup_Alarm_Time
 10629 ;; This function uses a non-reentrant model
 10630 ;;
 10631                           
 10632                           	psect	text43
 10633  009264                     __ptext43:
 10634                           	opt stack 0
 10635  009264                     _Exit_Setup_Alarm_Time:
 10636                           	opt stack 15
 10637                           
 10638                           ;Setup_Alarm_Time.c: 130: DS3231_Read_Time();
 10639                           
 10640                           ;incstack = 0
 10641  009264  ECAB  F041         	call	_DS3231_Read_Time	;wreg free
 10642                           
 10643                           ;Setup_Alarm_Time.c: 131: Initialize_Screen();
 10644  009268  ECAD  F01D         	call	_Initialize_Screen	;wreg free
 10645                           
 10646                           ;Setup_Alarm_Time.c: 132: In_Alarm_Time_Setup = 0;
 10647  00926C  0E00               	movlw	0
 10648  00926E  0101               	movlb	1	; () banked
 10649  009270  6FB5               	movwf	_In_Alarm_Time_Setup& (0+255),b
 10650                           
 10651                           ; BSR set to: 1
 10652  009272  0012               	return		;funcret
 10653  009274                     __end_of_Exit_Setup_Alarm_Time:
 10654                           	opt stack 0
 10655                           tblptru	equ	0xFF8
 10656                           tblptrh	equ	0xFF7
 10657                           tblptrl	equ	0xFF6
 10658                           tablat	equ	0xFF5
 10659                           prodh	equ	0xFF4
 10660                           prodl	equ	0xFF3
 10661                           intcon	equ	0xFF2
 10662                           intcon2	equ	0xFF1
 10663                           postinc0	equ	0xFEE
 10664                           wreg	equ	0xFE8
 10665                           postdec1	equ	0xFE5
 10666                           fsr1l	equ	0xFE1
 10667                           postinc2	equ	0xFDE
 10668                           fsr2h	equ	0xFDA
 10669                           fsr2l	equ	0xFD9
 10670                           status	equ	0xFD8
 10671                           
 10672 ;; *************** function _Do_Save_New_Alarm_Time *****************
 10673 ;; Defined at:
 10674 ;;		line 135 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Alarm_Time.c"
 10675 ;; Parameters:    Size  Location     Type
 10676 ;;		None
 10677 ;; Auto vars:     Size  Location     Type
 10678 ;;		None
 10679 ;; Return value:  Size  Location     Type
 10680 ;;		None               void
 10681 ;; Registers used:
 10682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10683 ;; Tracked objects:
 10684 ;;		On entry : 0/0
 10685 ;;		On exit  : 0/0
 10686 ;;		Unchanged: 0/0
 10687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10692 ;;Total ram usage:        0 bytes
 10693 ;; Hardware stack levels used:    1
 10694 ;; Hardware stack levels required when called:   14
 10695 ;; This function calls:
 10696 ;;		_DS3231_Read_Alarm_Time
 10697 ;;		_DS3231_Read_Time
 10698 ;;		_DS3231_Write_Alarm_Time
 10699 ;;		_Initialize_Screen
 10700 ;; This function is called by:
 10701 ;;		_Do_Setup_Alarm_Time
 10702 ;; This function uses a non-reentrant model
 10703 ;;
 10704                           
 10705                           	psect	text44
 10706  0090E2                     __ptext44:
 10707                           	opt stack 0
 10708  0090E2                     _Do_Save_New_Alarm_Time:
 10709                           	opt stack 15
 10710                           
 10711                           ;Setup_Alarm_Time.c: 137: DS3231_Write_Alarm_Time();
 10712                           
 10713                           ; BSR set to: 1
 10714                           ;incstack = 0
 10715  0090E2  EC3A  F03E         	call	_DS3231_Write_Alarm_Time	;wreg free
 10716                           
 10717                           ;Setup_Alarm_Time.c: 138: DS3231_Read_Alarm_Time();
 10718  0090E6  EC50  F044         	call	_DS3231_Read_Alarm_Time	;wreg free
 10719                           
 10720                           ;Setup_Alarm_Time.c: 139: DS3231_Read_Time();
 10721  0090EA  ECAB  F041         	call	_DS3231_Read_Time	;wreg free
 10722                           
 10723                           ;Setup_Alarm_Time.c: 140: Initialize_Screen();
 10724  0090EE  ECAD  F01D         	call	_Initialize_Screen	;wreg free
 10725                           
 10726                           ;Setup_Alarm_Time.c: 141: In_Alarm_Time_Setup = 0;
 10727  0090F2  0E00               	movlw	0
 10728  0090F4  0101               	movlb	1	; () banked
 10729  0090F6  6FB5               	movwf	_In_Alarm_Time_Setup& (0+255),b
 10730                           
 10731                           ; BSR set to: 1
 10732  0090F8  0012               	return		;funcret
 10733  0090FA                     __end_of_Do_Save_New_Alarm_Time:
 10734                           	opt stack 0
 10735                           tblptru	equ	0xFF8
 10736                           tblptrh	equ	0xFF7
 10737                           tblptrl	equ	0xFF6
 10738                           tablat	equ	0xFF5
 10739                           prodh	equ	0xFF4
 10740                           prodl	equ	0xFF3
 10741                           intcon	equ	0xFF2
 10742                           intcon2	equ	0xFF1
 10743                           postinc0	equ	0xFEE
 10744                           wreg	equ	0xFE8
 10745                           postdec1	equ	0xFE5
 10746                           fsr1l	equ	0xFE1
 10747                           postinc2	equ	0xFDE
 10748                           fsr2h	equ	0xFDA
 10749                           fsr2l	equ	0xFD9
 10750                           status	equ	0xFD8
 10751                           
 10752 ;; *************** function _Initialize_Screen *****************
 10753 ;; Defined at:
 10754 ;;		line 36 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Main_Screen.c"
 10755 ;; Parameters:    Size  Location     Type
 10756 ;;		None
 10757 ;; Auto vars:     Size  Location     Type
 10758 ;;		None
 10759 ;; Return value:  Size  Location     Type
 10760 ;;                  2  353[None  ] int 
 10761 ;; Registers used:
 10762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10763 ;; Tracked objects:
 10764 ;;		On entry : 0/0
 10765 ;;		On exit  : 0/0
 10766 ;;		Unchanged: 0/0
 10767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10772 ;;Total ram usage:        0 bytes
 10773 ;; Hardware stack levels used:    1
 10774 ;; Hardware stack levels required when called:   13
 10775 ;; This function calls:
 10776 ;;		_LCD_Reset
 10777 ;;		_TFT_GreenTab_Initialize
 10778 ;;		_drawCircle
 10779 ;;		_drawtext
 10780 ;;		_fillScreen
 10781 ;;		_strcpy
 10782 ;; This function is called by:
 10783 ;;		_main
 10784 ;;		_Exit_Setup_Alarm_Time
 10785 ;;		_Do_Save_New_Alarm_Time
 10786 ;;		_Exit_Setup_Fan_Temp
 10787 ;;		_Do_Save_New_Fan_Temp
 10788 ;;		_Do_Save_New_Time
 10789 ;;		_Exit_Time_Setup
 10790 ;; This function uses a non-reentrant model
 10791 ;;
 10792                           
 10793                           	psect	text45
 10794  003B5A                     __ptext45:
 10795                           	opt stack 0
 10796  003B5A                     _Initialize_Screen:
 10797                           	opt stack 15
 10798                           
 10799                           ;Main_Screen.c: 38: LCD_Reset();
 10800                           
 10801                           ; BSR set to: 1
 10802                           ;incstack = 0
 10803  003B5A  ECBD  F048         	call	_LCD_Reset	;wreg free
 10804                           
 10805                           ;Main_Screen.c: 39: TFT_GreenTab_Initialize();
 10806  003B5E  EC2F  F047         	call	_TFT_GreenTab_Initialize	;wreg free
 10807                           
 10808                           ;Main_Screen.c: 40: fillScreen(0x0000);
 10809  003B62  0E00               	movlw	0
 10810  003B64  0100               	movlb	0	; () banked
 10811  003B66  6FA2               	movwf	(fillScreen@color+1)& (0+255),b
 10812  003B68  0E00               	movlw	0
 10813  003B6A  6FA1               	movwf	fillScreen@color& (0+255),b
 10814  003B6C  ECBB  F047         	call	_fillScreen	;wreg free
 10815                           
 10816                           ;Main_Screen.c: 42: strcpy(txt, "ECE3301L Sp21 Final\0");
 10817  003B70  C0E4  F08E         	movff	_txt,strcpy@to
 10818  003B74  C0E5  F08F         	movff	_txt+1,strcpy@to+1
 10819  003B78  0E04               	movlw	low STR_7
 10820  003B7A  0100               	movlb	0	; () banked
 10821  003B7C  6F90               	movwf	strcpy@from& (0+255),b
 10822  003B7E  0EFF               	movlw	high STR_7
 10823  003B80  0100               	movlb	0	; () banked
 10824  003B82  6F91               	movwf	(strcpy@from+1)& (0+255),b
 10825  003B84  EC9B  F046         	call	_strcpy	;wreg free
 10826                           
 10827                           ;Main_Screen.c: 43: drawtext(1 , 1, txt, 0xFFFF , 0x0000, 1);
 10828  003B88  0E01               	movlw	1
 10829  003B8A  0100               	movlb	0	; () banked
 10830  003B8C  6FB6               	movwf	drawtext@y& (0+255),b
 10831  003B8E  C0E4  F0B7         	movff	_txt,drawtext@_text
 10832  003B92  C0E5  F0B8         	movff	_txt+1,drawtext@_text+1
 10833  003B96  0EFF               	movlw	255
 10834  003B98  0100               	movlb	0	; () banked
 10835  003B9A  6FBA               	movwf	(drawtext@color+1)& (0+255),b
 10836  003B9C  69B9               	setf	drawtext@color& (0+255),b
 10837  003B9E  0E00               	movlw	0
 10838  003BA0  0100               	movlb	0	; () banked
 10839  003BA2  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
 10840  003BA4  0E00               	movlw	0
 10841  003BA6  6FBB               	movwf	drawtext@bg& (0+255),b
 10842  003BA8  0E01               	movlw	1
 10843  003BAA  0100               	movlb	0	; () banked
 10844  003BAC  6FBD               	movwf	drawtext@size& (0+255),b
 10845  003BAE  0E01               	movlw	1
 10846  003BB0  EC0B  F032         	call	_drawtext
 10847                           
 10848                           ;Main_Screen.c: 45: strcpy(txt, "Temperature:");
 10849  003BB4  C0E4  F08E         	movff	_txt,strcpy@to
 10850  003BB8  C0E5  F08F         	movff	_txt+1,strcpy@to+1
 10851  003BBC  0E76               	movlw	low STR_8
 10852  003BBE  0100               	movlb	0	; () banked
 10853  003BC0  6F90               	movwf	strcpy@from& (0+255),b
 10854  003BC2  0EFF               	movlw	high STR_8
 10855  003BC4  0100               	movlb	0	; () banked
 10856  003BC6  6F91               	movwf	(strcpy@from+1)& (0+255),b
 10857  003BC8  EC9B  F046         	call	_strcpy	;wreg free
 10858                           
 10859                           ;Main_Screen.c: 46: drawtext(24 , 11 , txt, 0xF81F, 0x0000, 1);
 10860  003BCC  0E0B               	movlw	11
 10861  003BCE  0100               	movlb	0	; () banked
 10862  003BD0  6FB6               	movwf	drawtext@y& (0+255),b
 10863  003BD2  C0E4  F0B7         	movff	_txt,drawtext@_text
 10864  003BD6  C0E5  F0B8         	movff	_txt+1,drawtext@_text+1
 10865  003BDA  0EF8               	movlw	248
 10866  003BDC  0100               	movlb	0	; () banked
 10867  003BDE  6FBA               	movwf	(drawtext@color+1)& (0+255),b
 10868  003BE0  0E1F               	movlw	31
 10869  003BE2  6FB9               	movwf	drawtext@color& (0+255),b
 10870  003BE4  0E00               	movlw	0
 10871  003BE6  0100               	movlb	0	; () banked
 10872  003BE8  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
 10873  003BEA  0E00               	movlw	0
 10874  003BEC  6FBB               	movwf	drawtext@bg& (0+255),b
 10875  003BEE  0E01               	movlw	1
 10876  003BF0  0100               	movlb	0	; () banked
 10877  003BF2  6FBD               	movwf	drawtext@size& (0+255),b
 10878  003BF4  0E18               	movlw	24
 10879  003BF6  EC0B  F032         	call	_drawtext
 10880                           
 10881                           ;Main_Screen.c: 47: drawCircle(40, 23 , 2 , 0xFFE0);
 10882  003BFA  0E00               	movlw	0
 10883  003BFC  0100               	movlb	0	; () banked
 10884  003BFE  6F9A               	movwf	(drawCircle@x0+1)& (0+255),b
 10885  003C00  0E28               	movlw	40
 10886  003C02  6F99               	movwf	drawCircle@x0& (0+255),b
 10887  003C04  0E00               	movlw	0
 10888  003C06  0100               	movlb	0	; () banked
 10889  003C08  6F9C               	movwf	(drawCircle@y0+1)& (0+255),b
 10890  003C0A  0E17               	movlw	23
 10891  003C0C  6F9B               	movwf	drawCircle@y0& (0+255),b
 10892  003C0E  0E00               	movlw	0
 10893  003C10  0100               	movlb	0	; () banked
 10894  003C12  6F9E               	movwf	(drawCircle@r+1)& (0+255),b
 10895  003C14  0E02               	movlw	2
 10896  003C16  6F9D               	movwf	drawCircle@r& (0+255),b
 10897  003C18  0EFF               	movlw	255
 10898  003C1A  0100               	movlb	0	; () banked
 10899  003C1C  6FA0               	movwf	(drawCircle@color+1)& (0+255),b
 10900  003C1E  0EE0               	movlw	224
 10901  003C20  6F9F               	movwf	drawCircle@color& (0+255),b
 10902  003C22  EC4E  F024         	call	_drawCircle	;wreg free
 10903                           
 10904                           ;Main_Screen.c: 48: strcpy(txt, "C/");
 10905  003C26  C0E4  F08E         	movff	_txt,strcpy@to
 10906  003C2A  C0E5  F08F         	movff	_txt+1,strcpy@to+1
 10907  003C2E  0EF6               	movlw	low STR_9
 10908  003C30  0100               	movlb	0	; () banked
 10909  003C32  6F90               	movwf	strcpy@from& (0+255),b
 10910  003C34  0EFF               	movlw	high STR_9
 10911  003C36  0100               	movlb	0	; () banked
 10912  003C38  6F91               	movwf	(strcpy@from+1)& (0+255),b
 10913  003C3A  EC9B  F046         	call	_strcpy	;wreg free
 10914                           
 10915                           ;Main_Screen.c: 49: drawtext(45 , 23, txt, 0xFFE0 , 0x0000, 2);
 10916  003C3E  0E17               	movlw	23
 10917  003C40  0100               	movlb	0	; () banked
 10918  003C42  6FB6               	movwf	drawtext@y& (0+255),b
 10919  003C44  C0E4  F0B7         	movff	_txt,drawtext@_text
 10920  003C48  C0E5  F0B8         	movff	_txt+1,drawtext@_text+1
 10921  003C4C  0EFF               	movlw	255
 10922  003C4E  0100               	movlb	0	; () banked
 10923  003C50  6FBA               	movwf	(drawtext@color+1)& (0+255),b
 10924  003C52  0EE0               	movlw	224
 10925  003C54  6FB9               	movwf	drawtext@color& (0+255),b
 10926  003C56  0E00               	movlw	0
 10927  003C58  0100               	movlb	0	; () banked
 10928  003C5A  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
 10929  003C5C  0E00               	movlw	0
 10930  003C5E  6FBB               	movwf	drawtext@bg& (0+255),b
 10931  003C60  0E02               	movlw	2
 10932  003C62  0100               	movlb	0	; () banked
 10933  003C64  6FBD               	movwf	drawtext@size& (0+255),b
 10934  003C66  0E2D               	movlw	45
 10935  003C68  EC0B  F032         	call	_drawtext
 10936                           
 10937                           ;Main_Screen.c: 50: strcpy(txt, "F");
 10938  003C6C  C0E4  F08E         	movff	_txt,strcpy@to
 10939  003C70  C0E5  F08F         	movff	_txt+1,strcpy@to+1
 10940  003C74  0EF0               	movlw	low (STR_22+2)
 10941  003C76  0100               	movlb	0	; () banked
 10942  003C78  6F90               	movwf	strcpy@from& (0+255),b
 10943  003C7A  0EFF               	movlw	high (STR_22+2)
 10944  003C7C  0100               	movlb	0	; () banked
 10945  003C7E  6F91               	movwf	(strcpy@from+1)& (0+255),b
 10946  003C80  EC9B  F046         	call	_strcpy	;wreg free
 10947                           
 10948                           ;Main_Screen.c: 51: drawCircle(110, 23 , 2 , 0xFFE0);
 10949  003C84  0E00               	movlw	0
 10950  003C86  0100               	movlb	0	; () banked
 10951  003C88  6F9A               	movwf	(drawCircle@x0+1)& (0+255),b
 10952  003C8A  0E6E               	movlw	110
 10953  003C8C  6F99               	movwf	drawCircle@x0& (0+255),b
 10954  003C8E  0E00               	movlw	0
 10955  003C90  0100               	movlb	0	; () banked
 10956  003C92  6F9C               	movwf	(drawCircle@y0+1)& (0+255),b
 10957  003C94  0E17               	movlw	23
 10958  003C96  6F9B               	movwf	drawCircle@y0& (0+255),b
 10959  003C98  0E00               	movlw	0
 10960  003C9A  0100               	movlb	0	; () banked
 10961  003C9C  6F9E               	movwf	(drawCircle@r+1)& (0+255),b
 10962  003C9E  0E02               	movlw	2
 10963  003CA0  6F9D               	movwf	drawCircle@r& (0+255),b
 10964  003CA2  0EFF               	movlw	255
 10965  003CA4  0100               	movlb	0	; () banked
 10966  003CA6  6FA0               	movwf	(drawCircle@color+1)& (0+255),b
 10967  003CA8  0EE0               	movlw	224
 10968  003CAA  6F9F               	movwf	drawCircle@color& (0+255),b
 10969  003CAC  EC4E  F024         	call	_drawCircle	;wreg free
 10970                           
 10971                           ;Main_Screen.c: 52: drawtext(115 , 23, txt, 0xFFE0 , 0x0000, 2);
 10972  003CB0  0E17               	movlw	23
 10973  003CB2  0100               	movlb	0	; () banked
 10974  003CB4  6FB6               	movwf	drawtext@y& (0+255),b
 10975  003CB6  C0E4  F0B7         	movff	_txt,drawtext@_text
 10976  003CBA  C0E5  F0B8         	movff	_txt+1,drawtext@_text+1
 10977  003CBE  0EFF               	movlw	255
 10978  003CC0  0100               	movlb	0	; () banked
 10979  003CC2  6FBA               	movwf	(drawtext@color+1)& (0+255),b
 10980  003CC4  0EE0               	movlw	224
 10981  003CC6  6FB9               	movwf	drawtext@color& (0+255),b
 10982  003CC8  0E00               	movlw	0
 10983  003CCA  0100               	movlb	0	; () banked
 10984  003CCC  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
 10985  003CCE  0E00               	movlw	0
 10986  003CD0  6FBB               	movwf	drawtext@bg& (0+255),b
 10987  003CD2  0E02               	movlw	2
 10988  003CD4  0100               	movlb	0	; () banked
 10989  003CD6  6FBD               	movwf	drawtext@size& (0+255),b
 10990  003CD8  0E73               	movlw	115
 10991  003CDA  EC0B  F032         	call	_drawtext
 10992                           
 10993                           ;Main_Screen.c: 53: strcpy(txt, "Time");
 10994  003CDE  C0E4  F08E         	movff	_txt,strcpy@to
 10995  003CE2  C0E5  F08F         	movff	_txt+1,strcpy@to+1
 10996  003CE6  0EC4               	movlw	low (STR_13+6)
 10997  003CE8  0100               	movlb	0	; () banked
 10998  003CEA  6F90               	movwf	strcpy@from& (0+255),b
 10999  003CEC  0EFF               	movlw	high (STR_13+6)
 11000  003CEE  0100               	movlb	0	; () banked
 11001  003CF0  6F91               	movwf	(strcpy@from+1)& (0+255),b
 11002  003CF2  EC9B  F046         	call	_strcpy	;wreg free
 11003                           
 11004                           ;Main_Screen.c: 54: drawtext(50 , 40 , txt, 0x001F , 0x0000, 1);
 11005  003CF6  0E28               	movlw	40
 11006  003CF8  0100               	movlb	0	; () banked
 11007  003CFA  6FB6               	movwf	drawtext@y& (0+255),b
 11008  003CFC  C0E4  F0B7         	movff	_txt,drawtext@_text
 11009  003D00  C0E5  F0B8         	movff	_txt+1,drawtext@_text+1
 11010  003D04  0E00               	movlw	0
 11011  003D06  0100               	movlb	0	; () banked
 11012  003D08  6FBA               	movwf	(drawtext@color+1)& (0+255),b
 11013  003D0A  0E1F               	movlw	31
 11014  003D0C  6FB9               	movwf	drawtext@color& (0+255),b
 11015  003D0E  0E00               	movlw	0
 11016  003D10  0100               	movlb	0	; () banked
 11017  003D12  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
 11018  003D14  0E00               	movlw	0
 11019  003D16  6FBB               	movwf	drawtext@bg& (0+255),b
 11020  003D18  0E01               	movlw	1
 11021  003D1A  0100               	movlb	0	; () banked
 11022  003D1C  6FBD               	movwf	drawtext@size& (0+255),b
 11023  003D1E  0E32               	movlw	50
 11024  003D20  EC0B  F032         	call	_drawtext
 11025                           
 11026                           ;Main_Screen.c: 55: strcpy(txt, "Date");
 11027  003D24  C0E4  F08E         	movff	_txt,strcpy@to
 11028  003D28  C0E5  F08F         	movff	_txt+1,strcpy@to+1
 11029  003D2C  0EE0               	movlw	low STR_12
 11030  003D2E  0100               	movlb	0	; () banked
 11031  003D30  6F90               	movwf	strcpy@from& (0+255),b
 11032  003D32  0EFF               	movlw	high STR_12
 11033  003D34  0100               	movlb	0	; () banked
 11034  003D36  6F91               	movwf	(strcpy@from+1)& (0+255),b
 11035  003D38  EC9B  F046         	call	_strcpy	;wreg free
 11036                           
 11037                           ;Main_Screen.c: 56: drawtext(50 , 71 , txt, 0xF800 , 0x0000, 1);
 11038  003D3C  0E47               	movlw	71
 11039  003D3E  0100               	movlb	0	; () banked
 11040  003D40  6FB6               	movwf	drawtext@y& (0+255),b
 11041  003D42  C0E4  F0B7         	movff	_txt,drawtext@_text
 11042  003D46  C0E5  F0B8         	movff	_txt+1,drawtext@_text+1
 11043  003D4A  0EF8               	movlw	248
 11044  003D4C  0100               	movlb	0	; () banked
 11045  003D4E  6FBA               	movwf	(drawtext@color+1)& (0+255),b
 11046  003D50  0E00               	movlw	0
 11047  003D52  6FB9               	movwf	drawtext@color& (0+255),b
 11048  003D54  0E00               	movlw	0
 11049  003D56  0100               	movlb	0	; () banked
 11050  003D58  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
 11051  003D5A  0E00               	movlw	0
 11052  003D5C  6FBB               	movwf	drawtext@bg& (0+255),b
 11053  003D5E  0E01               	movlw	1
 11054  003D60  0100               	movlb	0	; () banked
 11055  003D62  6FBD               	movwf	drawtext@size& (0+255),b
 11056  003D64  0E32               	movlw	50
 11057  003D66  EC0B  F032         	call	_drawtext
 11058                           
 11059                           ;Main_Screen.c: 57: strcpy(txt, "Alarm Time");
 11060  003D6A  C0E4  F08E         	movff	_txt,strcpy@to
 11061  003D6E  C0E5  F08F         	movff	_txt+1,strcpy@to+1
 11062  003D72  0EBE               	movlw	low STR_13
 11063  003D74  0100               	movlb	0	; () banked
 11064  003D76  6F90               	movwf	strcpy@from& (0+255),b
 11065  003D78  0EFF               	movlw	high STR_13
 11066  003D7A  0100               	movlb	0	; () banked
 11067  003D7C  6F91               	movwf	(strcpy@from+1)& (0+255),b
 11068  003D7E  EC9B  F046         	call	_strcpy	;wreg free
 11069                           
 11070                           ;Main_Screen.c: 58: drawtext(4 , 100 , txt, 0xFFE0, 0x0000, 1);
 11071  003D82  0E64               	movlw	100
 11072  003D84  0100               	movlb	0	; () banked
 11073  003D86  6FB6               	movwf	drawtext@y& (0+255),b
 11074  003D88  C0E4  F0B7         	movff	_txt,drawtext@_text
 11075  003D8C  C0E5  F0B8         	movff	_txt+1,drawtext@_text+1
 11076  003D90  0EFF               	movlw	255
 11077  003D92  0100               	movlb	0	; () banked
 11078  003D94  6FBA               	movwf	(drawtext@color+1)& (0+255),b
 11079  003D96  0EE0               	movlw	224
 11080  003D98  6FB9               	movwf	drawtext@color& (0+255),b
 11081  003D9A  0E00               	movlw	0
 11082  003D9C  0100               	movlb	0	; () banked
 11083  003D9E  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
 11084  003DA0  0E00               	movlw	0
 11085  003DA2  6FBB               	movwf	drawtext@bg& (0+255),b
 11086  003DA4  0E01               	movlw	1
 11087  003DA6  0100               	movlb	0	; () banked
 11088  003DA8  6FBD               	movwf	drawtext@size& (0+255),b
 11089  003DAA  0E04               	movlw	4
 11090  003DAC  EC0B  F032         	call	_drawtext
 11091                           
 11092                           ;Main_Screen.c: 59: strcpy(txt, "Alarm SW");
 11093  003DB0  C0E4  F08E         	movff	_txt,strcpy@to
 11094  003DB4  C0E5  F08F         	movff	_txt+1,strcpy@to+1
 11095  003DB8  0EC9               	movlw	low STR_14
 11096  003DBA  0100               	movlb	0	; () banked
 11097  003DBC  6F90               	movwf	strcpy@from& (0+255),b
 11098  003DBE  0EFF               	movlw	high STR_14
 11099  003DC0  0100               	movlb	0	; () banked
 11100  003DC2  6F91               	movwf	(strcpy@from+1)& (0+255),b
 11101  003DC4  EC9B  F046         	call	_strcpy	;wreg free
 11102                           
 11103                           ;Main_Screen.c: 60: drawtext(77, 100, txt, 0xFFE0, 0x0000, 1);
 11104  003DC8  0E64               	movlw	100
 11105  003DCA  0100               	movlb	0	; () banked
 11106  003DCC  6FB6               	movwf	drawtext@y& (0+255),b
 11107  003DCE  C0E4  F0B7         	movff	_txt,drawtext@_text
 11108  003DD2  C0E5  F0B8         	movff	_txt+1,drawtext@_text+1
 11109  003DD6  0EFF               	movlw	255
 11110  003DD8  0100               	movlb	0	; () banked
 11111  003DDA  6FBA               	movwf	(drawtext@color+1)& (0+255),b
 11112  003DDC  0EE0               	movlw	224
 11113  003DDE  6FB9               	movwf	drawtext@color& (0+255),b
 11114  003DE0  0E00               	movlw	0
 11115  003DE2  0100               	movlb	0	; () banked
 11116  003DE4  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
 11117  003DE6  0E00               	movlw	0
 11118  003DE8  6FBB               	movwf	drawtext@bg& (0+255),b
 11119  003DEA  0E01               	movlw	1
 11120  003DEC  0100               	movlb	0	; () banked
 11121  003DEE  6FBD               	movwf	drawtext@size& (0+255),b
 11122  003DF0  0E4D               	movlw	77
 11123  003DF2  EC0B  F032         	call	_drawtext
 11124                           
 11125                           ;Main_Screen.c: 61: strcpy(txt, "FAN Set Temp");
 11126  003DF6  C0E4  F08E         	movff	_txt,strcpy@to
 11127  003DFA  C0E5  F08F         	movff	_txt+1,strcpy@to+1
 11128  003DFE  0E83               	movlw	low STR_15
 11129  003E00  0100               	movlb	0	; () banked
 11130  003E02  6F90               	movwf	strcpy@from& (0+255),b
 11131  003E04  0EFF               	movlw	high STR_15
 11132  003E06  0100               	movlb	0	; () banked
 11133  003E08  6F91               	movwf	(strcpy@from+1)& (0+255),b
 11134  003E0A  EC9B  F046         	call	_strcpy	;wreg free
 11135                           
 11136                           ;Main_Screen.c: 62: drawtext(6, 120, txt, 0x001F , 0x0000, 1);
 11137  003E0E  0E78               	movlw	120
 11138  003E10  0100               	movlb	0	; () banked
 11139  003E12  6FB6               	movwf	drawtext@y& (0+255),b
 11140  003E14  C0E4  F0B7         	movff	_txt,drawtext@_text
 11141  003E18  C0E5  F0B8         	movff	_txt+1,drawtext@_text+1
 11142  003E1C  0E00               	movlw	0
 11143  003E1E  0100               	movlb	0	; () banked
 11144  003E20  6FBA               	movwf	(drawtext@color+1)& (0+255),b
 11145  003E22  0E1F               	movlw	31
 11146  003E24  6FB9               	movwf	drawtext@color& (0+255),b
 11147  003E26  0E00               	movlw	0
 11148  003E28  0100               	movlb	0	; () banked
 11149  003E2A  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
 11150  003E2C  0E00               	movlw	0
 11151  003E2E  6FBB               	movwf	drawtext@bg& (0+255),b
 11152  003E30  0E01               	movlw	1
 11153  003E32  0100               	movlb	0	; () banked
 11154  003E34  6FBD               	movwf	drawtext@size& (0+255),b
 11155  003E36  0E06               	movlw	6
 11156  003E38  EC0B  F032         	call	_drawtext
 11157                           
 11158                           ;Main_Screen.c: 63: strcpy(txt, "Fan SW");
 11159  003E3C  C0E4  F08E         	movff	_txt,strcpy@to
 11160  003E40  C0E5  F08F         	movff	_txt+1,strcpy@to+1
 11161  003E44  0ED2               	movlw	low STR_16
 11162  003E46  0100               	movlb	0	; () banked
 11163  003E48  6F90               	movwf	strcpy@from& (0+255),b
 11164  003E4A  0EFF               	movlw	high STR_16
 11165  003E4C  0100               	movlb	0	; () banked
 11166  003E4E  6F91               	movwf	(strcpy@from+1)& (0+255),b
 11167  003E50  EC9B  F046         	call	_strcpy	;wreg free
 11168                           
 11169                           ;Main_Screen.c: 64: drawtext(85, 120, txt, 0x001F , 0x0000, 1);
 11170  003E54  0E78               	movlw	120
 11171  003E56  0100               	movlb	0	; () banked
 11172  003E58  6FB6               	movwf	drawtext@y& (0+255),b
 11173  003E5A  C0E4  F0B7         	movff	_txt,drawtext@_text
 11174  003E5E  C0E5  F0B8         	movff	_txt+1,drawtext@_text+1
 11175  003E62  0E00               	movlw	0
 11176  003E64  0100               	movlb	0	; () banked
 11177  003E66  6FBA               	movwf	(drawtext@color+1)& (0+255),b
 11178  003E68  0E1F               	movlw	31
 11179  003E6A  6FB9               	movwf	drawtext@color& (0+255),b
 11180  003E6C  0E00               	movlw	0
 11181  003E6E  0100               	movlb	0	; () banked
 11182  003E70  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
 11183  003E72  0E00               	movlw	0
 11184  003E74  6FBB               	movwf	drawtext@bg& (0+255),b
 11185  003E76  0E01               	movlw	1
 11186  003E78  0100               	movlb	0	; () banked
 11187  003E7A  6FBD               	movwf	drawtext@size& (0+255),b
 11188  003E7C  0E55               	movlw	85
 11189  003E7E  EC0B  F032         	call	_drawtext
 11190                           
 11191                           ;Main_Screen.c: 65: strcpy(txt, "DC");
 11192  003E82  C0E4  F08E         	movff	_txt,strcpy@to
 11193  003E86  C0E5  F08F         	movff	_txt+1,strcpy@to+1
 11194  003E8A  0EF9               	movlw	low STR_17
 11195  003E8C  0100               	movlb	0	; () banked
 11196  003E8E  6F90               	movwf	strcpy@from& (0+255),b
 11197  003E90  0EFF               	movlw	high STR_17
 11198  003E92  0100               	movlb	0	; () banked
 11199  003E94  6F91               	movwf	(strcpy@from+1)& (0+255),b
 11200  003E96  EC9B  F046         	call	_strcpy	;wreg free
 11201                           
 11202                           ;Main_Screen.c: 66: drawtext(12, 140, txt, 0xFFFF , 0x0000, 1);
 11203  003E9A  0E8C               	movlw	140
 11204  003E9C  0100               	movlb	0	; () banked
 11205  003E9E  6FB6               	movwf	drawtext@y& (0+255),b
 11206  003EA0  C0E4  F0B7         	movff	_txt,drawtext@_text
 11207  003EA4  C0E5  F0B8         	movff	_txt+1,drawtext@_text+1
 11208  003EA8  0EFF               	movlw	255
 11209  003EAA  0100               	movlb	0	; () banked
 11210  003EAC  6FBA               	movwf	(drawtext@color+1)& (0+255),b
 11211  003EAE  69B9               	setf	drawtext@color& (0+255),b
 11212  003EB0  0E00               	movlw	0
 11213  003EB2  0100               	movlb	0	; () banked
 11214  003EB4  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
 11215  003EB6  0E00               	movlw	0
 11216  003EB8  6FBB               	movwf	drawtext@bg& (0+255),b
 11217  003EBA  0E01               	movlw	1
 11218  003EBC  0100               	movlb	0	; () banked
 11219  003EBE  6FBD               	movwf	drawtext@size& (0+255),b
 11220  003EC0  0E0C               	movlw	12
 11221  003EC2  EC0B  F032         	call	_drawtext
 11222                           
 11223                           ;Main_Screen.c: 67: strcpy(txt, "RM");
 11224  003EC6  C0E4  F08E         	movff	_txt,strcpy@to
 11225  003ECA  C0E5  F08F         	movff	_txt+1,strcpy@to+1
 11226  003ECE  0EFC               	movlw	low STR_18
 11227  003ED0  0100               	movlb	0	; () banked
 11228  003ED2  6F90               	movwf	strcpy@from& (0+255),b
 11229  003ED4  0EFF               	movlw	high STR_18
 11230  003ED6  0100               	movlb	0	; () banked
 11231  003ED8  6F91               	movwf	(strcpy@from+1)& (0+255),b
 11232  003EDA  EC9B  F046         	call	_strcpy	;wreg free
 11233                           
 11234                           ;Main_Screen.c: 68: drawtext(33, 140, txt, 0xFFFF , 0x0000 , 1);
 11235  003EDE  0E8C               	movlw	140
 11236  003EE0  0100               	movlb	0	; () banked
 11237  003EE2  6FB6               	movwf	drawtext@y& (0+255),b
 11238  003EE4  C0E4  F0B7         	movff	_txt,drawtext@_text
 11239  003EE8  C0E5  F0B8         	movff	_txt+1,drawtext@_text+1
 11240  003EEC  0EFF               	movlw	255
 11241  003EEE  0100               	movlb	0	; () banked
 11242  003EF0  6FBA               	movwf	(drawtext@color+1)& (0+255),b
 11243  003EF2  69B9               	setf	drawtext@color& (0+255),b
 11244  003EF4  0E00               	movlw	0
 11245  003EF6  0100               	movlb	0	; () banked
 11246  003EF8  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
 11247  003EFA  0E00               	movlw	0
 11248  003EFC  6FBB               	movwf	drawtext@bg& (0+255),b
 11249  003EFE  0E01               	movlw	1
 11250  003F00  0100               	movlb	0	; () banked
 11251  003F02  6FBD               	movwf	drawtext@size& (0+255),b
 11252  003F04  0E21               	movlw	33
 11253  003F06  EC0B  F032         	call	_drawtext
 11254                           
 11255                           ;Main_Screen.c: 69: strcpy(txt, "Volt");
 11256  003F0A  C0E4  F08E         	movff	_txt,strcpy@to
 11257  003F0E  C0E5  F08F         	movff	_txt+1,strcpy@to+1
 11258  003F12  0EE5               	movlw	low STR_19
 11259  003F14  0100               	movlb	0	; () banked
 11260  003F16  6F90               	movwf	strcpy@from& (0+255),b
 11261  003F18  0EFF               	movlw	high STR_19
 11262  003F1A  0100               	movlb	0	; () banked
 11263  003F1C  6F91               	movwf	(strcpy@from+1)& (0+255),b
 11264  003F1E  EC9B  F046         	call	_strcpy	;wreg free
 11265                           
 11266                           ;Main_Screen.c: 70: drawtext(50, 140, txt, 0xFFFF , 0x0000 , 1);
 11267  003F22  0E8C               	movlw	140
 11268  003F24  0100               	movlb	0	; () banked
 11269  003F26  6FB6               	movwf	drawtext@y& (0+255),b
 11270  003F28  C0E4  F0B7         	movff	_txt,drawtext@_text
 11271  003F2C  C0E5  F0B8         	movff	_txt+1,drawtext@_text+1
 11272  003F30  0EFF               	movlw	255
 11273  003F32  0100               	movlb	0	; () banked
 11274  003F34  6FBA               	movwf	(drawtext@color+1)& (0+255),b
 11275  003F36  69B9               	setf	drawtext@color& (0+255),b
 11276  003F38  0E00               	movlw	0
 11277  003F3A  0100               	movlb	0	; () banked
 11278  003F3C  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
 11279  003F3E  0E00               	movlw	0
 11280  003F40  6FBB               	movwf	drawtext@bg& (0+255),b
 11281  003F42  0E01               	movlw	1
 11282  003F44  0100               	movlb	0	; () banked
 11283  003F46  6FBD               	movwf	drawtext@size& (0+255),b
 11284  003F48  0E32               	movlw	50
 11285  003F4A  EC0B  F032         	call	_drawtext
 11286                           
 11287                           ;Main_Screen.c: 71: strcpy(txt, "RPM");
 11288  003F4E  C0E4  F08E         	movff	_txt,strcpy@to
 11289  003F52  C0E5  F08F         	movff	_txt+1,strcpy@to+1
 11290  003F56  0EF2               	movlw	low STR_20
 11291  003F58  0100               	movlb	0	; () banked
 11292  003F5A  6F90               	movwf	strcpy@from& (0+255),b
 11293  003F5C  0EFF               	movlw	high STR_20
 11294  003F5E  0100               	movlb	0	; () banked
 11295  003F60  6F91               	movwf	(strcpy@from+1)& (0+255),b
 11296  003F62  EC9B  F046         	call	_strcpy	;wreg free
 11297                           
 11298                           ;Main_Screen.c: 72: drawtext(95, 140, txt, 0xFFFF , 0x0000 , 1);
 11299  003F66  0E8C               	movlw	140
 11300  003F68  0100               	movlb	0	; () banked
 11301  003F6A  6FB6               	movwf	drawtext@y& (0+255),b
 11302  003F6C  C0E4  F0B7         	movff	_txt,drawtext@_text
 11303  003F70  C0E5  F0B8         	movff	_txt+1,drawtext@_text+1
 11304  003F74  0EFF               	movlw	255
 11305  003F76  0100               	movlb	0	; () banked
 11306  003F78  6FBA               	movwf	(drawtext@color+1)& (0+255),b
 11307  003F7A  69B9               	setf	drawtext@color& (0+255),b
 11308  003F7C  0E00               	movlw	0
 11309  003F7E  0100               	movlb	0	; () banked
 11310  003F80  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
 11311  003F82  0E00               	movlw	0
 11312  003F84  6FBB               	movwf	drawtext@bg& (0+255),b
 11313  003F86  0E01               	movlw	1
 11314  003F88  0100               	movlb	0	; () banked
 11315  003F8A  6FBD               	movwf	drawtext@size& (0+255),b
 11316  003F8C  0E5F               	movlw	95
 11317  003F8E  EC0B  F032         	call	_drawtext
 11318  003F92  0012               	return		;funcret
 11319  003F94                     __end_of_Initialize_Screen:
 11320                           	opt stack 0
 11321                           tblptru	equ	0xFF8
 11322                           tblptrh	equ	0xFF7
 11323                           tblptrl	equ	0xFF6
 11324                           tablat	equ	0xFF5
 11325                           prodh	equ	0xFF4
 11326                           prodl	equ	0xFF3
 11327                           intcon	equ	0xFF2
 11328                           intcon2	equ	0xFF1
 11329                           postinc0	equ	0xFEE
 11330                           wreg	equ	0xFE8
 11331                           postdec1	equ	0xFE5
 11332                           fsr1l	equ	0xFE1
 11333                           postinc2	equ	0xFDE
 11334                           fsr2h	equ	0xFDA
 11335                           fsr2l	equ	0xFD9
 11336                           status	equ	0xFD8
 11337                           
 11338 ;; *************** function _strcpy *****************
 11339 ;; Defined at:
 11340 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcpy.c"
 11341 ;; Parameters:    Size  Location     Type
 11342 ;;  to              2   14[BANK0 ] PTR unsigned char 
 11343 ;;		 -> NULL(0), Fan_SW_Txt(4), Alarm_SW_Txt(4), 
 11344 ;;  from            2   16[BANK0 ] PTR const unsigned char 
 11345 ;;		 -> STR_35(5), STR_34(5), STR_33(12), STR_32(21), 
 11346 ;;		 -> STR_31(15), STR_30(12), STR_29(21), STR_27(5), 
 11347 ;;		 -> STR_26(11), STR_25(20), STR_24(4), STR_23(4), 
 11348 ;;		 -> STR_22(4), STR_21(4), STR_20(4), STR_19(5), 
 11349 ;;		 -> STR_18(3), STR_17(3), STR_16(7), STR_15(13), 
 11350 ;;		 -> STR_14(9), STR_13(11), STR_12(5), STR_11(5), 
 11351 ;;		 -> STR_10(2), STR_9(3), STR_8(13), STR_7(21), 
 11352 ;; Auto vars:     Size  Location     Type
 11353 ;;  cp              2   18[BANK0 ] PTR unsigned char 
 11354 ;;		 -> NULL(0), Fan_SW_Txt(4), Alarm_SW_Txt(4), 
 11355 ;; Return value:  Size  Location     Type
 11356 ;;                  2   14[BANK0 ] PTR unsigned char 
 11357 ;; Registers used:
 11358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11359 ;; Tracked objects:
 11360 ;;		On entry : 0/0
 11361 ;;		On exit  : 0/0
 11362 ;;		Unchanged: 0/0
 11363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11364 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11365 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11367 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11368 ;;Total ram usage:        6 bytes
 11369 ;; Hardware stack levels used:    1
 11370 ;; Hardware stack levels required when called:    6
 11371 ;; This function calls:
 11372 ;;		Nothing
 11373 ;; This function is called by:
 11374 ;;		_Initialize_Screen
 11375 ;;		_Update_Screen
 11376 ;;		_Initialize_Setup_Alarm_Time_Screen
 11377 ;;		_Initialize_Setup_Fan_Screen
 11378 ;;		_Initialize_Setup_Time_Screen
 11379 ;; This function uses a non-reentrant model
 11380 ;;
 11381                           
 11382                           	psect	text46
 11383  008D36                     __ptext46:
 11384                           	opt stack 0
 11385  008D36                     _strcpy:
 11386                           	opt stack 23
 11387                           
 11388                           ;incstack = 0
 11389  008D36  C08E  F092         	movff	strcpy@to,strcpy@cp
 11390  008D3A  C08F  F093         	movff	strcpy@to+1,strcpy@cp+1
 11391  008D3E  D007               	goto	l8903
 11392  008D40                     l8901:
 11393  008D40  0100               	movlb	0	; () banked
 11394  008D42  4B92               	infsnz	strcpy@cp& (0+255),f,b
 11395  008D44  2B93               	incf	(strcpy@cp+1)& (0+255),f,b
 11396  008D46  0100               	movlb	0	; () banked
 11397  008D48  4B90               	infsnz	strcpy@from& (0+255),f,b
 11398  008D4A  2B91               	incf	(strcpy@from+1)& (0+255),f,b
 11399  008D4C  D000               	goto	l8903
 11400  008D4E                     l8903:
 11401  008D4E  C090  FFF6         	movff	strcpy@from,tblptrl
 11402  008D52  C091  FFF7         	movff	strcpy@from+1,tblptrh
 11403  008D56                     	if	0	;tblptru may be non-zero
 11404  008D56                     	endif
 11405  008D56                     	if	0	;tblptru may be non-zero
 11406  008D56                     	endif
 11407  008D56  C092  FFD9         	movff	strcpy@cp,fsr2l
 11408  008D5A  C093  FFDA         	movff	strcpy@cp+1,fsr2h
 11409  008D5E  0008               	tblrd		*
 11410  008D60  CFF5 FFDF          	movff	tablat,indf2
 11411  008D64  50DF               	movf	indf2,w,c
 11412  008D66  A4D8               	btfss	status,2,c
 11413  008D68  D7EB               	goto	l8901
 11414                           
 11415                           ;	Return value of _strcpy is never used
 11416  008D6A  0012               	return		;funcret
 11417  008D6C                     __end_of_strcpy:
 11418                           	opt stack 0
 11419                           tblptru	equ	0xFF8
 11420                           tblptrh	equ	0xFF7
 11421                           tblptrl	equ	0xFF6
 11422                           tablat	equ	0xFF5
 11423                           prodh	equ	0xFF4
 11424                           prodl	equ	0xFF3
 11425                           intcon	equ	0xFF2
 11426                           intcon2	equ	0xFF1
 11427                           postinc0	equ	0xFEE
 11428                           wreg	equ	0xFE8
 11429                           postdec1	equ	0xFE5
 11430                           fsr1l	equ	0xFE1
 11431                           indf2	equ	0xFDF
 11432                           postinc2	equ	0xFDE
 11433                           fsr2h	equ	0xFDA
 11434                           fsr2l	equ	0xFD9
 11435                           status	equ	0xFD8
 11436                           
 11437 ;; *************** function _fillScreen *****************
 11438 ;; Defined at:
 11439 ;;		line 620 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/ST7735_TFT.c"
 11440 ;; Parameters:    Size  Location     Type
 11441 ;;  color           2   33[BANK0 ] unsigned int 
 11442 ;; Auto vars:     Size  Location     Type
 11443 ;;		None
 11444 ;; Return value:  Size  Location     Type
 11445 ;;		None               void
 11446 ;; Registers used:
 11447 ;;		wreg, status,2, status,0, cstack
 11448 ;; Tracked objects:
 11449 ;;		On entry : 0/0
 11450 ;;		On exit  : 0/0
 11451 ;;		Unchanged: 0/0
 11452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11453 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11456 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11457 ;;Total ram usage:        2 bytes
 11458 ;; Hardware stack levels used:    1
 11459 ;; Hardware stack levels required when called:   10
 11460 ;; This function calls:
 11461 ;;		_fillRectangle
 11462 ;; This function is called by:
 11463 ;;		_Initialize_Screen
 11464 ;;		_Initialize_Setup_Alarm_Time_Screen
 11465 ;;		_Initialize_Setup_Fan_Screen
 11466 ;;		_Initialize_Setup_Time_Screen
 11467 ;; This function uses a non-reentrant model
 11468 ;;
 11469                           
 11470                           	psect	text47
 11471  008F76                     __ptext47:
 11472                           	opt stack 0
 11473  008F76                     _fillScreen:
 11474                           	opt stack 18
 11475                           
 11476                           ;ST7735_TFT.c: 622: fillRectangle(0, 0, 128, 160, color);
 11477                           
 11478                           ;incstack = 0
 11479  008F76  0E00               	movlw	0
 11480  008F78  0100               	movlb	0	; () banked
 11481  008F7A  6F95               	movwf	fillRectangle@y& (0+255),b
 11482  008F7C  0E80               	movlw	128
 11483  008F7E  0100               	movlb	0	; () banked
 11484  008F80  6F96               	movwf	fillRectangle@w& (0+255),b
 11485  008F82  0EA0               	movlw	160
 11486  008F84  0100               	movlb	0	; () banked
 11487  008F86  6F97               	movwf	fillRectangle@h& (0+255),b
 11488  008F88  C0A1  F098         	movff	fillScreen@color,fillRectangle@color
 11489  008F8C  C0A2  F099         	movff	fillScreen@color+1,fillRectangle@color+1
 11490  008F90  0E00               	movlw	0
 11491  008F92  EC2F  F030         	call	_fillRectangle
 11492  008F96  0012               	return		;funcret
 11493  008F98                     __end_of_fillScreen:
 11494                           	opt stack 0
 11495                           tblptru	equ	0xFF8
 11496                           tblptrh	equ	0xFF7
 11497                           tblptrl	equ	0xFF6
 11498                           tablat	equ	0xFF5
 11499                           prodh	equ	0xFF4
 11500                           prodl	equ	0xFF3
 11501                           intcon	equ	0xFF2
 11502                           intcon2	equ	0xFF1
 11503                           postinc0	equ	0xFEE
 11504                           wreg	equ	0xFE8
 11505                           postdec1	equ	0xFE5
 11506                           fsr1l	equ	0xFE1
 11507                           indf2	equ	0xFDF
 11508                           postinc2	equ	0xFDE
 11509                           fsr2h	equ	0xFDA
 11510                           fsr2l	equ	0xFD9
 11511                           status	equ	0xFD8
 11512                           
 11513 ;; *************** function _fillRectangle *****************
 11514 ;; Defined at:
 11515 ;;		line 504 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/ST7735_TFT.c"
 11516 ;; Parameters:    Size  Location     Type
 11517 ;;  x               1    wreg     unsigned char 
 11518 ;;  y               1   21[BANK0 ] unsigned char 
 11519 ;;  w               1   22[BANK0 ] unsigned char 
 11520 ;;  h               1   23[BANK0 ] unsigned char 
 11521 ;;  color           2   24[BANK0 ] unsigned int 
 11522 ;; Auto vars:     Size  Location     Type
 11523 ;;  x               1   32[BANK0 ] unsigned char 
 11524 ;;  lo              1   31[BANK0 ] unsigned char 
 11525 ;;  hi              1   30[BANK0 ] unsigned char 
 11526 ;; Return value:  Size  Location     Type
 11527 ;;		None               void
 11528 ;; Registers used:
 11529 ;;		wreg, status,2, status,0, cstack
 11530 ;; Tracked objects:
 11531 ;;		On entry : 0/0
 11532 ;;		On exit  : 0/0
 11533 ;;		Unchanged: 0/0
 11534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11535 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11536 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11537 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11538 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11539 ;;Total ram usage:       12 bytes
 11540 ;; Hardware stack levels used:    1
 11541 ;; Hardware stack levels required when called:    9
 11542 ;; This function calls:
 11543 ;;		_setAddrWindow
 11544 ;;		_spiwrite
 11545 ;; This function is called by:
 11546 ;;		_fillScreen
 11547 ;; This function uses a non-reentrant model
 11548 ;;
 11549                           
 11550                           	psect	text48
 11551  00605E                     __ptext48:
 11552                           	opt stack 0
 11553  00605E                     _fillRectangle:
 11554                           	opt stack 18
 11555                           
 11556                           ;incstack = 0
 11557                           ;fillRectangle@x stored from wreg
 11558  00605E  0100               	movlb	0	; () banked
 11559  006060  6FA0               	movwf	fillRectangle@x& (0+255),b
 11560                           
 11561                           ; BSR set to: 0
 11562                           ;ST7735_TFT.c: 506: unsigned char hi, lo;
 11563                           ;ST7735_TFT.c: 507: if((x >= 128) || (y >= 160))
 11564  006062  0E80               	movlw	128
 11565  006064  0100               	movlb	0	; () banked
 11566  006066  61A0               	cpfslt	fillRectangle@x& (0+255),b
 11567  006068  D09B               	goto	l797
 11568                           
 11569                           ; BSR set to: 0
 11570  00606A  0E9F               	movlw	159
 11571  00606C  0100               	movlb	0	; () banked
 11572  00606E  6595               	cpfsgt	fillRectangle@y& (0+255),b
 11573  006070  D001               	goto	l7773
 11574                           
 11575                           ; BSR set to: 0
 11576                           ;ST7735_TFT.c: 508: return;
 11577  006072  D096               	goto	l797
 11578  006074                     l7773:
 11579                           
 11580                           ; BSR set to: 0
 11581                           ;ST7735_TFT.c: 509: if((x + w - 1) >= 128)
 11582  006074  0EFF               	movlw	255
 11583  006076  0100               	movlb	0	; () banked
 11584  006078  6F9A               	movwf	??_fillRectangle& (0+255),b
 11585  00607A  0EFF               	movlw	255
 11586  00607C  0100               	movlb	0	; () banked
 11587  00607E  6F9B               	movwf	(??_fillRectangle+1)& (0+255),b
 11588  006080  0100               	movlb	0	; () banked
 11589  006082  5196               	movf	fillRectangle@w& (0+255),w,b
 11590  006084  C0A0  F09C         	movff	fillRectangle@x,??_fillRectangle+2
 11591  006088  0100               	movlb	0	; () banked
 11592  00608A  6B9D               	clrf	(??_fillRectangle+3)& (0+255),b
 11593  00608C  0100               	movlb	0	; () banked
 11594  00608E  279C               	addwf	(??_fillRectangle+2)& (0+255),f,b
 11595  006090  0E00               	movlw	0
 11596  006092  239D               	addwfc	(??_fillRectangle+3)& (0+255),f,b
 11597  006094  0100               	movlb	0	; () banked
 11598  006096  519A               	movf	??_fillRectangle& (0+255),w,b
 11599  006098  0100               	movlb	0	; () banked
 11600  00609A  279C               	addwf	(??_fillRectangle+2)& (0+255),f,b
 11601  00609C  0100               	movlb	0	; () banked
 11602  00609E  519B               	movf	(??_fillRectangle+1)& (0+255),w,b
 11603  0060A0  0100               	movlb	0	; () banked
 11604  0060A2  239D               	addwfc	(??_fillRectangle+3)& (0+255),f,b
 11605  0060A4  0100               	movlb	0	; () banked
 11606  0060A6  BF9D               	btfsc	(??_fillRectangle+3)& (0+255),7,b
 11607  0060A8  D00E               	goto	l798
 11608  0060AA  0100               	movlb	0	; () banked
 11609  0060AC  519D               	movf	(??_fillRectangle+3)& (0+255),w,b
 11610  0060AE  E105               	bnz	u7290
 11611  0060B0  0E80               	movlw	128
 11612  0060B2  0100               	movlb	0	; () banked
 11613  0060B4  5D9C               	subwf	(??_fillRectangle+2)& (0+255),w,b
 11614  0060B6  A0D8               	btfss	status,0,c
 11615  0060B8  D006               	goto	l798
 11616  0060BA                     u7290:
 11617                           
 11618                           ; BSR set to: 0
 11619                           ;ST7735_TFT.c: 510: w = 128 - x;
 11620  0060BA  0100               	movlb	0	; () banked
 11621  0060BC  51A0               	movf	fillRectangle@x& (0+255),w,b
 11622  0060BE  0800               	sublw	0
 11623  0060C0  0F80               	addlw	128
 11624  0060C2  0100               	movlb	0	; () banked
 11625  0060C4  6F96               	movwf	fillRectangle@w& (0+255),b
 11626  0060C6                     l798:
 11627                           
 11628                           ; BSR set to: 0
 11629                           ;ST7735_TFT.c: 511: if((y + h - 1) >= 160)
 11630  0060C6  0EFF               	movlw	255
 11631  0060C8  0100               	movlb	0	; () banked
 11632  0060CA  6F9A               	movwf	??_fillRectangle& (0+255),b
 11633  0060CC  0EFF               	movlw	255
 11634  0060CE  0100               	movlb	0	; () banked
 11635  0060D0  6F9B               	movwf	(??_fillRectangle+1)& (0+255),b
 11636  0060D2  0100               	movlb	0	; () banked
 11637  0060D4  5197               	movf	fillRectangle@h& (0+255),w,b
 11638  0060D6  C095  F09C         	movff	fillRectangle@y,??_fillRectangle+2
 11639  0060DA  0100               	movlb	0	; () banked
 11640  0060DC  6B9D               	clrf	(??_fillRectangle+3)& (0+255),b
 11641  0060DE  0100               	movlb	0	; () banked
 11642  0060E0  279C               	addwf	(??_fillRectangle+2)& (0+255),f,b
 11643  0060E2  0E00               	movlw	0
 11644  0060E4  239D               	addwfc	(??_fillRectangle+3)& (0+255),f,b
 11645  0060E6  0100               	movlb	0	; () banked
 11646  0060E8  519A               	movf	??_fillRectangle& (0+255),w,b
 11647  0060EA  0100               	movlb	0	; () banked
 11648  0060EC  279C               	addwf	(??_fillRectangle+2)& (0+255),f,b
 11649  0060EE  0100               	movlb	0	; () banked
 11650  0060F0  519B               	movf	(??_fillRectangle+1)& (0+255),w,b
 11651  0060F2  0100               	movlb	0	; () banked
 11652  0060F4  239D               	addwfc	(??_fillRectangle+3)& (0+255),f,b
 11653  0060F6  0100               	movlb	0	; () banked
 11654  0060F8  BF9D               	btfsc	(??_fillRectangle+3)& (0+255),7,b
 11655  0060FA  D00F               	goto	l7779
 11656  0060FC  0100               	movlb	0	; () banked
 11657  0060FE  519D               	movf	(??_fillRectangle+3)& (0+255),w,b
 11658  006100  E105               	bnz	u7300
 11659  006102  0EA0               	movlw	160
 11660  006104  0100               	movlb	0	; () banked
 11661  006106  5D9C               	subwf	(??_fillRectangle+2)& (0+255),w,b
 11662  006108  A0D8               	btfss	status,0,c
 11663  00610A  D007               	goto	l7779
 11664  00610C                     u7300:
 11665                           
 11666                           ; BSR set to: 0
 11667                           ;ST7735_TFT.c: 512: h = 160 - y;
 11668  00610C  0100               	movlb	0	; () banked
 11669  00610E  5195               	movf	fillRectangle@y& (0+255),w,b
 11670  006110  0800               	sublw	0
 11671  006112  0FA0               	addlw	160
 11672  006114  0100               	movlb	0	; () banked
 11673  006116  6F97               	movwf	fillRectangle@h& (0+255),b
 11674  006118  D000               	goto	l7779
 11675  00611A                     l7779:
 11676                           
 11677                           ; BSR set to: 0
 11678                           ;ST7735_TFT.c: 513: setAddrWindow(x, y, x+w-1, y+h-1);
 11679  00611A  C095  F091         	movff	fillRectangle@y,setAddrWindow@y0
 11680  00611E  0100               	movlb	0	; () banked
 11681  006120  51A0               	movf	fillRectangle@x& (0+255),w,b
 11682  006122  0100               	movlb	0	; () banked
 11683  006124  2596               	addwf	fillRectangle@w& (0+255),w,b
 11684  006126  0100               	movlb	0	; () banked
 11685  006128  6F9A               	movwf	??_fillRectangle& (0+255),b
 11686  00612A  0100               	movlb	0	; () banked
 11687  00612C  059A               	decf	??_fillRectangle& (0+255),w,b
 11688  00612E  0100               	movlb	0	; () banked
 11689  006130  6F92               	movwf	setAddrWindow@x1& (0+255),b
 11690  006132  0100               	movlb	0	; () banked
 11691  006134  5195               	movf	fillRectangle@y& (0+255),w,b
 11692  006136  0100               	movlb	0	; () banked
 11693  006138  2597               	addwf	fillRectangle@h& (0+255),w,b
 11694  00613A  0100               	movlb	0	; () banked
 11695  00613C  6F9B               	movwf	(??_fillRectangle+1)& (0+255),b
 11696  00613E  0100               	movlb	0	; () banked
 11697  006140  059B               	decf	(??_fillRectangle+1)& (0+255),w,b
 11698  006142  0100               	movlb	0	; () banked
 11699  006144  6F93               	movwf	setAddrWindow@y1& (0+255),b
 11700  006146  0100               	movlb	0	; () banked
 11701  006148  51A0               	movf	fillRectangle@x& (0+255),w,b
 11702  00614A  ECF0  F043         	call	_setAddrWindow
 11703                           
 11704                           ;ST7735_TFT.c: 514: hi = color >> 8; lo = color;
 11705  00614E  0100               	movlb	0	; () banked
 11706  006150  5199               	movf	(fillRectangle@color+1)& (0+255),w,b
 11707  006152  0100               	movlb	0	; () banked
 11708  006154  6F9E               	movwf	fillRectangle@hi& (0+255),b
 11709                           
 11710                           ; BSR set to: 0
 11711  006156  C098  F09F         	movff	fillRectangle@color,fillRectangle@lo
 11712                           
 11713                           ; BSR set to: 0
 11714                           ;ST7735_TFT.c: 515: PORTDbits.RD3 = 1;
 11715  00615A  8683               	bsf	3971,3,c	;volatile
 11716                           
 11717                           ; BSR set to: 0
 11718                           ;ST7735_TFT.c: 516: PORTDbits.RD4 = 0;
 11719  00615C  9883               	bcf	3971,4,c	;volatile
 11720                           
 11721                           ; BSR set to: 0
 11722                           ;ST7735_TFT.c: 518: for(y=h; y>0; y--) {
 11723  00615E  C097  F095         	movff	fillRectangle@h,fillRectangle@y
 11724  006162                     l7791:
 11725                           
 11726                           ; BSR set to: 0
 11727  006162  0100               	movlb	0	; () banked
 11728  006164  5195               	movf	fillRectangle@y& (0+255),w,b
 11729  006166  0100               	movlb	0	; () banked
 11730  006168  B4D8               	btfsc	status,2,c
 11731  00616A  D019               	goto	l801
 11732  00616C  D001               	goto	l800
 11733                           
 11734                           ; BSR set to: 0
 11735  00616E  D017               	goto	l801
 11736  006170                     l800:
 11737                           
 11738                           ; BSR set to: 0
 11739                           ;ST7735_TFT.c: 519: for(x = w; x > 0; x--) {
 11740  006170  C096  F0A0         	movff	fillRectangle@w,fillRectangle@x
 11741  006174                     l7795:
 11742                           
 11743                           ; BSR set to: 0
 11744  006174  0100               	movlb	0	; () banked
 11745  006176  51A0               	movf	fillRectangle@x& (0+255),w,b
 11746  006178  0100               	movlb	0	; () banked
 11747  00617A  B4D8               	btfsc	status,2,c
 11748  00617C  D00D               	goto	l7805
 11749  00617E  D001               	goto	l7799
 11750                           
 11751                           ; BSR set to: 0
 11752  006180  D00B               	goto	l7805
 11753  006182                     l7799:
 11754                           
 11755                           ; BSR set to: 0
 11756                           ;ST7735_TFT.c: 520: spiwrite(hi);
 11757  006182  0100               	movlb	0	; () banked
 11758  006184  519E               	movf	fillRectangle@hi& (0+255),w,b
 11759  006186  EC7D  F048         	call	_spiwrite
 11760                           
 11761                           ;ST7735_TFT.c: 521: spiwrite(lo);
 11762  00618A  0100               	movlb	0	; () banked
 11763  00618C  519F               	movf	fillRectangle@lo& (0+255),w,b
 11764  00618E  EC7D  F048         	call	_spiwrite
 11765  006192  0100               	movlb	0	; () banked
 11766  006194  07A0               	decf	fillRectangle@x& (0+255),f,b
 11767  006196  D7EE               	goto	l7795
 11768  006198                     l7805:
 11769                           
 11770                           ; BSR set to: 0
 11771  006198  0100               	movlb	0	; () banked
 11772  00619A  0795               	decf	fillRectangle@y& (0+255),f,b
 11773  00619C  D7E2               	goto	l7791
 11774  00619E                     l801:
 11775                           
 11776                           ; BSR set to: 0
 11777                           ;ST7735_TFT.c: 522: }
 11778                           ;ST7735_TFT.c: 523: }
 11779                           ;ST7735_TFT.c: 524: PORTDbits.RD4 = 1;
 11780  00619E  8883               	bsf	3971,4,c	;volatile
 11781  0061A0                     l797:
 11782                           
 11783                           ; BSR set to: 0
 11784  0061A0  0012               	return		;funcret
 11785  0061A2                     __end_of_fillRectangle:
 11786                           	opt stack 0
 11787                           tblptru	equ	0xFF8
 11788                           tblptrh	equ	0xFF7
 11789                           tblptrl	equ	0xFF6
 11790                           tablat	equ	0xFF5
 11791                           prodh	equ	0xFF4
 11792                           prodl	equ	0xFF3
 11793                           intcon	equ	0xFF2
 11794                           intcon2	equ	0xFF1
 11795                           postinc0	equ	0xFEE
 11796                           wreg	equ	0xFE8
 11797                           postdec1	equ	0xFE5
 11798                           fsr1l	equ	0xFE1
 11799                           indf2	equ	0xFDF
 11800                           postinc2	equ	0xFDE
 11801                           fsr2h	equ	0xFDA
 11802                           fsr2l	equ	0xFD9
 11803                           status	equ	0xFD8
 11804                           
 11805 ;; *************** function _drawCircle *****************
 11806 ;; Defined at:
 11807 ;;		line 529 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/ST7735_TFT.c"
 11808 ;; Parameters:    Size  Location     Type
 11809 ;;  x0              2   25[BANK0 ] int 
 11810 ;;  y0              2   27[BANK0 ] int 
 11811 ;;  r               2   29[BANK0 ] int 
 11812 ;;  color           2   31[BANK0 ] unsigned int 
 11813 ;; Auto vars:     Size  Location     Type
 11814 ;;  y               2   43[BANK0 ] int 
 11815 ;;  x               2   41[BANK0 ] int 
 11816 ;;  f               2   39[BANK0 ] int 
 11817 ;;  ddF_y           2   37[BANK0 ] int 
 11818 ;;  ddF_x           2   35[BANK0 ] int 
 11819 ;; Return value:  Size  Location     Type
 11820 ;;		None               void
 11821 ;; Registers used:
 11822 ;;		wreg, status,2, status,0, cstack
 11823 ;; Tracked objects:
 11824 ;;		On entry : 0/0
 11825 ;;		On exit  : 0/0
 11826 ;;		Unchanged: 0/0
 11827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11828 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11829 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11830 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11831 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11832 ;;Total ram usage:       20 bytes
 11833 ;; Hardware stack levels used:    1
 11834 ;; Hardware stack levels required when called:   10
 11835 ;; This function calls:
 11836 ;;		_drawPixel
 11837 ;; This function is called by:
 11838 ;;		_Initialize_Screen
 11839 ;; This function uses a non-reentrant model
 11840 ;;
 11841                           
 11842                           	psect	text49
 11843  00489C                     __ptext49:
 11844                           	opt stack 0
 11845  00489C                     _drawCircle:
 11846                           	opt stack 17
 11847                           
 11848                           ;ST7735_TFT.c: 531: signed int f, ddF_x, ddF_y, x, y;
 11849                           ;ST7735_TFT.c: 532: f = 1 - r, ddF_x = 1, ddF_y = -2 * r, x = 0, y = r;
 11850                           
 11851                           ; BSR set to: 0
 11852                           ;incstack = 0
 11853  00489C  C09D  F0A1         	movff	drawCircle@r,??_drawCircle
 11854  0048A0  C09E  F0A2         	movff	drawCircle@r+1,??_drawCircle+1
 11855  0048A4  0100               	movlb	0	; () banked
 11856  0048A6  1FA1               	comf	??_drawCircle& (0+255),f,b
 11857  0048A8  1FA2               	comf	(??_drawCircle+1)& (0+255),f,b
 11858  0048AA  4BA1               	infsnz	??_drawCircle& (0+255),f,b
 11859  0048AC  2BA2               	incf	(??_drawCircle+1)& (0+255),f,b
 11860  0048AE  0E01               	movlw	1
 11861  0048B0  0100               	movlb	0	; () banked
 11862  0048B2  25A1               	addwf	??_drawCircle& (0+255),w,b
 11863  0048B4  0100               	movlb	0	; () banked
 11864  0048B6  6FA7               	movwf	drawCircle@f& (0+255),b
 11865  0048B8  0E00               	movlw	0
 11866  0048BA  0100               	movlb	0	; () banked
 11867  0048BC  21A2               	addwfc	(??_drawCircle+1)& (0+255),w,b
 11868  0048BE  0100               	movlb	0	; () banked
 11869  0048C0  6FA8               	movwf	(drawCircle@f+1)& (0+255),b
 11870                           
 11871                           ; BSR set to: 0
 11872  0048C2  0E00               	movlw	0
 11873  0048C4  0100               	movlb	0	; () banked
 11874  0048C6  6FA4               	movwf	(drawCircle@ddF_x+1)& (0+255),b
 11875  0048C8  0E01               	movlw	1
 11876  0048CA  6FA3               	movwf	drawCircle@ddF_x& (0+255),b
 11877                           
 11878                           ; BSR set to: 0
 11879  0048CC  C09D  F0A1         	movff	drawCircle@r,??_drawCircle
 11880  0048D0  C09E  F0A2         	movff	drawCircle@r+1,??_drawCircle+1
 11881  0048D4  90D8               	bcf	status,0,c
 11882  0048D6  0100               	movlb	0	; () banked
 11883  0048D8  37A1               	rlcf	??_drawCircle& (0+255),f,b
 11884  0048DA  37A2               	rlcf	(??_drawCircle+1)& (0+255),f,b
 11885  0048DC  0100               	movlb	0	; () banked
 11886  0048DE  1FA1               	comf	??_drawCircle& (0+255),f,b
 11887  0048E0  1FA2               	comf	(??_drawCircle+1)& (0+255),f,b
 11888  0048E2  4BA1               	infsnz	??_drawCircle& (0+255),f,b
 11889  0048E4  2BA2               	incf	(??_drawCircle+1)& (0+255),f,b
 11890  0048E6  C0A1  F0A5         	movff	??_drawCircle,drawCircle@ddF_y
 11891  0048EA  C0A2  F0A6         	movff	??_drawCircle+1,drawCircle@ddF_y+1
 11892                           
 11893                           ; BSR set to: 0
 11894  0048EE  0E00               	movlw	0
 11895  0048F0  0100               	movlb	0	; () banked
 11896  0048F2  6FAA               	movwf	(drawCircle@x+1)& (0+255),b
 11897  0048F4  0E00               	movlw	0
 11898  0048F6  6FA9               	movwf	drawCircle@x& (0+255),b
 11899                           
 11900                           ; BSR set to: 0
 11901  0048F8  C09D  F0AB         	movff	drawCircle@r,drawCircle@y
 11902  0048FC  C09E  F0AC         	movff	drawCircle@r+1,drawCircle@y+1
 11903                           
 11904                           ; BSR set to: 0
 11905                           ;ST7735_TFT.c: 533: drawPixel(x0 , y0 + r, color);
 11906  004900  0100               	movlb	0	; () banked
 11907  004902  519B               	movf	drawCircle@y0& (0+255),w,b
 11908  004904  0100               	movlb	0	; () banked
 11909  004906  259D               	addwf	drawCircle@r& (0+255),w,b
 11910  004908  0100               	movlb	0	; () banked
 11911  00490A  6F95               	movwf	drawPixel@y& (0+255),b
 11912  00490C  C09F  F096         	movff	drawCircle@color,drawPixel@color
 11913  004910  C0A0  F097         	movff	drawCircle@color+1,drawPixel@color+1
 11914  004914  0100               	movlb	0	; () banked
 11915  004916  5199               	movf	drawCircle@x0& (0+255),w,b
 11916  004918  ECDF  F045         	call	_drawPixel
 11917                           
 11918                           ;ST7735_TFT.c: 534: drawPixel(x0 , y0 - r, color);
 11919  00491C  0100               	movlb	0	; () banked
 11920  00491E  519D               	movf	drawCircle@r& (0+255),w,b
 11921  004920  0800               	sublw	0
 11922  004922  0100               	movlb	0	; () banked
 11923  004924  259B               	addwf	drawCircle@y0& (0+255),w,b
 11924  004926  0100               	movlb	0	; () banked
 11925  004928  6F95               	movwf	drawPixel@y& (0+255),b
 11926  00492A  C09F  F096         	movff	drawCircle@color,drawPixel@color
 11927  00492E  C0A0  F097         	movff	drawCircle@color+1,drawPixel@color+1
 11928  004932  0100               	movlb	0	; () banked
 11929  004934  5199               	movf	drawCircle@x0& (0+255),w,b
 11930  004936  ECDF  F045         	call	_drawPixel
 11931                           
 11932                           ;ST7735_TFT.c: 535: drawPixel(x0+r, y0 , color);
 11933  00493A  C09B  F095         	movff	drawCircle@y0,drawPixel@y
 11934  00493E  C09F  F096         	movff	drawCircle@color,drawPixel@color
 11935  004942  C0A0  F097         	movff	drawCircle@color+1,drawPixel@color+1
 11936  004946  0100               	movlb	0	; () banked
 11937  004948  5199               	movf	drawCircle@x0& (0+255),w,b
 11938  00494A  0100               	movlb	0	; () banked
 11939  00494C  259D               	addwf	drawCircle@r& (0+255),w,b
 11940  00494E  ECDF  F045         	call	_drawPixel
 11941                           
 11942                           ;ST7735_TFT.c: 536: drawPixel(x0-r, y0 , color);
 11943  004952  C09B  F095         	movff	drawCircle@y0,drawPixel@y
 11944  004956  C09F  F096         	movff	drawCircle@color,drawPixel@color
 11945  00495A  C0A0  F097         	movff	drawCircle@color+1,drawPixel@color+1
 11946  00495E  0100               	movlb	0	; () banked
 11947  004960  519D               	movf	drawCircle@r& (0+255),w,b
 11948  004962  0800               	sublw	0
 11949  004964  0100               	movlb	0	; () banked
 11950  004966  2599               	addwf	drawCircle@x0& (0+255),w,b
 11951  004968  ECDF  F045         	call	_drawPixel
 11952                           
 11953                           ;ST7735_TFT.c: 537: while (x < y) {
 11954  00496C  D0AD               	goto	l8987
 11955  00496E                     l8959:
 11956                           
 11957                           ;ST7735_TFT.c: 538: if (f >= 0) {
 11958  00496E  0100               	movlb	0	; () banked
 11959  004970  BFA8               	btfsc	(drawCircle@f+1)& (0+255),7,b
 11960  004972  D011               	goto	l808
 11961                           
 11962                           ; BSR set to: 0
 11963                           ;ST7735_TFT.c: 539: y--;
 11964  004974  0100               	movlb	0	; () banked
 11965  004976  07AB               	decf	drawCircle@y& (0+255),f,b
 11966  004978  A0D8               	btfss	status,0,c
 11967  00497A  07AC               	decf	(drawCircle@y+1)& (0+255),f,b
 11968                           
 11969                           ; BSR set to: 0
 11970                           ;ST7735_TFT.c: 540: ddF_y += 2;
 11971  00497C  0E02               	movlw	2
 11972  00497E  0100               	movlb	0	; () banked
 11973  004980  27A5               	addwf	drawCircle@ddF_y& (0+255),f,b
 11974  004982  0E00               	movlw	0
 11975  004984  23A6               	addwfc	(drawCircle@ddF_y+1)& (0+255),f,b
 11976                           
 11977                           ; BSR set to: 0
 11978                           ;ST7735_TFT.c: 541: f += ddF_y;
 11979  004986  0100               	movlb	0	; () banked
 11980  004988  51A5               	movf	drawCircle@ddF_y& (0+255),w,b
 11981  00498A  0100               	movlb	0	; () banked
 11982  00498C  27A7               	addwf	drawCircle@f& (0+255),f,b
 11983  00498E  0100               	movlb	0	; () banked
 11984  004990  51A6               	movf	(drawCircle@ddF_y+1)& (0+255),w,b
 11985  004992  0100               	movlb	0	; () banked
 11986  004994  23A8               	addwfc	(drawCircle@f+1)& (0+255),f,b
 11987  004996                     l808:
 11988                           
 11989                           ; BSR set to: 0
 11990                           ;ST7735_TFT.c: 542: }
 11991                           ;ST7735_TFT.c: 543: x++;
 11992  004996  0100               	movlb	0	; () banked
 11993  004998  4BA9               	infsnz	drawCircle@x& (0+255),f,b
 11994  00499A  2BAA               	incf	(drawCircle@x+1)& (0+255),f,b
 11995                           
 11996                           ; BSR set to: 0
 11997                           ;ST7735_TFT.c: 544: ddF_x += 2;
 11998  00499C  0E02               	movlw	2
 11999  00499E  0100               	movlb	0	; () banked
 12000  0049A0  27A3               	addwf	drawCircle@ddF_x& (0+255),f,b
 12001  0049A2  0E00               	movlw	0
 12002  0049A4  23A4               	addwfc	(drawCircle@ddF_x+1)& (0+255),f,b
 12003                           
 12004                           ; BSR set to: 0
 12005                           ;ST7735_TFT.c: 545: f += ddF_x;
 12006  0049A6  0100               	movlb	0	; () banked
 12007  0049A8  51A3               	movf	drawCircle@ddF_x& (0+255),w,b
 12008  0049AA  0100               	movlb	0	; () banked
 12009  0049AC  27A7               	addwf	drawCircle@f& (0+255),f,b
 12010  0049AE  0100               	movlb	0	; () banked
 12011  0049B0  51A4               	movf	(drawCircle@ddF_x+1)& (0+255),w,b
 12012  0049B2  0100               	movlb	0	; () banked
 12013  0049B4  23A8               	addwfc	(drawCircle@f+1)& (0+255),f,b
 12014                           
 12015                           ; BSR set to: 0
 12016                           ;ST7735_TFT.c: 546: drawPixel(x0 + x, y0 + y, color);
 12017  0049B6  0100               	movlb	0	; () banked
 12018  0049B8  519B               	movf	drawCircle@y0& (0+255),w,b
 12019  0049BA  0100               	movlb	0	; () banked
 12020  0049BC  25AB               	addwf	drawCircle@y& (0+255),w,b
 12021  0049BE  0100               	movlb	0	; () banked
 12022  0049C0  6F95               	movwf	drawPixel@y& (0+255),b
 12023  0049C2  C09F  F096         	movff	drawCircle@color,drawPixel@color
 12024  0049C6  C0A0  F097         	movff	drawCircle@color+1,drawPixel@color+1
 12025  0049CA  0100               	movlb	0	; () banked
 12026  0049CC  5199               	movf	drawCircle@x0& (0+255),w,b
 12027  0049CE  0100               	movlb	0	; () banked
 12028  0049D0  25A9               	addwf	drawCircle@x& (0+255),w,b
 12029  0049D2  ECDF  F045         	call	_drawPixel
 12030                           
 12031                           ;ST7735_TFT.c: 547: drawPixel(x0 - x, y0 + y, color);
 12032  0049D6  0100               	movlb	0	; () banked
 12033  0049D8  519B               	movf	drawCircle@y0& (0+255),w,b
 12034  0049DA  0100               	movlb	0	; () banked
 12035  0049DC  25AB               	addwf	drawCircle@y& (0+255),w,b
 12036  0049DE  0100               	movlb	0	; () banked
 12037  0049E0  6F95               	movwf	drawPixel@y& (0+255),b
 12038  0049E2  C09F  F096         	movff	drawCircle@color,drawPixel@color
 12039  0049E6  C0A0  F097         	movff	drawCircle@color+1,drawPixel@color+1
 12040  0049EA  0100               	movlb	0	; () banked
 12041  0049EC  51A9               	movf	drawCircle@x& (0+255),w,b
 12042  0049EE  0800               	sublw	0
 12043  0049F0  0100               	movlb	0	; () banked
 12044  0049F2  2599               	addwf	drawCircle@x0& (0+255),w,b
 12045  0049F4  ECDF  F045         	call	_drawPixel
 12046                           
 12047                           ;ST7735_TFT.c: 548: drawPixel(x0 + x, y0 - y, color);
 12048  0049F8  0100               	movlb	0	; () banked
 12049  0049FA  51AB               	movf	drawCircle@y& (0+255),w,b
 12050  0049FC  0800               	sublw	0
 12051  0049FE  0100               	movlb	0	; () banked
 12052  004A00  259B               	addwf	drawCircle@y0& (0+255),w,b
 12053  004A02  0100               	movlb	0	; () banked
 12054  004A04  6F95               	movwf	drawPixel@y& (0+255),b
 12055  004A06  C09F  F096         	movff	drawCircle@color,drawPixel@color
 12056  004A0A  C0A0  F097         	movff	drawCircle@color+1,drawPixel@color+1
 12057  004A0E  0100               	movlb	0	; () banked
 12058  004A10  5199               	movf	drawCircle@x0& (0+255),w,b
 12059  004A12  0100               	movlb	0	; () banked
 12060  004A14  25A9               	addwf	drawCircle@x& (0+255),w,b
 12061  004A16  ECDF  F045         	call	_drawPixel
 12062                           
 12063                           ;ST7735_TFT.c: 549: drawPixel(x0 - x, y0 - y, color);
 12064  004A1A  0100               	movlb	0	; () banked
 12065  004A1C  51AB               	movf	drawCircle@y& (0+255),w,b
 12066  004A1E  0800               	sublw	0
 12067  004A20  0100               	movlb	0	; () banked
 12068  004A22  259B               	addwf	drawCircle@y0& (0+255),w,b
 12069  004A24  0100               	movlb	0	; () banked
 12070  004A26  6F95               	movwf	drawPixel@y& (0+255),b
 12071  004A28  C09F  F096         	movff	drawCircle@color,drawPixel@color
 12072  004A2C  C0A0  F097         	movff	drawCircle@color+1,drawPixel@color+1
 12073  004A30  0100               	movlb	0	; () banked
 12074  004A32  51A9               	movf	drawCircle@x& (0+255),w,b
 12075  004A34  0800               	sublw	0
 12076  004A36  0100               	movlb	0	; () banked
 12077  004A38  2599               	addwf	drawCircle@x0& (0+255),w,b
 12078  004A3A  ECDF  F045         	call	_drawPixel
 12079                           
 12080                           ;ST7735_TFT.c: 550: drawPixel(x0 + y, y0 + x, color);
 12081  004A3E  0100               	movlb	0	; () banked
 12082  004A40  519B               	movf	drawCircle@y0& (0+255),w,b
 12083  004A42  0100               	movlb	0	; () banked
 12084  004A44  25A9               	addwf	drawCircle@x& (0+255),w,b
 12085  004A46  0100               	movlb	0	; () banked
 12086  004A48  6F95               	movwf	drawPixel@y& (0+255),b
 12087  004A4A  C09F  F096         	movff	drawCircle@color,drawPixel@color
 12088  004A4E  C0A0  F097         	movff	drawCircle@color+1,drawPixel@color+1
 12089  004A52  0100               	movlb	0	; () banked
 12090  004A54  5199               	movf	drawCircle@x0& (0+255),w,b
 12091  004A56  0100               	movlb	0	; () banked
 12092  004A58  25AB               	addwf	drawCircle@y& (0+255),w,b
 12093  004A5A  ECDF  F045         	call	_drawPixel
 12094                           
 12095                           ;ST7735_TFT.c: 551: drawPixel(x0 - y, y0 + x, color);
 12096  004A5E  0100               	movlb	0	; () banked
 12097  004A60  519B               	movf	drawCircle@y0& (0+255),w,b
 12098  004A62  0100               	movlb	0	; () banked
 12099  004A64  25A9               	addwf	drawCircle@x& (0+255),w,b
 12100  004A66  0100               	movlb	0	; () banked
 12101  004A68  6F95               	movwf	drawPixel@y& (0+255),b
 12102  004A6A  C09F  F096         	movff	drawCircle@color,drawPixel@color
 12103  004A6E  C0A0  F097         	movff	drawCircle@color+1,drawPixel@color+1
 12104  004A72  0100               	movlb	0	; () banked
 12105  004A74  51AB               	movf	drawCircle@y& (0+255),w,b
 12106  004A76  0800               	sublw	0
 12107  004A78  0100               	movlb	0	; () banked
 12108  004A7A  2599               	addwf	drawCircle@x0& (0+255),w,b
 12109  004A7C  ECDF  F045         	call	_drawPixel
 12110                           
 12111                           ;ST7735_TFT.c: 552: drawPixel(x0 + y, y0 - x, color);
 12112  004A80  0100               	movlb	0	; () banked
 12113  004A82  51A9               	movf	drawCircle@x& (0+255),w,b
 12114  004A84  0800               	sublw	0
 12115  004A86  0100               	movlb	0	; () banked
 12116  004A88  259B               	addwf	drawCircle@y0& (0+255),w,b
 12117  004A8A  0100               	movlb	0	; () banked
 12118  004A8C  6F95               	movwf	drawPixel@y& (0+255),b
 12119  004A8E  C09F  F096         	movff	drawCircle@color,drawPixel@color
 12120  004A92  C0A0  F097         	movff	drawCircle@color+1,drawPixel@color+1
 12121  004A96  0100               	movlb	0	; () banked
 12122  004A98  5199               	movf	drawCircle@x0& (0+255),w,b
 12123  004A9A  0100               	movlb	0	; () banked
 12124  004A9C  25AB               	addwf	drawCircle@y& (0+255),w,b
 12125  004A9E  ECDF  F045         	call	_drawPixel
 12126                           
 12127                           ;ST7735_TFT.c: 553: drawPixel(x0 - y, y0 - x, color);
 12128  004AA2  0100               	movlb	0	; () banked
 12129  004AA4  51A9               	movf	drawCircle@x& (0+255),w,b
 12130  004AA6  0800               	sublw	0
 12131  004AA8  0100               	movlb	0	; () banked
 12132  004AAA  259B               	addwf	drawCircle@y0& (0+255),w,b
 12133  004AAC  0100               	movlb	0	; () banked
 12134  004AAE  6F95               	movwf	drawPixel@y& (0+255),b
 12135  004AB0  C09F  F096         	movff	drawCircle@color,drawPixel@color
 12136  004AB4  C0A0  F097         	movff	drawCircle@color+1,drawPixel@color+1
 12137  004AB8  0100               	movlb	0	; () banked
 12138  004ABA  51AB               	movf	drawCircle@y& (0+255),w,b
 12139  004ABC  0800               	sublw	0
 12140  004ABE  0100               	movlb	0	; () banked
 12141  004AC0  2599               	addwf	drawCircle@x0& (0+255),w,b
 12142  004AC2  ECDF  F045         	call	_drawPixel
 12143  004AC6  D000               	goto	l8987
 12144  004AC8                     l8987:
 12145  004AC8  0100               	movlb	0	; () banked
 12146  004ACA  51AB               	movf	drawCircle@y& (0+255),w,b
 12147  004ACC  0100               	movlb	0	; () banked
 12148  004ACE  5DA9               	subwf	drawCircle@x& (0+255),w,b
 12149  004AD0  0100               	movlb	0	; () banked
 12150  004AD2  51AA               	movf	(drawCircle@x+1)& (0+255),w,b
 12151  004AD4  0A80               	xorlw	128
 12152  004AD6  0100               	movlb	0	; () banked
 12153  004AD8  6FA1               	movwf	??_drawCircle& (0+255),b
 12154  004ADA  0100               	movlb	0	; () banked
 12155  004ADC  51AC               	movf	(drawCircle@y+1)& (0+255),w,b
 12156  004ADE  0A80               	xorlw	128
 12157  004AE0  0100               	movlb	0	; () banked
 12158  004AE2  59A1               	subwfb	??_drawCircle& (0+255),w,b
 12159  004AE4  A0D8               	btfss	status,0,c
 12160  004AE6  D743               	goto	l8959
 12161                           
 12162                           ; BSR set to: 0
 12163                           
 12164                           ; BSR set to: 0
 12165  004AE8  0012               	return		;funcret
 12166  004AEA                     __end_of_drawCircle:
 12167                           	opt stack 0
 12168                           tblptru	equ	0xFF8
 12169                           tblptrh	equ	0xFF7
 12170                           tblptrl	equ	0xFF6
 12171                           tablat	equ	0xFF5
 12172                           prodh	equ	0xFF4
 12173                           prodl	equ	0xFF3
 12174                           intcon	equ	0xFF2
 12175                           intcon2	equ	0xFF1
 12176                           postinc0	equ	0xFEE
 12177                           wreg	equ	0xFE8
 12178                           postdec1	equ	0xFE5
 12179                           fsr1l	equ	0xFE1
 12180                           indf2	equ	0xFDF
 12181                           postinc2	equ	0xFDE
 12182                           fsr2h	equ	0xFDA
 12183                           fsr2l	equ	0xFD9
 12184                           status	equ	0xFD8
 12185                           
 12186 ;; *************** function _TFT_GreenTab_Initialize *****************
 12187 ;; Defined at:
 12188 ;;		line 645 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/ST7735_TFT.c"
 12189 ;; Parameters:    Size  Location     Type
 12190 ;;		None
 12191 ;; Auto vars:     Size  Location     Type
 12192 ;;		None
 12193 ;; Return value:  Size  Location     Type
 12194 ;;		None               void
 12195 ;; Registers used:
 12196 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12197 ;; Tracked objects:
 12198 ;;		On entry : 0/0
 12199 ;;		On exit  : 0/0
 12200 ;;		Unchanged: 0/0
 12201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12206 ;;Total ram usage:        0 bytes
 12207 ;; Hardware stack levels used:    1
 12208 ;; Hardware stack levels required when called:    9
 12209 ;; This function calls:
 12210 ;;		_Rcmd1
 12211 ;;		_Rcmd2red
 12212 ;;		_Rcmd3
 12213 ;;		_write_command
 12214 ;;		_write_data
 12215 ;; This function is called by:
 12216 ;;		_Initialize_Screen
 12217 ;; This function uses a non-reentrant model
 12218 ;;
 12219                           
 12220                           	psect	text50
 12221  008E5E                     __ptext50:
 12222                           	opt stack 0
 12223  008E5E                     _TFT_GreenTab_Initialize:
 12224                           	opt stack 18
 12225                           
 12226                           ;ST7735_TFT.c: 647: PORTDbits.RD4 = 1;
 12227                           
 12228                           ; BSR set to: 0
 12229                           ;incstack = 0
 12230  008E5E  8883               	bsf	3971,4,c	;volatile
 12231                           
 12232                           ;ST7735_TFT.c: 648: PORTDbits.RD3 = 0;
 12233  008E60  9683               	bcf	3971,3,c	;volatile
 12234                           
 12235                           ;ST7735_TFT.c: 650: SSPSTAT=0x80;
 12236  008E62  0E80               	movlw	128
 12237  008E64  6EC7               	movwf	4039,c	;volatile
 12238                           
 12239                           ;ST7735_TFT.c: 651: SSPCON1=0x30;
 12240  008E66  0E30               	movlw	48
 12241  008E68  6EC6               	movwf	4038,c	;volatile
 12242                           
 12243                           ;ST7735_TFT.c: 654: Rcmd1();
 12244  008E6A  ECBD  F033         	call	_Rcmd1	;wreg free
 12245                           
 12246                           ;ST7735_TFT.c: 655: Rcmd2red();
 12247  008E6E  EC42  F046         	call	_Rcmd2red	;wreg free
 12248                           
 12249                           ;ST7735_TFT.c: 656: Rcmd3();
 12250  008E72  ECC6  F037         	call	_Rcmd3	;wreg free
 12251                           
 12252                           ;ST7735_TFT.c: 657: write_command(0x36);
 12253  008E76  0E36               	movlw	54
 12254  008E78  ECD1  F048         	call	_write_command
 12255                           
 12256                           ;ST7735_TFT.c: 658: write_data(0xC0);
 12257  008E7C  0EC0               	movlw	192
 12258  008E7E  ECC7  F048         	call	_write_data
 12259                           
 12260                           ;ST7735_TFT.c: 659: _tft_type = 1;
 12261  008E82  0E01               	movlw	1
 12262  008E84  6E7E               	movwf	__tft_type,c
 12263  008E86  0012               	return		;funcret
 12264  008E88                     __end_of_TFT_GreenTab_Initialize:
 12265                           	opt stack 0
 12266                           tblptru	equ	0xFF8
 12267                           tblptrh	equ	0xFF7
 12268                           tblptrl	equ	0xFF6
 12269                           tablat	equ	0xFF5
 12270                           prodh	equ	0xFF4
 12271                           prodl	equ	0xFF3
 12272                           intcon	equ	0xFF2
 12273                           intcon2	equ	0xFF1
 12274                           postinc0	equ	0xFEE
 12275                           wreg	equ	0xFE8
 12276                           postdec1	equ	0xFE5
 12277                           fsr1l	equ	0xFE1
 12278                           indf2	equ	0xFDF
 12279                           postinc2	equ	0xFDE
 12280                           fsr2h	equ	0xFDA
 12281                           fsr2l	equ	0xFD9
 12282                           status	equ	0xFD8
 12283                           
 12284 ;; *************** function _Rcmd3 *****************
 12285 ;; Defined at:
 12286 ;;		line 339 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/ST7735_TFT.c"
 12287 ;; Parameters:    Size  Location     Type
 12288 ;;		None
 12289 ;; Auto vars:     Size  Location     Type
 12290 ;;		None
 12291 ;; Return value:  Size  Location     Type
 12292 ;;		None               void
 12293 ;; Registers used:
 12294 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12295 ;; Tracked objects:
 12296 ;;		On entry : 0/0
 12297 ;;		On exit  : 0/0
 12298 ;;		Unchanged: 0/0
 12299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12304 ;;Total ram usage:        0 bytes
 12305 ;; Hardware stack levels used:    1
 12306 ;; Hardware stack levels required when called:    8
 12307 ;; This function calls:
 12308 ;;		_delay_ms
 12309 ;;		_write_command
 12310 ;;		_write_data
 12311 ;; This function is called by:
 12312 ;;		_TFT_GreenTab_Initialize
 12313 ;;		_TFT_BlackTab_Initialize
 12314 ;; This function uses a non-reentrant model
 12315 ;;
 12316                           
 12317                           	psect	text51
 12318  006F8C                     __ptext51:
 12319                           	opt stack 0
 12320  006F8C                     _Rcmd3:
 12321                           	opt stack 18
 12322                           
 12323                           ;ST7735_TFT.c: 341: write_command(0xE0);
 12324                           
 12325                           ;incstack = 0
 12326  006F8C  0EE0               	movlw	224
 12327  006F8E  ECD1  F048         	call	_write_command
 12328                           
 12329                           ;ST7735_TFT.c: 342: write_data(0x02); write_data(0x1C); write_data(0x07); write_data(0x1
      +                          2);
 12330  006F92  0E02               	movlw	2
 12331  006F94  ECC7  F048         	call	_write_data
 12332  006F98  0E1C               	movlw	28
 12333  006F9A  ECC7  F048         	call	_write_data
 12334  006F9E  0E07               	movlw	7
 12335  006FA0  ECC7  F048         	call	_write_data
 12336  006FA4  0E12               	movlw	18
 12337  006FA6  ECC7  F048         	call	_write_data
 12338                           
 12339                           ;ST7735_TFT.c: 343: write_data(0x37); write_data(0x32); write_data(0x29); write_data(0x2
      +                          D);
 12340  006FAA  0E37               	movlw	55
 12341  006FAC  ECC7  F048         	call	_write_data
 12342  006FB0  0E32               	movlw	50
 12343  006FB2  ECC7  F048         	call	_write_data
 12344  006FB6  0E29               	movlw	41
 12345  006FB8  ECC7  F048         	call	_write_data
 12346  006FBC  0E2D               	movlw	45
 12347  006FBE  ECC7  F048         	call	_write_data
 12348                           
 12349                           ;ST7735_TFT.c: 344: write_data(0x29); write_data(0x25); write_data(0x2B); write_data(0x3
      +                          9);
 12350  006FC2  0E29               	movlw	41
 12351  006FC4  ECC7  F048         	call	_write_data
 12352  006FC8  0E25               	movlw	37
 12353  006FCA  ECC7  F048         	call	_write_data
 12354  006FCE  0E2B               	movlw	43
 12355  006FD0  ECC7  F048         	call	_write_data
 12356  006FD4  0E39               	movlw	57
 12357  006FD6  ECC7  F048         	call	_write_data
 12358                           
 12359                           ;ST7735_TFT.c: 345: write_data(0x00); write_data(0x01); write_data(0x03); write_data(0x1
      +                          0);
 12360  006FDA  0E00               	movlw	0
 12361  006FDC  ECC7  F048         	call	_write_data
 12362  006FE0  0E01               	movlw	1
 12363  006FE2  ECC7  F048         	call	_write_data
 12364  006FE6  0E03               	movlw	3
 12365  006FE8  ECC7  F048         	call	_write_data
 12366  006FEC  0E10               	movlw	16
 12367  006FEE  ECC7  F048         	call	_write_data
 12368                           
 12369                           ;ST7735_TFT.c: 346: write_command(0xE1);
 12370  006FF2  0EE1               	movlw	225
 12371  006FF4  ECD1  F048         	call	_write_command
 12372                           
 12373                           ;ST7735_TFT.c: 347: write_data(0x03); write_data(0x1D); write_data(0x07); write_data(0x0
      +                          6);
 12374  006FF8  0E03               	movlw	3
 12375  006FFA  ECC7  F048         	call	_write_data
 12376  006FFE  0E1D               	movlw	29
 12377  007000  ECC7  F048         	call	_write_data
 12378  007004  0E07               	movlw	7
 12379  007006  ECC7  F048         	call	_write_data
 12380  00700A  0E06               	movlw	6
 12381  00700C  ECC7  F048         	call	_write_data
 12382                           
 12383                           ;ST7735_TFT.c: 348: write_data(0x2E); write_data(0x2C); write_data(0x29); write_data(0x2
      +                          D);
 12384  007010  0E2E               	movlw	46
 12385  007012  ECC7  F048         	call	_write_data
 12386  007016  0E2C               	movlw	44
 12387  007018  ECC7  F048         	call	_write_data
 12388  00701C  0E29               	movlw	41
 12389  00701E  ECC7  F048         	call	_write_data
 12390  007022  0E2D               	movlw	45
 12391  007024  ECC7  F048         	call	_write_data
 12392                           
 12393                           ;ST7735_TFT.c: 349: write_data(0x2E); write_data(0x2E); write_data(0x37); write_data(0x3
      +                          F);
 12394  007028  0E2E               	movlw	46
 12395  00702A  ECC7  F048         	call	_write_data
 12396  00702E  0E2E               	movlw	46
 12397  007030  ECC7  F048         	call	_write_data
 12398  007034  0E37               	movlw	55
 12399  007036  ECC7  F048         	call	_write_data
 12400  00703A  0E3F               	movlw	63
 12401  00703C  ECC7  F048         	call	_write_data
 12402                           
 12403                           ;ST7735_TFT.c: 350: write_data(0x00); write_data(0x00); write_data(0x02); write_data(0x1
      +                          0);
 12404  007040  0E00               	movlw	0
 12405  007042  ECC7  F048         	call	_write_data
 12406  007046  0E00               	movlw	0
 12407  007048  ECC7  F048         	call	_write_data
 12408  00704C  0E02               	movlw	2
 12409  00704E  ECC7  F048         	call	_write_data
 12410  007052  0E10               	movlw	16
 12411  007054  ECC7  F048         	call	_write_data
 12412                           
 12413                           ;ST7735_TFT.c: 351: write_command(0x13);
 12414  007058  0E13               	movlw	19
 12415  00705A  ECD1  F048         	call	_write_command
 12416                           
 12417                           ;ST7735_TFT.c: 352: delay_ms(10);
 12418  00705E  0E00               	movlw	0
 12419  007060  0100               	movlb	0	; () banked
 12420  007062  6F95               	movwf	(delay_ms@ms+1)& (0+255),b
 12421  007064  0E0A               	movlw	10
 12422  007066  6F94               	movwf	delay_ms@ms& (0+255),b
 12423  007068  ECC0  F043         	call	_delay_ms	;wreg free
 12424                           
 12425                           ;ST7735_TFT.c: 353: write_command(0x29);
 12426  00706C  0E29               	movlw	41
 12427  00706E  ECD1  F048         	call	_write_command
 12428                           
 12429                           ;ST7735_TFT.c: 354: delay_ms(100);
 12430  007072  0E00               	movlw	0
 12431  007074  0100               	movlb	0	; () banked
 12432  007076  6F95               	movwf	(delay_ms@ms+1)& (0+255),b
 12433  007078  0E64               	movlw	100
 12434  00707A  6F94               	movwf	delay_ms@ms& (0+255),b
 12435  00707C  ECC0  F043         	call	_delay_ms	;wreg free
 12436  007080  0012               	return		;funcret
 12437  007082                     __end_of_Rcmd3:
 12438                           	opt stack 0
 12439                           tblptru	equ	0xFF8
 12440                           tblptrh	equ	0xFF7
 12441                           tblptrl	equ	0xFF6
 12442                           tablat	equ	0xFF5
 12443                           prodh	equ	0xFF4
 12444                           prodl	equ	0xFF3
 12445                           intcon	equ	0xFF2
 12446                           intcon2	equ	0xFF1
 12447                           postinc0	equ	0xFEE
 12448                           wreg	equ	0xFE8
 12449                           postdec1	equ	0xFE5
 12450                           fsr1l	equ	0xFE1
 12451                           indf2	equ	0xFDF
 12452                           postinc2	equ	0xFDE
 12453                           fsr2h	equ	0xFDA
 12454                           fsr2l	equ	0xFD9
 12455                           status	equ	0xFD8
 12456                           
 12457 ;; *************** function _Rcmd2red *****************
 12458 ;; Defined at:
 12459 ;;		line 329 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/ST7735_TFT.c"
 12460 ;; Parameters:    Size  Location     Type
 12461 ;;		None
 12462 ;; Auto vars:     Size  Location     Type
 12463 ;;		None
 12464 ;; Return value:  Size  Location     Type
 12465 ;;		None               void
 12466 ;; Registers used:
 12467 ;;		wreg, status,2, cstack
 12468 ;; Tracked objects:
 12469 ;;		On entry : 0/0
 12470 ;;		On exit  : 0/0
 12471 ;;		Unchanged: 0/0
 12472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12477 ;;Total ram usage:        0 bytes
 12478 ;; Hardware stack levels used:    1
 12479 ;; Hardware stack levels required when called:    8
 12480 ;; This function calls:
 12481 ;;		_write_command
 12482 ;;		_write_data
 12483 ;; This function is called by:
 12484 ;;		_TFT_GreenTab_Initialize
 12485 ;; This function uses a non-reentrant model
 12486 ;;
 12487                           
 12488                           	psect	text52
 12489  008C84                     __ptext52:
 12490                           	opt stack 0
 12491  008C84                     _Rcmd2red:
 12492                           	opt stack 18
 12493                           
 12494                           ;ST7735_TFT.c: 331: write_command(0x2A);
 12495                           
 12496                           ;incstack = 0
 12497  008C84  0E2A               	movlw	42
 12498  008C86  ECD1  F048         	call	_write_command
 12499                           
 12500                           ;ST7735_TFT.c: 332: write_data(0x00); write_data(0x00);
 12501  008C8A  0E00               	movlw	0
 12502  008C8C  ECC7  F048         	call	_write_data
 12503  008C90  0E00               	movlw	0
 12504  008C92  ECC7  F048         	call	_write_data
 12505                           
 12506                           ;ST7735_TFT.c: 333: write_data(0x00); write_data(0x7F);
 12507  008C96  0E00               	movlw	0
 12508  008C98  ECC7  F048         	call	_write_data
 12509  008C9C  0E7F               	movlw	127
 12510  008C9E  ECC7  F048         	call	_write_data
 12511                           
 12512                           ;ST7735_TFT.c: 334: write_command(0x2B);
 12513  008CA2  0E2B               	movlw	43
 12514  008CA4  ECD1  F048         	call	_write_command
 12515                           
 12516                           ;ST7735_TFT.c: 335: write_data(0x00); write_data(0x00);
 12517  008CA8  0E00               	movlw	0
 12518  008CAA  ECC7  F048         	call	_write_data
 12519  008CAE  0E00               	movlw	0
 12520  008CB0  ECC7  F048         	call	_write_data
 12521                           
 12522                           ;ST7735_TFT.c: 336: write_data(0x00); write_data(0x9F);
 12523  008CB4  0E00               	movlw	0
 12524  008CB6  ECC7  F048         	call	_write_data
 12525  008CBA  0E9F               	movlw	159
 12526  008CBC  ECC7  F048         	call	_write_data
 12527  008CC0  0012               	return		;funcret
 12528  008CC2                     __end_of_Rcmd2red:
 12529                           	opt stack 0
 12530                           tblptru	equ	0xFF8
 12531                           tblptrh	equ	0xFF7
 12532                           tblptrl	equ	0xFF6
 12533                           tablat	equ	0xFF5
 12534                           prodh	equ	0xFF4
 12535                           prodl	equ	0xFF3
 12536                           intcon	equ	0xFF2
 12537                           intcon2	equ	0xFF1
 12538                           postinc0	equ	0xFEE
 12539                           wreg	equ	0xFE8
 12540                           postdec1	equ	0xFE5
 12541                           fsr1l	equ	0xFE1
 12542                           indf2	equ	0xFDF
 12543                           postinc2	equ	0xFDE
 12544                           fsr2h	equ	0xFDA
 12545                           fsr2l	equ	0xFD9
 12546                           status	equ	0xFD8
 12547                           
 12548 ;; *************** function _Rcmd1 *****************
 12549 ;; Defined at:
 12550 ;;		line 282 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/ST7735_TFT.c"
 12551 ;; Parameters:    Size  Location     Type
 12552 ;;		None
 12553 ;; Auto vars:     Size  Location     Type
 12554 ;;		None
 12555 ;; Return value:  Size  Location     Type
 12556 ;;		None               void
 12557 ;; Registers used:
 12558 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12559 ;; Tracked objects:
 12560 ;;		On entry : 0/0
 12561 ;;		On exit  : 0/0
 12562 ;;		Unchanged: 0/0
 12563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12568 ;;Total ram usage:        0 bytes
 12569 ;; Hardware stack levels used:    1
 12570 ;; Hardware stack levels required when called:    8
 12571 ;; This function calls:
 12572 ;;		_delay_ms
 12573 ;;		_write_command
 12574 ;;		_write_data
 12575 ;; This function is called by:
 12576 ;;		_TFT_GreenTab_Initialize
 12577 ;;		_TFT_BlackTab_Initialize
 12578 ;; This function uses a non-reentrant model
 12579 ;;
 12580                           
 12581                           	psect	text53
 12582  00677A                     __ptext53:
 12583                           	opt stack 0
 12584  00677A                     _Rcmd1:
 12585                           	opt stack 18
 12586                           
 12587                           ;ST7735_TFT.c: 284: write_command(0x01);
 12588                           
 12589                           ;incstack = 0
 12590  00677A  0E01               	movlw	1
 12591  00677C  ECD1  F048         	call	_write_command
 12592                           
 12593                           ;ST7735_TFT.c: 285: delay_ms(150);
 12594  006780  0E00               	movlw	0
 12595  006782  0100               	movlb	0	; () banked
 12596  006784  6F95               	movwf	(delay_ms@ms+1)& (0+255),b
 12597  006786  0E96               	movlw	150
 12598  006788  6F94               	movwf	delay_ms@ms& (0+255),b
 12599  00678A  ECC0  F043         	call	_delay_ms	;wreg free
 12600                           
 12601                           ;ST7735_TFT.c: 286: write_command(0x11);
 12602  00678E  0E11               	movlw	17
 12603  006790  ECD1  F048         	call	_write_command
 12604                           
 12605                           ;ST7735_TFT.c: 287: delay_ms(500);
 12606  006794  0E01               	movlw	1
 12607  006796  0100               	movlb	0	; () banked
 12608  006798  6F95               	movwf	(delay_ms@ms+1)& (0+255),b
 12609  00679A  0EF4               	movlw	244
 12610  00679C  6F94               	movwf	delay_ms@ms& (0+255),b
 12611  00679E  ECC0  F043         	call	_delay_ms	;wreg free
 12612                           
 12613                           ;ST7735_TFT.c: 288: write_command(0xB1);
 12614  0067A2  0EB1               	movlw	177
 12615  0067A4  ECD1  F048         	call	_write_command
 12616                           
 12617                           ;ST7735_TFT.c: 289: write_data(0x01);
 12618  0067A8  0E01               	movlw	1
 12619  0067AA  ECC7  F048         	call	_write_data
 12620                           
 12621                           ;ST7735_TFT.c: 290: write_data(0x2C);
 12622  0067AE  0E2C               	movlw	44
 12623  0067B0  ECC7  F048         	call	_write_data
 12624                           
 12625                           ;ST7735_TFT.c: 291: write_data(0x2D);
 12626  0067B4  0E2D               	movlw	45
 12627  0067B6  ECC7  F048         	call	_write_data
 12628                           
 12629                           ;ST7735_TFT.c: 292: write_command(0xB2);
 12630  0067BA  0EB2               	movlw	178
 12631  0067BC  ECD1  F048         	call	_write_command
 12632                           
 12633                           ;ST7735_TFT.c: 293: write_data(0x01);
 12634  0067C0  0E01               	movlw	1
 12635  0067C2  ECC7  F048         	call	_write_data
 12636                           
 12637                           ;ST7735_TFT.c: 294: write_data(0x2C);
 12638  0067C6  0E2C               	movlw	44
 12639  0067C8  ECC7  F048         	call	_write_data
 12640                           
 12641                           ;ST7735_TFT.c: 295: write_data(0x2D);
 12642  0067CC  0E2D               	movlw	45
 12643  0067CE  ECC7  F048         	call	_write_data
 12644                           
 12645                           ;ST7735_TFT.c: 296: write_command(0xB3);
 12646  0067D2  0EB3               	movlw	179
 12647  0067D4  ECD1  F048         	call	_write_command
 12648                           
 12649                           ;ST7735_TFT.c: 297: write_data(0x01);
 12650  0067D8  0E01               	movlw	1
 12651  0067DA  ECC7  F048         	call	_write_data
 12652                           
 12653                           ;ST7735_TFT.c: 298: write_data(0x2C);
 12654  0067DE  0E2C               	movlw	44
 12655  0067E0  ECC7  F048         	call	_write_data
 12656                           
 12657                           ;ST7735_TFT.c: 299: write_data(0x2D);
 12658  0067E4  0E2D               	movlw	45
 12659  0067E6  ECC7  F048         	call	_write_data
 12660                           
 12661                           ;ST7735_TFT.c: 300: write_data(0x01);
 12662  0067EA  0E01               	movlw	1
 12663  0067EC  ECC7  F048         	call	_write_data
 12664                           
 12665                           ;ST7735_TFT.c: 301: write_data(0x2C);
 12666  0067F0  0E2C               	movlw	44
 12667  0067F2  ECC7  F048         	call	_write_data
 12668                           
 12669                           ;ST7735_TFT.c: 302: write_data(0x2D);
 12670  0067F6  0E2D               	movlw	45
 12671  0067F8  ECC7  F048         	call	_write_data
 12672                           
 12673                           ;ST7735_TFT.c: 303: write_command(0xB4);
 12674  0067FC  0EB4               	movlw	180
 12675  0067FE  ECD1  F048         	call	_write_command
 12676                           
 12677                           ;ST7735_TFT.c: 304: write_data(0x07);
 12678  006802  0E07               	movlw	7
 12679  006804  ECC7  F048         	call	_write_data
 12680                           
 12681                           ;ST7735_TFT.c: 305: write_command(0xC0);
 12682  006808  0EC0               	movlw	192
 12683  00680A  ECD1  F048         	call	_write_command
 12684                           
 12685                           ;ST7735_TFT.c: 306: write_data(0xA2);
 12686  00680E  0EA2               	movlw	162
 12687  006810  ECC7  F048         	call	_write_data
 12688                           
 12689                           ;ST7735_TFT.c: 307: write_data(0x02);
 12690  006814  0E02               	movlw	2
 12691  006816  ECC7  F048         	call	_write_data
 12692                           
 12693                           ;ST7735_TFT.c: 308: write_data(0x84);
 12694  00681A  0E84               	movlw	132
 12695  00681C  ECC7  F048         	call	_write_data
 12696                           
 12697                           ;ST7735_TFT.c: 309: write_command(0xC1);
 12698  006820  0EC1               	movlw	193
 12699  006822  ECD1  F048         	call	_write_command
 12700                           
 12701                           ;ST7735_TFT.c: 310: write_data(0xC5);
 12702  006826  0EC5               	movlw	197
 12703  006828  ECC7  F048         	call	_write_data
 12704                           
 12705                           ;ST7735_TFT.c: 311: write_command(0xC2);
 12706  00682C  0EC2               	movlw	194
 12707  00682E  ECD1  F048         	call	_write_command
 12708                           
 12709                           ;ST7735_TFT.c: 312: write_data(0x0A);
 12710  006832  0E0A               	movlw	10
 12711  006834  ECC7  F048         	call	_write_data
 12712                           
 12713                           ;ST7735_TFT.c: 313: write_data(0x00);
 12714  006838  0E00               	movlw	0
 12715  00683A  ECC7  F048         	call	_write_data
 12716                           
 12717                           ;ST7735_TFT.c: 314: write_command(0xC3);
 12718  00683E  0EC3               	movlw	195
 12719  006840  ECD1  F048         	call	_write_command
 12720                           
 12721                           ;ST7735_TFT.c: 315: write_data(0x8A);
 12722  006844  0E8A               	movlw	138
 12723  006846  ECC7  F048         	call	_write_data
 12724                           
 12725                           ;ST7735_TFT.c: 316: write_data(0x2A);
 12726  00684A  0E2A               	movlw	42
 12727  00684C  ECC7  F048         	call	_write_data
 12728                           
 12729                           ;ST7735_TFT.c: 317: write_command(0xC4);
 12730  006850  0EC4               	movlw	196
 12731  006852  ECD1  F048         	call	_write_command
 12732                           
 12733                           ;ST7735_TFT.c: 318: write_data(0x8A);
 12734  006856  0E8A               	movlw	138
 12735  006858  ECC7  F048         	call	_write_data
 12736                           
 12737                           ;ST7735_TFT.c: 319: write_data(0xEE);
 12738  00685C  0EEE               	movlw	238
 12739  00685E  ECC7  F048         	call	_write_data
 12740                           
 12741                           ;ST7735_TFT.c: 320: write_command(0xC5);
 12742  006862  0EC5               	movlw	197
 12743  006864  ECD1  F048         	call	_write_command
 12744                           
 12745                           ;ST7735_TFT.c: 321: write_data(0x0E);
 12746  006868  0E0E               	movlw	14
 12747  00686A  ECC7  F048         	call	_write_data
 12748                           
 12749                           ;ST7735_TFT.c: 322: write_command(0x20);
 12750  00686E  0E20               	movlw	32
 12751  006870  ECD1  F048         	call	_write_command
 12752                           
 12753                           ;ST7735_TFT.c: 323: write_command(0x36);
 12754  006874  0E36               	movlw	54
 12755  006876  ECD1  F048         	call	_write_command
 12756                           
 12757                           ;ST7735_TFT.c: 324: write_data(0xC8);
 12758  00687A  0EC8               	movlw	200
 12759  00687C  ECC7  F048         	call	_write_data
 12760                           
 12761                           ;ST7735_TFT.c: 325: write_command(0x3A);
 12762  006880  0E3A               	movlw	58
 12763  006882  ECD1  F048         	call	_write_command
 12764                           
 12765                           ;ST7735_TFT.c: 326: write_data(0x05);
 12766  006886  0E05               	movlw	5
 12767  006888  ECC7  F048         	call	_write_data
 12768  00688C  0012               	return		;funcret
 12769  00688E                     __end_of_Rcmd1:
 12770                           	opt stack 0
 12771                           tblptru	equ	0xFF8
 12772                           tblptrh	equ	0xFF7
 12773                           tblptrl	equ	0xFF6
 12774                           tablat	equ	0xFF5
 12775                           prodh	equ	0xFF4
 12776                           prodl	equ	0xFF3
 12777                           intcon	equ	0xFF2
 12778                           intcon2	equ	0xFF1
 12779                           postinc0	equ	0xFEE
 12780                           wreg	equ	0xFE8
 12781                           postdec1	equ	0xFE5
 12782                           fsr1l	equ	0xFE1
 12783                           indf2	equ	0xFDF
 12784                           postinc2	equ	0xFDE
 12785                           fsr2h	equ	0xFDA
 12786                           fsr2l	equ	0xFD9
 12787                           status	equ	0xFD8
 12788                           
 12789 ;; *************** function _LCD_Reset *****************
 12790 ;; Defined at:
 12791 ;;		line 218 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/ST7735_TFT.c"
 12792 ;; Parameters:    Size  Location     Type
 12793 ;;		None
 12794 ;; Auto vars:     Size  Location     Type
 12795 ;;		None
 12796 ;; Return value:  Size  Location     Type
 12797 ;;		None               void
 12798 ;; Registers used:
 12799 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12800 ;; Tracked objects:
 12801 ;;		On entry : 0/0
 12802 ;;		On exit  : 0/0
 12803 ;;		Unchanged: 0/0
 12804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12809 ;;Total ram usage:        0 bytes
 12810 ;; Hardware stack levels used:    1
 12811 ;; Hardware stack levels required when called:    8
 12812 ;; This function calls:
 12813 ;;		_delay_ms
 12814 ;; This function is called by:
 12815 ;;		_Initialize_Screen
 12816 ;; This function uses a non-reentrant model
 12817 ;;
 12818                           
 12819                           	psect	text54
 12820  00917A                     __ptext54:
 12821                           	opt stack 0
 12822  00917A                     _LCD_Reset:
 12823                           	opt stack 19
 12824                           
 12825                           ;ST7735_TFT.c: 220: PORTDbits.RD5 = 0;
 12826                           
 12827                           ;incstack = 0
 12828  00917A  9A83               	bcf	3971,5,c	;volatile
 12829                           
 12830                           ;ST7735_TFT.c: 221: delay_ms(100);
 12831  00917C  0E00               	movlw	0
 12832  00917E  0100               	movlb	0	; () banked
 12833  009180  6F95               	movwf	(delay_ms@ms+1)& (0+255),b
 12834  009182  0E64               	movlw	100
 12835  009184  6F94               	movwf	delay_ms@ms& (0+255),b
 12836  009186  ECC0  F043         	call	_delay_ms	;wreg free
 12837                           
 12838                           ;ST7735_TFT.c: 222: PORTDbits.RD5 = 1;
 12839  00918A  8A83               	bsf	3971,5,c	;volatile
 12840  00918C  0012               	return		;funcret
 12841  00918E                     __end_of_LCD_Reset:
 12842                           	opt stack 0
 12843                           tblptru	equ	0xFF8
 12844                           tblptrh	equ	0xFF7
 12845                           tblptrl	equ	0xFF6
 12846                           tablat	equ	0xFF5
 12847                           prodh	equ	0xFF4
 12848                           prodl	equ	0xFF3
 12849                           intcon	equ	0xFF2
 12850                           intcon2	equ	0xFF1
 12851                           postinc0	equ	0xFEE
 12852                           wreg	equ	0xFE8
 12853                           postdec1	equ	0xFE5
 12854                           fsr1l	equ	0xFE1
 12855                           indf2	equ	0xFDF
 12856                           postinc2	equ	0xFDE
 12857                           fsr2h	equ	0xFDA
 12858                           fsr2l	equ	0xFD9
 12859                           status	equ	0xFD8
 12860                           
 12861 ;; *************** function _delay_ms *****************
 12862 ;; Defined at:
 12863 ;;		line 65 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/ST7735_TFT.c"
 12864 ;; Parameters:    Size  Location     Type
 12865 ;;  ms              2   20[BANK0 ] int 
 12866 ;; Auto vars:     Size  Location     Type
 12867 ;;  count           2   24[BANK0 ] int 
 12868 ;; Return value:  Size  Location     Type
 12869 ;;		None               void
 12870 ;; Registers used:
 12871 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12872 ;; Tracked objects:
 12873 ;;		On entry : 0/0
 12874 ;;		On exit  : 0/0
 12875 ;;		Unchanged: 0/0
 12876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12877 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12878 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12879 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12880 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12881 ;;Total ram usage:        6 bytes
 12882 ;; Hardware stack levels used:    1
 12883 ;; Hardware stack levels required when called:    7
 12884 ;; This function calls:
 12885 ;;		___wmul
 12886 ;; This function is called by:
 12887 ;;		_LCD_Reset
 12888 ;;		_Rcmd1
 12889 ;;		_Rcmd3
 12890 ;;		_Bcmd
 12891 ;; This function uses a non-reentrant model
 12892 ;;
 12893                           
 12894                           	psect	text55
 12895  008780                     __ptext55:
 12896                           	opt stack 0
 12897  008780                     _delay_ms:
 12898                           	opt stack 18
 12899                           
 12900                           ;ST7735_TFT.c: 71: int count;
 12901                           ;ST7735_TFT.c: 72: count = 8000000/4000/16 * ms;
 12902                           
 12903                           ;incstack = 0
 12904  008780  C094  F08E         	movff	delay_ms@ms,___wmul@multiplier
 12905  008784  C095  F08F         	movff	delay_ms@ms+1,___wmul@multiplier+1
 12906  008788  0E00               	movlw	0
 12907  00878A  0100               	movlb	0	; () banked
 12908  00878C  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12909  00878E  0E7D               	movlw	125
 12910  008790  6F90               	movwf	___wmul@multiplicand& (0+255),b
 12911  008792  EC7F  F046         	call	___wmul	;wreg free
 12912  008796  C08E  F098         	movff	?___wmul,delay_ms@count
 12913  00879A  C08F  F099         	movff	?___wmul+1,delay_ms@count+1
 12914                           
 12915                           ;ST7735_TFT.c: 73: count = (0xffff - count);
 12916  00879E  C098  F096         	movff	delay_ms@count,??_delay_ms
 12917  0087A2  C099  F097         	movff	delay_ms@count+1,??_delay_ms+1
 12918  0087A6  0100               	movlb	0	; () banked
 12919  0087A8  1F96               	comf	??_delay_ms& (0+255),f,b
 12920  0087AA  1F97               	comf	(??_delay_ms+1)& (0+255),f,b
 12921  0087AC  4B96               	infsnz	??_delay_ms& (0+255),f,b
 12922  0087AE  2B97               	incf	(??_delay_ms+1)& (0+255),f,b
 12923  0087B0  0EFF               	movlw	255
 12924  0087B2  0100               	movlb	0	; () banked
 12925  0087B4  2596               	addwf	??_delay_ms& (0+255),w,b
 12926  0087B6  0100               	movlb	0	; () banked
 12927  0087B8  6F98               	movwf	delay_ms@count& (0+255),b
 12928  0087BA  0EFF               	movlw	255
 12929  0087BC  0100               	movlb	0	; () banked
 12930  0087BE  2197               	addwfc	(??_delay_ms+1)& (0+255),w,b
 12931  0087C0  0100               	movlb	0	; () banked
 12932  0087C2  6F99               	movwf	(delay_ms@count+1)& (0+255),b
 12933                           
 12934                           ; BSR set to: 0
 12935                           ;ST7735_TFT.c: 75: T0CON = 0x03;
 12936  0087C4  0E03               	movlw	3
 12937  0087C6  6ED5               	movwf	4053,c	;volatile
 12938                           
 12939                           ; BSR set to: 0
 12940                           ;ST7735_TFT.c: 77: TMR0L = count & 0x00ff;
 12941  0087C8  C098  FFD6         	movff	delay_ms@count,4054	;volatile
 12942                           
 12943                           ; BSR set to: 0
 12944                           ;ST7735_TFT.c: 78: TMR0H = count >> 8;
 12945  0087CC  0100               	movlb	0	; () banked
 12946  0087CE  5199               	movf	(delay_ms@count+1)& (0+255),w,b
 12947  0087D0  6ED7               	movwf	4055,c	;volatile
 12948                           
 12949                           ; BSR set to: 0
 12950                           ;ST7735_TFT.c: 80: INTCONbits.TMR0IF = 0;
 12951  0087D2  94F2               	bcf	intcon,2,c	;volatile
 12952                           
 12953                           ; BSR set to: 0
 12954                           ;ST7735_TFT.c: 81: T0CONbits.TMR0ON = 1;
 12955  0087D4  8ED5               	bsf	4053,7,c	;volatile
 12956                           
 12957                           ;ST7735_TFT.c: 83: while (INTCONbits.TMR0IF == 0);
 12958  0087D6  D000               	goto	l684
 12959  0087D8                     l684:
 12960  0087D8  A4F2               	btfss	intcon,2,c	;volatile
 12961  0087DA  D7FE               	goto	l684
 12962                           
 12963                           ;ST7735_TFT.c: 84: T0CONbits.TMR0ON = 0;
 12964  0087DC  9ED5               	bcf	4053,7,c	;volatile
 12965  0087DE  0012               	return		;funcret
 12966  0087E0                     __end_of_delay_ms:
 12967                           	opt stack 0
 12968                           tblptru	equ	0xFF8
 12969                           tblptrh	equ	0xFF7
 12970                           tblptrl	equ	0xFF6
 12971                           tablat	equ	0xFF5
 12972                           prodh	equ	0xFF4
 12973                           prodl	equ	0xFF3
 12974                           intcon	equ	0xFF2
 12975                           intcon2	equ	0xFF1
 12976                           postinc0	equ	0xFEE
 12977                           wreg	equ	0xFE8
 12978                           postdec1	equ	0xFE5
 12979                           fsr1l	equ	0xFE1
 12980                           indf2	equ	0xFDF
 12981                           postinc2	equ	0xFDE
 12982                           fsr2h	equ	0xFDA
 12983                           fsr2l	equ	0xFD9
 12984                           status	equ	0xFD8
 12985                           
 12986 ;; *************** function _DS3231_Write_Alarm_Time *****************
 12987 ;; Defined at:
 12988 ;;		line 193 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/I2C_Support.c"
 12989 ;; Parameters:    Size  Location     Type
 12990 ;;		None
 12991 ;; Auto vars:     Size  Location     Type
 12992 ;;  Address         1   72[BANK0 ] unsigned char 
 12993 ;;  Device          1   71[BANK0 ] unsigned char 
 12994 ;; Return value:  Size  Location     Type
 12995 ;;		None               void
 12996 ;; Registers used:
 12997 ;;		wreg, status,2, status,0, cstack
 12998 ;; Tracked objects:
 12999 ;;		On entry : 0/0
 13000 ;;		On exit  : 0/0
 13001 ;;		Unchanged: 0/0
 13002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13004 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13006 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13007 ;;Total ram usage:        2 bytes
 13008 ;; Hardware stack levels used:    1
 13009 ;; Hardware stack levels required when called:   10
 13010 ;; This function calls:
 13011 ;;		_DS3231_Read_Time
 13012 ;;		_I2C_Start
 13013 ;;		_I2C_Stop
 13014 ;;		_I2C_Write
 13015 ;;		_dec_2_bcd
 13016 ;; This function is called by:
 13017 ;;		_Do_Save_New_Alarm_Time
 13018 ;; This function uses a non-reentrant model
 13019 ;;
 13020                           
 13021                           	psect	text56
 13022  007C74                     __ptext56:
 13023                           	opt stack 0
 13024  007C74                     _DS3231_Write_Alarm_Time:
 13025                           	opt stack 18
 13026                           
 13027                           ;I2C_Support.c: 195: DS3231_Read_Time();
 13028                           
 13029                           ;incstack = 0
 13030  007C74  ECAB  F041         	call	_DS3231_Read_Time	;wreg free
 13031                           
 13032                           ;I2C_Support.c: 196: alarm_date = day;
 13033  007C78  C0EA  F0E6         	movff	_day,_alarm_date
 13034                           
 13035                           ;I2C_Support.c: 197: char Device = 0x68;
 13036  007C7C  0E68               	movlw	104
 13037  007C7E  0100               	movlb	0	; () banked
 13038  007C80  6FC7               	movwf	DS3231_Write_Alarm_Time@Device& (0+255),b
 13039                           
 13040                           ; BSR set to: 0
 13041                           ;I2C_Support.c: 198: char Address = 0x07;
 13042  007C82  0E07               	movlw	7
 13043  007C84  0100               	movlb	0	; () banked
 13044  007C86  6FC8               	movwf	DS3231_Write_Alarm_Time@Address& (0+255),b
 13045                           
 13046                           ;I2C_Support.c: 199: alarm_hour = dec_2_bcd(setup_alarm_hour);
 13047  007C88  0101               	movlb	1	; () banked
 13048  007C8A  51C0               	movf	_setup_alarm_hour& (0+255),w,b
 13049  007C8C  ECE8  F041         	call	_dec_2_bcd
 13050  007C90  0100               	movlb	0	; () banked
 13051  007C92  51C0               	movf	?_dec_2_bcd& (0+255),w,b
 13052  007C94  0100               	movlb	0	; () banked
 13053  007C96  6FE7               	movwf	_alarm_hour& (0+255),b
 13054                           
 13055                           ;I2C_Support.c: 200: alarm_minute = dec_2_bcd(setup_alarm_minute);
 13056  007C98  0101               	movlb	1	; () banked
 13057  007C9A  51C1               	movf	_setup_alarm_minute& (0+255),w,b
 13058  007C9C  ECE8  F041         	call	_dec_2_bcd
 13059  007CA0  0100               	movlb	0	; () banked
 13060  007CA2  51C0               	movf	?_dec_2_bcd& (0+255),w,b
 13061  007CA4  0100               	movlb	0	; () banked
 13062  007CA6  6FE8               	movwf	_alarm_minute& (0+255),b
 13063                           
 13064                           ;I2C_Support.c: 201: alarm_second = dec_2_bcd(setup_alarm_second);
 13065  007CA8  0101               	movlb	1	; () banked
 13066  007CAA  51C2               	movf	_setup_alarm_second& (0+255),w,b
 13067  007CAC  ECE8  F041         	call	_dec_2_bcd
 13068  007CB0  0100               	movlb	0	; () banked
 13069  007CB2  51C0               	movf	?_dec_2_bcd& (0+255),w,b
 13070  007CB4  0100               	movlb	0	; () banked
 13071  007CB6  6FE9               	movwf	_alarm_second& (0+255),b
 13072                           
 13073                           ; BSR set to: 0
 13074                           ;I2C_Support.c: 202: alarm_second = alarm_second & 0x7f;
 13075  007CB8  0100               	movlb	0	; () banked
 13076  007CBA  51E9               	movf	_alarm_second& (0+255),w,b
 13077  007CBC  0B7F               	andlw	127
 13078  007CBE  0100               	movlb	0	; () banked
 13079  007CC0  6FE9               	movwf	_alarm_second& (0+255),b
 13080                           
 13081                           ; BSR set to: 0
 13082                           ;I2C_Support.c: 203: alarm_minute = alarm_minute & 0x7f;
 13083  007CC2  0100               	movlb	0	; () banked
 13084  007CC4  51E8               	movf	_alarm_minute& (0+255),w,b
 13085  007CC6  0B7F               	andlw	127
 13086  007CC8  0100               	movlb	0	; () banked
 13087  007CCA  6FE8               	movwf	_alarm_minute& (0+255),b
 13088                           
 13089                           ; BSR set to: 0
 13090                           ;I2C_Support.c: 204: alarm_hour = alarm_hour & 0x7f;
 13091  007CCC  0100               	movlb	0	; () banked
 13092  007CCE  51E7               	movf	_alarm_hour& (0+255),w,b
 13093  007CD0  0B7F               	andlw	127
 13094  007CD2  0100               	movlb	0	; () banked
 13095  007CD4  6FE7               	movwf	_alarm_hour& (0+255),b
 13096                           
 13097                           ; BSR set to: 0
 13098                           ;I2C_Support.c: 205: alarm_date = alarm_date | 0x80;
 13099  007CD6  0100               	movlb	0	; () banked
 13100  007CD8  51E6               	movf	_alarm_date& (0+255),w,b
 13101  007CDA  0980               	iorlw	128
 13102  007CDC  0100               	movlb	0	; () banked
 13103  007CDE  6FE6               	movwf	_alarm_date& (0+255),b
 13104                           
 13105                           ; BSR set to: 0
 13106                           ;I2C_Support.c: 206: I2C_Start();
 13107  007CE0  EC08  F049         	call	_I2C_Start	;wreg free
 13108                           
 13109                           ;I2C_Support.c: 207: I2C_Write((Device << 1) | 0);
 13110  007CE4  0100               	movlb	0	; () banked
 13111  007CE6  51C7               	movf	DS3231_Write_Alarm_Time@Device& (0+255),w,b
 13112  007CE8  25C7               	addwf	DS3231_Write_Alarm_Time@Device& (0+255),w,b
 13113  007CEA  EC4E  F045         	call	_I2C_Write
 13114                           
 13115                           ;I2C_Support.c: 208: I2C_Write(Address);
 13116  007CEE  0100               	movlb	0	; () banked
 13117  007CF0  51C8               	movf	DS3231_Write_Alarm_Time@Address& (0+255),w,b
 13118  007CF2  EC4E  F045         	call	_I2C_Write
 13119                           
 13120                           ;I2C_Support.c: 210: I2C_Write(alarm_second);
 13121  007CF6  0100               	movlb	0	; () banked
 13122  007CF8  51E9               	movf	_alarm_second& (0+255),w,b
 13123  007CFA  EC4E  F045         	call	_I2C_Write
 13124                           
 13125                           ;I2C_Support.c: 211: I2C_Write(alarm_minute);
 13126  007CFE  0100               	movlb	0	; () banked
 13127  007D00  51E8               	movf	_alarm_minute& (0+255),w,b
 13128  007D02  EC4E  F045         	call	_I2C_Write
 13129                           
 13130                           ;I2C_Support.c: 212: I2C_Write(alarm_hour);
 13131  007D06  0100               	movlb	0	; () banked
 13132  007D08  51E7               	movf	_alarm_hour& (0+255),w,b
 13133  007D0A  EC4E  F045         	call	_I2C_Write
 13134                           
 13135                           ;I2C_Support.c: 213: I2C_Write(alarm_date);
 13136  007D0E  0100               	movlb	0	; () banked
 13137  007D10  51E6               	movf	_alarm_date& (0+255),w,b
 13138  007D12  EC4E  F045         	call	_I2C_Write
 13139                           
 13140                           ;I2C_Support.c: 214: I2C_Stop();
 13141  007D16  ECFF  F048         	call	_I2C_Stop	;wreg free
 13142  007D1A  0012               	return		;funcret
 13143  007D1C                     __end_of_DS3231_Write_Alarm_Time:
 13144                           	opt stack 0
 13145                           tblptru	equ	0xFF8
 13146                           tblptrh	equ	0xFF7
 13147                           tblptrl	equ	0xFF6
 13148                           tablat	equ	0xFF5
 13149                           prodh	equ	0xFF4
 13150                           prodl	equ	0xFF3
 13151                           intcon	equ	0xFF2
 13152                           intcon2	equ	0xFF1
 13153                           postinc0	equ	0xFEE
 13154                           wreg	equ	0xFE8
 13155                           postdec1	equ	0xFE5
 13156                           fsr1l	equ	0xFE1
 13157                           indf2	equ	0xFDF
 13158                           postinc2	equ	0xFDE
 13159                           fsr2h	equ	0xFDA
 13160                           fsr2l	equ	0xFD9
 13161                           status	equ	0xFD8
 13162                           
 13163 ;; *************** function _dec_2_bcd *****************
 13164 ;; Defined at:
 13165 ;;		line 54 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/utils.c"
 13166 ;; Parameters:    Size  Location     Type
 13167 ;;  dec             1    wreg     unsigned char 
 13168 ;; Auto vars:     Size  Location     Type
 13169 ;;  dec             1   70[BANK0 ] unsigned char 
 13170 ;;  bcd             2   68[BANK0 ] int 
 13171 ;; Return value:  Size  Location     Type
 13172 ;;                  2   64[BANK0 ] int 
 13173 ;; Registers used:
 13174 ;;		wreg, status,2, status,0, cstack
 13175 ;; Tracked objects:
 13176 ;;		On entry : 0/0
 13177 ;;		On exit  : 0/0
 13178 ;;		Unchanged: 0/0
 13179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13180 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13181 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13182 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13183 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13184 ;;Total ram usage:        7 bytes
 13185 ;; Hardware stack levels used:    1
 13186 ;; Hardware stack levels required when called:    7
 13187 ;; This function calls:
 13188 ;;		___awdiv
 13189 ;;		___awmod
 13190 ;; This function is called by:
 13191 ;;		_DS3231_Write_Time
 13192 ;;		_DS3231_Write_Alarm_Time
 13193 ;;		_DS3231_Write_Initial_Alarm_Time
 13194 ;; This function uses a non-reentrant model
 13195 ;;
 13196                           
 13197                           	psect	text57
 13198  0083D0                     __ptext57:
 13199                           	opt stack 0
 13200  0083D0                     _dec_2_bcd:
 13201                           	opt stack 20
 13202                           
 13203                           ;incstack = 0
 13204                           ;dec_2_bcd@dec stored from wreg
 13205  0083D0  0100               	movlb	0	; () banked
 13206  0083D2  6FC6               	movwf	dec_2_bcd@dec& (0+255),b
 13207                           
 13208                           ; BSR set to: 0
 13209                           ;utils.c: 56: int bcd;
 13210                           ;utils.c: 57: bcd = ((dec / 10) << 4) + (dec % 10);
 13211  0083D4  C0C6  F094         	movff	dec_2_bcd@dec,___awdiv@dividend
 13212  0083D8  0100               	movlb	0	; () banked
 13213  0083DA  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
 13214  0083DC  0E00               	movlw	0
 13215  0083DE  0100               	movlb	0	; () banked
 13216  0083E0  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
 13217  0083E2  0E0A               	movlw	10
 13218  0083E4  6F96               	movwf	___awdiv@divisor& (0+255),b
 13219  0083E6  EC74  F03A         	call	___awdiv	;wreg free
 13220  0083EA  C094  F0C2         	movff	?___awdiv,??_dec_2_bcd
 13221  0083EE  C095  F0C3         	movff	?___awdiv+1,??_dec_2_bcd+1
 13222  0083F2  0100               	movlb	0	; () banked
 13223  0083F4  3BC2               	swapf	??_dec_2_bcd& (0+255),f,b
 13224  0083F6  3BC3               	swapf	(??_dec_2_bcd+1)& (0+255),f,b
 13225  0083F8  0EF0               	movlw	240
 13226  0083FA  17C3               	andwf	(??_dec_2_bcd+1)& (0+255),f,b
 13227  0083FC  51C2               	movf	??_dec_2_bcd& (0+255),w,b
 13228  0083FE  0B0F               	andlw	15
 13229  008400  13C3               	iorwf	(??_dec_2_bcd+1)& (0+255),f,b
 13230  008402  0EF0               	movlw	240
 13231  008404  17C2               	andwf	??_dec_2_bcd& (0+255),f,b
 13232  008406  C0C6  F0BA         	movff	dec_2_bcd@dec,___awmod@dividend
 13233  00840A  0100               	movlb	0	; () banked
 13234  00840C  6BBB               	clrf	(___awmod@dividend+1)& (0+255),b
 13235  00840E  0E00               	movlw	0
 13236  008410  0100               	movlb	0	; () banked
 13237  008412  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
 13238  008414  0E0A               	movlw	10
 13239  008416  6FBC               	movwf	___awmod@divisor& (0+255),b
 13240  008418  EC87  F03D         	call	___awmod	;wreg free
 13241  00841C  0100               	movlb	0	; () banked
 13242  00841E  51BA               	movf	?___awmod& (0+255),w,b
 13243  008420  0100               	movlb	0	; () banked
 13244  008422  25C2               	addwf	??_dec_2_bcd& (0+255),w,b
 13245  008424  0100               	movlb	0	; () banked
 13246  008426  6FC4               	movwf	dec_2_bcd@bcd& (0+255),b
 13247  008428  0100               	movlb	0	; () banked
 13248  00842A  51BB               	movf	(?___awmod+1)& (0+255),w,b
 13249  00842C  0100               	movlb	0	; () banked
 13250  00842E  21C3               	addwfc	(??_dec_2_bcd+1)& (0+255),w,b
 13251  008430  0100               	movlb	0	; () banked
 13252  008432  6FC5               	movwf	(dec_2_bcd@bcd+1)& (0+255),b
 13253                           
 13254                           ; BSR set to: 0
 13255                           ;utils.c: 58: return bcd;
 13256  008434  C0C4  F0C0         	movff	dec_2_bcd@bcd,?_dec_2_bcd
 13257  008438  C0C5  F0C1         	movff	dec_2_bcd@bcd+1,?_dec_2_bcd+1
 13258  00843C  D000               	goto	l1328
 13259  00843E                     l1328:
 13260                           
 13261                           ; BSR set to: 0
 13262  00843E  0012               	return		;funcret
 13263  008440                     __end_of_dec_2_bcd:
 13264                           	opt stack 0
 13265                           tblptru	equ	0xFF8
 13266                           tblptrh	equ	0xFF7
 13267                           tblptrl	equ	0xFF6
 13268                           tablat	equ	0xFF5
 13269                           prodh	equ	0xFF4
 13270                           prodl	equ	0xFF3
 13271                           intcon	equ	0xFF2
 13272                           intcon2	equ	0xFF1
 13273                           postinc0	equ	0xFEE
 13274                           wreg	equ	0xFE8
 13275                           postdec1	equ	0xFE5
 13276                           fsr1l	equ	0xFE1
 13277                           indf2	equ	0xFDF
 13278                           postinc2	equ	0xFDE
 13279                           fsr2h	equ	0xFDA
 13280                           fsr2l	equ	0xFD9
 13281                           status	equ	0xFD8
 13282                           
 13283 ;; *************** function _DS3231_Read_Time *****************
 13284 ;; Defined at:
 13285 ;;		line 45 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/I2C_Support.c"
 13286 ;; Parameters:    Size  Location     Type
 13287 ;;		None
 13288 ;; Auto vars:     Size  Location     Type
 13289 ;;  Device          1   18[BANK0 ] unsigned char 
 13290 ;;  Address         1   17[BANK0 ] unsigned char 
 13291 ;; Return value:  Size  Location     Type
 13292 ;;		None               void
 13293 ;; Registers used:
 13294 ;;		wreg, status,2, status,0, cstack
 13295 ;; Tracked objects:
 13296 ;;		On entry : 0/0
 13297 ;;		On exit  : 0/0
 13298 ;;		Unchanged: 0/0
 13299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13301 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13303 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13304 ;;Total ram usage:        2 bytes
 13305 ;; Hardware stack levels used:    1
 13306 ;; Hardware stack levels required when called:    9
 13307 ;; This function calls:
 13308 ;;		_I2C_ReStart
 13309 ;;		_I2C_Read
 13310 ;;		_I2C_Start
 13311 ;;		_I2C_Stop
 13312 ;;		_I2C_Write
 13313 ;; This function is called by:
 13314 ;;		_DS3231_Write_Alarm_Time
 13315 ;;		_main
 13316 ;;		_Exit_Setup_Alarm_Time
 13317 ;;		_Do_Save_New_Alarm_Time
 13318 ;;		_Exit_Setup_Fan_Temp
 13319 ;;		_Do_Save_New_Fan_Temp
 13320 ;;		_Do_Setup_Time
 13321 ;;		_Do_Save_New_Time
 13322 ;;		_Exit_Time_Setup
 13323 ;;		_DS3231_Write_Initial_Alarm_Time
 13324 ;; This function uses a non-reentrant model
 13325 ;;
 13326                           
 13327                           	psect	text58
 13328  008356                     __ptext58:
 13329                           	opt stack 0
 13330  008356                     _DS3231_Read_Time:
 13331                           	opt stack 19
 13332                           
 13333                           ;I2C_Support.c: 47: char Device = 0x68;
 13334                           
 13335                           ; BSR set to: 0
 13336                           ;incstack = 0
 13337  008356  0E68               	movlw	104
 13338  008358  0100               	movlb	0	; () banked
 13339  00835A  6F92               	movwf	DS3231_Read_Time@Device& (0+255),b
 13340                           
 13341                           ;I2C_Support.c: 48: char Address = 0x00;
 13342  00835C  0E00               	movlw	0
 13343  00835E  0100               	movlb	0	; () banked
 13344  008360  6F91               	movwf	DS3231_Read_Time@Address& (0+255),b
 13345                           
 13346                           ; BSR set to: 0
 13347                           ;I2C_Support.c: 50: I2C_Start();
 13348  008362  EC08  F049         	call	_I2C_Start	;wreg free
 13349                           
 13350                           ;I2C_Support.c: 51: I2C_Write((Device << 1) | 0);
 13351  008366  0100               	movlb	0	; () banked
 13352  008368  5192               	movf	DS3231_Read_Time@Device& (0+255),w,b
 13353  00836A  2592               	addwf	DS3231_Read_Time@Device& (0+255),w,b
 13354  00836C  EC4E  F045         	call	_I2C_Write
 13355                           
 13356                           ;I2C_Support.c: 52: I2C_Write(Address);
 13357  008370  0100               	movlb	0	; () banked
 13358  008372  5191               	movf	DS3231_Read_Time@Address& (0+255),w,b
 13359  008374  EC4E  F045         	call	_I2C_Write
 13360                           
 13361                           ;I2C_Support.c: 53: I2C_ReStart();
 13362  008378  EC93  F048         	call	_I2C_ReStart	;wreg free
 13363                           
 13364                           ;I2C_Support.c: 54: I2C_Write((Device << 1) | 1);
 13365  00837C  80D8               	bsf	status,0,c
 13366  00837E  0100               	movlb	0	; () banked
 13367  008380  3592               	rlcf	DS3231_Read_Time@Device& (0+255),w,b
 13368  008382  EC4E  F045         	call	_I2C_Write
 13369                           
 13370                           ;I2C_Support.c: 55: second = I2C_Read(1);
 13371  008386  0E01               	movlw	1
 13372  008388  EC7F  F044         	call	_I2C_Read
 13373  00838C  0100               	movlb	0	; () banked
 13374  00838E  6FF0               	movwf	_second& (0+255),b
 13375                           
 13376                           ; BSR set to: 0
 13377                           ;I2C_Support.c: 56: minute = I2C_Read(1);
 13378  008390  0E01               	movlw	1
 13379  008392  EC7F  F044         	call	_I2C_Read
 13380  008396  0100               	movlb	0	; () banked
 13381  008398  6FEE               	movwf	_minute& (0+255),b
 13382                           
 13383                           ; BSR set to: 0
 13384                           ;I2C_Support.c: 57: hour = I2C_Read(1);
 13385  00839A  0E01               	movlw	1
 13386  00839C  EC7F  F044         	call	_I2C_Read
 13387  0083A0  0100               	movlb	0	; () banked
 13388  0083A2  6FED               	movwf	_hour& (0+255),b
 13389                           
 13390                           ; BSR set to: 0
 13391                           ;I2C_Support.c: 58: dow = I2C_Read(1);
 13392  0083A4  0E01               	movlw	1
 13393  0083A6  EC7F  F044         	call	_I2C_Read
 13394  0083AA  6E7F               	movwf	_dow,c
 13395                           
 13396                           ;I2C_Support.c: 59: day = I2C_Read(1);
 13397  0083AC  0E01               	movlw	1
 13398  0083AE  EC7F  F044         	call	_I2C_Read
 13399  0083B2  0100               	movlb	0	; () banked
 13400  0083B4  6FEA               	movwf	_day& (0+255),b
 13401                           
 13402                           ; BSR set to: 0
 13403                           ;I2C_Support.c: 60: month = I2C_Read(1);
 13404  0083B6  0E01               	movlw	1
 13405  0083B8  EC7F  F044         	call	_I2C_Read
 13406  0083BC  0100               	movlb	0	; () banked
 13407  0083BE  6FEF               	movwf	_month& (0+255),b
 13408                           
 13409                           ; BSR set to: 0
 13410                           ;I2C_Support.c: 61: year = I2C_Read(0);
 13411  0083C0  0E00               	movlw	0
 13412  0083C2  EC7F  F044         	call	_I2C_Read
 13413  0083C6  0100               	movlb	0	; () banked
 13414  0083C8  6FF1               	movwf	_year& (0+255),b
 13415                           
 13416                           ; BSR set to: 0
 13417                           ;I2C_Support.c: 62: I2C_Stop();
 13418  0083CA  ECFF  F048         	call	_I2C_Stop	;wreg free
 13419  0083CE  0012               	return		;funcret
 13420  0083D0                     __end_of_DS3231_Read_Time:
 13421                           	opt stack 0
 13422                           tblptru	equ	0xFF8
 13423                           tblptrh	equ	0xFF7
 13424                           tblptrl	equ	0xFF6
 13425                           tablat	equ	0xFF5
 13426                           prodh	equ	0xFF4
 13427                           prodl	equ	0xFF3
 13428                           intcon	equ	0xFF2
 13429                           intcon2	equ	0xFF1
 13430                           postinc0	equ	0xFEE
 13431                           wreg	equ	0xFE8
 13432                           postdec1	equ	0xFE5
 13433                           fsr1l	equ	0xFE1
 13434                           indf2	equ	0xFDF
 13435                           postinc2	equ	0xFDE
 13436                           fsr2h	equ	0xFDA
 13437                           fsr2l	equ	0xFD9
 13438                           status	equ	0xFD8
 13439                           
 13440 ;; *************** function _DS3231_Read_Alarm_Time *****************
 13441 ;; Defined at:
 13442 ;;		line 139 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/I2C_Support.c"
 13443 ;; Parameters:    Size  Location     Type
 13444 ;;		None
 13445 ;; Auto vars:     Size  Location     Type
 13446 ;;  Device          1   18[BANK0 ] unsigned char 
 13447 ;;  Address         1   17[BANK0 ] unsigned char 
 13448 ;; Return value:  Size  Location     Type
 13449 ;;		None               void
 13450 ;; Registers used:
 13451 ;;		wreg, status,2, status,0, cstack
 13452 ;; Tracked objects:
 13453 ;;		On entry : 0/0
 13454 ;;		On exit  : 0/0
 13455 ;;		Unchanged: 0/0
 13456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13458 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13460 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13461 ;;Total ram usage:        2 bytes
 13462 ;; Hardware stack levels used:    1
 13463 ;; Hardware stack levels required when called:    9
 13464 ;; This function calls:
 13465 ;;		_I2C_ReStart
 13466 ;;		_I2C_Read
 13467 ;;		_I2C_Start
 13468 ;;		_I2C_Stop
 13469 ;;		_I2C_Write
 13470 ;; This function is called by:
 13471 ;;		_main
 13472 ;;		_Do_Setup_Alarm_Time
 13473 ;;		_Do_Save_New_Alarm_Time
 13474 ;; This function uses a non-reentrant model
 13475 ;;
 13476                           
 13477                           	psect	text59
 13478  0088A0                     __ptext59:
 13479                           	opt stack 0
 13480  0088A0                     _DS3231_Read_Alarm_Time:
 13481                           	opt stack 19
 13482                           
 13483                           ;I2C_Support.c: 141: char Device = 0x68;
 13484                           
 13485                           ;incstack = 0
 13486  0088A0  0E68               	movlw	104
 13487  0088A2  0100               	movlb	0	; () banked
 13488  0088A4  6F92               	movwf	DS3231_Read_Alarm_Time@Device& (0+255),b
 13489                           
 13490                           ;I2C_Support.c: 142: char Address = 0x07;
 13491  0088A6  0E07               	movlw	7
 13492  0088A8  0100               	movlb	0	; () banked
 13493  0088AA  6F91               	movwf	DS3231_Read_Alarm_Time@Address& (0+255),b
 13494                           
 13495                           ; BSR set to: 0
 13496                           ;I2C_Support.c: 143: I2C_Start();
 13497  0088AC  EC08  F049         	call	_I2C_Start	;wreg free
 13498                           
 13499                           ;I2C_Support.c: 144: I2C_Write((Device << 1) | 0);
 13500  0088B0  0100               	movlb	0	; () banked
 13501  0088B2  5192               	movf	DS3231_Read_Alarm_Time@Device& (0+255),w,b
 13502  0088B4  2592               	addwf	DS3231_Read_Alarm_Time@Device& (0+255),w,b
 13503  0088B6  EC4E  F045         	call	_I2C_Write
 13504                           
 13505                           ;I2C_Support.c: 145: I2C_Write(Address);
 13506  0088BA  0100               	movlb	0	; () banked
 13507  0088BC  5191               	movf	DS3231_Read_Alarm_Time@Address& (0+255),w,b
 13508  0088BE  EC4E  F045         	call	_I2C_Write
 13509                           
 13510                           ;I2C_Support.c: 146: I2C_ReStart();
 13511  0088C2  EC93  F048         	call	_I2C_ReStart	;wreg free
 13512                           
 13513                           ;I2C_Support.c: 147: I2C_Write((Device << 1) | 1);
 13514  0088C6  80D8               	bsf	status,0,c
 13515  0088C8  0100               	movlb	0	; () banked
 13516  0088CA  3592               	rlcf	DS3231_Read_Alarm_Time@Device& (0+255),w,b
 13517  0088CC  EC4E  F045         	call	_I2C_Write
 13518                           
 13519                           ;I2C_Support.c: 148: alarm_second = I2C_Read(1);
 13520  0088D0  0E01               	movlw	1
 13521  0088D2  EC7F  F044         	call	_I2C_Read
 13522  0088D6  0100               	movlb	0	; () banked
 13523  0088D8  6FE9               	movwf	_alarm_second& (0+255),b
 13524                           
 13525                           ; BSR set to: 0
 13526                           ;I2C_Support.c: 149: alarm_minute = I2C_Read(1);
 13527  0088DA  0E01               	movlw	1
 13528  0088DC  EC7F  F044         	call	_I2C_Read
 13529  0088E0  0100               	movlb	0	; () banked
 13530  0088E2  6FE8               	movwf	_alarm_minute& (0+255),b
 13531                           
 13532                           ; BSR set to: 0
 13533                           ;I2C_Support.c: 150: alarm_hour = I2C_Read(1);
 13534  0088E4  0E01               	movlw	1
 13535  0088E6  EC7F  F044         	call	_I2C_Read
 13536  0088EA  0100               	movlb	0	; () banked
 13537  0088EC  6FE7               	movwf	_alarm_hour& (0+255),b
 13538                           
 13539                           ; BSR set to: 0
 13540                           ;I2C_Support.c: 151: alarm_date = I2C_Read(0);
 13541  0088EE  0E00               	movlw	0
 13542  0088F0  EC7F  F044         	call	_I2C_Read
 13543  0088F4  0100               	movlb	0	; () banked
 13544  0088F6  6FE6               	movwf	_alarm_date& (0+255),b
 13545                           
 13546                           ; BSR set to: 0
 13547                           ;I2C_Support.c: 152: I2C_Stop();
 13548  0088F8  ECFF  F048         	call	_I2C_Stop	;wreg free
 13549  0088FC  0012               	return		;funcret
 13550  0088FE                     __end_of_DS3231_Read_Alarm_Time:
 13551                           	opt stack 0
 13552                           tblptru	equ	0xFF8
 13553                           tblptrh	equ	0xFF7
 13554                           tblptrl	equ	0xFF6
 13555                           tablat	equ	0xFF5
 13556                           prodh	equ	0xFF4
 13557                           prodl	equ	0xFF3
 13558                           intcon	equ	0xFF2
 13559                           intcon2	equ	0xFF1
 13560                           postinc0	equ	0xFEE
 13561                           wreg	equ	0xFE8
 13562                           postdec1	equ	0xFE5
 13563                           fsr1l	equ	0xFE1
 13564                           indf2	equ	0xFDF
 13565                           postinc2	equ	0xFDE
 13566                           fsr2h	equ	0xFDA
 13567                           fsr2l	equ	0xFD9
 13568                           status	equ	0xFD8
 13569                           
 13570 ;; *************** function _Do_Beep_Good *****************
 13571 ;; Defined at:
 13572 ;;		line 70 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/utils.c"
 13573 ;; Parameters:    Size  Location     Type
 13574 ;;		None
 13575 ;; Auto vars:     Size  Location     Type
 13576 ;;		None
 13577 ;; Return value:  Size  Location     Type
 13578 ;;		None               void
 13579 ;; Registers used:
 13580 ;;		wreg, status,2, status,0, cstack
 13581 ;; Tracked objects:
 13582 ;;		On entry : 0/0
 13583 ;;		On exit  : 0/0
 13584 ;;		Unchanged: 0/0
 13585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13590 ;;Total ram usage:        0 bytes
 13591 ;; Hardware stack levels used:    1
 13592 ;; Hardware stack levels required when called:    9
 13593 ;; This function calls:
 13594 ;;		_Activate_Buzzer_2KHz
 13595 ;;		_Deactivate_Buzzer
 13596 ;;		_Wait_One_Sec
 13597 ;;		_do_update_pwm
 13598 ;; This function is called by:
 13599 ;;		_main
 13600 ;;		_Do_Setup_Alarm_Time
 13601 ;;		_Setup_Temp_Fan
 13602 ;;		_Do_Setup_Time
 13603 ;; This function uses a non-reentrant model
 13604 ;;
 13605                           
 13606                           	psect	text60
 13607  0090AE                     __ptext60:
 13608                           	opt stack 0
 13609  0090AE                     _Do_Beep_Good:
 13610                           	opt stack 20
 13611                           
 13612                           ;utils.c: 72: Activate_Buzzer_2KHz();
 13613                           
 13614                           ;incstack = 0
 13615  0090AE  ECED  F048         	call	_Activate_Buzzer_2KHz	;wreg free
 13616                           
 13617                           ;utils.c: 73: Wait_One_Sec();
 13618  0090B2  EC6D  F047         	call	_Wait_One_Sec	;wreg free
 13619                           
 13620                           ;utils.c: 74: Deactivate_Buzzer();
 13621  0090B6  EC6F  F049         	call	_Deactivate_Buzzer	;wreg free
 13622                           
 13623                           ;utils.c: 75: Wait_One_Sec();
 13624  0090BA  EC6D  F047         	call	_Wait_One_Sec	;wreg free
 13625                           
 13626                           ;utils.c: 76: do_update_pwm(duty_cycle);
 13627  0090BE  0100               	movlb	0	; () banked
 13628  0090C0  51EB               	movf	_duty_cycle& (0+255),w,b
 13629  0090C2  ECB4  F038         	call	_do_update_pwm
 13630  0090C6  0012               	return		;funcret
 13631  0090C8                     __end_of_Do_Beep_Good:
 13632                           	opt stack 0
 13633                           tblptru	equ	0xFF8
 13634                           tblptrh	equ	0xFF7
 13635                           tblptrl	equ	0xFF6
 13636                           tablat	equ	0xFF5
 13637                           prodh	equ	0xFF4
 13638                           prodl	equ	0xFF3
 13639                           intcon	equ	0xFF2
 13640                           intcon2	equ	0xFF1
 13641                           postinc0	equ	0xFEE
 13642                           wreg	equ	0xFE8
 13643                           postdec1	equ	0xFE5
 13644                           fsr1l	equ	0xFE1
 13645                           indf2	equ	0xFDF
 13646                           postinc2	equ	0xFDE
 13647                           fsr2h	equ	0xFDA
 13648                           fsr2l	equ	0xFD9
 13649                           status	equ	0xFD8
 13650                           
 13651 ;; *************** function _Activate_Buzzer_2KHz *****************
 13652 ;; Defined at:
 13653 ;;		line 109 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/utils.c"
 13654 ;; Parameters:    Size  Location     Type
 13655 ;;		None
 13656 ;; Auto vars:     Size  Location     Type
 13657 ;;		None
 13658 ;; Return value:  Size  Location     Type
 13659 ;;		None               void
 13660 ;; Registers used:
 13661 ;;		wreg, status,2
 13662 ;; Tracked objects:
 13663 ;;		On entry : 0/0
 13664 ;;		On exit  : 0/0
 13665 ;;		Unchanged: 0/0
 13666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13671 ;;Total ram usage:        0 bytes
 13672 ;; Hardware stack levels used:    1
 13673 ;; Hardware stack levels required when called:    6
 13674 ;; This function calls:
 13675 ;;		Nothing
 13676 ;; This function is called by:
 13677 ;;		_Do_Beep_Good
 13678 ;; This function uses a non-reentrant model
 13679 ;;
 13680                           
 13681                           	psect	text61
 13682  0091DA                     __ptext61:
 13683                           	opt stack 0
 13684  0091DA                     _Activate_Buzzer_2KHz:
 13685                           	opt stack 22
 13686                           
 13687                           ;utils.c: 111: PR2 = 0b11111001 ;
 13688                           
 13689                           ;incstack = 0
 13690  0091DA  0EF9               	movlw	249
 13691  0091DC  6ECB               	movwf	4043,c	;volatile
 13692                           
 13693                           ;utils.c: 112: T2CON = 0b00000101 ;
 13694  0091DE  0E05               	movlw	5
 13695  0091E0  6ECA               	movwf	4042,c	;volatile
 13696                           
 13697                           ;utils.c: 113: CCPR2L = 0b01111100 ;
 13698  0091E2  0E7C               	movlw	124
 13699  0091E4  6EBB               	movwf	4027,c	;volatile
 13700                           
 13701                           ;utils.c: 114: CCP2CON = 0b00111100 ;
 13702  0091E6  0E3C               	movlw	60
 13703  0091E8  6EBA               	movwf	4026,c	;volatile
 13704  0091EA  0012               	return		;funcret
 13705  0091EC                     __end_of_Activate_Buzzer_2KHz:
 13706                           	opt stack 0
 13707                           tblptru	equ	0xFF8
 13708                           tblptrh	equ	0xFF7
 13709                           tblptrl	equ	0xFF6
 13710                           tablat	equ	0xFF5
 13711                           prodh	equ	0xFF4
 13712                           prodl	equ	0xFF3
 13713                           intcon	equ	0xFF2
 13714                           intcon2	equ	0xFF1
 13715                           postinc0	equ	0xFEE
 13716                           wreg	equ	0xFE8
 13717                           postdec1	equ	0xFE5
 13718                           fsr1l	equ	0xFE1
 13719                           indf2	equ	0xFDF
 13720                           postinc2	equ	0xFDE
 13721                           fsr2h	equ	0xFDA
 13722                           fsr2l	equ	0xFD9
 13723                           status	equ	0xFD8
 13724                           
 13725 ;; *************** function _Do_Beep_Bad *****************
 13726 ;; Defined at:
 13727 ;;		line 79 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/utils.c"
 13728 ;; Parameters:    Size  Location     Type
 13729 ;;		None
 13730 ;; Auto vars:     Size  Location     Type
 13731 ;;		None
 13732 ;; Return value:  Size  Location     Type
 13733 ;;		None               void
 13734 ;; Registers used:
 13735 ;;		wreg, status,2, status,0, cstack
 13736 ;; Tracked objects:
 13737 ;;		On entry : 0/0
 13738 ;;		On exit  : 0/0
 13739 ;;		Unchanged: 0/0
 13740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13745 ;;Total ram usage:        0 bytes
 13746 ;; Hardware stack levels used:    1
 13747 ;; Hardware stack levels required when called:    9
 13748 ;; This function calls:
 13749 ;;		_Activate_Buzzer_500Hz
 13750 ;;		_Deactivate_Buzzer
 13751 ;;		_Wait_One_Sec
 13752 ;;		_do_update_pwm
 13753 ;; This function is called by:
 13754 ;;		_main
 13755 ;;		_Do_Setup_Alarm_Time
 13756 ;;		_Setup_Temp_Fan
 13757 ;;		_Do_Setup_Time
 13758 ;; This function uses a non-reentrant model
 13759 ;;
 13760                           
 13761                           	psect	text62
 13762  0090C8                     __ptext62:
 13763                           	opt stack 0
 13764  0090C8                     _Do_Beep_Bad:
 13765                           	opt stack 20
 13766                           
 13767                           ;utils.c: 81: Activate_Buzzer_500Hz();
 13768                           
 13769                           ;incstack = 0
 13770  0090C8  ECF6  F048         	call	_Activate_Buzzer_500Hz	;wreg free
 13771                           
 13772                           ;utils.c: 82: Wait_One_Sec();
 13773  0090CC  EC6D  F047         	call	_Wait_One_Sec	;wreg free
 13774                           
 13775                           ;utils.c: 83: Deactivate_Buzzer();
 13776  0090D0  EC6F  F049         	call	_Deactivate_Buzzer	;wreg free
 13777                           
 13778                           ;utils.c: 84: Wait_One_Sec();
 13779  0090D4  EC6D  F047         	call	_Wait_One_Sec	;wreg free
 13780                           
 13781                           ;utils.c: 85: do_update_pwm(duty_cycle);
 13782  0090D8  0100               	movlb	0	; () banked
 13783  0090DA  51EB               	movf	_duty_cycle& (0+255),w,b
 13784  0090DC  ECB4  F038         	call	_do_update_pwm
 13785  0090E0  0012               	return		;funcret
 13786  0090E2                     __end_of_Do_Beep_Bad:
 13787                           	opt stack 0
 13788                           tblptru	equ	0xFF8
 13789                           tblptrh	equ	0xFF7
 13790                           tblptrl	equ	0xFF6
 13791                           tablat	equ	0xFF5
 13792                           prodh	equ	0xFF4
 13793                           prodl	equ	0xFF3
 13794                           intcon	equ	0xFF2
 13795                           intcon2	equ	0xFF1
 13796                           postinc0	equ	0xFEE
 13797                           wreg	equ	0xFE8
 13798                           postdec1	equ	0xFE5
 13799                           fsr1l	equ	0xFE1
 13800                           indf2	equ	0xFDF
 13801                           postinc2	equ	0xFDE
 13802                           fsr2h	equ	0xFDA
 13803                           fsr2l	equ	0xFD9
 13804                           status	equ	0xFD8
 13805                           
 13806 ;; *************** function _do_update_pwm *****************
 13807 ;; Defined at:
 13808 ;;		line 132 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/utils.c"
 13809 ;; Parameters:    Size  Location     Type
 13810 ;;  duty_cycle      1    wreg     unsigned char 
 13811 ;; Auto vars:     Size  Location     Type
 13812 ;;  duty_cycle      1   92[BANK0 ] unsigned char 
 13813 ;;  dc_f            3   89[BANK0 ] float 
 13814 ;;  dc_I            2   93[BANK0 ] int 
 13815 ;; Return value:  Size  Location     Type
 13816 ;;		None               void
 13817 ;; Registers used:
 13818 ;;		wreg, status,2, status,0, cstack
 13819 ;; Tracked objects:
 13820 ;;		On entry : 0/0
 13821 ;;		On exit  : 0/0
 13822 ;;		Unchanged: 0/0
 13823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13825 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13826 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13827 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13828 ;;Total ram usage:        9 bytes
 13829 ;; Hardware stack levels used:    1
 13830 ;; Hardware stack levels required when called:    8
 13831 ;; This function calls:
 13832 ;;		___ftdiv
 13833 ;;		___ftmul
 13834 ;;		___fttol
 13835 ;;		___lbtoft
 13836 ;; This function is called by:
 13837 ;;		_Monitor_Fan
 13838 ;;		_Do_Beep_Good
 13839 ;;		_Do_Beep_Bad
 13840 ;;		_Turn_On_Fan
 13841 ;;		_Increase_Speed
 13842 ;;		_Decrease_Speed
 13843 ;;		_Do_Beep
 13844 ;; This function uses a non-reentrant model
 13845 ;;
 13846                           
 13847                           	psect	text63
 13848  007168                     __ptext63:
 13849                           	opt stack 0
 13850  007168                     _do_update_pwm:
 13851                           	opt stack 20
 13852                           
 13853                           ;incstack = 0
 13854                           ;do_update_pwm@duty_cycle stored from wreg
 13855  007168  0100               	movlb	0	; () banked
 13856  00716A  6FDC               	movwf	do_update_pwm@duty_cycle& (0+255),b
 13857                           
 13858                           ; BSR set to: 0
 13859                           ;utils.c: 134: float dc_f;
 13860                           ;utils.c: 135: int dc_I;
 13861                           ;utils.c: 136: PR2 = 0b00000100 ;
 13862  00716C  0E04               	movlw	4
 13863  00716E  6ECB               	movwf	4043,c	;volatile
 13864                           
 13865                           ;utils.c: 137: T2CON = 0b00000111 ;
 13866  007170  0E07               	movlw	7
 13867  007172  6ECA               	movwf	4042,c	;volatile
 13868                           
 13869                           ; BSR set to: 0
 13870                           ;utils.c: 138: dc_f = ( 4.0 * duty_cycle / 20.0) ;
 13871  007174  0E00               	movlw	0
 13872  007176  0100               	movlb	0	; () banked
 13873  007178  6F9F               	movwf	___ftmul@f2& (0+255),b
 13874  00717A  0E80               	movlw	128
 13875  00717C  0100               	movlb	0	; () banked
 13876  00717E  6FA0               	movwf	(___ftmul@f2+1)& (0+255),b
 13877  007180  0E40               	movlw	64
 13878  007182  0100               	movlb	0	; () banked
 13879  007184  6FA1               	movwf	(___ftmul@f2+2)& (0+255),b
 13880  007186  0100               	movlb	0	; () banked
 13881  007188  51DC               	movf	do_update_pwm@duty_cycle& (0+255),w,b
 13882  00718A  ECE8  F046         	call	___lbtoft
 13883  00718E  C096  F09C         	movff	?___lbtoft,___ftmul@f1
 13884  007192  C097  F09D         	movff	?___lbtoft+1,___ftmul@f1+1
 13885  007196  C098  F09E         	movff	?___lbtoft+2,___ftmul@f1+2
 13886  00719A  ECDE  F02E         	call	___ftmul	;wreg free
 13887  00719E  C09C  F0C7         	movff	?___ftmul,___ftdiv@f1
 13888  0071A2  C09D  F0C8         	movff	?___ftmul+1,___ftdiv@f1+1
 13889  0071A6  C09E  F0C9         	movff	?___ftmul+2,___ftdiv@f1+2
 13890  0071AA  0E00               	movlw	0
 13891  0071AC  0100               	movlb	0	; () banked
 13892  0071AE  6FCA               	movwf	___ftdiv@f2& (0+255),b
 13893  0071B0  0EA0               	movlw	160
 13894  0071B2  0100               	movlb	0	; () banked
 13895  0071B4  6FCB               	movwf	(___ftdiv@f2+1)& (0+255),b
 13896  0071B6  0E41               	movlw	65
 13897  0071B8  0100               	movlb	0	; () banked
 13898  0071BA  6FCC               	movwf	(___ftdiv@f2+2)& (0+255),b
 13899  0071BC  ECD1  F030         	call	___ftdiv	;wreg free
 13900  0071C0  C0C7  F0D9         	movff	?___ftdiv,do_update_pwm@dc_f
 13901  0071C4  C0C8  F0DA         	movff	?___ftdiv+1,do_update_pwm@dc_f+1
 13902  0071C8  C0C9  F0DB         	movff	?___ftdiv+2,do_update_pwm@dc_f+2
 13903                           
 13904                           ;utils.c: 139: dc_I = (int) dc_f;
 13905  0071CC  C0D9  F0AB         	movff	do_update_pwm@dc_f,___fttol@f1
 13906  0071D0  C0DA  F0AC         	movff	do_update_pwm@dc_f+1,___fttol@f1+1
 13907  0071D4  C0DB  F0AD         	movff	do_update_pwm@dc_f+2,___fttol@f1+2
 13908  0071D8  EC72  F031         	call	___fttol	;wreg free
 13909  0071DC  C0AB  F0DD         	movff	?___fttol,do_update_pwm@dc_I
 13910  0071E0  C0AC  F0DE         	movff	?___fttol+1,do_update_pwm@dc_I+1
 13911                           
 13912                           ;utils.c: 140: if (dc_I > duty_cycle) dc_I++;
 13913  0071E4  0100               	movlb	0	; () banked
 13914  0071E6  51DC               	movf	do_update_pwm@duty_cycle& (0+255),w,b
 13915  0071E8  0100               	movlb	0	; () banked
 13916  0071EA  6FD6               	movwf	??_do_update_pwm& (0+255),b
 13917  0071EC  6BD7               	clrf	(??_do_update_pwm+1)& (0+255),b
 13918  0071EE  0100               	movlb	0	; () banked
 13919  0071F0  51DD               	movf	do_update_pwm@dc_I& (0+255),w,b
 13920  0071F2  0100               	movlb	0	; () banked
 13921  0071F4  5DD6               	subwf	??_do_update_pwm& (0+255),w,b
 13922  0071F6  0100               	movlb	0	; () banked
 13923  0071F8  51D7               	movf	(??_do_update_pwm+1)& (0+255),w,b
 13924  0071FA  0A80               	xorlw	128
 13925  0071FC  0100               	movlb	0	; () banked
 13926  0071FE  6FD8               	movwf	(??_do_update_pwm+2)& (0+255),b
 13927  007200  0100               	movlb	0	; () banked
 13928  007202  51DE               	movf	(do_update_pwm@dc_I+1)& (0+255),w,b
 13929  007204  0A80               	xorlw	128
 13930  007206  0100               	movlb	0	; () banked
 13931  007208  59D8               	subwfb	(??_do_update_pwm+2)& (0+255),w,b
 13932  00720A  B0D8               	btfsc	status,0,c
 13933  00720C  D004               	goto	l13683
 13934                           
 13935                           ; BSR set to: 0
 13936  00720E  0100               	movlb	0	; () banked
 13937  007210  4BDD               	infsnz	do_update_pwm@dc_I& (0+255),f,b
 13938  007212  2BDE               	incf	(do_update_pwm@dc_I+1)& (0+255),f,b
 13939  007214  D000               	goto	l13683
 13940  007216                     l13683:
 13941                           
 13942                           ; BSR set to: 0
 13943                           ;utils.c: 141: CCP1CON = ((dc_I & 0x03) << 4) | 0b00001100;
 13944  007216  C0DD  F0D6         	movff	do_update_pwm@dc_I,??_do_update_pwm
 13945  00721A  0E03               	movlw	3
 13946  00721C  0100               	movlb	0	; () banked
 13947  00721E  17D6               	andwf	??_do_update_pwm& (0+255),f,b
 13948  007220  0100               	movlb	0	; () banked
 13949  007222  39D6               	swapf	??_do_update_pwm& (0+255),w,b
 13950  007224  0BF0               	andlw	240
 13951  007226  090C               	iorlw	12
 13952  007228  6EBD               	movwf	4029,c	;volatile
 13953                           
 13954                           ; BSR set to: 0
 13955                           ;utils.c: 142: CCPR1L = (dc_I) >> 2;
 13956  00722A  C0DD  F0D6         	movff	do_update_pwm@dc_I,??_do_update_pwm
 13957  00722E  C0DE  F0D7         	movff	do_update_pwm@dc_I+1,??_do_update_pwm+1
 13958  007232  0100               	movlb	0	; () banked
 13959  007234  35D7               	rlcf	(??_do_update_pwm+1)& (0+255),w,b
 13960  007236  33D7               	rrcf	(??_do_update_pwm+1)& (0+255),f,b
 13961  007238  33D6               	rrcf	??_do_update_pwm& (0+255),f,b
 13962  00723A  0100               	movlb	0	; () banked
 13963  00723C  35D7               	rlcf	(??_do_update_pwm+1)& (0+255),w,b
 13964  00723E  33D7               	rrcf	(??_do_update_pwm+1)& (0+255),f,b
 13965  007240  33D6               	rrcf	??_do_update_pwm& (0+255),f,b
 13966  007242  0100               	movlb	0	; () banked
 13967  007244  51D6               	movf	??_do_update_pwm& (0+255),w,b
 13968  007246  6EBE               	movwf	4030,c	;volatile
 13969                           
 13970                           ; BSR set to: 0
 13971  007248  0012               	return		;funcret
 13972  00724A                     __end_of_do_update_pwm:
 13973                           	opt stack 0
 13974                           tblptru	equ	0xFF8
 13975                           tblptrh	equ	0xFF7
 13976                           tblptrl	equ	0xFF6
 13977                           tablat	equ	0xFF5
 13978                           prodh	equ	0xFF4
 13979                           prodl	equ	0xFF3
 13980                           intcon	equ	0xFF2
 13981                           intcon2	equ	0xFF1
 13982                           postinc0	equ	0xFEE
 13983                           wreg	equ	0xFE8
 13984                           postdec1	equ	0xFE5
 13985                           fsr1l	equ	0xFE1
 13986                           indf2	equ	0xFDF
 13987                           postinc2	equ	0xFDE
 13988                           fsr2h	equ	0xFDA
 13989                           fsr2l	equ	0xFD9
 13990                           status	equ	0xFD8
 13991                           
 13992 ;; *************** function ___lbtoft *****************
 13993 ;; Defined at:
 13994 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbtoft.c"
 13995 ;; Parameters:    Size  Location     Type
 13996 ;;  c               1    wreg     unsigned char 
 13997 ;; Auto vars:     Size  Location     Type
 13998 ;;  c               1   25[BANK0 ] unsigned char 
 13999 ;; Return value:  Size  Location     Type
 14000 ;;                  3   22[BANK0 ] float 
 14001 ;; Registers used:
 14002 ;;		wreg, status,2, status,0, cstack
 14003 ;; Tracked objects:
 14004 ;;		On entry : 0/0
 14005 ;;		On exit  : 0/0
 14006 ;;		Unchanged: 0/0
 14007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14008 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14009 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14011 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14012 ;;Total ram usage:        4 bytes
 14013 ;; Hardware stack levels used:    1
 14014 ;; Hardware stack levels required when called:    7
 14015 ;; This function calls:
 14016 ;;		___ftpack
 14017 ;; This function is called by:
 14018 ;;		_do_update_pwm
 14019 ;; This function uses a non-reentrant model
 14020 ;;
 14021                           
 14022                           	psect	text64
 14023  008DD0                     __ptext64:
 14024                           	opt stack 0
 14025  008DD0                     ___lbtoft:
 14026                           	opt stack 20
 14027                           
 14028                           ; BSR set to: 0
 14029                           ;incstack = 0
 14030                           ;___lbtoft@c stored from wreg
 14031  008DD0  0100               	movlb	0	; () banked
 14032  008DD2  6F99               	movwf	___lbtoft@c& (0+255),b
 14033                           
 14034                           ; BSR set to: 0
 14035  008DD4  0100               	movlb	0	; () banked
 14036  008DD6  5199               	movf	___lbtoft@c& (0+255),w,b
 14037  008DD8  0100               	movlb	0	; () banked
 14038  008DDA  6F8E               	movwf	___ftpack@arg& (0+255),b
 14039  008DDC  6B8F               	clrf	(___ftpack@arg+1)& (0+255),b
 14040  008DDE  6B90               	clrf	(___ftpack@arg+2)& (0+255),b
 14041  008DE0  0E8E               	movlw	142
 14042  008DE2  0100               	movlb	0	; () banked
 14043  008DE4  6F91               	movwf	___ftpack@exp& (0+255),b
 14044  008DE6  0E00               	movlw	0
 14045  008DE8  0100               	movlb	0	; () banked
 14046  008DEA  6F92               	movwf	___ftpack@sign& (0+255),b
 14047  008DEC  ECA0  F032         	call	___ftpack	;wreg free
 14048  008DF0  C08E  F096         	movff	?___ftpack,?___lbtoft
 14049  008DF4  C08F  F097         	movff	?___ftpack+1,?___lbtoft+1
 14050  008DF8  C090  F098         	movff	?___ftpack+2,?___lbtoft+2
 14051  008DFC  D000               	goto	l2188
 14052  008DFE                     l2188:
 14053  008DFE  0012               	return		;funcret
 14054  008E00                     __end_of___lbtoft:
 14055                           	opt stack 0
 14056                           tblptru	equ	0xFF8
 14057                           tblptrh	equ	0xFF7
 14058                           tblptrl	equ	0xFF6
 14059                           tablat	equ	0xFF5
 14060                           prodh	equ	0xFF4
 14061                           prodl	equ	0xFF3
 14062                           intcon	equ	0xFF2
 14063                           intcon2	equ	0xFF1
 14064                           postinc0	equ	0xFEE
 14065                           wreg	equ	0xFE8
 14066                           postdec1	equ	0xFE5
 14067                           fsr1l	equ	0xFE1
 14068                           indf2	equ	0xFDF
 14069                           postinc2	equ	0xFDE
 14070                           fsr2h	equ	0xFDA
 14071                           fsr2l	equ	0xFD9
 14072                           status	equ	0xFD8
 14073                           
 14074 ;; *************** function _Wait_One_Sec *****************
 14075 ;; Defined at:
 14076 ;;		line 88 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/utils.c"
 14077 ;; Parameters:    Size  Location     Type
 14078 ;;		None
 14079 ;; Auto vars:     Size  Location     Type
 14080 ;;  k               2   14[BANK0 ] int 
 14081 ;; Return value:  Size  Location     Type
 14082 ;;		None               void
 14083 ;; Registers used:
 14084 ;;		wreg, status,2, status,0
 14085 ;; Tracked objects:
 14086 ;;		On entry : 0/0
 14087 ;;		On exit  : 0/0
 14088 ;;		Unchanged: 0/0
 14089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14091 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14093 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14094 ;;Total ram usage:        2 bytes
 14095 ;; Hardware stack levels used:    1
 14096 ;; Hardware stack levels required when called:    6
 14097 ;; This function calls:
 14098 ;;		Nothing
 14099 ;; This function is called by:
 14100 ;;		_Do_Beep_Good
 14101 ;;		_Do_Beep_Bad
 14102 ;;		_Do_Beep
 14103 ;; This function uses a non-reentrant model
 14104 ;;
 14105                           
 14106                           	psect	text65
 14107  008EDA                     __ptext65:
 14108                           	opt stack 0
 14109  008EDA                     _Wait_One_Sec:
 14110                           	opt stack 22
 14111                           
 14112                           ;utils.c: 90: for (int k=0;k<0xffff;k++);
 14113                           
 14114                           ;incstack = 0
 14115  008EDA  0E00               	movlw	0
 14116  008EDC  0100               	movlb	0	; () banked
 14117  008EDE  6F8F               	movwf	(Wait_One_Sec@k+1)& (0+255),b
 14118  008EE0  0E00               	movlw	0
 14119  008EE2  6F8E               	movwf	Wait_One_Sec@k& (0+255),b
 14120  008EE4                     l9549:
 14121                           
 14122                           ; BSR set to: 0
 14123  008EE4  0100               	movlb	0	; () banked
 14124  008EE6  298E               	incf	Wait_One_Sec@k& (0+255),w,b
 14125  008EE8  E106               	bnz	l9553
 14126  008EEA  0100               	movlb	0	; () banked
 14127  008EEC  298F               	incf	(Wait_One_Sec@k+1)& (0+255),w,b
 14128  008EEE  B4D8               	btfsc	status,2,c
 14129  008EF0  D007               	goto	l1342
 14130  008EF2  D001               	goto	l9553
 14131                           
 14132                           ; BSR set to: 0
 14133  008EF4  D005               	goto	l1342
 14134  008EF6                     l9553:
 14135                           
 14136                           ; BSR set to: 0
 14137  008EF6  0100               	movlb	0	; () banked
 14138  008EF8  4B8E               	infsnz	Wait_One_Sec@k& (0+255),f,b
 14139  008EFA  2B8F               	incf	(Wait_One_Sec@k+1)& (0+255),f,b
 14140  008EFC  D7F3               	goto	l9549
 14141                           
 14142                           ; BSR set to: 0
 14143  008EFE  D7FB               	goto	l9553
 14144  008F00                     l1342:
 14145                           
 14146                           ; BSR set to: 0
 14147  008F00  0012               	return		;funcret
 14148  008F02                     __end_of_Wait_One_Sec:
 14149                           	opt stack 0
 14150                           tblptru	equ	0xFF8
 14151                           tblptrh	equ	0xFF7
 14152                           tblptrl	equ	0xFF6
 14153                           tablat	equ	0xFF5
 14154                           prodh	equ	0xFF4
 14155                           prodl	equ	0xFF3
 14156                           intcon	equ	0xFF2
 14157                           intcon2	equ	0xFF1
 14158                           postinc0	equ	0xFEE
 14159                           wreg	equ	0xFE8
 14160                           postdec1	equ	0xFE5
 14161                           fsr1l	equ	0xFE1
 14162                           indf2	equ	0xFDF
 14163                           postinc2	equ	0xFDE
 14164                           fsr2h	equ	0xFDA
 14165                           fsr2l	equ	0xFD9
 14166                           status	equ	0xFD8
 14167                           
 14168 ;; *************** function _Deactivate_Buzzer *****************
 14169 ;; Defined at:
 14170 ;;		line 126 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/utils.c"
 14171 ;; Parameters:    Size  Location     Type
 14172 ;;		None
 14173 ;; Auto vars:     Size  Location     Type
 14174 ;;		None
 14175 ;; Return value:  Size  Location     Type
 14176 ;;		None               void
 14177 ;; Registers used:
 14178 ;;		wreg, status,2
 14179 ;; Tracked objects:
 14180 ;;		On entry : 0/0
 14181 ;;		On exit  : 0/0
 14182 ;;		Unchanged: 0/0
 14183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14188 ;;Total ram usage:        0 bytes
 14189 ;; Hardware stack levels used:    1
 14190 ;; Hardware stack levels required when called:    6
 14191 ;; This function calls:
 14192 ;;		Nothing
 14193 ;; This function is called by:
 14194 ;;		_test_alarm
 14195 ;;		_Do_Beep_Good
 14196 ;;		_Do_Beep_Bad
 14197 ;;		_Do_Beep
 14198 ;; This function uses a non-reentrant model
 14199 ;;
 14200                           
 14201                           	psect	text66
 14202  0092DE                     __ptext66:
 14203                           	opt stack 0
 14204  0092DE                     _Deactivate_Buzzer:
 14205                           	opt stack 23
 14206                           
 14207                           ;utils.c: 128: CCP2CON = 0x0;
 14208                           
 14209                           ; BSR set to: 0
 14210                           ;incstack = 0
 14211  0092DE  0E00               	movlw	0
 14212  0092E0  6EBA               	movwf	4026,c	;volatile
 14213                           
 14214                           ;utils.c: 129: PORTBbits.RB3 = 0;
 14215  0092E2  9681               	bcf	3969,3,c	;volatile
 14216  0092E4  0012               	return		;funcret
 14217  0092E6                     __end_of_Deactivate_Buzzer:
 14218                           	opt stack 0
 14219                           tblptru	equ	0xFF8
 14220                           tblptrh	equ	0xFF7
 14221                           tblptrl	equ	0xFF6
 14222                           tablat	equ	0xFF5
 14223                           prodh	equ	0xFF4
 14224                           prodl	equ	0xFF3
 14225                           intcon	equ	0xFF2
 14226                           intcon2	equ	0xFF1
 14227                           postinc0	equ	0xFEE
 14228                           wreg	equ	0xFE8
 14229                           postdec1	equ	0xFE5
 14230                           fsr1l	equ	0xFE1
 14231                           indf2	equ	0xFDF
 14232                           postinc2	equ	0xFDE
 14233                           fsr2h	equ	0xFDA
 14234                           fsr2l	equ	0xFD9
 14235                           status	equ	0xFD8
 14236                           
 14237 ;; *************** function _Activate_Buzzer_500Hz *****************
 14238 ;; Defined at:
 14239 ;;		line 101 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/utils.c"
 14240 ;; Parameters:    Size  Location     Type
 14241 ;;		None
 14242 ;; Auto vars:     Size  Location     Type
 14243 ;;		None
 14244 ;; Return value:  Size  Location     Type
 14245 ;;		None               void
 14246 ;; Registers used:
 14247 ;;		wreg, status,2
 14248 ;; Tracked objects:
 14249 ;;		On entry : 0/0
 14250 ;;		On exit  : 0/0
 14251 ;;		Unchanged: 0/0
 14252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14257 ;;Total ram usage:        0 bytes
 14258 ;; Hardware stack levels used:    1
 14259 ;; Hardware stack levels required when called:    6
 14260 ;; This function calls:
 14261 ;;		Nothing
 14262 ;; This function is called by:
 14263 ;;		_Do_Beep_Bad
 14264 ;; This function uses a non-reentrant model
 14265 ;;
 14266                           
 14267                           	psect	text67
 14268  0091EC                     __ptext67:
 14269                           	opt stack 0
 14270  0091EC                     _Activate_Buzzer_500Hz:
 14271                           	opt stack 22
 14272                           
 14273                           ;utils.c: 103: PR2 = 0b11111001 ;
 14274                           
 14275                           ;incstack = 0
 14276  0091EC  0EF9               	movlw	249
 14277  0091EE  6ECB               	movwf	4043,c	;volatile
 14278                           
 14279                           ;utils.c: 104: T2CON = 0b00000111 ;
 14280  0091F0  0E07               	movlw	7
 14281  0091F2  6ECA               	movwf	4042,c	;volatile
 14282                           
 14283                           ;utils.c: 105: CCPR2L = 0b01111100 ;
 14284  0091F4  0E7C               	movlw	124
 14285  0091F6  6EBB               	movwf	4027,c	;volatile
 14286                           
 14287                           ;utils.c: 106: CCP2CON = 0b00111100 ;
 14288  0091F8  0E3C               	movlw	60
 14289  0091FA  6EBA               	movwf	4026,c	;volatile
 14290  0091FC  0012               	return		;funcret
 14291  0091FE                     __end_of_Activate_Buzzer_500Hz:
 14292                           	opt stack 0
 14293                           tblptru	equ	0xFF8
 14294                           tblptrh	equ	0xFF7
 14295                           tblptrl	equ	0xFF6
 14296                           tablat	equ	0xFF5
 14297                           prodh	equ	0xFF4
 14298                           prodl	equ	0xFF3
 14299                           intcon	equ	0xFF2
 14300                           intcon2	equ	0xFF1
 14301                           postinc0	equ	0xFEE
 14302                           wreg	equ	0xFE8
 14303                           postdec1	equ	0xFE5
 14304                           fsr1l	equ	0xFE1
 14305                           indf2	equ	0xFDF
 14306                           postinc2	equ	0xFDE
 14307                           fsr2h	equ	0xFDA
 14308                           fsr2l	equ	0xFD9
 14309                           status	equ	0xFD8
 14310                           
 14311 ;; *************** function _Decrease_Alarm_Time *****************
 14312 ;; Defined at:
 14313 ;;		line 86 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Alarm_Time.c"
 14314 ;; Parameters:    Size  Location     Type
 14315 ;;		None
 14316 ;; Auto vars:     Size  Location     Type
 14317 ;;		None
 14318 ;; Return value:  Size  Location     Type
 14319 ;;		None               void
 14320 ;; Registers used:
 14321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14322 ;; Tracked objects:
 14323 ;;		On entry : 0/0
 14324 ;;		On exit  : 0/0
 14325 ;;		Unchanged: 0/0
 14326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14331 ;;Total ram usage:        0 bytes
 14332 ;; Hardware stack levels used:    1
 14333 ;; Hardware stack levels required when called:   14
 14334 ;; This function calls:
 14335 ;;		_Update_Setup_Alarm_Time_Screen
 14336 ;; This function is called by:
 14337 ;;		_Do_Setup_Alarm_Time
 14338 ;; This function uses a non-reentrant model
 14339 ;;
 14340                           
 14341                           	psect	text68
 14342  00871E                     __ptext68:
 14343                           	opt stack 0
 14344  00871E                     _Decrease_Alarm_Time:
 14345                           	opt stack 15
 14346                           
 14347                           ;Setup_Alarm_Time.c: 88: switch (Select_Alarm_Field)
 14348                           
 14349                           ;incstack = 0
 14350  00871E  D021               	goto	l14309
 14351  008720                     l14289:
 14352                           
 14353                           ;Setup_Alarm_Time.c: 91: if (setup_alarm_hour == 0) setup_alarm_hour = 23;
 14354  008720  0101               	movlb	1	; () banked
 14355  008722  51C0               	movf	_setup_alarm_hour& (0+255),w,b
 14356  008724  A4D8               	btfss	status,2,c
 14357  008726  D004               	goto	l14293
 14358                           
 14359                           ; BSR set to: 1
 14360  008728  0E17               	movlw	23
 14361  00872A  0101               	movlb	1	; () banked
 14362  00872C  6FC0               	movwf	_setup_alarm_hour& (0+255),b
 14363  00872E  D025               	goto	l14311
 14364  008730                     l14293:
 14365                           
 14366                           ; BSR set to: 1
 14367                           ;Setup_Alarm_Time.c: 92: else --setup_alarm_hour;
 14368  008730  0101               	movlb	1	; () banked
 14369  008732  07C0               	decf	_setup_alarm_hour& (0+255),f,b
 14370                           
 14371                           ; BSR set to: 1
 14372                           ;Setup_Alarm_Time.c: 93: break;
 14373  008734  D022               	goto	l14311
 14374  008736                     l14295:
 14375                           
 14376                           ; BSR set to: 1
 14377                           ;Setup_Alarm_Time.c: 96: if (setup_alarm_minute == 0) setup_alarm_minute = 59;
 14378  008736  0101               	movlb	1	; () banked
 14379  008738  51C1               	movf	_setup_alarm_minute& (0+255),w,b
 14380  00873A  A4D8               	btfss	status,2,c
 14381  00873C  D004               	goto	l14299
 14382                           
 14383                           ; BSR set to: 1
 14384  00873E  0E3B               	movlw	59
 14385  008740  0101               	movlb	1	; () banked
 14386  008742  6FC1               	movwf	_setup_alarm_minute& (0+255),b
 14387  008744  D01A               	goto	l14311
 14388  008746                     l14299:
 14389                           
 14390                           ; BSR set to: 1
 14391                           ;Setup_Alarm_Time.c: 97: else -- setup_alarm_minute;
 14392  008746  0101               	movlb	1	; () banked
 14393  008748  07C1               	decf	_setup_alarm_minute& (0+255),f,b
 14394                           
 14395                           ; BSR set to: 1
 14396                           ;Setup_Alarm_Time.c: 98: break;
 14397  00874A  D017               	goto	l14311
 14398  00874C                     l14301:
 14399                           
 14400                           ; BSR set to: 1
 14401                           ;Setup_Alarm_Time.c: 101: if (setup_alarm_second == 0) setup_alarm_second = 59;
 14402  00874C  0101               	movlb	1	; () banked
 14403  00874E  51C2               	movf	_setup_alarm_second& (0+255),w,b
 14404  008750  A4D8               	btfss	status,2,c
 14405  008752  D004               	goto	l14305
 14406                           
 14407                           ; BSR set to: 1
 14408  008754  0E3B               	movlw	59
 14409  008756  0101               	movlb	1	; () banked
 14410  008758  6FC2               	movwf	_setup_alarm_second& (0+255),b
 14411  00875A  D00F               	goto	l14311
 14412  00875C                     l14305:
 14413                           
 14414                           ; BSR set to: 1
 14415                           ;Setup_Alarm_Time.c: 102: else --setup_alarm_second;
 14416  00875C  0101               	movlb	1	; () banked
 14417  00875E  07C2               	decf	_setup_alarm_second& (0+255),f,b
 14418                           
 14419                           ; BSR set to: 1
 14420                           ;Setup_Alarm_Time.c: 107: }
 14421                           
 14422                           ; BSR set to: 1
 14423                           ;Setup_Alarm_Time.c: 106: break;
 14424                           
 14425                           ;Setup_Alarm_Time.c: 105: default:
 14426                           
 14427                           ; BSR set to: 1
 14428                           ;Setup_Alarm_Time.c: 103: break;
 14429  008760  D00C               	goto	l14311
 14430  008762                     l14309:
 14431  008762  0101               	movlb	1	; () banked
 14432  008764  51BA               	movf	_Select_Alarm_Field& (0+255),w,b
 14433                           
 14434                           ; Switch size 1, requested type "space"
 14435                           ; Number of cases is 3, Range of values is 0 to 2
 14436                           ; switch strategies available:
 14437                           ; Name         Instructions Cycles
 14438                           ; simple_byte           10     6 (average)
 14439                           ;	Chosen strategy is simple_byte
 14440  008766  0A00               	xorlw	0	; case 0
 14441  008768  B4D8               	btfsc	status,2,c
 14442  00876A  D7DA               	goto	l14289
 14443  00876C  0A01               	xorlw	1	; case 1
 14444  00876E  B4D8               	btfsc	status,2,c
 14445  008770  D7E2               	goto	l14295
 14446  008772  0A03               	xorlw	3	; case 2
 14447  008774  B4D8               	btfsc	status,2,c
 14448  008776  D7EA               	goto	l14301
 14449  008778  D000               	goto	l14311
 14450  00877A                     l14311:
 14451                           
 14452                           ; BSR set to: 1
 14453                           ;Setup_Alarm_Time.c: 108: Update_Setup_Alarm_Time_Screen();
 14454  00877A  EC30  F033         	call	_Update_Setup_Alarm_Time_Screen	;wreg free
 14455  00877E  0012               	return		;funcret
 14456  008780                     __end_of_Decrease_Alarm_Time:
 14457                           	opt stack 0
 14458                           tblptru	equ	0xFF8
 14459                           tblptrh	equ	0xFF7
 14460                           tblptrl	equ	0xFF6
 14461                           tablat	equ	0xFF5
 14462                           prodh	equ	0xFF4
 14463                           prodl	equ	0xFF3
 14464                           intcon	equ	0xFF2
 14465                           intcon2	equ	0xFF1
 14466                           postinc0	equ	0xFEE
 14467                           wreg	equ	0xFE8
 14468                           postdec1	equ	0xFE5
 14469                           fsr1l	equ	0xFE1
 14470                           indf2	equ	0xFDF
 14471                           postinc2	equ	0xFDE
 14472                           fsr2h	equ	0xFDA
 14473                           fsr2l	equ	0xFD9
 14474                           status	equ	0xFD8
 14475                           
 14476 ;; *************** function _Update_Setup_Alarm_Time_Screen *****************
 14477 ;; Defined at:
 14478 ;;		line 160 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Setup_Alarm_Time.c"
 14479 ;; Parameters:    Size  Location     Type
 14480 ;;		None
 14481 ;; Auto vars:     Size  Location     Type
 14482 ;;		None
 14483 ;; Return value:  Size  Location     Type
 14484 ;;		None               void
 14485 ;; Registers used:
 14486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14487 ;; Tracked objects:
 14488 ;;		On entry : 0/0
 14489 ;;		On exit  : 0/0
 14490 ;;		Unchanged: 0/0
 14491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14496 ;;Total ram usage:        0 bytes
 14497 ;; Hardware stack levels used:    1
 14498 ;; Hardware stack levels required when called:   13
 14499 ;; This function calls:
 14500 ;;		___awdiv
 14501 ;;		___awmod
 14502 ;;		_drawtext
 14503 ;;		_printf
 14504 ;; This function is called by:
 14505 ;;		_Do_Setup_Alarm_Time
 14506 ;;		_Increase_Alarm_Time
 14507 ;;		_Decrease_Alarm_Time
 14508 ;; This function uses a non-reentrant model
 14509 ;;
 14510                           
 14511                           	psect	text69
 14512  006660                     __ptext69:
 14513                           	opt stack 0
 14514  006660                     _Update_Setup_Alarm_Time_Screen:
 14515                           	opt stack 16
 14516                           
 14517                           ;Setup_Alarm_Time.c: 162: printf ("%x:%x:%x\r\n", setup_alarm_hour,setup_alarm_minute,se
      +                          tup_alarm_second);
 14518                           
 14519                           ;incstack = 0
 14520  006660  0EA8               	movlw	low STR_28
 14521  006662  0101               	movlb	1	; () banked
 14522  006664  6FCA               	movwf	printf@f& (0+255),b
 14523  006666  0EFF               	movlw	high STR_28
 14524  006668  0101               	movlb	1	; () banked
 14525  00666A  6FCB               	movwf	(printf@f+1)& (0+255),b
 14526  00666C  C1C0  F1CC         	movff	_setup_alarm_hour,?_printf+2
 14527  006670  0101               	movlb	1	; () banked
 14528  006672  6BCD               	clrf	(?_printf+3)& (0+255),b
 14529  006674  C1C1  F1CE         	movff	_setup_alarm_minute,?_printf+4
 14530  006678  0101               	movlb	1	; () banked
 14531  00667A  6BCF               	clrf	(?_printf+5)& (0+255),b
 14532  00667C  C1C2  F1D0         	movff	_setup_alarm_second,?_printf+6
 14533  006680  0101               	movlb	1	; () banked
 14534  006682  6BD1               	clrf	(?_printf+7)& (0+255),b
 14535  006684  EC0E  F000         	call	_printf	;wreg free
 14536                           
 14537                           ;Setup_Alarm_Time.c: 163: setup_alarm_time[0] = (setup_alarm_hour/10) + '0';
 14538  006688  C1C0  F094         	movff	_setup_alarm_hour,___awdiv@dividend
 14539  00668C  0100               	movlb	0	; () banked
 14540  00668E  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
 14541  006690  0E00               	movlw	0
 14542  006692  0100               	movlb	0	; () banked
 14543  006694  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
 14544  006696  0E0A               	movlw	10
 14545  006698  6F96               	movwf	___awdiv@divisor& (0+255),b
 14546  00669A  EC74  F03A         	call	___awdiv	;wreg free
 14547  00669E  0100               	movlb	0	; () banked
 14548  0066A0  5194               	movf	?___awdiv& (0+255),w,b
 14549  0066A2  0F30               	addlw	48
 14550  0066A4  0101               	movlb	1	; () banked
 14551  0066A6  6F49               	movwf	_setup_alarm_time& (0+255),b
 14552                           
 14553                           ; BSR set to: 1
 14554                           ;Setup_Alarm_Time.c: 164: setup_alarm_time[1] = (setup_alarm_hour%10) + '0';
 14555  0066A8  C1C0  F0BA         	movff	_setup_alarm_hour,___awmod@dividend
 14556  0066AC  0100               	movlb	0	; () banked
 14557  0066AE  6BBB               	clrf	(___awmod@dividend+1)& (0+255),b
 14558  0066B0  0E00               	movlw	0
 14559  0066B2  0100               	movlb	0	; () banked
 14560  0066B4  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
 14561  0066B6  0E0A               	movlw	10
 14562  0066B8  6FBC               	movwf	___awmod@divisor& (0+255),b
 14563  0066BA  EC87  F03D         	call	___awmod	;wreg free
 14564  0066BE  0100               	movlb	0	; () banked
 14565  0066C0  51BA               	movf	?___awmod& (0+255),w,b
 14566  0066C2  0F30               	addlw	48
 14567  0066C4  0101               	movlb	1	; () banked
 14568  0066C6  6F4A               	movwf	(_setup_alarm_time+1)& (0+255),b
 14569                           
 14570                           ; BSR set to: 1
 14571                           ;Setup_Alarm_Time.c: 165: setup_alarm_time[3] = (setup_alarm_minute/10) + '0';
 14572  0066C8  C1C1  F094         	movff	_setup_alarm_minute,___awdiv@dividend
 14573  0066CC  0100               	movlb	0	; () banked
 14574  0066CE  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
 14575  0066D0  0E00               	movlw	0
 14576  0066D2  0100               	movlb	0	; () banked
 14577  0066D4  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
 14578  0066D6  0E0A               	movlw	10
 14579  0066D8  6F96               	movwf	___awdiv@divisor& (0+255),b
 14580  0066DA  EC74  F03A         	call	___awdiv	;wreg free
 14581  0066DE  0100               	movlb	0	; () banked
 14582  0066E0  5194               	movf	?___awdiv& (0+255),w,b
 14583  0066E2  0F30               	addlw	48
 14584  0066E4  0101               	movlb	1	; () banked
 14585  0066E6  6F4C               	movwf	(_setup_alarm_time+3)& (0+255),b
 14586                           
 14587                           ; BSR set to: 1
 14588                           ;Setup_Alarm_Time.c: 166: setup_alarm_time[4] = (setup_alarm_minute%10) + '0';
 14589  0066E8  C1C1  F0BA         	movff	_setup_alarm_minute,___awmod@dividend
 14590  0066EC  0100               	movlb	0	; () banked
 14591  0066EE  6BBB               	clrf	(___awmod@dividend+1)& (0+255),b
 14592  0066F0  0E00               	movlw	0
 14593  0066F2  0100               	movlb	0	; () banked
 14594  0066F4  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
 14595  0066F6  0E0A               	movlw	10
 14596  0066F8  6FBC               	movwf	___awmod@divisor& (0+255),b
 14597  0066FA  EC87  F03D         	call	___awmod	;wreg free
 14598  0066FE  0100               	movlb	0	; () banked
 14599  006700  51BA               	movf	?___awmod& (0+255),w,b
 14600  006702  0F30               	addlw	48
 14601  006704  0101               	movlb	1	; () banked
 14602  006706  6F4D               	movwf	(_setup_alarm_time+4)& (0+255),b
 14603                           
 14604                           ; BSR set to: 1
 14605                           ;Setup_Alarm_Time.c: 167: setup_alarm_time[6] = (setup_alarm_second/10) + '0';
 14606  006708  C1C2  F094         	movff	_setup_alarm_second,___awdiv@dividend
 14607  00670C  0100               	movlb	0	; () banked
 14608  00670E  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
 14609  006710  0E00               	movlw	0
 14610  006712  0100               	movlb	0	; () banked
 14611  006714  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
 14612  006716  0E0A               	movlw	10
 14613  006718  6F96               	movwf	___awdiv@divisor& (0+255),b
 14614  00671A  EC74  F03A         	call	___awdiv	;wreg free
 14615  00671E  0100               	movlb	0	; () banked
 14616  006720  5194               	movf	?___awdiv& (0+255),w,b
 14617  006722  0F30               	addlw	48
 14618  006724  0101               	movlb	1	; () banked
 14619  006726  6F4F               	movwf	(_setup_alarm_time+6)& (0+255),b
 14620                           
 14621                           ; BSR set to: 1
 14622                           ;Setup_Alarm_Time.c: 168: setup_alarm_time[7] = (setup_alarm_second%10) + '0';
 14623  006728  C1C2  F0BA         	movff	_setup_alarm_second,___awmod@dividend
 14624  00672C  0100               	movlb	0	; () banked
 14625  00672E  6BBB               	clrf	(___awmod@dividend+1)& (0+255),b
 14626  006730  0E00               	movlw	0
 14627  006732  0100               	movlb	0	; () banked
 14628  006734  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
 14629  006736  0E0A               	movlw	10
 14630  006738  6FBC               	movwf	___awmod@divisor& (0+255),b
 14631  00673A  EC87  F03D         	call	___awmod	;wreg free
 14632  00673E  0100               	movlb	0	; () banked
 14633  006740  51BA               	movf	?___awmod& (0+255),w,b
 14634  006742  0F30               	addlw	48
 14635  006744  0101               	movlb	1	; () banked
 14636  006746  6F50               	movwf	(_setup_alarm_time+7)& (0+255),b
 14637                           
 14638                           ;Setup_Alarm_Time.c: 169: drawtext(15, 52, setup_alarm_time, 0x07FF, 0x0000, 2);
 14639  006748  0E34               	movlw	52
 14640  00674A  0100               	movlb	0	; () banked
 14641  00674C  6FB6               	movwf	drawtext@y& (0+255),b
 14642  00674E  0E49               	movlw	low _setup_alarm_time
 14643  006750  0100               	movlb	0	; () banked
 14644  006752  6FB7               	movwf	drawtext@_text& (0+255),b
 14645  006754  0E01               	movlw	high _setup_alarm_time
 14646  006756  0100               	movlb	0	; () banked
 14647  006758  6FB8               	movwf	(drawtext@_text+1)& (0+255),b
 14648  00675A  0E07               	movlw	7
 14649  00675C  0100               	movlb	0	; () banked
 14650  00675E  6FBA               	movwf	(drawtext@color+1)& (0+255),b
 14651  006760  69B9               	setf	drawtext@color& (0+255),b
 14652  006762  0E00               	movlw	0
 14653  006764  0100               	movlb	0	; () banked
 14654  006766  6FBC               	movwf	(drawtext@bg+1)& (0+255),b
 14655  006768  0E00               	movlw	0
 14656  00676A  6FBB               	movwf	drawtext@bg& (0+255),b
 14657  00676C  0E02               	movlw	2
 14658  00676E  0100               	movlb	0	; () banked
 14659  006770  6FBD               	movwf	drawtext@size& (0+255),b
 14660  006772  0E0F               	movlw	15
 14661  006774  EC0B  F032         	call	_drawtext
 14662  006778  0012               	return		;funcret
 14663  00677A                     __end_of_Update_Setup_Alarm_Time_Screen:
 14664                           	opt stack 0
 14665                           tblptru	equ	0xFF8
 14666                           tblptrh	equ	0xFF7
 14667                           tblptrl	equ	0xFF6
 14668                           tablat	equ	0xFF5
 14669                           prodh	equ	0xFF4
 14670                           prodl	equ	0xFF3
 14671                           intcon	equ	0xFF2
 14672                           intcon2	equ	0xFF1
 14673                           postinc0	equ	0xFEE
 14674                           wreg	equ	0xFE8
 14675                           postdec1	equ	0xFE5
 14676                           fsr1l	equ	0xFE1
 14677                           indf2	equ	0xFDF
 14678                           postinc2	equ	0xFDE
 14679                           fsr2h	equ	0xFDA
 14680                           fsr2l	equ	0xFD9
 14681                           status	equ	0xFD8
 14682                           
 14683 ;; *************** function _printf *****************
 14684 ;; Defined at:
 14685 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 14686 ;; Parameters:    Size  Location     Type
 14687 ;;  f               2    0[BANK1 ] PTR const unsigned char 
 14688 ;;		 -> STR_36(22), STR_28(11), STR_6(20), STR_5(22), 
 14689 ;;		 -> STR_4(21), STR_3(30), STR_2(7), STR_1(22), 
 14690 ;; Auto vars:     Size  Location     Type
 14691 ;;  idx             1    3[BANK2 ] unsigned char 
 14692 ;;  temp            3   16[BANK2 ] unsigned char 
 14693 ;;  val             4   29[BANK2 ] unsigned long 
 14694 ;;  tmpval          4   21[BANK2 ] struct .
 14695 ;;  fval            3   33[BANK2 ] struct .
 14696 ;;  cp              3    0        PTR const unsigned char 
 14697 ;;  flag            2   39[BANK2 ] unsigned short 
 14698 ;;  prec            2   36[BANK2 ] int 
 14699 ;;  width           2   27[BANK2 ] int 
 14700 ;;  exp             2   25[BANK2 ] int 
 14701 ;;  ap              2   19[BANK2 ] PTR void [1]
 14702 ;;		 -> ?i2_printf(2), ?_printf(2), 
 14703 ;;  len             2    0        unsigned int 
 14704 ;;  c               1   38[BANK2 ] char 
 14705 ;;  d               1    0        unsigned char 
 14706 ;; Return value:  Size  Location     Type
 14707 ;;                  2    0[BANK1 ] int 
 14708 ;; Registers used:
 14709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14710 ;; Tracked objects:
 14711 ;;		On entry : 0/0
 14712 ;;		On exit  : 0/0
 14713 ;;		Unchanged: 0/0
 14714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14715 ;;      Params:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14716 ;;      Locals:         0       0       0      41       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14717 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14718 ;;      Totals:         0       0      20      41       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14719 ;;Total ram usage:       61 bytes
 14720 ;; Hardware stack levels used:    1
 14721 ;; Hardware stack levels required when called:    9
 14722 ;; This function calls:
 14723 ;;		___awdiv
 14724 ;;		___awmod
 14725 ;;		___ftadd
 14726 ;;		___ftdiv
 14727 ;;		___ftge
 14728 ;;		___ftmul
 14729 ;;		___ftneg
 14730 ;;		___ftsub
 14731 ;;		___fttol
 14732 ;;		___lldiv
 14733 ;;		___llmod
 14734 ;;		___lltoft
 14735 ;;		___wmul
 14736 ;;		__div_to_l_
 14737 ;;		__tdiv_to_l_
 14738 ;;		_fround
 14739 ;;		_isdigit
 14740 ;;		_putch
 14741 ;;		_scale
 14742 ;; This function is called by:
 14743 ;;		_main
 14744 ;;		_Update_Setup_Alarm_Time_Screen
 14745 ;;		_check_for_button_input
 14746 ;; This function uses a non-reentrant model
 14747 ;;
 14748                           
 14749                           	psect	text70
 14750  00001C                     __ptext70:
 14751                           	opt stack 0
 14752  00001C                     _printf:
 14753                           	opt stack 21
 14754                           
 14755                           ;doprnt.c: 466: va_list ap;
 14756                           ;doprnt.c: 499: signed char c;
 14757                           ;doprnt.c: 501: int width;
 14758                           ;doprnt.c: 504: int prec;
 14759                           ;doprnt.c: 508: unsigned short flag;
 14760                           ;doprnt.c: 515: char d;
 14761                           ;doprnt.c: 516: double fval;
 14762                           ;doprnt.c: 517: int exp;
 14763                           ;doprnt.c: 523: union {
 14764                           ;doprnt.c: 524: unsigned long vd;
 14765                           ;doprnt.c: 525: double integ;
 14766                           ;doprnt.c: 526: } tmpval;
 14767                           ;doprnt.c: 528: unsigned long val;
 14768                           ;doprnt.c: 529: unsigned len;
 14769                           ;doprnt.c: 530: const char * cp;
 14770                           ;doprnt.c: 533: *ap = __va_start();
 14771                           
 14772                           ;incstack = 0
 14773  00001C  0ECC               	movlw	low (?_printf+2)
 14774  00001E  0102               	movlb	2	; () banked
 14775  000020  6F13               	movwf	printf@ap& (0+255),b
 14776  000022  0E01               	movlw	high (?_printf+2)
 14777  000024  0102               	movlb	2	; () banked
 14778  000026  6F14               	movwf	(printf@ap+1)& (0+255),b
 14779                           
 14780                           ;doprnt.c: 536: while(c = *f++) {
 14781  000028  EFE9  F00C         	goto	l13405
 14782  00002C                     l12795:
 14783                           
 14784                           ; BSR set to: 2
 14785                           ;doprnt.c: 538: if(c != '%')
 14786  00002C  0E25               	movlw	37
 14787  00002E  0102               	movlb	2	; () banked
 14788  000030  1926               	xorwf	printf@c& (0+255),w,b
 14789  000032  B4D8               	btfsc	status,2,c
 14790  000034  D006               	goto	l12799
 14791                           
 14792                           ; BSR set to: 2
 14793                           ;doprnt.c: 540: {
 14794                           ;doprnt.c: 541: (putch(c) );
 14795  000036  0102               	movlb	2	; () banked
 14796  000038  5126               	movf	printf@c& (0+255),w,b
 14797  00003A  EC3A  F049         	call	_putch
 14798                           
 14799                           ;doprnt.c: 542: continue;
 14800  00003E  EFE9  F00C         	goto	l13405
 14801  000042                     l12799:
 14802                           
 14803                           ;doprnt.c: 543: }
 14804                           ;doprnt.c: 546: width = 0;
 14805  000042  0E00               	movlw	0
 14806  000044  0102               	movlb	2	; () banked
 14807  000046  6F1C               	movwf	(printf@width+1)& (0+255),b
 14808  000048  0E00               	movlw	0
 14809  00004A  6F1B               	movwf	printf@width& (0+255),b
 14810                           
 14811                           ;doprnt.c: 548: flag = 0;
 14812  00004C  0E00               	movlw	0
 14813  00004E  0102               	movlb	2	; () banked
 14814  000050  6F28               	movwf	(printf@flag+1)& (0+255),b
 14815  000052  0E00               	movlw	0
 14816  000054  6F27               	movwf	printf@flag& (0+255),b
 14817                           
 14818                           ; BSR set to: 2
 14819                           ;doprnt.c: 551: switch(*f) {
 14820                           
 14821                           ;doprnt.c: 550: for(;;) {
 14822  000056  D013               	goto	l12813
 14823  000058                     l12801:
 14824                           
 14825                           ;doprnt.c: 554: flag |= 0x08;
 14826  000058  0102               	movlb	2	; () banked
 14827  00005A  8727               	bsf	printf@flag& (0+255),3,b
 14828  00005C  D00B               	goto	L11
 14829  00005E                     l12803:
 14830                           
 14831                           ;doprnt.c: 561: flag |= 0x01;
 14832  00005E  0102               	movlb	2	; () banked
 14833  000060  8127               	bsf	printf@flag& (0+255),0,b
 14834  000062  D008               	goto	L11
 14835  000064                     l12805:
 14836                           
 14837                           ;doprnt.c: 568: flag |= 0x02;
 14838  000064  0102               	movlb	2	; () banked
 14839  000066  8327               	bsf	printf@flag& (0+255),1,b
 14840  000068  D005               	goto	L11
 14841  00006A                     l12807:
 14842                           
 14843                           ;doprnt.c: 574: flag |= 0x800;
 14844  00006A  0102               	movlb	2	; () banked
 14845  00006C  8728               	bsf	(printf@flag+1)& (0+255),3,b
 14846  00006E  D002               	goto	L11
 14847  000070                     l12809:
 14848                           
 14849                           ;doprnt.c: 580: flag |= 0x04;
 14850  000070  0102               	movlb	2	; () banked
 14851  000072  8527               	bsf	printf@flag& (0+255),2,b
 14852  000074                     L11:
 14853                           
 14854                           ;doprnt.c: 581: f++;
 14855  000074  0101               	movlb	1	; () banked
 14856  000076  4BCA               	infsnz	printf@f& (0+255),f,b
 14857  000078  2BCB               	incf	(printf@f+1)& (0+255),f,b
 14858                           
 14859                           ;doprnt.c: 582: continue;
 14860  00007A  D001               	goto	l12813
 14861                           
 14862                           ; BSR set to: 1
 14863                           ;doprnt.c: 584: }
 14864  00007C  D017               	goto	l1427
 14865  00007E                     l12813:
 14866  00007E  C1CA  FFF6         	movff	printf@f,tblptrl
 14867  000082  C1CB  FFF7         	movff	printf@f+1,tblptrh
 14868  000086                     	if	0	;tblptru may be non-zero
 14869  000086                     	endif
 14870  000086                     	if	0	;tblptru may be non-zero
 14871  000086                     	endif
 14872  000086  0008               	tblrd		*
 14873  000088  50F5               	movf	tablat,w,c
 14874                           
 14875                           ; Switch size 1, requested type "space"
 14876                           ; Number of cases is 5, Range of values is 32 to 48
 14877                           ; switch strategies available:
 14878                           ; Name         Instructions Cycles
 14879                           ; simple_byte           16     9 (average)
 14880                           ;	Chosen strategy is simple_byte
 14881  00008A  0A20               	xorlw	32	; case 32
 14882  00008C  B4D8               	btfsc	status,2,c
 14883  00008E  D7E7               	goto	l12803
 14884  000090  0A03               	xorlw	3	; case 35
 14885  000092  B4D8               	btfsc	status,2,c
 14886  000094  D7EA               	goto	l12807
 14887  000096  0A08               	xorlw	8	; case 43
 14888  000098  B4D8               	btfsc	status,2,c
 14889  00009A  D7E4               	goto	l12805
 14890  00009C  0A06               	xorlw	6	; case 45
 14891  00009E  B4D8               	btfsc	status,2,c
 14892  0000A0  D7DB               	goto	l12801
 14893  0000A2  0A1D               	xorlw	29	; case 48
 14894  0000A4  B4D8               	btfsc	status,2,c
 14895  0000A6  D7E4               	goto	l12809
 14896                           
 14897                           ;doprnt.c: 585: break;
 14898  0000A8  D001               	goto	l1427
 14899                           
 14900                           ;doprnt.c: 586: }
 14901  0000AA  D7E9               	goto	l12813
 14902  0000AC                     l1427:
 14903                           
 14904                           ;doprnt.c: 589: if(flag & 0x02)
 14905  0000AC  0102               	movlb	2	; () banked
 14906  0000AE  A327               	btfss	printf@flag& (0+255),1,b
 14907  0000B0  D003               	goto	l12817
 14908                           
 14909                           ; BSR set to: 2
 14910                           ;doprnt.c: 590: flag &= ~0x01;
 14911  0000B2  0102               	movlb	2	; () banked
 14912  0000B4  9127               	bcf	printf@flag& (0+255),0,b
 14913  0000B6  D000               	goto	l12817
 14914  0000B8                     l12817:
 14915                           
 14916                           ; BSR set to: 2
 14917                           ;doprnt.c: 593: if(flag & 0x08)
 14918  0000B8  0102               	movlb	2	; () banked
 14919  0000BA  A727               	btfss	printf@flag& (0+255),3,b
 14920  0000BC  D003               	goto	l12821
 14921                           
 14922                           ; BSR set to: 2
 14923                           ;doprnt.c: 594: flag &= ~0x04;
 14924  0000BE  0102               	movlb	2	; () banked
 14925  0000C0  9527               	bcf	printf@flag& (0+255),2,b
 14926  0000C2  D000               	goto	l12821
 14927  0000C4                     l12821:
 14928                           
 14929                           ; BSR set to: 2
 14930                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 14931  0000C4  C1CA  FFF6         	movff	printf@f,tblptrl
 14932  0000C8  C1CB  FFF7         	movff	printf@f+1,tblptrh
 14933  0000CC                     	if	0	;tblptru may be non-zero
 14934  0000CC                     	endif
 14935  0000CC                     	if	0	;tblptru may be non-zero
 14936  0000CC                     	endif
 14937  0000CC  0008               	tblrd		*
 14938  0000CE  50F5               	movf	tablat,w,c
 14939  0000D0  EC18  F047         	call	_isdigit
 14940  0000D4  A0D8               	btfss	status,0,c
 14941  0000D6  D043               	goto	l12833
 14942                           
 14943                           ;doprnt.c: 598: width = 0;
 14944  0000D8  0E00               	movlw	0
 14945  0000DA  0102               	movlb	2	; () banked
 14946  0000DC  6F1C               	movwf	(printf@width+1)& (0+255),b
 14947  0000DE  0E00               	movlw	0
 14948  0000E0  6F1B               	movwf	printf@width& (0+255),b
 14949  0000E2  D000               	goto	l12825
 14950  0000E4                     l12825:
 14951                           
 14952                           ;doprnt.c: 600: width *= 10;
 14953  0000E4  C21B  F08E         	movff	printf@width,___wmul@multiplier
 14954  0000E8  C21C  F08F         	movff	printf@width+1,___wmul@multiplier+1
 14955  0000EC  0E00               	movlw	0
 14956  0000EE  0100               	movlb	0	; () banked
 14957  0000F0  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14958  0000F2  0E0A               	movlw	10
 14959  0000F4  6F90               	movwf	___wmul@multiplicand& (0+255),b
 14960  0000F6  EC7F  F046         	call	___wmul	;wreg free
 14961  0000FA  C08E  F21B         	movff	?___wmul,printf@width
 14962  0000FE  C08F  F21C         	movff	?___wmul+1,printf@width+1
 14963                           
 14964                           ;doprnt.c: 601: width += *f++ - '0';
 14965  000102  0ED0               	movlw	208
 14966  000104  0101               	movlb	1	; () banked
 14967  000106  6FD8               	movwf	??_printf& (0+255),b
 14968  000108  0EFF               	movlw	255
 14969  00010A  0101               	movlb	1	; () banked
 14970  00010C  6FD9               	movwf	(??_printf+1)& (0+255),b
 14971  00010E  C1CA  FFF6         	movff	printf@f,tblptrl
 14972  000112  C1CB  FFF7         	movff	printf@f+1,tblptrh
 14973  000116                     	if	0	;tblptru may be non-zero
 14974  000116                     	endif
 14975  000116                     	if	0	;tblptru may be non-zero
 14976  000116                     	endif
 14977  000116  0008               	tblrd		*
 14978  000118  50F5               	movf	tablat,w,c
 14979  00011A  0101               	movlb	1	; () banked
 14980  00011C  6FDA               	movwf	(??_printf+2)& (0+255),b
 14981  00011E  6BDB               	clrf	(??_printf+3)& (0+255),b
 14982  000120  0101               	movlb	1	; () banked
 14983  000122  51D8               	movf	??_printf& (0+255),w,b
 14984  000124  0101               	movlb	1	; () banked
 14985  000126  27DA               	addwf	(??_printf+2)& (0+255),f,b
 14986  000128  0101               	movlb	1	; () banked
 14987  00012A  51D9               	movf	(??_printf+1)& (0+255),w,b
 14988  00012C  0101               	movlb	1	; () banked
 14989  00012E  23DB               	addwfc	(??_printf+3)& (0+255),f,b
 14990  000130  0101               	movlb	1	; () banked
 14991  000132  51DA               	movf	(??_printf+2)& (0+255),w,b
 14992  000134  0102               	movlb	2	; () banked
 14993  000136  271B               	addwf	printf@width& (0+255),f,b
 14994  000138  0101               	movlb	1	; () banked
 14995  00013A  51DB               	movf	(??_printf+3)& (0+255),w,b
 14996  00013C  0102               	movlb	2	; () banked
 14997  00013E  231C               	addwfc	(printf@width+1)& (0+255),f,b
 14998                           
 14999                           ; BSR set to: 2
 15000  000140  0101               	movlb	1	; () banked
 15001  000142  4BCA               	infsnz	printf@f& (0+255),f,b
 15002  000144  2BCB               	incf	(printf@f+1)& (0+255),f,b
 15003                           
 15004                           ; BSR set to: 1
 15005                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 15006  000146  C1CA  FFF6         	movff	printf@f,tblptrl
 15007  00014A  C1CB  FFF7         	movff	printf@f+1,tblptrh
 15008  00014E                     	if	0	;tblptru may be non-zero
 15009  00014E                     	endif
 15010  00014E                     	if	0	;tblptru may be non-zero
 15011  00014E                     	endif
 15012  00014E  0008               	tblrd		*
 15013  000150  50F5               	movf	tablat,w,c
 15014  000152  EC18  F047         	call	_isdigit
 15015  000156  A0D8               	btfss	status,0,c
 15016  000158  D002               	goto	l12833
 15017  00015A  D7C4               	goto	l12825
 15018  00015C  D000               	goto	l12833
 15019  00015E                     l12833:
 15020                           
 15021                           ;doprnt.c: 608: }
 15022                           ;doprnt.c: 611: if(*f == '.') {
 15023  00015E  C1CA  FFF6         	movff	printf@f,tblptrl
 15024  000162  C1CB  FFF7         	movff	printf@f+1,tblptrh
 15025  000166                     	if	0	;tblptru may be non-zero
 15026  000166                     	endif
 15027  000166                     	if	0	;tblptru may be non-zero
 15028  000166                     	endif
 15029  000166  0008               	tblrd		*
 15030  000168  50F5               	movf	tablat,w,c
 15031  00016A  0A2E               	xorlw	46
 15032  00016C  A4D8               	btfss	status,2,c
 15033  00016E  D03B               	goto	l12845
 15034                           
 15035                           ;doprnt.c: 612: flag |= 0x4000;
 15036  000170  0102               	movlb	2	; () banked
 15037  000172  8D28               	bsf	(printf@flag+1)& (0+255),6,b
 15038                           
 15039                           ;doprnt.c: 613: f++;
 15040  000174  0101               	movlb	1	; () banked
 15041  000176  4BCA               	infsnz	printf@f& (0+255),f,b
 15042  000178  2BCB               	incf	(printf@f+1)& (0+255),f,b
 15043                           
 15044                           ; BSR set to: 1
 15045                           ;doprnt.c: 620: {
 15046                           ;doprnt.c: 621: prec = 0;
 15047  00017A  0E00               	movlw	0
 15048  00017C  0102               	movlb	2	; () banked
 15049  00017E  6F25               	movwf	(printf@prec+1)& (0+255),b
 15050  000180  0E00               	movlw	0
 15051  000182  6F24               	movwf	printf@prec& (0+255),b
 15052                           
 15053                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 15054  000184  D024               	goto	l12843
 15055  000186                     l12839:
 15056                           
 15057                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 15058  000186  C224  F08E         	movff	printf@prec,___wmul@multiplier
 15059  00018A  C225  F08F         	movff	printf@prec+1,___wmul@multiplier+1
 15060  00018E  0E00               	movlw	0
 15061  000190  0100               	movlb	0	; () banked
 15062  000192  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15063  000194  0E0A               	movlw	10
 15064  000196  6F90               	movwf	___wmul@multiplicand& (0+255),b
 15065  000198  EC7F  F046         	call	___wmul	;wreg free
 15066  00019C  C1CA  FFF6         	movff	printf@f,tblptrl
 15067  0001A0  C1CB  FFF7         	movff	printf@f+1,tblptrh
 15068  0001A4                     	if	0	;tblptru may be non-zero
 15069  0001A4                     	endif
 15070  0001A4                     	if	0	;tblptru may be non-zero
 15071  0001A4                     	endif
 15072  0001A4  0008               	tblrd		*
 15073  0001A6  50F5               	movf	tablat,w,c
 15074  0001A8  0100               	movlb	0	; () banked
 15075  0001AA  278E               	addwf	?___wmul& (0+255),f,b
 15076  0001AC  0E00               	movlw	0
 15077  0001AE  0100               	movlb	0	; () banked
 15078  0001B0  238F               	addwfc	(?___wmul+1)& (0+255),f,b
 15079  0001B2  0ED0               	movlw	208
 15080  0001B4  0100               	movlb	0	; () banked
 15081  0001B6  258E               	addwf	?___wmul& (0+255),w,b
 15082  0001B8  0102               	movlb	2	; () banked
 15083  0001BA  6F24               	movwf	printf@prec& (0+255),b
 15084  0001BC  0EFF               	movlw	255
 15085  0001BE  0100               	movlb	0	; () banked
 15086  0001C0  218F               	addwfc	(?___wmul+1)& (0+255),w,b
 15087  0001C2  0102               	movlb	2	; () banked
 15088  0001C4  6F25               	movwf	(printf@prec+1)& (0+255),b
 15089                           
 15090                           ; BSR set to: 2
 15091  0001C6  0101               	movlb	1	; () banked
 15092  0001C8  4BCA               	infsnz	printf@f& (0+255),f,b
 15093  0001CA  2BCB               	incf	(printf@f+1)& (0+255),f,b
 15094  0001CC  D000               	goto	l12843
 15095  0001CE                     l12843:
 15096  0001CE  C1CA  FFF6         	movff	printf@f,tblptrl
 15097  0001D2  C1CB  FFF7         	movff	printf@f+1,tblptrh
 15098  0001D6                     	if	0	;tblptru may be non-zero
 15099  0001D6                     	endif
 15100  0001D6                     	if	0	;tblptru may be non-zero
 15101  0001D6                     	endif
 15102  0001D6  0008               	tblrd		*
 15103  0001D8  50F5               	movf	tablat,w,c
 15104  0001DA  EC18  F047         	call	_isdigit
 15105  0001DE  A0D8               	btfss	status,0,c
 15106  0001E0  D01F               	goto	l12859
 15107  0001E2  D7D1               	goto	l12839
 15108                           
 15109                           ;doprnt.c: 624: }
 15110                           ;doprnt.c: 625: } else {
 15111  0001E4  D01D               	goto	l12859
 15112  0001E6                     l12845:
 15113                           
 15114                           ;doprnt.c: 626: prec = 0;
 15115  0001E6  0E00               	movlw	0
 15116  0001E8  0102               	movlb	2	; () banked
 15117  0001EA  6F25               	movwf	(printf@prec+1)& (0+255),b
 15118  0001EC  0E00               	movlw	0
 15119  0001EE  6F24               	movwf	printf@prec& (0+255),b
 15120                           
 15121                           ; BSR set to: 2
 15122                           ;doprnt.c: 628: flag |= 0x1000;
 15123  0001F0  0102               	movlb	2	; () banked
 15124  0001F2  8928               	bsf	(printf@flag+1)& (0+255),4,b
 15125                           
 15126                           ; BSR set to: 2
 15127                           ;doprnt.c: 630: }
 15128                           ;doprnt.c: 635: switch(c = *f++) {
 15129  0001F4  D015               	goto	l12859
 15130                           
 15131                           ; BSR set to: 2
 15132                           ;doprnt.c: 638: goto alldone;
 15133                           
 15134                           ;doprnt.c: 637: case 0:
 15135  0001F6  EFFA  F00C         	goto	l1661
 15136  0001FA                     l12849:
 15137                           
 15138                           ; BSR set to: 2
 15139                           ;doprnt.c: 663: flag |= 0x400;
 15140  0001FA  0102               	movlb	2	; () banked
 15141  0001FC  8528               	bsf	(printf@flag+1)& (0+255),2,b
 15142                           
 15143                           ;doprnt.c: 664: break;
 15144  0001FE  D03A               	goto	l12861
 15145  000200                     l12851:
 15146                           
 15147                           ; BSR set to: 2
 15148                           ;doprnt.c: 670: flag |= 0x20;
 15149  000200  0102               	movlb	2	; () banked
 15150  000202  8B27               	bsf	printf@flag& (0+255),5,b
 15151  000204                     l1444:
 15152                           
 15153                           ; BSR set to: 2
 15154                           ;doprnt.c: 673: flag |= 0x100;
 15155  000204  0102               	movlb	2	; () banked
 15156  000206  8128               	bsf	(printf@flag+1)& (0+255),0,b
 15157                           
 15158                           ;doprnt.c: 674: break;
 15159  000208  D035               	goto	l12861
 15160  00020A                     l12853:
 15161                           
 15162                           ; BSR set to: 2
 15163                           ;doprnt.c: 680: flag |= 0x20;
 15164  00020A  0102               	movlb	2	; () banked
 15165  00020C  8B27               	bsf	printf@flag& (0+255),5,b
 15166  00020E                     l1446:
 15167                           
 15168                           ; BSR set to: 2
 15169                           ;doprnt.c: 683: flag |= 0x200;
 15170  00020E  0102               	movlb	2	; () banked
 15171  000210  8328               	bsf	(printf@flag+1)& (0+255),1,b
 15172                           
 15173                           ; BSR set to: 2
 15174                           ;doprnt.c: 698: case 'i':
 15175                           ;doprnt.c: 699: break;
 15176                           
 15177                           ; BSR set to: 2
 15178                           
 15179                           ;doprnt.c: 697: case 'd':
 15180                           
 15181                           ;doprnt.c: 684: break;
 15182  000212  D030               	goto	l12861
 15183  000214                     l12855:
 15184                           
 15185                           ; BSR set to: 2
 15186                           ;doprnt.c: 721: flag |= 0x80;
 15187  000214  0102               	movlb	2	; () banked
 15188  000216  8F27               	bsf	printf@flag& (0+255),7,b
 15189                           
 15190                           ;doprnt.c: 723: break;
 15191  000218  D02D               	goto	l12861
 15192                           
 15193                           ; BSR set to: 2
 15194                           ;doprnt.c: 813: continue;
 15195                           
 15196                           ;doprnt.c: 802: default:
 15197  00021A  EFE9  F00C         	goto	l13405
 15198                           
 15199                           ; BSR set to: 2
 15200                           ;doprnt.c: 822: }
 15201  00021E  D02A               	goto	l12861
 15202  000220                     l12859:
 15203  000220  C1CA  FFF6         	movff	printf@f,tblptrl
 15204  000224  C1CB  FFF7         	movff	printf@f+1,tblptrh
 15205  000228  0101               	movlb	1	; () banked
 15206  00022A  4BCA               	infsnz	printf@f& (0+255),f,b
 15207  00022C  2BCB               	incf	(printf@f+1)& (0+255),f,b
 15208  00022E                     	if	0	;tblptru may be non-zero
 15209  00022E                     	endif
 15210  00022E                     	if	0	;tblptru may be non-zero
 15211  00022E                     	endif
 15212  00022E  0008               	tblrd		*
 15213  000230  CFF5 F226          	movff	tablat,printf@c
 15214  000234  0102               	movlb	2	; () banked
 15215  000236  5126               	movf	printf@c& (0+255),w,b
 15216                           
 15217                           ; Switch size 1, requested type "space"
 15218                           ; Number of cases is 9, Range of values is 0 to 120
 15219                           ; switch strategies available:
 15220                           ; Name         Instructions Cycles
 15221                           ; simple_byte           28    15 (average)
 15222                           ;	Chosen strategy is simple_byte
 15223  000238  0A00               	xorlw	0	; case 0
 15224  00023A  B4D8               	btfsc	status,2,c
 15225  00023C  EFFA  F00C         	goto	l1661
 15226  000240  0A45               	xorlw	69	; case 69
 15227  000242  B4D8               	btfsc	status,2,c
 15228  000244  D7DD               	goto	l12851
 15229  000246  0A02               	xorlw	2	; case 71
 15230  000248  B4D8               	btfsc	status,2,c
 15231  00024A  D7DF               	goto	l12853
 15232  00024C  0A23               	xorlw	35	; case 100
 15233  00024E  B4D8               	btfsc	status,2,c
 15234  000250  D011               	goto	l12861
 15235  000252  0A01               	xorlw	1	; case 101
 15236  000254  B4D8               	btfsc	status,2,c
 15237  000256  D7D6               	goto	l1444
 15238  000258  0A03               	xorlw	3	; case 102
 15239  00025A  B4D8               	btfsc	status,2,c
 15240  00025C  D7CE               	goto	l12849
 15241  00025E  0A01               	xorlw	1	; case 103
 15242  000260  B4D8               	btfsc	status,2,c
 15243  000262  D7D5               	goto	l1446
 15244  000264  0A0E               	xorlw	14	; case 105
 15245  000266  B4D8               	btfsc	status,2,c
 15246  000268  D005               	goto	l12861
 15247  00026A  0A11               	xorlw	17	; case 120
 15248  00026C  B4D8               	btfsc	status,2,c
 15249  00026E  D7D2               	goto	l12855
 15250  000270  EFE9  F00C         	goto	l13405
 15251  000274                     l12861:
 15252                           
 15253                           ; BSR set to: 2
 15254                           ;doprnt.c: 825: if(flag & (0x700)) {
 15255  000274  0E07               	movlw	7
 15256  000276  0102               	movlb	2	; () banked
 15257  000278  1528               	andwf	(printf@flag+1)& (0+255),w,b
 15258  00027A  B4D8               	btfsc	status,2,c
 15259  00027C  EF1A  F00A         	goto	l1451
 15260                           
 15261                           ; BSR set to: 2
 15262                           ;doprnt.c: 827: if(flag & 0x1000)
 15263  000280  0102               	movlb	2	; () banked
 15264  000282  A928               	btfss	(printf@flag+1)& (0+255),4,b
 15265  000284  D006               	goto	l12867
 15266                           
 15267                           ; BSR set to: 2
 15268                           ;doprnt.c: 829: prec = 6;
 15269  000286  0E00               	movlw	0
 15270  000288  0102               	movlb	2	; () banked
 15271  00028A  6F25               	movwf	(printf@prec+1)& (0+255),b
 15272  00028C  0E06               	movlw	6
 15273  00028E  6F24               	movwf	printf@prec& (0+255),b
 15274  000290  D000               	goto	l12867
 15275  000292                     l12867:
 15276                           
 15277                           ; BSR set to: 2
 15278                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 15279  000292  C213  FFD9         	movff	printf@ap,fsr2l
 15280  000296  C214  FFDA         	movff	printf@ap+1,fsr2h
 15281  00029A  CFDE F221          	movff	postinc2,printf@fval
 15282  00029E  CFDE F222          	movff	postinc2,printf@fval+1
 15283  0002A2  CFDD F223          	movff	postdec2,printf@fval+2
 15284                           
 15285                           ; BSR set to: 2
 15286  0002A6  0E03               	movlw	3
 15287  0002A8  0102               	movlb	2	; () banked
 15288  0002AA  2713               	addwf	printf@ap& (0+255),f,b
 15289  0002AC  0E00               	movlw	0
 15290  0002AE  2314               	addwfc	(printf@ap+1)& (0+255),f,b
 15291                           
 15292                           ; BSR set to: 2
 15293                           ;doprnt.c: 831: if(fval < 0.0) {
 15294  0002B0  0102               	movlb	2	; () banked
 15295  0002B2  AF23               	btfss	(printf@fval+2)& (0+255),7,b
 15296  0002B4  D012               	goto	l12877
 15297                           
 15298                           ; BSR set to: 2
 15299                           ;doprnt.c: 832: fval = -fval;
 15300  0002B6  C221  F0C3         	movff	printf@fval,___ftneg@f1
 15301  0002BA  C222  F0C4         	movff	printf@fval+1,___ftneg@f1+1
 15302  0002BE  C223  F0C5         	movff	printf@fval+2,___ftneg@f1+2
 15303  0002C2  EC00  F047         	call	___ftneg	;wreg free
 15304  0002C6  C0C3  F221         	movff	?___ftneg,printf@fval
 15305  0002CA  C0C4  F222         	movff	?___ftneg+1,printf@fval+1
 15306  0002CE  C0C5  F223         	movff	?___ftneg+2,printf@fval+2
 15307                           
 15308                           ;doprnt.c: 833: flag |= 0x03;
 15309  0002D2  0E03               	movlw	3
 15310  0002D4  0102               	movlb	2	; () banked
 15311  0002D6  1327               	iorwf	printf@flag& (0+255),f,b
 15312  0002D8  D000               	goto	l12877
 15313  0002DA                     l12877:
 15314                           
 15315                           ; BSR set to: 2
 15316                           ;doprnt.c: 834: }
 15317                           ;doprnt.c: 835: exp = 0;
 15318  0002DA  0E00               	movlw	0
 15319  0002DC  0102               	movlb	2	; () banked
 15320  0002DE  6F1A               	movwf	(printf@exp+1)& (0+255),b
 15321  0002E0  0E00               	movlw	0
 15322  0002E2  6F19               	movwf	printf@exp& (0+255),b
 15323                           
 15324                           ; BSR set to: 2
 15325                           ;doprnt.c: 836: if( fval!=0) {
 15326  0002E4  0102               	movlb	2	; () banked
 15327  0002E6  5121               	movf	printf@fval& (0+255),w,b
 15328  0002E8  0102               	movlb	2	; () banked
 15329  0002EA  1122               	iorwf	(printf@fval+1)& (0+255),w,b
 15330  0002EC  0102               	movlb	2	; () banked
 15331  0002EE  1123               	iorwf	(printf@fval+2)& (0+255),w,b
 15332  0002F0  B4D8               	btfsc	status,2,c
 15333  0002F2  D09D               	goto	l12905
 15334                           
 15335                           ; BSR set to: 2
 15336                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 15337  0002F4  0E82               	movlw	130
 15338  0002F6  0101               	movlb	1	; () banked
 15339  0002F8  6FD8               	movwf	??_printf& (0+255),b
 15340  0002FA  0EFF               	movlw	255
 15341  0002FC  0101               	movlb	1	; () banked
 15342  0002FE  6FD9               	movwf	(??_printf+1)& (0+255),b
 15343  000300  C221  F1DA         	movff	printf@fval,??_printf+2
 15344  000304  C222  F1DB         	movff	printf@fval+1,??_printf+3
 15345  000308  C223  F1DC         	movff	printf@fval+2,??_printf+4
 15346  00030C  C224  F1DD         	movff	printf@fval+3,??_printf+5
 15347  000310  0E10               	movlw	16
 15348  000312  D006               	goto	u14270
 15349  000314                     u14275:
 15350  000314  0101               	movlb	1	; () banked
 15351  000316  90D8               	bcf	status,0,c
 15352  000318  33DD               	rrcf	(??_printf+5)& (0+255),f,b
 15353  00031A  33DC               	rrcf	(??_printf+4)& (0+255),f,b
 15354  00031C  33DB               	rrcf	(??_printf+3)& (0+255),f,b
 15355  00031E  33DA               	rrcf	(??_printf+2)& (0+255),f,b
 15356  000320                     u14270:
 15357  000320  2EE8               	decfsz	wreg,f,c
 15358  000322  D7F8               	goto	u14275
 15359  000324  0101               	movlb	1	; () banked
 15360  000326  51DA               	movf	(??_printf+2)& (0+255),w,b
 15361  000328  0101               	movlb	1	; () banked
 15362  00032A  25D8               	addwf	??_printf& (0+255),w,b
 15363  00032C  0102               	movlb	2	; () banked
 15364  00032E  6F19               	movwf	printf@exp& (0+255),b
 15365  000330  0E00               	movlw	0
 15366  000332  0101               	movlb	1	; () banked
 15367  000334  21D9               	addwfc	(??_printf+1)& (0+255),w,b
 15368  000336  0102               	movlb	2	; () banked
 15369  000338  6F1A               	movwf	(printf@exp+1)& (0+255),b
 15370                           
 15371                           ; BSR set to: 2
 15372                           ;doprnt.c: 838: exp--;
 15373  00033A  0102               	movlb	2	; () banked
 15374  00033C  0719               	decf	printf@exp& (0+255),f,b
 15375  00033E  A0D8               	btfss	status,0,c
 15376  000340  071A               	decf	(printf@exp+1)& (0+255),f,b
 15377                           
 15378                           ; BSR set to: 2
 15379                           ;doprnt.c: 839: exp *= 3;
 15380  000342  C219  F08E         	movff	printf@exp,___wmul@multiplier
 15381  000346  C21A  F08F         	movff	printf@exp+1,___wmul@multiplier+1
 15382  00034A  0E00               	movlw	0
 15383  00034C  0100               	movlb	0	; () banked
 15384  00034E  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15385  000350  0E03               	movlw	3
 15386  000352  6F90               	movwf	___wmul@multiplicand& (0+255),b
 15387  000354  EC7F  F046         	call	___wmul	;wreg free
 15388  000358  C08E  F219         	movff	?___wmul,printf@exp
 15389  00035C  C08F  F21A         	movff	?___wmul+1,printf@exp+1
 15390                           
 15391                           ;doprnt.c: 840: exp /= 10;
 15392  000360  C219  F094         	movff	printf@exp,___awdiv@dividend
 15393  000364  C21A  F095         	movff	printf@exp+1,___awdiv@dividend+1
 15394  000368  0E00               	movlw	0
 15395  00036A  0100               	movlb	0	; () banked
 15396  00036C  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
 15397  00036E  0E0A               	movlw	10
 15398  000370  6F96               	movwf	___awdiv@divisor& (0+255),b
 15399  000372  EC74  F03A         	call	___awdiv	;wreg free
 15400  000376  C094  F219         	movff	?___awdiv,printf@exp
 15401  00037A  C095  F21A         	movff	?___awdiv+1,printf@exp+1
 15402                           
 15403                           ;doprnt.c: 841: if(exp < 0)
 15404  00037E  0102               	movlb	2	; () banked
 15405  000380  AF1A               	btfss	(printf@exp+1)& (0+255),7,b
 15406  000382  D005               	goto	l12893
 15407                           
 15408                           ; BSR set to: 2
 15409                           ;doprnt.c: 842: exp--;
 15410  000384  0102               	movlb	2	; () banked
 15411  000386  0719               	decf	printf@exp& (0+255),f,b
 15412  000388  A0D8               	btfss	status,0,c
 15413  00038A  071A               	decf	(printf@exp+1)& (0+255),f,b
 15414  00038C  D000               	goto	l12893
 15415  00038E                     l12893:
 15416                           
 15417                           ; BSR set to: 2
 15418                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 15419  00038E  0102               	movlb	2	; () banked
 15420  000390  5119               	movf	printf@exp& (0+255),w,b
 15421  000392  0800               	sublw	0
 15422  000394  EC5E  F01B         	call	_scale
 15423  000398  C0C0  F215         	movff	?_scale,printf@tmpval
 15424  00039C  C0C1  F216         	movff	?_scale+1,printf@tmpval+1
 15425  0003A0  C0C2  F217         	movff	?_scale+2,printf@tmpval+2
 15426                           
 15427                           ;doprnt.c: 847: tmpval.integ *= fval;
 15428  0003A4  C215  F09C         	movff	printf@tmpval,___ftmul@f1
 15429  0003A8  C216  F09D         	movff	printf@tmpval+1,___ftmul@f1+1
 15430  0003AC  C217  F09E         	movff	printf@tmpval+2,___ftmul@f1+2
 15431  0003B0  C221  F09F         	movff	printf@fval,___ftmul@f2
 15432  0003B4  C222  F0A0         	movff	printf@fval+1,___ftmul@f2+1
 15433  0003B8  C223  F0A1         	movff	printf@fval+2,___ftmul@f2+2
 15434  0003BC  ECDE  F02E         	call	___ftmul	;wreg free
 15435  0003C0  C09C  F215         	movff	?___ftmul,printf@tmpval
 15436  0003C4  C09D  F216         	movff	?___ftmul+1,printf@tmpval+1
 15437  0003C8  C09E  F217         	movff	?___ftmul+2,printf@tmpval+2
 15438                           
 15439                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 15440  0003CC  C215  F0D6         	movff	printf@tmpval,___ftge@ff1
 15441  0003D0  C216  F0D7         	movff	printf@tmpval+1,___ftge@ff1+1
 15442  0003D4  C217  F0D8         	movff	printf@tmpval+2,___ftge@ff1+2
 15443  0003D8  0E00               	movlw	0
 15444  0003DA  0100               	movlb	0	; () banked
 15445  0003DC  6FD9               	movwf	___ftge@ff2& (0+255),b
 15446  0003DE  0E80               	movlw	128
 15447  0003E0  0100               	movlb	0	; () banked
 15448  0003E2  6FDA               	movwf	(___ftge@ff2+1)& (0+255),b
 15449  0003E4  0E3F               	movlw	63
 15450  0003E6  0100               	movlb	0	; () banked
 15451  0003E8  6FDB               	movwf	(___ftge@ff2+2)& (0+255),b
 15452  0003EA  ECDC  F03A         	call	___ftge	;wreg free
 15453  0003EE  0100               	movlb	0	; () banked
 15454  0003F0  B0D8               	btfsc	status,0,c
 15455  0003F2  D005               	goto	l12901
 15456                           
 15457                           ; BSR set to: 0
 15458                           ;doprnt.c: 849: exp--;
 15459  0003F4  0102               	movlb	2	; () banked
 15460  0003F6  0719               	decf	printf@exp& (0+255),f,b
 15461  0003F8  A0D8               	btfss	status,0,c
 15462  0003FA  071A               	decf	(printf@exp+1)& (0+255),f,b
 15463  0003FC  D018               	goto	l12905
 15464  0003FE                     l12901:
 15465                           
 15466                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 15467  0003FE  C215  F0D6         	movff	printf@tmpval,___ftge@ff1
 15468  000402  C216  F0D7         	movff	printf@tmpval+1,___ftge@ff1+1
 15469  000406  C217  F0D8         	movff	printf@tmpval+2,___ftge@ff1+2
 15470  00040A  0E00               	movlw	0
 15471  00040C  0100               	movlb	0	; () banked
 15472  00040E  6FD9               	movwf	___ftge@ff2& (0+255),b
 15473  000410  0E20               	movlw	32
 15474  000412  0100               	movlb	0	; () banked
 15475  000414  6FDA               	movwf	(___ftge@ff2+1)& (0+255),b
 15476  000416  0E41               	movlw	65
 15477  000418  0100               	movlb	0	; () banked
 15478  00041A  6FDB               	movwf	(___ftge@ff2+2)& (0+255),b
 15479  00041C  ECDC  F03A         	call	___ftge	;wreg free
 15480  000420  0100               	movlb	0	; () banked
 15481  000422  A0D8               	btfss	status,0,c
 15482  000424  D004               	goto	l12905
 15483                           
 15484                           ; BSR set to: 0
 15485                           ;doprnt.c: 851: exp++;
 15486  000426  0102               	movlb	2	; () banked
 15487  000428  4B19               	infsnz	printf@exp& (0+255),f,b
 15488  00042A  2B1A               	incf	(printf@exp+1)& (0+255),f,b
 15489                           
 15490                           ; BSR set to: 2
 15491                           
 15492                           ; BSR set to: 2
 15493  00042C  D000               	goto	l12905
 15494  00042E                     l12905:
 15495                           
 15496                           ;doprnt.c: 852: }
 15497                           ;doprnt.c: 854: if(exp <= 0)
 15498  00042E  0102               	movlb	2	; () banked
 15499  000430  BF1A               	btfsc	(printf@exp+1)& (0+255),7,b
 15500  000432  D007               	goto	l12907
 15501  000434  0102               	movlb	2	; () banked
 15502  000436  511A               	movf	(printf@exp+1)& (0+255),w,b
 15503  000438  E108               	bnz	l1459
 15504  00043A  0102               	movlb	2	; () banked
 15505  00043C  0519               	decf	printf@exp& (0+255),w,b
 15506  00043E  B0D8               	btfsc	status,0,c
 15507  000440  D004               	goto	l1459
 15508  000442                     l12907:
 15509                           
 15510                           ; BSR set to: 2
 15511                           ;doprnt.c: 855: c = 1;
 15512  000442  0E01               	movlw	1
 15513  000444  0102               	movlb	2	; () banked
 15514  000446  6F26               	movwf	printf@c& (0+255),b
 15515  000448  D002               	goto	l1460
 15516  00044A                     l1459:
 15517                           
 15518                           ; BSR set to: 2
 15519                           ;doprnt.c: 856: else
 15520                           ;doprnt.c: 857: c = exp;
 15521  00044A  C219  F226         	movff	printf@exp,printf@c
 15522  00044E                     l1460:
 15523                           
 15524                           ; BSR set to: 2
 15525                           ;doprnt.c: 858: if(
 15526                           ;doprnt.c: 860: flag & 0x100
 15527                           ;doprnt.c: 862: ||
 15528                           ;doprnt.c: 866: flag & 0x200 && (exp < -4 || exp >= (int)prec)
 15529                           ;doprnt.c: 868: ) {
 15530  00044E  0102               	movlb	2	; () banked
 15531  000450  B128               	btfsc	(printf@flag+1)& (0+255),0,b
 15532  000452  D020               	goto	l12915
 15533                           
 15534                           ; BSR set to: 2
 15535  000454  0102               	movlb	2	; () banked
 15536  000456  A328               	btfss	(printf@flag+1)& (0+255),1,b
 15537  000458  D3C6               	goto	l1461
 15538                           
 15539                           ; BSR set to: 2
 15540  00045A  0102               	movlb	2	; () banked
 15541  00045C  AF1A               	btfss	(printf@exp+1)& (0+255),7,b
 15542  00045E  D008               	goto	l12913
 15543  000460  0EFC               	movlw	252
 15544  000462  0102               	movlb	2	; () banked
 15545  000464  5D19               	subwf	printf@exp& (0+255),w,b
 15546  000466  0EFF               	movlw	255
 15547  000468  0102               	movlb	2	; () banked
 15548  00046A  591A               	subwfb	(printf@exp+1)& (0+255),w,b
 15549  00046C  A0D8               	btfss	status,0,c
 15550  00046E  D012               	goto	l12915
 15551  000470                     l12913:
 15552                           
 15553                           ; BSR set to: 2
 15554  000470  0102               	movlb	2	; () banked
 15555  000472  5124               	movf	printf@prec& (0+255),w,b
 15556  000474  0102               	movlb	2	; () banked
 15557  000476  5D19               	subwf	printf@exp& (0+255),w,b
 15558  000478  0102               	movlb	2	; () banked
 15559  00047A  511A               	movf	(printf@exp+1)& (0+255),w,b
 15560  00047C  0A80               	xorlw	128
 15561  00047E  0101               	movlb	1	; () banked
 15562  000480  6FD8               	movwf	??_printf& (0+255),b
 15563  000482  0102               	movlb	2	; () banked
 15564  000484  5125               	movf	(printf@prec+1)& (0+255),w,b
 15565  000486  0A80               	xorlw	128
 15566  000488  0101               	movlb	1	; () banked
 15567  00048A  59D8               	subwfb	??_printf& (0+255),w,b
 15568  00048C  B0D8               	btfsc	status,0,c
 15569  00048E  D002               	goto	l12915
 15570  000490  D3AA               	goto	l1461
 15571                           
 15572                           ; BSR set to: 1
 15573  000492  D000               	goto	l12915
 15574  000494                     l12915:
 15575                           
 15576                           ;doprnt.c: 870: if(prec && flag & 0x200)
 15577  000494  0102               	movlb	2	; () banked
 15578  000496  5124               	movf	printf@prec& (0+255),w,b
 15579  000498  0102               	movlb	2	; () banked
 15580  00049A  1125               	iorwf	(printf@prec+1)& (0+255),w,b
 15581  00049C  B4D8               	btfsc	status,2,c
 15582  00049E  D008               	goto	l12921
 15583                           
 15584                           ; BSR set to: 2
 15585  0004A0  0102               	movlb	2	; () banked
 15586  0004A2  A328               	btfss	(printf@flag+1)& (0+255),1,b
 15587  0004A4  D005               	goto	l12921
 15588                           
 15589                           ; BSR set to: 2
 15590                           ;doprnt.c: 871: prec--;
 15591  0004A6  0102               	movlb	2	; () banked
 15592  0004A8  0724               	decf	printf@prec& (0+255),f,b
 15593  0004AA  A0D8               	btfss	status,0,c
 15594  0004AC  0725               	decf	(printf@prec+1)& (0+255),f,b
 15595  0004AE  D000               	goto	l12921
 15596  0004B0                     l12921:
 15597                           
 15598                           ; BSR set to: 2
 15599                           ;doprnt.c: 873: if((unsigned)prec > (sizeof dpowers/sizeof dpowers[0]) - 2)
 15600  0004B0  0102               	movlb	2	; () banked
 15601  0004B2  5125               	movf	(printf@prec+1)& (0+255),w,b
 15602  0004B4  E105               	bnz	u14380
 15603  0004B6  0E09               	movlw	9
 15604  0004B8  0102               	movlb	2	; () banked
 15605  0004BA  5D24               	subwf	printf@prec& (0+255),w,b
 15606  0004BC  A0D8               	btfss	status,0,c
 15607  0004BE  D004               	goto	l1467
 15608  0004C0                     u14380:
 15609                           
 15610                           ; BSR set to: 2
 15611                           ;doprnt.c: 874: c = (sizeof dpowers/sizeof dpowers[0]) - 2;
 15612  0004C0  0E08               	movlw	8
 15613  0004C2  0102               	movlb	2	; () banked
 15614  0004C4  6F26               	movwf	printf@c& (0+255),b
 15615  0004C6  D003               	goto	l12925
 15616  0004C8                     l1467:
 15617                           
 15618                           ; BSR set to: 2
 15619                           ;doprnt.c: 875: else
 15620                           ;doprnt.c: 876: c = prec;
 15621  0004C8  C224  F226         	movff	printf@prec,printf@c
 15622  0004CC  D000               	goto	l12925
 15623  0004CE                     l12925:
 15624                           
 15625                           ; BSR set to: 2
 15626                           ;doprnt.c: 877: if( fval!=0) {
 15627  0004CE  0102               	movlb	2	; () banked
 15628  0004D0  5121               	movf	printf@fval& (0+255),w,b
 15629  0004D2  0102               	movlb	2	; () banked
 15630  0004D4  1122               	iorwf	(printf@fval+1)& (0+255),w,b
 15631  0004D6  0102               	movlb	2	; () banked
 15632  0004D8  1123               	iorwf	(printf@fval+2)& (0+255),w,b
 15633  0004DA  B4D8               	btfsc	status,2,c
 15634  0004DC  D0FD               	goto	l12945
 15635                           
 15636                           ; BSR set to: 2
 15637                           ;doprnt.c: 878: fval /= scale(exp-c);
 15638  0004DE  C221  F0C7         	movff	printf@fval,___ftdiv@f1
 15639  0004E2  C222  F0C8         	movff	printf@fval+1,___ftdiv@f1+1
 15640  0004E6  C223  F0C9         	movff	printf@fval+2,___ftdiv@f1+2
 15641  0004EA  0102               	movlb	2	; () banked
 15642  0004EC  5126               	movf	printf@c& (0+255),w,b
 15643  0004EE  0800               	sublw	0
 15644  0004F0  0102               	movlb	2	; () banked
 15645  0004F2  2519               	addwf	printf@exp& (0+255),w,b
 15646  0004F4  EC5E  F01B         	call	_scale
 15647  0004F8  C0C0  F0CA         	movff	?_scale,___ftdiv@f2
 15648  0004FC  C0C1  F0CB         	movff	?_scale+1,___ftdiv@f2+1
 15649  000500  C0C2  F0CC         	movff	?_scale+2,___ftdiv@f2+2
 15650  000504  ECD1  F030         	call	___ftdiv	;wreg free
 15651  000508  C0C7  F221         	movff	?___ftdiv,printf@fval
 15652  00050C  C0C8  F222         	movff	?___ftdiv+1,printf@fval+1
 15653  000510  C0C9  F223         	movff	?___ftdiv+2,printf@fval+2
 15654                           
 15655                           ;doprnt.c: 893: if(fval - (double)(unsigned long)fval >= 0.5)
 15656  000514  C221  F0CD         	movff	printf@fval,___ftadd@f2
 15657  000518  C222  F0CE         	movff	printf@fval+1,___ftadd@f2+1
 15658  00051C  C223  F0CF         	movff	printf@fval+2,___ftadd@f2+2
 15659  000520  C221  F0AB         	movff	printf@fval,___fttol@f1
 15660  000524  C222  F0AC         	movff	printf@fval+1,___fttol@f1+1
 15661  000528  C223  F0AD         	movff	printf@fval+2,___fttol@f1+2
 15662  00052C  EC72  F031         	call	___fttol	;wreg free
 15663  000530  C0AB  F0BA         	movff	?___fttol,___lltoft@c
 15664  000534  C0AC  F0BB         	movff	?___fttol+1,___lltoft@c+1
 15665  000538  C0AD  F0BC         	movff	?___fttol+2,___lltoft@c+2
 15666  00053C  C0AE  F0BD         	movff	?___fttol+3,___lltoft@c+3
 15667  000540  EC6B  F041         	call	___lltoft	;wreg free
 15668  000544  C0BA  F0C3         	movff	?___lltoft,___ftneg@f1
 15669  000548  C0BB  F0C4         	movff	?___lltoft+1,___ftneg@f1+1
 15670  00054C  C0BC  F0C5         	movff	?___lltoft+2,___ftneg@f1+2
 15671  000550  EC00  F047         	call	___ftneg	;wreg free
 15672  000554  C0C3  F0CA         	movff	?___ftneg,___ftadd@f1
 15673  000558  C0C4  F0CB         	movff	?___ftneg+1,___ftadd@f1+1
 15674  00055C  C0C5  F0CC         	movff	?___ftneg+2,___ftadd@f1+2
 15675  000560  EC0F  F023         	call	___ftadd	;wreg free
 15676  000564  C0CA  F0D6         	movff	?___ftadd,___ftge@ff1
 15677  000568  C0CB  F0D7         	movff	?___ftadd+1,___ftge@ff1+1
 15678  00056C  C0CC  F0D8         	movff	?___ftadd+2,___ftge@ff1+2
 15679  000570  0E00               	movlw	0
 15680  000572  0100               	movlb	0	; () banked
 15681  000574  6FD9               	movwf	___ftge@ff2& (0+255),b
 15682  000576  0E00               	movlw	0
 15683  000578  0100               	movlb	0	; () banked
 15684  00057A  6FDA               	movwf	(___ftge@ff2+1)& (0+255),b
 15685  00057C  0E3F               	movlw	63
 15686  00057E  0100               	movlb	0	; () banked
 15687  000580  6FDB               	movwf	(___ftge@ff2+2)& (0+255),b
 15688  000582  ECDC  F03A         	call	___ftge	;wreg free
 15689  000586  0100               	movlb	0	; () banked
 15690  000588  A0D8               	btfss	status,0,c
 15691  00058A  D018               	goto	l12933
 15692                           
 15693                           ; BSR set to: 0
 15694                           ;doprnt.c: 894: fval += 0.5;
 15695  00058C  C221  F0CA         	movff	printf@fval,___ftadd@f1
 15696  000590  C222  F0CB         	movff	printf@fval+1,___ftadd@f1+1
 15697  000594  C223  F0CC         	movff	printf@fval+2,___ftadd@f1+2
 15698  000598  0E00               	movlw	0
 15699  00059A  0100               	movlb	0	; () banked
 15700  00059C  6FCD               	movwf	___ftadd@f2& (0+255),b
 15701  00059E  0E00               	movlw	0
 15702  0005A0  0100               	movlb	0	; () banked
 15703  0005A2  6FCE               	movwf	(___ftadd@f2+1)& (0+255),b
 15704  0005A4  0E3F               	movlw	63
 15705  0005A6  0100               	movlb	0	; () banked
 15706  0005A8  6FCF               	movwf	(___ftadd@f2+2)& (0+255),b
 15707  0005AA  EC0F  F023         	call	___ftadd	;wreg free
 15708  0005AE  C0CA  F221         	movff	?___ftadd,printf@fval
 15709  0005B2  C0CB  F222         	movff	?___ftadd+1,printf@fval+1
 15710  0005B6  C0CC  F223         	movff	?___ftadd+2,printf@fval+2
 15711  0005BA  D000               	goto	l12933
 15712  0005BC                     l12933:
 15713                           
 15714                           ;doprnt.c: 895: if((unsigned long)fval >= dpowers[c+1]) {
 15715  0005BC  C226  F1D8         	movff	printf@c,??_printf
 15716  0005C0  0101               	movlb	1	; () banked
 15717  0005C2  6BD9               	clrf	(??_printf+1)& (0+255),b
 15718  0005C4  BFD8               	btfsc	??_printf& (0+255),7,b
 15719  0005C6  07D9               	decf	(??_printf+1)& (0+255),f,b
 15720  0005C8  0101               	movlb	1	; () banked
 15721  0005CA  90D8               	bcf	status,0,c
 15722  0005CC  37D8               	rlcf	??_printf& (0+255),f,b
 15723  0005CE  37D9               	rlcf	(??_printf+1)& (0+255),f,b
 15724  0005D0  0101               	movlb	1	; () banked
 15725  0005D2  90D8               	bcf	status,0,c
 15726  0005D4  37D8               	rlcf	??_printf& (0+255),f,b
 15727  0005D6  37D9               	rlcf	(??_printf+1)& (0+255),f,b
 15728  0005D8  0E04               	movlw	4
 15729  0005DA  0101               	movlb	1	; () banked
 15730  0005DC  27D8               	addwf	??_printf& (0+255),f,b
 15731  0005DE  0E00               	movlw	0
 15732  0005E0  23D9               	addwfc	(??_printf+1)& (0+255),f,b
 15733  0005E2  0E0E               	movlw	low _dpowers
 15734  0005E4  0101               	movlb	1	; () banked
 15735  0005E6  25D8               	addwf	??_printf& (0+255),w,b
 15736  0005E8  6EF6               	movwf	tblptrl,c
 15737  0005EA  0EFE               	movlw	high _dpowers
 15738  0005EC  21D9               	addwfc	(??_printf+1)& (0+255),w,b
 15739  0005EE  6EF7               	movwf	tblptrh,c
 15740  0005F0                     	if	0	;There are less than 3 active tblptr bytes
 15741  0005F0                     	endif
 15742  0005F0  C221  F0AB         	movff	printf@fval,___fttol@f1
 15743  0005F4  C222  F0AC         	movff	printf@fval+1,___fttol@f1+1
 15744  0005F8  C223  F0AD         	movff	printf@fval+2,___fttol@f1+2
 15745  0005FC  EC72  F031         	call	___fttol	;wreg free
 15746  000600  0009               	tblrd		*+
 15747  000602  50F5               	movf	tablat,w,c
 15748  000604  0100               	movlb	0	; () banked
 15749  000606  5DAB               	subwf	?___fttol& (0+255),w,b
 15750  000608  0009               	tblrd		*+
 15751  00060A  50F5               	movf	tablat,w,c
 15752  00060C  0100               	movlb	0	; () banked
 15753  00060E  59AC               	subwfb	(?___fttol+1)& (0+255),w,b
 15754  000610  0009               	tblrd		*+
 15755  000612  50F5               	movf	tablat,w,c
 15756  000614  0100               	movlb	0	; () banked
 15757  000616  59AD               	subwfb	(?___fttol+2)& (0+255),w,b
 15758  000618  0009               	tblrd		*+
 15759  00061A  50F5               	movf	tablat,w,c
 15760  00061C  0100               	movlb	0	; () banked
 15761  00061E  59AE               	subwfb	(?___fttol+3)& (0+255),w,b
 15762  000620  A0D8               	btfss	status,0,c
 15763  000622  D01B               	goto	l12939
 15764                           
 15765                           ; BSR set to: 0
 15766                           ;doprnt.c: 896: fval *= 1e-1;
 15767  000624  C221  F09C         	movff	printf@fval,___ftmul@f1
 15768  000628  C222  F09D         	movff	printf@fval+1,___ftmul@f1+1
 15769  00062C  C223  F09E         	movff	printf@fval+2,___ftmul@f1+2
 15770  000630  0ECD               	movlw	205
 15771  000632  0100               	movlb	0	; () banked
 15772  000634  6F9F               	movwf	___ftmul@f2& (0+255),b
 15773  000636  0ECC               	movlw	204
 15774  000638  0100               	movlb	0	; () banked
 15775  00063A  6FA0               	movwf	(___ftmul@f2+1)& (0+255),b
 15776  00063C  0E3D               	movlw	61
 15777  00063E  0100               	movlb	0	; () banked
 15778  000640  6FA1               	movwf	(___ftmul@f2+2)& (0+255),b
 15779  000642  ECDE  F02E         	call	___ftmul	;wreg free
 15780  000646  C09C  F221         	movff	?___ftmul,printf@fval
 15781  00064A  C09D  F222         	movff	?___ftmul+1,printf@fval+1
 15782  00064E  C09E  F223         	movff	?___ftmul+2,printf@fval+2
 15783                           
 15784                           ;doprnt.c: 897: exp++;
 15785  000652  0102               	movlb	2	; () banked
 15786  000654  4B19               	infsnz	printf@exp& (0+255),f,b
 15787  000656  2B1A               	incf	(printf@exp+1)& (0+255),f,b
 15788                           
 15789                           ;doprnt.c: 898: } else if((unsigned long)fval < dpowers[c]) {
 15790  000658  D03F               	goto	l12945
 15791  00065A                     l12939:
 15792  00065A  0102               	movlb	2	; () banked
 15793  00065C  5126               	movf	printf@c& (0+255),w,b
 15794  00065E  0D04               	mullw	4
 15795  000660  0E0E               	movlw	low _dpowers
 15796  000662  24F3               	addwf	prodl,w,c
 15797  000664  6EF6               	movwf	tblptrl,c
 15798  000666  0EFE               	movlw	high _dpowers
 15799  000668  20F4               	addwfc	prodh,w,c
 15800  00066A  6EF7               	movwf	tblptrh,c
 15801  00066C                     	if	0	;There are less than 3 active tblptr bytes
 15802  00066C                     	endif
 15803  00066C  C221  F0AB         	movff	printf@fval,___fttol@f1
 15804  000670  C222  F0AC         	movff	printf@fval+1,___fttol@f1+1
 15805  000674  C223  F0AD         	movff	printf@fval+2,___fttol@f1+2
 15806  000678  EC72  F031         	call	___fttol	;wreg free
 15807  00067C  0009               	tblrd		*+
 15808  00067E  50F5               	movf	tablat,w,c
 15809  000680  0100               	movlb	0	; () banked
 15810  000682  5DAB               	subwf	?___fttol& (0+255),w,b
 15811  000684  0009               	tblrd		*+
 15812  000686  50F5               	movf	tablat,w,c
 15813  000688  0100               	movlb	0	; () banked
 15814  00068A  59AC               	subwfb	(?___fttol+1)& (0+255),w,b
 15815  00068C  0009               	tblrd		*+
 15816  00068E  50F5               	movf	tablat,w,c
 15817  000690  0100               	movlb	0	; () banked
 15818  000692  59AD               	subwfb	(?___fttol+2)& (0+255),w,b
 15819  000694  0009               	tblrd		*+
 15820  000696  50F5               	movf	tablat,w,c
 15821  000698  0100               	movlb	0	; () banked
 15822  00069A  59AE               	subwfb	(?___fttol+3)& (0+255),w,b
 15823  00069C  B0D8               	btfsc	status,0,c
 15824  00069E  D01C               	goto	l12945
 15825                           
 15826                           ; BSR set to: 0
 15827                           ;doprnt.c: 899: fval *= 10.0;
 15828  0006A0  C221  F09C         	movff	printf@fval,___ftmul@f1
 15829  0006A4  C222  F09D         	movff	printf@fval+1,___ftmul@f1+1
 15830  0006A8  C223  F09E         	movff	printf@fval+2,___ftmul@f1+2
 15831  0006AC  0E00               	movlw	0
 15832  0006AE  0100               	movlb	0	; () banked
 15833  0006B0  6F9F               	movwf	___ftmul@f2& (0+255),b
 15834  0006B2  0E20               	movlw	32
 15835  0006B4  0100               	movlb	0	; () banked
 15836  0006B6  6FA0               	movwf	(___ftmul@f2+1)& (0+255),b
 15837  0006B8  0E41               	movlw	65
 15838  0006BA  0100               	movlb	0	; () banked
 15839  0006BC  6FA1               	movwf	(___ftmul@f2+2)& (0+255),b
 15840  0006BE  ECDE  F02E         	call	___ftmul	;wreg free
 15841  0006C2  C09C  F221         	movff	?___ftmul,printf@fval
 15842  0006C6  C09D  F222         	movff	?___ftmul+1,printf@fval+1
 15843  0006CA  C09E  F223         	movff	?___ftmul+2,printf@fval+2
 15844                           
 15845                           ;doprnt.c: 900: exp--;
 15846  0006CE  0102               	movlb	2	; () banked
 15847  0006D0  0719               	decf	printf@exp& (0+255),f,b
 15848  0006D2  A0D8               	btfss	status,0,c
 15849  0006D4  071A               	decf	(printf@exp+1)& (0+255),f,b
 15850                           
 15851                           ; BSR set to: 2
 15852                           
 15853                           ; BSR set to: 2
 15854  0006D6  D000               	goto	l12945
 15855  0006D8                     l12945:
 15856                           
 15857                           ;doprnt.c: 901: }
 15858                           ;doprnt.c: 903: }
 15859                           ;doprnt.c: 905: if(flag & 0x200 && !(flag & 0x800)) {
 15860  0006D8  0102               	movlb	2	; () banked
 15861  0006DA  A328               	btfss	(printf@flag+1)& (0+255),1,b
 15862  0006DC  D09D               	goto	l12969
 15863                           
 15864                           ; BSR set to: 2
 15865  0006DE  0102               	movlb	2	; () banked
 15866  0006E0  B728               	btfsc	(printf@flag+1)& (0+255),3,b
 15867  0006E2  D09A               	goto	l12969
 15868                           
 15869                           ; BSR set to: 2
 15870                           ;doprnt.c: 906: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])))
 15871  0006E4  0102               	movlb	2	; () banked
 15872  0006E6  BF25               	btfsc	(printf@prec+1)& (0+255),7,b
 15873  0006E8  D00E               	goto	l12953
 15874  0006EA  0102               	movlb	2	; () banked
 15875  0006EC  5125               	movf	(printf@prec+1)& (0+255),w,b
 15876  0006EE  E105               	bnz	u14450
 15877  0006F0  0E0B               	movlw	11
 15878  0006F2  0102               	movlb	2	; () banked
 15879  0006F4  5D24               	subwf	printf@prec& (0+255),w,b
 15880  0006F6  A0D8               	btfss	status,0,c
 15881  0006F8  D006               	goto	l12953
 15882  0006FA                     u14450:
 15883                           
 15884                           ; BSR set to: 2
 15885                           ;doprnt.c: 907: prec = (sizeof dpowers/sizeof dpowers[0]);
 15886  0006FA  0E00               	movlw	0
 15887  0006FC  0102               	movlb	2	; () banked
 15888  0006FE  6F25               	movwf	(printf@prec+1)& (0+255),b
 15889  000700  0E0A               	movlw	10
 15890  000702  6F24               	movwf	printf@prec& (0+255),b
 15891  000704  D000               	goto	l12953
 15892  000706                     l12953:
 15893                           
 15894                           ; BSR set to: 2
 15895                           ;doprnt.c: 915: val = (unsigned long)fval;
 15896  000706  C221  F0AB         	movff	printf@fval,___fttol@f1
 15897  00070A  C222  F0AC         	movff	printf@fval+1,___fttol@f1+1
 15898  00070E  C223  F0AD         	movff	printf@fval+2,___fttol@f1+2
 15899  000712  EC72  F031         	call	___fttol	;wreg free
 15900  000716  C0AB  F21D         	movff	?___fttol,printf@val
 15901  00071A  C0AC  F21E         	movff	?___fttol+1,printf@val+1
 15902  00071E  C0AD  F21F         	movff	?___fttol+2,printf@val+2
 15903  000722  C0AE  F220         	movff	?___fttol+3,printf@val+3
 15904                           
 15905                           ;doprnt.c: 916: while(val && val % 10 == 0) {
 15906  000726  D020               	goto	l12959
 15907  000728                     l12955:
 15908                           
 15909                           ;doprnt.c: 917: prec--;
 15910  000728  0102               	movlb	2	; () banked
 15911  00072A  0724               	decf	printf@prec& (0+255),f,b
 15912  00072C  A0D8               	btfss	status,0,c
 15913  00072E  0725               	decf	(printf@prec+1)& (0+255),f,b
 15914                           
 15915                           ; BSR set to: 2
 15916                           ;doprnt.c: 918: val /= 10;
 15917  000730  C21D  F08E         	movff	printf@val,___lldiv@dividend
 15918  000734  C21E  F08F         	movff	printf@val+1,___lldiv@dividend+1
 15919  000738  C21F  F090         	movff	printf@val+2,___lldiv@dividend+2
 15920  00073C  C220  F091         	movff	printf@val+3,___lldiv@dividend+3
 15921  000740  0E0A               	movlw	10
 15922  000742  0100               	movlb	0	; () banked
 15923  000744  6F92               	movwf	___lldiv@divisor& (0+255),b
 15924  000746  0E00               	movlw	0
 15925  000748  6F93               	movwf	(___lldiv@divisor+1)& (0+255),b
 15926  00074A  0E00               	movlw	0
 15927  00074C  6F94               	movwf	(___lldiv@divisor+2)& (0+255),b
 15928  00074E  0E00               	movlw	0
 15929  000750  6F95               	movwf	(___lldiv@divisor+3)& (0+255),b
 15930  000752  EC43  F03B         	call	___lldiv	;wreg free
 15931  000756  C08E  F21D         	movff	?___lldiv,printf@val
 15932  00075A  C08F  F21E         	movff	?___lldiv+1,printf@val+1
 15933  00075E  C090  F21F         	movff	?___lldiv+2,printf@val+2
 15934  000762  C091  F220         	movff	?___lldiv+3,printf@val+3
 15935  000766  D000               	goto	l12959
 15936  000768                     l12959:
 15937  000768  0102               	movlb	2	; () banked
 15938  00076A  511D               	movf	printf@val& (0+255),w,b
 15939  00076C  0102               	movlb	2	; () banked
 15940  00076E  111E               	iorwf	(printf@val+1)& (0+255),w,b
 15941  000770  0102               	movlb	2	; () banked
 15942  000772  111F               	iorwf	(printf@val+2)& (0+255),w,b
 15943  000774  0102               	movlb	2	; () banked
 15944  000776  1120               	iorwf	(printf@val+3)& (0+255),w,b
 15945  000778  B4D8               	btfsc	status,2,c
 15946  00077A  D01F               	goto	l12963
 15947                           
 15948                           ; BSR set to: 2
 15949  00077C  C21D  F09B         	movff	printf@val,___llmod@dividend
 15950  000780  C21E  F09C         	movff	printf@val+1,___llmod@dividend+1
 15951  000784  C21F  F09D         	movff	printf@val+2,___llmod@dividend+2
 15952  000788  C220  F09E         	movff	printf@val+3,___llmod@dividend+3
 15953  00078C  0E0A               	movlw	10
 15954  00078E  0100               	movlb	0	; () banked
 15955  000790  6F9F               	movwf	___llmod@divisor& (0+255),b
 15956  000792  0E00               	movlw	0
 15957  000794  6FA0               	movwf	(___llmod@divisor+1)& (0+255),b
 15958  000796  0E00               	movlw	0
 15959  000798  6FA1               	movwf	(___llmod@divisor+2)& (0+255),b
 15960  00079A  0E00               	movlw	0
 15961  00079C  6FA2               	movwf	(___llmod@divisor+3)& (0+255),b
 15962  00079E  EC8E  F03E         	call	___llmod	;wreg free
 15963  0007A2  0100               	movlb	0	; () banked
 15964  0007A4  519B               	movf	?___llmod& (0+255),w,b
 15965  0007A6  0100               	movlb	0	; () banked
 15966  0007A8  119C               	iorwf	(?___llmod+1)& (0+255),w,b
 15967  0007AA  0100               	movlb	0	; () banked
 15968  0007AC  119D               	iorwf	(?___llmod+2)& (0+255),w,b
 15969  0007AE  0100               	movlb	0	; () banked
 15970  0007B0  119E               	iorwf	(?___llmod+3)& (0+255),w,b
 15971  0007B2  A4D8               	btfss	status,2,c
 15972  0007B4  D002               	goto	l12963
 15973  0007B6  D7B8               	goto	l12955
 15974                           
 15975                           ; BSR set to: 0
 15976  0007B8  D000               	goto	l12963
 15977  0007BA                     l12963:
 15978                           
 15979                           ;doprnt.c: 919: }
 15980                           ;doprnt.c: 921: if(prec < c) {
 15981  0007BA  0102               	movlb	2	; () banked
 15982  0007BC  5125               	movf	(printf@prec+1)& (0+255),w,b
 15983  0007BE  0A80               	xorlw	128
 15984  0007C0  0101               	movlb	1	; () banked
 15985  0007C2  6FD8               	movwf	??_printf& (0+255),b
 15986  0007C4  0102               	movlb	2	; () banked
 15987  0007C6  5126               	movf	printf@c& (0+255),w,b
 15988  0007C8  0102               	movlb	2	; () banked
 15989  0007CA  5D24               	subwf	printf@prec& (0+255),w,b
 15990  0007CC  0E80               	movlw	128
 15991  0007CE  0102               	movlb	2	; () banked
 15992  0007D0  BF26               	btfsc	printf@c& (0+255),7,b
 15993  0007D2  0E7F               	movlw	127
 15994  0007D4  0101               	movlb	1	; () banked
 15995  0007D6  59D8               	subwfb	??_printf& (0+255),w,b
 15996  0007D8  B0D8               	btfsc	status,0,c
 15997  0007DA  D01E               	goto	l12969
 15998                           
 15999                           ; BSR set to: 1
 16000                           ;doprnt.c: 922: fval /= scale(c-prec);
 16001  0007DC  C221  F0C7         	movff	printf@fval,___ftdiv@f1
 16002  0007E0  C222  F0C8         	movff	printf@fval+1,___ftdiv@f1+1
 16003  0007E4  C223  F0C9         	movff	printf@fval+2,___ftdiv@f1+2
 16004  0007E8  0102               	movlb	2	; () banked
 16005  0007EA  5124               	movf	printf@prec& (0+255),w,b
 16006  0007EC  0800               	sublw	0
 16007  0007EE  0102               	movlb	2	; () banked
 16008  0007F0  2526               	addwf	printf@c& (0+255),w,b
 16009  0007F2  EC5E  F01B         	call	_scale
 16010  0007F6  C0C0  F0CA         	movff	?_scale,___ftdiv@f2
 16011  0007FA  C0C1  F0CB         	movff	?_scale+1,___ftdiv@f2+1
 16012  0007FE  C0C2  F0CC         	movff	?_scale+2,___ftdiv@f2+2
 16013  000802  ECD1  F030         	call	___ftdiv	;wreg free
 16014  000806  C0C7  F221         	movff	?___ftdiv,printf@fval
 16015  00080A  C0C8  F222         	movff	?___ftdiv+1,printf@fval+1
 16016  00080E  C0C9  F223         	movff	?___ftdiv+2,printf@fval+2
 16017                           
 16018                           ;doprnt.c: 923: c = prec;
 16019  000812  C224  F226         	movff	printf@prec,printf@c
 16020  000816  D000               	goto	l12969
 16021  000818                     l12969:
 16022                           
 16023                           ;doprnt.c: 924: }
 16024                           ;doprnt.c: 926: }
 16025                           ;doprnt.c: 929: width -= prec + 5;
 16026  000818  0E05               	movlw	5
 16027  00081A  0102               	movlb	2	; () banked
 16028  00081C  2524               	addwf	printf@prec& (0+255),w,b
 16029  00081E  0101               	movlb	1	; () banked
 16030  000820  6FD8               	movwf	??_printf& (0+255),b
 16031  000822  0E00               	movlw	0
 16032  000824  0102               	movlb	2	; () banked
 16033  000826  2125               	addwfc	(printf@prec+1)& (0+255),w,b
 16034  000828  0101               	movlb	1	; () banked
 16035  00082A  6FD9               	movwf	(??_printf+1)& (0+255),b
 16036  00082C  0101               	movlb	1	; () banked
 16037  00082E  51D8               	movf	??_printf& (0+255),w,b
 16038  000830  0102               	movlb	2	; () banked
 16039  000832  5F1B               	subwf	printf@width& (0+255),f,b
 16040  000834  0101               	movlb	1	; () banked
 16041  000836  51D9               	movf	(??_printf+1)& (0+255),w,b
 16042  000838  0102               	movlb	2	; () banked
 16043  00083A  5B1C               	subwfb	(printf@width+1)& (0+255),f,b
 16044                           
 16045                           ; BSR set to: 2
 16046                           ;doprnt.c: 931: if(prec || flag & 0x800)
 16047  00083C  0102               	movlb	2	; () banked
 16048  00083E  5124               	movf	printf@prec& (0+255),w,b
 16049  000840  0102               	movlb	2	; () banked
 16050  000842  1125               	iorwf	(printf@prec+1)& (0+255),w,b
 16051  000844  A4D8               	btfss	status,2,c
 16052  000846  D003               	goto	l12975
 16053                           
 16054                           ; BSR set to: 2
 16055  000848  0102               	movlb	2	; () banked
 16056  00084A  A728               	btfss	(printf@flag+1)& (0+255),3,b
 16057  00084C  D005               	goto	l12977
 16058  00084E                     l12975:
 16059                           
 16060                           ; BSR set to: 2
 16061                           ;doprnt.c: 932: width--;
 16062  00084E  0102               	movlb	2	; () banked
 16063  000850  071B               	decf	printf@width& (0+255),f,b
 16064  000852  A0D8               	btfss	status,0,c
 16065  000854  071C               	decf	(printf@width+1)& (0+255),f,b
 16066  000856  D000               	goto	l12977
 16067  000858                     l12977:
 16068                           
 16069                           ; BSR set to: 2
 16070                           ;doprnt.c: 934: if(flag & 0x03)
 16071  000858  0E03               	movlw	3
 16072  00085A  0102               	movlb	2	; () banked
 16073  00085C  1527               	andwf	printf@flag& (0+255),w,b
 16074  00085E  0101               	movlb	1	; () banked
 16075  000860  6FD8               	movwf	??_printf& (0+255),b
 16076  000862  0E00               	movlw	0
 16077  000864  0102               	movlb	2	; () banked
 16078  000866  1528               	andwf	(printf@flag+1)& (0+255),w,b
 16079  000868  0101               	movlb	1	; () banked
 16080  00086A  6FD9               	movwf	(??_printf+1)& (0+255),b
 16081  00086C  0101               	movlb	1	; () banked
 16082  00086E  51D8               	movf	??_printf& (0+255),w,b
 16083  000870  0101               	movlb	1	; () banked
 16084  000872  11D9               	iorwf	(??_printf+1)& (0+255),w,b
 16085  000874  B4D8               	btfsc	status,2,c
 16086  000876  D005               	goto	l12981
 16087                           
 16088                           ; BSR set to: 1
 16089                           ;doprnt.c: 935: width--;
 16090  000878  0102               	movlb	2	; () banked
 16091  00087A  071B               	decf	printf@width& (0+255),f,b
 16092  00087C  A0D8               	btfss	status,0,c
 16093  00087E  071C               	decf	(printf@width+1)& (0+255),f,b
 16094  000880  D000               	goto	l12981
 16095  000882                     l12981:
 16096                           
 16097                           ;doprnt.c: 946: if(flag & 0x04) {
 16098  000882  0102               	movlb	2	; () banked
 16099  000884  A527               	btfss	printf@flag& (0+255),2,b
 16100  000886  D031               	goto	l1486
 16101                           
 16102                           ; BSR set to: 2
 16103                           ;doprnt.c: 948: if(flag & 0x02)
 16104  000888  0102               	movlb	2	; () banked
 16105  00088A  A327               	btfss	printf@flag& (0+255),1,b
 16106  00088C  D013               	goto	l1487
 16107                           
 16108                           ; BSR set to: 2
 16109                           ;doprnt.c: 949: (putch(flag & 0x01 ? '-' : '+') );
 16110  00088E  0102               	movlb	2	; () banked
 16111  000890  B127               	btfsc	printf@flag& (0+255),0,b
 16112  000892  D005               	goto	l12989
 16113                           
 16114                           ; BSR set to: 2
 16115  000894  0E00               	movlw	0
 16116  000896  0102               	movlb	2	; () banked
 16117  000898  6F05               	movwf	(_printf$2205+1)& (0+255),b
 16118  00089A  0E2B               	movlw	43
 16119  00089C  D004               	goto	L12
 16120  00089E                     l12989:
 16121                           
 16122                           ; BSR set to: 2
 16123  00089E  0E00               	movlw	0
 16124  0008A0  0102               	movlb	2	; () banked
 16125  0008A2  6F05               	movwf	(_printf$2205+1)& (0+255),b
 16126  0008A4  0E2D               	movlw	45
 16127  0008A6                     L12:
 16128  0008A6  6F04               	movwf	_printf$2205& (0+255),b
 16129  0008A8  D000               	goto	l12991
 16130  0008AA                     l12991:
 16131                           
 16132                           ; BSR set to: 2
 16133  0008AA  0102               	movlb	2	; () banked
 16134  0008AC  5104               	movf	_printf$2205& (0+255),w,b
 16135  0008AE  EC3A  F049         	call	_putch
 16136  0008B2  D00F               	goto	l12999
 16137  0008B4                     l1487:
 16138                           
 16139                           ; BSR set to: 2
 16140                           ;doprnt.c: 950: else if(flag & 0x01)
 16141  0008B4  0102               	movlb	2	; () banked
 16142  0008B6  A127               	btfss	printf@flag& (0+255),0,b
 16143  0008B8  D00C               	goto	l12999
 16144                           
 16145                           ; BSR set to: 2
 16146                           ;doprnt.c: 951: (putch(' ') );
 16147  0008BA  0E20               	movlw	32
 16148  0008BC  EC3A  F049         	call	_putch
 16149                           
 16150                           ;doprnt.c: 953: while(width > 0) {
 16151  0008C0  D008               	goto	l12999
 16152  0008C2                     l12995:
 16153                           
 16154                           ;doprnt.c: 954: (putch('0') );
 16155  0008C2  0E30               	movlw	48
 16156  0008C4  EC3A  F049         	call	_putch
 16157                           
 16158                           ;doprnt.c: 955: width--;
 16159  0008C8  0102               	movlb	2	; () banked
 16160  0008CA  071B               	decf	printf@width& (0+255),f,b
 16161  0008CC  A0D8               	btfss	status,0,c
 16162  0008CE  071C               	decf	(printf@width+1)& (0+255),f,b
 16163  0008D0  D000               	goto	l12999
 16164  0008D2                     l12999:
 16165  0008D2  0102               	movlb	2	; () banked
 16166  0008D4  BF1C               	btfsc	(printf@width+1)& (0+255),7,b
 16167  0008D6  D03D               	goto	l13019
 16168  0008D8  0102               	movlb	2	; () banked
 16169  0008DA  511C               	movf	(printf@width+1)& (0+255),w,b
 16170  0008DC  E1F2               	bnz	l12995
 16171  0008DE  0102               	movlb	2	; () banked
 16172  0008E0  051B               	decf	printf@width& (0+255),w,b
 16173  0008E2  A0D8               	btfss	status,0,c
 16174  0008E4  D036               	goto	l13019
 16175  0008E6  D7ED               	goto	l12995
 16176                           
 16177                           ; BSR set to: 2
 16178                           ;doprnt.c: 956: }
 16179                           ;doprnt.c: 957: } else
 16180  0008E8  D034               	goto	l13019
 16181  0008EA                     l1486:
 16182                           
 16183                           ; BSR set to: 2
 16184                           ;doprnt.c: 959: {
 16185                           ;doprnt.c: 962: if(!(flag & 0x08))
 16186  0008EA  0102               	movlb	2	; () banked
 16187  0008EC  A727               	btfss	printf@flag& (0+255),3,b
 16188  0008EE  D00A               	goto	l13007
 16189  0008F0  D013               	goto	l1498
 16190                           
 16191                           ; BSR set to: 2
 16192                           ;doprnt.c: 964: while(width > 0) {
 16193  0008F2  D008               	goto	l13007
 16194  0008F4                     l13003:
 16195                           
 16196                           ; BSR set to: 2
 16197                           ;doprnt.c: 965: (putch(' ') );
 16198  0008F4  0E20               	movlw	32
 16199  0008F6  EC3A  F049         	call	_putch
 16200                           
 16201                           ;doprnt.c: 966: width--;
 16202  0008FA  0102               	movlb	2	; () banked
 16203  0008FC  071B               	decf	printf@width& (0+255),f,b
 16204  0008FE  A0D8               	btfss	status,0,c
 16205  000900  071C               	decf	(printf@width+1)& (0+255),f,b
 16206  000902  D000               	goto	l13007
 16207  000904                     l13007:
 16208                           
 16209                           ; BSR set to: 2
 16210  000904  0102               	movlb	2	; () banked
 16211  000906  BF1C               	btfsc	(printf@width+1)& (0+255),7,b
 16212  000908  D007               	goto	l1498
 16213  00090A  0102               	movlb	2	; () banked
 16214  00090C  511C               	movf	(printf@width+1)& (0+255),w,b
 16215  00090E  E1F2               	bnz	l13003
 16216  000910  0102               	movlb	2	; () banked
 16217  000912  051B               	decf	printf@width& (0+255),w,b
 16218  000914  B0D8               	btfsc	status,0,c
 16219  000916  D7EE               	goto	l13003
 16220  000918                     l1498:
 16221                           
 16222                           ; BSR set to: 2
 16223                           ;doprnt.c: 967: }
 16224                           ;doprnt.c: 970: if(flag & 0x02)
 16225  000918  0102               	movlb	2	; () banked
 16226  00091A  A327               	btfss	printf@flag& (0+255),1,b
 16227  00091C  D013               	goto	l1502
 16228                           
 16229                           ; BSR set to: 2
 16230                           ;doprnt.c: 971: (putch(flag & 0x01 ? '-' : '+') );
 16231  00091E  0102               	movlb	2	; () banked
 16232  000920  B127               	btfsc	printf@flag& (0+255),0,b
 16233  000922  D005               	goto	l13013
 16234                           
 16235                           ; BSR set to: 2
 16236  000924  0E00               	movlw	0
 16237  000926  0102               	movlb	2	; () banked
 16238  000928  6F07               	movwf	(_printf$2206+1)& (0+255),b
 16239  00092A  0E2B               	movlw	43
 16240  00092C  D004               	goto	L13
 16241  00092E                     l13013:
 16242                           
 16243                           ; BSR set to: 2
 16244  00092E  0E00               	movlw	0
 16245  000930  0102               	movlb	2	; () banked
 16246  000932  6F07               	movwf	(_printf$2206+1)& (0+255),b
 16247  000934  0E2D               	movlw	45
 16248  000936                     L13:
 16249  000936  6F06               	movwf	_printf$2206& (0+255),b
 16250  000938  D000               	goto	l13015
 16251  00093A                     l13015:
 16252                           
 16253                           ; BSR set to: 2
 16254  00093A  0102               	movlb	2	; () banked
 16255  00093C  5106               	movf	_printf$2206& (0+255),w,b
 16256  00093E  EC3A  F049         	call	_putch
 16257  000942  D007               	goto	l13019
 16258  000944                     l1502:
 16259                           
 16260                           ; BSR set to: 2
 16261                           ;doprnt.c: 977: else if(flag & 0x01)
 16262  000944  0102               	movlb	2	; () banked
 16263  000946  A127               	btfss	printf@flag& (0+255),0,b
 16264  000948  D004               	goto	l13019
 16265                           
 16266                           ; BSR set to: 2
 16267                           ;doprnt.c: 978: (putch(' ') );
 16268  00094A  0E20               	movlw	32
 16269  00094C  EC3A  F049         	call	_putch
 16270  000950  D000               	goto	l13019
 16271  000952                     l13019:
 16272                           
 16273                           ;doprnt.c: 980: }
 16274                           ;doprnt.c: 985: val = (unsigned long)fval;
 16275  000952  C221  F0AB         	movff	printf@fval,___fttol@f1
 16276  000956  C222  F0AC         	movff	printf@fval+1,___fttol@f1+1
 16277  00095A  C223  F0AD         	movff	printf@fval+2,___fttol@f1+2
 16278  00095E  EC72  F031         	call	___fttol	;wreg free
 16279  000962  C0AB  F21D         	movff	?___fttol,printf@val
 16280  000966  C0AC  F21E         	movff	?___fttol+1,printf@val+1
 16281  00096A  C0AD  F21F         	movff	?___fttol+2,printf@val+2
 16282  00096E  C0AE  F220         	movff	?___fttol+3,printf@val+3
 16283                           
 16284                           ;doprnt.c: 986: (putch(val/dpowers[c] + '0') );
 16285  000972  C21D  F08E         	movff	printf@val,___lldiv@dividend
 16286  000976  C21E  F08F         	movff	printf@val+1,___lldiv@dividend+1
 16287  00097A  C21F  F090         	movff	printf@val+2,___lldiv@dividend+2
 16288  00097E  C220  F091         	movff	printf@val+3,___lldiv@dividend+3
 16289  000982  0102               	movlb	2	; () banked
 16290  000984  5126               	movf	printf@c& (0+255),w,b
 16291  000986  0D04               	mullw	4
 16292  000988  0E0E               	movlw	low _dpowers
 16293  00098A  24F3               	addwf	prodl,w,c
 16294  00098C  6EF6               	movwf	tblptrl,c
 16295  00098E  0EFE               	movlw	high _dpowers
 16296  000990  20F4               	addwfc	prodh,w,c
 16297  000992  6EF7               	movwf	tblptrh,c
 16298  000994                     	if	0	;There are less than 3 active tblptr bytes
 16299  000994                     	endif
 16300  000994  0009               	tblrd		*+
 16301  000996  CFF5 F092          	movff	tablat,___lldiv@divisor
 16302  00099A  0009               	tblrd		*+
 16303  00099C  CFF5 F093          	movff	tablat,___lldiv@divisor+1
 16304  0009A0  0009               	tblrd		*+
 16305  0009A2  CFF5 F094          	movff	tablat,___lldiv@divisor+2
 16306  0009A6  000A               	tblrd		*-
 16307  0009A8  CFF5 F095          	movff	tablat,___lldiv@divisor+3
 16308  0009AC  EC43  F03B         	call	___lldiv	;wreg free
 16309  0009B0  0100               	movlb	0	; () banked
 16310  0009B2  518E               	movf	?___lldiv& (0+255),w,b
 16311  0009B4  0F30               	addlw	48
 16312  0009B6  EC3A  F049         	call	_putch
 16313                           
 16314                           ;doprnt.c: 987: val %= dpowers[c];
 16315  0009BA  C21D  F09B         	movff	printf@val,___llmod@dividend
 16316  0009BE  C21E  F09C         	movff	printf@val+1,___llmod@dividend+1
 16317  0009C2  C21F  F09D         	movff	printf@val+2,___llmod@dividend+2
 16318  0009C6  C220  F09E         	movff	printf@val+3,___llmod@dividend+3
 16319  0009CA  0102               	movlb	2	; () banked
 16320  0009CC  5126               	movf	printf@c& (0+255),w,b
 16321  0009CE  0D04               	mullw	4
 16322  0009D0  0E0E               	movlw	low _dpowers
 16323  0009D2  24F3               	addwf	prodl,w,c
 16324  0009D4  6EF6               	movwf	tblptrl,c
 16325  0009D6  0EFE               	movlw	high _dpowers
 16326  0009D8  20F4               	addwfc	prodh,w,c
 16327  0009DA  6EF7               	movwf	tblptrh,c
 16328  0009DC                     	if	0	;There are less than 3 active tblptr bytes
 16329  0009DC                     	endif
 16330  0009DC  0009               	tblrd		*+
 16331  0009DE  CFF5 F09F          	movff	tablat,___llmod@divisor
 16332  0009E2  0009               	tblrd		*+
 16333  0009E4  CFF5 F0A0          	movff	tablat,___llmod@divisor+1
 16334  0009E8  0009               	tblrd		*+
 16335  0009EA  CFF5 F0A1          	movff	tablat,___llmod@divisor+2
 16336  0009EE  000A               	tblrd		*-
 16337  0009F0  CFF5 F0A2          	movff	tablat,___llmod@divisor+3
 16338  0009F4  EC8E  F03E         	call	___llmod	;wreg free
 16339  0009F8  C09B  F21D         	movff	?___llmod,printf@val
 16340  0009FC  C09C  F21E         	movff	?___llmod+1,printf@val+1
 16341  000A00  C09D  F21F         	movff	?___llmod+2,printf@val+2
 16342  000A04  C09E  F220         	movff	?___llmod+3,printf@val+3
 16343                           
 16344                           ;doprnt.c: 990: if(prec || flag & 0x800)
 16345  000A08  0102               	movlb	2	; () banked
 16346  000A0A  5124               	movf	printf@prec& (0+255),w,b
 16347  000A0C  0102               	movlb	2	; () banked
 16348  000A0E  1125               	iorwf	(printf@prec+1)& (0+255),w,b
 16349  000A10  A4D8               	btfss	status,2,c
 16350  000A12  D003               	goto	l13029
 16351                           
 16352                           ; BSR set to: 2
 16353  000A14  0102               	movlb	2	; () banked
 16354  000A16  A728               	btfss	(printf@flag+1)& (0+255),3,b
 16355  000A18  D088               	goto	l1509
 16356  000A1A                     l13029:
 16357                           
 16358                           ; BSR set to: 2
 16359                           ;doprnt.c: 994: {
 16360                           ;doprnt.c: 995: (putch('.') );
 16361  000A1A  0E2E               	movlw	46
 16362  000A1C  EC3A  F049         	call	_putch
 16363                           
 16364                           ;doprnt.c: 996: prec -= c;
 16365  000A20  0102               	movlb	2	; () banked
 16366  000A22  5126               	movf	printf@c& (0+255),w,b
 16367  000A24  0102               	movlb	2	; () banked
 16368  000A26  5F24               	subwf	printf@prec& (0+255),f,b
 16369  000A28  0E00               	movlw	0
 16370  000A2A  0102               	movlb	2	; () banked
 16371  000A2C  BF26               	btfsc	printf@c& (0+255),7,b
 16372  000A2E  0EFF               	movlw	255
 16373  000A30  0102               	movlb	2	; () banked
 16374  000A32  5B25               	subwfb	(printf@prec+1)& (0+255),f,b
 16375                           
 16376                           ;doprnt.c: 997: while(c--) {
 16377  000A34  D064               	goto	l13039
 16378  000A36                     l1513:
 16379                           
 16380                           ; BSR set to: 2
 16381                           ;doprnt.c: 1002: if(flag & 0x200 && val == 0) {
 16382  000A36  0102               	movlb	2	; () banked
 16383  000A38  A328               	btfss	(printf@flag+1)& (0+255),1,b
 16384  000A3A  D015               	goto	l13037
 16385                           
 16386                           ; BSR set to: 2
 16387  000A3C  0102               	movlb	2	; () banked
 16388  000A3E  511D               	movf	printf@val& (0+255),w,b
 16389  000A40  0102               	movlb	2	; () banked
 16390  000A42  111E               	iorwf	(printf@val+1)& (0+255),w,b
 16391  000A44  0102               	movlb	2	; () banked
 16392  000A46  111F               	iorwf	(printf@val+2)& (0+255),w,b
 16393  000A48  0102               	movlb	2	; () banked
 16394  000A4A  1120               	iorwf	(printf@val+3)& (0+255),w,b
 16395  000A4C  A4D8               	btfss	status,2,c
 16396  000A4E  D00B               	goto	l13037
 16397                           
 16398                           ; BSR set to: 2
 16399                           ;doprnt.c: 1003: prec = c = 0;
 16400  000A50  0E00               	movlw	0
 16401  000A52  0102               	movlb	2	; () banked
 16402  000A54  6F26               	movwf	printf@c& (0+255),b
 16403  000A56  0102               	movlb	2	; () banked
 16404  000A58  5126               	movf	printf@c& (0+255),w,b
 16405  000A5A  0102               	movlb	2	; () banked
 16406  000A5C  6F24               	movwf	printf@prec& (0+255),b
 16407  000A5E  6B25               	clrf	(printf@prec+1)& (0+255),b
 16408  000A60  BF24               	btfsc	printf@prec& (0+255),7,b
 16409  000A62  0725               	decf	(printf@prec+1)& (0+255),f,b
 16410                           
 16411                           ;doprnt.c: 1004: break;
 16412  000A64  D05C               	goto	l13045
 16413  000A66                     l13037:
 16414                           
 16415                           ; BSR set to: 2
 16416                           ;doprnt.c: 1005: }
 16417                           ;doprnt.c: 1007: (putch('0' + (val/dpowers[c])) );
 16418  000A66  C21D  F08E         	movff	printf@val,___lldiv@dividend
 16419  000A6A  C21E  F08F         	movff	printf@val+1,___lldiv@dividend+1
 16420  000A6E  C21F  F090         	movff	printf@val+2,___lldiv@dividend+2
 16421  000A72  C220  F091         	movff	printf@val+3,___lldiv@dividend+3
 16422  000A76  0102               	movlb	2	; () banked
 16423  000A78  5126               	movf	printf@c& (0+255),w,b
 16424  000A7A  0D04               	mullw	4
 16425  000A7C  0E0E               	movlw	low _dpowers
 16426  000A7E  24F3               	addwf	prodl,w,c
 16427  000A80  6EF6               	movwf	tblptrl,c
 16428  000A82  0EFE               	movlw	high _dpowers
 16429  000A84  20F4               	addwfc	prodh,w,c
 16430  000A86  6EF7               	movwf	tblptrh,c
 16431  000A88                     	if	0	;There are less than 3 active tblptr bytes
 16432  000A88                     	endif
 16433  000A88  0009               	tblrd		*+
 16434  000A8A  CFF5 F092          	movff	tablat,___lldiv@divisor
 16435  000A8E  0009               	tblrd		*+
 16436  000A90  CFF5 F093          	movff	tablat,___lldiv@divisor+1
 16437  000A94  0009               	tblrd		*+
 16438  000A96  CFF5 F094          	movff	tablat,___lldiv@divisor+2
 16439  000A9A  000A               	tblrd		*-
 16440  000A9C  CFF5 F095          	movff	tablat,___lldiv@divisor+3
 16441  000AA0  EC43  F03B         	call	___lldiv	;wreg free
 16442  000AA4  0100               	movlb	0	; () banked
 16443  000AA6  518E               	movf	?___lldiv& (0+255),w,b
 16444  000AA8  0F30               	addlw	48
 16445  000AAA  EC3A  F049         	call	_putch
 16446                           
 16447                           ;doprnt.c: 1008: val %= dpowers[c];
 16448  000AAE  C21D  F09B         	movff	printf@val,___llmod@dividend
 16449  000AB2  C21E  F09C         	movff	printf@val+1,___llmod@dividend+1
 16450  000AB6  C21F  F09D         	movff	printf@val+2,___llmod@dividend+2
 16451  000ABA  C220  F09E         	movff	printf@val+3,___llmod@dividend+3
 16452  000ABE  0102               	movlb	2	; () banked
 16453  000AC0  5126               	movf	printf@c& (0+255),w,b
 16454  000AC2  0D04               	mullw	4
 16455  000AC4  0E0E               	movlw	low _dpowers
 16456  000AC6  24F3               	addwf	prodl,w,c
 16457  000AC8  6EF6               	movwf	tblptrl,c
 16458  000ACA  0EFE               	movlw	high _dpowers
 16459  000ACC  20F4               	addwfc	prodh,w,c
 16460  000ACE  6EF7               	movwf	tblptrh,c
 16461  000AD0                     	if	0	;There are less than 3 active tblptr bytes
 16462  000AD0                     	endif
 16463  000AD0  0009               	tblrd		*+
 16464  000AD2  CFF5 F09F          	movff	tablat,___llmod@divisor
 16465  000AD6  0009               	tblrd		*+
 16466  000AD8  CFF5 F0A0          	movff	tablat,___llmod@divisor+1
 16467  000ADC  0009               	tblrd		*+
 16468  000ADE  CFF5 F0A1          	movff	tablat,___llmod@divisor+2
 16469  000AE2  000A               	tblrd		*-
 16470  000AE4  CFF5 F0A2          	movff	tablat,___llmod@divisor+3
 16471  000AE8  EC8E  F03E         	call	___llmod	;wreg free
 16472  000AEC  C09B  F21D         	movff	?___llmod,printf@val
 16473  000AF0  C09C  F21E         	movff	?___llmod+1,printf@val+1
 16474  000AF4  C09D  F21F         	movff	?___llmod+2,printf@val+2
 16475  000AF8  C09E  F220         	movff	?___llmod+3,printf@val+3
 16476  000AFC  D000               	goto	l13039
 16477  000AFE                     l13039:
 16478  000AFE  0102               	movlb	2	; () banked
 16479  000B00  0726               	decf	printf@c& (0+255),f,b
 16480  000B02  0102               	movlb	2	; () banked
 16481  000B04  2926               	incf	printf@c& (0+255),w,b
 16482  000B06  B4D8               	btfsc	status,2,c
 16483  000B08  D00A               	goto	l13045
 16484  000B0A  D795               	goto	l1513
 16485                           
 16486                           ; BSR set to: 2
 16487                           ;doprnt.c: 1010: }
 16488                           ;doprnt.c: 1011: while(prec) {
 16489  000B0C  D008               	goto	l13045
 16490  000B0E                     l13041:
 16491                           
 16492                           ; BSR set to: 2
 16493                           ;doprnt.c: 1012: (putch('0') );
 16494  000B0E  0E30               	movlw	48
 16495  000B10  EC3A  F049         	call	_putch
 16496                           
 16497                           ;doprnt.c: 1013: prec--;
 16498  000B14  0102               	movlb	2	; () banked
 16499  000B16  0724               	decf	printf@prec& (0+255),f,b
 16500  000B18  A0D8               	btfss	status,0,c
 16501  000B1A  0725               	decf	(printf@prec+1)& (0+255),f,b
 16502  000B1C  D000               	goto	l13045
 16503  000B1E                     l13045:
 16504                           
 16505                           ; BSR set to: 2
 16506  000B1E  0102               	movlb	2	; () banked
 16507  000B20  5124               	movf	printf@prec& (0+255),w,b
 16508  000B22  0102               	movlb	2	; () banked
 16509  000B24  1125               	iorwf	(printf@prec+1)& (0+255),w,b
 16510  000B26  A4D8               	btfss	status,2,c
 16511  000B28  D7F2               	goto	l13041
 16512  000B2A                     l1509:
 16513                           
 16514                           ; BSR set to: 2
 16515                           ;doprnt.c: 1014: }
 16516                           ;doprnt.c: 1015: }
 16517                           ;doprnt.c: 1017: if(flag & 0x20)
 16518  000B2A  0102               	movlb	2	; () banked
 16519  000B2C  AB27               	btfss	printf@flag& (0+255),5,b
 16520  000B2E  D004               	goto	l13049
 16521                           
 16522                           ; BSR set to: 2
 16523                           ;doprnt.c: 1018: (putch('E') );
 16524  000B30  0E45               	movlw	69
 16525  000B32  EC3A  F049         	call	_putch
 16526  000B36  D004               	goto	l13051
 16527  000B38                     l13049:
 16528                           
 16529                           ;doprnt.c: 1019: else
 16530                           ;doprnt.c: 1021: (putch('e') );
 16531  000B38  0E65               	movlw	101
 16532  000B3A  EC3A  F049         	call	_putch
 16533  000B3E  D000               	goto	l13051
 16534  000B40                     l13051:
 16535                           
 16536                           ;doprnt.c: 1022: if(exp < 0) {
 16537  000B40  0102               	movlb	2	; () banked
 16538  000B42  AF1A               	btfss	(printf@exp+1)& (0+255),7,b
 16539  000B44  D009               	goto	l13057
 16540                           
 16541                           ; BSR set to: 2
 16542                           ;doprnt.c: 1023: exp = -exp;
 16543  000B46  0102               	movlb	2	; () banked
 16544  000B48  6D19               	negf	printf@exp& (0+255),b
 16545  000B4A  1F1A               	comf	(printf@exp+1)& (0+255),f,b
 16546  000B4C  B0D8               	btfsc	status,0,c
 16547  000B4E  2B1A               	incf	(printf@exp+1)& (0+255),f,b
 16548                           
 16549                           ; BSR set to: 2
 16550                           ;doprnt.c: 1024: (putch('-') );
 16551  000B50  0E2D               	movlw	45
 16552  000B52  EC3A  F049         	call	_putch
 16553                           
 16554                           ;doprnt.c: 1025: } else
 16555  000B56  D004               	goto	l13059
 16556  000B58                     l13057:
 16557                           
 16558                           ;doprnt.c: 1026: (putch('+') );
 16559  000B58  0E2B               	movlw	43
 16560  000B5A  EC3A  F049         	call	_putch
 16561  000B5E  D000               	goto	l13059
 16562  000B60                     l13059:
 16563                           
 16564                           ;doprnt.c: 1039: (putch(exp / 10 + '0') );
 16565  000B60  C219  F094         	movff	printf@exp,___awdiv@dividend
 16566  000B64  C21A  F095         	movff	printf@exp+1,___awdiv@dividend+1
 16567  000B68  0E00               	movlw	0
 16568  000B6A  0100               	movlb	0	; () banked
 16569  000B6C  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
 16570  000B6E  0E0A               	movlw	10
 16571  000B70  6F96               	movwf	___awdiv@divisor& (0+255),b
 16572  000B72  EC74  F03A         	call	___awdiv	;wreg free
 16573  000B76  0100               	movlb	0	; () banked
 16574  000B78  5194               	movf	?___awdiv& (0+255),w,b
 16575  000B7A  0F30               	addlw	48
 16576  000B7C  EC3A  F049         	call	_putch
 16577                           
 16578                           ;doprnt.c: 1040: (putch(exp % 10 + '0') );
 16579  000B80  C219  F0BA         	movff	printf@exp,___awmod@dividend
 16580  000B84  C21A  F0BB         	movff	printf@exp+1,___awmod@dividend+1
 16581  000B88  0E00               	movlw	0
 16582  000B8A  0100               	movlb	0	; () banked
 16583  000B8C  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
 16584  000B8E  0E0A               	movlw	10
 16585  000B90  6FBC               	movwf	___awmod@divisor& (0+255),b
 16586  000B92  EC87  F03D         	call	___awmod	;wreg free
 16587  000B96  0100               	movlb	0	; () banked
 16588  000B98  51BA               	movf	?___awmod& (0+255),w,b
 16589  000B9A  0F30               	addlw	48
 16590  000B9C  EC3A  F049         	call	_putch
 16591                           
 16592                           ;doprnt.c: 1042: if((flag & 0x08) && width > 0)
 16593  000BA0  0102               	movlb	2	; () banked
 16594  000BA2  A727               	btfss	printf@flag& (0+255),3,b
 16595  000BA4  EFE9  F00C         	goto	l13405
 16596                           
 16597                           ; BSR set to: 2
 16598  000BA8  0102               	movlb	2	; () banked
 16599  000BAA  BF1C               	btfsc	(printf@width+1)& (0+255),7,b
 16600  000BAC  EFE9  F00C         	goto	l13405
 16601  000BB0  0102               	movlb	2	; () banked
 16602  000BB2  511C               	movf	(printf@width+1)& (0+255),w,b
 16603  000BB4  E107               	bnz	l13067
 16604  000BB6  0102               	movlb	2	; () banked
 16605  000BB8  051B               	decf	printf@width& (0+255),w,b
 16606  000BBA  B0D8               	btfsc	status,0,c
 16607  000BBC  D003               	goto	l13067
 16608  000BBE  EFE9  F00C         	goto	l13405
 16609  000BC2  D000               	goto	l13067
 16610  000BC4                     l13067:
 16611                           
 16612                           ; BSR set to: 2
 16613                           ;doprnt.c: 1044: (putch(' ') );
 16614  000BC4  0E20               	movlw	32
 16615  000BC6  EC3A  F049         	call	_putch
 16616                           
 16617                           ;doprnt.c: 1045: while(--width);
 16618  000BCA  0102               	movlb	2	; () banked
 16619  000BCC  071B               	decf	printf@width& (0+255),f,b
 16620  000BCE  A0D8               	btfss	status,0,c
 16621  000BD0  071C               	decf	(printf@width+1)& (0+255),f,b
 16622  000BD2  0102               	movlb	2	; () banked
 16623  000BD4  511B               	movf	printf@width& (0+255),w,b
 16624  000BD6  0102               	movlb	2	; () banked
 16625  000BD8  111C               	iorwf	(printf@width+1)& (0+255),w,b
 16626  000BDA  B4D8               	btfsc	status,2,c
 16627  000BDC  EFE9  F00C         	goto	l13405
 16628  000BE0  D7F1               	goto	l13067
 16629                           
 16630                           ; BSR set to: 2
 16631                           ;doprnt.c: 1047: continue;
 16632                           
 16633                           ; BSR set to: 2
 16634  000BE2  EFE9  F00C         	goto	l13405
 16635  000BE6                     l1461:
 16636                           
 16637                           ;doprnt.c: 1048: }
 16638                           ;doprnt.c: 1087: if(flag & 0x200) {
 16639  000BE6  0102               	movlb	2	; () banked
 16640  000BE8  A328               	btfss	(printf@flag+1)& (0+255),1,b
 16641  000BEA  D111               	goto	l13107
 16642                           
 16643                           ; BSR set to: 2
 16644                           ;doprnt.c: 1088: if(exp < 0)
 16645  000BEC  0102               	movlb	2	; () banked
 16646  000BEE  AF1A               	btfss	(printf@exp+1)& (0+255),7,b
 16647  000BF0  D013               	goto	l13075
 16648                           
 16649                           ; BSR set to: 2
 16650                           ;doprnt.c: 1089: prec -= (exp+1);
 16651  000BF2  0E01               	movlw	1
 16652  000BF4  0102               	movlb	2	; () banked
 16653  000BF6  2519               	addwf	printf@exp& (0+255),w,b
 16654  000BF8  0101               	movlb	1	; () banked
 16655  000BFA  6FD8               	movwf	??_printf& (0+255),b
 16656  000BFC  0E00               	movlw	0
 16657  000BFE  0102               	movlb	2	; () banked
 16658  000C00  211A               	addwfc	(printf@exp+1)& (0+255),w,b
 16659  000C02  0101               	movlb	1	; () banked
 16660  000C04  6FD9               	movwf	(??_printf+1)& (0+255),b
 16661  000C06  0101               	movlb	1	; () banked
 16662  000C08  51D8               	movf	??_printf& (0+255),w,b
 16663  000C0A  0102               	movlb	2	; () banked
 16664  000C0C  5F24               	subwf	printf@prec& (0+255),f,b
 16665  000C0E  0101               	movlb	1	; () banked
 16666  000C10  51D9               	movf	(??_printf+1)& (0+255),w,b
 16667  000C12  0102               	movlb	2	; () banked
 16668  000C14  5B25               	subwfb	(printf@prec+1)& (0+255),f,b
 16669  000C16  D000               	goto	l13075
 16670  000C18                     l13075:
 16671                           
 16672                           ; BSR set to: 2
 16673                           ;doprnt.c: 1091: val = (unsigned long)fval;
 16674  000C18  C221  F0AB         	movff	printf@fval,___fttol@f1
 16675  000C1C  C222  F0AC         	movff	printf@fval+1,___fttol@f1+1
 16676  000C20  C223  F0AD         	movff	printf@fval+2,___fttol@f1+2
 16677  000C24  EC72  F031         	call	___fttol	;wreg free
 16678  000C28  C0AB  F21D         	movff	?___fttol,printf@val
 16679  000C2C  C0AC  F21E         	movff	?___fttol+1,printf@val+1
 16680  000C30  C0AD  F21F         	movff	?___fttol+2,printf@val+2
 16681  000C34  C0AE  F220         	movff	?___fttol+3,printf@val+3
 16682                           
 16683                           ;doprnt.c: 1092: for(c = 0 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 16684  000C38  0E00               	movlw	0
 16685  000C3A  0102               	movlb	2	; () banked
 16686  000C3C  6F26               	movwf	printf@c& (0+255),b
 16687  000C3E                     l13079:
 16688                           
 16689                           ; BSR set to: 2
 16690  000C3E  0E0A               	movlw	10
 16691  000C40  0102               	movlb	2	; () banked
 16692  000C42  1926               	xorwf	printf@c& (0+255),w,b
 16693  000C44  B4D8               	btfsc	status,2,c
 16694  000C46  D022               	goto	l13091
 16695  000C48  D001               	goto	l13083
 16696                           
 16697                           ; BSR set to: 2
 16698  000C4A  D020               	goto	l13091
 16699  000C4C                     l13083:
 16700                           
 16701                           ; BSR set to: 2
 16702                           ;doprnt.c: 1093: if(val < dpowers[c])
 16703  000C4C  0102               	movlb	2	; () banked
 16704  000C4E  5126               	movf	printf@c& (0+255),w,b
 16705  000C50  0D04               	mullw	4
 16706  000C52  0E0E               	movlw	low _dpowers
 16707  000C54  24F3               	addwf	prodl,w,c
 16708  000C56  6EF6               	movwf	tblptrl,c
 16709  000C58  0EFE               	movlw	high _dpowers
 16710  000C5A  20F4               	addwfc	prodh,w,c
 16711  000C5C  6EF7               	movwf	tblptrh,c
 16712  000C5E                     	if	0	;There are less than 3 active tblptr bytes
 16713  000C5E                     	endif
 16714  000C5E  0009               	tblrd		*+
 16715  000C60  50F5               	movf	tablat,w,c
 16716  000C62  0102               	movlb	2	; () banked
 16717  000C64  5D1D               	subwf	printf@val& (0+255),w,b
 16718  000C66  0009               	tblrd		*+
 16719  000C68  50F5               	movf	tablat,w,c
 16720  000C6A  0102               	movlb	2	; () banked
 16721  000C6C  591E               	subwfb	(printf@val+1)& (0+255),w,b
 16722  000C6E  0009               	tblrd		*+
 16723  000C70  50F5               	movf	tablat,w,c
 16724  000C72  0102               	movlb	2	; () banked
 16725  000C74  591F               	subwfb	(printf@val+2)& (0+255),w,b
 16726  000C76  0009               	tblrd		*+
 16727  000C78  50F5               	movf	tablat,w,c
 16728  000C7A  0102               	movlb	2	; () banked
 16729  000C7C  5920               	subwfb	(printf@val+3)& (0+255),w,b
 16730  000C7E  A0D8               	btfss	status,0,c
 16731  000C80  D005               	goto	l13091
 16732  000C82  D001               	goto	l13087
 16733                           
 16734                           ; BSR set to: 2
 16735                           ;doprnt.c: 1094: break;
 16736  000C84  D003               	goto	l13091
 16737  000C86                     l13087:
 16738                           
 16739                           ; BSR set to: 2
 16740  000C86  0102               	movlb	2	; () banked
 16741  000C88  2B26               	incf	printf@c& (0+255),f,b
 16742  000C8A  D7D9               	goto	l13079
 16743  000C8C                     l13091:
 16744                           
 16745                           ; BSR set to: 2
 16746                           ;doprnt.c: 1095: prec -= c;
 16747  000C8C  0102               	movlb	2	; () banked
 16748  000C8E  5126               	movf	printf@c& (0+255),w,b
 16749  000C90  0102               	movlb	2	; () banked
 16750  000C92  5F24               	subwf	printf@prec& (0+255),f,b
 16751  000C94  0E00               	movlw	0
 16752  000C96  0102               	movlb	2	; () banked
 16753  000C98  BF26               	btfsc	printf@c& (0+255),7,b
 16754  000C9A  0EFF               	movlw	255
 16755  000C9C  0102               	movlb	2	; () banked
 16756  000C9E  5B25               	subwfb	(printf@prec+1)& (0+255),f,b
 16757                           
 16758                           ;doprnt.c: 1096: if(prec <= 12)
 16759  000CA0  0102               	movlb	2	; () banked
 16760  000CA2  BF25               	btfsc	(printf@prec+1)& (0+255),7,b
 16761  000CA4  D008               	goto	l13093
 16762  000CA6  0102               	movlb	2	; () banked
 16763  000CA8  5125               	movf	(printf@prec+1)& (0+255),w,b
 16764  000CAA  E11D               	bnz	l1531
 16765  000CAC  0E0D               	movlw	13
 16766  000CAE  0102               	movlb	2	; () banked
 16767  000CB0  5D24               	subwf	printf@prec& (0+255),w,b
 16768  000CB2  B0D8               	btfsc	status,0,c
 16769  000CB4  D018               	goto	l1531
 16770  000CB6                     l13093:
 16771                           
 16772                           ; BSR set to: 2
 16773                           ;doprnt.c: 1097: fval += fround(prec);
 16774  000CB6  C221  F0CA         	movff	printf@fval,___ftadd@f1
 16775  000CBA  C222  F0CB         	movff	printf@fval+1,___ftadd@f1+1
 16776  000CBE  C223  F0CC         	movff	printf@fval+2,___ftadd@f1+2
 16777  000CC2  0102               	movlb	2	; () banked
 16778  000CC4  5124               	movf	printf@prec& (0+255),w,b
 16779  000CC6  ECBA  F021         	call	_fround
 16780  000CCA  C0C0  F0CD         	movff	?_fround,___ftadd@f2
 16781  000CCE  C0C1  F0CE         	movff	?_fround+1,___ftadd@f2+1
 16782  000CD2  C0C2  F0CF         	movff	?_fround+2,___ftadd@f2+2
 16783  000CD6  EC0F  F023         	call	___ftadd	;wreg free
 16784  000CDA  C0CA  F221         	movff	?___ftadd,printf@fval
 16785  000CDE  C0CB  F222         	movff	?___ftadd+1,printf@fval+1
 16786  000CE2  C0CC  F223         	movff	?___ftadd+2,printf@fval+2
 16787  000CE6                     l1531:
 16788                           
 16789                           ;doprnt.c: 1100: {
 16790                           ;doprnt.c: 1101: double temp;
 16791                           ;doprnt.c: 1102: temp = scale(prec);
 16792  000CE6  0102               	movlb	2	; () banked
 16793  000CE8  5124               	movf	printf@prec& (0+255),w,b
 16794  000CEA  EC5E  F01B         	call	_scale
 16795  000CEE  C0C0  F210         	movff	?_scale,printf@temp
 16796  000CF2  C0C1  F211         	movff	?_scale+1,printf@temp+1
 16797  000CF6  C0C2  F212         	movff	?_scale+2,printf@temp+2
 16798                           
 16799                           ;doprnt.c: 1103: temp *= fval - (double)val;
 16800  000CFA  C210  F09C         	movff	printf@temp,___ftmul@f1
 16801  000CFE  C211  F09D         	movff	printf@temp+1,___ftmul@f1+1
 16802  000D02  C212  F09E         	movff	printf@temp+2,___ftmul@f1+2
 16803  000D06  C221  F0CD         	movff	printf@fval,___ftadd@f2
 16804  000D0A  C222  F0CE         	movff	printf@fval+1,___ftadd@f2+1
 16805  000D0E  C223  F0CF         	movff	printf@fval+2,___ftadd@f2+2
 16806  000D12  C21D  F0BA         	movff	printf@val,___lltoft@c
 16807  000D16  C21E  F0BB         	movff	printf@val+1,___lltoft@c+1
 16808  000D1A  C21F  F0BC         	movff	printf@val+2,___lltoft@c+2
 16809  000D1E  C220  F0BD         	movff	printf@val+3,___lltoft@c+3
 16810  000D22  EC6B  F041         	call	___lltoft	;wreg free
 16811  000D26  C0BA  F0C3         	movff	?___lltoft,___ftneg@f1
 16812  000D2A  C0BB  F0C4         	movff	?___lltoft+1,___ftneg@f1+1
 16813  000D2E  C0BC  F0C5         	movff	?___lltoft+2,___ftneg@f1+2
 16814  000D32  EC00  F047         	call	___ftneg	;wreg free
 16815  000D36  C0C3  F0CA         	movff	?___ftneg,___ftadd@f1
 16816  000D3A  C0C4  F0CB         	movff	?___ftneg+1,___ftadd@f1+1
 16817  000D3E  C0C5  F0CC         	movff	?___ftneg+2,___ftadd@f1+2
 16818  000D42  EC0F  F023         	call	___ftadd	;wreg free
 16819  000D46  C0CA  F09F         	movff	?___ftadd,___ftmul@f2
 16820  000D4A  C0CB  F0A0         	movff	?___ftadd+1,___ftmul@f2+1
 16821  000D4E  C0CC  F0A1         	movff	?___ftadd+2,___ftmul@f2+2
 16822  000D52  ECDE  F02E         	call	___ftmul	;wreg free
 16823  000D56  C09C  F210         	movff	?___ftmul,printf@temp
 16824  000D5A  C09D  F211         	movff	?___ftmul+1,printf@temp+1
 16825  000D5E  C09E  F212         	movff	?___ftmul+2,printf@temp+2
 16826                           
 16827                           ;doprnt.c: 1104: val = (unsigned long)temp;
 16828  000D62  C210  F0AB         	movff	printf@temp,___fttol@f1
 16829  000D66  C211  F0AC         	movff	printf@temp+1,___fttol@f1+1
 16830  000D6A  C212  F0AD         	movff	printf@temp+2,___fttol@f1+2
 16831  000D6E  EC72  F031         	call	___fttol	;wreg free
 16832  000D72  C0AB  F21D         	movff	?___fttol,printf@val
 16833  000D76  C0AC  F21E         	movff	?___fttol+1,printf@val+1
 16834  000D7A  C0AD  F21F         	movff	?___fttol+2,printf@val+2
 16835  000D7E  C0AE  F220         	movff	?___fttol+3,printf@val+3
 16836                           
 16837                           ;doprnt.c: 1105: }
 16838                           ;doprnt.c: 1106: while(prec && val % 10 == 0) {
 16839  000D82  D020               	goto	l13103
 16840  000D84                     l13099:
 16841                           
 16842                           ;doprnt.c: 1107: val /= 10;
 16843  000D84  C21D  F08E         	movff	printf@val,___lldiv@dividend
 16844  000D88  C21E  F08F         	movff	printf@val+1,___lldiv@dividend+1
 16845  000D8C  C21F  F090         	movff	printf@val+2,___lldiv@dividend+2
 16846  000D90  C220  F091         	movff	printf@val+3,___lldiv@dividend+3
 16847  000D94  0E0A               	movlw	10
 16848  000D96  0100               	movlb	0	; () banked
 16849  000D98  6F92               	movwf	___lldiv@divisor& (0+255),b
 16850  000D9A  0E00               	movlw	0
 16851  000D9C  6F93               	movwf	(___lldiv@divisor+1)& (0+255),b
 16852  000D9E  0E00               	movlw	0
 16853  000DA0  6F94               	movwf	(___lldiv@divisor+2)& (0+255),b
 16854  000DA2  0E00               	movlw	0
 16855  000DA4  6F95               	movwf	(___lldiv@divisor+3)& (0+255),b
 16856  000DA6  EC43  F03B         	call	___lldiv	;wreg free
 16857  000DAA  C08E  F21D         	movff	?___lldiv,printf@val
 16858  000DAE  C08F  F21E         	movff	?___lldiv+1,printf@val+1
 16859  000DB2  C090  F21F         	movff	?___lldiv+2,printf@val+2
 16860  000DB6  C091  F220         	movff	?___lldiv+3,printf@val+3
 16861                           
 16862                           ;doprnt.c: 1108: prec--;
 16863  000DBA  0102               	movlb	2	; () banked
 16864  000DBC  0724               	decf	printf@prec& (0+255),f,b
 16865  000DBE  A0D8               	btfss	status,0,c
 16866  000DC0  0725               	decf	(printf@prec+1)& (0+255),f,b
 16867  000DC2  D000               	goto	l13103
 16868  000DC4                     l13103:
 16869  000DC4  0102               	movlb	2	; () banked
 16870  000DC6  5124               	movf	printf@prec& (0+255),w,b
 16871  000DC8  0102               	movlb	2	; () banked
 16872  000DCA  1125               	iorwf	(printf@prec+1)& (0+255),w,b
 16873  000DCC  B4D8               	btfsc	status,2,c
 16874  000DCE  D043               	goto	l13111
 16875                           
 16876                           ; BSR set to: 2
 16877  000DD0  C21D  F09B         	movff	printf@val,___llmod@dividend
 16878  000DD4  C21E  F09C         	movff	printf@val+1,___llmod@dividend+1
 16879  000DD8  C21F  F09D         	movff	printf@val+2,___llmod@dividend+2
 16880  000DDC  C220  F09E         	movff	printf@val+3,___llmod@dividend+3
 16881  000DE0  0E0A               	movlw	10
 16882  000DE2  0100               	movlb	0	; () banked
 16883  000DE4  6F9F               	movwf	___llmod@divisor& (0+255),b
 16884  000DE6  0E00               	movlw	0
 16885  000DE8  6FA0               	movwf	(___llmod@divisor+1)& (0+255),b
 16886  000DEA  0E00               	movlw	0
 16887  000DEC  6FA1               	movwf	(___llmod@divisor+2)& (0+255),b
 16888  000DEE  0E00               	movlw	0
 16889  000DF0  6FA2               	movwf	(___llmod@divisor+3)& (0+255),b
 16890  000DF2  EC8E  F03E         	call	___llmod	;wreg free
 16891  000DF6  0100               	movlb	0	; () banked
 16892  000DF8  519B               	movf	?___llmod& (0+255),w,b
 16893  000DFA  0100               	movlb	0	; () banked
 16894  000DFC  119C               	iorwf	(?___llmod+1)& (0+255),w,b
 16895  000DFE  0100               	movlb	0	; () banked
 16896  000E00  119D               	iorwf	(?___llmod+2)& (0+255),w,b
 16897  000E02  0100               	movlb	0	; () banked
 16898  000E04  119E               	iorwf	(?___llmod+3)& (0+255),w,b
 16899  000E06  A4D8               	btfss	status,2,c
 16900  000E08  D026               	goto	l13111
 16901  000E0A  D7BC               	goto	l13099
 16902                           
 16903                           ; BSR set to: 0
 16904                           ;doprnt.c: 1109: }
 16905                           ;doprnt.c: 1110: } else
 16906                           
 16907                           ; BSR set to: 0
 16908  000E0C  D024               	goto	l13111
 16909  000E0E                     l13107:
 16910                           
 16911                           ;doprnt.c: 1112: if(prec <= 12)
 16912  000E0E  0102               	movlb	2	; () banked
 16913  000E10  BF25               	btfsc	(printf@prec+1)& (0+255),7,b
 16914  000E12  D008               	goto	l13109
 16915  000E14  0102               	movlb	2	; () banked
 16916  000E16  5125               	movf	(printf@prec+1)& (0+255),w,b
 16917  000E18  E11E               	bnz	l13111
 16918  000E1A  0E0D               	movlw	13
 16919  000E1C  0102               	movlb	2	; () banked
 16920  000E1E  5D24               	subwf	printf@prec& (0+255),w,b
 16921  000E20  B0D8               	btfsc	status,0,c
 16922  000E22  D019               	goto	l13111
 16923  000E24                     l13109:
 16924                           
 16925                           ; BSR set to: 2
 16926                           ;doprnt.c: 1113: fval += fround(prec);
 16927  000E24  C221  F0CA         	movff	printf@fval,___ftadd@f1
 16928  000E28  C222  F0CB         	movff	printf@fval+1,___ftadd@f1+1
 16929  000E2C  C223  F0CC         	movff	printf@fval+2,___ftadd@f1+2
 16930  000E30  0102               	movlb	2	; () banked
 16931  000E32  5124               	movf	printf@prec& (0+255),w,b
 16932  000E34  ECBA  F021         	call	_fround
 16933  000E38  C0C0  F0CD         	movff	?_fround,___ftadd@f2
 16934  000E3C  C0C1  F0CE         	movff	?_fround+1,___ftadd@f2+1
 16935  000E40  C0C2  F0CF         	movff	?_fround+2,___ftadd@f2+2
 16936  000E44  EC0F  F023         	call	___ftadd	;wreg free
 16937  000E48  C0CA  F221         	movff	?___ftadd,printf@fval
 16938  000E4C  C0CB  F222         	movff	?___ftadd+1,printf@fval+1
 16939  000E50  C0CC  F223         	movff	?___ftadd+2,printf@fval+2
 16940  000E54  D000               	goto	l13111
 16941  000E56                     l13111:
 16942                           
 16943                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 16944  000E56  0102               	movlb	2	; () banked
 16945  000E58  BF1A               	btfsc	(printf@exp+1)& (0+255),7,b
 16946  000E5A  D008               	goto	l13113
 16947  000E5C  0102               	movlb	2	; () banked
 16948  000E5E  511A               	movf	(printf@exp+1)& (0+255),w,b
 16949  000E60  E12C               	bnz	l13119
 16950  000E62  0E0A               	movlw	10
 16951  000E64  0102               	movlb	2	; () banked
 16952  000E66  5D19               	subwf	printf@exp& (0+255),w,b
 16953  000E68  B0D8               	btfsc	status,0,c
 16954  000E6A  D027               	goto	l13119
 16955  000E6C                     l13113:
 16956                           
 16957                           ; BSR set to: 2
 16958  000E6C  0102               	movlb	2	; () banked
 16959  000E6E  5121               	movf	printf@fval& (0+255),w,b
 16960  000E70  0102               	movlb	2	; () banked
 16961  000E72  1122               	iorwf	(printf@fval+1)& (0+255),w,b
 16962  000E74  0102               	movlb	2	; () banked
 16963  000E76  1123               	iorwf	(printf@fval+2)& (0+255),w,b
 16964  000E78  B4D8               	btfsc	status,2,c
 16965  000E7A  D07F               	goto	l13133
 16966                           
 16967                           ; BSR set to: 2
 16968  000E7C  C221  F0AB         	movff	printf@fval,___fttol@f1
 16969  000E80  C222  F0AC         	movff	printf@fval+1,___fttol@f1+1
 16970  000E84  C223  F0AD         	movff	printf@fval+2,___fttol@f1+2
 16971  000E88  EC72  F031         	call	___fttol	;wreg free
 16972  000E8C  0100               	movlb	0	; () banked
 16973  000E8E  51AB               	movf	?___fttol& (0+255),w,b
 16974  000E90  0100               	movlb	0	; () banked
 16975  000E92  11AC               	iorwf	(?___fttol+1)& (0+255),w,b
 16976  000E94  0100               	movlb	0	; () banked
 16977  000E96  11AD               	iorwf	(?___fttol+2)& (0+255),w,b
 16978  000E98  0100               	movlb	0	; () banked
 16979  000E9A  11AE               	iorwf	(?___fttol+3)& (0+255),w,b
 16980  000E9C  A4D8               	btfss	status,2,c
 16981  000E9E  D06D               	goto	l13133
 16982                           
 16983                           ; BSR set to: 0
 16984  000EA0  0102               	movlb	2	; () banked
 16985  000EA2  BF1A               	btfsc	(printf@exp+1)& (0+255),7,b
 16986  000EA4  D06A               	goto	l13133
 16987  000EA6  0102               	movlb	2	; () banked
 16988  000EA8  511A               	movf	(printf@exp+1)& (0+255),w,b
 16989  000EAA  E107               	bnz	l13119
 16990  000EAC  0E02               	movlw	2
 16991  000EAE  0102               	movlb	2	; () banked
 16992  000EB0  5D19               	subwf	printf@exp& (0+255),w,b
 16993  000EB2  B0D8               	btfsc	status,0,c
 16994  000EB4  D002               	goto	l13119
 16995  000EB6  D061               	goto	l13133
 16996  000EB8  D000               	goto	l13119
 16997  000EBA                     l13119:
 16998                           
 16999                           ; BSR set to: 2
 17000                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 17001  000EBA  C215  F0D6         	movff	printf@tmpval,___ftge@ff1
 17002  000EBE  C216  F0D7         	movff	printf@tmpval+1,___ftge@ff1+1
 17003  000EC2  C217  F0D8         	movff	printf@tmpval+2,___ftge@ff1+2
 17004  000EC6  0E70               	movlw	112
 17005  000EC8  0100               	movlb	0	; () banked
 17006  000ECA  6FD9               	movwf	___ftge@ff2& (0+255),b
 17007  000ECC  0E89               	movlw	137
 17008  000ECE  0100               	movlb	0	; () banked
 17009  000ED0  6FDA               	movwf	(___ftge@ff2+1)& (0+255),b
 17010  000ED2  0E40               	movlw	64
 17011  000ED4  0100               	movlb	0	; () banked
 17012  000ED6  6FDB               	movwf	(___ftge@ff2+2)& (0+255),b
 17013  000ED8  ECDC  F03A         	call	___ftge	;wreg free
 17014  000EDC  0100               	movlb	0	; () banked
 17015  000EDE  B0D8               	btfsc	status,0,c
 17016  000EE0  D003               	goto	l13123
 17017                           
 17018                           ; BSR set to: 0
 17019                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 17020  000EE2  0102               	movlb	2	; () banked
 17021  000EE4  0EF7               	movlw	247
 17022  000EE6  D002               	goto	L14
 17023  000EE8                     l13123:
 17024                           
 17025                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 17026  000EE8  0102               	movlb	2	; () banked
 17027  000EEA  0EF8               	movlw	248
 17028  000EEC                     L14:
 17029  000EEC  2719               	addwf	printf@exp& (0+255),f,b
 17030  000EEE  0EFF               	movlw	255
 17031  000EF0  231A               	addwfc	(printf@exp+1)& (0+255),f,b
 17032  000EF2  D000               	goto	l13125
 17033  000EF4                     l13125:
 17034                           
 17035                           ; BSR set to: 2
 17036                           ;doprnt.c: 1124: }
 17037                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 17038  000EF4  0102               	movlb	2	; () banked
 17039  000EF6  5119               	movf	printf@exp& (0+255),w,b
 17040  000EF8  EC5E  F01B         	call	_scale
 17041  000EFC  C0C0  F215         	movff	?_scale,printf@tmpval
 17042  000F00  C0C1  F216         	movff	?_scale+1,printf@tmpval+1
 17043  000F04  C0C2  F217         	movff	?_scale+2,printf@tmpval+2
 17044                           
 17045                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 17046  000F08  D017               	goto	l13129
 17047  000F0A  C221  F08E         	movff	printf@fval,__div_to_l_@f1
 17048  000F0E  C222  F08F         	movff	printf@fval+1,__div_to_l_@f1+1
 17049  000F12  C223  F090         	movff	printf@fval+2,__div_to_l_@f1+2
 17050  000F16  C215  F091         	movff	printf@tmpval,__div_to_l_@f2
 17051  000F1A  C216  F092         	movff	printf@tmpval+1,__div_to_l_@f2+1
 17052  000F1E  C217  F093         	movff	printf@tmpval+2,__div_to_l_@f2+2
 17053  000F22  EC2C  F02E         	call	__div_to_l_	;wreg free
 17054  000F26  C08E  F21D         	movff	?__div_to_l_,printf@val
 17055  000F2A  C08F  F21E         	movff	?__div_to_l_+1,printf@val+1
 17056  000F2E  C090  F21F         	movff	?__div_to_l_+2,printf@val+2
 17057  000F32  C091  F220         	movff	?__div_to_l_+3,printf@val+3
 17058  000F36  D017               	goto	l13131
 17059  000F38                     l13129:
 17060  000F38  C221  F08E         	movff	printf@fval,__tdiv_to_l_@f1
 17061  000F3C  C222  F08F         	movff	printf@fval+1,__tdiv_to_l_@f1+1
 17062  000F40  C223  F090         	movff	printf@fval+2,__tdiv_to_l_@f1+2
 17063  000F44  C215  F091         	movff	printf@tmpval,__tdiv_to_l_@f2
 17064  000F48  C216  F092         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
 17065  000F4C  C217  F093         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
 17066  000F50  EC71  F02D         	call	__tdiv_to_l_	;wreg free
 17067  000F54  C08E  F21D         	movff	?__tdiv_to_l_,printf@val
 17068  000F58  C08F  F21E         	movff	?__tdiv_to_l_+1,printf@val+1
 17069  000F5C  C090  F21F         	movff	?__tdiv_to_l_+2,printf@val+2
 17070  000F60  C091  F220         	movff	?__tdiv_to_l_+3,printf@val+3
 17071  000F64  D000               	goto	l13131
 17072  000F66                     l13131:
 17073                           
 17074                           ;doprnt.c: 1129: fval = 0.0;
 17075  000F66  0E00               	movlw	0
 17076  000F68  0102               	movlb	2	; () banked
 17077  000F6A  6F21               	movwf	printf@fval& (0+255),b
 17078  000F6C  0E00               	movlw	0
 17079  000F6E  0102               	movlb	2	; () banked
 17080  000F70  6F22               	movwf	(printf@fval+1)& (0+255),b
 17081  000F72  0E00               	movlw	0
 17082  000F74  0102               	movlb	2	; () banked
 17083  000F76  6F23               	movwf	(printf@fval+2)& (0+255),b
 17084                           
 17085                           ;doprnt.c: 1130: } else {
 17086  000F78  D034               	goto	l13137
 17087  000F7A                     l13133:
 17088                           
 17089                           ;doprnt.c: 1131: val = (unsigned long)fval;
 17090  000F7A  C221  F0AB         	movff	printf@fval,___fttol@f1
 17091  000F7E  C222  F0AC         	movff	printf@fval+1,___fttol@f1+1
 17092  000F82  C223  F0AD         	movff	printf@fval+2,___fttol@f1+2
 17093  000F86  EC72  F031         	call	___fttol	;wreg free
 17094  000F8A  C0AB  F21D         	movff	?___fttol,printf@val
 17095  000F8E  C0AC  F21E         	movff	?___fttol+1,printf@val+1
 17096  000F92  C0AD  F21F         	movff	?___fttol+2,printf@val+2
 17097  000F96  C0AE  F220         	movff	?___fttol+3,printf@val+3
 17098                           
 17099                           ;doprnt.c: 1132: fval -= (double)val;
 17100  000F9A  C221  F0D6         	movff	printf@fval,___ftsub@f1
 17101  000F9E  C222  F0D7         	movff	printf@fval+1,___ftsub@f1+1
 17102  000FA2  C223  F0D8         	movff	printf@fval+2,___ftsub@f1+2
 17103  000FA6  C21D  F0BA         	movff	printf@val,___lltoft@c
 17104  000FAA  C21E  F0BB         	movff	printf@val+1,___lltoft@c+1
 17105  000FAE  C21F  F0BC         	movff	printf@val+2,___lltoft@c+2
 17106  000FB2  C220  F0BD         	movff	printf@val+3,___lltoft@c+3
 17107  000FB6  EC6B  F041         	call	___lltoft	;wreg free
 17108  000FBA  C0BA  F0D9         	movff	?___lltoft,___ftsub@f2
 17109  000FBE  C0BB  F0DA         	movff	?___lltoft+1,___ftsub@f2+1
 17110  000FC2  C0BC  F0DB         	movff	?___lltoft+2,___ftsub@f2+2
 17111  000FC6  ECD9  F044         	call	___ftsub	;wreg free
 17112  000FCA  C0D6  F221         	movff	?___ftsub,printf@fval
 17113  000FCE  C0D7  F222         	movff	?___ftsub+1,printf@fval+1
 17114  000FD2  C0D8  F223         	movff	?___ftsub+2,printf@fval+2
 17115                           
 17116                           ;doprnt.c: 1133: exp = 0;
 17117  000FD6  0E00               	movlw	0
 17118  000FD8  0102               	movlb	2	; () banked
 17119  000FDA  6F1A               	movwf	(printf@exp+1)& (0+255),b
 17120  000FDC  0E00               	movlw	0
 17121  000FDE  6F19               	movwf	printf@exp& (0+255),b
 17122  000FE0  D000               	goto	l13137
 17123  000FE2                     l13137:
 17124                           
 17125                           ; BSR set to: 2
 17126                           ;doprnt.c: 1134: }
 17127                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 17128  000FE2  0E01               	movlw	1
 17129  000FE4  0102               	movlb	2	; () banked
 17130  000FE6  6F26               	movwf	printf@c& (0+255),b
 17131  000FE8                     l13139:
 17132                           
 17133                           ; BSR set to: 2
 17134  000FE8  0E0A               	movlw	10
 17135  000FEA  0102               	movlb	2	; () banked
 17136  000FEC  1926               	xorwf	printf@c& (0+255),w,b
 17137  000FEE  B4D8               	btfsc	status,2,c
 17138  000FF0  D022               	goto	l13151
 17139  000FF2  D001               	goto	l13143
 17140                           
 17141                           ; BSR set to: 2
 17142  000FF4  D020               	goto	l13151
 17143  000FF6                     l13143:
 17144                           
 17145                           ; BSR set to: 2
 17146                           ;doprnt.c: 1137: if(val < dpowers[c])
 17147  000FF6  0102               	movlb	2	; () banked
 17148  000FF8  5126               	movf	printf@c& (0+255),w,b
 17149  000FFA  0D04               	mullw	4
 17150  000FFC  0E0E               	movlw	low _dpowers
 17151  000FFE  24F3               	addwf	prodl,w,c
 17152  001000  6EF6               	movwf	tblptrl,c
 17153  001002  0EFE               	movlw	high _dpowers
 17154  001004  20F4               	addwfc	prodh,w,c
 17155  001006  6EF7               	movwf	tblptrh,c
 17156  001008                     	if	0	;There are less than 3 active tblptr bytes
 17157  001008                     	endif
 17158  001008  0009               	tblrd		*+
 17159  00100A  50F5               	movf	tablat,w,c
 17160  00100C  0102               	movlb	2	; () banked
 17161  00100E  5D1D               	subwf	printf@val& (0+255),w,b
 17162  001010  0009               	tblrd		*+
 17163  001012  50F5               	movf	tablat,w,c
 17164  001014  0102               	movlb	2	; () banked
 17165  001016  591E               	subwfb	(printf@val+1)& (0+255),w,b
 17166  001018  0009               	tblrd		*+
 17167  00101A  50F5               	movf	tablat,w,c
 17168  00101C  0102               	movlb	2	; () banked
 17169  00101E  591F               	subwfb	(printf@val+2)& (0+255),w,b
 17170  001020  0009               	tblrd		*+
 17171  001022  50F5               	movf	tablat,w,c
 17172  001024  0102               	movlb	2	; () banked
 17173  001026  5920               	subwfb	(printf@val+3)& (0+255),w,b
 17174  001028  A0D8               	btfss	status,0,c
 17175  00102A  D005               	goto	l13151
 17176  00102C  D001               	goto	l13147
 17177                           
 17178                           ; BSR set to: 2
 17179                           ;doprnt.c: 1138: break;
 17180  00102E  D003               	goto	l13151
 17181  001030                     l13147:
 17182                           
 17183                           ; BSR set to: 2
 17184  001030  0102               	movlb	2	; () banked
 17185  001032  2B26               	incf	printf@c& (0+255),f,b
 17186  001034  D7D9               	goto	l13139
 17187  001036                     l13151:
 17188                           
 17189                           ; BSR set to: 2
 17190                           ;doprnt.c: 1142: width -= prec + c + exp;
 17191  001036  C226  F1D8         	movff	printf@c,??_printf
 17192  00103A  0101               	movlb	1	; () banked
 17193  00103C  6BD9               	clrf	(??_printf+1)& (0+255),b
 17194  00103E  BFD8               	btfsc	??_printf& (0+255),7,b
 17195  001040  07D9               	decf	(??_printf+1)& (0+255),f,b
 17196  001042  0102               	movlb	2	; () banked
 17197  001044  5124               	movf	printf@prec& (0+255),w,b
 17198  001046  0101               	movlb	1	; () banked
 17199  001048  27D8               	addwf	??_printf& (0+255),f,b
 17200  00104A  0102               	movlb	2	; () banked
 17201  00104C  5125               	movf	(printf@prec+1)& (0+255),w,b
 17202  00104E  0101               	movlb	1	; () banked
 17203  001050  23D9               	addwfc	(??_printf+1)& (0+255),f,b
 17204  001052  0102               	movlb	2	; () banked
 17205  001054  5119               	movf	printf@exp& (0+255),w,b
 17206  001056  0101               	movlb	1	; () banked
 17207  001058  27D8               	addwf	??_printf& (0+255),f,b
 17208  00105A  0102               	movlb	2	; () banked
 17209  00105C  511A               	movf	(printf@exp+1)& (0+255),w,b
 17210  00105E  0101               	movlb	1	; () banked
 17211  001060  23D9               	addwfc	(??_printf+1)& (0+255),f,b
 17212  001062  0101               	movlb	1	; () banked
 17213  001064  51D8               	movf	??_printf& (0+255),w,b
 17214  001066  0102               	movlb	2	; () banked
 17215  001068  5F1B               	subwf	printf@width& (0+255),f,b
 17216  00106A  0101               	movlb	1	; () banked
 17217  00106C  51D9               	movf	(??_printf+1)& (0+255),w,b
 17218  00106E  0102               	movlb	2	; () banked
 17219  001070  5B1C               	subwfb	(printf@width+1)& (0+255),f,b
 17220                           
 17221                           ; BSR set to: 2
 17222                           ;doprnt.c: 1143: if(
 17223                           ;doprnt.c: 1145: flag & 0x800 ||
 17224                           ;doprnt.c: 1147: prec)
 17225  001072  0102               	movlb	2	; () banked
 17226  001074  B728               	btfsc	(printf@flag+1)& (0+255),3,b
 17227  001076  D006               	goto	l13157
 17228                           
 17229                           ; BSR set to: 2
 17230  001078  0102               	movlb	2	; () banked
 17231  00107A  5124               	movf	printf@prec& (0+255),w,b
 17232  00107C  0102               	movlb	2	; () banked
 17233  00107E  1125               	iorwf	(printf@prec+1)& (0+255),w,b
 17234  001080  B4D8               	btfsc	status,2,c
 17235  001082  D005               	goto	l13159
 17236  001084                     l13157:
 17237                           
 17238                           ; BSR set to: 2
 17239                           ;doprnt.c: 1148: width--;
 17240  001084  0102               	movlb	2	; () banked
 17241  001086  071B               	decf	printf@width& (0+255),f,b
 17242  001088  A0D8               	btfss	status,0,c
 17243  00108A  071C               	decf	(printf@width+1)& (0+255),f,b
 17244  00108C  D000               	goto	l13159
 17245  00108E                     l13159:
 17246                           
 17247                           ; BSR set to: 2
 17248                           ;doprnt.c: 1149: if(flag & 0x03)
 17249  00108E  0E03               	movlw	3
 17250  001090  0102               	movlb	2	; () banked
 17251  001092  1527               	andwf	printf@flag& (0+255),w,b
 17252  001094  0101               	movlb	1	; () banked
 17253  001096  6FD8               	movwf	??_printf& (0+255),b
 17254  001098  0E00               	movlw	0
 17255  00109A  0102               	movlb	2	; () banked
 17256  00109C  1528               	andwf	(printf@flag+1)& (0+255),w,b
 17257  00109E  0101               	movlb	1	; () banked
 17258  0010A0  6FD9               	movwf	(??_printf+1)& (0+255),b
 17259  0010A2  0101               	movlb	1	; () banked
 17260  0010A4  51D8               	movf	??_printf& (0+255),w,b
 17261  0010A6  0101               	movlb	1	; () banked
 17262  0010A8  11D9               	iorwf	(??_printf+1)& (0+255),w,b
 17263  0010AA  B4D8               	btfsc	status,2,c
 17264  0010AC  D005               	goto	l13163
 17265                           
 17266                           ; BSR set to: 1
 17267                           ;doprnt.c: 1150: width--;
 17268  0010AE  0102               	movlb	2	; () banked
 17269  0010B0  071B               	decf	printf@width& (0+255),f,b
 17270  0010B2  A0D8               	btfss	status,0,c
 17271  0010B4  071C               	decf	(printf@width+1)& (0+255),f,b
 17272  0010B6  D000               	goto	l13163
 17273  0010B8                     l13163:
 17274                           
 17275                           ;doprnt.c: 1153: if(flag & 0x04) {
 17276  0010B8  0102               	movlb	2	; () banked
 17277  0010BA  A527               	btfss	printf@flag& (0+255),2,b
 17278  0010BC  D031               	goto	l1556
 17279                           
 17280                           ; BSR set to: 2
 17281                           ;doprnt.c: 1155: if(flag & 0x02)
 17282  0010BE  0102               	movlb	2	; () banked
 17283  0010C0  A327               	btfss	printf@flag& (0+255),1,b
 17284  0010C2  D013               	goto	l1557
 17285                           
 17286                           ; BSR set to: 2
 17287                           ;doprnt.c: 1159: (putch(flag & 0x01 ? '-' : '+') );
 17288  0010C4  0102               	movlb	2	; () banked
 17289  0010C6  B127               	btfsc	printf@flag& (0+255),0,b
 17290  0010C8  D005               	goto	l13171
 17291                           
 17292                           ; BSR set to: 2
 17293  0010CA  0E00               	movlw	0
 17294  0010CC  0102               	movlb	2	; () banked
 17295  0010CE  6F09               	movwf	(_printf$2209+1)& (0+255),b
 17296  0010D0  0E2B               	movlw	43
 17297  0010D2  D004               	goto	L15
 17298  0010D4                     l13171:
 17299                           
 17300                           ; BSR set to: 2
 17301  0010D4  0E00               	movlw	0
 17302  0010D6  0102               	movlb	2	; () banked
 17303  0010D8  6F09               	movwf	(_printf$2209+1)& (0+255),b
 17304  0010DA  0E2D               	movlw	45
 17305  0010DC                     L15:
 17306  0010DC  6F08               	movwf	_printf$2209& (0+255),b
 17307  0010DE  D000               	goto	l13173
 17308  0010E0                     l13173:
 17309                           
 17310                           ; BSR set to: 2
 17311  0010E0  0102               	movlb	2	; () banked
 17312  0010E2  5108               	movf	_printf$2209& (0+255),w,b
 17313  0010E4  EC3A  F049         	call	_putch
 17314  0010E8  D00F               	goto	l13181
 17315  0010EA                     l1557:
 17316                           
 17317                           ; BSR set to: 2
 17318                           ;doprnt.c: 1161: else
 17319                           ;doprnt.c: 1164: if(flag & 0x01)
 17320  0010EA  0102               	movlb	2	; () banked
 17321  0010EC  A127               	btfss	printf@flag& (0+255),0,b
 17322  0010EE  D00C               	goto	l13181
 17323                           
 17324                           ; BSR set to: 2
 17325                           ;doprnt.c: 1165: (putch(' ') );
 17326  0010F0  0E20               	movlw	32
 17327  0010F2  EC3A  F049         	call	_putch
 17328                           
 17329                           ;doprnt.c: 1168: while(width > 0) {
 17330  0010F6  D008               	goto	l13181
 17331  0010F8                     l13177:
 17332                           
 17333                           ;doprnt.c: 1169: (putch('0') );
 17334  0010F8  0E30               	movlw	48
 17335  0010FA  EC3A  F049         	call	_putch
 17336                           
 17337                           ;doprnt.c: 1170: width--;
 17338  0010FE  0102               	movlb	2	; () banked
 17339  001100  071B               	decf	printf@width& (0+255),f,b
 17340  001102  A0D8               	btfss	status,0,c
 17341  001104  071C               	decf	(printf@width+1)& (0+255),f,b
 17342  001106  D000               	goto	l13181
 17343  001108                     l13181:
 17344  001108  0102               	movlb	2	; () banked
 17345  00110A  BF1C               	btfsc	(printf@width+1)& (0+255),7,b
 17346  00110C  D085               	goto	l13207
 17347  00110E  0102               	movlb	2	; () banked
 17348  001110  511C               	movf	(printf@width+1)& (0+255),w,b
 17349  001112  E1F2               	bnz	l13177
 17350  001114  0102               	movlb	2	; () banked
 17351  001116  051B               	decf	printf@width& (0+255),w,b
 17352  001118  A0D8               	btfss	status,0,c
 17353  00111A  D07E               	goto	l13207
 17354  00111C  D7ED               	goto	l13177
 17355                           
 17356                           ; BSR set to: 2
 17357                           ;doprnt.c: 1171: }
 17358                           ;doprnt.c: 1173: } else
 17359  00111E  D07C               	goto	l13207
 17360  001120                     l1556:
 17361                           
 17362                           ; BSR set to: 2
 17363                           ;doprnt.c: 1175: {
 17364                           ;doprnt.c: 1177: if(!(flag & 0x08))
 17365  001120  0102               	movlb	2	; () banked
 17366  001122  A727               	btfss	printf@flag& (0+255),3,b
 17367  001124  D00A               	goto	l13189
 17368  001126  D013               	goto	l1568
 17369                           
 17370                           ; BSR set to: 2
 17371                           ;doprnt.c: 1180: while(width > 0) {
 17372  001128  D008               	goto	l13189
 17373  00112A                     l13185:
 17374                           
 17375                           ; BSR set to: 2
 17376                           ;doprnt.c: 1181: (putch(' ') );
 17377  00112A  0E20               	movlw	32
 17378  00112C  EC3A  F049         	call	_putch
 17379                           
 17380                           ;doprnt.c: 1182: width--;
 17381  001130  0102               	movlb	2	; () banked
 17382  001132  071B               	decf	printf@width& (0+255),f,b
 17383  001134  A0D8               	btfss	status,0,c
 17384  001136  071C               	decf	(printf@width+1)& (0+255),f,b
 17385  001138  D000               	goto	l13189
 17386  00113A                     l13189:
 17387                           
 17388                           ; BSR set to: 2
 17389  00113A  0102               	movlb	2	; () banked
 17390  00113C  BF1C               	btfsc	(printf@width+1)& (0+255),7,b
 17391  00113E  D007               	goto	l1568
 17392  001140  0102               	movlb	2	; () banked
 17393  001142  511C               	movf	(printf@width+1)& (0+255),w,b
 17394  001144  E1F2               	bnz	l13185
 17395  001146  0102               	movlb	2	; () banked
 17396  001148  051B               	decf	printf@width& (0+255),w,b
 17397  00114A  B0D8               	btfsc	status,0,c
 17398  00114C  D7EE               	goto	l13185
 17399  00114E                     l1568:
 17400                           
 17401                           ; BSR set to: 2
 17402                           ;doprnt.c: 1183: }
 17403                           ;doprnt.c: 1186: if(flag & 0x02)
 17404  00114E  0102               	movlb	2	; () banked
 17405  001150  A327               	btfss	printf@flag& (0+255),1,b
 17406  001152  D013               	goto	l1572
 17407                           
 17408                           ; BSR set to: 2
 17409                           ;doprnt.c: 1190: (putch(flag & 0x01 ? '-' : '+') );
 17410  001154  0102               	movlb	2	; () banked
 17411  001156  B127               	btfsc	printf@flag& (0+255),0,b
 17412  001158  D005               	goto	l13195
 17413                           
 17414                           ; BSR set to: 2
 17415  00115A  0E00               	movlw	0
 17416  00115C  0102               	movlb	2	; () banked
 17417  00115E  6F0B               	movwf	(_printf$2210+1)& (0+255),b
 17418  001160  0E2B               	movlw	43
 17419  001162  D004               	goto	L16
 17420  001164                     l13195:
 17421                           
 17422                           ; BSR set to: 2
 17423  001164  0E00               	movlw	0
 17424  001166  0102               	movlb	2	; () banked
 17425  001168  6F0B               	movwf	(_printf$2210+1)& (0+255),b
 17426  00116A  0E2D               	movlw	45
 17427  00116C                     L16:
 17428  00116C  6F0A               	movwf	_printf$2210& (0+255),b
 17429  00116E  D000               	goto	l13197
 17430  001170                     l13197:
 17431                           
 17432                           ; BSR set to: 2
 17433  001170  0102               	movlb	2	; () banked
 17434  001172  510A               	movf	_printf$2210& (0+255),w,b
 17435  001174  EC3A  F049         	call	_putch
 17436  001178  D04F               	goto	l13207
 17437  00117A                     l1572:
 17438                           
 17439                           ; BSR set to: 2
 17440                           ;doprnt.c: 1192: else if(flag & 0x01)
 17441  00117A  0102               	movlb	2	; () banked
 17442  00117C  A127               	btfss	printf@flag& (0+255),0,b
 17443  00117E  D04C               	goto	l13207
 17444                           
 17445                           ; BSR set to: 2
 17446                           ;doprnt.c: 1193: (putch(' ') );
 17447  001180  0E20               	movlw	32
 17448  001182  EC3A  F049         	call	_putch
 17449                           
 17450                           ;doprnt.c: 1195: }
 17451                           ;doprnt.c: 1196: while(c--) {
 17452  001186  D048               	goto	l13207
 17453  001188                     l13201:
 17454                           
 17455                           ;doprnt.c: 1200: {
 17456                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 17457  001188  C21D  F08E         	movff	printf@val,___lldiv@dividend
 17458  00118C  C21E  F08F         	movff	printf@val+1,___lldiv@dividend+1
 17459  001190  C21F  F090         	movff	printf@val+2,___lldiv@dividend+2
 17460  001194  C220  F091         	movff	printf@val+3,___lldiv@dividend+3
 17461  001198  0102               	movlb	2	; () banked
 17462  00119A  5126               	movf	printf@c& (0+255),w,b
 17463  00119C  0D04               	mullw	4
 17464  00119E  0E0E               	movlw	low _dpowers
 17465  0011A0  24F3               	addwf	prodl,w,c
 17466  0011A2  6EF6               	movwf	tblptrl,c
 17467  0011A4  0EFE               	movlw	high _dpowers
 17468  0011A6  20F4               	addwfc	prodh,w,c
 17469  0011A8  6EF7               	movwf	tblptrh,c
 17470  0011AA                     	if	0	;There are less than 3 active tblptr bytes
 17471  0011AA                     	endif
 17472  0011AA  0009               	tblrd		*+
 17473  0011AC  CFF5 F092          	movff	tablat,___lldiv@divisor
 17474  0011B0  0009               	tblrd		*+
 17475  0011B2  CFF5 F093          	movff	tablat,___lldiv@divisor+1
 17476  0011B6  0009               	tblrd		*+
 17477  0011B8  CFF5 F094          	movff	tablat,___lldiv@divisor+2
 17478  0011BC  000A               	tblrd		*-
 17479  0011BE  CFF5 F095          	movff	tablat,___lldiv@divisor+3
 17480  0011C2  EC43  F03B         	call	___lldiv	;wreg free
 17481  0011C6  C08E  F215         	movff	?___lldiv,printf@tmpval
 17482  0011CA  C08F  F216         	movff	?___lldiv+1,printf@tmpval+1
 17483  0011CE  C090  F217         	movff	?___lldiv+2,printf@tmpval+2
 17484  0011D2  C091  F218         	movff	?___lldiv+3,printf@tmpval+3
 17485                           
 17486                           ;doprnt.c: 1202: tmpval.vd %= 10;
 17487  0011D6  C215  F09B         	movff	printf@tmpval,___llmod@dividend
 17488  0011DA  C216  F09C         	movff	printf@tmpval+1,___llmod@dividend+1
 17489  0011DE  C217  F09D         	movff	printf@tmpval+2,___llmod@dividend+2
 17490  0011E2  C218  F09E         	movff	printf@tmpval+3,___llmod@dividend+3
 17491  0011E6  0E0A               	movlw	10
 17492  0011E8  0100               	movlb	0	; () banked
 17493  0011EA  6F9F               	movwf	___llmod@divisor& (0+255),b
 17494  0011EC  0E00               	movlw	0
 17495  0011EE  6FA0               	movwf	(___llmod@divisor+1)& (0+255),b
 17496  0011F0  0E00               	movlw	0
 17497  0011F2  6FA1               	movwf	(___llmod@divisor+2)& (0+255),b
 17498  0011F4  0E00               	movlw	0
 17499  0011F6  6FA2               	movwf	(___llmod@divisor+3)& (0+255),b
 17500  0011F8  EC8E  F03E         	call	___llmod	;wreg free
 17501  0011FC  C09B  F215         	movff	?___llmod,printf@tmpval
 17502  001200  C09C  F216         	movff	?___llmod+1,printf@tmpval+1
 17503  001204  C09D  F217         	movff	?___llmod+2,printf@tmpval+2
 17504  001208  C09E  F218         	movff	?___llmod+3,printf@tmpval+3
 17505                           
 17506                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 17507  00120C  0102               	movlb	2	; () banked
 17508  00120E  5115               	movf	printf@tmpval& (0+255),w,b
 17509  001210  0F30               	addlw	48
 17510  001212  EC3A  F049         	call	_putch
 17511  001216  D000               	goto	l13207
 17512  001218                     l13207:
 17513  001218  0102               	movlb	2	; () banked
 17514  00121A  0726               	decf	printf@c& (0+255),f,b
 17515  00121C  0102               	movlb	2	; () banked
 17516  00121E  2926               	incf	printf@c& (0+255),w,b
 17517  001220  B4D8               	btfsc	status,2,c
 17518  001222  D00A               	goto	l13213
 17519  001224  D7B1               	goto	l13201
 17520                           
 17521                           ; BSR set to: 2
 17522                           ;doprnt.c: 1204: }
 17523                           ;doprnt.c: 1206: }
 17524                           ;doprnt.c: 1207: while(exp > 0) {
 17525  001226  D008               	goto	l13213
 17526  001228                     l13209:
 17527                           
 17528                           ; BSR set to: 2
 17529                           ;doprnt.c: 1208: (putch('0') );
 17530  001228  0E30               	movlw	48
 17531  00122A  EC3A  F049         	call	_putch
 17532                           
 17533                           ;doprnt.c: 1209: exp--;
 17534  00122E  0102               	movlb	2	; () banked
 17535  001230  0719               	decf	printf@exp& (0+255),f,b
 17536  001232  A0D8               	btfss	status,0,c
 17537  001234  071A               	decf	(printf@exp+1)& (0+255),f,b
 17538  001236  D000               	goto	l13213
 17539  001238                     l13213:
 17540                           
 17541                           ; BSR set to: 2
 17542  001238  0102               	movlb	2	; () banked
 17543  00123A  BF1A               	btfsc	(printf@exp+1)& (0+255),7,b
 17544  00123C  D007               	goto	l13215
 17545  00123E  0102               	movlb	2	; () banked
 17546  001240  511A               	movf	(printf@exp+1)& (0+255),w,b
 17547  001242  E1F2               	bnz	l13209
 17548  001244  0102               	movlb	2	; () banked
 17549  001246  0519               	decf	printf@exp& (0+255),w,b
 17550  001248  B0D8               	btfsc	status,0,c
 17551  00124A  D7EE               	goto	l13209
 17552  00124C                     l13215:
 17553                           
 17554                           ; BSR set to: 2
 17555                           ;doprnt.c: 1210: }
 17556                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 17557  00124C  0102               	movlb	2	; () banked
 17558  00124E  BF25               	btfsc	(printf@prec+1)& (0+255),7,b
 17559  001250  D00C               	goto	l1585
 17560  001252  0102               	movlb	2	; () banked
 17561  001254  5125               	movf	(printf@prec+1)& (0+255),w,b
 17562  001256  E105               	bnz	u15050
 17563  001258  0E09               	movlw	9
 17564  00125A  0102               	movlb	2	; () banked
 17565  00125C  5D24               	subwf	printf@prec& (0+255),w,b
 17566  00125E  A0D8               	btfss	status,0,c
 17567  001260  D004               	goto	l1585
 17568  001262                     u15050:
 17569                           
 17570                           ; BSR set to: 2
 17571                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 17572  001262  0E08               	movlw	8
 17573  001264  0102               	movlb	2	; () banked
 17574  001266  6F26               	movwf	printf@c& (0+255),b
 17575  001268  D003               	goto	l13219
 17576  00126A                     l1585:
 17577                           
 17578                           ; BSR set to: 2
 17579                           ;doprnt.c: 1213: else
 17580                           ;doprnt.c: 1214: c = prec;
 17581  00126A  C224  F226         	movff	printf@prec,printf@c
 17582  00126E  D000               	goto	l13219
 17583  001270                     l13219:
 17584                           
 17585                           ; BSR set to: 2
 17586                           ;doprnt.c: 1215: prec -= c;
 17587  001270  0102               	movlb	2	; () banked
 17588  001272  5126               	movf	printf@c& (0+255),w,b
 17589  001274  0102               	movlb	2	; () banked
 17590  001276  5F24               	subwf	printf@prec& (0+255),f,b
 17591  001278  0E00               	movlw	0
 17592  00127A  0102               	movlb	2	; () banked
 17593  00127C  BF26               	btfsc	printf@c& (0+255),7,b
 17594  00127E  0EFF               	movlw	255
 17595  001280  0102               	movlb	2	; () banked
 17596  001282  5B25               	subwfb	(printf@prec+1)& (0+255),f,b
 17597                           
 17598                           ; BSR set to: 2
 17599                           ;doprnt.c: 1217: if(c || flag & 0x800)
 17600  001284  0102               	movlb	2	; () banked
 17601  001286  5126               	movf	printf@c& (0+255),w,b
 17602  001288  0102               	movlb	2	; () banked
 17603  00128A  A4D8               	btfss	status,2,c
 17604  00128C  D003               	goto	l13225
 17605                           
 17606                           ; BSR set to: 2
 17607  00128E  0102               	movlb	2	; () banked
 17608  001290  A728               	btfss	(printf@flag+1)& (0+255),3,b
 17609  001292  D004               	goto	l13227
 17610  001294                     l13225:
 17611                           
 17612                           ; BSR set to: 2
 17613                           ;doprnt.c: 1221: (putch('.') );
 17614  001294  0E2E               	movlw	46
 17615  001296  EC3A  F049         	call	_putch
 17616  00129A  D000               	goto	l13227
 17617  00129C                     l13227:
 17618                           
 17619                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 17620  00129C  0102               	movlb	2	; () banked
 17621  00129E  5126               	movf	printf@c& (0+255),w,b
 17622  0012A0  EC5E  F01B         	call	_scale
 17623  0012A4  C0C0  F200         	movff	?_scale,_printf$3114
 17624  0012A8  C0C1  F201         	movff	?_scale+1,_printf$3114+1
 17625  0012AC  C0C2  F202         	movff	?_scale+2,_printf$3114+2
 17626                           
 17627                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 17628  0012B0  C221  F09F         	movff	printf@fval,___ftmul@f2
 17629  0012B4  C222  F0A0         	movff	printf@fval+1,___ftmul@f2+1
 17630  0012B8  C223  F0A1         	movff	printf@fval+2,___ftmul@f2+2
 17631  0012BC  C200  F09C         	movff	_printf$3114,___ftmul@f1
 17632  0012C0  C201  F09D         	movff	_printf$3114+1,___ftmul@f1+1
 17633  0012C4  C202  F09E         	movff	_printf$3114+2,___ftmul@f1+2
 17634  0012C8  ECDE  F02E         	call	___ftmul	;wreg free
 17635  0012CC  C09C  F0AB         	movff	?___ftmul,___fttol@f1
 17636  0012D0  C09D  F0AC         	movff	?___ftmul+1,___fttol@f1+1
 17637  0012D4  C09E  F0AD         	movff	?___ftmul+2,___fttol@f1+2
 17638  0012D8  EC72  F031         	call	___fttol	;wreg free
 17639  0012DC  C0AB  F21D         	movff	?___fttol,printf@val
 17640  0012E0  C0AC  F21E         	movff	?___fttol+1,printf@val+1
 17641  0012E4  C0AD  F21F         	movff	?___fttol+2,printf@val+2
 17642  0012E8  C0AE  F220         	movff	?___fttol+3,printf@val+3
 17643                           
 17644                           ;doprnt.c: 1228: while(c--) {
 17645  0012EC  D06F               	goto	l13237
 17646  0012EE                     l13231:
 17647                           
 17648                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 17649  0012EE  C21D  F08E         	movff	printf@val,___lldiv@dividend
 17650  0012F2  C21E  F08F         	movff	printf@val+1,___lldiv@dividend+1
 17651  0012F6  C21F  F090         	movff	printf@val+2,___lldiv@dividend+2
 17652  0012FA  C220  F091         	movff	printf@val+3,___lldiv@dividend+3
 17653  0012FE  0102               	movlb	2	; () banked
 17654  001300  5126               	movf	printf@c& (0+255),w,b
 17655  001302  0D04               	mullw	4
 17656  001304  0E0E               	movlw	low _dpowers
 17657  001306  24F3               	addwf	prodl,w,c
 17658  001308  6EF6               	movwf	tblptrl,c
 17659  00130A  0EFE               	movlw	high _dpowers
 17660  00130C  20F4               	addwfc	prodh,w,c
 17661  00130E  6EF7               	movwf	tblptrh,c
 17662  001310                     	if	0	;There are less than 3 active tblptr bytes
 17663  001310                     	endif
 17664  001310  0009               	tblrd		*+
 17665  001312  CFF5 F092          	movff	tablat,___lldiv@divisor
 17666  001316  0009               	tblrd		*+
 17667  001318  CFF5 F093          	movff	tablat,___lldiv@divisor+1
 17668  00131C  0009               	tblrd		*+
 17669  00131E  CFF5 F094          	movff	tablat,___lldiv@divisor+2
 17670  001322  000A               	tblrd		*-
 17671  001324  CFF5 F095          	movff	tablat,___lldiv@divisor+3
 17672  001328  EC43  F03B         	call	___lldiv	;wreg free
 17673  00132C  C08E  F215         	movff	?___lldiv,printf@tmpval
 17674  001330  C08F  F216         	movff	?___lldiv+1,printf@tmpval+1
 17675  001334  C090  F217         	movff	?___lldiv+2,printf@tmpval+2
 17676  001338  C091  F218         	movff	?___lldiv+3,printf@tmpval+3
 17677                           
 17678                           ;doprnt.c: 1230: tmpval.vd %= 10;
 17679  00133C  C215  F09B         	movff	printf@tmpval,___llmod@dividend
 17680  001340  C216  F09C         	movff	printf@tmpval+1,___llmod@dividend+1
 17681  001344  C217  F09D         	movff	printf@tmpval+2,___llmod@dividend+2
 17682  001348  C218  F09E         	movff	printf@tmpval+3,___llmod@dividend+3
 17683  00134C  0E0A               	movlw	10
 17684  00134E  0100               	movlb	0	; () banked
 17685  001350  6F9F               	movwf	___llmod@divisor& (0+255),b
 17686  001352  0E00               	movlw	0
 17687  001354  6FA0               	movwf	(___llmod@divisor+1)& (0+255),b
 17688  001356  0E00               	movlw	0
 17689  001358  6FA1               	movwf	(___llmod@divisor+2)& (0+255),b
 17690  00135A  0E00               	movlw	0
 17691  00135C  6FA2               	movwf	(___llmod@divisor+3)& (0+255),b
 17692  00135E  EC8E  F03E         	call	___llmod	;wreg free
 17693  001362  C09B  F215         	movff	?___llmod,printf@tmpval
 17694  001366  C09C  F216         	movff	?___llmod+1,printf@tmpval+1
 17695  00136A  C09D  F217         	movff	?___llmod+2,printf@tmpval+2
 17696  00136E  C09E  F218         	movff	?___llmod+3,printf@tmpval+3
 17697                           
 17698                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 17699  001372  0102               	movlb	2	; () banked
 17700  001374  5115               	movf	printf@tmpval& (0+255),w,b
 17701  001376  0F30               	addlw	48
 17702  001378  EC3A  F049         	call	_putch
 17703                           
 17704                           ;doprnt.c: 1232: val %= dpowers[c];
 17705  00137C  C21D  F09B         	movff	printf@val,___llmod@dividend
 17706  001380  C21E  F09C         	movff	printf@val+1,___llmod@dividend+1
 17707  001384  C21F  F09D         	movff	printf@val+2,___llmod@dividend+2
 17708  001388  C220  F09E         	movff	printf@val+3,___llmod@dividend+3
 17709  00138C  0102               	movlb	2	; () banked
 17710  00138E  5126               	movf	printf@c& (0+255),w,b
 17711  001390  0D04               	mullw	4
 17712  001392  0E0E               	movlw	low _dpowers
 17713  001394  24F3               	addwf	prodl,w,c
 17714  001396  6EF6               	movwf	tblptrl,c
 17715  001398  0EFE               	movlw	high _dpowers
 17716  00139A  20F4               	addwfc	prodh,w,c
 17717  00139C  6EF7               	movwf	tblptrh,c
 17718  00139E                     	if	0	;There are less than 3 active tblptr bytes
 17719  00139E                     	endif
 17720  00139E  0009               	tblrd		*+
 17721  0013A0  CFF5 F09F          	movff	tablat,___llmod@divisor
 17722  0013A4  0009               	tblrd		*+
 17723  0013A6  CFF5 F0A0          	movff	tablat,___llmod@divisor+1
 17724  0013AA  0009               	tblrd		*+
 17725  0013AC  CFF5 F0A1          	movff	tablat,___llmod@divisor+2
 17726  0013B0  000A               	tblrd		*-
 17727  0013B2  CFF5 F0A2          	movff	tablat,___llmod@divisor+3
 17728  0013B6  EC8E  F03E         	call	___llmod	;wreg free
 17729  0013BA  C09B  F21D         	movff	?___llmod,printf@val
 17730  0013BE  C09C  F21E         	movff	?___llmod+1,printf@val+1
 17731  0013C2  C09D  F21F         	movff	?___llmod+2,printf@val+2
 17732  0013C6  C09E  F220         	movff	?___llmod+3,printf@val+3
 17733  0013CA  D000               	goto	l13237
 17734  0013CC                     l13237:
 17735  0013CC  0102               	movlb	2	; () banked
 17736  0013CE  0726               	decf	printf@c& (0+255),f,b
 17737  0013D0  0102               	movlb	2	; () banked
 17738  0013D2  2926               	incf	printf@c& (0+255),w,b
 17739  0013D4  B4D8               	btfsc	status,2,c
 17740  0013D6  D00A               	goto	l13243
 17741  0013D8  D78A               	goto	l13231
 17742                           
 17743                           ; BSR set to: 2
 17744                           ;doprnt.c: 1233: }
 17745                           ;doprnt.c: 1235: while(prec) {
 17746  0013DA  D008               	goto	l13243
 17747  0013DC                     l13239:
 17748                           
 17749                           ; BSR set to: 2
 17750                           ;doprnt.c: 1236: (putch('0') );
 17751  0013DC  0E30               	movlw	48
 17752  0013DE  EC3A  F049         	call	_putch
 17753                           
 17754                           ;doprnt.c: 1237: prec--;
 17755  0013E2  0102               	movlb	2	; () banked
 17756  0013E4  0724               	decf	printf@prec& (0+255),f,b
 17757  0013E6  A0D8               	btfss	status,0,c
 17758  0013E8  0725               	decf	(printf@prec+1)& (0+255),f,b
 17759  0013EA  D000               	goto	l13243
 17760  0013EC                     l13243:
 17761                           
 17762                           ; BSR set to: 2
 17763  0013EC  0102               	movlb	2	; () banked
 17764  0013EE  5124               	movf	printf@prec& (0+255),w,b
 17765  0013F0  0102               	movlb	2	; () banked
 17766  0013F2  1125               	iorwf	(printf@prec+1)& (0+255),w,b
 17767  0013F4  A4D8               	btfss	status,2,c
 17768  0013F6  D7F2               	goto	l13239
 17769                           
 17770                           ; BSR set to: 2
 17771                           ;doprnt.c: 1238: }
 17772                           ;doprnt.c: 1240: if((flag & 0x08) && width > 0)
 17773  0013F8  0102               	movlb	2	; () banked
 17774  0013FA  A727               	btfss	printf@flag& (0+255),3,b
 17775  0013FC  D2EA               	goto	l13405
 17776                           
 17777                           ; BSR set to: 2
 17778  0013FE  0102               	movlb	2	; () banked
 17779  001400  BF1C               	btfsc	(printf@width+1)& (0+255),7,b
 17780  001402  D2E7               	goto	l13405
 17781  001404  0102               	movlb	2	; () banked
 17782  001406  511C               	movf	(printf@width+1)& (0+255),w,b
 17783  001408  E106               	bnz	l13247
 17784  00140A  0102               	movlb	2	; () banked
 17785  00140C  051B               	decf	printf@width& (0+255),w,b
 17786  00140E  B0D8               	btfsc	status,0,c
 17787  001410  D002               	goto	l13247
 17788  001412  D2DF               	goto	l13405
 17789  001414  D000               	goto	l13247
 17790  001416                     l13247:
 17791                           
 17792                           ; BSR set to: 2
 17793                           ;doprnt.c: 1242: (putch(' ') );
 17794  001416  0E20               	movlw	32
 17795  001418  EC3A  F049         	call	_putch
 17796                           
 17797                           ;doprnt.c: 1243: while(--width);
 17798  00141C  0102               	movlb	2	; () banked
 17799  00141E  071B               	decf	printf@width& (0+255),f,b
 17800  001420  A0D8               	btfss	status,0,c
 17801  001422  071C               	decf	(printf@width+1)& (0+255),f,b
 17802  001424  0102               	movlb	2	; () banked
 17803  001426  511B               	movf	printf@width& (0+255),w,b
 17804  001428  0102               	movlb	2	; () banked
 17805  00142A  111C               	iorwf	(printf@width+1)& (0+255),w,b
 17806  00142C  B4D8               	btfsc	status,2,c
 17807  00142E  D2D1               	goto	l13405
 17808  001430  D7F2               	goto	l13247
 17809                           
 17810                           ; BSR set to: 2
 17811                           ;doprnt.c: 1245: continue;
 17812                           
 17813                           ; BSR set to: 2
 17814  001432  D2CF               	goto	l13405
 17815  001434                     l1451:
 17816                           
 17817                           ; BSR set to: 2
 17818                           ;doprnt.c: 1246: }
 17819                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
 17820  001434  0102               	movlb	2	; () banked
 17821  001436  BF27               	btfsc	printf@flag& (0+255),7,b
 17822  001438  D023               	goto	l13261
 17823                           
 17824                           ; BSR set to: 2
 17825                           ;doprnt.c: 1253: {
 17826                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 17827  00143A  C213  FFD9         	movff	printf@ap,fsr2l
 17828  00143E  C214  FFDA         	movff	printf@ap+1,fsr2h
 17829  001442  CFDE F21D          	movff	postinc2,printf@val
 17830  001446  CFDD F21E          	movff	postdec2,printf@val+1
 17831  00144A  0102               	movlb	2	; () banked
 17832  00144C  0E00               	movlw	0
 17833  00144E  BF1E               	btfsc	(printf@val+1)& (0+255),7,b
 17834  001450  0EFF               	movlw	-1
 17835  001452  6F1F               	movwf	(printf@val+2)& (0+255),b
 17836  001454  6F20               	movwf	(printf@val+3)& (0+255),b
 17837                           
 17838                           ; BSR set to: 2
 17839  001456  0E02               	movlw	2
 17840  001458  0102               	movlb	2	; () banked
 17841  00145A  2713               	addwf	printf@ap& (0+255),f,b
 17842  00145C  0E00               	movlw	0
 17843  00145E  2314               	addwfc	(printf@ap+1)& (0+255),f,b
 17844                           
 17845                           ; BSR set to: 2
 17846                           ;doprnt.c: 1261: if((long)val < 0) {
 17847  001460  0102               	movlb	2	; () banked
 17848  001462  AF20               	btfss	(printf@val+3)& (0+255),7,b
 17849  001464  D022               	goto	l13265
 17850                           
 17851                           ; BSR set to: 2
 17852                           ;doprnt.c: 1262: flag |= 0x03;
 17853  001466  0E03               	movlw	3
 17854  001468  0102               	movlb	2	; () banked
 17855  00146A  1327               	iorwf	printf@flag& (0+255),f,b
 17856                           
 17857                           ; BSR set to: 2
 17858                           ;doprnt.c: 1263: val = -val;
 17859  00146C  0102               	movlb	2	; () banked
 17860  00146E  1F20               	comf	(printf@val+3)& (0+255),f,b
 17861  001470  1F1F               	comf	(printf@val+2)& (0+255),f,b
 17862  001472  1F1E               	comf	(printf@val+1)& (0+255),f,b
 17863  001474  6D1D               	negf	printf@val& (0+255),b
 17864  001476  0E00               	movlw	0
 17865  001478  231E               	addwfc	(printf@val+1)& (0+255),f,b
 17866  00147A  231F               	addwfc	(printf@val+2)& (0+255),f,b
 17867  00147C  2320               	addwfc	(printf@val+3)& (0+255),f,b
 17868                           
 17869                           ; BSR set to: 2
 17870                           ;doprnt.c: 1264: }
 17871                           ;doprnt.c: 1266: }
 17872  00147E  D015               	goto	l13265
 17873  001480                     l13261:
 17874                           
 17875                           ; BSR set to: 2
 17876                           ;doprnt.c: 1268: else
 17877                           ;doprnt.c: 1273: {
 17878                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 17879  001480  C213  FFD9         	movff	printf@ap,fsr2l
 17880  001484  C214  FFDA         	movff	printf@ap+1,fsr2h
 17881  001488  CFDE F1D8          	movff	postinc2,??_printf
 17882  00148C  CFDD F1D9          	movff	postdec2,??_printf+1
 17883  001490  C1D8  F21D         	movff	??_printf,printf@val
 17884  001494  C1D9  F21E         	movff	??_printf+1,printf@val+1
 17885  001498  0102               	movlb	2	; () banked
 17886  00149A  6B1F               	clrf	(printf@val+2)& (0+255),b
 17887  00149C  6B20               	clrf	(printf@val+3)& (0+255),b
 17888                           
 17889                           ; BSR set to: 2
 17890  00149E  0E02               	movlw	2
 17891  0014A0  0102               	movlb	2	; () banked
 17892  0014A2  2713               	addwf	printf@ap& (0+255),f,b
 17893  0014A4  0E00               	movlw	0
 17894  0014A6  2314               	addwfc	(printf@ap+1)& (0+255),f,b
 17895  0014A8  D000               	goto	l13265
 17896  0014AA                     l13265:
 17897                           
 17898                           ; BSR set to: 2
 17899                           ;doprnt.c: 1287: }
 17900                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 17901  0014AA  0102               	movlb	2	; () banked
 17902  0014AC  5124               	movf	printf@prec& (0+255),w,b
 17903  0014AE  0102               	movlb	2	; () banked
 17904  0014B0  1125               	iorwf	(printf@prec+1)& (0+255),w,b
 17905  0014B2  A4D8               	btfss	status,2,c
 17906  0014B4  D064               	goto	l13301
 17907                           
 17908                           ; BSR set to: 2
 17909  0014B6  0102               	movlb	2	; () banked
 17910  0014B8  511D               	movf	printf@val& (0+255),w,b
 17911  0014BA  0102               	movlb	2	; () banked
 17912  0014BC  111E               	iorwf	(printf@val+1)& (0+255),w,b
 17913  0014BE  0102               	movlb	2	; () banked
 17914  0014C0  111F               	iorwf	(printf@val+2)& (0+255),w,b
 17915  0014C2  0102               	movlb	2	; () banked
 17916  0014C4  1120               	iorwf	(printf@val+3)& (0+255),w,b
 17917  0014C6  A4D8               	btfss	status,2,c
 17918  0014C8  D05A               	goto	l13301
 17919                           
 17920                           ; BSR set to: 2
 17921                           ;doprnt.c: 1291: prec++;
 17922  0014CA  0102               	movlb	2	; () banked
 17923  0014CC  4B24               	infsnz	printf@prec& (0+255),f,b
 17924  0014CE  2B25               	incf	(printf@prec+1)& (0+255),f,b
 17925                           
 17926                           ; BSR set to: 2
 17927                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
 17928  0014D0  D056               	goto	l13301
 17929  0014D2                     l13271:
 17930                           
 17931                           ; BSR set to: 2
 17932                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 17933  0014D2  0E01               	movlw	1
 17934  0014D4  0102               	movlb	2	; () banked
 17935  0014D6  6F26               	movwf	printf@c& (0+255),b
 17936  0014D8                     l13273:
 17937                           
 17938                           ; BSR set to: 2
 17939  0014D8  0E0A               	movlw	10
 17940  0014DA  0102               	movlb	2	; () banked
 17941  0014DC  1926               	xorwf	printf@c& (0+255),w,b
 17942  0014DE  B4D8               	btfsc	status,2,c
 17943  0014E0  D058               	goto	l13303
 17944  0014E2  D001               	goto	l13277
 17945                           
 17946                           ; BSR set to: 2
 17947  0014E4  D056               	goto	l13303
 17948  0014E6                     l13277:
 17949                           
 17950                           ; BSR set to: 2
 17951                           ;doprnt.c: 1306: if(val < dpowers[c])
 17952  0014E6  0102               	movlb	2	; () banked
 17953  0014E8  5126               	movf	printf@c& (0+255),w,b
 17954  0014EA  0D04               	mullw	4
 17955  0014EC  0E0E               	movlw	low _dpowers
 17956  0014EE  24F3               	addwf	prodl,w,c
 17957  0014F0  6EF6               	movwf	tblptrl,c
 17958  0014F2  0EFE               	movlw	high _dpowers
 17959  0014F4  20F4               	addwfc	prodh,w,c
 17960  0014F6  6EF7               	movwf	tblptrh,c
 17961  0014F8                     	if	0	;There are less than 3 active tblptr bytes
 17962  0014F8                     	endif
 17963  0014F8  0009               	tblrd		*+
 17964  0014FA  50F5               	movf	tablat,w,c
 17965  0014FC  0102               	movlb	2	; () banked
 17966  0014FE  5D1D               	subwf	printf@val& (0+255),w,b
 17967  001500  0009               	tblrd		*+
 17968  001502  50F5               	movf	tablat,w,c
 17969  001504  0102               	movlb	2	; () banked
 17970  001506  591E               	subwfb	(printf@val+1)& (0+255),w,b
 17971  001508  0009               	tblrd		*+
 17972  00150A  50F5               	movf	tablat,w,c
 17973  00150C  0102               	movlb	2	; () banked
 17974  00150E  591F               	subwfb	(printf@val+2)& (0+255),w,b
 17975  001510  0009               	tblrd		*+
 17976  001512  50F5               	movf	tablat,w,c
 17977  001514  0102               	movlb	2	; () banked
 17978  001516  5920               	subwfb	(printf@val+3)& (0+255),w,b
 17979  001518  A0D8               	btfss	status,0,c
 17980  00151A  D03B               	goto	l13303
 17981  00151C  D001               	goto	l13281
 17982                           
 17983                           ; BSR set to: 2
 17984                           ;doprnt.c: 1307: break;
 17985  00151E  D039               	goto	l13303
 17986  001520                     l13281:
 17987                           
 17988                           ; BSR set to: 2
 17989  001520  0102               	movlb	2	; () banked
 17990  001522  2B26               	incf	printf@c& (0+255),f,b
 17991  001524  D7D9               	goto	l13273
 17992                           
 17993                           ; BSR set to: 2
 17994                           ;doprnt.c: 1309: break;
 17995                           
 17996                           ; BSR set to: 2
 17997  001526  D035               	goto	l13303
 17998  001528                     l13285:
 17999                           
 18000                           ; BSR set to: 2
 18001                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 18002  001528  0E01               	movlw	1
 18003  00152A  0102               	movlb	2	; () banked
 18004  00152C  6F26               	movwf	printf@c& (0+255),b
 18005  00152E                     l13287:
 18006                           
 18007                           ; BSR set to: 2
 18008  00152E  0E08               	movlw	8
 18009  001530  0102               	movlb	2	; () banked
 18010  001532  1926               	xorwf	printf@c& (0+255),w,b
 18011  001534  B4D8               	btfsc	status,2,c
 18012  001536  D02D               	goto	l13303
 18013  001538  D001               	goto	l13291
 18014                           
 18015                           ; BSR set to: 2
 18016  00153A  D02B               	goto	l13303
 18017  00153C                     l13291:
 18018                           
 18019                           ; BSR set to: 2
 18020                           ;doprnt.c: 1317: if(val < hexpowers[c])
 18021  00153C  0102               	movlb	2	; () banked
 18022  00153E  5126               	movf	printf@c& (0+255),w,b
 18023  001540  0D04               	mullw	4
 18024  001542  0E84               	movlw	low _hexpowers
 18025  001544  24F3               	addwf	prodl,w,c
 18026  001546  6EF6               	movwf	tblptrl,c
 18027  001548  0EFE               	movlw	high _hexpowers
 18028  00154A  20F4               	addwfc	prodh,w,c
 18029  00154C  6EF7               	movwf	tblptrh,c
 18030  00154E                     	if	0	;There are less than 3 active tblptr bytes
 18031  00154E                     	endif
 18032  00154E  0009               	tblrd		*+
 18033  001550  50F5               	movf	tablat,w,c
 18034  001552  0102               	movlb	2	; () banked
 18035  001554  5D1D               	subwf	printf@val& (0+255),w,b
 18036  001556  0009               	tblrd		*+
 18037  001558  50F5               	movf	tablat,w,c
 18038  00155A  0102               	movlb	2	; () banked
 18039  00155C  591E               	subwfb	(printf@val+1)& (0+255),w,b
 18040  00155E  0009               	tblrd		*+
 18041  001560  50F5               	movf	tablat,w,c
 18042  001562  0102               	movlb	2	; () banked
 18043  001564  591F               	subwfb	(printf@val+2)& (0+255),w,b
 18044  001566  0009               	tblrd		*+
 18045  001568  50F5               	movf	tablat,w,c
 18046  00156A  0102               	movlb	2	; () banked
 18047  00156C  5920               	subwfb	(printf@val+3)& (0+255),w,b
 18048  00156E  A0D8               	btfss	status,0,c
 18049  001570  D010               	goto	l13303
 18050  001572  D001               	goto	l13295
 18051                           
 18052                           ; BSR set to: 2
 18053                           ;doprnt.c: 1318: break;
 18054  001574  D00E               	goto	l13303
 18055  001576                     l13295:
 18056                           
 18057                           ; BSR set to: 2
 18058  001576  0102               	movlb	2	; () banked
 18059  001578  2B26               	incf	printf@c& (0+255),f,b
 18060  00157A  D7D9               	goto	l13287
 18061                           
 18062                           ; BSR set to: 2
 18063                           ;doprnt.c: 1336: }
 18064                           
 18065                           ; BSR set to: 2
 18066                           ;doprnt.c: 1320: break;
 18067                           
 18068                           ; BSR set to: 2
 18069  00157C  D00A               	goto	l13303
 18070  00157E                     l13301:
 18071                           
 18072                           ; BSR set to: 2
 18073  00157E  0102               	movlb	2	; () banked
 18074  001580  5127               	movf	printf@flag& (0+255),w,b
 18075  001582  0B80               	andlw	128
 18076                           
 18077                           ; Switch size 1, requested type "space"
 18078                           ; Number of cases is 2, Range of values is 0 to 128
 18079                           ; switch strategies available:
 18080                           ; Name         Instructions Cycles
 18081                           ; simple_byte            7     4 (average)
 18082                           ;	Chosen strategy is simple_byte
 18083  001584  0A00               	xorlw	0	; case 0
 18084  001586  B4D8               	btfsc	status,2,c
 18085  001588  D7A4               	goto	l13271
 18086  00158A  0A80               	xorlw	128	; case 128
 18087  00158C  B4D8               	btfsc	status,2,c
 18088  00158E  D7CC               	goto	l13285
 18089  001590  D000               	goto	l13303
 18090  001592                     l13303:
 18091                           
 18092                           ; BSR set to: 2
 18093                           ;doprnt.c: 1339: if(c < prec)
 18094  001592  0E80               	movlw	128
 18095  001594  0102               	movlb	2	; () banked
 18096  001596  BF26               	btfsc	printf@c& (0+255),7,b
 18097  001598  0E7F               	movlw	127
 18098  00159A  0101               	movlb	1	; () banked
 18099  00159C  6FD8               	movwf	??_printf& (0+255),b
 18100  00159E  0102               	movlb	2	; () banked
 18101  0015A0  5124               	movf	printf@prec& (0+255),w,b
 18102  0015A2  0102               	movlb	2	; () banked
 18103  0015A4  5D26               	subwf	printf@c& (0+255),w,b
 18104  0015A6  0102               	movlb	2	; () banked
 18105  0015A8  5125               	movf	(printf@prec+1)& (0+255),w,b
 18106  0015AA  0A80               	xorlw	128
 18107  0015AC  0101               	movlb	1	; () banked
 18108  0015AE  59D8               	subwfb	??_printf& (0+255),w,b
 18109  0015B0  B0D8               	btfsc	status,0,c
 18110  0015B2  D003               	goto	l13307
 18111                           
 18112                           ; BSR set to: 1
 18113                           ;doprnt.c: 1340: c = prec;
 18114  0015B4  C224  F226         	movff	printf@prec,printf@c
 18115  0015B8  D019               	goto	l13311
 18116  0015BA                     l13307:
 18117                           
 18118                           ; BSR set to: 1
 18119                           ;doprnt.c: 1341: else if(prec < c)
 18120  0015BA  0102               	movlb	2	; () banked
 18121  0015BC  5125               	movf	(printf@prec+1)& (0+255),w,b
 18122  0015BE  0A80               	xorlw	128
 18123  0015C0  0101               	movlb	1	; () banked
 18124  0015C2  6FD8               	movwf	??_printf& (0+255),b
 18125  0015C4  0102               	movlb	2	; () banked
 18126  0015C6  5126               	movf	printf@c& (0+255),w,b
 18127  0015C8  0102               	movlb	2	; () banked
 18128  0015CA  5D24               	subwf	printf@prec& (0+255),w,b
 18129  0015CC  0E80               	movlw	128
 18130  0015CE  0102               	movlb	2	; () banked
 18131  0015D0  BF26               	btfsc	printf@c& (0+255),7,b
 18132  0015D2  0E7F               	movlw	127
 18133  0015D4  0101               	movlb	1	; () banked
 18134  0015D6  59D8               	subwfb	??_printf& (0+255),w,b
 18135  0015D8  B0D8               	btfsc	status,0,c
 18136  0015DA  D008               	goto	l13311
 18137                           
 18138                           ; BSR set to: 1
 18139                           ;doprnt.c: 1342: prec = c;
 18140  0015DC  0102               	movlb	2	; () banked
 18141  0015DE  5126               	movf	printf@c& (0+255),w,b
 18142  0015E0  0102               	movlb	2	; () banked
 18143  0015E2  6F24               	movwf	printf@prec& (0+255),b
 18144  0015E4  6B25               	clrf	(printf@prec+1)& (0+255),b
 18145  0015E6  BF24               	btfsc	printf@prec& (0+255),7,b
 18146  0015E8  0725               	decf	(printf@prec+1)& (0+255),f,b
 18147                           
 18148                           ; BSR set to: 2
 18149  0015EA  D000               	goto	l13311
 18150  0015EC                     l13311:
 18151                           
 18152                           ;doprnt.c: 1345: if(width && flag & 0x03)
 18153  0015EC  0102               	movlb	2	; () banked
 18154  0015EE  511B               	movf	printf@width& (0+255),w,b
 18155  0015F0  0102               	movlb	2	; () banked
 18156  0015F2  111C               	iorwf	(printf@width+1)& (0+255),w,b
 18157  0015F4  B4D8               	btfsc	status,2,c
 18158  0015F6  D015               	goto	l13317
 18159                           
 18160                           ; BSR set to: 2
 18161  0015F8  0E03               	movlw	3
 18162  0015FA  0102               	movlb	2	; () banked
 18163  0015FC  1527               	andwf	printf@flag& (0+255),w,b
 18164  0015FE  0101               	movlb	1	; () banked
 18165  001600  6FD8               	movwf	??_printf& (0+255),b
 18166  001602  0E00               	movlw	0
 18167  001604  0102               	movlb	2	; () banked
 18168  001606  1528               	andwf	(printf@flag+1)& (0+255),w,b
 18169  001608  0101               	movlb	1	; () banked
 18170  00160A  6FD9               	movwf	(??_printf+1)& (0+255),b
 18171  00160C  0101               	movlb	1	; () banked
 18172  00160E  51D8               	movf	??_printf& (0+255),w,b
 18173  001610  0101               	movlb	1	; () banked
 18174  001612  11D9               	iorwf	(??_printf+1)& (0+255),w,b
 18175  001614  B4D8               	btfsc	status,2,c
 18176  001616  D005               	goto	l13317
 18177                           
 18178                           ; BSR set to: 1
 18179                           ;doprnt.c: 1346: width--;
 18180  001618  0102               	movlb	2	; () banked
 18181  00161A  071B               	decf	printf@width& (0+255),f,b
 18182  00161C  A0D8               	btfss	status,0,c
 18183  00161E  071C               	decf	(printf@width+1)& (0+255),f,b
 18184  001620  D000               	goto	l13317
 18185  001622                     l13317:
 18186                           
 18187                           ;doprnt.c: 1348: if(flag & 0x4000) {
 18188  001622  0102               	movlb	2	; () banked
 18189  001624  AD28               	btfss	(printf@flag+1)& (0+255),6,b
 18190  001626  D01F               	goto	l13325
 18191                           
 18192                           ; BSR set to: 2
 18193                           ;doprnt.c: 1349: if(width > prec)
 18194  001628  0102               	movlb	2	; () banked
 18195  00162A  511B               	movf	printf@width& (0+255),w,b
 18196  00162C  0102               	movlb	2	; () banked
 18197  00162E  5D24               	subwf	printf@prec& (0+255),w,b
 18198  001630  0102               	movlb	2	; () banked
 18199  001632  5125               	movf	(printf@prec+1)& (0+255),w,b
 18200  001634  0A80               	xorlw	128
 18201  001636  0101               	movlb	1	; () banked
 18202  001638  6FD8               	movwf	??_printf& (0+255),b
 18203  00163A  0102               	movlb	2	; () banked
 18204  00163C  511C               	movf	(printf@width+1)& (0+255),w,b
 18205  00163E  0A80               	xorlw	128
 18206  001640  0101               	movlb	1	; () banked
 18207  001642  59D8               	subwfb	??_printf& (0+255),w,b
 18208  001644  B0D8               	btfsc	status,0,c
 18209  001646  D009               	goto	l13323
 18210                           
 18211                           ; BSR set to: 1
 18212                           ;doprnt.c: 1350: width -= prec;
 18213  001648  0102               	movlb	2	; () banked
 18214  00164A  5124               	movf	printf@prec& (0+255),w,b
 18215  00164C  0102               	movlb	2	; () banked
 18216  00164E  5F1B               	subwf	printf@width& (0+255),f,b
 18217  001650  0102               	movlb	2	; () banked
 18218  001652  5125               	movf	(printf@prec+1)& (0+255),w,b
 18219  001654  0102               	movlb	2	; () banked
 18220  001656  5B1C               	subwfb	(printf@width+1)& (0+255),f,b
 18221  001658  D006               	goto	l13325
 18222  00165A                     l13323:
 18223                           
 18224                           ;doprnt.c: 1351: else
 18225                           ;doprnt.c: 1352: width = 0;
 18226  00165A  0E00               	movlw	0
 18227  00165C  0102               	movlb	2	; () banked
 18228  00165E  6F1C               	movwf	(printf@width+1)& (0+255),b
 18229  001660  0E00               	movlw	0
 18230  001662  6F1B               	movwf	printf@width& (0+255),b
 18231                           
 18232                           ; BSR set to: 2
 18233  001664  D000               	goto	l13325
 18234  001666                     l13325:
 18235                           
 18236                           ; BSR set to: 2
 18237                           ;doprnt.c: 1353: }
 18238                           ;doprnt.c: 1368: if((flag & (0x80|0x800)) == (0x80|0x800)) {
 18239  001666  0E80               	movlw	128
 18240  001668  0101               	movlb	1	; () banked
 18241  00166A  6FD8               	movwf	??_printf& (0+255),b
 18242  00166C  0E08               	movlw	8
 18243  00166E  0101               	movlb	1	; () banked
 18244  001670  6FD9               	movwf	(??_printf+1)& (0+255),b
 18245  001672  C227  F1DA         	movff	printf@flag,??_printf+2
 18246  001676  C228  F1DB         	movff	printf@flag+1,??_printf+3
 18247  00167A  0101               	movlb	1	; () banked
 18248  00167C  51D8               	movf	??_printf& (0+255),w,b
 18249  00167E  0101               	movlb	1	; () banked
 18250  001680  17DA               	andwf	(??_printf+2)& (0+255),f,b
 18251  001682  0101               	movlb	1	; () banked
 18252  001684  51D9               	movf	(??_printf+1)& (0+255),w,b
 18253  001686  0101               	movlb	1	; () banked
 18254  001688  17DB               	andwf	(??_printf+3)& (0+255),f,b
 18255  00168A  0E80               	movlw	128
 18256  00168C  0101               	movlb	1	; () banked
 18257  00168E  19DA               	xorwf	(??_printf+2)& (0+255),w,b
 18258  001690  E11C               	bnz	l13333
 18259  001692  0E08               	movlw	8
 18260  001694  0101               	movlb	1	; () banked
 18261  001696  19DB               	xorwf	(??_printf+3)& (0+255),w,b
 18262  001698  A4D8               	btfss	status,2,c
 18263  00169A  D017               	goto	l13333
 18264                           
 18265                           ; BSR set to: 1
 18266                           ;doprnt.c: 1372: if(width > 2)
 18267  00169C  0102               	movlb	2	; () banked
 18268  00169E  BF1C               	btfsc	(printf@width+1)& (0+255),7,b
 18269  0016A0  D00E               	goto	l13331
 18270  0016A2  0102               	movlb	2	; () banked
 18271  0016A4  511C               	movf	(printf@width+1)& (0+255),w,b
 18272  0016A6  E105               	bnz	u15300
 18273  0016A8  0E03               	movlw	3
 18274  0016AA  0102               	movlb	2	; () banked
 18275  0016AC  5D1B               	subwf	printf@width& (0+255),w,b
 18276  0016AE  A0D8               	btfss	status,0,c
 18277  0016B0  D006               	goto	l13331
 18278  0016B2                     u15300:
 18279                           
 18280                           ; BSR set to: 2
 18281                           ;doprnt.c: 1373: width -= 2;
 18282  0016B2  0102               	movlb	2	; () banked
 18283  0016B4  0EFE               	movlw	254
 18284  0016B6  271B               	addwf	printf@width& (0+255),f,b
 18285  0016B8  0EFF               	movlw	255
 18286  0016BA  231C               	addwfc	(printf@width+1)& (0+255),f,b
 18287  0016BC  D006               	goto	l13333
 18288  0016BE                     l13331:
 18289                           
 18290                           ; BSR set to: 2
 18291                           ;doprnt.c: 1374: else
 18292                           ;doprnt.c: 1375: width = 0;
 18293  0016BE  0E00               	movlw	0
 18294  0016C0  0102               	movlb	2	; () banked
 18295  0016C2  6F1C               	movwf	(printf@width+1)& (0+255),b
 18296  0016C4  0E00               	movlw	0
 18297  0016C6  6F1B               	movwf	printf@width& (0+255),b
 18298                           
 18299                           ; BSR set to: 2
 18300  0016C8  D000               	goto	l13333
 18301  0016CA                     l13333:
 18302                           
 18303                           ;doprnt.c: 1376: }
 18304                           ;doprnt.c: 1381: if(width > c)
 18305  0016CA  0E80               	movlw	128
 18306  0016CC  0102               	movlb	2	; () banked
 18307  0016CE  BF26               	btfsc	printf@c& (0+255),7,b
 18308  0016D0  0E7F               	movlw	127
 18309  0016D2  0101               	movlb	1	; () banked
 18310  0016D4  6FD8               	movwf	??_printf& (0+255),b
 18311  0016D6  0102               	movlb	2	; () banked
 18312  0016D8  511B               	movf	printf@width& (0+255),w,b
 18313  0016DA  0102               	movlb	2	; () banked
 18314  0016DC  5D26               	subwf	printf@c& (0+255),w,b
 18315  0016DE  0102               	movlb	2	; () banked
 18316  0016E0  511C               	movf	(printf@width+1)& (0+255),w,b
 18317  0016E2  0A80               	xorlw	128
 18318  0016E4  0101               	movlb	1	; () banked
 18319  0016E6  59D8               	subwfb	??_printf& (0+255),w,b
 18320  0016E8  B0D8               	btfsc	status,0,c
 18321  0016EA  D00B               	goto	l13337
 18322                           
 18323                           ; BSR set to: 1
 18324                           ;doprnt.c: 1382: width -= c;
 18325  0016EC  0102               	movlb	2	; () banked
 18326  0016EE  5126               	movf	printf@c& (0+255),w,b
 18327  0016F0  0102               	movlb	2	; () banked
 18328  0016F2  5F1B               	subwf	printf@width& (0+255),f,b
 18329  0016F4  0E00               	movlw	0
 18330  0016F6  0102               	movlb	2	; () banked
 18331  0016F8  BF26               	btfsc	printf@c& (0+255),7,b
 18332  0016FA  0EFF               	movlw	255
 18333  0016FC  0102               	movlb	2	; () banked
 18334  0016FE  5B1C               	subwfb	(printf@width+1)& (0+255),f,b
 18335  001700  D006               	goto	l13339
 18336  001702                     l13337:
 18337                           
 18338                           ;doprnt.c: 1383: else
 18339                           ;doprnt.c: 1384: width = 0;
 18340  001702  0E00               	movlw	0
 18341  001704  0102               	movlb	2	; () banked
 18342  001706  6F1C               	movwf	(printf@width+1)& (0+255),b
 18343  001708  0E00               	movlw	0
 18344  00170A  6F1B               	movwf	printf@width& (0+255),b
 18345  00170C  D000               	goto	l13339
 18346  00170E                     l13339:
 18347                           
 18348                           ; BSR set to: 2
 18349                           ;doprnt.c: 1387: if(flag & 0x04) {
 18350  00170E  0102               	movlb	2	; () banked
 18351  001710  A527               	btfss	printf@flag& (0+255),2,b
 18352  001712  D054               	goto	l13363
 18353                           
 18354                           ; BSR set to: 2
 18355                           ;doprnt.c: 1389: if(flag & 0x02)
 18356  001714  0102               	movlb	2	; () banked
 18357  001716  A327               	btfss	printf@flag& (0+255),1,b
 18358  001718  D013               	goto	l1626
 18359                           
 18360                           ; BSR set to: 2
 18361                           ;doprnt.c: 1390: (putch(flag & 0x01 ? '-' : '+') );
 18362  00171A  0102               	movlb	2	; () banked
 18363  00171C  B127               	btfsc	printf@flag& (0+255),0,b
 18364  00171E  D005               	goto	l13347
 18365                           
 18366                           ; BSR set to: 2
 18367  001720  0E00               	movlw	0
 18368  001722  0102               	movlb	2	; () banked
 18369  001724  6F0D               	movwf	(_printf$2211+1)& (0+255),b
 18370  001726  0E2B               	movlw	43
 18371  001728  D004               	goto	L17
 18372  00172A                     l13347:
 18373                           
 18374                           ; BSR set to: 2
 18375  00172A  0E00               	movlw	0
 18376  00172C  0102               	movlb	2	; () banked
 18377  00172E  6F0D               	movwf	(_printf$2211+1)& (0+255),b
 18378  001730  0E2D               	movlw	45
 18379  001732                     L17:
 18380  001732  6F0C               	movwf	_printf$2211& (0+255),b
 18381  001734  D000               	goto	l13349
 18382  001736                     l13349:
 18383                           
 18384                           ; BSR set to: 2
 18385  001736  0102               	movlb	2	; () banked
 18386  001738  510C               	movf	_printf$2211& (0+255),w,b
 18387  00173A  EC3A  F049         	call	_putch
 18388  00173E  D029               	goto	l13357
 18389  001740                     l1626:
 18390                           
 18391                           ; BSR set to: 2
 18392                           ;doprnt.c: 1396: else
 18393                           ;doprnt.c: 1399: if(flag & 0x01)
 18394  001740  0102               	movlb	2	; () banked
 18395  001742  A127               	btfss	printf@flag& (0+255),0,b
 18396  001744  D004               	goto	l13353
 18397                           
 18398                           ; BSR set to: 2
 18399                           ;doprnt.c: 1400: (putch(' ') );
 18400  001746  0E20               	movlw	32
 18401  001748  EC3A  F049         	call	_putch
 18402  00174C  D022               	goto	l13357
 18403  00174E                     l13353:
 18404                           
 18405                           ;doprnt.c: 1403: else if((flag & (0x80|0x800)) == (0x80|0x800)) {
 18406  00174E  0E80               	movlw	128
 18407  001750  0101               	movlb	1	; () banked
 18408  001752  6FD8               	movwf	??_printf& (0+255),b
 18409  001754  0E08               	movlw	8
 18410  001756  0101               	movlb	1	; () banked
 18411  001758  6FD9               	movwf	(??_printf+1)& (0+255),b
 18412  00175A  C227  F1DA         	movff	printf@flag,??_printf+2
 18413  00175E  C228  F1DB         	movff	printf@flag+1,??_printf+3
 18414  001762  0101               	movlb	1	; () banked
 18415  001764  51D8               	movf	??_printf& (0+255),w,b
 18416  001766  0101               	movlb	1	; () banked
 18417  001768  17DA               	andwf	(??_printf+2)& (0+255),f,b
 18418  00176A  0101               	movlb	1	; () banked
 18419  00176C  51D9               	movf	(??_printf+1)& (0+255),w,b
 18420  00176E  0101               	movlb	1	; () banked
 18421  001770  17DB               	andwf	(??_printf+3)& (0+255),f,b
 18422  001772  0E80               	movlw	128
 18423  001774  0101               	movlb	1	; () banked
 18424  001776  19DA               	xorwf	(??_printf+2)& (0+255),w,b
 18425  001778  E10C               	bnz	l13357
 18426  00177A  0E08               	movlw	8
 18427  00177C  0101               	movlb	1	; () banked
 18428  00177E  19DB               	xorwf	(??_printf+3)& (0+255),w,b
 18429  001780  A4D8               	btfss	status,2,c
 18430  001782  D007               	goto	l13357
 18431                           
 18432                           ; BSR set to: 1
 18433                           ;doprnt.c: 1404: (putch('0') );
 18434  001784  0E30               	movlw	48
 18435  001786  EC3A  F049         	call	_putch
 18436                           
 18437                           ;doprnt.c: 1410: (putch('x') );
 18438  00178A  0E78               	movlw	120
 18439  00178C  EC3A  F049         	call	_putch
 18440  001790  D000               	goto	l13357
 18441  001792                     l13357:
 18442                           
 18443                           ;doprnt.c: 1412: }
 18444                           ;doprnt.c: 1415: if(width)
 18445  001792  0102               	movlb	2	; () banked
 18446  001794  511B               	movf	printf@width& (0+255),w,b
 18447  001796  0102               	movlb	2	; () banked
 18448  001798  111C               	iorwf	(printf@width+1)& (0+255),w,b
 18449  00179A  B4D8               	btfsc	status,2,c
 18450  00179C  D0F1               	goto	l13397
 18451  00179E                     l13359:
 18452                           
 18453                           ; BSR set to: 2
 18454                           ;doprnt.c: 1417: (putch('0') );
 18455  00179E  0E30               	movlw	48
 18456  0017A0  EC3A  F049         	call	_putch
 18457                           
 18458                           ;doprnt.c: 1418: while(--width);
 18459  0017A4  0102               	movlb	2	; () banked
 18460  0017A6  071B               	decf	printf@width& (0+255),f,b
 18461  0017A8  A0D8               	btfss	status,0,c
 18462  0017AA  071C               	decf	(printf@width+1)& (0+255),f,b
 18463  0017AC  0102               	movlb	2	; () banked
 18464  0017AE  511B               	movf	printf@width& (0+255),w,b
 18465  0017B0  0102               	movlb	2	; () banked
 18466  0017B2  111C               	iorwf	(printf@width+1)& (0+255),w,b
 18467  0017B4  B4D8               	btfsc	status,2,c
 18468  0017B6  D0E4               	goto	l13397
 18469  0017B8  D7F2               	goto	l13359
 18470                           
 18471                           ; BSR set to: 2
 18472                           ;doprnt.c: 1420: } else
 18473                           
 18474                           ; BSR set to: 2
 18475  0017BA  D0E2               	goto	l13397
 18476  0017BC                     l13363:
 18477                           
 18478                           ; BSR set to: 2
 18479                           ;doprnt.c: 1422: {
 18480                           ;doprnt.c: 1424: if(width
 18481                           ;doprnt.c: 1426: && !(flag & 0x08)
 18482                           ;doprnt.c: 1428: )
 18483  0017BC  0102               	movlb	2	; () banked
 18484  0017BE  511B               	movf	printf@width& (0+255),w,b
 18485  0017C0  0102               	movlb	2	; () banked
 18486  0017C2  111C               	iorwf	(printf@width+1)& (0+255),w,b
 18487  0017C4  B4D8               	btfsc	status,2,c
 18488  0017C6  D010               	goto	l1639
 18489                           
 18490                           ; BSR set to: 2
 18491  0017C8  0102               	movlb	2	; () banked
 18492  0017CA  B727               	btfsc	printf@flag& (0+255),3,b
 18493  0017CC  D00D               	goto	l1639
 18494  0017CE                     l13367:
 18495                           
 18496                           ; BSR set to: 2
 18497                           ;doprnt.c: 1430: (putch(' ') );
 18498  0017CE  0E20               	movlw	32
 18499  0017D0  EC3A  F049         	call	_putch
 18500                           
 18501                           ;doprnt.c: 1431: while(--width);
 18502  0017D4  0102               	movlb	2	; () banked
 18503  0017D6  071B               	decf	printf@width& (0+255),f,b
 18504  0017D8  A0D8               	btfss	status,0,c
 18505  0017DA  071C               	decf	(printf@width+1)& (0+255),f,b
 18506  0017DC  0102               	movlb	2	; () banked
 18507  0017DE  511B               	movf	printf@width& (0+255),w,b
 18508  0017E0  0102               	movlb	2	; () banked
 18509  0017E2  111C               	iorwf	(printf@width+1)& (0+255),w,b
 18510  0017E4  A4D8               	btfss	status,2,c
 18511  0017E6  D7F3               	goto	l13367
 18512  0017E8                     l1639:
 18513                           
 18514                           ; BSR set to: 2
 18515                           ;doprnt.c: 1434: if(flag & 0x02)
 18516  0017E8  0102               	movlb	2	; () banked
 18517  0017EA  A327               	btfss	printf@flag& (0+255),1,b
 18518  0017EC  D013               	goto	l1642
 18519                           
 18520                           ; BSR set to: 2
 18521                           ;doprnt.c: 1435: (putch(flag & 0x01 ? '-' : '+') );
 18522  0017EE  0102               	movlb	2	; () banked
 18523  0017F0  B127               	btfsc	printf@flag& (0+255),0,b
 18524  0017F2  D005               	goto	l13375
 18525                           
 18526                           ; BSR set to: 2
 18527  0017F4  0E00               	movlw	0
 18528  0017F6  0102               	movlb	2	; () banked
 18529  0017F8  6F0F               	movwf	(_printf$2212+1)& (0+255),b
 18530  0017FA  0E2B               	movlw	43
 18531  0017FC  D004               	goto	L18
 18532  0017FE                     l13375:
 18533                           
 18534                           ; BSR set to: 2
 18535  0017FE  0E00               	movlw	0
 18536  001800  0102               	movlb	2	; () banked
 18537  001802  6F0F               	movwf	(_printf$2212+1)& (0+255),b
 18538  001804  0E2D               	movlw	45
 18539  001806                     L18:
 18540  001806  6F0E               	movwf	_printf$2212& (0+255),b
 18541  001808  D000               	goto	l13377
 18542  00180A                     l13377:
 18543                           
 18544                           ; BSR set to: 2
 18545  00180A  0102               	movlb	2	; () banked
 18546  00180C  510E               	movf	_printf$2212& (0+255),w,b
 18547  00180E  EC3A  F049         	call	_putch
 18548  001812  D007               	goto	l13381
 18549  001814                     l1642:
 18550                           
 18551                           ; BSR set to: 2
 18552                           ;doprnt.c: 1443: else if(flag & 0x01)
 18553  001814  0102               	movlb	2	; () banked
 18554  001816  A127               	btfss	printf@flag& (0+255),0,b
 18555  001818  D004               	goto	l13381
 18556                           
 18557                           ; BSR set to: 2
 18558                           ;doprnt.c: 1444: (putch(' ') );
 18559  00181A  0E20               	movlw	32
 18560  00181C  EC3A  F049         	call	_putch
 18561  001820  D000               	goto	l13381
 18562  001822                     l13381:
 18563                           
 18564                           ;doprnt.c: 1454: if((flag & (0x80|0x800)) == (0x80|0x800)) {
 18565  001822  0E80               	movlw	128
 18566  001824  0101               	movlb	1	; () banked
 18567  001826  6FD8               	movwf	??_printf& (0+255),b
 18568  001828  0E08               	movlw	8
 18569  00182A  0101               	movlb	1	; () banked
 18570  00182C  6FD9               	movwf	(??_printf+1)& (0+255),b
 18571  00182E  C227  F1DA         	movff	printf@flag,??_printf+2
 18572  001832  C228  F1DB         	movff	printf@flag+1,??_printf+3
 18573  001836  0101               	movlb	1	; () banked
 18574  001838  51D8               	movf	??_printf& (0+255),w,b
 18575  00183A  0101               	movlb	1	; () banked
 18576  00183C  17DA               	andwf	(??_printf+2)& (0+255),f,b
 18577  00183E  0101               	movlb	1	; () banked
 18578  001840  51D9               	movf	(??_printf+1)& (0+255),w,b
 18579  001842  0101               	movlb	1	; () banked
 18580  001844  17DB               	andwf	(??_printf+3)& (0+255),f,b
 18581  001846  0E80               	movlw	128
 18582  001848  0101               	movlb	1	; () banked
 18583  00184A  19DA               	xorwf	(??_printf+2)& (0+255),w,b
 18584  00184C  E104               	bnz	u15451
 18585  00184E  0E08               	movlw	8
 18586  001850  0101               	movlb	1	; () banked
 18587  001852  19DB               	xorwf	(??_printf+3)& (0+255),w,b
 18588  001854  A4D8               	btfss	status,2,c
 18589  001856                     u15451:
 18590  001856  D094               	goto	l13397
 18591                           
 18592                           ; BSR set to: 1
 18593                           ;doprnt.c: 1458: (putch('0') );
 18594  001858  0E30               	movlw	48
 18595  00185A  EC3A  F049         	call	_putch
 18596                           
 18597                           ;doprnt.c: 1464: (putch('x') );
 18598  00185E  0E78               	movlw	120
 18599  001860  EC3A  F049         	call	_putch
 18600                           
 18601                           ;doprnt.c: 1466: }
 18602                           ;doprnt.c: 1469: }
 18603                           ;doprnt.c: 1474: while(prec--) {
 18604  001864  D08D               	goto	l13397
 18605                           
 18606                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
 18607  001866  D07D               	goto	l13393
 18608  001868                     l13385:
 18609                           
 18610                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 18611  001868  C224  F1D8         	movff	printf@prec,??_printf
 18612  00186C  C225  F1D9         	movff	printf@prec+1,??_printf+1
 18613  001870  0101               	movlb	1	; () banked
 18614  001872  90D8               	bcf	status,0,c
 18615  001874  37D8               	rlcf	??_printf& (0+255),f,b
 18616  001876  37D9               	rlcf	(??_printf+1)& (0+255),f,b
 18617  001878  0101               	movlb	1	; () banked
 18618  00187A  90D8               	bcf	status,0,c
 18619  00187C  37D8               	rlcf	??_printf& (0+255),f,b
 18620  00187E  37D9               	rlcf	(??_printf+1)& (0+255),f,b
 18621  001880  0E0E               	movlw	low _dpowers
 18622  001882  0101               	movlb	1	; () banked
 18623  001884  25D8               	addwf	??_printf& (0+255),w,b
 18624  001886  6EF6               	movwf	tblptrl,c
 18625  001888  0EFE               	movlw	high _dpowers
 18626  00188A  21D9               	addwfc	(??_printf+1)& (0+255),w,b
 18627  00188C  6EF7               	movwf	tblptrh,c
 18628  00188E                     	if	0	;There are less than 3 active tblptr bytes
 18629  00188E                     	endif
 18630  00188E  0009               	tblrd		*+
 18631  001890  CFF5 F092          	movff	tablat,___lldiv@divisor
 18632  001894  0009               	tblrd		*+
 18633  001896  CFF5 F093          	movff	tablat,___lldiv@divisor+1
 18634  00189A  0009               	tblrd		*+
 18635  00189C  CFF5 F094          	movff	tablat,___lldiv@divisor+2
 18636  0018A0  000A               	tblrd		*-
 18637  0018A2  CFF5 F095          	movff	tablat,___lldiv@divisor+3
 18638  0018A6  C21D  F08E         	movff	printf@val,___lldiv@dividend
 18639  0018AA  C21E  F08F         	movff	printf@val+1,___lldiv@dividend+1
 18640  0018AE  C21F  F090         	movff	printf@val+2,___lldiv@dividend+2
 18641  0018B2  C220  F091         	movff	printf@val+3,___lldiv@dividend+3
 18642  0018B6  EC43  F03B         	call	___lldiv	;wreg free
 18643  0018BA  C08E  F09B         	movff	?___lldiv,___llmod@dividend
 18644  0018BE  C08F  F09C         	movff	?___lldiv+1,___llmod@dividend+1
 18645  0018C2  C090  F09D         	movff	?___lldiv+2,___llmod@dividend+2
 18646  0018C6  C091  F09E         	movff	?___lldiv+3,___llmod@dividend+3
 18647  0018CA  0E0A               	movlw	10
 18648  0018CC  0100               	movlb	0	; () banked
 18649  0018CE  6F9F               	movwf	___llmod@divisor& (0+255),b
 18650  0018D0  0E00               	movlw	0
 18651  0018D2  6FA0               	movwf	(___llmod@divisor+1)& (0+255),b
 18652  0018D4  0E00               	movlw	0
 18653  0018D6  6FA1               	movwf	(___llmod@divisor+2)& (0+255),b
 18654  0018D8  0E00               	movlw	0
 18655  0018DA  6FA2               	movwf	(___llmod@divisor+3)& (0+255),b
 18656  0018DC  EC8E  F03E         	call	___llmod	;wreg free
 18657  0018E0  0100               	movlb	0	; () banked
 18658  0018E2  519B               	movf	?___llmod& (0+255),w,b
 18659  0018E4  0F30               	addlw	48
 18660  0018E6  0102               	movlb	2	; () banked
 18661  0018E8  6F26               	movwf	printf@c& (0+255),b
 18662                           
 18663                           ;doprnt.c: 1491: break;
 18664  0018EA  D045               	goto	l13395
 18665  0018EC                     l13387:
 18666                           
 18667                           ; BSR set to: 2
 18668                           ;doprnt.c: 1499: {
 18669                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 18670  0018EC  C21D  F08E         	movff	printf@val,___lldiv@dividend
 18671  0018F0  C21E  F08F         	movff	printf@val+1,___lldiv@dividend+1
 18672  0018F4  C21F  F090         	movff	printf@val+2,___lldiv@dividend+2
 18673  0018F8  C220  F091         	movff	printf@val+3,___lldiv@dividend+3
 18674  0018FC  C224  F1D8         	movff	printf@prec,??_printf
 18675  001900  C225  F1D9         	movff	printf@prec+1,??_printf+1
 18676  001904  0101               	movlb	1	; () banked
 18677  001906  90D8               	bcf	status,0,c
 18678  001908  37D8               	rlcf	??_printf& (0+255),f,b
 18679  00190A  37D9               	rlcf	(??_printf+1)& (0+255),f,b
 18680  00190C  0101               	movlb	1	; () banked
 18681  00190E  90D8               	bcf	status,0,c
 18682  001910  37D8               	rlcf	??_printf& (0+255),f,b
 18683  001912  37D9               	rlcf	(??_printf+1)& (0+255),f,b
 18684  001914  0E84               	movlw	low _hexpowers
 18685  001916  0101               	movlb	1	; () banked
 18686  001918  25D8               	addwf	??_printf& (0+255),w,b
 18687  00191A  6EF6               	movwf	tblptrl,c
 18688  00191C  0EFE               	movlw	high _hexpowers
 18689  00191E  21D9               	addwfc	(??_printf+1)& (0+255),w,b
 18690  001920  6EF7               	movwf	tblptrh,c
 18691  001922                     	if	0	;There are less than 3 active tblptr bytes
 18692  001922                     	endif
 18693  001922  0009               	tblrd		*+
 18694  001924  CFF5 F092          	movff	tablat,___lldiv@divisor
 18695  001928  0009               	tblrd		*+
 18696  00192A  CFF5 F093          	movff	tablat,___lldiv@divisor+1
 18697  00192E  0009               	tblrd		*+
 18698  001930  CFF5 F094          	movff	tablat,___lldiv@divisor+2
 18699  001934  000A               	tblrd		*-
 18700  001936  CFF5 F095          	movff	tablat,___lldiv@divisor+3
 18701  00193A  EC43  F03B         	call	___lldiv	;wreg free
 18702  00193E  0100               	movlb	0	; () banked
 18703  001940  518E               	movf	?___lldiv& (0+255),w,b
 18704  001942  0B0F               	andlw	15
 18705  001944  0102               	movlb	2	; () banked
 18706  001946  6F03               	movwf	printf@idx& (0+255),b
 18707                           
 18708                           ; BSR set to: 2
 18709                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
 18710  001948  0102               	movlb	2	; () banked
 18711  00194A  5103               	movf	printf@idx& (0+255),w,b
 18712  00194C  0D01               	mullw	1
 18713  00194E  0E56               	movlw	low STR_37
 18714  001950  24F3               	addwf	prodl,w,c
 18715  001952  6EF6               	movwf	tblptrl,c
 18716  001954  0EFF               	movlw	high STR_37
 18717  001956  20F4               	addwfc	prodh,w,c
 18718  001958  6EF7               	movwf	tblptrh,c
 18719  00195A                     	if	0	;There are less than 3 active tblptr bytes
 18720  00195A                     	endif
 18721  00195A  0008               	tblrd		*
 18722  00195C  CFF5 F226          	movff	tablat,printf@c
 18723                           
 18724                           ; BSR set to: 2
 18725                           ;doprnt.c: 1523: }
 18726                           
 18727                           ;doprnt.c: 1508: }
 18728                           ;doprnt.c: 1510: break;
 18729  001960  D00A               	goto	l13395
 18730  001962                     l13393:
 18731  001962  0102               	movlb	2	; () banked
 18732  001964  5127               	movf	printf@flag& (0+255),w,b
 18733  001966  0B80               	andlw	128
 18734                           
 18735                           ; Switch size 1, requested type "space"
 18736                           ; Number of cases is 2, Range of values is 0 to 128
 18737                           ; switch strategies available:
 18738                           ; Name         Instructions Cycles
 18739                           ; simple_byte            7     4 (average)
 18740                           ;	Chosen strategy is simple_byte
 18741  001968  0A00               	xorlw	0	; case 0
 18742  00196A  B4D8               	btfsc	status,2,c
 18743  00196C  D77D               	goto	l13385
 18744  00196E  0A80               	xorlw	128	; case 128
 18745  001970  B4D8               	btfsc	status,2,c
 18746  001972  D7BC               	goto	l13387
 18747  001974  D000               	goto	l13395
 18748  001976                     l13395:
 18749                           
 18750                           ; BSR set to: 2
 18751                           ;doprnt.c: 1524: (putch(c) );
 18752  001976  0102               	movlb	2	; () banked
 18753  001978  5126               	movf	printf@c& (0+255),w,b
 18754  00197A  EC3A  F049         	call	_putch
 18755  00197E  D000               	goto	l13397
 18756  001980                     l13397:
 18757  001980  0102               	movlb	2	; () banked
 18758  001982  0724               	decf	printf@prec& (0+255),f,b
 18759  001984  A0D8               	btfss	status,0,c
 18760  001986  0725               	decf	(printf@prec+1)& (0+255),f,b
 18761  001988  0102               	movlb	2	; () banked
 18762  00198A  2924               	incf	printf@prec& (0+255),w,b
 18763  00198C  E1EA               	bnz	l13393
 18764  00198E  0102               	movlb	2	; () banked
 18765  001990  2925               	incf	(printf@prec+1)& (0+255),w,b
 18766  001992  A4D8               	btfss	status,2,c
 18767  001994  D7E6               	goto	l13393
 18768                           
 18769                           ; BSR set to: 2
 18770                           ;doprnt.c: 1525: }
 18771                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
 18772  001996  0102               	movlb	2	; () banked
 18773  001998  A727               	btfss	printf@flag& (0+255),3,b
 18774  00199A  D01B               	goto	l13405
 18775                           
 18776                           ; BSR set to: 2
 18777  00199C  0102               	movlb	2	; () banked
 18778  00199E  BF1C               	btfsc	(printf@width+1)& (0+255),7,b
 18779  0019A0  D018               	goto	l13405
 18780  0019A2  0102               	movlb	2	; () banked
 18781  0019A4  511C               	movf	(printf@width+1)& (0+255),w,b
 18782  0019A6  E106               	bnz	l13401
 18783  0019A8  0102               	movlb	2	; () banked
 18784  0019AA  051B               	decf	printf@width& (0+255),w,b
 18785  0019AC  B0D8               	btfsc	status,0,c
 18786  0019AE  D002               	goto	l13401
 18787  0019B0  D010               	goto	l13405
 18788  0019B2  D000               	goto	l13401
 18789  0019B4                     l13401:
 18790                           
 18791                           ; BSR set to: 2
 18792                           ;doprnt.c: 1530: (putch(' ') );
 18793  0019B4  0E20               	movlw	32
 18794  0019B6  EC3A  F049         	call	_putch
 18795                           
 18796                           ;doprnt.c: 1531: while(--width);
 18797  0019BA  0102               	movlb	2	; () banked
 18798  0019BC  071B               	decf	printf@width& (0+255),f,b
 18799  0019BE  A0D8               	btfss	status,0,c
 18800  0019C0  071C               	decf	(printf@width+1)& (0+255),f,b
 18801  0019C2  0102               	movlb	2	; () banked
 18802  0019C4  511B               	movf	printf@width& (0+255),w,b
 18803  0019C6  0102               	movlb	2	; () banked
 18804  0019C8  111C               	iorwf	(printf@width+1)& (0+255),w,b
 18805  0019CA  B4D8               	btfsc	status,2,c
 18806  0019CC  D002               	goto	l13405
 18807  0019CE  D7F2               	goto	l13401
 18808                           
 18809                           ; BSR set to: 2
 18810                           
 18811                           ; BSR set to: 2
 18812  0019D0  D000               	goto	l13405
 18813  0019D2                     l13405:
 18814  0019D2  C1CA  FFF6         	movff	printf@f,tblptrl
 18815  0019D6  C1CB  FFF7         	movff	printf@f+1,tblptrh
 18816  0019DA  0101               	movlb	1	; () banked
 18817  0019DC  4BCA               	infsnz	printf@f& (0+255),f,b
 18818  0019DE  2BCB               	incf	(printf@f+1)& (0+255),f,b
 18819  0019E0                     	if	0	;tblptru may be non-zero
 18820  0019E0                     	endif
 18821  0019E0                     	if	0	;tblptru may be non-zero
 18822  0019E0                     	endif
 18823  0019E0  0008               	tblrd		*
 18824  0019E2  CFF5 F226          	movff	tablat,printf@c
 18825  0019E6  0102               	movlb	2	; () banked
 18826  0019E8  5126               	movf	printf@c& (0+255),w,b
 18827  0019EA  B4D8               	btfsc	status,2,c
 18828  0019EC  D003               	goto	l1661
 18829  0019EE  EF16  F000         	goto	l12795
 18830                           
 18831                           ; BSR set to: 2
 18832  0019F2  D000               	goto	l1661
 18833  0019F4                     l1661:
 18834                           
 18835                           ; BSR set to: 2
 18836  0019F4  0012               	return		;funcret
 18837  0019F6                     __end_of_printf:
 18838                           	opt stack 0
 18839                           tblptru	equ	0xFF8
 18840                           tblptrh	equ	0xFF7
 18841                           tblptrl	equ	0xFF6
 18842                           tablat	equ	0xFF5
 18843                           prodh	equ	0xFF4
 18844                           prodl	equ	0xFF3
 18845                           intcon	equ	0xFF2
 18846                           intcon2	equ	0xFF1
 18847                           postinc0	equ	0xFEE
 18848                           wreg	equ	0xFE8
 18849                           postdec1	equ	0xFE5
 18850                           fsr1l	equ	0xFE1
 18851                           indf2	equ	0xFDF
 18852                           postinc2	equ	0xFDE
 18853                           postdec2	equ	0xFDD
 18854                           fsr2h	equ	0xFDA
 18855                           fsr2l	equ	0xFD9
 18856                           status	equ	0xFD8
 18857                           
 18858 ;; *************** function _scale *****************
 18859 ;; Defined at:
 18860 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 18861 ;; Parameters:    Size  Location     Type
 18862 ;;  scl             1    wreg     char 
 18863 ;; Auto vars:     Size  Location     Type
 18864 ;;  scl             1   70[BANK0 ] char 
 18865 ;; Return value:  Size  Location     Type
 18866 ;;                  3   64[BANK0 ] char 
 18867 ;; Registers used:
 18868 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18869 ;; Tracked objects:
 18870 ;;		On entry : 0/0
 18871 ;;		On exit  : 0/0
 18872 ;;		Unchanged: 0/0
 18873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18874 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18875 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18877 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18878 ;;Total ram usage:        7 bytes
 18879 ;; Hardware stack levels used:    1
 18880 ;; Hardware stack levels required when called:    8
 18881 ;; This function calls:
 18882 ;;		___awdiv
 18883 ;;		___awmod
 18884 ;;		___ftmul
 18885 ;;		___wmul
 18886 ;; This function is called by:
 18887 ;;		_printf
 18888 ;; This function uses a non-reentrant model
 18889 ;;
 18890                           
 18891                           	psect	text71
 18892  0036BC                     __ptext71:
 18893                           	opt stack 0
 18894  0036BC                     _scale:
 18895                           	opt stack 21
 18896                           
 18897                           ; BSR set to: 2
 18898                           ;incstack = 0
 18899                           ;scale@scl stored from wreg
 18900  0036BC  0100               	movlb	0	; () banked
 18901  0036BE  6FC6               	movwf	scale@scl& (0+255),b
 18902                           
 18903                           ; BSR set to: 0
 18904                           ;doprnt.c: 428: if(scl < 0) {
 18905  0036C0  0100               	movlb	0	; () banked
 18906  0036C2  AFC6               	btfss	scale@scl& (0+255),7,b
 18907  0036C4  D11E               	goto	l12435
 18908                           
 18909                           ; BSR set to: 0
 18910                           ;doprnt.c: 429: scl = -scl;
 18911  0036C6  0100               	movlb	0	; () banked
 18912  0036C8  6DC6               	negf	scale@scl& (0+255),b
 18913                           
 18914                           ;doprnt.c: 430: if(scl>=110)
 18915  0036CA  0100               	movlb	0	; () banked
 18916  0036CC  51C6               	movf	scale@scl& (0+255),w,b
 18917  0036CE  0A80               	xorlw	128
 18918  0036D0  0F12               	addlw	-238
 18919  0036D2  A0D8               	btfss	status,0,c
 18920  0036D4  D0A8               	goto	l12425
 18921                           
 18922                           ; BSR set to: 0
 18923                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 18924  0036D6  0E00               	movlw	0
 18925  0036D8  0100               	movlb	0	; () banked
 18926  0036DA  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18927  0036DC  0E03               	movlw	3
 18928  0036DE  6F90               	movwf	___wmul@multiplicand& (0+255),b
 18929  0036E0  0E00               	movlw	0
 18930  0036E2  0100               	movlb	0	; () banked
 18931  0036E4  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
 18932  0036E6  0E0A               	movlw	10
 18933  0036E8  6F96               	movwf	___awdiv@divisor& (0+255),b
 18934  0036EA  0E00               	movlw	0
 18935  0036EC  0100               	movlb	0	; () banked
 18936  0036EE  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
 18937  0036F0  0E64               	movlw	100
 18938  0036F2  6FBC               	movwf	___awmod@divisor& (0+255),b
 18939  0036F4  0100               	movlb	0	; () banked
 18940  0036F6  51C6               	movf	scale@scl& (0+255),w,b
 18941  0036F8  0100               	movlb	0	; () banked
 18942  0036FA  6FBA               	movwf	___awmod@dividend& (0+255),b
 18943  0036FC  6BBB               	clrf	(___awmod@dividend+1)& (0+255),b
 18944  0036FE  BFBA               	btfsc	___awmod@dividend& (0+255),7,b
 18945  003700  07BB               	decf	(___awmod@dividend+1)& (0+255),f,b
 18946  003702  EC87  F03D         	call	___awmod	;wreg free
 18947  003706  C0BA  F094         	movff	?___awmod,___awdiv@dividend
 18948  00370A  C0BB  F095         	movff	?___awmod+1,___awdiv@dividend+1
 18949  00370E  EC74  F03A         	call	___awdiv	;wreg free
 18950  003712  0E09               	movlw	9
 18951  003714  0100               	movlb	0	; () banked
 18952  003716  2594               	addwf	?___awdiv& (0+255),w,b
 18953  003718  0100               	movlb	0	; () banked
 18954  00371A  6F8E               	movwf	___wmul@multiplier& (0+255),b
 18955  00371C  0E00               	movlw	0
 18956  00371E  0100               	movlb	0	; () banked
 18957  003720  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
 18958  003722  0100               	movlb	0	; () banked
 18959  003724  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
 18960  003726  EC7F  F046         	call	___wmul	;wreg free
 18961  00372A  0E36               	movlw	low __npowers_
 18962  00372C  0100               	movlb	0	; () banked
 18963  00372E  258E               	addwf	?___wmul& (0+255),w,b
 18964  003730  6EF6               	movwf	tblptrl,c
 18965  003732  0EFE               	movlw	high __npowers_
 18966  003734  0100               	movlb	0	; () banked
 18967  003736  218F               	addwfc	(?___wmul+1)& (0+255),w,b
 18968  003738  6EF7               	movwf	tblptrh,c
 18969  00373A                     	if	0	;There are less than 3 active tblptr bytes
 18970  00373A                     	endif
 18971  00373A  0009               	tblrd		*+
 18972  00373C  CFF5 F09F          	movff	tablat,___ftmul@f2
 18973  003740  0009               	tblrd		*+
 18974  003742  CFF5 F0A0          	movff	tablat,___ftmul@f2+1
 18975  003746  000A               	tblrd		*-
 18976  003748  CFF5 F0A1          	movff	tablat,___ftmul@f2+2
 18977  00374C  0E00               	movlw	0
 18978  00374E  0100               	movlb	0	; () banked
 18979  003750  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
 18980  003752  0E64               	movlw	100
 18981  003754  6F96               	movwf	___awdiv@divisor& (0+255),b
 18982  003756  0100               	movlb	0	; () banked
 18983  003758  51C6               	movf	scale@scl& (0+255),w,b
 18984  00375A  0100               	movlb	0	; () banked
 18985  00375C  6F94               	movwf	___awdiv@dividend& (0+255),b
 18986  00375E  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
 18987  003760  BF94               	btfsc	___awdiv@dividend& (0+255),7,b
 18988  003762  0795               	decf	(___awdiv@dividend+1)& (0+255),f,b
 18989  003764  EC74  F03A         	call	___awdiv	;wreg free
 18990  003768  0E12               	movlw	18
 18991  00376A  0100               	movlb	0	; () banked
 18992  00376C  2594               	addwf	?___awdiv& (0+255),w,b
 18993  00376E  0100               	movlb	0	; () banked
 18994  003770  6F8E               	movwf	___wmul@multiplier& (0+255),b
 18995  003772  0E00               	movlw	0
 18996  003774  0100               	movlb	0	; () banked
 18997  003776  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
 18998  003778  0100               	movlb	0	; () banked
 18999  00377A  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
 19000  00377C  0E00               	movlw	0
 19001  00377E  0100               	movlb	0	; () banked
 19002  003780  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19003  003782  0E03               	movlw	3
 19004  003784  6F90               	movwf	___wmul@multiplicand& (0+255),b
 19005  003786  EC7F  F046         	call	___wmul	;wreg free
 19006  00378A  0E36               	movlw	low __npowers_
 19007  00378C  0100               	movlb	0	; () banked
 19008  00378E  258E               	addwf	?___wmul& (0+255),w,b
 19009  003790  6EF6               	movwf	tblptrl,c
 19010  003792  0EFE               	movlw	high __npowers_
 19011  003794  0100               	movlb	0	; () banked
 19012  003796  218F               	addwfc	(?___wmul+1)& (0+255),w,b
 19013  003798  6EF7               	movwf	tblptrh,c
 19014  00379A                     	if	0	;There are less than 3 active tblptr bytes
 19015  00379A                     	endif
 19016  00379A  0009               	tblrd		*+
 19017  00379C  CFF5 F09C          	movff	tablat,___ftmul@f1
 19018  0037A0  0009               	tblrd		*+
 19019  0037A2  CFF5 F09D          	movff	tablat,___ftmul@f1+1
 19020  0037A6  000A               	tblrd		*-
 19021  0037A8  CFF5 F09E          	movff	tablat,___ftmul@f1+2
 19022  0037AC  ECDE  F02E         	call	___ftmul	;wreg free
 19023  0037B0  C09C  F0C3         	movff	?___ftmul,_scale$3113
 19024  0037B4  C09D  F0C4         	movff	?___ftmul+1,_scale$3113+1
 19025  0037B8  C09E  F0C5         	movff	?___ftmul+2,_scale$3113+2
 19026                           
 19027                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 19028  0037BC  C0C3  F09C         	movff	_scale$3113,___ftmul@f1
 19029  0037C0  C0C4  F09D         	movff	_scale$3113+1,___ftmul@f1+1
 19030  0037C4  C0C5  F09E         	movff	_scale$3113+2,___ftmul@f1+2
 19031  0037C8  0E00               	movlw	0
 19032  0037CA  0100               	movlb	0	; () banked
 19033  0037CC  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19034  0037CE  0E03               	movlw	3
 19035  0037D0  6F90               	movwf	___wmul@multiplicand& (0+255),b
 19036  0037D2  0E00               	movlw	0
 19037  0037D4  0100               	movlb	0	; () banked
 19038  0037D6  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
 19039  0037D8  0E0A               	movlw	10
 19040  0037DA  6FBC               	movwf	___awmod@divisor& (0+255),b
 19041  0037DC  0100               	movlb	0	; () banked
 19042  0037DE  51C6               	movf	scale@scl& (0+255),w,b
 19043  0037E0  0100               	movlb	0	; () banked
 19044  0037E2  6FBA               	movwf	___awmod@dividend& (0+255),b
 19045  0037E4  6BBB               	clrf	(___awmod@dividend+1)& (0+255),b
 19046  0037E6  BFBA               	btfsc	___awmod@dividend& (0+255),7,b
 19047  0037E8  07BB               	decf	(___awmod@dividend+1)& (0+255),f,b
 19048  0037EA  EC87  F03D         	call	___awmod	;wreg free
 19049  0037EE  C0BA  F08E         	movff	?___awmod,___wmul@multiplier
 19050  0037F2  C0BB  F08F         	movff	?___awmod+1,___wmul@multiplier+1
 19051  0037F6  EC7F  F046         	call	___wmul	;wreg free
 19052  0037FA  0E36               	movlw	low __npowers_
 19053  0037FC  0100               	movlb	0	; () banked
 19054  0037FE  258E               	addwf	?___wmul& (0+255),w,b
 19055  003800  6EF6               	movwf	tblptrl,c
 19056  003802  0EFE               	movlw	high __npowers_
 19057  003804  0100               	movlb	0	; () banked
 19058  003806  218F               	addwfc	(?___wmul+1)& (0+255),w,b
 19059  003808  6EF7               	movwf	tblptrh,c
 19060  00380A                     	if	0	;There are less than 3 active tblptr bytes
 19061  00380A                     	endif
 19062  00380A  0009               	tblrd		*+
 19063  00380C  CFF5 F09F          	movff	tablat,___ftmul@f2
 19064  003810  0009               	tblrd		*+
 19065  003812  CFF5 F0A0          	movff	tablat,___ftmul@f2+1
 19066  003816  000A               	tblrd		*-
 19067  003818  CFF5 F0A1          	movff	tablat,___ftmul@f2+2
 19068  00381C  ECDE  F02E         	call	___ftmul	;wreg free
 19069  003820  D180               	goto	L22
 19070  003822  D19A               	goto	l1407
 19071  003824  D065               	goto	l12431
 19072  003826                     l12425:
 19073                           
 19074                           ;doprnt.c: 432: else if(scl > 10)
 19075  003826  0100               	movlb	0	; () banked
 19076  003828  51C6               	movf	scale@scl& (0+255),w,b
 19077  00382A  0A80               	xorlw	128
 19078  00382C  0F75               	addlw	-139
 19079  00382E  A0D8               	btfss	status,0,c
 19080  003830  D05F               	goto	l12431
 19081                           
 19082                           ; BSR set to: 0
 19083                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 19084  003832  0E00               	movlw	0
 19085  003834  0100               	movlb	0	; () banked
 19086  003836  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
 19087  003838  0E0A               	movlw	10
 19088  00383A  6F96               	movwf	___awdiv@divisor& (0+255),b
 19089  00383C  0100               	movlb	0	; () banked
 19090  00383E  51C6               	movf	scale@scl& (0+255),w,b
 19091  003840  0100               	movlb	0	; () banked
 19092  003842  6F94               	movwf	___awdiv@dividend& (0+255),b
 19093  003844  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
 19094  003846  BF94               	btfsc	___awdiv@dividend& (0+255),7,b
 19095  003848  0795               	decf	(___awdiv@dividend+1)& (0+255),f,b
 19096  00384A  EC74  F03A         	call	___awdiv	;wreg free
 19097  00384E  0E09               	movlw	9
 19098  003850  0100               	movlb	0	; () banked
 19099  003852  2594               	addwf	?___awdiv& (0+255),w,b
 19100  003854  0100               	movlb	0	; () banked
 19101  003856  6F8E               	movwf	___wmul@multiplier& (0+255),b
 19102  003858  0E00               	movlw	0
 19103  00385A  0100               	movlb	0	; () banked
 19104  00385C  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
 19105  00385E  0100               	movlb	0	; () banked
 19106  003860  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
 19107  003862  0E00               	movlw	0
 19108  003864  0100               	movlb	0	; () banked
 19109  003866  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19110  003868  0E03               	movlw	3
 19111  00386A  6F90               	movwf	___wmul@multiplicand& (0+255),b
 19112  00386C  EC7F  F046         	call	___wmul	;wreg free
 19113  003870  0E36               	movlw	low __npowers_
 19114  003872  0100               	movlb	0	; () banked
 19115  003874  258E               	addwf	?___wmul& (0+255),w,b
 19116  003876  6EF6               	movwf	tblptrl,c
 19117  003878  0EFE               	movlw	high __npowers_
 19118  00387A  0100               	movlb	0	; () banked
 19119  00387C  218F               	addwfc	(?___wmul+1)& (0+255),w,b
 19120  00387E  6EF7               	movwf	tblptrh,c
 19121  003880                     	if	0	;There are less than 3 active tblptr bytes
 19122  003880                     	endif
 19123  003880  0009               	tblrd		*+
 19124  003882  CFF5 F09C          	movff	tablat,___ftmul@f1
 19125  003886  0009               	tblrd		*+
 19126  003888  CFF5 F09D          	movff	tablat,___ftmul@f1+1
 19127  00388C  000A               	tblrd		*-
 19128  00388E  CFF5 F09E          	movff	tablat,___ftmul@f1+2
 19129  003892  0E00               	movlw	0
 19130  003894  0100               	movlb	0	; () banked
 19131  003896  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19132  003898  0E03               	movlw	3
 19133  00389A  6F90               	movwf	___wmul@multiplicand& (0+255),b
 19134  00389C  0E00               	movlw	0
 19135  00389E  0100               	movlb	0	; () banked
 19136  0038A0  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
 19137  0038A2  0E0A               	movlw	10
 19138  0038A4  6FBC               	movwf	___awmod@divisor& (0+255),b
 19139  0038A6  0100               	movlb	0	; () banked
 19140  0038A8  51C6               	movf	scale@scl& (0+255),w,b
 19141  0038AA  0100               	movlb	0	; () banked
 19142  0038AC  6FBA               	movwf	___awmod@dividend& (0+255),b
 19143  0038AE  6BBB               	clrf	(___awmod@dividend+1)& (0+255),b
 19144  0038B0  BFBA               	btfsc	___awmod@dividend& (0+255),7,b
 19145  0038B2  07BB               	decf	(___awmod@dividend+1)& (0+255),f,b
 19146  0038B4  EC87  F03D         	call	___awmod	;wreg free
 19147  0038B8  C0BA  F08E         	movff	?___awmod,___wmul@multiplier
 19148  0038BC  C0BB  F08F         	movff	?___awmod+1,___wmul@multiplier+1
 19149  0038C0  EC7F  F046         	call	___wmul	;wreg free
 19150  0038C4  0E36               	movlw	low __npowers_
 19151  0038C6  0100               	movlb	0	; () banked
 19152  0038C8  258E               	addwf	?___wmul& (0+255),w,b
 19153  0038CA  6EF6               	movwf	tblptrl,c
 19154  0038CC  0EFE               	movlw	high __npowers_
 19155  0038CE  0100               	movlb	0	; () banked
 19156  0038D0  218F               	addwfc	(?___wmul+1)& (0+255),w,b
 19157  0038D2  6EF7               	movwf	tblptrh,c
 19158  0038D4                     	if	0	;There are less than 3 active tblptr bytes
 19159  0038D4                     	endif
 19160  0038D4  0009               	tblrd		*+
 19161  0038D6  CFF5 F09F          	movff	tablat,___ftmul@f2
 19162  0038DA  0009               	tblrd		*+
 19163  0038DC  CFF5 F0A0          	movff	tablat,___ftmul@f2+1
 19164  0038E0  000A               	tblrd		*-
 19165  0038E2  CFF5 F0A1          	movff	tablat,___ftmul@f2+2
 19166  0038E6  ECDE  F02E         	call	___ftmul	;wreg free
 19167  0038EA  D11B               	goto	L22
 19168  0038EC  D135               	goto	l1407
 19169  0038EE  D000               	goto	l12431
 19170  0038F0                     l12431:
 19171                           
 19172                           ;doprnt.c: 434: return _npowers_[scl];
 19173  0038F0  0100               	movlb	0	; () banked
 19174  0038F2  51C6               	movf	scale@scl& (0+255),w,b
 19175  0038F4  0D03               	mullw	3
 19176  0038F6  0E36               	movlw	low __npowers_
 19177  0038F8  24F3               	addwf	prodl,w,c
 19178  0038FA  6EF6               	movwf	tblptrl,c
 19179  0038FC  0EFE               	movlw	high __npowers_
 19180  0038FE  D120               	goto	L21
 19181                           
 19182                           ; BSR set to: 0
 19183  003900  D12B               	goto	l1407
 19184  003902                     l12435:
 19185                           
 19186                           ; BSR set to: 0
 19187                           ;doprnt.c: 435: }
 19188                           ;doprnt.c: 436: if(scl>=110)
 19189  003902  0100               	movlb	0	; () banked
 19190  003904  51C6               	movf	scale@scl& (0+255),w,b
 19191  003906  0A80               	xorlw	128
 19192  003908  0F12               	addlw	-238
 19193  00390A  A0D8               	btfss	status,0,c
 19194  00390C  D0A8               	goto	l12443
 19195                           
 19196                           ; BSR set to: 0
 19197                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 19198  00390E  0E00               	movlw	0
 19199  003910  0100               	movlb	0	; () banked
 19200  003912  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19201  003914  0E03               	movlw	3
 19202  003916  6F90               	movwf	___wmul@multiplicand& (0+255),b
 19203  003918  0E00               	movlw	0
 19204  00391A  0100               	movlb	0	; () banked
 19205  00391C  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
 19206  00391E  0E0A               	movlw	10
 19207  003920  6F96               	movwf	___awdiv@divisor& (0+255),b
 19208  003922  0E00               	movlw	0
 19209  003924  0100               	movlb	0	; () banked
 19210  003926  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
 19211  003928  0E64               	movlw	100
 19212  00392A  6FBC               	movwf	___awmod@divisor& (0+255),b
 19213  00392C  0100               	movlb	0	; () banked
 19214  00392E  51C6               	movf	scale@scl& (0+255),w,b
 19215  003930  0100               	movlb	0	; () banked
 19216  003932  6FBA               	movwf	___awmod@dividend& (0+255),b
 19217  003934  6BBB               	clrf	(___awmod@dividend+1)& (0+255),b
 19218  003936  BFBA               	btfsc	___awmod@dividend& (0+255),7,b
 19219  003938  07BB               	decf	(___awmod@dividend+1)& (0+255),f,b
 19220  00393A  EC87  F03D         	call	___awmod	;wreg free
 19221  00393E  C0BA  F094         	movff	?___awmod,___awdiv@dividend
 19222  003942  C0BB  F095         	movff	?___awmod+1,___awdiv@dividend+1
 19223  003946  EC74  F03A         	call	___awdiv	;wreg free
 19224  00394A  0E09               	movlw	9
 19225  00394C  0100               	movlb	0	; () banked
 19226  00394E  2594               	addwf	?___awdiv& (0+255),w,b
 19227  003950  0100               	movlb	0	; () banked
 19228  003952  6F8E               	movwf	___wmul@multiplier& (0+255),b
 19229  003954  0E00               	movlw	0
 19230  003956  0100               	movlb	0	; () banked
 19231  003958  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
 19232  00395A  0100               	movlb	0	; () banked
 19233  00395C  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
 19234  00395E  EC7F  F046         	call	___wmul	;wreg free
 19235  003962  0E5D               	movlw	low __powers_
 19236  003964  0100               	movlb	0	; () banked
 19237  003966  258E               	addwf	?___wmul& (0+255),w,b
 19238  003968  6EF6               	movwf	tblptrl,c
 19239  00396A  0EFE               	movlw	high __powers_
 19240  00396C  0100               	movlb	0	; () banked
 19241  00396E  218F               	addwfc	(?___wmul+1)& (0+255),w,b
 19242  003970  6EF7               	movwf	tblptrh,c
 19243  003972                     	if	0	;There are less than 3 active tblptr bytes
 19244  003972                     	endif
 19245  003972  0009               	tblrd		*+
 19246  003974  CFF5 F09F          	movff	tablat,___ftmul@f2
 19247  003978  0009               	tblrd		*+
 19248  00397A  CFF5 F0A0          	movff	tablat,___ftmul@f2+1
 19249  00397E  000A               	tblrd		*-
 19250  003980  CFF5 F0A1          	movff	tablat,___ftmul@f2+2
 19251  003984  0E00               	movlw	0
 19252  003986  0100               	movlb	0	; () banked
 19253  003988  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
 19254  00398A  0E64               	movlw	100
 19255  00398C  6F96               	movwf	___awdiv@divisor& (0+255),b
 19256  00398E  0100               	movlb	0	; () banked
 19257  003990  51C6               	movf	scale@scl& (0+255),w,b
 19258  003992  0100               	movlb	0	; () banked
 19259  003994  6F94               	movwf	___awdiv@dividend& (0+255),b
 19260  003996  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
 19261  003998  BF94               	btfsc	___awdiv@dividend& (0+255),7,b
 19262  00399A  0795               	decf	(___awdiv@dividend+1)& (0+255),f,b
 19263  00399C  EC74  F03A         	call	___awdiv	;wreg free
 19264  0039A0  0E12               	movlw	18
 19265  0039A2  0100               	movlb	0	; () banked
 19266  0039A4  2594               	addwf	?___awdiv& (0+255),w,b
 19267  0039A6  0100               	movlb	0	; () banked
 19268  0039A8  6F8E               	movwf	___wmul@multiplier& (0+255),b
 19269  0039AA  0E00               	movlw	0
 19270  0039AC  0100               	movlb	0	; () banked
 19271  0039AE  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
 19272  0039B0  0100               	movlb	0	; () banked
 19273  0039B2  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
 19274  0039B4  0E00               	movlw	0
 19275  0039B6  0100               	movlb	0	; () banked
 19276  0039B8  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19277  0039BA  0E03               	movlw	3
 19278  0039BC  6F90               	movwf	___wmul@multiplicand& (0+255),b
 19279  0039BE  EC7F  F046         	call	___wmul	;wreg free
 19280  0039C2  0E5D               	movlw	low __powers_
 19281  0039C4  0100               	movlb	0	; () banked
 19282  0039C6  258E               	addwf	?___wmul& (0+255),w,b
 19283  0039C8  6EF6               	movwf	tblptrl,c
 19284  0039CA  0EFE               	movlw	high __powers_
 19285  0039CC  0100               	movlb	0	; () banked
 19286  0039CE  218F               	addwfc	(?___wmul+1)& (0+255),w,b
 19287  0039D0  6EF7               	movwf	tblptrh,c
 19288  0039D2                     	if	0	;There are less than 3 active tblptr bytes
 19289  0039D2                     	endif
 19290  0039D2  0009               	tblrd		*+
 19291  0039D4  CFF5 F09C          	movff	tablat,___ftmul@f1
 19292  0039D8  0009               	tblrd		*+
 19293  0039DA  CFF5 F09D          	movff	tablat,___ftmul@f1+1
 19294  0039DE  000A               	tblrd		*-
 19295  0039E0  CFF5 F09E          	movff	tablat,___ftmul@f1+2
 19296  0039E4  ECDE  F02E         	call	___ftmul	;wreg free
 19297  0039E8  C09C  F0C3         	movff	?___ftmul,_scale$3113
 19298  0039EC  C09D  F0C4         	movff	?___ftmul+1,_scale$3113+1
 19299  0039F0  C09E  F0C5         	movff	?___ftmul+2,_scale$3113+2
 19300                           
 19301                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 19302  0039F4  C0C3  F09C         	movff	_scale$3113,___ftmul@f1
 19303  0039F8  C0C4  F09D         	movff	_scale$3113+1,___ftmul@f1+1
 19304  0039FC  C0C5  F09E         	movff	_scale$3113+2,___ftmul@f1+2
 19305  003A00  0E00               	movlw	0
 19306  003A02  0100               	movlb	0	; () banked
 19307  003A04  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19308  003A06  0E03               	movlw	3
 19309  003A08  6F90               	movwf	___wmul@multiplicand& (0+255),b
 19310  003A0A  0E00               	movlw	0
 19311  003A0C  0100               	movlb	0	; () banked
 19312  003A0E  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
 19313  003A10  0E0A               	movlw	10
 19314  003A12  6FBC               	movwf	___awmod@divisor& (0+255),b
 19315  003A14  0100               	movlb	0	; () banked
 19316  003A16  51C6               	movf	scale@scl& (0+255),w,b
 19317  003A18  0100               	movlb	0	; () banked
 19318  003A1A  6FBA               	movwf	___awmod@dividend& (0+255),b
 19319  003A1C  6BBB               	clrf	(___awmod@dividend+1)& (0+255),b
 19320  003A1E  BFBA               	btfsc	___awmod@dividend& (0+255),7,b
 19321  003A20  07BB               	decf	(___awmod@dividend+1)& (0+255),f,b
 19322  003A22  EC87  F03D         	call	___awmod	;wreg free
 19323  003A26  C0BA  F08E         	movff	?___awmod,___wmul@multiplier
 19324  003A2A  C0BB  F08F         	movff	?___awmod+1,___wmul@multiplier+1
 19325  003A2E  EC7F  F046         	call	___wmul	;wreg free
 19326  003A32  0E5D               	movlw	low __powers_
 19327  003A34  0100               	movlb	0	; () banked
 19328  003A36  258E               	addwf	?___wmul& (0+255),w,b
 19329  003A38  6EF6               	movwf	tblptrl,c
 19330  003A3A  0EFE               	movlw	high __powers_
 19331  003A3C  0100               	movlb	0	; () banked
 19332  003A3E  218F               	addwfc	(?___wmul+1)& (0+255),w,b
 19333  003A40  6EF7               	movwf	tblptrh,c
 19334  003A42                     	if	0	;There are less than 3 active tblptr bytes
 19335  003A42                     	endif
 19336  003A42  0009               	tblrd		*+
 19337  003A44  CFF5 F09F          	movff	tablat,___ftmul@f2
 19338  003A48  0009               	tblrd		*+
 19339  003A4A  CFF5 F0A0          	movff	tablat,___ftmul@f2+1
 19340  003A4E  000A               	tblrd		*-
 19341  003A50  CFF5 F0A1          	movff	tablat,___ftmul@f2+2
 19342  003A54  ECDE  F02E         	call	___ftmul	;wreg free
 19343  003A58  D064               	goto	L22
 19344  003A5A  D07E               	goto	l1407
 19345  003A5C  D06A               	goto	l12449
 19346  003A5E                     l12443:
 19347                           
 19348                           ;doprnt.c: 438: else if(scl > 10)
 19349  003A5E  0100               	movlb	0	; () banked
 19350  003A60  51C6               	movf	scale@scl& (0+255),w,b
 19351  003A62  0A80               	xorlw	128
 19352  003A64  0F75               	addlw	-139
 19353  003A66  A0D8               	btfss	status,0,c
 19354  003A68  D064               	goto	l12449
 19355                           
 19356                           ; BSR set to: 0
 19357                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 19358  003A6A  0E00               	movlw	0
 19359  003A6C  0100               	movlb	0	; () banked
 19360  003A6E  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
 19361  003A70  0E0A               	movlw	10
 19362  003A72  6F96               	movwf	___awdiv@divisor& (0+255),b
 19363  003A74  0100               	movlb	0	; () banked
 19364  003A76  51C6               	movf	scale@scl& (0+255),w,b
 19365  003A78  0100               	movlb	0	; () banked
 19366  003A7A  6F94               	movwf	___awdiv@dividend& (0+255),b
 19367  003A7C  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
 19368  003A7E  BF94               	btfsc	___awdiv@dividend& (0+255),7,b
 19369  003A80  0795               	decf	(___awdiv@dividend+1)& (0+255),f,b
 19370  003A82  EC74  F03A         	call	___awdiv	;wreg free
 19371  003A86  0E09               	movlw	9
 19372  003A88  0100               	movlb	0	; () banked
 19373  003A8A  2594               	addwf	?___awdiv& (0+255),w,b
 19374  003A8C  0100               	movlb	0	; () banked
 19375  003A8E  6F8E               	movwf	___wmul@multiplier& (0+255),b
 19376  003A90  0E00               	movlw	0
 19377  003A92  0100               	movlb	0	; () banked
 19378  003A94  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
 19379  003A96  0100               	movlb	0	; () banked
 19380  003A98  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
 19381  003A9A  0E00               	movlw	0
 19382  003A9C  0100               	movlb	0	; () banked
 19383  003A9E  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19384  003AA0  0E03               	movlw	3
 19385  003AA2  6F90               	movwf	___wmul@multiplicand& (0+255),b
 19386  003AA4  EC7F  F046         	call	___wmul	;wreg free
 19387  003AA8  0E5D               	movlw	low __powers_
 19388  003AAA  0100               	movlb	0	; () banked
 19389  003AAC  258E               	addwf	?___wmul& (0+255),w,b
 19390  003AAE  6EF6               	movwf	tblptrl,c
 19391  003AB0  0EFE               	movlw	high __powers_
 19392  003AB2  0100               	movlb	0	; () banked
 19393  003AB4  218F               	addwfc	(?___wmul+1)& (0+255),w,b
 19394  003AB6  6EF7               	movwf	tblptrh,c
 19395  003AB8                     	if	0	;There are less than 3 active tblptr bytes
 19396  003AB8                     	endif
 19397  003AB8  0009               	tblrd		*+
 19398  003ABA  CFF5 F09C          	movff	tablat,___ftmul@f1
 19399  003ABE  0009               	tblrd		*+
 19400  003AC0  CFF5 F09D          	movff	tablat,___ftmul@f1+1
 19401  003AC4  000A               	tblrd		*-
 19402  003AC6  CFF5 F09E          	movff	tablat,___ftmul@f1+2
 19403  003ACA  0E00               	movlw	0
 19404  003ACC  0100               	movlb	0	; () banked
 19405  003ACE  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19406  003AD0  0E03               	movlw	3
 19407  003AD2  6F90               	movwf	___wmul@multiplicand& (0+255),b
 19408  003AD4  0E00               	movlw	0
 19409  003AD6  0100               	movlb	0	; () banked
 19410  003AD8  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
 19411  003ADA  0E0A               	movlw	10
 19412  003ADC  6FBC               	movwf	___awmod@divisor& (0+255),b
 19413  003ADE  0100               	movlb	0	; () banked
 19414  003AE0  51C6               	movf	scale@scl& (0+255),w,b
 19415  003AE2  0100               	movlb	0	; () banked
 19416  003AE4  6FBA               	movwf	___awmod@dividend& (0+255),b
 19417  003AE6  6BBB               	clrf	(___awmod@dividend+1)& (0+255),b
 19418  003AE8  BFBA               	btfsc	___awmod@dividend& (0+255),7,b
 19419  003AEA  07BB               	decf	(___awmod@dividend+1)& (0+255),f,b
 19420  003AEC  EC87  F03D         	call	___awmod	;wreg free
 19421  003AF0  C0BA  F08E         	movff	?___awmod,___wmul@multiplier
 19422  003AF4  C0BB  F08F         	movff	?___awmod+1,___wmul@multiplier+1
 19423  003AF8  EC7F  F046         	call	___wmul	;wreg free
 19424  003AFC  0E5D               	movlw	low __powers_
 19425  003AFE  0100               	movlb	0	; () banked
 19426  003B00  258E               	addwf	?___wmul& (0+255),w,b
 19427  003B02  6EF6               	movwf	tblptrl,c
 19428  003B04  0EFE               	movlw	high __powers_
 19429  003B06  0100               	movlb	0	; () banked
 19430  003B08  218F               	addwfc	(?___wmul+1)& (0+255),w,b
 19431  003B0A  6EF7               	movwf	tblptrh,c
 19432  003B0C                     	if	0	;There are less than 3 active tblptr bytes
 19433  003B0C                     	endif
 19434  003B0C  0009               	tblrd		*+
 19435  003B0E  CFF5 F09F          	movff	tablat,___ftmul@f2
 19436  003B12  0009               	tblrd		*+
 19437  003B14  CFF5 F0A0          	movff	tablat,___ftmul@f2+1
 19438  003B18  000A               	tblrd		*-
 19439  003B1A  CFF5 F0A1          	movff	tablat,___ftmul@f2+2
 19440  003B1E  ECDE  F02E         	call	___ftmul	;wreg free
 19441  003B22                     L22:
 19442  003B22  C09C  F0C0         	movff	?___ftmul,?_scale
 19443  003B26  C09D  F0C1         	movff	?___ftmul+1,?_scale+1
 19444  003B2A  C09E  F0C2         	movff	?___ftmul+2,?_scale+2
 19445  003B2E  D014               	goto	l1407
 19446  003B30  D000               	goto	l12449
 19447  003B32                     l12449:
 19448                           
 19449                           ;doprnt.c: 440: return _powers_[scl];
 19450  003B32  0100               	movlb	0	; () banked
 19451  003B34  51C6               	movf	scale@scl& (0+255),w,b
 19452  003B36  0D03               	mullw	3
 19453  003B38  0E5D               	movlw	low __powers_
 19454  003B3A  24F3               	addwf	prodl,w,c
 19455  003B3C  6EF6               	movwf	tblptrl,c
 19456  003B3E  0EFE               	movlw	high __powers_
 19457  003B40                     L21:
 19458  003B40  20F4               	addwfc	prodh,w,c
 19459  003B42  6EF7               	movwf	tblptrh,c
 19460  003B44                     	if	0	;There are less than 3 active tblptr bytes
 19461  003B44                     	endif
 19462  003B44  0009               	tblrd		*+
 19463  003B46  CFF5 F0C0          	movff	tablat,?_scale
 19464  003B4A  0009               	tblrd		*+
 19465  003B4C  CFF5 F0C1          	movff	tablat,?_scale+1
 19466  003B50  000A               	tblrd		*-
 19467  003B52  CFF5 F0C2          	movff	tablat,?_scale+2
 19468  003B56  D000               	goto	l1407
 19469  003B58                     l1407:
 19470  003B58  0012               	return		;funcret
 19471  003B5A                     __end_of_scale:
 19472                           	opt stack 0
 19473                           tblptru	equ	0xFF8
 19474                           tblptrh	equ	0xFF7
 19475                           tblptrl	equ	0xFF6
 19476                           tablat	equ	0xFF5
 19477                           prodh	equ	0xFF4
 19478                           prodl	equ	0xFF3
 19479                           intcon	equ	0xFF2
 19480                           intcon2	equ	0xFF1
 19481                           postinc0	equ	0xFEE
 19482                           wreg	equ	0xFE8
 19483                           postdec1	equ	0xFE5
 19484                           fsr1l	equ	0xFE1
 19485                           indf2	equ	0xFDF
 19486                           postinc2	equ	0xFDE
 19487                           postdec2	equ	0xFDD
 19488                           fsr2h	equ	0xFDA
 19489                           fsr2l	equ	0xFD9
 19490                           status	equ	0xFD8
 19491                           
 19492 ;; *************** function _putch *****************
 19493 ;; Defined at:
 19494 ;;		line 78 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Main.c"
 19495 ;; Parameters:    Size  Location     Type
 19496 ;;  c               1    wreg     unsigned char 
 19497 ;; Auto vars:     Size  Location     Type
 19498 ;;  c               1   14[BANK0 ] unsigned char 
 19499 ;; Return value:  Size  Location     Type
 19500 ;;		None               void
 19501 ;; Registers used:
 19502 ;;		wreg
 19503 ;; Tracked objects:
 19504 ;;		On entry : 0/0
 19505 ;;		On exit  : 0/0
 19506 ;;		Unchanged: 0/0
 19507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19509 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19511 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19512 ;;Total ram usage:        1 bytes
 19513 ;; Hardware stack levels used:    1
 19514 ;; Hardware stack levels required when called:    6
 19515 ;; This function calls:
 19516 ;;		Nothing
 19517 ;; This function is called by:
 19518 ;;		_printf
 19519 ;; This function uses a non-reentrant model
 19520 ;;
 19521                           
 19522                           	psect	text72
 19523  009274                     __ptext72:
 19524                           	opt stack 0
 19525  009274                     _putch:
 19526                           	opt stack 23
 19527                           
 19528                           ;incstack = 0
 19529                           ;putch@c stored from wreg
 19530  009274  0100               	movlb	0	; () banked
 19531  009276  6F8E               	movwf	putch@c& (0+255),b
 19532                           
 19533                           ; BSR set to: 0
 19534                           ;Main.c: 80: while (!TRMT);
 19535  009278  D000               	goto	l520
 19536  00927A                     l520:
 19537  00927A  A2AC               	btfss	4012,1,c	;volatile
 19538  00927C  D7FE               	goto	l520
 19539                           
 19540                           ;Main.c: 81: TXREG = c;
 19541  00927E  C08E  FFAD         	movff	putch@c,4013	;volatile
 19542  009282  0012               	return		;funcret
 19543  009284                     __end_of_putch:
 19544                           	opt stack 0
 19545                           tblptru	equ	0xFF8
 19546                           tblptrh	equ	0xFF7
 19547                           tblptrl	equ	0xFF6
 19548                           tablat	equ	0xFF5
 19549                           prodh	equ	0xFF4
 19550                           prodl	equ	0xFF3
 19551                           intcon	equ	0xFF2
 19552                           intcon2	equ	0xFF1
 19553                           postinc0	equ	0xFEE
 19554                           wreg	equ	0xFE8
 19555                           postdec1	equ	0xFE5
 19556                           fsr1l	equ	0xFE1
 19557                           indf2	equ	0xFDF
 19558                           postinc2	equ	0xFDE
 19559                           postdec2	equ	0xFDD
 19560                           fsr2h	equ	0xFDA
 19561                           fsr2l	equ	0xFD9
 19562                           status	equ	0xFD8
 19563                           
 19564 ;; *************** function _isdigit *****************
 19565 ;; Defined at:
 19566 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
 19567 ;; Parameters:    Size  Location     Type
 19568 ;;  c               1    wreg     unsigned char 
 19569 ;; Auto vars:     Size  Location     Type
 19570 ;;  c               1   16[BANK0 ] unsigned char 
 19571 ;; Return value:  Size  Location     Type
 19572 ;;		None               void
 19573 ;; Registers used:
 19574 ;;		wreg, status,2, status,0
 19575 ;; Tracked objects:
 19576 ;;		On entry : 0/0
 19577 ;;		On exit  : 0/0
 19578 ;;		Unchanged: 0/0
 19579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19581 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19582 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19583 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19584 ;;Total ram usage:        3 bytes
 19585 ;; Hardware stack levels used:    1
 19586 ;; Hardware stack levels required when called:    6
 19587 ;; This function calls:
 19588 ;;		Nothing
 19589 ;; This function is called by:
 19590 ;;		_printf
 19591 ;; This function uses a non-reentrant model
 19592 ;;
 19593                           
 19594                           	psect	text73
 19595  008E30                     __ptext73:
 19596                           	opt stack 0
 19597  008E30                     _isdigit:
 19598                           	opt stack 23
 19599                           
 19600                           ;incstack = 0
 19601                           ;isdigit@c stored from wreg
 19602  008E30  0100               	movlb	0	; () banked
 19603  008E32  6F90               	movwf	isdigit@c& (0+255),b
 19604                           
 19605                           ; BSR set to: 0
 19606  008E34  0E00               	movlw	0
 19607  008E36  0100               	movlb	0	; () banked
 19608  008E38  6F8F               	movwf	_isdigit$2749& (0+255),b
 19609                           
 19610                           ; BSR set to: 0
 19611  008E3A  0E3A               	movlw	58
 19612  008E3C  0100               	movlb	0	; () banked
 19613  008E3E  6190               	cpfslt	isdigit@c& (0+255),b
 19614  008E40  D008               	goto	l12461
 19615                           
 19616                           ; BSR set to: 0
 19617  008E42  0E2F               	movlw	47
 19618  008E44  0100               	movlb	0	; () banked
 19619  008E46  6590               	cpfsgt	isdigit@c& (0+255),b
 19620  008E48  D004               	goto	l12461
 19621                           
 19622                           ; BSR set to: 0
 19623  008E4A  0E01               	movlw	1
 19624  008E4C  0100               	movlb	0	; () banked
 19625  008E4E  6F8F               	movwf	_isdigit$2749& (0+255),b
 19626  008E50  D000               	goto	l12461
 19627  008E52                     l12461:
 19628                           
 19629                           ; BSR set to: 0
 19630  008E52  C08F  F08E         	movff	_isdigit$2749,??_isdigit
 19631  008E56  0100               	movlb	0	; () banked
 19632  008E58  318E               	rrcf	??_isdigit& (0+255),w,b
 19633  008E5A  D000               	goto	l2162
 19634  008E5C                     l2162:
 19635                           
 19636                           ; BSR set to: 0
 19637  008E5C  0012               	return		;funcret
 19638  008E5E                     __end_of_isdigit:
 19639                           	opt stack 0
 19640                           tblptru	equ	0xFF8
 19641                           tblptrh	equ	0xFF7
 19642                           tblptrl	equ	0xFF6
 19643                           tablat	equ	0xFF5
 19644                           prodh	equ	0xFF4
 19645                           prodl	equ	0xFF3
 19646                           intcon	equ	0xFF2
 19647                           intcon2	equ	0xFF1
 19648                           postinc0	equ	0xFEE
 19649                           wreg	equ	0xFE8
 19650                           postdec1	equ	0xFE5
 19651                           fsr1l	equ	0xFE1
 19652                           indf2	equ	0xFDF
 19653                           postinc2	equ	0xFDE
 19654                           postdec2	equ	0xFDD
 19655                           fsr2h	equ	0xFDA
 19656                           fsr2l	equ	0xFD9
 19657                           status	equ	0xFD8
 19658                           
 19659 ;; *************** function _fround *****************
 19660 ;; Defined at:
 19661 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 19662 ;; Parameters:    Size  Location     Type
 19663 ;;  prec            1    wreg     unsigned char 
 19664 ;; Auto vars:     Size  Location     Type
 19665 ;;  prec            1   73[BANK0 ] unsigned char 
 19666 ;; Return value:  Size  Location     Type
 19667 ;;                  3   64[BANK0 ] unsigned char 
 19668 ;; Registers used:
 19669 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19670 ;; Tracked objects:
 19671 ;;		On entry : 0/0
 19672 ;;		On exit  : 0/0
 19673 ;;		Unchanged: 0/0
 19674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19675 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19676 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19678 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19679 ;;Total ram usage:       10 bytes
 19680 ;; Hardware stack levels used:    1
 19681 ;; Hardware stack levels required when called:    8
 19682 ;; This function calls:
 19683 ;;		___awdiv
 19684 ;;		___awmod
 19685 ;;		___ftmul
 19686 ;;		___wmul
 19687 ;; This function is called by:
 19688 ;;		_printf
 19689 ;; This function uses a non-reentrant model
 19690 ;;
 19691                           
 19692                           	psect	text74
 19693  004374                     __ptext74:
 19694                           	opt stack 0
 19695  004374                     _fround:
 19696                           	opt stack 21
 19697                           
 19698                           ; BSR set to: 0
 19699                           ;incstack = 0
 19700                           ;fround@prec stored from wreg
 19701  004374  0100               	movlb	0	; () banked
 19702  004376  6FC9               	movwf	fround@prec& (0+255),b
 19703                           
 19704                           ; BSR set to: 0
 19705                           ;doprnt.c: 413: if(prec>=110)
 19706  004378  0E6D               	movlw	109
 19707  00437A  0100               	movlb	0	; () banked
 19708  00437C  65C9               	cpfsgt	fround@prec& (0+255),b
 19709  00437E  D0B6               	goto	l12403
 19710                           
 19711                           ; BSR set to: 0
 19712                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 19713  004380  0E00               	movlw	0
 19714  004382  0100               	movlb	0	; () banked
 19715  004384  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19716  004386  0E03               	movlw	3
 19717  004388  6F90               	movwf	___wmul@multiplicand& (0+255),b
 19718  00438A  0E00               	movlw	0
 19719  00438C  0100               	movlb	0	; () banked
 19720  00438E  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
 19721  004390  0E0A               	movlw	10
 19722  004392  6F96               	movwf	___awdiv@divisor& (0+255),b
 19723  004394  0E00               	movlw	0
 19724  004396  0100               	movlb	0	; () banked
 19725  004398  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
 19726  00439A  0E64               	movlw	100
 19727  00439C  6FBC               	movwf	___awmod@divisor& (0+255),b
 19728  00439E  C0C9  F0BA         	movff	fround@prec,___awmod@dividend
 19729  0043A2  0100               	movlb	0	; () banked
 19730  0043A4  6BBB               	clrf	(___awmod@dividend+1)& (0+255),b
 19731  0043A6  EC87  F03D         	call	___awmod	;wreg free
 19732  0043AA  C0BA  F094         	movff	?___awmod,___awdiv@dividend
 19733  0043AE  C0BB  F095         	movff	?___awmod+1,___awdiv@dividend+1
 19734  0043B2  EC74  F03A         	call	___awdiv	;wreg free
 19735  0043B6  0E09               	movlw	9
 19736  0043B8  0100               	movlb	0	; () banked
 19737  0043BA  2594               	addwf	?___awdiv& (0+255),w,b
 19738  0043BC  0100               	movlb	0	; () banked
 19739  0043BE  6F8E               	movwf	___wmul@multiplier& (0+255),b
 19740  0043C0  0E00               	movlw	0
 19741  0043C2  0100               	movlb	0	; () banked
 19742  0043C4  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
 19743  0043C6  0100               	movlb	0	; () banked
 19744  0043C8  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
 19745  0043CA  EC7F  F046         	call	___wmul	;wreg free
 19746  0043CE  0E36               	movlw	low __npowers_
 19747  0043D0  0100               	movlb	0	; () banked
 19748  0043D2  258E               	addwf	?___wmul& (0+255),w,b
 19749  0043D4  6EF6               	movwf	tblptrl,c
 19750  0043D6  0EFE               	movlw	high __npowers_
 19751  0043D8  0100               	movlb	0	; () banked
 19752  0043DA  218F               	addwfc	(?___wmul+1)& (0+255),w,b
 19753  0043DC  6EF7               	movwf	tblptrh,c
 19754  0043DE                     	if	0	;There are less than 3 active tblptr bytes
 19755  0043DE                     	endif
 19756  0043DE  0009               	tblrd		*+
 19757  0043E0  CFF5 F09F          	movff	tablat,___ftmul@f2
 19758  0043E4  0009               	tblrd		*+
 19759  0043E6  CFF5 F0A0          	movff	tablat,___ftmul@f2+1
 19760  0043EA  000A               	tblrd		*-
 19761  0043EC  CFF5 F0A1          	movff	tablat,___ftmul@f2+2
 19762  0043F0  0E00               	movlw	0
 19763  0043F2  0100               	movlb	0	; () banked
 19764  0043F4  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
 19765  0043F6  0E64               	movlw	100
 19766  0043F8  6F96               	movwf	___awdiv@divisor& (0+255),b
 19767  0043FA  C0C9  F094         	movff	fround@prec,___awdiv@dividend
 19768  0043FE  0100               	movlb	0	; () banked
 19769  004400  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
 19770  004402  EC74  F03A         	call	___awdiv	;wreg free
 19771  004406  0E12               	movlw	18
 19772  004408  0100               	movlb	0	; () banked
 19773  00440A  2594               	addwf	?___awdiv& (0+255),w,b
 19774  00440C  0100               	movlb	0	; () banked
 19775  00440E  6F8E               	movwf	___wmul@multiplier& (0+255),b
 19776  004410  0E00               	movlw	0
 19777  004412  0100               	movlb	0	; () banked
 19778  004414  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
 19779  004416  0100               	movlb	0	; () banked
 19780  004418  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
 19781  00441A  0E00               	movlw	0
 19782  00441C  0100               	movlb	0	; () banked
 19783  00441E  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19784  004420  0E03               	movlw	3
 19785  004422  6F90               	movwf	___wmul@multiplicand& (0+255),b
 19786  004424  EC7F  F046         	call	___wmul	;wreg free
 19787  004428  0E36               	movlw	low __npowers_
 19788  00442A  0100               	movlb	0	; () banked
 19789  00442C  258E               	addwf	?___wmul& (0+255),w,b
 19790  00442E  6EF6               	movwf	tblptrl,c
 19791  004430  0EFE               	movlw	high __npowers_
 19792  004432  0100               	movlb	0	; () banked
 19793  004434  218F               	addwfc	(?___wmul+1)& (0+255),w,b
 19794  004436  6EF7               	movwf	tblptrh,c
 19795  004438                     	if	0	;There are less than 3 active tblptr bytes
 19796  004438                     	endif
 19797  004438  0009               	tblrd		*+
 19798  00443A  CFF5 F09C          	movff	tablat,___ftmul@f1
 19799  00443E  0009               	tblrd		*+
 19800  004440  CFF5 F09D          	movff	tablat,___ftmul@f1+1
 19801  004444  000A               	tblrd		*-
 19802  004446  CFF5 F09E          	movff	tablat,___ftmul@f1+2
 19803  00444A  ECDE  F02E         	call	___ftmul	;wreg free
 19804  00444E  C09C  F0C6         	movff	?___ftmul,_fround$3111
 19805  004452  C09D  F0C7         	movff	?___ftmul+1,_fround$3111+1
 19806  004456  C09E  F0C8         	movff	?___ftmul+2,_fround$3111+2
 19807                           
 19808                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 19809  00445A  0E00               	movlw	0
 19810  00445C  0100               	movlb	0	; () banked
 19811  00445E  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19812  004460  0E03               	movlw	3
 19813  004462  6F90               	movwf	___wmul@multiplicand& (0+255),b
 19814  004464  0E00               	movlw	0
 19815  004466  0100               	movlb	0	; () banked
 19816  004468  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
 19817  00446A  0E0A               	movlw	10
 19818  00446C  6FBC               	movwf	___awmod@divisor& (0+255),b
 19819  00446E  C0C9  F0BA         	movff	fround@prec,___awmod@dividend
 19820  004472  0100               	movlb	0	; () banked
 19821  004474  6BBB               	clrf	(___awmod@dividend+1)& (0+255),b
 19822  004476  EC87  F03D         	call	___awmod	;wreg free
 19823  00447A  C0BA  F08E         	movff	?___awmod,___wmul@multiplier
 19824  00447E  C0BB  F08F         	movff	?___awmod+1,___wmul@multiplier+1
 19825  004482  EC7F  F046         	call	___wmul	;wreg free
 19826  004486  0E36               	movlw	low __npowers_
 19827  004488  0100               	movlb	0	; () banked
 19828  00448A  258E               	addwf	?___wmul& (0+255),w,b
 19829  00448C  6EF6               	movwf	tblptrl,c
 19830  00448E  0EFE               	movlw	high __npowers_
 19831  004490  0100               	movlb	0	; () banked
 19832  004492  218F               	addwfc	(?___wmul+1)& (0+255),w,b
 19833  004494  6EF7               	movwf	tblptrh,c
 19834  004496                     	if	0	;There are less than 3 active tblptr bytes
 19835  004496                     	endif
 19836  004496  0009               	tblrd		*+
 19837  004498  CFF5 F09F          	movff	tablat,___ftmul@f2
 19838  00449C  0009               	tblrd		*+
 19839  00449E  CFF5 F0A0          	movff	tablat,___ftmul@f2+1
 19840  0044A2  000A               	tblrd		*-
 19841  0044A4  CFF5 F0A1          	movff	tablat,___ftmul@f2+2
 19842  0044A8  C0C6  F09C         	movff	_fround$3111,___ftmul@f1
 19843  0044AC  C0C7  F09D         	movff	_fround$3111+1,___ftmul@f1+1
 19844  0044B0  C0C8  F09E         	movff	_fround$3111+2,___ftmul@f1+2
 19845  0044B4  ECDE  F02E         	call	___ftmul	;wreg free
 19846  0044B8  C09C  F0C3         	movff	?___ftmul,_fround$3112
 19847  0044BC  C09D  F0C4         	movff	?___ftmul+1,_fround$3112+1
 19848  0044C0  C09E  F0C5         	movff	?___ftmul+2,_fround$3112+2
 19849                           
 19850                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 19851  0044C4  C0C3  F09C         	movff	_fround$3112,___ftmul@f1
 19852  0044C8  C0C4  F09D         	movff	_fround$3112+1,___ftmul@f1+1
 19853  0044CC  C0C5  F09E         	movff	_fround$3112+2,___ftmul@f1+2
 19854  0044D0  0E00               	movlw	0
 19855  0044D2  0100               	movlb	0	; () banked
 19856  0044D4  6F9F               	movwf	___ftmul@f2& (0+255),b
 19857  0044D6  0E00               	movlw	0
 19858  0044D8  0100               	movlb	0	; () banked
 19859  0044DA  6FA0               	movwf	(___ftmul@f2+1)& (0+255),b
 19860  0044DC  0E3F               	movlw	63
 19861  0044DE  0100               	movlb	0	; () banked
 19862  0044E0  6FA1               	movwf	(___ftmul@f2+2)& (0+255),b
 19863  0044E2  ECDE  F02E         	call	___ftmul	;wreg free
 19864  0044E6  D093               	goto	L24
 19865  0044E8  D099               	goto	l1400
 19866  0044EA  D074               	goto	l12411
 19867  0044EC                     l12403:
 19868                           
 19869                           ;doprnt.c: 415: else if(prec > 10)
 19870  0044EC  0E0A               	movlw	10
 19871  0044EE  0100               	movlb	0	; () banked
 19872  0044F0  65C9               	cpfsgt	fround@prec& (0+255),b
 19873  0044F2  D070               	goto	l12411
 19874                           
 19875                           ; BSR set to: 0
 19876                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 19877  0044F4  0E00               	movlw	0
 19878  0044F6  0100               	movlb	0	; () banked
 19879  0044F8  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19880  0044FA  0E03               	movlw	3
 19881  0044FC  6F90               	movwf	___wmul@multiplicand& (0+255),b
 19882  0044FE  0E00               	movlw	0
 19883  004500  0100               	movlb	0	; () banked
 19884  004502  6FBD               	movwf	(___awmod@divisor+1)& (0+255),b
 19885  004504  0E0A               	movlw	10
 19886  004506  6FBC               	movwf	___awmod@divisor& (0+255),b
 19887  004508  C0C9  F0BA         	movff	fround@prec,___awmod@dividend
 19888  00450C  0100               	movlb	0	; () banked
 19889  00450E  6BBB               	clrf	(___awmod@dividend+1)& (0+255),b
 19890  004510  EC87  F03D         	call	___awmod	;wreg free
 19891  004514  C0BA  F08E         	movff	?___awmod,___wmul@multiplier
 19892  004518  C0BB  F08F         	movff	?___awmod+1,___wmul@multiplier+1
 19893  00451C  EC7F  F046         	call	___wmul	;wreg free
 19894  004520  0E36               	movlw	low __npowers_
 19895  004522  0100               	movlb	0	; () banked
 19896  004524  258E               	addwf	?___wmul& (0+255),w,b
 19897  004526  6EF6               	movwf	tblptrl,c
 19898  004528  0EFE               	movlw	high __npowers_
 19899  00452A  0100               	movlb	0	; () banked
 19900  00452C  218F               	addwfc	(?___wmul+1)& (0+255),w,b
 19901  00452E  6EF7               	movwf	tblptrh,c
 19902  004530                     	if	0	;There are less than 3 active tblptr bytes
 19903  004530                     	endif
 19904  004530  0009               	tblrd		*+
 19905  004532  CFF5 F09F          	movff	tablat,___ftmul@f2
 19906  004536  0009               	tblrd		*+
 19907  004538  CFF5 F0A0          	movff	tablat,___ftmul@f2+1
 19908  00453C  000A               	tblrd		*-
 19909  00453E  CFF5 F0A1          	movff	tablat,___ftmul@f2+2
 19910  004542  0E00               	movlw	0
 19911  004544  0100               	movlb	0	; () banked
 19912  004546  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
 19913  004548  0E0A               	movlw	10
 19914  00454A  6F96               	movwf	___awdiv@divisor& (0+255),b
 19915  00454C  C0C9  F094         	movff	fround@prec,___awdiv@dividend
 19916  004550  0100               	movlb	0	; () banked
 19917  004552  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
 19918  004554  EC74  F03A         	call	___awdiv	;wreg free
 19919  004558  0E09               	movlw	9
 19920  00455A  0100               	movlb	0	; () banked
 19921  00455C  2594               	addwf	?___awdiv& (0+255),w,b
 19922  00455E  0100               	movlb	0	; () banked
 19923  004560  6F8E               	movwf	___wmul@multiplier& (0+255),b
 19924  004562  0E00               	movlw	0
 19925  004564  0100               	movlb	0	; () banked
 19926  004566  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
 19927  004568  0100               	movlb	0	; () banked
 19928  00456A  6F8F               	movwf	(___wmul@multiplier+1)& (0+255),b
 19929  00456C  0E00               	movlw	0
 19930  00456E  0100               	movlb	0	; () banked
 19931  004570  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19932  004572  0E03               	movlw	3
 19933  004574  6F90               	movwf	___wmul@multiplicand& (0+255),b
 19934  004576  EC7F  F046         	call	___wmul	;wreg free
 19935  00457A  0E36               	movlw	low __npowers_
 19936  00457C  0100               	movlb	0	; () banked
 19937  00457E  258E               	addwf	?___wmul& (0+255),w,b
 19938  004580  6EF6               	movwf	tblptrl,c
 19939  004582  0EFE               	movlw	high __npowers_
 19940  004584  0100               	movlb	0	; () banked
 19941  004586  218F               	addwfc	(?___wmul+1)& (0+255),w,b
 19942  004588  6EF7               	movwf	tblptrh,c
 19943  00458A                     	if	0	;There are less than 3 active tblptr bytes
 19944  00458A                     	endif
 19945  00458A  0009               	tblrd		*+
 19946  00458C  CFF5 F09C          	movff	tablat,___ftmul@f1
 19947  004590  0009               	tblrd		*+
 19948  004592  CFF5 F09D          	movff	tablat,___ftmul@f1+1
 19949  004596  000A               	tblrd		*-
 19950  004598  CFF5 F09E          	movff	tablat,___ftmul@f1+2
 19951  00459C  ECDE  F02E         	call	___ftmul	;wreg free
 19952  0045A0  C09C  F0C6         	movff	?___ftmul,_fround$3111
 19953  0045A4  C09D  F0C7         	movff	?___ftmul+1,_fround$3111+1
 19954  0045A8  C09E  F0C8         	movff	?___ftmul+2,_fround$3111+2
 19955                           
 19956                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 19957  0045AC  C0C6  F09C         	movff	_fround$3111,___ftmul@f1
 19958  0045B0  C0C7  F09D         	movff	_fround$3111+1,___ftmul@f1+1
 19959  0045B4  C0C8  F09E         	movff	_fround$3111+2,___ftmul@f1+2
 19960  0045B8  0E00               	movlw	0
 19961  0045BA  0100               	movlb	0	; () banked
 19962  0045BC  6F9F               	movwf	___ftmul@f2& (0+255),b
 19963  0045BE  0E00               	movlw	0
 19964  0045C0  0100               	movlb	0	; () banked
 19965  0045C2  6FA0               	movwf	(___ftmul@f2+1)& (0+255),b
 19966  0045C4  0E3F               	movlw	63
 19967  0045C6  0100               	movlb	0	; () banked
 19968  0045C8  6FA1               	movwf	(___ftmul@f2+2)& (0+255),b
 19969  0045CA  ECDE  F02E         	call	___ftmul	;wreg free
 19970  0045CE  D01F               	goto	L24
 19971  0045D0  D025               	goto	l1400
 19972  0045D2  D000               	goto	l12411
 19973  0045D4                     l12411:
 19974                           
 19975                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 19976  0045D4  0100               	movlb	0	; () banked
 19977  0045D6  51C9               	movf	fround@prec& (0+255),w,b
 19978  0045D8  0D03               	mullw	3
 19979  0045DA  0E36               	movlw	low __npowers_
 19980  0045DC  24F3               	addwf	prodl,w,c
 19981  0045DE  6EF6               	movwf	tblptrl,c
 19982  0045E0  0EFE               	movlw	high __npowers_
 19983  0045E2  20F4               	addwfc	prodh,w,c
 19984  0045E4  6EF7               	movwf	tblptrh,c
 19985  0045E6                     	if	0	;There are less than 3 active tblptr bytes
 19986  0045E6                     	endif
 19987  0045E6  0009               	tblrd		*+
 19988  0045E8  CFF5 F09C          	movff	tablat,___ftmul@f1
 19989  0045EC  0009               	tblrd		*+
 19990  0045EE  CFF5 F09D          	movff	tablat,___ftmul@f1+1
 19991  0045F2  000A               	tblrd		*-
 19992  0045F4  CFF5 F09E          	movff	tablat,___ftmul@f1+2
 19993  0045F8  0E00               	movlw	0
 19994  0045FA  0100               	movlb	0	; () banked
 19995  0045FC  6F9F               	movwf	___ftmul@f2& (0+255),b
 19996  0045FE  0E00               	movlw	0
 19997  004600  0100               	movlb	0	; () banked
 19998  004602  6FA0               	movwf	(___ftmul@f2+1)& (0+255),b
 19999  004604  0E3F               	movlw	63
 20000  004606  0100               	movlb	0	; () banked
 20001  004608  6FA1               	movwf	(___ftmul@f2+2)& (0+255),b
 20002  00460A  ECDE  F02E         	call	___ftmul	;wreg free
 20003  00460E                     L24:
 20004  00460E  C09C  F0C0         	movff	?___ftmul,?_fround
 20005  004612  C09D  F0C1         	movff	?___ftmul+1,?_fround+1
 20006  004616  C09E  F0C2         	movff	?___ftmul+2,?_fround+2
 20007  00461A  D000               	goto	l1400
 20008  00461C                     l1400:
 20009  00461C  0012               	return		;funcret
 20010  00461E                     __end_of_fround:
 20011                           	opt stack 0
 20012                           tblptru	equ	0xFF8
 20013                           tblptrh	equ	0xFF7
 20014                           tblptrl	equ	0xFF6
 20015                           tablat	equ	0xFF5
 20016                           prodh	equ	0xFF4
 20017                           prodl	equ	0xFF3
 20018                           intcon	equ	0xFF2
 20019                           intcon2	equ	0xFF1
 20020                           postinc0	equ	0xFEE
 20021                           wreg	equ	0xFE8
 20022                           postdec1	equ	0xFE5
 20023                           fsr1l	equ	0xFE1
 20024                           indf2	equ	0xFDF
 20025                           postinc2	equ	0xFDE
 20026                           postdec2	equ	0xFDD
 20027                           fsr2h	equ	0xFDA
 20028                           fsr2l	equ	0xFD9
 20029                           status	equ	0xFD8
 20030                           
 20031 ;; *************** function ___ftmul *****************
 20032 ;; Defined at:
 20033 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
 20034 ;; Parameters:    Size  Location     Type
 20035 ;;  f1              3   28[BANK0 ] float 
 20036 ;;  f2              3   31[BANK0 ] float 
 20037 ;; Auto vars:     Size  Location     Type
 20038 ;;  f3_as_produc    3   38[BANK0 ] unsigned um
 20039 ;;  sign            1   42[BANK0 ] unsigned char 
 20040 ;;  cntr            1   41[BANK0 ] unsigned char 
 20041 ;;  exp             1   37[BANK0 ] unsigned char 
 20042 ;; Return value:  Size  Location     Type
 20043 ;;                  3   28[BANK0 ] float 
 20044 ;; Registers used:
 20045 ;;		wreg, status,2, status,0, cstack
 20046 ;; Tracked objects:
 20047 ;;		On entry : 0/0
 20048 ;;		On exit  : 0/0
 20049 ;;		Unchanged: 0/0
 20050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20051 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20052 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20053 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20054 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20055 ;;Total ram usage:       15 bytes
 20056 ;; Hardware stack levels used:    1
 20057 ;; Hardware stack levels required when called:    7
 20058 ;; This function calls:
 20059 ;;		___ftpack
 20060 ;; This function is called by:
 20061 ;;		_Update_Screen
 20062 ;;		_do_update_pwm
 20063 ;;		_fround
 20064 ;;		_scale
 20065 ;;		_printf
 20066 ;; This function uses a non-reentrant model
 20067 ;;
 20068                           
 20069                           	psect	text75
 20070  005DBC                     __ptext75:
 20071                           	opt stack 0
 20072  005DBC                     ___ftmul:
 20073                           	opt stack 21
 20074                           
 20075                           ;incstack = 0
 20076  005DBC  C09E  F0A2         	movff	___ftmul@f1+2,??___ftmul
 20077  005DC0  0100               	movlb	0	; () banked
 20078  005DC2  6BA3               	clrf	(??___ftmul+1)& (0+255),b
 20079  005DC4  6BA4               	clrf	(??___ftmul+2)& (0+255),b
 20080  005DC6  0100               	movlb	0	; () banked
 20081  005DC8  359D               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 20082  005DCA  0100               	movlb	0	; () banked
 20083  005DCC  37A2               	rlcf	??___ftmul& (0+255),f,b
 20084  005DCE  E301               	bnc	u13251
 20085  005DD0  81A3               	bsf	(??___ftmul+1)& (0+255),0,b
 20086  005DD2                     u13251:
 20087  005DD2  0100               	movlb	0	; () banked
 20088  005DD4  51A2               	movf	??___ftmul& (0+255),w,b
 20089  005DD6  0100               	movlb	0	; () banked
 20090  005DD8  6FA5               	movwf	___ftmul@exp& (0+255),b
 20091  005DDA  0100               	movlb	0	; () banked
 20092  005DDC  51A5               	movf	___ftmul@exp& (0+255),w,b
 20093  005DDE  A4D8               	btfss	status,2,c
 20094  005DE0  D002               	goto	l12123
 20095  005DE2  D014               	goto	l12125
 20096                           
 20097                           ; BSR set to: 0
 20098                           
 20099                           ; BSR set to: 0
 20100  005DE4  D098               	goto	l2126
 20101  005DE6                     l12123:
 20102                           
 20103                           ; BSR set to: 0
 20104  005DE6  C0A1  F0A2         	movff	___ftmul@f2+2,??___ftmul
 20105  005DEA  0100               	movlb	0	; () banked
 20106  005DEC  6BA3               	clrf	(??___ftmul+1)& (0+255),b
 20107  005DEE  6BA4               	clrf	(??___ftmul+2)& (0+255),b
 20108  005DF0  0100               	movlb	0	; () banked
 20109  005DF2  35A0               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 20110  005DF4  0100               	movlb	0	; () banked
 20111  005DF6  37A2               	rlcf	??___ftmul& (0+255),f,b
 20112  005DF8  E301               	bnc	u13271
 20113  005DFA  81A3               	bsf	(??___ftmul+1)& (0+255),0,b
 20114  005DFC                     u13271:
 20115  005DFC  0100               	movlb	0	; () banked
 20116  005DFE  51A2               	movf	??___ftmul& (0+255),w,b
 20117  005E00  0100               	movlb	0	; () banked
 20118  005E02  6FAA               	movwf	___ftmul@sign& (0+255),b
 20119  005E04  0100               	movlb	0	; () banked
 20120  005E06  51AA               	movf	___ftmul@sign& (0+255),w,b
 20121  005E08  A4D8               	btfss	status,2,c
 20122  005E0A  D00A               	goto	l12129
 20123  005E0C                     l12125:
 20124                           
 20125                           ; BSR set to: 0
 20126  005E0C  0E00               	movlw	0
 20127  005E0E  0100               	movlb	0	; () banked
 20128  005E10  6F9C               	movwf	?___ftmul& (0+255),b
 20129  005E12  0E00               	movlw	0
 20130  005E14  0100               	movlb	0	; () banked
 20131  005E16  6F9D               	movwf	(?___ftmul+1)& (0+255),b
 20132  005E18  0E00               	movlw	0
 20133  005E1A  0100               	movlb	0	; () banked
 20134  005E1C  6F9E               	movwf	(?___ftmul+2)& (0+255),b
 20135                           
 20136                           ; BSR set to: 0
 20137  005E1E  D07B               	goto	l2126
 20138  005E20                     l12129:
 20139                           
 20140                           ; BSR set to: 0
 20141  005E20  0100               	movlb	0	; () banked
 20142  005E22  51AA               	movf	___ftmul@sign& (0+255),w,b
 20143  005E24  0F7B               	addlw	123
 20144  005E26  0100               	movlb	0	; () banked
 20145  005E28  27A5               	addwf	___ftmul@exp& (0+255),f,b
 20146                           
 20147                           ; BSR set to: 0
 20148  005E2A  C09E  F0AA         	movff	___ftmul@f1+2,___ftmul@sign
 20149  005E2E  0100               	movlb	0	; () banked
 20150  005E30  51A1               	movf	(___ftmul@f2+2)& (0+255),w,b
 20151  005E32  0100               	movlb	0	; () banked
 20152  005E34  1BAA               	xorwf	___ftmul@sign& (0+255),f,b
 20153  005E36  0E80               	movlw	128
 20154  005E38  0100               	movlb	0	; () banked
 20155  005E3A  17AA               	andwf	___ftmul@sign& (0+255),f,b
 20156                           
 20157                           ; BSR set to: 0
 20158  005E3C  0100               	movlb	0	; () banked
 20159  005E3E  8F9D               	bsf	(___ftmul@f1+1)& (0+255),7,b
 20160                           
 20161                           ; BSR set to: 0
 20162  005E40  0100               	movlb	0	; () banked
 20163  005E42  8FA0               	bsf	(___ftmul@f2+1)& (0+255),7,b
 20164                           
 20165                           ; BSR set to: 0
 20166  005E44  0EFF               	movlw	255
 20167  005E46  0100               	movlb	0	; () banked
 20168  005E48  179F               	andwf	___ftmul@f2& (0+255),f,b
 20169  005E4A  0EFF               	movlw	255
 20170  005E4C  0100               	movlb	0	; () banked
 20171  005E4E  17A0               	andwf	(___ftmul@f2+1)& (0+255),f,b
 20172  005E50  0E00               	movlw	0
 20173  005E52  0100               	movlb	0	; () banked
 20174  005E54  17A1               	andwf	(___ftmul@f2+2)& (0+255),f,b
 20175                           
 20176                           ; BSR set to: 0
 20177  005E56  0E00               	movlw	0
 20178  005E58  0100               	movlb	0	; () banked
 20179  005E5A  6FA6               	movwf	___ftmul@f3_as_product& (0+255),b
 20180  005E5C  0E00               	movlw	0
 20181  005E5E  0100               	movlb	0	; () banked
 20182  005E60  6FA7               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 20183  005E62  0E00               	movlw	0
 20184  005E64  0100               	movlb	0	; () banked
 20185  005E66  6FA8               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 20186                           
 20187                           ; BSR set to: 0
 20188  005E68  0E07               	movlw	7
 20189  005E6A  0100               	movlb	0	; () banked
 20190  005E6C  6FA9               	movwf	___ftmul@cntr& (0+255),b
 20191  005E6E  D000               	goto	l12143
 20192  005E70                     l12143:
 20193                           
 20194                           ; BSR set to: 0
 20195  005E70  0100               	movlb	0	; () banked
 20196  005E72  A19C               	btfss	___ftmul@f1& (0+255),0,b
 20197  005E74  D00D               	goto	l12147
 20198                           
 20199                           ; BSR set to: 0
 20200  005E76  0100               	movlb	0	; () banked
 20201  005E78  519F               	movf	___ftmul@f2& (0+255),w,b
 20202  005E7A  0100               	movlb	0	; () banked
 20203  005E7C  27A6               	addwf	___ftmul@f3_as_product& (0+255),f,b
 20204  005E7E  0100               	movlb	0	; () banked
 20205  005E80  51A0               	movf	(___ftmul@f2+1)& (0+255),w,b
 20206  005E82  0100               	movlb	0	; () banked
 20207  005E84  23A7               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 20208  005E86  0100               	movlb	0	; () banked
 20209  005E88  51A1               	movf	(___ftmul@f2+2)& (0+255),w,b
 20210  005E8A  0100               	movlb	0	; () banked
 20211  005E8C  23A8               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 20212  005E8E  D000               	goto	l12147
 20213  005E90                     l12147:
 20214                           
 20215                           ; BSR set to: 0
 20216  005E90  0100               	movlb	0	; () banked
 20217  005E92  90D8               	bcf	status,0,c
 20218  005E94  339E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 20219  005E96  339D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 20220  005E98  339C               	rrcf	___ftmul@f1& (0+255),f,b
 20221  005E9A  0100               	movlb	0	; () banked
 20222  005E9C  90D8               	bcf	status,0,c
 20223  005E9E  379F               	rlcf	___ftmul@f2& (0+255),f,b
 20224  005EA0  37A0               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 20225  005EA2  37A1               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 20226                           
 20227                           ; BSR set to: 0
 20228  005EA4  0100               	movlb	0	; () banked
 20229  005EA6  2FA9               	decfsz	___ftmul@cntr& (0+255),f,b
 20230  005EA8  D7E3               	goto	l12143
 20231  005EAA  D000               	goto	l12151
 20232  005EAC                     l12151:
 20233                           
 20234                           ; BSR set to: 0
 20235  005EAC  0E09               	movlw	9
 20236  005EAE  0100               	movlb	0	; () banked
 20237  005EB0  6FA9               	movwf	___ftmul@cntr& (0+255),b
 20238  005EB2  D000               	goto	l12153
 20239  005EB4                     l12153:
 20240                           
 20241                           ; BSR set to: 0
 20242  005EB4  0100               	movlb	0	; () banked
 20243  005EB6  A19C               	btfss	___ftmul@f1& (0+255),0,b
 20244  005EB8  D00D               	goto	l12157
 20245                           
 20246                           ; BSR set to: 0
 20247  005EBA  0100               	movlb	0	; () banked
 20248  005EBC  519F               	movf	___ftmul@f2& (0+255),w,b
 20249  005EBE  0100               	movlb	0	; () banked
 20250  005EC0  27A6               	addwf	___ftmul@f3_as_product& (0+255),f,b
 20251  005EC2  0100               	movlb	0	; () banked
 20252  005EC4  51A0               	movf	(___ftmul@f2+1)& (0+255),w,b
 20253  005EC6  0100               	movlb	0	; () banked
 20254  005EC8  23A7               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 20255  005ECA  0100               	movlb	0	; () banked
 20256  005ECC  51A1               	movf	(___ftmul@f2+2)& (0+255),w,b
 20257  005ECE  0100               	movlb	0	; () banked
 20258  005ED0  23A8               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 20259  005ED2  D000               	goto	l12157
 20260  005ED4                     l12157:
 20261                           
 20262                           ; BSR set to: 0
 20263  005ED4  0100               	movlb	0	; () banked
 20264  005ED6  90D8               	bcf	status,0,c
 20265  005ED8  339E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 20266  005EDA  339D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 20267  005EDC  339C               	rrcf	___ftmul@f1& (0+255),f,b
 20268  005EDE  0100               	movlb	0	; () banked
 20269  005EE0  90D8               	bcf	status,0,c
 20270  005EE2  33A8               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 20271  005EE4  33A7               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 20272  005EE6  33A6               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 20273                           
 20274                           ; BSR set to: 0
 20275  005EE8  0100               	movlb	0	; () banked
 20276  005EEA  2FA9               	decfsz	___ftmul@cntr& (0+255),f,b
 20277  005EEC  D7E3               	goto	l12153
 20278  005EEE  D000               	goto	l12161
 20279  005EF0                     l12161:
 20280                           
 20281                           ; BSR set to: 0
 20282  005EF0  C0A6  F08E         	movff	___ftmul@f3_as_product,___ftpack@arg
 20283  005EF4  C0A7  F08F         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 20284  005EF8  C0A8  F090         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 20285  005EFC  C0A5  F091         	movff	___ftmul@exp,___ftpack@exp
 20286  005F00  C0AA  F092         	movff	___ftmul@sign,___ftpack@sign
 20287  005F04  ECA0  F032         	call	___ftpack	;wreg free
 20288  005F08  C08E  F09C         	movff	?___ftpack,?___ftmul
 20289  005F0C  C08F  F09D         	movff	?___ftpack+1,?___ftmul+1
 20290  005F10  C090  F09E         	movff	?___ftpack+2,?___ftmul+2
 20291  005F14  D000               	goto	l2126
 20292  005F16                     l2126:
 20293  005F16  0012               	return		;funcret
 20294  005F18                     __end_of___ftmul:
 20295                           	opt stack 0
 20296                           tblptru	equ	0xFF8
 20297                           tblptrh	equ	0xFF7
 20298                           tblptrl	equ	0xFF6
 20299                           tablat	equ	0xFF5
 20300                           prodh	equ	0xFF4
 20301                           prodl	equ	0xFF3
 20302                           intcon	equ	0xFF2
 20303                           intcon2	equ	0xFF1
 20304                           postinc0	equ	0xFEE
 20305                           wreg	equ	0xFE8
 20306                           postdec1	equ	0xFE5
 20307                           fsr1l	equ	0xFE1
 20308                           indf2	equ	0xFDF
 20309                           postinc2	equ	0xFDE
 20310                           postdec2	equ	0xFDD
 20311                           fsr2h	equ	0xFDA
 20312                           fsr2l	equ	0xFD9
 20313                           status	equ	0xFD8
 20314                           
 20315 ;; *************** function ___awmod *****************
 20316 ;; Defined at:
 20317 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 20318 ;; Parameters:    Size  Location     Type
 20319 ;;  dividend        2   58[BANK0 ] int 
 20320 ;;  divisor         2   60[BANK0 ] int 
 20321 ;; Auto vars:     Size  Location     Type
 20322 ;;  sign            1   63[BANK0 ] unsigned char 
 20323 ;;  counter         1   62[BANK0 ] unsigned char 
 20324 ;; Return value:  Size  Location     Type
 20325 ;;                  2   58[BANK0 ] int 
 20326 ;; Registers used:
 20327 ;;		wreg, status,2, status,0
 20328 ;; Tracked objects:
 20329 ;;		On entry : 0/0
 20330 ;;		On exit  : 0/0
 20331 ;;		Unchanged: 0/0
 20332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20333 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20334 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20336 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20337 ;;Total ram usage:        6 bytes
 20338 ;; Hardware stack levels used:    1
 20339 ;; Hardware stack levels required when called:    6
 20340 ;; This function calls:
 20341 ;;		Nothing
 20342 ;; This function is called by:
 20343 ;;		_Update_Screen
 20344 ;;		_Update_Setup_Alarm_Time_Screen
 20345 ;;		_Update_Setup_Fan_Screen
 20346 ;;		_Update_Setup_Time_Screen
 20347 ;;		_dec_2_bcd
 20348 ;;		_fround
 20349 ;;		_scale
 20350 ;;		_printf
 20351 ;; This function uses a non-reentrant model
 20352 ;;
 20353                           
 20354                           	psect	text76
 20355  007B0E                     __ptext76:
 20356                           	opt stack 0
 20357  007B0E                     ___awmod:
 20358                           	opt stack 22
 20359                           
 20360                           ;incstack = 0
 20361  007B0E  0E00               	movlw	0
 20362  007B10  0100               	movlb	0	; () banked
 20363  007B12  6FBF               	movwf	___awmod@sign& (0+255),b
 20364                           
 20365                           ; BSR set to: 0
 20366  007B14  0100               	movlb	0	; () banked
 20367  007B16  AFBB               	btfss	(___awmod@dividend+1)& (0+255),7,b
 20368  007B18  D009               	goto	l12217
 20369                           
 20370                           ; BSR set to: 0
 20371  007B1A  0100               	movlb	0	; () banked
 20372  007B1C  6DBA               	negf	___awmod@dividend& (0+255),b
 20373  007B1E  1FBB               	comf	(___awmod@dividend+1)& (0+255),f,b
 20374  007B20  B0D8               	btfsc	status,0,c
 20375  007B22  2BBB               	incf	(___awmod@dividend+1)& (0+255),f,b
 20376                           
 20377                           ; BSR set to: 0
 20378  007B24  0E01               	movlw	1
 20379  007B26  0100               	movlb	0	; () banked
 20380  007B28  6FBF               	movwf	___awmod@sign& (0+255),b
 20381  007B2A  D000               	goto	l12217
 20382  007B2C                     l12217:
 20383                           
 20384                           ; BSR set to: 0
 20385  007B2C  0100               	movlb	0	; () banked
 20386  007B2E  AFBD               	btfss	(___awmod@divisor+1)& (0+255),7,b
 20387  007B30  D006               	goto	l12221
 20388                           
 20389                           ; BSR set to: 0
 20390  007B32  0100               	movlb	0	; () banked
 20391  007B34  6DBC               	negf	___awmod@divisor& (0+255),b
 20392  007B36  1FBD               	comf	(___awmod@divisor+1)& (0+255),f,b
 20393  007B38  B0D8               	btfsc	status,0,c
 20394  007B3A  2BBD               	incf	(___awmod@divisor+1)& (0+255),f,b
 20395  007B3C  D000               	goto	l12221
 20396  007B3E                     l12221:
 20397                           
 20398                           ; BSR set to: 0
 20399  007B3E  0100               	movlb	0	; () banked
 20400  007B40  51BC               	movf	___awmod@divisor& (0+255),w,b
 20401  007B42  0100               	movlb	0	; () banked
 20402  007B44  11BD               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 20403  007B46  B4D8               	btfsc	status,2,c
 20404  007B48  D02B               	goto	l12237
 20405                           
 20406                           ; BSR set to: 0
 20407  007B4A  0E01               	movlw	1
 20408  007B4C  0100               	movlb	0	; () banked
 20409  007B4E  6FBE               	movwf	___awmod@counter& (0+255),b
 20410  007B50  D007               	goto	l12227
 20411  007B52                     l12225:
 20412                           
 20413                           ; BSR set to: 0
 20414  007B52  0100               	movlb	0	; () banked
 20415  007B54  90D8               	bcf	status,0,c
 20416  007B56  37BC               	rlcf	___awmod@divisor& (0+255),f,b
 20417  007B58  37BD               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 20418  007B5A  0100               	movlb	0	; () banked
 20419  007B5C  2BBE               	incf	___awmod@counter& (0+255),f,b
 20420  007B5E  D000               	goto	l12227
 20421  007B60                     l12227:
 20422                           
 20423                           ; BSR set to: 0
 20424  007B60  0100               	movlb	0	; () banked
 20425  007B62  BFBD               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 20426  007B64  D002               	goto	l12229
 20427  007B66  D7F5               	goto	l12225
 20428                           
 20429                           ; BSR set to: 0
 20430  007B68  D000               	goto	l12229
 20431  007B6A                     l12229:
 20432                           
 20433                           ; BSR set to: 0
 20434  007B6A  0100               	movlb	0	; () banked
 20435  007B6C  51BC               	movf	___awmod@divisor& (0+255),w,b
 20436  007B6E  0100               	movlb	0	; () banked
 20437  007B70  5DBA               	subwf	___awmod@dividend& (0+255),w,b
 20438  007B72  0100               	movlb	0	; () banked
 20439  007B74  51BD               	movf	(___awmod@divisor+1)& (0+255),w,b
 20440  007B76  0100               	movlb	0	; () banked
 20441  007B78  59BB               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 20442  007B7A  A0D8               	btfss	status,0,c
 20443  007B7C  D009               	goto	l12233
 20444                           
 20445                           ; BSR set to: 0
 20446  007B7E  0100               	movlb	0	; () banked
 20447  007B80  51BC               	movf	___awmod@divisor& (0+255),w,b
 20448  007B82  0100               	movlb	0	; () banked
 20449  007B84  5FBA               	subwf	___awmod@dividend& (0+255),f,b
 20450  007B86  0100               	movlb	0	; () banked
 20451  007B88  51BD               	movf	(___awmod@divisor+1)& (0+255),w,b
 20452  007B8A  0100               	movlb	0	; () banked
 20453  007B8C  5BBB               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 20454  007B8E  D000               	goto	l12233
 20455  007B90                     l12233:
 20456                           
 20457                           ; BSR set to: 0
 20458  007B90  0100               	movlb	0	; () banked
 20459  007B92  90D8               	bcf	status,0,c
 20460  007B94  33BD               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 20461  007B96  33BC               	rrcf	___awmod@divisor& (0+255),f,b
 20462                           
 20463                           ; BSR set to: 0
 20464  007B98  0100               	movlb	0	; () banked
 20465  007B9A  2FBE               	decfsz	___awmod@counter& (0+255),f,b
 20466  007B9C  D7E6               	goto	l12229
 20467                           
 20468                           ; BSR set to: 0
 20469  007B9E  D000               	goto	l12237
 20470  007BA0                     l12237:
 20471                           
 20472                           ; BSR set to: 0
 20473  007BA0  0100               	movlb	0	; () banked
 20474  007BA2  51BF               	movf	___awmod@sign& (0+255),w,b
 20475  007BA4  0100               	movlb	0	; () banked
 20476  007BA6  B4D8               	btfsc	status,2,c
 20477  007BA8  D006               	goto	l12241
 20478                           
 20479                           ; BSR set to: 0
 20480  007BAA  0100               	movlb	0	; () banked
 20481  007BAC  6DBA               	negf	___awmod@dividend& (0+255),b
 20482  007BAE  1FBB               	comf	(___awmod@dividend+1)& (0+255),f,b
 20483  007BB0  B0D8               	btfsc	status,0,c
 20484  007BB2  2BBB               	incf	(___awmod@dividend+1)& (0+255),f,b
 20485  007BB4  D000               	goto	l12241
 20486  007BB6                     l12241:
 20487                           
 20488                           ; BSR set to: 0
 20489  007BB6  C0BA  F0BA         	movff	___awmod@dividend,?___awmod
 20490  007BBA  C0BB  F0BB         	movff	___awmod@dividend+1,?___awmod+1
 20491  007BBE  D000               	goto	l1903
 20492  007BC0                     l1903:
 20493                           
 20494                           ; BSR set to: 0
 20495  007BC0  0012               	return		;funcret
 20496  007BC2                     __end_of___awmod:
 20497                           	opt stack 0
 20498                           tblptru	equ	0xFF8
 20499                           tblptrh	equ	0xFF7
 20500                           tblptrl	equ	0xFF6
 20501                           tablat	equ	0xFF5
 20502                           prodh	equ	0xFF4
 20503                           prodl	equ	0xFF3
 20504                           intcon	equ	0xFF2
 20505                           intcon2	equ	0xFF1
 20506                           postinc0	equ	0xFEE
 20507                           wreg	equ	0xFE8
 20508                           postdec1	equ	0xFE5
 20509                           fsr1l	equ	0xFE1
 20510                           indf2	equ	0xFDF
 20511                           postinc2	equ	0xFDE
 20512                           postdec2	equ	0xFDD
 20513                           fsr2h	equ	0xFDA
 20514                           fsr2l	equ	0xFD9
 20515                           status	equ	0xFD8
 20516                           
 20517 ;; *************** function ___awdiv *****************
 20518 ;; Defined at:
 20519 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 20520 ;; Parameters:    Size  Location     Type
 20521 ;;  dividend        2   20[BANK0 ] int 
 20522 ;;  divisor         2   22[BANK0 ] int 
 20523 ;; Auto vars:     Size  Location     Type
 20524 ;;  quotient        2   26[BANK0 ] int 
 20525 ;;  sign            1   25[BANK0 ] unsigned char 
 20526 ;;  counter         1   24[BANK0 ] unsigned char 
 20527 ;; Return value:  Size  Location     Type
 20528 ;;                  2   20[BANK0 ] int 
 20529 ;; Registers used:
 20530 ;;		wreg, status,2, status,0
 20531 ;; Tracked objects:
 20532 ;;		On entry : 0/0
 20533 ;;		On exit  : 0/0
 20534 ;;		Unchanged: 0/0
 20535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20536 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20537 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20539 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20540 ;;Total ram usage:        8 bytes
 20541 ;; Hardware stack levels used:    1
 20542 ;; Hardware stack levels required when called:    6
 20543 ;; This function calls:
 20544 ;;		Nothing
 20545 ;; This function is called by:
 20546 ;;		_get_RPM
 20547 ;;		_main
 20548 ;;		_Update_Screen
 20549 ;;		_Update_Setup_Alarm_Time_Screen
 20550 ;;		_Update_Setup_Fan_Screen
 20551 ;;		_Update_Setup_Time_Screen
 20552 ;;		_dec_2_bcd
 20553 ;;		_fround
 20554 ;;		_scale
 20555 ;;		_printf
 20556 ;; This function uses a non-reentrant model
 20557 ;;
 20558                           
 20559                           	psect	text77
 20560  0074E8                     __ptext77:
 20561                           	opt stack 0
 20562  0074E8                     ___awdiv:
 20563                           	opt stack 22
 20564                           
 20565                           ; BSR set to: 0
 20566                           ;incstack = 0
 20567  0074E8  0E00               	movlw	0
 20568  0074EA  0100               	movlb	0	; () banked
 20569  0074EC  6F99               	movwf	___awdiv@sign& (0+255),b
 20570                           
 20571                           ; BSR set to: 0
 20572  0074EE  0100               	movlb	0	; () banked
 20573  0074F0  AF97               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 20574  0074F2  D009               	goto	l12173
 20575                           
 20576                           ; BSR set to: 0
 20577  0074F4  0100               	movlb	0	; () banked
 20578  0074F6  6D96               	negf	___awdiv@divisor& (0+255),b
 20579  0074F8  1F97               	comf	(___awdiv@divisor+1)& (0+255),f,b
 20580  0074FA  B0D8               	btfsc	status,0,c
 20581  0074FC  2B97               	incf	(___awdiv@divisor+1)& (0+255),f,b
 20582                           
 20583                           ; BSR set to: 0
 20584  0074FE  0E01               	movlw	1
 20585  007500  0100               	movlb	0	; () banked
 20586  007502  6F99               	movwf	___awdiv@sign& (0+255),b
 20587  007504  D000               	goto	l12173
 20588  007506                     l12173:
 20589                           
 20590                           ; BSR set to: 0
 20591  007506  0100               	movlb	0	; () banked
 20592  007508  AF95               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 20593  00750A  D009               	goto	l12179
 20594                           
 20595                           ; BSR set to: 0
 20596  00750C  0100               	movlb	0	; () banked
 20597  00750E  6D94               	negf	___awdiv@dividend& (0+255),b
 20598  007510  1F95               	comf	(___awdiv@dividend+1)& (0+255),f,b
 20599  007512  B0D8               	btfsc	status,0,c
 20600  007514  2B95               	incf	(___awdiv@dividend+1)& (0+255),f,b
 20601                           
 20602                           ; BSR set to: 0
 20603  007516  0E01               	movlw	1
 20604  007518  0100               	movlb	0	; () banked
 20605  00751A  1B99               	xorwf	___awdiv@sign& (0+255),f,b
 20606  00751C  D000               	goto	l12179
 20607  00751E                     l12179:
 20608                           
 20609                           ; BSR set to: 0
 20610  00751E  0E00               	movlw	0
 20611  007520  0100               	movlb	0	; () banked
 20612  007522  6F9B               	movwf	(___awdiv@quotient+1)& (0+255),b
 20613  007524  0E00               	movlw	0
 20614  007526  6F9A               	movwf	___awdiv@quotient& (0+255),b
 20615                           
 20616                           ; BSR set to: 0
 20617  007528  0100               	movlb	0	; () banked
 20618  00752A  5196               	movf	___awdiv@divisor& (0+255),w,b
 20619  00752C  0100               	movlb	0	; () banked
 20620  00752E  1197               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 20621  007530  B4D8               	btfsc	status,2,c
 20622  007532  D031               	goto	l12201
 20623                           
 20624                           ; BSR set to: 0
 20625  007534  0E01               	movlw	1
 20626  007536  0100               	movlb	0	; () banked
 20627  007538  6F98               	movwf	___awdiv@counter& (0+255),b
 20628  00753A  D007               	goto	l12187
 20629  00753C                     l12185:
 20630                           
 20631                           ; BSR set to: 0
 20632  00753C  0100               	movlb	0	; () banked
 20633  00753E  90D8               	bcf	status,0,c
 20634  007540  3796               	rlcf	___awdiv@divisor& (0+255),f,b
 20635  007542  3797               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 20636  007544  0100               	movlb	0	; () banked
 20637  007546  2B98               	incf	___awdiv@counter& (0+255),f,b
 20638  007548  D000               	goto	l12187
 20639  00754A                     l12187:
 20640                           
 20641                           ; BSR set to: 0
 20642  00754A  0100               	movlb	0	; () banked
 20643  00754C  BF97               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 20644  00754E  D002               	goto	l12189
 20645  007550  D7F5               	goto	l12185
 20646                           
 20647                           ; BSR set to: 0
 20648  007552  D000               	goto	l12189
 20649  007554                     l12189:
 20650                           
 20651                           ; BSR set to: 0
 20652  007554  0100               	movlb	0	; () banked
 20653  007556  90D8               	bcf	status,0,c
 20654  007558  379A               	rlcf	___awdiv@quotient& (0+255),f,b
 20655  00755A  379B               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 20656                           
 20657                           ; BSR set to: 0
 20658  00755C  0100               	movlb	0	; () banked
 20659  00755E  5196               	movf	___awdiv@divisor& (0+255),w,b
 20660  007560  0100               	movlb	0	; () banked
 20661  007562  5D94               	subwf	___awdiv@dividend& (0+255),w,b
 20662  007564  0100               	movlb	0	; () banked
 20663  007566  5197               	movf	(___awdiv@divisor+1)& (0+255),w,b
 20664  007568  0100               	movlb	0	; () banked
 20665  00756A  5995               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 20666  00756C  A0D8               	btfss	status,0,c
 20667  00756E  D00B               	goto	l12197
 20668                           
 20669                           ; BSR set to: 0
 20670  007570  0100               	movlb	0	; () banked
 20671  007572  5196               	movf	___awdiv@divisor& (0+255),w,b
 20672  007574  0100               	movlb	0	; () banked
 20673  007576  5F94               	subwf	___awdiv@dividend& (0+255),f,b
 20674  007578  0100               	movlb	0	; () banked
 20675  00757A  5197               	movf	(___awdiv@divisor+1)& (0+255),w,b
 20676  00757C  0100               	movlb	0	; () banked
 20677  00757E  5B95               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 20678                           
 20679                           ; BSR set to: 0
 20680  007580  0100               	movlb	0	; () banked
 20681  007582  819A               	bsf	___awdiv@quotient& (0+255),0,b
 20682  007584  D000               	goto	l12197
 20683  007586                     l12197:
 20684                           
 20685                           ; BSR set to: 0
 20686  007586  0100               	movlb	0	; () banked
 20687  007588  90D8               	bcf	status,0,c
 20688  00758A  3397               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 20689  00758C  3396               	rrcf	___awdiv@divisor& (0+255),f,b
 20690                           
 20691                           ; BSR set to: 0
 20692  00758E  0100               	movlb	0	; () banked
 20693  007590  2F98               	decfsz	___awdiv@counter& (0+255),f,b
 20694  007592  D7E0               	goto	l12189
 20695                           
 20696                           ; BSR set to: 0
 20697  007594  D000               	goto	l12201
 20698  007596                     l12201:
 20699                           
 20700                           ; BSR set to: 0
 20701  007596  0100               	movlb	0	; () banked
 20702  007598  5199               	movf	___awdiv@sign& (0+255),w,b
 20703  00759A  0100               	movlb	0	; () banked
 20704  00759C  B4D8               	btfsc	status,2,c
 20705  00759E  D006               	goto	l12205
 20706                           
 20707                           ; BSR set to: 0
 20708  0075A0  0100               	movlb	0	; () banked
 20709  0075A2  6D9A               	negf	___awdiv@quotient& (0+255),b
 20710  0075A4  1F9B               	comf	(___awdiv@quotient+1)& (0+255),f,b
 20711  0075A6  B0D8               	btfsc	status,0,c
 20712  0075A8  2B9B               	incf	(___awdiv@quotient+1)& (0+255),f,b
 20713  0075AA  D000               	goto	l12205
 20714  0075AC                     l12205:
 20715                           
 20716                           ; BSR set to: 0
 20717  0075AC  C09A  F094         	movff	___awdiv@quotient,?___awdiv
 20718  0075B0  C09B  F095         	movff	___awdiv@quotient+1,?___awdiv+1
 20719  0075B4  D000               	goto	l1890
 20720  0075B6                     l1890:
 20721                           
 20722                           ; BSR set to: 0
 20723  0075B6  0012               	return		;funcret
 20724  0075B8                     __end_of___awdiv:
 20725                           	opt stack 0
 20726                           tblptru	equ	0xFF8
 20727                           tblptrh	equ	0xFF7
 20728                           tblptrl	equ	0xFF6
 20729                           tablat	equ	0xFF5
 20730                           prodh	equ	0xFF4
 20731                           prodl	equ	0xFF3
 20732                           intcon	equ	0xFF2
 20733                           intcon2	equ	0xFF1
 20734                           postinc0	equ	0xFEE
 20735                           wreg	equ	0xFE8
 20736                           postdec1	equ	0xFE5
 20737                           fsr1l	equ	0xFE1
 20738                           indf2	equ	0xFDF
 20739                           postinc2	equ	0xFDE
 20740                           postdec2	equ	0xFDD
 20741                           fsr2h	equ	0xFDA
 20742                           fsr2l	equ	0xFD9
 20743                           status	equ	0xFD8
 20744                           
 20745 ;; *************** function __tdiv_to_l_ *****************
 20746 ;; Defined at:
 20747 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
 20748 ;; Parameters:    Size  Location     Type
 20749 ;;  f1              3   14[BANK0 ] float 
 20750 ;;  f2              3   17[BANK0 ] float 
 20751 ;; Auto vars:     Size  Location     Type
 20752 ;;  quot            4   23[BANK0 ] unsigned long 
 20753 ;;  exp1            1   28[BANK0 ] unsigned char 
 20754 ;;  cntr            1   27[BANK0 ] unsigned char 
 20755 ;; Return value:  Size  Location     Type
 20756 ;;                  4   14[BANK0 ] unsigned long 
 20757 ;; Registers used:
 20758 ;;		wreg, status,2, status,0
 20759 ;; Tracked objects:
 20760 ;;		On entry : 0/0
 20761 ;;		On exit  : 0/0
 20762 ;;		Unchanged: 0/0
 20763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20764 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20765 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20766 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20767 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20768 ;;Total ram usage:       15 bytes
 20769 ;; Hardware stack levels used:    1
 20770 ;; Hardware stack levels required when called:    6
 20771 ;; This function calls:
 20772 ;;		Nothing
 20773 ;; This function is called by:
 20774 ;;		_printf
 20775 ;; This function uses a non-reentrant model
 20776 ;;
 20777                           
 20778                           	psect	text78
 20779  005AE2                     __ptext78:
 20780                           	opt stack 0
 20781  005AE2                     __tdiv_to_l_:
 20782                           	opt stack 23
 20783                           
 20784                           ; BSR set to: 0
 20785                           ;incstack = 0
 20786  005AE2  C090  F094         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 20787  005AE6  0100               	movlb	0	; () banked
 20788  005AE8  6B95               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 20789  005AEA  6B96               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 20790  005AEC  0100               	movlb	0	; () banked
 20791  005AEE  358F               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 20792  005AF0  0100               	movlb	0	; () banked
 20793  005AF2  3794               	rlcf	??__tdiv_to_l_& (0+255),f,b
 20794  005AF4  E301               	bnc	u13671
 20795  005AF6  8195               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 20796  005AF8                     u13671:
 20797  005AF8  0100               	movlb	0	; () banked
 20798  005AFA  5194               	movf	??__tdiv_to_l_& (0+255),w,b
 20799  005AFC  0100               	movlb	0	; () banked
 20800  005AFE  6F9C               	movwf	__tdiv_to_l_@exp1& (0+255),b
 20801  005B00  0100               	movlb	0	; () banked
 20802  005B02  519C               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 20803  005B04  A4D8               	btfss	status,2,c
 20804  005B06  D002               	goto	l12471
 20805  005B08  D085               	goto	l12513
 20806                           
 20807                           ; BSR set to: 0
 20808                           
 20809                           ; BSR set to: 0
 20810  005B0A  D0A5               	goto	l2102
 20811  005B0C                     l12471:
 20812                           
 20813                           ; BSR set to: 0
 20814  005B0C  C093  F094         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 20815  005B10  0100               	movlb	0	; () banked
 20816  005B12  6B95               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 20817  005B14  6B96               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 20818  005B16  0100               	movlb	0	; () banked
 20819  005B18  3592               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 20820  005B1A  0100               	movlb	0	; () banked
 20821  005B1C  3794               	rlcf	??__tdiv_to_l_& (0+255),f,b
 20822  005B1E  E301               	bnc	u13691
 20823  005B20  8195               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 20824  005B22                     u13691:
 20825  005B22  0100               	movlb	0	; () banked
 20826  005B24  5194               	movf	??__tdiv_to_l_& (0+255),w,b
 20827  005B26  0100               	movlb	0	; () banked
 20828  005B28  6F9B               	movwf	__tdiv_to_l_@cntr& (0+255),b
 20829  005B2A  0100               	movlb	0	; () banked
 20830  005B2C  519B               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 20831  005B2E  A4D8               	btfss	status,2,c
 20832  005B30  D002               	goto	l12477
 20833  005B32  D070               	goto	l12513
 20834                           
 20835                           ; BSR set to: 0
 20836                           
 20837                           ; BSR set to: 0
 20838  005B34  D090               	goto	l2102
 20839  005B36                     l12477:
 20840                           
 20841                           ; BSR set to: 0
 20842  005B36  0100               	movlb	0	; () banked
 20843  005B38  8F8F               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 20844                           
 20845                           ; BSR set to: 0
 20846  005B3A  0EFF               	movlw	255
 20847  005B3C  0100               	movlb	0	; () banked
 20848  005B3E  178E               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 20849  005B40  0EFF               	movlw	255
 20850  005B42  0100               	movlb	0	; () banked
 20851  005B44  178F               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 20852  005B46  0E00               	movlw	0
 20853  005B48  0100               	movlb	0	; () banked
 20854  005B4A  1790               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 20855  005B4C  0100               	movlb	0	; () banked
 20856  005B4E  8F92               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 20857                           
 20858                           ; BSR set to: 0
 20859  005B50  0EFF               	movlw	255
 20860  005B52  0100               	movlb	0	; () banked
 20861  005B54  1791               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 20862  005B56  0EFF               	movlw	255
 20863  005B58  0100               	movlb	0	; () banked
 20864  005B5A  1792               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 20865  005B5C  0E00               	movlw	0
 20866  005B5E  0100               	movlb	0	; () banked
 20867  005B60  1793               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 20868                           
 20869                           ; BSR set to: 0
 20870  005B62  0E00               	movlw	0
 20871  005B64  0100               	movlb	0	; () banked
 20872  005B66  6F97               	movwf	__tdiv_to_l_@quot& (0+255),b
 20873  005B68  0E00               	movlw	0
 20874  005B6A  6F98               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 20875  005B6C  0E00               	movlw	0
 20876  005B6E  6F99               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 20877  005B70  0E00               	movlw	0
 20878  005B72  6F9A               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 20879                           
 20880                           ; BSR set to: 0
 20881  005B74  0E7F               	movlw	127
 20882  005B76  0100               	movlb	0	; () banked
 20883  005B78  5F9C               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 20884                           
 20885                           ; BSR set to: 0
 20886  005B7A  0100               	movlb	0	; () banked
 20887  005B7C  519B               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 20888  005B7E  0F98               	addlw	152
 20889  005B80  0100               	movlb	0	; () banked
 20890  005B82  5F9C               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 20891                           
 20892                           ; BSR set to: 0
 20893  005B84  0E18               	movlw	24
 20894  005B86  0100               	movlb	0	; () banked
 20895  005B88  6F9B               	movwf	__tdiv_to_l_@cntr& (0+255),b
 20896  005B8A                     l2104:
 20897                           
 20898                           ; BSR set to: 0
 20899  005B8A  0100               	movlb	0	; () banked
 20900  005B8C  90D8               	bcf	status,0,c
 20901  005B8E  3797               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 20902  005B90  3798               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 20903  005B92  3799               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 20904  005B94  379A               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 20905                           
 20906                           ; BSR set to: 0
 20907  005B96  0100               	movlb	0	; () banked
 20908  005B98  5191               	movf	__tdiv_to_l_@f2& (0+255),w,b
 20909  005B9A  0100               	movlb	0	; () banked
 20910  005B9C  5D8E               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 20911  005B9E  0100               	movlb	0	; () banked
 20912  005BA0  5192               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 20913  005BA2  0100               	movlb	0	; () banked
 20914  005BA4  598F               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 20915  005BA6  0100               	movlb	0	; () banked
 20916  005BA8  5193               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 20917  005BAA  0100               	movlb	0	; () banked
 20918  005BAC  5990               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 20919  005BAE  A0D8               	btfss	status,0,c
 20920  005BB0  D00E               	goto	l2105
 20921                           
 20922                           ; BSR set to: 0
 20923  005BB2  0100               	movlb	0	; () banked
 20924  005BB4  5191               	movf	__tdiv_to_l_@f2& (0+255),w,b
 20925  005BB6  0100               	movlb	0	; () banked
 20926  005BB8  5F8E               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 20927  005BBA  0100               	movlb	0	; () banked
 20928  005BBC  5192               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 20929  005BBE  0100               	movlb	0	; () banked
 20930  005BC0  5B8F               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 20931  005BC2  0100               	movlb	0	; () banked
 20932  005BC4  5193               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 20933  005BC6  0100               	movlb	0	; () banked
 20934  005BC8  5B90               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 20935                           
 20936                           ; BSR set to: 0
 20937  005BCA  0100               	movlb	0	; () banked
 20938  005BCC  8197               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 20939  005BCE                     l2105:
 20940                           
 20941                           ; BSR set to: 0
 20942  005BCE  0100               	movlb	0	; () banked
 20943  005BD0  90D8               	bcf	status,0,c
 20944  005BD2  378E               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 20945  005BD4  378F               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 20946  005BD6  3790               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 20947                           
 20948                           ; BSR set to: 0
 20949  005BD8  0100               	movlb	0	; () banked
 20950  005BDA  2F9B               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 20951  005BDC  D7D6               	goto	l2104
 20952  005BDE  D000               	goto	l12499
 20953  005BE0                     l12499:
 20954                           
 20955                           ; BSR set to: 0
 20956  005BE0  0100               	movlb	0	; () banked
 20957  005BE2  AF9C               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 20958  005BE4  D013               	goto	l12511
 20959                           
 20960                           ; BSR set to: 0
 20961  005BE6  0100               	movlb	0	; () banked
 20962  005BE8  519C               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 20963  005BEA  0A80               	xorlw	128
 20964  005BEC  0F97               	addlw	151
 20965  005BEE  B0D8               	btfsc	status,0,c
 20966  005BF0  D003               	goto	l12507
 20967  005BF2  D010               	goto	l12513
 20968                           
 20969                           ; BSR set to: 0
 20970                           
 20971                           ; BSR set to: 0
 20972  005BF4  D030               	goto	l2102
 20973                           
 20974                           ; BSR set to: 0
 20975  005BF6  D000               	goto	l12507
 20976  005BF8                     l12507:
 20977                           
 20978                           ; BSR set to: 0
 20979  005BF8  0100               	movlb	0	; () banked
 20980  005BFA  90D8               	bcf	status,0,c
 20981  005BFC  339A               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 20982  005BFE  3399               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 20983  005C00  3398               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 20984  005C02  3397               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 20985                           
 20986                           ; BSR set to: 0
 20987  005C04  0100               	movlb	0	; () banked
 20988  005C06  3F9C               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 20989  005C08  D7F7               	goto	l12507
 20990                           
 20991                           ; BSR set to: 0
 20992  005C0A  D01D               	goto	l2111
 20993  005C0C                     l12511:
 20994                           
 20995                           ; BSR set to: 0
 20996  005C0C  0E17               	movlw	23
 20997  005C0E  0100               	movlb	0	; () banked
 20998  005C10  659C               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 20999  005C12  D014               	goto	l12519
 21000  005C14                     l12513:
 21001                           
 21002                           ; BSR set to: 0
 21003  005C14  0E00               	movlw	0
 21004  005C16  0100               	movlb	0	; () banked
 21005  005C18  6F8E               	movwf	?__tdiv_to_l_& (0+255),b
 21006  005C1A  0E00               	movlw	0
 21007  005C1C  6F8F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 21008  005C1E  0E00               	movlw	0
 21009  005C20  6F90               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 21010  005C22  0E00               	movlw	0
 21011  005C24  6F91               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 21012                           
 21013                           ; BSR set to: 0
 21014  005C26  D017               	goto	l2102
 21015                           
 21016                           ; BSR set to: 0
 21017  005C28  D009               	goto	l12519
 21018  005C2A                     l12517:
 21019                           
 21020                           ; BSR set to: 0
 21021  005C2A  0100               	movlb	0	; () banked
 21022  005C2C  90D8               	bcf	status,0,c
 21023  005C2E  3797               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 21024  005C30  3798               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 21025  005C32  3799               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 21026  005C34  379A               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 21027  005C36  0100               	movlb	0	; () banked
 21028  005C38  079C               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 21029  005C3A  D000               	goto	l12519
 21030  005C3C                     l12519:
 21031                           
 21032                           ; BSR set to: 0
 21033  005C3C  0100               	movlb	0	; () banked
 21034  005C3E  519C               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 21035  005C40  0100               	movlb	0	; () banked
 21036  005C42  A4D8               	btfss	status,2,c
 21037  005C44  D7F2               	goto	l12517
 21038  005C46                     l2111:
 21039                           
 21040                           ; BSR set to: 0
 21041  005C46  C097  F08E         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 21042  005C4A  C098  F08F         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 21043  005C4E  C099  F090         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 21044  005C52  C09A  F091         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 21045  005C56                     l2102:
 21046                           
 21047                           ; BSR set to: 0
 21048  005C56  0012               	return		;funcret
 21049  005C58                     __end_of__tdiv_to_l_:
 21050                           	opt stack 0
 21051                           tblptru	equ	0xFF8
 21052                           tblptrh	equ	0xFF7
 21053                           tblptrl	equ	0xFF6
 21054                           tablat	equ	0xFF5
 21055                           prodh	equ	0xFF4
 21056                           prodl	equ	0xFF3
 21057                           intcon	equ	0xFF2
 21058                           intcon2	equ	0xFF1
 21059                           postinc0	equ	0xFEE
 21060                           wreg	equ	0xFE8
 21061                           postdec1	equ	0xFE5
 21062                           fsr1l	equ	0xFE1
 21063                           indf2	equ	0xFDF
 21064                           postinc2	equ	0xFDE
 21065                           postdec2	equ	0xFDD
 21066                           fsr2h	equ	0xFDA
 21067                           fsr2l	equ	0xFD9
 21068                           status	equ	0xFD8
 21069                           
 21070 ;; *************** function __div_to_l_ *****************
 21071 ;; Defined at:
 21072 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
 21073 ;; Parameters:    Size  Location     Type
 21074 ;;  f1              3   14[BANK0 ] unsigned long 
 21075 ;;  f2              3   17[BANK0 ] unsigned long 
 21076 ;; Auto vars:     Size  Location     Type
 21077 ;;  quot            4   20[BANK0 ] unsigned long 
 21078 ;;  exp1            1   25[BANK0 ] unsigned char 
 21079 ;;  cntr            1   24[BANK0 ] unsigned char 
 21080 ;; Return value:  Size  Location     Type
 21081 ;;                  4   14[BANK0 ] unsigned long 
 21082 ;; Registers used:
 21083 ;;		wreg, status,2, status,0
 21084 ;; Tracked objects:
 21085 ;;		On entry : 0/0
 21086 ;;		On exit  : 0/0
 21087 ;;		Unchanged: 0/0
 21088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21089 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21090 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21092 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21093 ;;Total ram usage:       12 bytes
 21094 ;; Hardware stack levels used:    1
 21095 ;; Hardware stack levels required when called:    6
 21096 ;; This function calls:
 21097 ;;		Nothing
 21098 ;; This function is called by:
 21099 ;;		_printf
 21100 ;; This function uses a non-reentrant model
 21101 ;;
 21102                           
 21103                           	psect	text79
 21104  005C58                     __ptext79:
 21105                           	opt stack 0
 21106  005C58                     __div_to_l_:
 21107                           	opt stack 23
 21108                           
 21109                           ; BSR set to: 0
 21110                           ;incstack = 0
 21111  005C58  0100               	movlb	0	; () banked
 21112  005C5A  3590               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 21113  005C5C  3591               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 21114  005C5E  0100               	movlb	0	; () banked
 21115  005C60  6F99               	movwf	__div_to_l_@exp1& (0+255),b
 21116  005C62  0100               	movlb	0	; () banked
 21117  005C64  5199               	movf	__div_to_l_@exp1& (0+255),w,b
 21118  005C66  A4D8               	btfss	status,2,c
 21119  005C68  D002               	goto	l12527
 21120  005C6A  D086               	goto	l12573
 21121                           
 21122                           ; BSR set to: 0
 21123                           
 21124                           ; BSR set to: 0
 21125  005C6C  D0A6               	goto	l1981
 21126  005C6E                     l12527:
 21127                           
 21128                           ; BSR set to: 0
 21129  005C6E  0100               	movlb	0	; () banked
 21130  005C70  3593               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 21131  005C72  3594               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 21132  005C74  0100               	movlb	0	; () banked
 21133  005C76  6F98               	movwf	__div_to_l_@cntr& (0+255),b
 21134  005C78  0100               	movlb	0	; () banked
 21135  005C7A  5198               	movf	__div_to_l_@cntr& (0+255),w,b
 21136  005C7C  A4D8               	btfss	status,2,c
 21137  005C7E  D002               	goto	l12533
 21138  005C80  D07B               	goto	l12573
 21139                           
 21140                           ; BSR set to: 0
 21141                           
 21142                           ; BSR set to: 0
 21143  005C82  D09B               	goto	l1981
 21144  005C84                     l12533:
 21145                           
 21146                           ; BSR set to: 0
 21147  005C84  0100               	movlb	0	; () banked
 21148  005C86  8F90               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 21149                           
 21150                           ; BSR set to: 0
 21151  005C88  0EFF               	movlw	255
 21152  005C8A  0100               	movlb	0	; () banked
 21153  005C8C  178E               	andwf	__div_to_l_@f1& (0+255),f,b
 21154  005C8E  0EFF               	movlw	255
 21155  005C90  178F               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 21156  005C92  0EFF               	movlw	255
 21157  005C94  1790               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 21158  005C96  0E00               	movlw	0
 21159  005C98  1791               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 21160                           
 21161                           ; BSR set to: 0
 21162  005C9A  0100               	movlb	0	; () banked
 21163  005C9C  8F93               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 21164  005C9E  0EFF               	movlw	255
 21165  005CA0  0100               	movlb	0	; () banked
 21166  005CA2  1791               	andwf	__div_to_l_@f2& (0+255),f,b
 21167  005CA4  0EFF               	movlw	255
 21168  005CA6  1792               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 21169  005CA8  0EFF               	movlw	255
 21170  005CAA  1793               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 21171  005CAC  0E00               	movlw	0
 21172  005CAE  1794               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 21173                           
 21174                           ; BSR set to: 0
 21175  005CB0  0E00               	movlw	0
 21176  005CB2  0100               	movlb	0	; () banked
 21177  005CB4  6F94               	movwf	__div_to_l_@quot& (0+255),b
 21178  005CB6  0E00               	movlw	0
 21179  005CB8  6F95               	movwf	(__div_to_l_@quot+1)& (0+255),b
 21180  005CBA  0E00               	movlw	0
 21181  005CBC  6F96               	movwf	(__div_to_l_@quot+2)& (0+255),b
 21182  005CBE  0E00               	movlw	0
 21183  005CC0  6F97               	movwf	(__div_to_l_@quot+3)& (0+255),b
 21184                           
 21185                           ; BSR set to: 0
 21186  005CC2  0E7F               	movlw	127
 21187  005CC4  0100               	movlb	0	; () banked
 21188  005CC6  5F99               	subwf	__div_to_l_@exp1& (0+255),f,b
 21189                           
 21190                           ; BSR set to: 0
 21191  005CC8  0100               	movlb	0	; () banked
 21192  005CCA  5198               	movf	__div_to_l_@cntr& (0+255),w,b
 21193  005CCC  0FA0               	addlw	160
 21194  005CCE  0100               	movlb	0	; () banked
 21195  005CD0  5F99               	subwf	__div_to_l_@exp1& (0+255),f,b
 21196                           
 21197                           ; BSR set to: 0
 21198  005CD2  0E20               	movlw	32
 21199  005CD4  0100               	movlb	0	; () banked
 21200  005CD6  6F98               	movwf	__div_to_l_@cntr& (0+255),b
 21201  005CD8  D000               	goto	l12547
 21202  005CDA                     l12547:
 21203                           
 21204                           ; BSR set to: 0
 21205  005CDA  0100               	movlb	0	; () banked
 21206  005CDC  90D8               	bcf	status,0,c
 21207  005CDE  3794               	rlcf	__div_to_l_@quot& (0+255),f,b
 21208  005CE0  3795               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 21209  005CE2  3796               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 21210  005CE4  3797               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 21211                           
 21212                           ; BSR set to: 0
 21213  005CE6  0100               	movlb	0	; () banked
 21214  005CE8  5191               	movf	__div_to_l_@f2& (0+255),w,b
 21215  005CEA  0100               	movlb	0	; () banked
 21216  005CEC  5D8E               	subwf	__div_to_l_@f1& (0+255),w,b
 21217  005CEE  0100               	movlb	0	; () banked
 21218  005CF0  5192               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 21219  005CF2  0100               	movlb	0	; () banked
 21220  005CF4  598F               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 21221  005CF6  0100               	movlb	0	; () banked
 21222  005CF8  5193               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 21223  005CFA  0100               	movlb	0	; () banked
 21224  005CFC  5990               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 21225  005CFE  0100               	movlb	0	; () banked
 21226  005D00  5194               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 21227  005D02  0100               	movlb	0	; () banked
 21228  005D04  5991               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 21229  005D06  A0D8               	btfss	status,0,c
 21230  005D08  D013               	goto	l12555
 21231                           
 21232                           ; BSR set to: 0
 21233  005D0A  0100               	movlb	0	; () banked
 21234  005D0C  5191               	movf	__div_to_l_@f2& (0+255),w,b
 21235  005D0E  0100               	movlb	0	; () banked
 21236  005D10  5F8E               	subwf	__div_to_l_@f1& (0+255),f,b
 21237  005D12  0100               	movlb	0	; () banked
 21238  005D14  5192               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 21239  005D16  0100               	movlb	0	; () banked
 21240  005D18  5B8F               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 21241  005D1A  0100               	movlb	0	; () banked
 21242  005D1C  5193               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 21243  005D1E  0100               	movlb	0	; () banked
 21244  005D20  5B90               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 21245  005D22  0100               	movlb	0	; () banked
 21246  005D24  5194               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 21247  005D26  0100               	movlb	0	; () banked
 21248  005D28  5B91               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 21249                           
 21250                           ; BSR set to: 0
 21251  005D2A  0100               	movlb	0	; () banked
 21252  005D2C  8194               	bsf	__div_to_l_@quot& (0+255),0,b
 21253  005D2E  D000               	goto	l12555
 21254  005D30                     l12555:
 21255                           
 21256                           ; BSR set to: 0
 21257  005D30  0100               	movlb	0	; () banked
 21258  005D32  90D8               	bcf	status,0,c
 21259  005D34  378E               	rlcf	__div_to_l_@f1& (0+255),f,b
 21260  005D36  378F               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 21261  005D38  3790               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 21262  005D3A  3791               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 21263                           
 21264                           ; BSR set to: 0
 21265  005D3C  0100               	movlb	0	; () banked
 21266  005D3E  2F98               	decfsz	__div_to_l_@cntr& (0+255),f,b
 21267  005D40  D7CC               	goto	l12547
 21268  005D42  D000               	goto	l12559
 21269  005D44                     l12559:
 21270                           
 21271                           ; BSR set to: 0
 21272  005D44  0100               	movlb	0	; () banked
 21273  005D46  AF99               	btfss	__div_to_l_@exp1& (0+255),7,b
 21274  005D48  D013               	goto	l12571
 21275                           
 21276                           ; BSR set to: 0
 21277  005D4A  0100               	movlb	0	; () banked
 21278  005D4C  5199               	movf	__div_to_l_@exp1& (0+255),w,b
 21279  005D4E  0A80               	xorlw	128
 21280  005D50  0F9F               	addlw	159
 21281  005D52  B0D8               	btfsc	status,0,c
 21282  005D54  D003               	goto	l12567
 21283  005D56  D010               	goto	l12573
 21284                           
 21285                           ; BSR set to: 0
 21286                           
 21287                           ; BSR set to: 0
 21288  005D58  D030               	goto	l1981
 21289                           
 21290                           ; BSR set to: 0
 21291  005D5A  D000               	goto	l12567
 21292  005D5C                     l12567:
 21293                           
 21294                           ; BSR set to: 0
 21295  005D5C  0100               	movlb	0	; () banked
 21296  005D5E  90D8               	bcf	status,0,c
 21297  005D60  3397               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 21298  005D62  3396               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 21299  005D64  3395               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 21300  005D66  3394               	rrcf	__div_to_l_@quot& (0+255),f,b
 21301                           
 21302                           ; BSR set to: 0
 21303  005D68  0100               	movlb	0	; () banked
 21304  005D6A  3F99               	incfsz	__div_to_l_@exp1& (0+255),f,b
 21305  005D6C  D7F7               	goto	l12567
 21306                           
 21307                           ; BSR set to: 0
 21308  005D6E  D01D               	goto	l1990
 21309  005D70                     l12571:
 21310                           
 21311                           ; BSR set to: 0
 21312  005D70  0E1F               	movlw	31
 21313  005D72  0100               	movlb	0	; () banked
 21314  005D74  6599               	cpfsgt	__div_to_l_@exp1& (0+255),b
 21315  005D76  D014               	goto	l12579
 21316  005D78                     l12573:
 21317                           
 21318                           ; BSR set to: 0
 21319  005D78  0E00               	movlw	0
 21320  005D7A  0100               	movlb	0	; () banked
 21321  005D7C  6F8E               	movwf	?__div_to_l_& (0+255),b
 21322  005D7E  0E00               	movlw	0
 21323  005D80  6F8F               	movwf	(?__div_to_l_+1)& (0+255),b
 21324  005D82  0E00               	movlw	0
 21325  005D84  6F90               	movwf	(?__div_to_l_+2)& (0+255),b
 21326  005D86  0E00               	movlw	0
 21327  005D88  6F91               	movwf	(?__div_to_l_+3)& (0+255),b
 21328                           
 21329                           ; BSR set to: 0
 21330  005D8A  D017               	goto	l1981
 21331                           
 21332                           ; BSR set to: 0
 21333  005D8C  D009               	goto	l12579
 21334  005D8E                     l12577:
 21335                           
 21336                           ; BSR set to: 0
 21337  005D8E  0100               	movlb	0	; () banked
 21338  005D90  90D8               	bcf	status,0,c
 21339  005D92  3794               	rlcf	__div_to_l_@quot& (0+255),f,b
 21340  005D94  3795               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 21341  005D96  3796               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 21342  005D98  3797               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 21343  005D9A  0100               	movlb	0	; () banked
 21344  005D9C  0799               	decf	__div_to_l_@exp1& (0+255),f,b
 21345  005D9E  D000               	goto	l12579
 21346  005DA0                     l12579:
 21347                           
 21348                           ; BSR set to: 0
 21349  005DA0  0100               	movlb	0	; () banked
 21350  005DA2  5199               	movf	__div_to_l_@exp1& (0+255),w,b
 21351  005DA4  0100               	movlb	0	; () banked
 21352  005DA6  A4D8               	btfss	status,2,c
 21353  005DA8  D7F2               	goto	l12577
 21354  005DAA                     l1990:
 21355                           
 21356                           ; BSR set to: 0
 21357  005DAA  C094  F08E         	movff	__div_to_l_@quot,?__div_to_l_
 21358  005DAE  C095  F08F         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 21359  005DB2  C096  F090         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 21360  005DB6  C097  F091         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 21361  005DBA                     l1981:
 21362                           
 21363                           ; BSR set to: 0
 21364  005DBA  0012               	return		;funcret
 21365  005DBC                     __end_of__div_to_l_:
 21366                           	opt stack 0
 21367                           tblptru	equ	0xFF8
 21368                           tblptrh	equ	0xFF7
 21369                           tblptrl	equ	0xFF6
 21370                           tablat	equ	0xFF5
 21371                           prodh	equ	0xFF4
 21372                           prodl	equ	0xFF3
 21373                           intcon	equ	0xFF2
 21374                           intcon2	equ	0xFF1
 21375                           postinc0	equ	0xFEE
 21376                           wreg	equ	0xFE8
 21377                           postdec1	equ	0xFE5
 21378                           fsr1l	equ	0xFE1
 21379                           indf2	equ	0xFDF
 21380                           postinc2	equ	0xFDE
 21381                           postdec2	equ	0xFDD
 21382                           fsr2h	equ	0xFDA
 21383                           fsr2l	equ	0xFD9
 21384                           status	equ	0xFD8
 21385                           
 21386 ;; *************** function ___lltoft *****************
 21387 ;; Defined at:
 21388 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
 21389 ;; Parameters:    Size  Location     Type
 21390 ;;  c               4   58[BANK0 ] unsigned long 
 21391 ;; Auto vars:     Size  Location     Type
 21392 ;;  exp             1   66[BANK0 ] unsigned char 
 21393 ;; Return value:  Size  Location     Type
 21394 ;;                  3   58[BANK0 ] float 
 21395 ;; Registers used:
 21396 ;;		wreg, status,2, status,0, cstack
 21397 ;; Tracked objects:
 21398 ;;		On entry : 0/0
 21399 ;;		On exit  : 0/0
 21400 ;;		Unchanged: 0/0
 21401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21402 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21403 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21404 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21405 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21406 ;;Total ram usage:        9 bytes
 21407 ;; Hardware stack levels used:    1
 21408 ;; Hardware stack levels required when called:    7
 21409 ;; This function calls:
 21410 ;;		___ftpack
 21411 ;; This function is called by:
 21412 ;;		_printf
 21413 ;; This function uses a non-reentrant model
 21414 ;;
 21415                           
 21416                           	psect	text80
 21417  0082D6                     __ptext80:
 21418                           	opt stack 0
 21419  0082D6                     ___lltoft:
 21420                           	opt stack 22
 21421                           
 21422                           ; BSR set to: 0
 21423                           ;incstack = 0
 21424  0082D6  0E8E               	movlw	142
 21425  0082D8  0100               	movlb	0	; () banked
 21426  0082DA  6FC2               	movwf	___lltoft@exp& (0+255),b
 21427  0082DC  D009               	goto	l12745
 21428  0082DE                     l12743:
 21429                           
 21430                           ; BSR set to: 0
 21431  0082DE  0100               	movlb	0	; () banked
 21432  0082E0  90D8               	bcf	status,0,c
 21433  0082E2  33BD               	rrcf	(___lltoft@c+3)& (0+255),f,b
 21434  0082E4  33BC               	rrcf	(___lltoft@c+2)& (0+255),f,b
 21435  0082E6  33BB               	rrcf	(___lltoft@c+1)& (0+255),f,b
 21436  0082E8  33BA               	rrcf	___lltoft@c& (0+255),f,b
 21437  0082EA  0100               	movlb	0	; () banked
 21438  0082EC  2BC2               	incf	___lltoft@exp& (0+255),f,b
 21439  0082EE  D000               	goto	l12745
 21440  0082F0                     l12745:
 21441                           
 21442                           ; BSR set to: 0
 21443  0082F0  0E00               	movlw	0
 21444  0082F2  0100               	movlb	0	; () banked
 21445  0082F4  15BA               	andwf	___lltoft@c& (0+255),w,b
 21446  0082F6  0100               	movlb	0	; () banked
 21447  0082F8  6FBE               	movwf	??___lltoft& (0+255),b
 21448  0082FA  0E00               	movlw	0
 21449  0082FC  0100               	movlb	0	; () banked
 21450  0082FE  15BB               	andwf	(___lltoft@c+1)& (0+255),w,b
 21451  008300  0100               	movlb	0	; () banked
 21452  008302  6FBF               	movwf	(??___lltoft+1)& (0+255),b
 21453  008304  0E00               	movlw	0
 21454  008306  0100               	movlb	0	; () banked
 21455  008308  15BC               	andwf	(___lltoft@c+2)& (0+255),w,b
 21456  00830A  0100               	movlb	0	; () banked
 21457  00830C  6FC0               	movwf	(??___lltoft+2)& (0+255),b
 21458  00830E  0EFF               	movlw	255
 21459  008310  0100               	movlb	0	; () banked
 21460  008312  15BD               	andwf	(___lltoft@c+3)& (0+255),w,b
 21461  008314  0100               	movlb	0	; () banked
 21462  008316  6FC1               	movwf	(??___lltoft+3)& (0+255),b
 21463  008318  0100               	movlb	0	; () banked
 21464  00831A  51BE               	movf	??___lltoft& (0+255),w,b
 21465  00831C  0100               	movlb	0	; () banked
 21466  00831E  11BF               	iorwf	(??___lltoft+1)& (0+255),w,b
 21467  008320  0100               	movlb	0	; () banked
 21468  008322  11C0               	iorwf	(??___lltoft+2)& (0+255),w,b
 21469  008324  0100               	movlb	0	; () banked
 21470  008326  11C1               	iorwf	(??___lltoft+3)& (0+255),w,b
 21471  008328  A4D8               	btfss	status,2,c
 21472  00832A  D7D9               	goto	l12743
 21473                           
 21474                           ; BSR set to: 0
 21475                           
 21476                           ; BSR set to: 0
 21477  00832C  C0BA  F08E         	movff	___lltoft@c,___ftpack@arg
 21478  008330  C0BB  F08F         	movff	___lltoft@c+1,___ftpack@arg+1
 21479  008334  C0BC  F090         	movff	___lltoft@c+2,___ftpack@arg+2
 21480  008338  C0C2  F091         	movff	___lltoft@exp,___ftpack@exp
 21481  00833C  0E00               	movlw	0
 21482  00833E  0100               	movlb	0	; () banked
 21483  008340  6F92               	movwf	___ftpack@sign& (0+255),b
 21484  008342  ECA0  F032         	call	___ftpack	;wreg free
 21485  008346  C08E  F0BA         	movff	?___ftpack,?___lltoft
 21486  00834A  C08F  F0BB         	movff	?___ftpack+1,?___lltoft+1
 21487  00834E  C090  F0BC         	movff	?___ftpack+2,?___lltoft+2
 21488  008352  D000               	goto	l2221
 21489  008354                     l2221:
 21490  008354  0012               	return		;funcret
 21491  008356                     __end_of___lltoft:
 21492                           	opt stack 0
 21493                           tblptru	equ	0xFF8
 21494                           tblptrh	equ	0xFF7
 21495                           tblptrl	equ	0xFF6
 21496                           tablat	equ	0xFF5
 21497                           prodh	equ	0xFF4
 21498                           prodl	equ	0xFF3
 21499                           intcon	equ	0xFF2
 21500                           intcon2	equ	0xFF1
 21501                           postinc0	equ	0xFEE
 21502                           wreg	equ	0xFE8
 21503                           postdec1	equ	0xFE5
 21504                           fsr1l	equ	0xFE1
 21505                           indf2	equ	0xFDF
 21506                           postinc2	equ	0xFDE
 21507                           postdec2	equ	0xFDD
 21508                           fsr2h	equ	0xFDA
 21509                           fsr2l	equ	0xFD9
 21510                           status	equ	0xFD8
 21511                           
 21512 ;; *************** function ___llmod *****************
 21513 ;; Defined at:
 21514 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
 21515 ;; Parameters:    Size  Location     Type
 21516 ;;  dividend        4   27[BANK0 ] unsigned long 
 21517 ;;  divisor         4   31[BANK0 ] unsigned long 
 21518 ;; Auto vars:     Size  Location     Type
 21519 ;;  counter         1   35[BANK0 ] unsigned char 
 21520 ;; Return value:  Size  Location     Type
 21521 ;;                  4   27[BANK0 ] unsigned long 
 21522 ;; Registers used:
 21523 ;;		wreg, status,2, status,0
 21524 ;; Tracked objects:
 21525 ;;		On entry : 0/0
 21526 ;;		On exit  : 0/0
 21527 ;;		Unchanged: 0/0
 21528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21529 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21530 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21532 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21533 ;;Total ram usage:        9 bytes
 21534 ;; Hardware stack levels used:    1
 21535 ;; Hardware stack levels required when called:    6
 21536 ;; This function calls:
 21537 ;;		Nothing
 21538 ;; This function is called by:
 21539 ;;		_printf
 21540 ;; This function uses a non-reentrant model
 21541 ;;
 21542                           
 21543                           	psect	text81
 21544  007D1C                     __ptext81:
 21545                           	opt stack 0
 21546  007D1C                     ___llmod:
 21547                           	opt stack 23
 21548                           
 21549                           ;incstack = 0
 21550  007D1C  0100               	movlb	0	; () banked
 21551  007D1E  519F               	movf	___llmod@divisor& (0+255),w,b
 21552  007D20  0100               	movlb	0	; () banked
 21553  007D22  11A0               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 21554  007D24  0100               	movlb	0	; () banked
 21555  007D26  11A1               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 21556  007D28  0100               	movlb	0	; () banked
 21557  007D2A  11A2               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 21558  007D2C  B4D8               	btfsc	status,2,c
 21559  007D2E  D03F               	goto	l2201
 21560                           
 21561                           ; BSR set to: 0
 21562  007D30  0E01               	movlw	1
 21563  007D32  0100               	movlb	0	; () banked
 21564  007D34  6FA3               	movwf	___llmod@counter& (0+255),b
 21565  007D36  D009               	goto	l12731
 21566  007D38                     l12729:
 21567                           
 21568                           ; BSR set to: 0
 21569  007D38  0100               	movlb	0	; () banked
 21570  007D3A  90D8               	bcf	status,0,c
 21571  007D3C  379F               	rlcf	___llmod@divisor& (0+255),f,b
 21572  007D3E  37A0               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 21573  007D40  37A1               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 21574  007D42  37A2               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 21575  007D44  0100               	movlb	0	; () banked
 21576  007D46  2BA3               	incf	___llmod@counter& (0+255),f,b
 21577  007D48  D000               	goto	l12731
 21578  007D4A                     l12731:
 21579                           
 21580                           ; BSR set to: 0
 21581  007D4A  0100               	movlb	0	; () banked
 21582  007D4C  BFA2               	btfsc	(___llmod@divisor+3)& (0+255),7,b
 21583  007D4E  D002               	goto	l12733
 21584  007D50  D7F3               	goto	l12729
 21585                           
 21586                           ; BSR set to: 0
 21587  007D52  D000               	goto	l12733
 21588  007D54                     l12733:
 21589                           
 21590                           ; BSR set to: 0
 21591  007D54  0100               	movlb	0	; () banked
 21592  007D56  519F               	movf	___llmod@divisor& (0+255),w,b
 21593  007D58  0100               	movlb	0	; () banked
 21594  007D5A  5D9B               	subwf	___llmod@dividend& (0+255),w,b
 21595  007D5C  0100               	movlb	0	; () banked
 21596  007D5E  51A0               	movf	(___llmod@divisor+1)& (0+255),w,b
 21597  007D60  0100               	movlb	0	; () banked
 21598  007D62  599C               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 21599  007D64  0100               	movlb	0	; () banked
 21600  007D66  51A1               	movf	(___llmod@divisor+2)& (0+255),w,b
 21601  007D68  0100               	movlb	0	; () banked
 21602  007D6A  599D               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 21603  007D6C  0100               	movlb	0	; () banked
 21604  007D6E  51A2               	movf	(___llmod@divisor+3)& (0+255),w,b
 21605  007D70  0100               	movlb	0	; () banked
 21606  007D72  599E               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 21607  007D74  A0D8               	btfss	status,0,c
 21608  007D76  D011               	goto	l12737
 21609                           
 21610                           ; BSR set to: 0
 21611  007D78  0100               	movlb	0	; () banked
 21612  007D7A  519F               	movf	___llmod@divisor& (0+255),w,b
 21613  007D7C  0100               	movlb	0	; () banked
 21614  007D7E  5F9B               	subwf	___llmod@dividend& (0+255),f,b
 21615  007D80  0100               	movlb	0	; () banked
 21616  007D82  51A0               	movf	(___llmod@divisor+1)& (0+255),w,b
 21617  007D84  0100               	movlb	0	; () banked
 21618  007D86  5B9C               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 21619  007D88  0100               	movlb	0	; () banked
 21620  007D8A  51A1               	movf	(___llmod@divisor+2)& (0+255),w,b
 21621  007D8C  0100               	movlb	0	; () banked
 21622  007D8E  5B9D               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 21623  007D90  0100               	movlb	0	; () banked
 21624  007D92  51A2               	movf	(___llmod@divisor+3)& (0+255),w,b
 21625  007D94  0100               	movlb	0	; () banked
 21626  007D96  5B9E               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 21627  007D98  D000               	goto	l12737
 21628  007D9A                     l12737:
 21629                           
 21630                           ; BSR set to: 0
 21631  007D9A  0100               	movlb	0	; () banked
 21632  007D9C  90D8               	bcf	status,0,c
 21633  007D9E  33A2               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 21634  007DA0  33A1               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 21635  007DA2  33A0               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 21636  007DA4  339F               	rrcf	___llmod@divisor& (0+255),f,b
 21637                           
 21638                           ; BSR set to: 0
 21639  007DA6  0100               	movlb	0	; () banked
 21640  007DA8  2FA3               	decfsz	___llmod@counter& (0+255),f,b
 21641  007DAA  D7D4               	goto	l12733
 21642  007DAC  D000               	goto	l2201
 21643  007DAE                     l2201:
 21644                           
 21645                           ; BSR set to: 0
 21646  007DAE  C09B  F09B         	movff	___llmod@dividend,?___llmod
 21647  007DB2  C09C  F09C         	movff	___llmod@dividend+1,?___llmod+1
 21648  007DB6  C09D  F09D         	movff	___llmod@dividend+2,?___llmod+2
 21649  007DBA  C09E  F09E         	movff	___llmod@dividend+3,?___llmod+3
 21650                           
 21651                           ; BSR set to: 0
 21652  007DBE  0012               	return		;funcret
 21653  007DC0                     __end_of___llmod:
 21654                           	opt stack 0
 21655                           tblptru	equ	0xFF8
 21656                           tblptrh	equ	0xFF7
 21657                           tblptrl	equ	0xFF6
 21658                           tablat	equ	0xFF5
 21659                           prodh	equ	0xFF4
 21660                           prodl	equ	0xFF3
 21661                           intcon	equ	0xFF2
 21662                           intcon2	equ	0xFF1
 21663                           postinc0	equ	0xFEE
 21664                           wreg	equ	0xFE8
 21665                           postdec1	equ	0xFE5
 21666                           fsr1l	equ	0xFE1
 21667                           indf2	equ	0xFDF
 21668                           postinc2	equ	0xFDE
 21669                           postdec2	equ	0xFDD
 21670                           fsr2h	equ	0xFDA
 21671                           fsr2l	equ	0xFD9
 21672                           status	equ	0xFD8
 21673                           
 21674 ;; *************** function ___lldiv *****************
 21675 ;; Defined at:
 21676 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
 21677 ;; Parameters:    Size  Location     Type
 21678 ;;  dividend        4   14[BANK0 ] unsigned long 
 21679 ;;  divisor         4   18[BANK0 ] unsigned long 
 21680 ;; Auto vars:     Size  Location     Type
 21681 ;;  quotient        4   22[BANK0 ] unsigned long 
 21682 ;;  counter         1   26[BANK0 ] unsigned char 
 21683 ;; Return value:  Size  Location     Type
 21684 ;;                  4   14[BANK0 ] unsigned long 
 21685 ;; Registers used:
 21686 ;;		wreg, status,2, status,0
 21687 ;; Tracked objects:
 21688 ;;		On entry : 0/0
 21689 ;;		On exit  : 0/0
 21690 ;;		Unchanged: 0/0
 21691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21692 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21693 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21695 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21696 ;;Total ram usage:       13 bytes
 21697 ;; Hardware stack levels used:    1
 21698 ;; Hardware stack levels required when called:    6
 21699 ;; This function calls:
 21700 ;;		Nothing
 21701 ;; This function is called by:
 21702 ;;		_printf
 21703 ;; This function uses a non-reentrant model
 21704 ;;
 21705                           
 21706                           	psect	text82
 21707  007686                     __ptext82:
 21708                           	opt stack 0
 21709  007686                     ___lldiv:
 21710                           	opt stack 23
 21711                           
 21712                           ; BSR set to: 0
 21713                           ;incstack = 0
 21714  007686  0E00               	movlw	0
 21715  007688  0100               	movlb	0	; () banked
 21716  00768A  6F96               	movwf	___lldiv@quotient& (0+255),b
 21717  00768C  0E00               	movlw	0
 21718  00768E  6F97               	movwf	(___lldiv@quotient+1)& (0+255),b
 21719  007690  0E00               	movlw	0
 21720  007692  6F98               	movwf	(___lldiv@quotient+2)& (0+255),b
 21721  007694  0E00               	movlw	0
 21722  007696  6F99               	movwf	(___lldiv@quotient+3)& (0+255),b
 21723                           
 21724                           ; BSR set to: 0
 21725  007698  0100               	movlb	0	; () banked
 21726  00769A  5192               	movf	___lldiv@divisor& (0+255),w,b
 21727  00769C  0100               	movlb	0	; () banked
 21728  00769E  1193               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 21729  0076A0  0100               	movlb	0	; () banked
 21730  0076A2  1194               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 21731  0076A4  0100               	movlb	0	; () banked
 21732  0076A6  1195               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 21733  0076A8  B4D8               	btfsc	status,2,c
 21734  0076AA  D047               	goto	l2191
 21735                           
 21736                           ; BSR set to: 0
 21737  0076AC  0E01               	movlw	1
 21738  0076AE  0100               	movlb	0	; () banked
 21739  0076B0  6F9A               	movwf	___lldiv@counter& (0+255),b
 21740  0076B2  D009               	goto	l12711
 21741  0076B4                     l12709:
 21742                           
 21743                           ; BSR set to: 0
 21744  0076B4  0100               	movlb	0	; () banked
 21745  0076B6  90D8               	bcf	status,0,c
 21746  0076B8  3792               	rlcf	___lldiv@divisor& (0+255),f,b
 21747  0076BA  3793               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 21748  0076BC  3794               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 21749  0076BE  3795               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 21750  0076C0  0100               	movlb	0	; () banked
 21751  0076C2  2B9A               	incf	___lldiv@counter& (0+255),f,b
 21752  0076C4  D000               	goto	l12711
 21753  0076C6                     l12711:
 21754                           
 21755                           ; BSR set to: 0
 21756  0076C6  0100               	movlb	0	; () banked
 21757  0076C8  BF95               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
 21758  0076CA  D002               	goto	l12713
 21759  0076CC  D7F3               	goto	l12709
 21760                           
 21761                           ; BSR set to: 0
 21762  0076CE  D000               	goto	l12713
 21763  0076D0                     l12713:
 21764                           
 21765                           ; BSR set to: 0
 21766  0076D0  0100               	movlb	0	; () banked
 21767  0076D2  90D8               	bcf	status,0,c
 21768  0076D4  3796               	rlcf	___lldiv@quotient& (0+255),f,b
 21769  0076D6  3797               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 21770  0076D8  3798               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 21771  0076DA  3799               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 21772                           
 21773                           ; BSR set to: 0
 21774  0076DC  0100               	movlb	0	; () banked
 21775  0076DE  5192               	movf	___lldiv@divisor& (0+255),w,b
 21776  0076E0  0100               	movlb	0	; () banked
 21777  0076E2  5D8E               	subwf	___lldiv@dividend& (0+255),w,b
 21778  0076E4  0100               	movlb	0	; () banked
 21779  0076E6  5193               	movf	(___lldiv@divisor+1)& (0+255),w,b
 21780  0076E8  0100               	movlb	0	; () banked
 21781  0076EA  598F               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 21782  0076EC  0100               	movlb	0	; () banked
 21783  0076EE  5194               	movf	(___lldiv@divisor+2)& (0+255),w,b
 21784  0076F0  0100               	movlb	0	; () banked
 21785  0076F2  5990               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 21786  0076F4  0100               	movlb	0	; () banked
 21787  0076F6  5195               	movf	(___lldiv@divisor+3)& (0+255),w,b
 21788  0076F8  0100               	movlb	0	; () banked
 21789  0076FA  5991               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 21790  0076FC  A0D8               	btfss	status,0,c
 21791  0076FE  D013               	goto	l12721
 21792                           
 21793                           ; BSR set to: 0
 21794  007700  0100               	movlb	0	; () banked
 21795  007702  5192               	movf	___lldiv@divisor& (0+255),w,b
 21796  007704  0100               	movlb	0	; () banked
 21797  007706  5F8E               	subwf	___lldiv@dividend& (0+255),f,b
 21798  007708  0100               	movlb	0	; () banked
 21799  00770A  5193               	movf	(___lldiv@divisor+1)& (0+255),w,b
 21800  00770C  0100               	movlb	0	; () banked
 21801  00770E  5B8F               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 21802  007710  0100               	movlb	0	; () banked
 21803  007712  5194               	movf	(___lldiv@divisor+2)& (0+255),w,b
 21804  007714  0100               	movlb	0	; () banked
 21805  007716  5B90               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 21806  007718  0100               	movlb	0	; () banked
 21807  00771A  5195               	movf	(___lldiv@divisor+3)& (0+255),w,b
 21808  00771C  0100               	movlb	0	; () banked
 21809  00771E  5B91               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 21810                           
 21811                           ; BSR set to: 0
 21812  007720  0100               	movlb	0	; () banked
 21813  007722  8196               	bsf	___lldiv@quotient& (0+255),0,b
 21814  007724  D000               	goto	l12721
 21815  007726                     l12721:
 21816                           
 21817                           ; BSR set to: 0
 21818  007726  0100               	movlb	0	; () banked
 21819  007728  90D8               	bcf	status,0,c
 21820  00772A  3395               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 21821  00772C  3394               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 21822  00772E  3393               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 21823  007730  3392               	rrcf	___lldiv@divisor& (0+255),f,b
 21824                           
 21825                           ; BSR set to: 0
 21826  007732  0100               	movlb	0	; () banked
 21827  007734  2F9A               	decfsz	___lldiv@counter& (0+255),f,b
 21828  007736  D7CC               	goto	l12713
 21829  007738  D000               	goto	l2191
 21830  00773A                     l2191:
 21831                           
 21832                           ; BSR set to: 0
 21833  00773A  C096  F08E         	movff	___lldiv@quotient,?___lldiv
 21834  00773E  C097  F08F         	movff	___lldiv@quotient+1,?___lldiv+1
 21835  007742  C098  F090         	movff	___lldiv@quotient+2,?___lldiv+2
 21836  007746  C099  F091         	movff	___lldiv@quotient+3,?___lldiv+3
 21837                           
 21838                           ; BSR set to: 0
 21839  00774A  0012               	return		;funcret
 21840  00774C                     __end_of___lldiv:
 21841                           	opt stack 0
 21842                           tblptru	equ	0xFF8
 21843                           tblptrh	equ	0xFF7
 21844                           tblptrl	equ	0xFF6
 21845                           tablat	equ	0xFF5
 21846                           prodh	equ	0xFF4
 21847                           prodl	equ	0xFF3
 21848                           intcon	equ	0xFF2
 21849                           intcon2	equ	0xFF1
 21850                           postinc0	equ	0xFEE
 21851                           wreg	equ	0xFE8
 21852                           postdec1	equ	0xFE5
 21853                           fsr1l	equ	0xFE1
 21854                           indf2	equ	0xFDF
 21855                           postinc2	equ	0xFDE
 21856                           postdec2	equ	0xFDD
 21857                           fsr2h	equ	0xFDA
 21858                           fsr2l	equ	0xFD9
 21859                           status	equ	0xFD8
 21860                           
 21861 ;; *************** function ___fttol *****************
 21862 ;; Defined at:
 21863 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
 21864 ;; Parameters:    Size  Location     Type
 21865 ;;  f1              3   43[BANK0 ] float 
 21866 ;; Auto vars:     Size  Location     Type
 21867 ;;  lval            4   53[BANK0 ] unsigned long 
 21868 ;;  exp1            1   57[BANK0 ] unsigned char 
 21869 ;;  sign1           1   52[BANK0 ] unsigned char 
 21870 ;; Return value:  Size  Location     Type
 21871 ;;                  4   43[BANK0 ] long 
 21872 ;; Registers used:
 21873 ;;		wreg, status,2, status,0
 21874 ;; Tracked objects:
 21875 ;;		On entry : 0/0
 21876 ;;		On exit  : 0/0
 21877 ;;		Unchanged: 0/0
 21878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21879 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21880 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21881 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21882 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21883 ;;Total ram usage:       15 bytes
 21884 ;; Hardware stack levels used:    1
 21885 ;; Hardware stack levels required when called:    6
 21886 ;; This function calls:
 21887 ;;		Nothing
 21888 ;; This function is called by:
 21889 ;;		_Update_Screen
 21890 ;;		_do_update_pwm
 21891 ;;		_printf
 21892 ;; This function uses a non-reentrant model
 21893 ;;
 21894                           
 21895                           	psect	text83
 21896  0062E4                     __ptext83:
 21897                           	opt stack 0
 21898  0062E4                     ___fttol:
 21899                           	opt stack 23
 21900                           
 21901                           ; BSR set to: 0
 21902                           ;incstack = 0
 21903  0062E4  C0AD  F0AF         	movff	___fttol@f1+2,??___fttol
 21904  0062E8  0100               	movlb	0	; () banked
 21905  0062EA  6BB0               	clrf	(??___fttol+1)& (0+255),b
 21906  0062EC  6BB1               	clrf	(??___fttol+2)& (0+255),b
 21907  0062EE  0100               	movlb	0	; () banked
 21908  0062F0  35AC               	rlcf	(___fttol@f1+1)& (0+255),w,b
 21909  0062F2  0100               	movlb	0	; () banked
 21910  0062F4  37AF               	rlcf	??___fttol& (0+255),f,b
 21911  0062F6  E301               	bnc	u13931
 21912  0062F8  81B0               	bsf	(??___fttol+1)& (0+255),0,b
 21913  0062FA                     u13931:
 21914  0062FA  0100               	movlb	0	; () banked
 21915  0062FC  51AF               	movf	??___fttol& (0+255),w,b
 21916  0062FE  0100               	movlb	0	; () banked
 21917  006300  6FB9               	movwf	___fttol@exp1& (0+255),b
 21918  006302  0100               	movlb	0	; () banked
 21919  006304  51B9               	movf	___fttol@exp1& (0+255),w,b
 21920  006306  A4D8               	btfss	status,2,c
 21921  006308  D002               	goto	l12663
 21922  00630A  D051               	goto	l12687
 21923                           
 21924                           ; BSR set to: 0
 21925                           
 21926                           ; BSR set to: 0
 21927  00630C  D083               	goto	l2147
 21928  00630E                     l12663:
 21929                           
 21930                           ; BSR set to: 0
 21931  00630E  0E17               	movlw	23
 21932  006310  0100               	movlb	0	; () banked
 21933  006312  6FAF               	movwf	??___fttol& (0+255),b
 21934  006314  C0AB  F0B0         	movff	___fttol@f1,??___fttol+1
 21935  006318  C0AC  F0B1         	movff	___fttol@f1+1,??___fttol+2
 21936  00631C  C0AD  F0B2         	movff	___fttol@f1+2,??___fttol+3
 21937  006320  0100               	movlb	0	; () banked
 21938  006322  29AF               	incf	??___fttol& (0+255),w,b
 21939  006324  0100               	movlb	0	; () banked
 21940  006326  6FB3               	movwf	(??___fttol+4)& (0+255),b
 21941  006328  D005               	goto	u13950
 21942  00632A                     u13955:
 21943  00632A  0100               	movlb	0	; () banked
 21944  00632C  90D8               	bcf	status,0,c
 21945  00632E  33B2               	rrcf	(??___fttol+3)& (0+255),f,b
 21946  006330  33B1               	rrcf	(??___fttol+2)& (0+255),f,b
 21947  006332  33B0               	rrcf	(??___fttol+1)& (0+255),f,b
 21948  006334                     u13950:
 21949  006334  0100               	movlb	0	; () banked
 21950  006336  2FB3               	decfsz	(??___fttol+4)& (0+255),f,b
 21951  006338  D7F8               	goto	u13955
 21952  00633A  0100               	movlb	0	; () banked
 21953  00633C  51B0               	movf	(??___fttol+1)& (0+255),w,b
 21954  00633E  0100               	movlb	0	; () banked
 21955  006340  6FB4               	movwf	___fttol@sign1& (0+255),b
 21956                           
 21957                           ; BSR set to: 0
 21958  006342  0100               	movlb	0	; () banked
 21959  006344  8FAC               	bsf	(___fttol@f1+1)& (0+255),7,b
 21960                           
 21961                           ; BSR set to: 0
 21962  006346  0EFF               	movlw	255
 21963  006348  0100               	movlb	0	; () banked
 21964  00634A  17AB               	andwf	___fttol@f1& (0+255),f,b
 21965  00634C  0EFF               	movlw	255
 21966  00634E  0100               	movlb	0	; () banked
 21967  006350  17AC               	andwf	(___fttol@f1+1)& (0+255),f,b
 21968  006352  0E00               	movlw	0
 21969  006354  0100               	movlb	0	; () banked
 21970  006356  17AD               	andwf	(___fttol@f1+2)& (0+255),f,b
 21971                           
 21972                           ; BSR set to: 0
 21973  006358  0100               	movlb	0	; () banked
 21974  00635A  51AB               	movf	___fttol@f1& (0+255),w,b
 21975  00635C  0100               	movlb	0	; () banked
 21976  00635E  6FB5               	movwf	___fttol@lval& (0+255),b
 21977  006360  0100               	movlb	0	; () banked
 21978  006362  51AC               	movf	(___fttol@f1+1)& (0+255),w,b
 21979  006364  0100               	movlb	0	; () banked
 21980  006366  6FB6               	movwf	(___fttol@lval+1)& (0+255),b
 21981  006368  0100               	movlb	0	; () banked
 21982  00636A  51AD               	movf	(___fttol@f1+2)& (0+255),w,b
 21983  00636C  0100               	movlb	0	; () banked
 21984  00636E  6FB7               	movwf	(___fttol@lval+2)& (0+255),b
 21985  006370  0100               	movlb	0	; () banked
 21986  006372  6BB8               	clrf	(___fttol@lval+3)& (0+255),b
 21987                           
 21988                           ; BSR set to: 0
 21989  006374  0E8E               	movlw	142
 21990  006376  0100               	movlb	0	; () banked
 21991  006378  5FB9               	subwf	___fttol@exp1& (0+255),f,b
 21992                           
 21993                           ; BSR set to: 0
 21994  00637A  0100               	movlb	0	; () banked
 21995  00637C  AFB9               	btfss	___fttol@exp1& (0+255),7,b
 21996  00637E  D013               	goto	l12685
 21997                           
 21998                           ; BSR set to: 0
 21999  006380  0100               	movlb	0	; () banked
 22000  006382  51B9               	movf	___fttol@exp1& (0+255),w,b
 22001  006384  0A80               	xorlw	128
 22002  006386  0F8F               	addlw	143
 22003  006388  B0D8               	btfsc	status,0,c
 22004  00638A  D003               	goto	l12681
 22005  00638C  D010               	goto	l12687
 22006                           
 22007                           ; BSR set to: 0
 22008                           
 22009                           ; BSR set to: 0
 22010  00638E  D042               	goto	l2147
 22011                           
 22012                           ; BSR set to: 0
 22013  006390  D000               	goto	l12681
 22014  006392                     l12681:
 22015                           
 22016                           ; BSR set to: 0
 22017  006392  0100               	movlb	0	; () banked
 22018  006394  90D8               	bcf	status,0,c
 22019  006396  33B8               	rrcf	(___fttol@lval+3)& (0+255),f,b
 22020  006398  33B7               	rrcf	(___fttol@lval+2)& (0+255),f,b
 22021  00639A  33B6               	rrcf	(___fttol@lval+1)& (0+255),f,b
 22022  00639C  33B5               	rrcf	___fttol@lval& (0+255),f,b
 22023                           
 22024                           ; BSR set to: 0
 22025  00639E  0100               	movlb	0	; () banked
 22026  0063A0  3FB9               	incfsz	___fttol@exp1& (0+255),f,b
 22027  0063A2  D7F7               	goto	l12681
 22028                           
 22029                           ; BSR set to: 0
 22030  0063A4  D01F               	goto	l12695
 22031  0063A6                     l12685:
 22032                           
 22033                           ; BSR set to: 0
 22034  0063A6  0E17               	movlw	23
 22035  0063A8  0100               	movlb	0	; () banked
 22036  0063AA  65B9               	cpfsgt	___fttol@exp1& (0+255),b
 22037  0063AC  D014               	goto	l12693
 22038  0063AE                     l12687:
 22039                           
 22040                           ; BSR set to: 0
 22041  0063AE  0E00               	movlw	0
 22042  0063B0  0100               	movlb	0	; () banked
 22043  0063B2  6FAB               	movwf	?___fttol& (0+255),b
 22044  0063B4  0E00               	movlw	0
 22045  0063B6  6FAC               	movwf	(?___fttol+1)& (0+255),b
 22046  0063B8  0E00               	movlw	0
 22047  0063BA  6FAD               	movwf	(?___fttol+2)& (0+255),b
 22048  0063BC  0E00               	movlw	0
 22049  0063BE  6FAE               	movwf	(?___fttol+3)& (0+255),b
 22050                           
 22051                           ; BSR set to: 0
 22052  0063C0  D029               	goto	l2147
 22053                           
 22054                           ; BSR set to: 0
 22055  0063C2  D009               	goto	l12693
 22056  0063C4                     l12691:
 22057                           
 22058                           ; BSR set to: 0
 22059  0063C4  0100               	movlb	0	; () banked
 22060  0063C6  90D8               	bcf	status,0,c
 22061  0063C8  37B5               	rlcf	___fttol@lval& (0+255),f,b
 22062  0063CA  37B6               	rlcf	(___fttol@lval+1)& (0+255),f,b
 22063  0063CC  37B7               	rlcf	(___fttol@lval+2)& (0+255),f,b
 22064  0063CE  37B8               	rlcf	(___fttol@lval+3)& (0+255),f,b
 22065  0063D0  0100               	movlb	0	; () banked
 22066  0063D2  07B9               	decf	___fttol@exp1& (0+255),f,b
 22067  0063D4  D000               	goto	l12693
 22068  0063D6                     l12693:
 22069                           
 22070                           ; BSR set to: 0
 22071  0063D6  0100               	movlb	0	; () banked
 22072  0063D8  51B9               	movf	___fttol@exp1& (0+255),w,b
 22073  0063DA  0100               	movlb	0	; () banked
 22074  0063DC  B4D8               	btfsc	status,2,c
 22075  0063DE  D002               	goto	l12695
 22076  0063E0  D7F1               	goto	l12691
 22077                           
 22078                           ; BSR set to: 0
 22079  0063E2  D000               	goto	l12695
 22080  0063E4                     l12695:
 22081                           
 22082                           ; BSR set to: 0
 22083  0063E4  0100               	movlb	0	; () banked
 22084  0063E6  51B4               	movf	___fttol@sign1& (0+255),w,b
 22085  0063E8  0100               	movlb	0	; () banked
 22086  0063EA  B4D8               	btfsc	status,2,c
 22087  0063EC  D00A               	goto	l12699
 22088                           
 22089                           ; BSR set to: 0
 22090  0063EE  0100               	movlb	0	; () banked
 22091  0063F0  1FB8               	comf	(___fttol@lval+3)& (0+255),f,b
 22092  0063F2  1FB7               	comf	(___fttol@lval+2)& (0+255),f,b
 22093  0063F4  1FB6               	comf	(___fttol@lval+1)& (0+255),f,b
 22094  0063F6  6DB5               	negf	___fttol@lval& (0+255),b
 22095  0063F8  0E00               	movlw	0
 22096  0063FA  23B6               	addwfc	(___fttol@lval+1)& (0+255),f,b
 22097  0063FC  23B7               	addwfc	(___fttol@lval+2)& (0+255),f,b
 22098  0063FE  23B8               	addwfc	(___fttol@lval+3)& (0+255),f,b
 22099  006400  D000               	goto	l12699
 22100  006402                     l12699:
 22101                           
 22102                           ; BSR set to: 0
 22103  006402  C0B5  F0AB         	movff	___fttol@lval,?___fttol
 22104  006406  C0B6  F0AC         	movff	___fttol@lval+1,?___fttol+1
 22105  00640A  C0B7  F0AD         	movff	___fttol@lval+2,?___fttol+2
 22106  00640E  C0B8  F0AE         	movff	___fttol@lval+3,?___fttol+3
 22107  006412  D000               	goto	l2147
 22108  006414                     l2147:
 22109                           
 22110                           ; BSR set to: 0
 22111  006414  0012               	return		;funcret
 22112  006416                     __end_of___fttol:
 22113                           	opt stack 0
 22114                           tblptru	equ	0xFF8
 22115                           tblptrh	equ	0xFF7
 22116                           tblptrl	equ	0xFF6
 22117                           tablat	equ	0xFF5
 22118                           prodh	equ	0xFF4
 22119                           prodl	equ	0xFF3
 22120                           intcon	equ	0xFF2
 22121                           intcon2	equ	0xFF1
 22122                           postinc0	equ	0xFEE
 22123                           wreg	equ	0xFE8
 22124                           postdec1	equ	0xFE5
 22125                           fsr1l	equ	0xFE1
 22126                           indf2	equ	0xFDF
 22127                           postinc2	equ	0xFDE
 22128                           postdec2	equ	0xFDD
 22129                           fsr2h	equ	0xFDA
 22130                           fsr2l	equ	0xFD9
 22131                           status	equ	0xFD8
 22132                           
 22133 ;; *************** function ___ftsub *****************
 22134 ;; Defined at:
 22135 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
 22136 ;; Parameters:    Size  Location     Type
 22137 ;;  f1              3   86[BANK0 ] float 
 22138 ;;  f2              3   89[BANK0 ] float 
 22139 ;; Auto vars:     Size  Location     Type
 22140 ;;		None
 22141 ;; Return value:  Size  Location     Type
 22142 ;;                  3   86[BANK0 ] float 
 22143 ;; Registers used:
 22144 ;;		wreg, status,2, status,0, cstack
 22145 ;; Tracked objects:
 22146 ;;		On entry : 0/0
 22147 ;;		On exit  : 0/0
 22148 ;;		Unchanged: 0/0
 22149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22150 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22153 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22154 ;;Total ram usage:        6 bytes
 22155 ;; Hardware stack levels used:    1
 22156 ;; Hardware stack levels required when called:    8
 22157 ;; This function calls:
 22158 ;;		___ftadd
 22159 ;; This function is called by:
 22160 ;;		_printf
 22161 ;; This function uses a non-reentrant model
 22162 ;;
 22163                           
 22164                           	psect	text84
 22165  0089B2                     __ptext84:
 22166                           	opt stack 0
 22167  0089B2                     ___ftsub:
 22168                           	opt stack 21
 22169                           
 22170                           ; BSR set to: 0
 22171                           ;incstack = 0
 22172  0089B2  0100               	movlb	0	; () banked
 22173  0089B4  51D9               	movf	___ftsub@f2& (0+255),w,b
 22174  0089B6  0100               	movlb	0	; () banked
 22175  0089B8  11DA               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 22176  0089BA  0100               	movlb	0	; () banked
 22177  0089BC  11DB               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 22178  0089BE  B4D8               	btfsc	status,2,c
 22179  0089C0  D00A               	goto	l12631
 22180                           
 22181                           ; BSR set to: 0
 22182  0089C2  0E00               	movlw	0
 22183  0089C4  0100               	movlb	0	; () banked
 22184  0089C6  1BD9               	xorwf	___ftsub@f2& (0+255),f,b
 22185  0089C8  0E00               	movlw	0
 22186  0089CA  0100               	movlb	0	; () banked
 22187  0089CC  1BDA               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 22188  0089CE  0E80               	movlw	128
 22189  0089D0  0100               	movlb	0	; () banked
 22190  0089D2  1BDB               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 22191  0089D4  D000               	goto	l12631
 22192  0089D6                     l12631:
 22193                           
 22194                           ; BSR set to: 0
 22195  0089D6  C0D6  F0CA         	movff	___ftsub@f1,___ftadd@f1
 22196  0089DA  C0D7  F0CB         	movff	___ftsub@f1+1,___ftadd@f1+1
 22197  0089DE  C0D8  F0CC         	movff	___ftsub@f1+2,___ftadd@f1+2
 22198  0089E2  C0D9  F0CD         	movff	___ftsub@f2,___ftadd@f2
 22199  0089E6  C0DA  F0CE         	movff	___ftsub@f2+1,___ftadd@f2+1
 22200  0089EA  C0DB  F0CF         	movff	___ftsub@f2+2,___ftadd@f2+2
 22201  0089EE  EC0F  F023         	call	___ftadd	;wreg free
 22202  0089F2  C0CA  F0D6         	movff	?___ftadd,?___ftsub
 22203  0089F6  C0CB  F0D7         	movff	?___ftadd+1,?___ftsub+1
 22204  0089FA  C0CC  F0D8         	movff	?___ftadd+2,?___ftsub+2
 22205  0089FE  D000               	goto	l2143
 22206  008A00                     l2143:
 22207  008A00  0012               	return		;funcret
 22208  008A02                     __end_of___ftsub:
 22209                           	opt stack 0
 22210                           tblptru	equ	0xFF8
 22211                           tblptrh	equ	0xFF7
 22212                           tblptrl	equ	0xFF6
 22213                           tablat	equ	0xFF5
 22214                           prodh	equ	0xFF4
 22215                           prodl	equ	0xFF3
 22216                           intcon	equ	0xFF2
 22217                           intcon2	equ	0xFF1
 22218                           postinc0	equ	0xFEE
 22219                           wreg	equ	0xFE8
 22220                           postdec1	equ	0xFE5
 22221                           fsr1l	equ	0xFE1
 22222                           indf2	equ	0xFDF
 22223                           postinc2	equ	0xFDE
 22224                           postdec2	equ	0xFDD
 22225                           fsr2h	equ	0xFDA
 22226                           fsr2l	equ	0xFD9
 22227                           status	equ	0xFD8
 22228                           
 22229 ;; *************** function ___ftadd *****************
 22230 ;; Defined at:
 22231 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
 22232 ;; Parameters:    Size  Location     Type
 22233 ;;  f1              3   74[BANK0 ] float 
 22234 ;;  f2              3   77[BANK0 ] float 
 22235 ;; Auto vars:     Size  Location     Type
 22236 ;;  exp1            1   85[BANK0 ] unsigned char 
 22237 ;;  exp2            1   84[BANK0 ] unsigned char 
 22238 ;;  sign            1   83[BANK0 ] unsigned char 
 22239 ;; Return value:  Size  Location     Type
 22240 ;;                  3   74[BANK0 ] float 
 22241 ;; Registers used:
 22242 ;;		wreg, status,2, status,0, cstack
 22243 ;; Tracked objects:
 22244 ;;		On entry : 0/0
 22245 ;;		On exit  : 0/0
 22246 ;;		Unchanged: 0/0
 22247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22248 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22249 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22250 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22251 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22252 ;;Total ram usage:       12 bytes
 22253 ;; Hardware stack levels used:    1
 22254 ;; Hardware stack levels required when called:    7
 22255 ;; This function calls:
 22256 ;;		___ftpack
 22257 ;; This function is called by:
 22258 ;;		_printf
 22259 ;;		___ftsub
 22260 ;; This function uses a non-reentrant model
 22261 ;;
 22262                           
 22263                           	psect	text85
 22264  00461E                     __ptext85:
 22265                           	opt stack 0
 22266  00461E                     ___ftadd:
 22267                           	opt stack 21
 22268                           
 22269                           ;incstack = 0
 22270  00461E  C0CC  F0D0         	movff	___ftadd@f1+2,??___ftadd
 22271  004622  0100               	movlb	0	; () banked
 22272  004624  6BD1               	clrf	(??___ftadd+1)& (0+255),b
 22273  004626  6BD2               	clrf	(??___ftadd+2)& (0+255),b
 22274  004628  0100               	movlb	0	; () banked
 22275  00462A  35CB               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 22276  00462C  0100               	movlb	0	; () banked
 22277  00462E  37D0               	rlcf	??___ftadd& (0+255),f,b
 22278  004630  E301               	bnc	u13041
 22279  004632  81D1               	bsf	(??___ftadd+1)& (0+255),0,b
 22280  004634                     u13041:
 22281  004634  0100               	movlb	0	; () banked
 22282  004636  51D0               	movf	??___ftadd& (0+255),w,b
 22283  004638  0100               	movlb	0	; () banked
 22284  00463A  6FD5               	movwf	___ftadd@exp1& (0+255),b
 22285  00463C  C0CF  F0D0         	movff	___ftadd@f2+2,??___ftadd
 22286  004640  0100               	movlb	0	; () banked
 22287  004642  6BD1               	clrf	(??___ftadd+1)& (0+255),b
 22288  004644  6BD2               	clrf	(??___ftadd+2)& (0+255),b
 22289  004646  0100               	movlb	0	; () banked
 22290  004648  35CE               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 22291  00464A  0100               	movlb	0	; () banked
 22292  00464C  37D0               	rlcf	??___ftadd& (0+255),f,b
 22293  00464E  E301               	bnc	u13051
 22294  004650  81D1               	bsf	(??___ftadd+1)& (0+255),0,b
 22295  004652                     u13051:
 22296  004652  0100               	movlb	0	; () banked
 22297  004654  51D0               	movf	??___ftadd& (0+255),w,b
 22298  004656  0100               	movlb	0	; () banked
 22299  004658  6FD4               	movwf	___ftadd@exp2& (0+255),b
 22300                           
 22301                           ; BSR set to: 0
 22302  00465A  0100               	movlb	0	; () banked
 22303  00465C  51D5               	movf	___ftadd@exp1& (0+255),w,b
 22304  00465E  0100               	movlb	0	; () banked
 22305  004660  B4D8               	btfsc	status,2,c
 22306  004662  D011               	goto	l2062
 22307                           
 22308                           ; BSR set to: 0
 22309  004664  0100               	movlb	0	; () banked
 22310  004666  51D4               	movf	___ftadd@exp2& (0+255),w,b
 22311  004668  0100               	movlb	0	; () banked
 22312  00466A  5DD5               	subwf	___ftadd@exp1& (0+255),w,b
 22313  00466C  B0D8               	btfsc	status,0,c
 22314  00466E  D012               	goto	l12055
 22315                           
 22316                           ; BSR set to: 0
 22317  004670  0100               	movlb	0	; () banked
 22318  004672  51D5               	movf	___ftadd@exp1& (0+255),w,b
 22319  004674  0800               	sublw	0
 22320  004676  0100               	movlb	0	; () banked
 22321  004678  25D4               	addwf	___ftadd@exp2& (0+255),w,b
 22322  00467A  0100               	movlb	0	; () banked
 22323  00467C  6FD0               	movwf	??___ftadd& (0+255),b
 22324  00467E  0E18               	movlw	24
 22325  004680  0100               	movlb	0	; () banked
 22326  004682  65D0               	cpfsgt	??___ftadd& (0+255),b
 22327  004684  D007               	goto	l12055
 22328  004686                     l2062:
 22329                           
 22330                           ; BSR set to: 0
 22331  004686  C0CD  F0CA         	movff	___ftadd@f2,?___ftadd
 22332  00468A  C0CE  F0CB         	movff	___ftadd@f2+1,?___ftadd+1
 22333  00468E  C0CF  F0CC         	movff	___ftadd@f2+2,?___ftadd+2
 22334  004692  D103               	goto	l2063
 22335  004694                     l12055:
 22336                           
 22337                           ; BSR set to: 0
 22338  004694  0100               	movlb	0	; () banked
 22339  004696  51D4               	movf	___ftadd@exp2& (0+255),w,b
 22340  004698  0100               	movlb	0	; () banked
 22341  00469A  B4D8               	btfsc	status,2,c
 22342  00469C  D011               	goto	l2066
 22343                           
 22344                           ; BSR set to: 0
 22345  00469E  0100               	movlb	0	; () banked
 22346  0046A0  51D5               	movf	___ftadd@exp1& (0+255),w,b
 22347  0046A2  0100               	movlb	0	; () banked
 22348  0046A4  5DD4               	subwf	___ftadd@exp2& (0+255),w,b
 22349  0046A6  B0D8               	btfsc	status,0,c
 22350  0046A8  D012               	goto	l12061
 22351                           
 22352                           ; BSR set to: 0
 22353  0046AA  0100               	movlb	0	; () banked
 22354  0046AC  51D4               	movf	___ftadd@exp2& (0+255),w,b
 22355  0046AE  0800               	sublw	0
 22356  0046B0  0100               	movlb	0	; () banked
 22357  0046B2  25D5               	addwf	___ftadd@exp1& (0+255),w,b
 22358  0046B4  0100               	movlb	0	; () banked
 22359  0046B6  6FD0               	movwf	??___ftadd& (0+255),b
 22360  0046B8  0E18               	movlw	24
 22361  0046BA  0100               	movlb	0	; () banked
 22362  0046BC  65D0               	cpfsgt	??___ftadd& (0+255),b
 22363  0046BE  D007               	goto	l12061
 22364  0046C0                     l2066:
 22365                           
 22366                           ; BSR set to: 0
 22367  0046C0  C0CA  F0CA         	movff	___ftadd@f1,?___ftadd
 22368  0046C4  C0CB  F0CB         	movff	___ftadd@f1+1,?___ftadd+1
 22369  0046C8  C0CC  F0CC         	movff	___ftadd@f1+2,?___ftadd+2
 22370  0046CC  D0E6               	goto	l2063
 22371  0046CE                     l12061:
 22372                           
 22373                           ; BSR set to: 0
 22374  0046CE  0E06               	movlw	6
 22375  0046D0  0100               	movlb	0	; () banked
 22376  0046D2  6FD3               	movwf	___ftadd@sign& (0+255),b
 22377                           
 22378                           ; BSR set to: 0
 22379  0046D4  0100               	movlb	0	; () banked
 22380  0046D6  AFCC               	btfss	(___ftadd@f1+2)& (0+255),7,b
 22381  0046D8  D003               	goto	l12067
 22382                           
 22383                           ; BSR set to: 0
 22384  0046DA  0100               	movlb	0	; () banked
 22385  0046DC  8FD3               	bsf	___ftadd@sign& (0+255),7,b
 22386  0046DE  D000               	goto	l12067
 22387  0046E0                     l12067:
 22388                           
 22389                           ; BSR set to: 0
 22390  0046E0  0100               	movlb	0	; () banked
 22391  0046E2  AFCF               	btfss	(___ftadd@f2+2)& (0+255),7,b
 22392  0046E4  D002               	goto	l2068
 22393                           
 22394                           ; BSR set to: 0
 22395  0046E6  0100               	movlb	0	; () banked
 22396  0046E8  8DD3               	bsf	___ftadd@sign& (0+255),6,b
 22397  0046EA                     l2068:
 22398                           
 22399                           ; BSR set to: 0
 22400  0046EA  0100               	movlb	0	; () banked
 22401  0046EC  8FCB               	bsf	(___ftadd@f1+1)& (0+255),7,b
 22402                           
 22403                           ; BSR set to: 0
 22404  0046EE  0EFF               	movlw	255
 22405  0046F0  0100               	movlb	0	; () banked
 22406  0046F2  17CA               	andwf	___ftadd@f1& (0+255),f,b
 22407  0046F4  0EFF               	movlw	255
 22408  0046F6  0100               	movlb	0	; () banked
 22409  0046F8  17CB               	andwf	(___ftadd@f1+1)& (0+255),f,b
 22410  0046FA  0E00               	movlw	0
 22411  0046FC  0100               	movlb	0	; () banked
 22412  0046FE  17CC               	andwf	(___ftadd@f1+2)& (0+255),f,b
 22413  004700  0100               	movlb	0	; () banked
 22414  004702  8FCE               	bsf	(___ftadd@f2+1)& (0+255),7,b
 22415                           
 22416                           ; BSR set to: 0
 22417  004704  0EFF               	movlw	255
 22418  004706  0100               	movlb	0	; () banked
 22419  004708  17CD               	andwf	___ftadd@f2& (0+255),f,b
 22420  00470A  0EFF               	movlw	255
 22421  00470C  0100               	movlb	0	; () banked
 22422  00470E  17CE               	andwf	(___ftadd@f2+1)& (0+255),f,b
 22423  004710  0E00               	movlw	0
 22424  004712  0100               	movlb	0	; () banked
 22425  004714  17CF               	andwf	(___ftadd@f2+2)& (0+255),f,b
 22426                           
 22427                           ; BSR set to: 0
 22428  004716  0100               	movlb	0	; () banked
 22429  004718  51D4               	movf	___ftadd@exp2& (0+255),w,b
 22430  00471A  0100               	movlb	0	; () banked
 22431  00471C  5DD5               	subwf	___ftadd@exp1& (0+255),w,b
 22432  00471E  B0D8               	btfsc	status,0,c
 22433  004720  D028               	goto	l12087
 22434  004722                     l12077:
 22435                           
 22436                           ; BSR set to: 0
 22437  004722  0100               	movlb	0	; () banked
 22438  004724  90D8               	bcf	status,0,c
 22439  004726  37CD               	rlcf	___ftadd@f2& (0+255),f,b
 22440  004728  37CE               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 22441  00472A  37CF               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 22442  00472C  0100               	movlb	0	; () banked
 22443  00472E  07D4               	decf	___ftadd@exp2& (0+255),f,b
 22444                           
 22445                           ; BSR set to: 0
 22446  004730  0100               	movlb	0	; () banked
 22447  004732  51D5               	movf	___ftadd@exp1& (0+255),w,b
 22448  004734  0100               	movlb	0	; () banked
 22449  004736  19D4               	xorwf	___ftadd@exp2& (0+255),w,b
 22450  004738  B4D8               	btfsc	status,2,c
 22451  00473A  D013               	goto	l12085
 22452                           
 22453                           ; BSR set to: 0
 22454  00473C  0100               	movlb	0	; () banked
 22455  00473E  07D3               	decf	___ftadd@sign& (0+255),f,b
 22456  004740  C0D3  F0D0         	movff	___ftadd@sign,??___ftadd
 22457  004744  0E07               	movlw	7
 22458  004746  0100               	movlb	0	; () banked
 22459  004748  17D0               	andwf	??___ftadd& (0+255),f,b
 22460  00474A  B4D8               	btfsc	status,2,c
 22461  00474C  D00A               	goto	l12085
 22462  00474E  D7E9               	goto	l12077
 22463                           
 22464                           ; BSR set to: 0
 22465                           
 22466                           ; BSR set to: 0
 22467  004750  D008               	goto	l12085
 22468  004752                     l12083:
 22469                           
 22470                           ; BSR set to: 0
 22471  004752  0100               	movlb	0	; () banked
 22472  004754  90D8               	bcf	status,0,c
 22473  004756  33CC               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 22474  004758  33CB               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 22475  00475A  33CA               	rrcf	___ftadd@f1& (0+255),f,b
 22476  00475C  0100               	movlb	0	; () banked
 22477  00475E  2BD5               	incf	___ftadd@exp1& (0+255),f,b
 22478  004760  D000               	goto	l12085
 22479  004762                     l12085:
 22480                           
 22481                           ; BSR set to: 0
 22482  004762  0100               	movlb	0	; () banked
 22483  004764  51D4               	movf	___ftadd@exp2& (0+255),w,b
 22484  004766  0100               	movlb	0	; () banked
 22485  004768  19D5               	xorwf	___ftadd@exp1& (0+255),w,b
 22486  00476A  B4D8               	btfsc	status,2,c
 22487  00476C  D030               	goto	l2077
 22488  00476E  D7F1               	goto	l12083
 22489                           
 22490                           ; BSR set to: 0
 22491  004770  D02E               	goto	l2077
 22492  004772                     l12087:
 22493                           
 22494                           ; BSR set to: 0
 22495  004772  0100               	movlb	0	; () banked
 22496  004774  51D5               	movf	___ftadd@exp1& (0+255),w,b
 22497  004776  0100               	movlb	0	; () banked
 22498  004778  5DD4               	subwf	___ftadd@exp2& (0+255),w,b
 22499  00477A  B0D8               	btfsc	status,0,c
 22500  00477C  D028               	goto	l2077
 22501  00477E                     l12089:
 22502                           
 22503                           ; BSR set to: 0
 22504  00477E  0100               	movlb	0	; () banked
 22505  004780  90D8               	bcf	status,0,c
 22506  004782  37CA               	rlcf	___ftadd@f1& (0+255),f,b
 22507  004784  37CB               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 22508  004786  37CC               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 22509  004788  0100               	movlb	0	; () banked
 22510  00478A  07D5               	decf	___ftadd@exp1& (0+255),f,b
 22511                           
 22512                           ; BSR set to: 0
 22513  00478C  0100               	movlb	0	; () banked
 22514  00478E  51D5               	movf	___ftadd@exp1& (0+255),w,b
 22515  004790  0100               	movlb	0	; () banked
 22516  004792  19D4               	xorwf	___ftadd@exp2& (0+255),w,b
 22517  004794  B4D8               	btfsc	status,2,c
 22518  004796  D013               	goto	l12097
 22519                           
 22520                           ; BSR set to: 0
 22521  004798  0100               	movlb	0	; () banked
 22522  00479A  07D3               	decf	___ftadd@sign& (0+255),f,b
 22523  00479C  C0D3  F0D0         	movff	___ftadd@sign,??___ftadd
 22524  0047A0  0E07               	movlw	7
 22525  0047A2  0100               	movlb	0	; () banked
 22526  0047A4  17D0               	andwf	??___ftadd& (0+255),f,b
 22527  0047A6  B4D8               	btfsc	status,2,c
 22528  0047A8  D00A               	goto	l12097
 22529  0047AA  D7E9               	goto	l12089
 22530                           
 22531                           ; BSR set to: 0
 22532                           
 22533                           ; BSR set to: 0
 22534  0047AC  D008               	goto	l12097
 22535  0047AE                     l12095:
 22536                           
 22537                           ; BSR set to: 0
 22538  0047AE  0100               	movlb	0	; () banked
 22539  0047B0  90D8               	bcf	status,0,c
 22540  0047B2  33CF               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 22541  0047B4  33CE               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 22542  0047B6  33CD               	rrcf	___ftadd@f2& (0+255),f,b
 22543  0047B8  0100               	movlb	0	; () banked
 22544  0047BA  2BD4               	incf	___ftadd@exp2& (0+255),f,b
 22545  0047BC  D000               	goto	l12097
 22546  0047BE                     l12097:
 22547                           
 22548                           ; BSR set to: 0
 22549  0047BE  0100               	movlb	0	; () banked
 22550  0047C0  51D4               	movf	___ftadd@exp2& (0+255),w,b
 22551  0047C2  0100               	movlb	0	; () banked
 22552  0047C4  19D5               	xorwf	___ftadd@exp1& (0+255),w,b
 22553  0047C6  B4D8               	btfsc	status,2,c
 22554  0047C8  D002               	goto	l2077
 22555  0047CA  D7F1               	goto	l12095
 22556                           
 22557                           ; BSR set to: 0
 22558  0047CC  D000               	goto	l2077
 22559  0047CE                     l2077:
 22560                           
 22561                           ; BSR set to: 0
 22562  0047CE  0100               	movlb	0	; () banked
 22563  0047D0  AFD3               	btfss	___ftadd@sign& (0+255),7,b
 22564  0047D2  D012               	goto	l2086
 22565                           
 22566                           ; BSR set to: 0
 22567  0047D4  0EFF               	movlw	255
 22568  0047D6  0100               	movlb	0	; () banked
 22569  0047D8  1BCA               	xorwf	___ftadd@f1& (0+255),f,b
 22570  0047DA  0EFF               	movlw	255
 22571  0047DC  0100               	movlb	0	; () banked
 22572  0047DE  1BCB               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 22573  0047E0  0EFF               	movlw	255
 22574  0047E2  0100               	movlb	0	; () banked
 22575  0047E4  1BCC               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 22576  0047E6  0E01               	movlw	1
 22577  0047E8  0100               	movlb	0	; () banked
 22578  0047EA  27CA               	addwf	___ftadd@f1& (0+255),f,b
 22579  0047EC  0E00               	movlw	0
 22580  0047EE  0100               	movlb	0	; () banked
 22581  0047F0  23CB               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 22582  0047F2  0E00               	movlw	0
 22583  0047F4  0100               	movlb	0	; () banked
 22584  0047F6  23CC               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 22585  0047F8                     l2086:
 22586                           
 22587                           ; BSR set to: 0
 22588  0047F8  0100               	movlb	0	; () banked
 22589  0047FA  ADD3               	btfss	___ftadd@sign& (0+255),6,b
 22590  0047FC  D013               	goto	l12103
 22591                           
 22592                           ; BSR set to: 0
 22593  0047FE  0EFF               	movlw	255
 22594  004800  0100               	movlb	0	; () banked
 22595  004802  1BCD               	xorwf	___ftadd@f2& (0+255),f,b
 22596  004804  0EFF               	movlw	255
 22597  004806  0100               	movlb	0	; () banked
 22598  004808  1BCE               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 22599  00480A  0EFF               	movlw	255
 22600  00480C  0100               	movlb	0	; () banked
 22601  00480E  1BCF               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 22602  004810  0E01               	movlw	1
 22603  004812  0100               	movlb	0	; () banked
 22604  004814  27CD               	addwf	___ftadd@f2& (0+255),f,b
 22605  004816  0E00               	movlw	0
 22606  004818  0100               	movlb	0	; () banked
 22607  00481A  23CE               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 22608  00481C  0E00               	movlw	0
 22609  00481E  0100               	movlb	0	; () banked
 22610  004820  23CF               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 22611  004822  D000               	goto	l12103
 22612  004824                     l12103:
 22613                           
 22614                           ; BSR set to: 0
 22615  004824  0E00               	movlw	0
 22616  004826  0100               	movlb	0	; () banked
 22617  004828  6FD3               	movwf	___ftadd@sign& (0+255),b
 22618                           
 22619                           ; BSR set to: 0
 22620  00482A  0100               	movlb	0	; () banked
 22621  00482C  51CA               	movf	___ftadd@f1& (0+255),w,b
 22622  00482E  0100               	movlb	0	; () banked
 22623  004830  27CD               	addwf	___ftadd@f2& (0+255),f,b
 22624  004832  0100               	movlb	0	; () banked
 22625  004834  51CB               	movf	(___ftadd@f1+1)& (0+255),w,b
 22626  004836  0100               	movlb	0	; () banked
 22627  004838  23CE               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 22628  00483A  0100               	movlb	0	; () banked
 22629  00483C  51CC               	movf	(___ftadd@f1+2)& (0+255),w,b
 22630  00483E  0100               	movlb	0	; () banked
 22631  004840  23CF               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 22632                           
 22633                           ; BSR set to: 0
 22634  004842  0100               	movlb	0	; () banked
 22635  004844  AFCF               	btfss	(___ftadd@f2+2)& (0+255),7,b
 22636  004846  D016               	goto	l12113
 22637                           
 22638                           ; BSR set to: 0
 22639  004848  0EFF               	movlw	255
 22640  00484A  0100               	movlb	0	; () banked
 22641  00484C  1BCD               	xorwf	___ftadd@f2& (0+255),f,b
 22642  00484E  0EFF               	movlw	255
 22643  004850  0100               	movlb	0	; () banked
 22644  004852  1BCE               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 22645  004854  0EFF               	movlw	255
 22646  004856  0100               	movlb	0	; () banked
 22647  004858  1BCF               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 22648  00485A  0E01               	movlw	1
 22649  00485C  0100               	movlb	0	; () banked
 22650  00485E  27CD               	addwf	___ftadd@f2& (0+255),f,b
 22651  004860  0E00               	movlw	0
 22652  004862  0100               	movlb	0	; () banked
 22653  004864  23CE               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 22654  004866  0E00               	movlw	0
 22655  004868  0100               	movlb	0	; () banked
 22656  00486A  23CF               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 22657                           
 22658                           ; BSR set to: 0
 22659  00486C  0E01               	movlw	1
 22660  00486E  0100               	movlb	0	; () banked
 22661  004870  6FD3               	movwf	___ftadd@sign& (0+255),b
 22662  004872  D000               	goto	l12113
 22663  004874                     l12113:
 22664                           
 22665                           ; BSR set to: 0
 22666  004874  C0CD  F08E         	movff	___ftadd@f2,___ftpack@arg
 22667  004878  C0CE  F08F         	movff	___ftadd@f2+1,___ftpack@arg+1
 22668  00487C  C0CF  F090         	movff	___ftadd@f2+2,___ftpack@arg+2
 22669  004880  C0D5  F091         	movff	___ftadd@exp1,___ftpack@exp
 22670  004884  C0D3  F092         	movff	___ftadd@sign,___ftpack@sign
 22671  004888  ECA0  F032         	call	___ftpack	;wreg free
 22672  00488C  C08E  F0CA         	movff	?___ftpack,?___ftadd
 22673  004890  C08F  F0CB         	movff	?___ftpack+1,?___ftadd+1
 22674  004894  C090  F0CC         	movff	?___ftpack+2,?___ftadd+2
 22675  004898  D000               	goto	l2063
 22676  00489A                     l2063:
 22677  00489A  0012               	return		;funcret
 22678  00489C                     __end_of___ftadd:
 22679                           	opt stack 0
 22680                           tblptru	equ	0xFF8
 22681                           tblptrh	equ	0xFF7
 22682                           tblptrl	equ	0xFF6
 22683                           tablat	equ	0xFF5
 22684                           prodh	equ	0xFF4
 22685                           prodl	equ	0xFF3
 22686                           intcon	equ	0xFF2
 22687                           intcon2	equ	0xFF1
 22688                           postinc0	equ	0xFEE
 22689                           wreg	equ	0xFE8
 22690                           postdec1	equ	0xFE5
 22691                           fsr1l	equ	0xFE1
 22692                           indf2	equ	0xFDF
 22693                           postinc2	equ	0xFDE
 22694                           postdec2	equ	0xFDD
 22695                           fsr2h	equ	0xFDA
 22696                           fsr2l	equ	0xFD9
 22697                           status	equ	0xFD8
 22698                           
 22699 ;; *************** function ___ftneg *****************
 22700 ;; Defined at:
 22701 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
 22702 ;; Parameters:    Size  Location     Type
 22703 ;;  f1              3   67[BANK0 ] float 
 22704 ;; Auto vars:     Size  Location     Type
 22705 ;;		None
 22706 ;; Return value:  Size  Location     Type
 22707 ;;                  3   67[BANK0 ] float 
 22708 ;; Registers used:
 22709 ;;		wreg, status,2, status,0
 22710 ;; Tracked objects:
 22711 ;;		On entry : 0/0
 22712 ;;		On exit  : 0/0
 22713 ;;		Unchanged: 0/0
 22714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22715 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22718 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22719 ;;Total ram usage:        3 bytes
 22720 ;; Hardware stack levels used:    1
 22721 ;; Hardware stack levels required when called:    6
 22722 ;; This function calls:
 22723 ;;		Nothing
 22724 ;; This function is called by:
 22725 ;;		_printf
 22726 ;; This function uses a non-reentrant model
 22727 ;;
 22728                           
 22729                           	psect	text86
 22730  008E00                     __ptext86:
 22731                           	opt stack 0
 22732  008E00                     ___ftneg:
 22733                           	opt stack 23
 22734                           
 22735                           ;incstack = 0
 22736  008E00  0100               	movlb	0	; () banked
 22737  008E02  51C3               	movf	___ftneg@f1& (0+255),w,b
 22738  008E04  0100               	movlb	0	; () banked
 22739  008E06  11C4               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 22740  008E08  0100               	movlb	0	; () banked
 22741  008E0A  11C5               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 22742  008E0C  B4D8               	btfsc	status,2,c
 22743  008E0E  D009               	goto	l2136
 22744                           
 22745                           ; BSR set to: 0
 22746  008E10  0E00               	movlw	0
 22747  008E12  0100               	movlb	0	; () banked
 22748  008E14  1BC3               	xorwf	___ftneg@f1& (0+255),f,b
 22749  008E16  0E00               	movlw	0
 22750  008E18  0100               	movlb	0	; () banked
 22751  008E1A  1BC4               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 22752  008E1C  0E80               	movlw	128
 22753  008E1E  0100               	movlb	0	; () banked
 22754  008E20  1BC5               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 22755  008E22                     l2136:
 22756                           
 22757                           ; BSR set to: 0
 22758  008E22  C0C3  F0C3         	movff	___ftneg@f1,?___ftneg
 22759  008E26  C0C4  F0C4         	movff	___ftneg@f1+1,?___ftneg+1
 22760  008E2A  C0C5  F0C5         	movff	___ftneg@f1+2,?___ftneg+2
 22761                           
 22762                           ; BSR set to: 0
 22763  008E2E  0012               	return		;funcret
 22764  008E30                     __end_of___ftneg:
 22765                           	opt stack 0
 22766                           tblptru	equ	0xFF8
 22767                           tblptrh	equ	0xFF7
 22768                           tblptrl	equ	0xFF6
 22769                           tablat	equ	0xFF5
 22770                           prodh	equ	0xFF4
 22771                           prodl	equ	0xFF3
 22772                           intcon	equ	0xFF2
 22773                           intcon2	equ	0xFF1
 22774                           postinc0	equ	0xFEE
 22775                           wreg	equ	0xFE8
 22776                           postdec1	equ	0xFE5
 22777                           fsr1l	equ	0xFE1
 22778                           indf2	equ	0xFDF
 22779                           postinc2	equ	0xFDE
 22780                           postdec2	equ	0xFDD
 22781                           fsr2h	equ	0xFDA
 22782                           fsr2l	equ	0xFD9
 22783                           status	equ	0xFD8
 22784                           
 22785 ;; *************** function ___ftge *****************
 22786 ;; Defined at:
 22787 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
 22788 ;; Parameters:    Size  Location     Type
 22789 ;;  ff1             3   86[BANK0 ] float 
 22790 ;;  ff2             3   89[BANK0 ] float 
 22791 ;; Auto vars:     Size  Location     Type
 22792 ;;		None
 22793 ;; Return value:  Size  Location     Type
 22794 ;;		None               void
 22795 ;; Registers used:
 22796 ;;		wreg, status,2, status,0
 22797 ;; Tracked objects:
 22798 ;;		On entry : 0/0
 22799 ;;		On exit  : 0/0
 22800 ;;		Unchanged: 0/0
 22801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22802 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22804 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22805 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22806 ;;Total ram usage:        9 bytes
 22807 ;; Hardware stack levels used:    1
 22808 ;; Hardware stack levels required when called:    6
 22809 ;; This function calls:
 22810 ;;		Nothing
 22811 ;; This function is called by:
 22812 ;;		_test_alarm
 22813 ;;		_printf
 22814 ;; This function uses a non-reentrant model
 22815 ;;
 22816                           
 22817                           	psect	text87
 22818  0075B8                     __ptext87:
 22819                           	opt stack 0
 22820  0075B8                     ___ftge:
 22821                           	opt stack 23
 22822                           
 22823                           ; BSR set to: 0
 22824                           ;incstack = 0
 22825  0075B8  0100               	movlb	0	; () banked
 22826  0075BA  AFD8               	btfss	(___ftge@ff1+2)& (0+255),7,b
 22827  0075BC  D01E               	goto	l12639
 22828                           
 22829                           ; BSR set to: 0
 22830  0075BE  C0D6  F0DC         	movff	___ftge@ff1,??___ftge
 22831  0075C2  C0D7  F0DD         	movff	___ftge@ff1+1,??___ftge+1
 22832  0075C6  C0D8  F0DE         	movff	___ftge@ff1+2,??___ftge+2
 22833  0075CA  0100               	movlb	0	; () banked
 22834  0075CC  1FDC               	comf	??___ftge& (0+255),f,b
 22835  0075CE  1FDD               	comf	(??___ftge+1)& (0+255),f,b
 22836  0075D0  1FDE               	comf	(??___ftge+2)& (0+255),f,b
 22837  0075D2  2BDC               	incf	??___ftge& (0+255),f,b
 22838  0075D4  0E00               	movlw	0
 22839  0075D6  23DD               	addwfc	(??___ftge+1)& (0+255),f,b
 22840  0075D8  23DE               	addwfc	(??___ftge+2)& (0+255),f,b
 22841  0075DA  0E00               	movlw	0
 22842  0075DC  0100               	movlb	0	; () banked
 22843  0075DE  25DC               	addwf	??___ftge& (0+255),w,b
 22844  0075E0  0100               	movlb	0	; () banked
 22845  0075E2  6FD6               	movwf	___ftge@ff1& (0+255),b
 22846  0075E4  0E00               	movlw	0
 22847  0075E6  0100               	movlb	0	; () banked
 22848  0075E8  21DD               	addwfc	(??___ftge+1)& (0+255),w,b
 22849  0075EA  0100               	movlb	0	; () banked
 22850  0075EC  6FD7               	movwf	(___ftge@ff1+1)& (0+255),b
 22851  0075EE  0E80               	movlw	128
 22852  0075F0  0100               	movlb	0	; () banked
 22853  0075F2  21DE               	addwfc	(??___ftge+2)& (0+255),w,b
 22854  0075F4  0100               	movlb	0	; () banked
 22855  0075F6  6FD8               	movwf	(___ftge@ff1+2)& (0+255),b
 22856  0075F8  D000               	goto	l12639
 22857  0075FA                     l12639:
 22858                           
 22859                           ; BSR set to: 0
 22860  0075FA  0100               	movlb	0	; () banked
 22861  0075FC  AFDB               	btfss	(___ftge@ff2+2)& (0+255),7,b
 22862  0075FE  D01E               	goto	l12643
 22863                           
 22864                           ; BSR set to: 0
 22865  007600  C0D9  F0DC         	movff	___ftge@ff2,??___ftge
 22866  007604  C0DA  F0DD         	movff	___ftge@ff2+1,??___ftge+1
 22867  007608  C0DB  F0DE         	movff	___ftge@ff2+2,??___ftge+2
 22868  00760C  0100               	movlb	0	; () banked
 22869  00760E  1FDC               	comf	??___ftge& (0+255),f,b
 22870  007610  1FDD               	comf	(??___ftge+1)& (0+255),f,b
 22871  007612  1FDE               	comf	(??___ftge+2)& (0+255),f,b
 22872  007614  2BDC               	incf	??___ftge& (0+255),f,b
 22873  007616  0E00               	movlw	0
 22874  007618  23DD               	addwfc	(??___ftge+1)& (0+255),f,b
 22875  00761A  23DE               	addwfc	(??___ftge+2)& (0+255),f,b
 22876  00761C  0E00               	movlw	0
 22877  00761E  0100               	movlb	0	; () banked
 22878  007620  25DC               	addwf	??___ftge& (0+255),w,b
 22879  007622  0100               	movlb	0	; () banked
 22880  007624  6FD9               	movwf	___ftge@ff2& (0+255),b
 22881  007626  0E00               	movlw	0
 22882  007628  0100               	movlb	0	; () banked
 22883  00762A  21DD               	addwfc	(??___ftge+1)& (0+255),w,b
 22884  00762C  0100               	movlb	0	; () banked
 22885  00762E  6FDA               	movwf	(___ftge@ff2+1)& (0+255),b
 22886  007630  0E80               	movlw	128
 22887  007632  0100               	movlb	0	; () banked
 22888  007634  21DE               	addwfc	(??___ftge+2)& (0+255),w,b
 22889  007636  0100               	movlb	0	; () banked
 22890  007638  6FDB               	movwf	(___ftge@ff2+2)& (0+255),b
 22891  00763A  D000               	goto	l12643
 22892  00763C                     l12643:
 22893                           
 22894                           ; BSR set to: 0
 22895  00763C  0E00               	movlw	0
 22896  00763E  0100               	movlb	0	; () banked
 22897  007640  1BD6               	xorwf	___ftge@ff1& (0+255),f,b
 22898  007642  0E00               	movlw	0
 22899  007644  0100               	movlb	0	; () banked
 22900  007646  1BD7               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 22901  007648  0E80               	movlw	128
 22902  00764A  0100               	movlb	0	; () banked
 22903  00764C  1BD8               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 22904                           
 22905                           ; BSR set to: 0
 22906  00764E  0E00               	movlw	0
 22907  007650  0100               	movlb	0	; () banked
 22908  007652  1BD9               	xorwf	___ftge@ff2& (0+255),f,b
 22909  007654  0E00               	movlw	0
 22910  007656  0100               	movlb	0	; () banked
 22911  007658  1BDA               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 22912  00765A  0E80               	movlw	128
 22913  00765C  0100               	movlb	0	; () banked
 22914  00765E  1BDB               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 22915  007660  0100               	movlb	0	; () banked
 22916  007662  51D9               	movf	___ftge@ff2& (0+255),w,b
 22917  007664  0100               	movlb	0	; () banked
 22918  007666  5DD6               	subwf	___ftge@ff1& (0+255),w,b
 22919  007668  0100               	movlb	0	; () banked
 22920  00766A  51DA               	movf	(___ftge@ff2+1)& (0+255),w,b
 22921  00766C  0100               	movlb	0	; () banked
 22922  00766E  59D7               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 22923  007670  0100               	movlb	0	; () banked
 22924  007672  51DB               	movf	(___ftge@ff2+2)& (0+255),w,b
 22925  007674  0100               	movlb	0	; () banked
 22926  007676  59D8               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 22927  007678  B0D8               	btfsc	status,0,c
 22928  00767A  D002               	goto	l12649
 22929                           
 22930                           ; BSR set to: 0
 22931  00767C  90D8               	bcf	status,0,c
 22932  00767E  D002               	goto	l2120
 22933  007680                     l12649:
 22934                           
 22935                           ; BSR set to: 0
 22936  007680  80D8               	bsf	status,0,c
 22937                           
 22938                           ; BSR set to: 0
 22939  007682  D000               	goto	l2120
 22940  007684                     l2120:
 22941                           
 22942                           ; BSR set to: 0
 22943  007684  0012               	return		;funcret
 22944  007686                     __end_of___ftge:
 22945                           	opt stack 0
 22946                           tblptru	equ	0xFF8
 22947                           tblptrh	equ	0xFF7
 22948                           tblptrl	equ	0xFF6
 22949                           tablat	equ	0xFF5
 22950                           prodh	equ	0xFF4
 22951                           prodl	equ	0xFF3
 22952                           intcon	equ	0xFF2
 22953                           intcon2	equ	0xFF1
 22954                           postinc0	equ	0xFEE
 22955                           wreg	equ	0xFE8
 22956                           postdec1	equ	0xFE5
 22957                           fsr1l	equ	0xFE1
 22958                           indf2	equ	0xFDF
 22959                           postinc2	equ	0xFDE
 22960                           postdec2	equ	0xFDD
 22961                           fsr2h	equ	0xFDA
 22962                           fsr2l	equ	0xFD9
 22963                           status	equ	0xFD8
 22964                           
 22965 ;; *************** function ___ftdiv *****************
 22966 ;; Defined at:
 22967 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
 22968 ;; Parameters:    Size  Location     Type
 22969 ;;  f1              3   71[BANK0 ] float 
 22970 ;;  f2              3   74[BANK0 ] float 
 22971 ;; Auto vars:     Size  Location     Type
 22972 ;;  f3              3   81[BANK0 ] float 
 22973 ;;  sign            1   85[BANK0 ] unsigned char 
 22974 ;;  exp             1   84[BANK0 ] unsigned char 
 22975 ;;  cntr            1   80[BANK0 ] unsigned char 
 22976 ;; Return value:  Size  Location     Type
 22977 ;;                  3   71[BANK0 ] float 
 22978 ;; Registers used:
 22979 ;;		wreg, status,2, status,0, cstack
 22980 ;; Tracked objects:
 22981 ;;		On entry : 0/0
 22982 ;;		On exit  : 0/0
 22983 ;;		Unchanged: 0/0
 22984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22985 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22986 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22987 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22988 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22989 ;;Total ram usage:       15 bytes
 22990 ;; Hardware stack levels used:    1
 22991 ;; Hardware stack levels required when called:    7
 22992 ;; This function calls:
 22993 ;;		___ftpack
 22994 ;; This function is called by:
 22995 ;;		_do_update_pwm
 22996 ;;		_read_volt
 22997 ;;		_printf
 22998 ;; This function uses a non-reentrant model
 22999 ;;
 23000                           
 23001                           	psect	text88
 23002  0061A2                     __ptext88:
 23003                           	opt stack 0
 23004  0061A2                     ___ftdiv:
 23005                           	opt stack 22
 23006                           
 23007                           ; BSR set to: 0
 23008                           ;incstack = 0
 23009  0061A2  C0C9  F0CD         	movff	___ftdiv@f1+2,??___ftdiv
 23010  0061A6  0100               	movlb	0	; () banked
 23011  0061A8  6BCE               	clrf	(??___ftdiv+1)& (0+255),b
 23012  0061AA  6BCF               	clrf	(??___ftdiv+2)& (0+255),b
 23013  0061AC  0100               	movlb	0	; () banked
 23014  0061AE  35C8               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 23015  0061B0  0100               	movlb	0	; () banked
 23016  0061B2  37CD               	rlcf	??___ftdiv& (0+255),f,b
 23017  0061B4  E301               	bnc	u13831
 23018  0061B6  81CE               	bsf	(??___ftdiv+1)& (0+255),0,b
 23019  0061B8                     u13831:
 23020  0061B8  0100               	movlb	0	; () banked
 23021  0061BA  51CD               	movf	??___ftdiv& (0+255),w,b
 23022  0061BC  0100               	movlb	0	; () banked
 23023  0061BE  6FD4               	movwf	___ftdiv@exp& (0+255),b
 23024  0061C0  0100               	movlb	0	; () banked
 23025  0061C2  51D4               	movf	___ftdiv@exp& (0+255),w,b
 23026  0061C4  A4D8               	btfss	status,2,c
 23027  0061C6  D002               	goto	l12587
 23028  0061C8  D014               	goto	l12589
 23029                           
 23030                           ; BSR set to: 0
 23031                           
 23032                           ; BSR set to: 0
 23033  0061CA  D08B               	goto	l2094
 23034  0061CC                     l12587:
 23035                           
 23036                           ; BSR set to: 0
 23037  0061CC  C0CC  F0CD         	movff	___ftdiv@f2+2,??___ftdiv
 23038  0061D0  0100               	movlb	0	; () banked
 23039  0061D2  6BCE               	clrf	(??___ftdiv+1)& (0+255),b
 23040  0061D4  6BCF               	clrf	(??___ftdiv+2)& (0+255),b
 23041  0061D6  0100               	movlb	0	; () banked
 23042  0061D8  35CB               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 23043  0061DA  0100               	movlb	0	; () banked
 23044  0061DC  37CD               	rlcf	??___ftdiv& (0+255),f,b
 23045  0061DE  E301               	bnc	u13851
 23046  0061E0  81CE               	bsf	(??___ftdiv+1)& (0+255),0,b
 23047  0061E2                     u13851:
 23048  0061E2  0100               	movlb	0	; () banked
 23049  0061E4  51CD               	movf	??___ftdiv& (0+255),w,b
 23050  0061E6  0100               	movlb	0	; () banked
 23051  0061E8  6FD5               	movwf	___ftdiv@sign& (0+255),b
 23052  0061EA  0100               	movlb	0	; () banked
 23053  0061EC  51D5               	movf	___ftdiv@sign& (0+255),w,b
 23054  0061EE  A4D8               	btfss	status,2,c
 23055  0061F0  D00A               	goto	l12593
 23056  0061F2                     l12589:
 23057                           
 23058                           ; BSR set to: 0
 23059  0061F2  0E00               	movlw	0
 23060  0061F4  0100               	movlb	0	; () banked
 23061  0061F6  6FC7               	movwf	?___ftdiv& (0+255),b
 23062  0061F8  0E00               	movlw	0
 23063  0061FA  0100               	movlb	0	; () banked
 23064  0061FC  6FC8               	movwf	(?___ftdiv+1)& (0+255),b
 23065  0061FE  0E00               	movlw	0
 23066  006200  0100               	movlb	0	; () banked
 23067  006202  6FC9               	movwf	(?___ftdiv+2)& (0+255),b
 23068                           
 23069                           ; BSR set to: 0
 23070  006204  D06E               	goto	l2094
 23071  006206                     l12593:
 23072                           
 23073                           ; BSR set to: 0
 23074  006206  0E00               	movlw	0
 23075  006208  0100               	movlb	0	; () banked
 23076  00620A  6FD1               	movwf	___ftdiv@f3& (0+255),b
 23077  00620C  0E00               	movlw	0
 23078  00620E  0100               	movlb	0	; () banked
 23079  006210  6FD2               	movwf	(___ftdiv@f3+1)& (0+255),b
 23080  006212  0E00               	movlw	0
 23081  006214  0100               	movlb	0	; () banked
 23082  006216  6FD3               	movwf	(___ftdiv@f3+2)& (0+255),b
 23083                           
 23084                           ; BSR set to: 0
 23085  006218  0100               	movlb	0	; () banked
 23086  00621A  51D5               	movf	___ftdiv@sign& (0+255),w,b
 23087  00621C  0F89               	addlw	137
 23088  00621E  0100               	movlb	0	; () banked
 23089  006220  5FD4               	subwf	___ftdiv@exp& (0+255),f,b
 23090                           
 23091                           ; BSR set to: 0
 23092  006222  C0C9  F0D5         	movff	___ftdiv@f1+2,___ftdiv@sign
 23093                           
 23094                           ; BSR set to: 0
 23095  006226  0100               	movlb	0	; () banked
 23096  006228  51CC               	movf	(___ftdiv@f2+2)& (0+255),w,b
 23097  00622A  0100               	movlb	0	; () banked
 23098  00622C  1BD5               	xorwf	___ftdiv@sign& (0+255),f,b
 23099                           
 23100                           ; BSR set to: 0
 23101  00622E  0E80               	movlw	128
 23102  006230  0100               	movlb	0	; () banked
 23103  006232  17D5               	andwf	___ftdiv@sign& (0+255),f,b
 23104                           
 23105                           ; BSR set to: 0
 23106  006234  0100               	movlb	0	; () banked
 23107  006236  8FC8               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 23108                           
 23109                           ; BSR set to: 0
 23110  006238  0EFF               	movlw	255
 23111  00623A  0100               	movlb	0	; () banked
 23112  00623C  17C7               	andwf	___ftdiv@f1& (0+255),f,b
 23113  00623E  0EFF               	movlw	255
 23114  006240  0100               	movlb	0	; () banked
 23115  006242  17C8               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 23116  006244  0E00               	movlw	0
 23117  006246  0100               	movlb	0	; () banked
 23118  006248  17C9               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 23119                           
 23120                           ; BSR set to: 0
 23121  00624A  0100               	movlb	0	; () banked
 23122  00624C  8FCB               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 23123                           
 23124                           ; BSR set to: 0
 23125  00624E  0EFF               	movlw	255
 23126  006250  0100               	movlb	0	; () banked
 23127  006252  17CA               	andwf	___ftdiv@f2& (0+255),f,b
 23128  006254  0EFF               	movlw	255
 23129  006256  0100               	movlb	0	; () banked
 23130  006258  17CB               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 23131  00625A  0E00               	movlw	0
 23132  00625C  0100               	movlb	0	; () banked
 23133  00625E  17CC               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 23134                           
 23135                           ; BSR set to: 0
 23136  006260  0E18               	movlw	24
 23137  006262  0100               	movlb	0	; () banked
 23138  006264  6FD0               	movwf	___ftdiv@cntr& (0+255),b
 23139  006266  D000               	goto	l12613
 23140  006268                     l12613:
 23141                           
 23142                           ; BSR set to: 0
 23143  006268  0100               	movlb	0	; () banked
 23144  00626A  90D8               	bcf	status,0,c
 23145  00626C  37D1               	rlcf	___ftdiv@f3& (0+255),f,b
 23146  00626E  37D2               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 23147  006270  37D3               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 23148                           
 23149                           ; BSR set to: 0
 23150  006272  0100               	movlb	0	; () banked
 23151  006274  51CA               	movf	___ftdiv@f2& (0+255),w,b
 23152  006276  0100               	movlb	0	; () banked
 23153  006278  5DC7               	subwf	___ftdiv@f1& (0+255),w,b
 23154  00627A  0100               	movlb	0	; () banked
 23155  00627C  51CB               	movf	(___ftdiv@f2+1)& (0+255),w,b
 23156  00627E  0100               	movlb	0	; () banked
 23157  006280  59C8               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 23158  006282  0100               	movlb	0	; () banked
 23159  006284  51CC               	movf	(___ftdiv@f2+2)& (0+255),w,b
 23160  006286  0100               	movlb	0	; () banked
 23161  006288  59C9               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 23162  00628A  A0D8               	btfss	status,0,c
 23163  00628C  D00E               	goto	l2097
 23164                           
 23165                           ; BSR set to: 0
 23166  00628E  0100               	movlb	0	; () banked
 23167  006290  51CA               	movf	___ftdiv@f2& (0+255),w,b
 23168  006292  0100               	movlb	0	; () banked
 23169  006294  5FC7               	subwf	___ftdiv@f1& (0+255),f,b
 23170  006296  0100               	movlb	0	; () banked
 23171  006298  51CB               	movf	(___ftdiv@f2+1)& (0+255),w,b
 23172  00629A  0100               	movlb	0	; () banked
 23173  00629C  5BC8               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 23174  00629E  0100               	movlb	0	; () banked
 23175  0062A0  51CC               	movf	(___ftdiv@f2+2)& (0+255),w,b
 23176  0062A2  0100               	movlb	0	; () banked
 23177  0062A4  5BC9               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 23178                           
 23179                           ; BSR set to: 0
 23180  0062A6  0100               	movlb	0	; () banked
 23181  0062A8  81D1               	bsf	___ftdiv@f3& (0+255),0,b
 23182  0062AA                     l2097:
 23183                           
 23184                           ; BSR set to: 0
 23185  0062AA  0100               	movlb	0	; () banked
 23186  0062AC  90D8               	bcf	status,0,c
 23187  0062AE  37C7               	rlcf	___ftdiv@f1& (0+255),f,b
 23188  0062B0  37C8               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 23189  0062B2  37C9               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 23190                           
 23191                           ; BSR set to: 0
 23192  0062B4  0100               	movlb	0	; () banked
 23193  0062B6  2FD0               	decfsz	___ftdiv@cntr& (0+255),f,b
 23194  0062B8  D7D7               	goto	l12613
 23195  0062BA  D000               	goto	l12623
 23196  0062BC                     l12623:
 23197                           
 23198                           ; BSR set to: 0
 23199  0062BC  C0D1  F08E         	movff	___ftdiv@f3,___ftpack@arg
 23200  0062C0  C0D2  F08F         	movff	___ftdiv@f3+1,___ftpack@arg+1
 23201  0062C4  C0D3  F090         	movff	___ftdiv@f3+2,___ftpack@arg+2
 23202  0062C8  C0D4  F091         	movff	___ftdiv@exp,___ftpack@exp
 23203  0062CC  C0D5  F092         	movff	___ftdiv@sign,___ftpack@sign
 23204  0062D0  ECA0  F032         	call	___ftpack	;wreg free
 23205  0062D4  C08E  F0C7         	movff	?___ftpack,?___ftdiv
 23206  0062D8  C08F  F0C8         	movff	?___ftpack+1,?___ftdiv+1
 23207  0062DC  C090  F0C9         	movff	?___ftpack+2,?___ftdiv+2
 23208  0062E0  D000               	goto	l2094
 23209  0062E2                     l2094:
 23210  0062E2  0012               	return		;funcret
 23211  0062E4                     __end_of___ftdiv:
 23212                           	opt stack 0
 23213                           tblptru	equ	0xFF8
 23214                           tblptrh	equ	0xFF7
 23215                           tblptrl	equ	0xFF6
 23216                           tablat	equ	0xFF5
 23217                           prodh	equ	0xFF4
 23218                           prodl	equ	0xFF3
 23219                           intcon	equ	0xFF2
 23220                           intcon2	equ	0xFF1
 23221                           postinc0	equ	0xFEE
 23222                           wreg	equ	0xFE8
 23223                           postdec1	equ	0xFE5
 23224                           fsr1l	equ	0xFE1
 23225                           indf2	equ	0xFDF
 23226                           postinc2	equ	0xFDE
 23227                           postdec2	equ	0xFDD
 23228                           fsr2h	equ	0xFDA
 23229                           fsr2l	equ	0xFD9
 23230                           status	equ	0xFD8
 23231                           
 23232 ;; *************** function ___ftpack *****************
 23233 ;; Defined at:
 23234 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
 23235 ;; Parameters:    Size  Location     Type
 23236 ;;  arg             3   14[BANK0 ] unsigned um
 23237 ;;  exp             1   17[BANK0 ] unsigned char 
 23238 ;;  sign            1   18[BANK0 ] unsigned char 
 23239 ;; Auto vars:     Size  Location     Type
 23240 ;;		None
 23241 ;; Return value:  Size  Location     Type
 23242 ;;                  3   14[BANK0 ] float 
 23243 ;; Registers used:
 23244 ;;		wreg, status,2, status,0
 23245 ;; Tracked objects:
 23246 ;;		On entry : 0/0
 23247 ;;		On exit  : 0/0
 23248 ;;		Unchanged: 0/0
 23249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23250 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23252 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23253 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23254 ;;Total ram usage:        8 bytes
 23255 ;; Hardware stack levels used:    1
 23256 ;; Hardware stack levels required when called:    6
 23257 ;; This function calls:
 23258 ;;		Nothing
 23259 ;; This function is called by:
 23260 ;;		___awtoft
 23261 ;;		___ftadd
 23262 ;;		___ftdiv
 23263 ;;		___ftmul
 23264 ;;		___lbtoft
 23265 ;;		___lltoft
 23266 ;; This function uses a non-reentrant model
 23267 ;;
 23268                           
 23269                           	psect	text89
 23270  006540                     __ptext89:
 23271                           	opt stack 0
 23272  006540                     ___ftpack:
 23273                           	opt stack 22
 23274                           
 23275                           ;incstack = 0
 23276  006540  0100               	movlb	0	; () banked
 23277  006542  5191               	movf	___ftpack@exp& (0+255),w,b
 23278  006544  0100               	movlb	0	; () banked
 23279  006546  B4D8               	btfsc	status,2,c
 23280  006548  D008               	goto	l12001
 23281                           
 23282                           ; BSR set to: 0
 23283  00654A  0100               	movlb	0	; () banked
 23284  00654C  518E               	movf	___ftpack@arg& (0+255),w,b
 23285  00654E  0100               	movlb	0	; () banked
 23286  006550  118F               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 23287  006552  0100               	movlb	0	; () banked
 23288  006554  1190               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 23289  006556  A4D8               	btfss	status,2,c
 23290  006558  D013               	goto	l12007
 23291  00655A                     l12001:
 23292                           
 23293                           ; BSR set to: 0
 23294  00655A  0E00               	movlw	0
 23295  00655C  0100               	movlb	0	; () banked
 23296  00655E  6F8E               	movwf	?___ftpack& (0+255),b
 23297  006560  0E00               	movlw	0
 23298  006562  0100               	movlb	0	; () banked
 23299  006564  6F8F               	movwf	(?___ftpack+1)& (0+255),b
 23300  006566  0E00               	movlw	0
 23301  006568  0100               	movlb	0	; () banked
 23302  00656A  6F90               	movwf	(?___ftpack+2)& (0+255),b
 23303                           
 23304                           ; BSR set to: 0
 23305  00656C  D078               	goto	l2022
 23306                           
 23307                           ; BSR set to: 0
 23308  00656E  D008               	goto	l12007
 23309  006570                     l12005:
 23310                           
 23311                           ; BSR set to: 0
 23312  006570  0100               	movlb	0	; () banked
 23313  006572  2B91               	incf	___ftpack@exp& (0+255),f,b
 23314  006574  0100               	movlb	0	; () banked
 23315  006576  90D8               	bcf	status,0,c
 23316  006578  3390               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 23317  00657A  338F               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 23318  00657C  338E               	rrcf	___ftpack@arg& (0+255),f,b
 23319  00657E  D000               	goto	l12007
 23320  006580                     l12007:
 23321                           
 23322                           ; BSR set to: 0
 23323  006580  0E00               	movlw	0
 23324  006582  0100               	movlb	0	; () banked
 23325  006584  158E               	andwf	___ftpack@arg& (0+255),w,b
 23326  006586  0100               	movlb	0	; () banked
 23327  006588  6F93               	movwf	??___ftpack& (0+255),b
 23328  00658A  0E00               	movlw	0
 23329  00658C  0100               	movlb	0	; () banked
 23330  00658E  158F               	andwf	(___ftpack@arg+1)& (0+255),w,b
 23331  006590  0100               	movlb	0	; () banked
 23332  006592  6F94               	movwf	(??___ftpack+1)& (0+255),b
 23333  006594  0EFE               	movlw	254
 23334  006596  0100               	movlb	0	; () banked
 23335  006598  1590               	andwf	(___ftpack@arg+2)& (0+255),w,b
 23336  00659A  0100               	movlb	0	; () banked
 23337  00659C  6F95               	movwf	(??___ftpack+2)& (0+255),b
 23338  00659E  0100               	movlb	0	; () banked
 23339  0065A0  5193               	movf	??___ftpack& (0+255),w,b
 23340  0065A2  0100               	movlb	0	; () banked
 23341  0065A4  1194               	iorwf	(??___ftpack+1)& (0+255),w,b
 23342  0065A6  0100               	movlb	0	; () banked
 23343  0065A8  1195               	iorwf	(??___ftpack+2)& (0+255),w,b
 23344  0065AA  B4D8               	btfsc	status,2,c
 23345  0065AC  D013               	goto	l12013
 23346  0065AE  D7E0               	goto	l12005
 23347                           
 23348                           ; BSR set to: 0
 23349  0065B0  D011               	goto	l12013
 23350  0065B2                     l12009:
 23351                           
 23352                           ; BSR set to: 0
 23353  0065B2  0100               	movlb	0	; () banked
 23354  0065B4  2B91               	incf	___ftpack@exp& (0+255),f,b
 23355                           
 23356                           ; BSR set to: 0
 23357  0065B6  0E01               	movlw	1
 23358  0065B8  0100               	movlb	0	; () banked
 23359  0065BA  278E               	addwf	___ftpack@arg& (0+255),f,b
 23360  0065BC  0E00               	movlw	0
 23361  0065BE  0100               	movlb	0	; () banked
 23362  0065C0  238F               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 23363  0065C2  0E00               	movlw	0
 23364  0065C4  0100               	movlb	0	; () banked
 23365  0065C6  2390               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 23366  0065C8  0100               	movlb	0	; () banked
 23367  0065CA  90D8               	bcf	status,0,c
 23368  0065CC  3390               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 23369  0065CE  338F               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 23370  0065D0  338E               	rrcf	___ftpack@arg& (0+255),f,b
 23371  0065D2  D000               	goto	l12013
 23372  0065D4                     l12013:
 23373                           
 23374                           ; BSR set to: 0
 23375  0065D4  0E00               	movlw	0
 23376  0065D6  0100               	movlb	0	; () banked
 23377  0065D8  158E               	andwf	___ftpack@arg& (0+255),w,b
 23378  0065DA  0100               	movlb	0	; () banked
 23379  0065DC  6F93               	movwf	??___ftpack& (0+255),b
 23380  0065DE  0E00               	movlw	0
 23381  0065E0  0100               	movlb	0	; () banked
 23382  0065E2  158F               	andwf	(___ftpack@arg+1)& (0+255),w,b
 23383  0065E4  0100               	movlb	0	; () banked
 23384  0065E6  6F94               	movwf	(??___ftpack+1)& (0+255),b
 23385  0065E8  0EFF               	movlw	255
 23386  0065EA  0100               	movlb	0	; () banked
 23387  0065EC  1590               	andwf	(___ftpack@arg+2)& (0+255),w,b
 23388  0065EE  0100               	movlb	0	; () banked
 23389  0065F0  6F95               	movwf	(??___ftpack+2)& (0+255),b
 23390  0065F2  0100               	movlb	0	; () banked
 23391  0065F4  5193               	movf	??___ftpack& (0+255),w,b
 23392  0065F6  0100               	movlb	0	; () banked
 23393  0065F8  1194               	iorwf	(??___ftpack+1)& (0+255),w,b
 23394  0065FA  0100               	movlb	0	; () banked
 23395  0065FC  1195               	iorwf	(??___ftpack+2)& (0+255),w,b
 23396  0065FE  B4D8               	btfsc	status,2,c
 23397  006600  D00A               	goto	l12017
 23398  006602  D7D7               	goto	l12009
 23399                           
 23400                           ; BSR set to: 0
 23401  006604  D008               	goto	l12017
 23402  006606                     l12015:
 23403                           
 23404                           ; BSR set to: 0
 23405  006606  0100               	movlb	0	; () banked
 23406  006608  0791               	decf	___ftpack@exp& (0+255),f,b
 23407  00660A  0100               	movlb	0	; () banked
 23408  00660C  90D8               	bcf	status,0,c
 23409  00660E  378E               	rlcf	___ftpack@arg& (0+255),f,b
 23410  006610  378F               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 23411  006612  3790               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 23412  006614  D000               	goto	l12017
 23413  006616                     l12017:
 23414                           
 23415                           ; BSR set to: 0
 23416  006616  0100               	movlb	0	; () banked
 23417  006618  BF8F               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 23418  00661A  D005               	goto	l2033
 23419                           
 23420                           ; BSR set to: 0
 23421  00661C  0E02               	movlw	2
 23422  00661E  0100               	movlb	0	; () banked
 23423  006620  6191               	cpfslt	___ftpack@exp& (0+255),b
 23424  006622  D7F1               	goto	l12015
 23425  006624  D000               	goto	l2033
 23426  006626                     l2033:
 23427                           
 23428                           ; BSR set to: 0
 23429  006626  0100               	movlb	0	; () banked
 23430  006628  B191               	btfsc	___ftpack@exp& (0+255),0,b
 23431  00662A  D003               	goto	l12023
 23432                           
 23433                           ; BSR set to: 0
 23434  00662C  0100               	movlb	0	; () banked
 23435  00662E  9F8F               	bcf	(___ftpack@arg+1)& (0+255),7,b
 23436  006630  D000               	goto	l12023
 23437  006632                     l12023:
 23438                           
 23439                           ; BSR set to: 0
 23440  006632  0100               	movlb	0	; () banked
 23441  006634  90D8               	bcf	status,0,c
 23442  006636  3391               	rrcf	___ftpack@exp& (0+255),f,b
 23443  006638  0100               	movlb	0	; () banked
 23444  00663A  5191               	movf	___ftpack@exp& (0+255),w,b
 23445  00663C  0100               	movlb	0	; () banked
 23446  00663E  1390               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 23447                           
 23448                           ; BSR set to: 0
 23449  006640  0100               	movlb	0	; () banked
 23450  006642  5192               	movf	___ftpack@sign& (0+255),w,b
 23451  006644  0100               	movlb	0	; () banked
 23452  006646  B4D8               	btfsc	status,2,c
 23453  006648  D003               	goto	l12029
 23454                           
 23455                           ; BSR set to: 0
 23456  00664A  0100               	movlb	0	; () banked
 23457  00664C  8F90               	bsf	(___ftpack@arg+2)& (0+255),7,b
 23458  00664E  D000               	goto	l12029
 23459  006650                     l12029:
 23460                           
 23461                           ; BSR set to: 0
 23462  006650  C08E  F08E         	movff	___ftpack@arg,?___ftpack
 23463  006654  C08F  F08F         	movff	___ftpack@arg+1,?___ftpack+1
 23464  006658  C090  F090         	movff	___ftpack@arg+2,?___ftpack+2
 23465  00665C  D000               	goto	l2022
 23466  00665E                     l2022:
 23467                           
 23468                           ; BSR set to: 0
 23469  00665E  0012               	return		;funcret
 23470  006660                     __end_of___ftpack:
 23471                           	opt stack 0
 23472                           tblptru	equ	0xFF8
 23473                           tblptrh	equ	0xFF7
 23474                           tblptrl	equ	0xFF6
 23475                           tablat	equ	0xFF5
 23476                           prodh	equ	0xFF4
 23477                           prodl	equ	0xFF3
 23478                           intcon	equ	0xFF2
 23479                           intcon2	equ	0xFF1
 23480                           postinc0	equ	0xFEE
 23481                           wreg	equ	0xFE8
 23482                           postdec1	equ	0xFE5
 23483                           fsr1l	equ	0xFE1
 23484                           indf2	equ	0xFDF
 23485                           postinc2	equ	0xFDE
 23486                           postdec2	equ	0xFDD
 23487                           fsr2h	equ	0xFDA
 23488                           fsr2l	equ	0xFD9
 23489                           status	equ	0xFD8
 23490                           
 23491 ;; *************** function _drawtext *****************
 23492 ;; Defined at:
 23493 ;;		line 475 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/ST7735_TFT.c"
 23494 ;; Parameters:    Size  Location     Type
 23495 ;;  x               1    wreg     unsigned char 
 23496 ;;  y               1   54[BANK0 ] unsigned char 
 23497 ;;  _text           2   55[BANK0 ] PTR unsigned char 
 23498 ;;		 -> NULL(0), setup_date(9), setup_time(9), setup_fan_set_text(5), 
 23499 ;;		 -> setup_alarm_time(9), RPM_Txt(5), Volt_Txt(6), DC_Txt(4), 
 23500 ;;		 -> RTC_ALARM_Txt(2), Fan_SW_Txt(4), Fan_Set_Temp_Txt(5), Alarm_SW_Txt(4), 
 23501 ;;		 -> alarm_time(9), date(9), time(9), tempF(4), 
 23502 ;;		 -> tempC(4), 
 23503 ;;  color           2   57[BANK0 ] unsigned int 
 23504 ;;  bg              2   59[BANK0 ] unsigned int 
 23505 ;;  size            1   61[BANK0 ] unsigned char 
 23506 ;; Auto vars:     Size  Location     Type
 23507 ;;  x               1   64[BANK0 ] unsigned char 
 23508 ;;  i               2   67[BANK0 ] unsigned int 
 23509 ;;  textsize        2   65[BANK0 ] unsigned int 
 23510 ;;  cursor_x        1   70[BANK0 ] unsigned char 
 23511 ;;  cursor_y        1   69[BANK0 ] unsigned char 
 23512 ;; Return value:  Size  Location     Type
 23513 ;;		None               void
 23514 ;; Registers used:
 23515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23516 ;; Tracked objects:
 23517 ;;		On entry : 0/0
 23518 ;;		On exit  : 0/0
 23519 ;;		Unchanged: 0/0
 23520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23521 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23522 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23523 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23524 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23525 ;;Total ram usage:       17 bytes
 23526 ;; Hardware stack levels used:    1
 23527 ;; Hardware stack levels required when called:   12
 23528 ;; This function calls:
 23529 ;;		_drawChar
 23530 ;;		_strlen
 23531 ;; This function is called by:
 23532 ;;		_Initialize_Screen
 23533 ;;		_Update_Screen
 23534 ;;		_Initialize_Setup_Alarm_Time_Screen
 23535 ;;		_Update_Setup_Alarm_Time_Screen
 23536 ;;		_Initialize_Setup_Fan_Screen
 23537 ;;		_Update_Setup_Fan_Screen
 23538 ;;		_Initialize_Setup_Time_Screen
 23539 ;;		_Update_Setup_Time_Screen
 23540 ;; This function uses a non-reentrant model
 23541 ;;
 23542                           
 23543                           	psect	text90
 23544  006416                     __ptext90:
 23545                           	opt stack 0
 23546  006416                     _drawtext:
 23547                           	opt stack 17
 23548                           
 23549                           ; BSR set to: 0
 23550                           ;incstack = 0
 23551                           ;drawtext@x stored from wreg
 23552  006416  0100               	movlb	0	; () banked
 23553  006418  6FC0               	movwf	drawtext@x& (0+255),b
 23554                           
 23555                           ; BSR set to: 0
 23556                           ;ST7735_TFT.c: 477: unsigned char cursor_x, cursor_y;
 23557                           ;ST7735_TFT.c: 478: unsigned int textsize, i;
 23558                           ;ST7735_TFT.c: 479: cursor_x = x, cursor_y = y;
 23559  00641A  C0C0  F0C6         	movff	drawtext@x,drawtext@cursor_x
 23560                           
 23561                           ; BSR set to: 0
 23562  00641E  C0B6  F0C5         	movff	drawtext@y,drawtext@cursor_y
 23563                           
 23564                           ; BSR set to: 0
 23565                           ;ST7735_TFT.c: 480: textsize = strlen(_text);
 23566  006422  C0B7  F08E         	movff	drawtext@_text,strlen@s
 23567  006426  C0B8  F08F         	movff	drawtext@_text+1,strlen@s+1
 23568  00642A  EC01  F045         	call	_strlen	;wreg free
 23569  00642E  C08E  F0C1         	movff	?_strlen,drawtext@textsize
 23570  006432  C08F  F0C2         	movff	?_strlen+1,drawtext@textsize+1
 23571                           
 23572                           ;ST7735_TFT.c: 481: for(i = 0; i < textsize; i++){
 23573  006436  0E00               	movlw	0
 23574  006438  0100               	movlb	0	; () banked
 23575  00643A  6FC4               	movwf	(drawtext@i+1)& (0+255),b
 23576  00643C  0E00               	movlw	0
 23577  00643E  6FC3               	movwf	drawtext@i& (0+255),b
 23578  006440  D074               	goto	l13463
 23579  006442                     l13437:
 23580                           
 23581                           ; BSR set to: 0
 23582                           ;ST7735_TFT.c: 482: if(wrap && ((cursor_x + size * 5) > 128)){
 23583  006442  0101               	movlb	1	; () banked
 23584  006444  5136               	movf	_wrap& (0+255),w,b
 23585  006446  0101               	movlb	1	; () banked
 23586  006448  B4D8               	btfsc	status,2,c
 23587  00644A  D03E               	goto	l13453
 23588                           
 23589                           ; BSR set to: 1
 23590  00644C  0100               	movlb	0	; () banked
 23591  00644E  51BD               	movf	drawtext@size& (0+255),w,b
 23592  006450  0D05               	mullw	5
 23593  006452  0100               	movlb	0	; () banked
 23594  006454  51C6               	movf	drawtext@cursor_x& (0+255),w,b
 23595  006456  0100               	movlb	0	; () banked
 23596  006458  6FBE               	movwf	??_drawtext& (0+255),b
 23597  00645A  6BBF               	clrf	(??_drawtext+1)& (0+255),b
 23598  00645C  50F3               	movf	prodl,w,c
 23599  00645E  0100               	movlb	0	; () banked
 23600  006460  27BE               	addwf	??_drawtext& (0+255),f,b
 23601  006462  50F4               	movf	prodh,w,c
 23602  006464  0100               	movlb	0	; () banked
 23603  006466  23BF               	addwfc	(??_drawtext+1)& (0+255),f,b
 23604  006468  0100               	movlb	0	; () banked
 23605  00646A  BFBF               	btfsc	(??_drawtext+1)& (0+255),7,b
 23606  00646C  D02D               	goto	l13453
 23607  00646E  0100               	movlb	0	; () banked
 23608  006470  51BF               	movf	(??_drawtext+1)& (0+255),w,b
 23609  006472  E105               	bnz	u15520
 23610  006474  0E81               	movlw	129
 23611  006476  0100               	movlb	0	; () banked
 23612  006478  5DBE               	subwf	??_drawtext& (0+255),w,b
 23613  00647A  A0D8               	btfss	status,0,c
 23614  00647C  D025               	goto	l13453
 23615  00647E                     u15520:
 23616                           
 23617                           ; BSR set to: 0
 23618                           ;ST7735_TFT.c: 483: cursor_x = 0;
 23619  00647E  0E00               	movlw	0
 23620  006480  0100               	movlb	0	; () banked
 23621  006482  6FC6               	movwf	drawtext@cursor_x& (0+255),b
 23622                           
 23623                           ; BSR set to: 0
 23624                           ;ST7735_TFT.c: 484: cursor_y = cursor_y + size * 7 + 3 ;
 23625  006484  0100               	movlb	0	; () banked
 23626  006486  51BD               	movf	drawtext@size& (0+255),w,b
 23627  006488  0D07               	mullw	7
 23628  00648A  50F3               	movf	prodl,w,c
 23629  00648C  0100               	movlb	0	; () banked
 23630  00648E  25C5               	addwf	drawtext@cursor_y& (0+255),w,b
 23631  006490  0F03               	addlw	3
 23632  006492  0100               	movlb	0	; () banked
 23633  006494  6FC5               	movwf	drawtext@cursor_y& (0+255),b
 23634                           
 23635                           ; BSR set to: 0
 23636                           ;ST7735_TFT.c: 485: if(cursor_y > 160) cursor_y = 160;
 23637  006496  0EA0               	movlw	160
 23638  006498  0100               	movlb	0	; () banked
 23639  00649A  65C5               	cpfsgt	drawtext@cursor_y& (0+255),b
 23640  00649C  D004               	goto	l13449
 23641                           
 23642                           ; BSR set to: 0
 23643  00649E  0EA0               	movlw	160
 23644  0064A0  0100               	movlb	0	; () banked
 23645  0064A2  6FC5               	movwf	drawtext@cursor_y& (0+255),b
 23646  0064A4  D000               	goto	l13449
 23647  0064A6                     l13449:
 23648                           
 23649                           ; BSR set to: 0
 23650                           ;ST7735_TFT.c: 486: if(_text[i] == 0x20) goto _skip; }
 23651  0064A6  0100               	movlb	0	; () banked
 23652  0064A8  51C3               	movf	drawtext@i& (0+255),w,b
 23653  0064AA  0100               	movlb	0	; () banked
 23654  0064AC  25B7               	addwf	drawtext@_text& (0+255),w,b
 23655  0064AE  6ED9               	movwf	fsr2l,c
 23656  0064B0  0100               	movlb	0	; () banked
 23657  0064B2  51C4               	movf	(drawtext@i+1)& (0+255),w,b
 23658  0064B4  0100               	movlb	0	; () banked
 23659  0064B6  21B8               	addwfc	(drawtext@_text+1)& (0+255),w,b
 23660  0064B8  6EDA               	movwf	fsr2h,c
 23661  0064BA  0E20               	movlw	32
 23662  0064BC  18DE               	xorwf	postinc2,w,c
 23663  0064BE  B4D8               	btfsc	status,2,c
 23664  0064C0  D030               	goto	l13461
 23665  0064C2  D002               	goto	l13453
 23666                           
 23667                           ; BSR set to: 0
 23668  0064C4  D02E               	goto	l13461
 23669                           
 23670                           ; BSR set to: 0
 23671  0064C6  D000               	goto	l13453
 23672  0064C8                     l13453:
 23673                           
 23674                           ;ST7735_TFT.c: 487: drawChar(cursor_x, cursor_y, _text[i], color, bg, size);
 23675  0064C8  C0C5  F0AB         	movff	drawtext@cursor_y,drawChar@y
 23676  0064CC  0100               	movlb	0	; () banked
 23677  0064CE  51C3               	movf	drawtext@i& (0+255),w,b
 23678  0064D0  0100               	movlb	0	; () banked
 23679  0064D2  25B7               	addwf	drawtext@_text& (0+255),w,b
 23680  0064D4  6ED9               	movwf	fsr2l,c
 23681  0064D6  0100               	movlb	0	; () banked
 23682  0064D8  51C4               	movf	(drawtext@i+1)& (0+255),w,b
 23683  0064DA  0100               	movlb	0	; () banked
 23684  0064DC  21B8               	addwfc	(drawtext@_text+1)& (0+255),w,b
 23685  0064DE  6EDA               	movwf	fsr2h,c
 23686  0064E0  50DF               	movf	indf2,w,c
 23687  0064E2  0100               	movlb	0	; () banked
 23688  0064E4  6FAC               	movwf	drawChar@c& (0+255),b
 23689  0064E6  C0B9  F0AD         	movff	drawtext@color,drawChar@color
 23690  0064EA  C0BA  F0AE         	movff	drawtext@color+1,drawChar@color+1
 23691  0064EE  C0BB  F0AF         	movff	drawtext@bg,drawChar@bg
 23692  0064F2  C0BC  F0B0         	movff	drawtext@bg+1,drawChar@bg+1
 23693  0064F6  C0BD  F0B1         	movff	drawtext@size,drawChar@size
 23694  0064FA  0100               	movlb	0	; () banked
 23695  0064FC  51C6               	movf	drawtext@cursor_x& (0+255),w,b
 23696  0064FE  ECD5  F02A         	call	_drawChar
 23697                           
 23698                           ;ST7735_TFT.c: 488: cursor_x = cursor_x + size * 6;
 23699  006502  0100               	movlb	0	; () banked
 23700  006504  51BD               	movf	drawtext@size& (0+255),w,b
 23701  006506  0D06               	mullw	6
 23702  006508  50F3               	movf	prodl,w,c
 23703  00650A  0100               	movlb	0	; () banked
 23704  00650C  25C6               	addwf	drawtext@cursor_x& (0+255),w,b
 23705  00650E  0100               	movlb	0	; () banked
 23706  006510  6FC6               	movwf	drawtext@cursor_x& (0+255),b
 23707                           
 23708                           ; BSR set to: 0
 23709                           ;ST7735_TFT.c: 489: if(cursor_x > 128) cursor_x = 128;
 23710  006512  0E80               	movlw	128
 23711  006514  0100               	movlb	0	; () banked
 23712  006516  65C6               	cpfsgt	drawtext@cursor_x& (0+255),b
 23713  006518  D004               	goto	l13461
 23714                           
 23715                           ; BSR set to: 0
 23716  00651A  0E80               	movlw	128
 23717  00651C  0100               	movlb	0	; () banked
 23718  00651E  6FC6               	movwf	drawtext@cursor_x& (0+255),b
 23719                           
 23720                           ; BSR set to: 0
 23721  006520  D000               	goto	l13461
 23722  006522                     l13461:
 23723                           
 23724                           ; BSR set to: 0
 23725  006522  0100               	movlb	0	; () banked
 23726  006524  4BC3               	infsnz	drawtext@i& (0+255),f,b
 23727  006526  2BC4               	incf	(drawtext@i+1)& (0+255),f,b
 23728  006528  D000               	goto	l13463
 23729  00652A                     l13463:
 23730                           
 23731                           ; BSR set to: 0
 23732  00652A  0100               	movlb	0	; () banked
 23733  00652C  51C1               	movf	drawtext@textsize& (0+255),w,b
 23734  00652E  0100               	movlb	0	; () banked
 23735  006530  5DC3               	subwf	drawtext@i& (0+255),w,b
 23736  006532  0100               	movlb	0	; () banked
 23737  006534  51C2               	movf	(drawtext@textsize+1)& (0+255),w,b
 23738  006536  0100               	movlb	0	; () banked
 23739  006538  59C4               	subwfb	(drawtext@i+1)& (0+255),w,b
 23740  00653A  A0D8               	btfss	status,0,c
 23741  00653C  D782               	goto	l13437
 23742                           
 23743                           ; BSR set to: 0
 23744                           
 23745                           ; BSR set to: 0
 23746  00653E  0012               	return		;funcret
 23747  006540                     __end_of_drawtext:
 23748                           	opt stack 0
 23749                           tblptru	equ	0xFF8
 23750                           tblptrh	equ	0xFF7
 23751                           tblptrl	equ	0xFF6
 23752                           tablat	equ	0xFF5
 23753                           prodh	equ	0xFF4
 23754                           prodl	equ	0xFF3
 23755                           intcon	equ	0xFF2
 23756                           intcon2	equ	0xFF1
 23757                           postinc0	equ	0xFEE
 23758                           wreg	equ	0xFE8
 23759                           postdec1	equ	0xFE5
 23760                           fsr1l	equ	0xFE1
 23761                           indf2	equ	0xFDF
 23762                           postinc2	equ	0xFDE
 23763                           postdec2	equ	0xFDD
 23764                           fsr2h	equ	0xFDA
 23765                           fsr2l	equ	0xFD9
 23766                           status	equ	0xFD8
 23767                           
 23768 ;; *************** function _strlen *****************
 23769 ;; Defined at:
 23770 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strlen.c"
 23771 ;; Parameters:    Size  Location     Type
 23772 ;;  s               2   14[BANK0 ] PTR const unsigned char 
 23773 ;;		 -> NULL(0), setup_date(9), setup_time(9), setup_fan_set_text(5), 
 23774 ;;		 -> setup_alarm_time(9), RPM_Txt(5), Volt_Txt(6), DC_Txt(4), 
 23775 ;;		 -> RTC_ALARM_Txt(2), Fan_SW_Txt(4), Fan_Set_Temp_Txt(5), Alarm_SW_Txt(4), 
 23776 ;;		 -> alarm_time(9), date(9), time(9), tempF(4), 
 23777 ;;		 -> tempC(4), 
 23778 ;; Auto vars:     Size  Location     Type
 23779 ;;  cp              2   18[BANK0 ] PTR const unsigned char 
 23780 ;;		 -> NULL(0), setup_date(9), setup_time(9), setup_fan_set_text(5), 
 23781 ;;		 -> setup_alarm_time(9), RPM_Txt(5), Volt_Txt(6), DC_Txt(4), 
 23782 ;;		 -> RTC_ALARM_Txt(2), Fan_SW_Txt(4), Fan_Set_Temp_Txt(5), Alarm_SW_Txt(4), 
 23783 ;;		 -> alarm_time(9), date(9), time(9), tempF(4), 
 23784 ;;		 -> tempC(4), 
 23785 ;; Return value:  Size  Location     Type
 23786 ;;                  2   14[BANK0 ] unsigned int 
 23787 ;; Registers used:
 23788 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23789 ;; Tracked objects:
 23790 ;;		On entry : 0/0
 23791 ;;		On exit  : 0/0
 23792 ;;		Unchanged: 0/0
 23793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23794 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23795 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23796 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23797 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23798 ;;Total ram usage:        6 bytes
 23799 ;; Hardware stack levels used:    1
 23800 ;; Hardware stack levels required when called:    6
 23801 ;; This function calls:
 23802 ;;		Nothing
 23803 ;; This function is called by:
 23804 ;;		_drawtext
 23805 ;; This function uses a non-reentrant model
 23806 ;;
 23807                           
 23808                           	psect	text91
 23809  008A02                     __ptext91:
 23810                           	opt stack 0
 23811  008A02                     _strlen:
 23812                           	opt stack 22
 23813                           
 23814                           ; BSR set to: 0
 23815                           ;incstack = 0
 23816  008A02  C08E  F092         	movff	strlen@s,strlen@cp
 23817  008A06  C08F  F093         	movff	strlen@s+1,strlen@cp+1
 23818  008A0A  D004               	goto	l7763
 23819  008A0C                     l7761:
 23820  008A0C  0100               	movlb	0	; () banked
 23821  008A0E  4B92               	infsnz	strlen@cp& (0+255),f,b
 23822  008A10  2B93               	incf	(strlen@cp+1)& (0+255),f,b
 23823  008A12  D000               	goto	l7763
 23824  008A14                     l7763:
 23825  008A14  C092  FFD9         	movff	strlen@cp,fsr2l
 23826  008A18  C093  FFDA         	movff	strlen@cp+1,fsr2h
 23827  008A1C  50DF               	movf	indf2,w,c
 23828  008A1E  A4D8               	btfss	status,2,c
 23829  008A20  D7F5               	goto	l7761
 23830  008A22  C08E  F090         	movff	strlen@s,??_strlen
 23831  008A26  C08F  F091         	movff	strlen@s+1,??_strlen+1
 23832  008A2A  0100               	movlb	0	; () banked
 23833  008A2C  1F90               	comf	??_strlen& (0+255),f,b
 23834  008A2E  1F91               	comf	(??_strlen+1)& (0+255),f,b
 23835  008A30  4B90               	infsnz	??_strlen& (0+255),f,b
 23836  008A32  2B91               	incf	(??_strlen+1)& (0+255),f,b
 23837  008A34  0100               	movlb	0	; () banked
 23838  008A36  5192               	movf	strlen@cp& (0+255),w,b
 23839  008A38  0100               	movlb	0	; () banked
 23840  008A3A  2590               	addwf	??_strlen& (0+255),w,b
 23841  008A3C  0100               	movlb	0	; () banked
 23842  008A3E  6F8E               	movwf	?_strlen& (0+255),b
 23843  008A40  0100               	movlb	0	; () banked
 23844  008A42  5193               	movf	(strlen@cp+1)& (0+255),w,b
 23845  008A44  0100               	movlb	0	; () banked
 23846  008A46  2191               	addwfc	(??_strlen+1)& (0+255),w,b
 23847  008A48  0100               	movlb	0	; () banked
 23848  008A4A  6F8F               	movwf	(?_strlen+1)& (0+255),b
 23849  008A4C  D000               	goto	l2297
 23850  008A4E                     l2297:
 23851                           
 23852                           ; BSR set to: 0
 23853  008A4E  0012               	return		;funcret
 23854  008A50                     __end_of_strlen:
 23855                           	opt stack 0
 23856                           tblptru	equ	0xFF8
 23857                           tblptrh	equ	0xFF7
 23858                           tblptrl	equ	0xFF6
 23859                           tablat	equ	0xFF5
 23860                           prodh	equ	0xFF4
 23861                           prodl	equ	0xFF3
 23862                           intcon	equ	0xFF2
 23863                           intcon2	equ	0xFF1
 23864                           postinc0	equ	0xFEE
 23865                           wreg	equ	0xFE8
 23866                           postdec1	equ	0xFE5
 23867                           fsr1l	equ	0xFE1
 23868                           indf2	equ	0xFDF
 23869                           postinc2	equ	0xFDE
 23870                           postdec2	equ	0xFDD
 23871                           fsr2h	equ	0xFDA
 23872                           fsr2l	equ	0xFD9
 23873                           status	equ	0xFD8
 23874                           
 23875 ;; *************** function _drawChar *****************
 23876 ;; Defined at:
 23877 ;;		line 448 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/ST7735_TFT.c"
 23878 ;; Parameters:    Size  Location     Type
 23879 ;;  x               1    wreg     unsigned char 
 23880 ;;  y               1   43[BANK0 ] unsigned char 
 23881 ;;  c               1   44[BANK0 ] unsigned char 
 23882 ;;  color           2   45[BANK0 ] unsigned int 
 23883 ;;  bg              2   47[BANK0 ] unsigned int 
 23884 ;;  size            1   49[BANK0 ] unsigned char 
 23885 ;; Auto vars:     Size  Location     Type
 23886 ;;  x               1   51[BANK0 ] unsigned char 
 23887 ;;  line            1   50[BANK0 ] unsigned char 
 23888 ;;  i               1   53[BANK0 ] unsigned char 
 23889 ;;  j               1   52[BANK0 ] unsigned char 
 23890 ;; Return value:  Size  Location     Type
 23891 ;;		None               void
 23892 ;; Registers used:
 23893 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23894 ;; Tracked objects:
 23895 ;;		On entry : 0/0
 23896 ;;		On exit  : 0/0
 23897 ;;		Unchanged: 0/0
 23898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23899 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23900 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23902 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23903 ;;Total ram usage:       11 bytes
 23904 ;; Hardware stack levels used:    1
 23905 ;; Hardware stack levels required when called:   11
 23906 ;; This function calls:
 23907 ;;		___wmul
 23908 ;;		_drawPixel
 23909 ;;		_fillRect
 23910 ;; This function is called by:
 23911 ;;		_drawtext
 23912 ;; This function uses a non-reentrant model
 23913 ;;
 23914                           
 23915                           	psect	text92
 23916  0055AA                     __ptext92:
 23917                           	opt stack 0
 23918  0055AA                     _drawChar:
 23919                           	opt stack 17
 23920                           
 23921                           ; BSR set to: 0
 23922                           ;incstack = 0
 23923                           ;drawChar@x stored from wreg
 23924  0055AA  0100               	movlb	0	; () banked
 23925  0055AC  6FB3               	movwf	drawChar@x& (0+255),b
 23926                           
 23927                           ; BSR set to: 0
 23928                           ;ST7735_TFT.c: 450: char i, j;
 23929                           ;ST7735_TFT.c: 451: if((x >= 128) || (y >= 160))
 23930  0055AE  0E80               	movlw	128
 23931  0055B0  0100               	movlb	0	; () banked
 23932  0055B2  61B3               	cpfslt	drawChar@x& (0+255),b
 23933  0055B4  D0E5               	goto	l760
 23934                           
 23935                           ; BSR set to: 0
 23936  0055B6  0E9F               	movlw	159
 23937  0055B8  0100               	movlb	0	; () banked
 23938  0055BA  65AB               	cpfsgt	drawChar@y& (0+255),b
 23939  0055BC  D001               	goto	l12343
 23940                           
 23941                           ; BSR set to: 0
 23942                           ;ST7735_TFT.c: 452: return;
 23943  0055BE  D0E0               	goto	l760
 23944  0055C0                     l12343:
 23945                           
 23946                           ; BSR set to: 0
 23947                           ;ST7735_TFT.c: 453: if(size < 1) size = 1;
 23948  0055C0  0100               	movlb	0	; () banked
 23949  0055C2  51B1               	movf	drawChar@size& (0+255),w,b
 23950  0055C4  0100               	movlb	0	; () banked
 23951  0055C6  A4D8               	btfss	status,2,c
 23952  0055C8  D004               	goto	l12347
 23953                           
 23954                           ; BSR set to: 0
 23955  0055CA  0E01               	movlw	1
 23956  0055CC  0100               	movlb	0	; () banked
 23957  0055CE  6FB1               	movwf	drawChar@size& (0+255),b
 23958  0055D0  D000               	goto	l12347
 23959  0055D2                     l12347:
 23960                           
 23961                           ; BSR set to: 0
 23962                           ;ST7735_TFT.c: 454: if((c < ' ') || (c > '~'))
 23963  0055D2  0E1F               	movlw	31
 23964  0055D4  0100               	movlb	0	; () banked
 23965  0055D6  65AC               	cpfsgt	drawChar@c& (0+255),b
 23966  0055D8  D005               	goto	l12351
 23967                           
 23968                           ; BSR set to: 0
 23969  0055DA  0E7E               	movlw	126
 23970  0055DC  0100               	movlb	0	; () banked
 23971  0055DE  65AC               	cpfsgt	drawChar@c& (0+255),b
 23972  0055E0  D004               	goto	l762
 23973  0055E2  D000               	goto	l12351
 23974  0055E4                     l12351:
 23975                           
 23976                           ; BSR set to: 0
 23977                           ;ST7735_TFT.c: 455: c = '?';
 23978  0055E4  0E3F               	movlw	63
 23979  0055E6  0100               	movlb	0	; () banked
 23980  0055E8  6FAC               	movwf	drawChar@c& (0+255),b
 23981  0055EA                     l762:
 23982                           
 23983                           ; BSR set to: 0
 23984                           ;ST7735_TFT.c: 456: for(i=0; i<5; i++ ) {
 23985  0055EA  0E00               	movlw	0
 23986  0055EC  0100               	movlb	0	; () banked
 23987  0055EE  6FB5               	movwf	drawChar@i& (0+255),b
 23988  0055F0                     l12353:
 23989                           
 23990                           ; BSR set to: 0
 23991  0055F0  0E04               	movlw	4
 23992  0055F2  0100               	movlb	0	; () banked
 23993  0055F4  65B5               	cpfsgt	drawChar@i& (0+255),b
 23994  0055F6  D001               	goto	l12357
 23995                           
 23996                           ; BSR set to: 0
 23997  0055F8  D0C3               	goto	l760
 23998  0055FA                     l12357:
 23999                           
 24000                           ; BSR set to: 0
 24001                           ;ST7735_TFT.c: 457: unsigned char line;
 24002                           ;ST7735_TFT.c: 458: if(c < 'S')
 24003  0055FA  0E53               	movlw	83
 24004  0055FC  0100               	movlb	0	; () banked
 24005  0055FE  61AC               	cpfslt	drawChar@c& (0+255),b
 24006  005600  D01D               	goto	l12361
 24007                           
 24008                           ; BSR set to: 0
 24009                           ;ST7735_TFT.c: 459: line = font[(c - 32)*5 + i];
 24010  005602  0EE0               	movlw	224
 24011  005604  0100               	movlb	0	; () banked
 24012  005606  25AC               	addwf	drawChar@c& (0+255),w,b
 24013  005608  0100               	movlb	0	; () banked
 24014  00560A  6F8E               	movwf	___wmul@multiplier& (0+255),b
 24015  00560C  0100               	movlb	0	; () banked
 24016  00560E  6B8F               	clrf	(___wmul@multiplier+1)& (0+255),b
 24017  005610  0EFF               	movlw	255
 24018  005612  238F               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
 24019  005614  0E00               	movlw	0
 24020  005616  0100               	movlb	0	; () banked
 24021  005618  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24022  00561A  0E05               	movlw	5
 24023  00561C  6F90               	movwf	___wmul@multiplicand& (0+255),b
 24024  00561E  EC7F  F046         	call	___wmul	;wreg free
 24025  005622  0100               	movlb	0	; () banked
 24026  005624  51B5               	movf	drawChar@i& (0+255),w,b
 24027  005626  0100               	movlb	0	; () banked
 24028  005628  278E               	addwf	?___wmul& (0+255),f,b
 24029  00562A  0E00               	movlw	0
 24030  00562C  0100               	movlb	0	; () banked
 24031  00562E  238F               	addwfc	(?___wmul+1)& (0+255),f,b
 24032  005630  0E33               	movlw	low _font
 24033  005632  0100               	movlb	0	; () banked
 24034  005634  258E               	addwf	?___wmul& (0+255),w,b
 24035  005636  6EF6               	movwf	tblptrl,c
 24036  005638  0EFC               	movlw	high _font
 24037  00563A  D01C               	goto	L25
 24038  00563C                     l12361:
 24039                           
 24040                           ; BSR set to: 0
 24041                           ;ST7735_TFT.c: 460: else
 24042                           ;ST7735_TFT.c: 461: line = font2[(c - 'S')*5 + i];
 24043  00563C  0EAD               	movlw	173
 24044  00563E  0100               	movlb	0	; () banked
 24045  005640  25AC               	addwf	drawChar@c& (0+255),w,b
 24046  005642  0100               	movlb	0	; () banked
 24047  005644  6F8E               	movwf	___wmul@multiplier& (0+255),b
 24048  005646  0100               	movlb	0	; () banked
 24049  005648  6B8F               	clrf	(___wmul@multiplier+1)& (0+255),b
 24050  00564A  0EFF               	movlw	255
 24051  00564C  238F               	addwfc	(___wmul@multiplier+1)& (0+255),f,b
 24052  00564E  0E00               	movlw	0
 24053  005650  0100               	movlb	0	; () banked
 24054  005652  6F91               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24055  005654  0E05               	movlw	5
 24056  005656  6F90               	movwf	___wmul@multiplicand& (0+255),b
 24057  005658  EC7F  F046         	call	___wmul	;wreg free
 24058  00565C  0100               	movlb	0	; () banked
 24059  00565E  51B5               	movf	drawChar@i& (0+255),w,b
 24060  005660  0100               	movlb	0	; () banked
 24061  005662  278E               	addwf	?___wmul& (0+255),f,b
 24062  005664  0E00               	movlw	0
 24063  005666  0100               	movlb	0	; () banked
 24064  005668  238F               	addwfc	(?___wmul+1)& (0+255),f,b
 24065  00566A  0E32               	movlw	low _font2
 24066  00566C  0100               	movlb	0	; () banked
 24067  00566E  258E               	addwf	?___wmul& (0+255),w,b
 24068  005670  6EF6               	movwf	tblptrl,c
 24069  005672  0EFD               	movlw	high _font2
 24070  005674                     L25:
 24071  005674  0100               	movlb	0	; () banked
 24072  005676  218F               	addwfc	(?___wmul+1)& (0+255),w,b
 24073  005678  6EF7               	movwf	tblptrh,c
 24074  00567A                     	if	0	;There are less than 3 active tblptr bytes
 24075  00567A                     	endif
 24076  00567A  0008               	tblrd		*
 24077  00567C  CFF5 F0B2          	movff	tablat,drawChar@line
 24078  005680  D000               	goto	l12363
 24079  005682                     l12363:
 24080                           
 24081                           ; BSR set to: 0
 24082                           ;ST7735_TFT.c: 462: for(j=0; j<7; j++, line >>= 1) {
 24083  005682  0E00               	movlw	0
 24084  005684  0100               	movlb	0	; () banked
 24085  005686  6FB4               	movwf	drawChar@j& (0+255),b
 24086  005688                     l12365:
 24087                           
 24088                           ; BSR set to: 0
 24089  005688  0E06               	movlw	6
 24090  00568A  0100               	movlb	0	; () banked
 24091  00568C  65B4               	cpfsgt	drawChar@j& (0+255),b
 24092  00568E  D001               	goto	l769
 24093                           
 24094                           ; BSR set to: 0
 24095  005690  D074               	goto	l12389
 24096  005692                     l769:
 24097                           
 24098                           ; BSR set to: 0
 24099                           ;ST7735_TFT.c: 463: if(line & 0x01) {
 24100  005692  0100               	movlb	0	; () banked
 24101  005694  A1B2               	btfss	drawChar@line& (0+255),0,b
 24102  005696  D030               	goto	l12375
 24103                           
 24104                           ; BSR set to: 0
 24105                           ;ST7735_TFT.c: 464: if(size == 1) drawPixel(x+i, y+j, color);
 24106  005698  0100               	movlb	0	; () banked
 24107  00569A  05B1               	decf	drawChar@size& (0+255),w,b
 24108  00569C  A4D8               	btfss	status,2,c
 24109  00569E  D011               	goto	l12373
 24110                           
 24111                           ; BSR set to: 0
 24112  0056A0  0100               	movlb	0	; () banked
 24113  0056A2  51AB               	movf	drawChar@y& (0+255),w,b
 24114  0056A4  0100               	movlb	0	; () banked
 24115  0056A6  25B4               	addwf	drawChar@j& (0+255),w,b
 24116  0056A8  0100               	movlb	0	; () banked
 24117  0056AA  6F95               	movwf	drawPixel@y& (0+255),b
 24118  0056AC  C0AD  F096         	movff	drawChar@color,drawPixel@color
 24119  0056B0  C0AE  F097         	movff	drawChar@color+1,drawPixel@color+1
 24120  0056B4  0100               	movlb	0	; () banked
 24121  0056B6  51B3               	movf	drawChar@x& (0+255),w,b
 24122  0056B8  0100               	movlb	0	; () banked
 24123  0056BA  25B5               	addwf	drawChar@i& (0+255),w,b
 24124  0056BC  ECDF  F045         	call	_drawPixel
 24125  0056C0  D056               	goto	l12383
 24126  0056C2                     l12373:
 24127                           
 24128                           ;ST7735_TFT.c: 465: else fillRect(x+(i*size), y+(j*size), size, size, color);
 24129  0056C2  0100               	movlb	0	; () banked
 24130  0056C4  51B4               	movf	drawChar@j& (0+255),w,b
 24131  0056C6  0100               	movlb	0	; () banked
 24132  0056C8  03B1               	mulwf	drawChar@size& (0+255),b
 24133  0056CA  50F3               	movf	prodl,w,c
 24134  0056CC  0100               	movlb	0	; () banked
 24135  0056CE  25AB               	addwf	drawChar@y& (0+255),w,b
 24136  0056D0  0100               	movlb	0	; () banked
 24137  0056D2  6FA0               	movwf	fillRect@y& (0+255),b
 24138  0056D4  C0B1  F0A1         	movff	drawChar@size,fillRect@w
 24139  0056D8  C0B1  F0A2         	movff	drawChar@size,fillRect@h
 24140  0056DC  C0AD  F0A3         	movff	drawChar@color,fillRect@color
 24141  0056E0  C0AE  F0A4         	movff	drawChar@color+1,fillRect@color+1
 24142  0056E4  0100               	movlb	0	; () banked
 24143  0056E6  51B5               	movf	drawChar@i& (0+255),w,b
 24144  0056E8  0100               	movlb	0	; () banked
 24145  0056EA  03B1               	mulwf	drawChar@size& (0+255),b
 24146  0056EC  50F3               	movf	prodl,w,c
 24147  0056EE  0100               	movlb	0	; () banked
 24148  0056F0  25B3               	addwf	drawChar@x& (0+255),w,b
 24149  0056F2  ECFA  F042         	call	_fillRect
 24150                           
 24151                           ;ST7735_TFT.c: 466: }
 24152  0056F6  D03B               	goto	l12383
 24153  0056F8                     l12375:
 24154                           
 24155                           ;ST7735_TFT.c: 467: else if(bg != color) {
 24156  0056F8  0100               	movlb	0	; () banked
 24157  0056FA  51AD               	movf	drawChar@color& (0+255),w,b
 24158  0056FC  0100               	movlb	0	; () banked
 24159  0056FE  19AF               	xorwf	drawChar@bg& (0+255),w,b
 24160  005700  E106               	bnz	u13540
 24161  005702  0100               	movlb	0	; () banked
 24162  005704  51AE               	movf	(drawChar@color+1)& (0+255),w,b
 24163  005706  0100               	movlb	0	; () banked
 24164  005708  19B0               	xorwf	(drawChar@bg+1)& (0+255),w,b
 24165  00570A  B4D8               	btfsc	status,2,c
 24166  00570C  D030               	goto	l12383
 24167  00570E                     u13540:
 24168                           
 24169                           ; BSR set to: 0
 24170                           ;ST7735_TFT.c: 468: if(size == 1) drawPixel(x+i, y+j, bg);
 24171  00570E  0100               	movlb	0	; () banked
 24172  005710  05B1               	decf	drawChar@size& (0+255),w,b
 24173  005712  A4D8               	btfss	status,2,c
 24174  005714  D011               	goto	l12381
 24175                           
 24176                           ; BSR set to: 0
 24177  005716  0100               	movlb	0	; () banked
 24178  005718  51AB               	movf	drawChar@y& (0+255),w,b
 24179  00571A  0100               	movlb	0	; () banked
 24180  00571C  25B4               	addwf	drawChar@j& (0+255),w,b
 24181  00571E  0100               	movlb	0	; () banked
 24182  005720  6F95               	movwf	drawPixel@y& (0+255),b
 24183  005722  C0AF  F096         	movff	drawChar@bg,drawPixel@color
 24184  005726  C0B0  F097         	movff	drawChar@bg+1,drawPixel@color+1
 24185  00572A  0100               	movlb	0	; () banked
 24186  00572C  51B3               	movf	drawChar@x& (0+255),w,b
 24187  00572E  0100               	movlb	0	; () banked
 24188  005730  25B5               	addwf	drawChar@i& (0+255),w,b
 24189  005732  ECDF  F045         	call	_drawPixel
 24190  005736  D01B               	goto	l12383
 24191  005738                     l12381:
 24192                           
 24193                           ;ST7735_TFT.c: 469: else fillRect(x+i*size, y+j*size, size, size, bg);
 24194  005738  0100               	movlb	0	; () banked
 24195  00573A  51B4               	movf	drawChar@j& (0+255),w,b
 24196  00573C  0100               	movlb	0	; () banked
 24197  00573E  03B1               	mulwf	drawChar@size& (0+255),b
 24198  005740  50F3               	movf	prodl,w,c
 24199  005742  0100               	movlb	0	; () banked
 24200  005744  25AB               	addwf	drawChar@y& (0+255),w,b
 24201  005746  0100               	movlb	0	; () banked
 24202  005748  6FA0               	movwf	fillRect@y& (0+255),b
 24203  00574A  C0B1  F0A1         	movff	drawChar@size,fillRect@w
 24204  00574E  C0B1  F0A2         	movff	drawChar@size,fillRect@h
 24205  005752  C0AF  F0A3         	movff	drawChar@bg,fillRect@color
 24206  005756  C0B0  F0A4         	movff	drawChar@bg+1,fillRect@color+1
 24207  00575A  0100               	movlb	0	; () banked
 24208  00575C  51B5               	movf	drawChar@i& (0+255),w,b
 24209  00575E  0100               	movlb	0	; () banked
 24210  005760  03B1               	mulwf	drawChar@size& (0+255),b
 24211  005762  50F3               	movf	prodl,w,c
 24212  005764  0100               	movlb	0	; () banked
 24213  005766  25B3               	addwf	drawChar@x& (0+255),w,b
 24214  005768  ECFA  F042         	call	_fillRect
 24215  00576C  D000               	goto	l12383
 24216  00576E                     l12383:
 24217  00576E  0100               	movlb	0	; () banked
 24218  005770  2BB4               	incf	drawChar@j& (0+255),f,b
 24219                           
 24220                           ; BSR set to: 0
 24221  005772  0100               	movlb	0	; () banked
 24222  005774  90D8               	bcf	status,0,c
 24223  005776  33B2               	rrcf	drawChar@line& (0+255),f,b
 24224  005778  D787               	goto	l12365
 24225  00577A                     l12389:
 24226                           
 24227                           ; BSR set to: 0
 24228  00577A  0100               	movlb	0	; () banked
 24229  00577C  2BB5               	incf	drawChar@i& (0+255),f,b
 24230  00577E  D738               	goto	l12353
 24231  005780                     l760:
 24232                           
 24233                           ; BSR set to: 0
 24234  005780  0012               	return		;funcret
 24235  005782                     __end_of_drawChar:
 24236                           	opt stack 0
 24237                           tblptru	equ	0xFF8
 24238                           tblptrh	equ	0xFF7
 24239                           tblptrl	equ	0xFF6
 24240                           tablat	equ	0xFF5
 24241                           prodh	equ	0xFF4
 24242                           prodl	equ	0xFF3
 24243                           intcon	equ	0xFF2
 24244                           intcon2	equ	0xFF1
 24245                           postinc0	equ	0xFEE
 24246                           wreg	equ	0xFE8
 24247                           postdec1	equ	0xFE5
 24248                           fsr1l	equ	0xFE1
 24249                           indf2	equ	0xFDF
 24250                           postinc2	equ	0xFDE
 24251                           postdec2	equ	0xFDD
 24252                           fsr2h	equ	0xFDA
 24253                           fsr2l	equ	0xFD9
 24254                           status	equ	0xFD8
 24255                           
 24256 ;; *************** function _fillRect *****************
 24257 ;; Defined at:
 24258 ;;		line 438 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/ST7735_TFT.c"
 24259 ;; Parameters:    Size  Location     Type
 24260 ;;  x               1    wreg     unsigned char 
 24261 ;;  y               1   32[BANK0 ] unsigned char 
 24262 ;;  w               1   33[BANK0 ] unsigned char 
 24263 ;;  h               1   34[BANK0 ] unsigned char 
 24264 ;;  color           2   35[BANK0 ] unsigned int 
 24265 ;; Auto vars:     Size  Location     Type
 24266 ;;  x               1   40[BANK0 ] unsigned char 
 24267 ;;  i               2   41[BANK0 ] int 
 24268 ;; Return value:  Size  Location     Type
 24269 ;;		None               void
 24270 ;; Registers used:
 24271 ;;		wreg, status,2, status,0, cstack
 24272 ;; Tracked objects:
 24273 ;;		On entry : 0/0
 24274 ;;		On exit  : 0/0
 24275 ;;		Unchanged: 0/0
 24276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24277 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24278 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24279 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24280 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24281 ;;Total ram usage:       11 bytes
 24282 ;; Hardware stack levels used:    1
 24283 ;; Hardware stack levels required when called:   10
 24284 ;; This function calls:
 24285 ;;		_drawFastVLine
 24286 ;; This function is called by:
 24287 ;;		_drawChar
 24288 ;;		_Initialize_Setup_Alarm_Time_Screen
 24289 ;;		_Initialize_Setup_Time_Screen
 24290 ;;		_Update_Setup_Screen_Cursor_Forward
 24291 ;;		_Update_Setup_Screen_Cursor_Backward
 24292 ;; This function uses a non-reentrant model
 24293 ;;
 24294                           
 24295                           	psect	text93
 24296  0085F4                     __ptext93:
 24297                           	opt stack 0
 24298  0085F4                     _fillRect:
 24299                           	opt stack 17
 24300                           
 24301                           ; BSR set to: 0
 24302                           ;incstack = 0
 24303                           ;fillRect@x stored from wreg
 24304  0085F4  0100               	movlb	0	; () banked
 24305  0085F6  6FA8               	movwf	fillRect@x& (0+255),b
 24306                           
 24307                           ; BSR set to: 0
 24308                           ;ST7735_TFT.c: 440: signed int i;
 24309                           ;ST7735_TFT.c: 442: for (i = x; i < x + w; i++)
 24310  0085F8  C0A8  F0A9         	movff	fillRect@x,fillRect@i
 24311  0085FC  0100               	movlb	0	; () banked
 24312  0085FE  6BAA               	clrf	(fillRect@i+1)& (0+255),b
 24313  008600  D010               	goto	l7329
 24314  008602                     l7325:
 24315                           
 24316                           ; BSR set to: 0
 24317                           ;ST7735_TFT.c: 443: {
 24318                           ;ST7735_TFT.c: 444: drawFastVLine(i, y, h, color);
 24319  008602  C0A0  F095         	movff	fillRect@y,drawFastVLine@y
 24320  008606  C0A2  F096         	movff	fillRect@h,drawFastVLine@h
 24321  00860A  C0A3  F097         	movff	fillRect@color,drawFastVLine@color
 24322  00860E  C0A4  F098         	movff	fillRect@color+1,drawFastVLine@color+1
 24323  008612  0100               	movlb	0	; () banked
 24324  008614  51A9               	movf	fillRect@i& (0+255),w,b
 24325  008616  ECCB  F03C         	call	_drawFastVLine
 24326  00861A  0100               	movlb	0	; () banked
 24327  00861C  4BA9               	infsnz	fillRect@i& (0+255),f,b
 24328  00861E  2BAA               	incf	(fillRect@i+1)& (0+255),f,b
 24329  008620  D000               	goto	l7329
 24330  008622                     l7329:
 24331                           
 24332                           ; BSR set to: 0
 24333  008622  0100               	movlb	0	; () banked
 24334  008624  51A1               	movf	fillRect@w& (0+255),w,b
 24335  008626  C0A8  F0A5         	movff	fillRect@x,??_fillRect
 24336  00862A  0100               	movlb	0	; () banked
 24337  00862C  6BA6               	clrf	(??_fillRect+1)& (0+255),b
 24338  00862E  0100               	movlb	0	; () banked
 24339  008630  27A5               	addwf	??_fillRect& (0+255),f,b
 24340  008632  0E00               	movlw	0
 24341  008634  23A6               	addwfc	(??_fillRect+1)& (0+255),f,b
 24342  008636  0100               	movlb	0	; () banked
 24343  008638  51A5               	movf	??_fillRect& (0+255),w,b
 24344  00863A  0100               	movlb	0	; () banked
 24345  00863C  5DA9               	subwf	fillRect@i& (0+255),w,b
 24346  00863E  0100               	movlb	0	; () banked
 24347  008640  51AA               	movf	(fillRect@i+1)& (0+255),w,b
 24348  008642  0A80               	xorlw	128
 24349  008644  0100               	movlb	0	; () banked
 24350  008646  6FA7               	movwf	(??_fillRect+2)& (0+255),b
 24351  008648  0100               	movlb	0	; () banked
 24352  00864A  51A6               	movf	(??_fillRect+1)& (0+255),w,b
 24353  00864C  0A80               	xorlw	128
 24354  00864E  0100               	movlb	0	; () banked
 24355  008650  59A7               	subwfb	(??_fillRect+2)& (0+255),w,b
 24356  008652  A0D8               	btfss	status,0,c
 24357  008654  D7D6               	goto	l7325
 24358                           
 24359                           ; BSR set to: 0
 24360                           
 24361                           ; BSR set to: 0
 24362  008656  0012               	return		;funcret
 24363  008658                     __end_of_fillRect:
 24364                           	opt stack 0
 24365                           tblptru	equ	0xFF8
 24366                           tblptrh	equ	0xFF7
 24367                           tblptrl	equ	0xFF6
 24368                           tablat	equ	0xFF5
 24369                           prodh	equ	0xFF4
 24370                           prodl	equ	0xFF3
 24371                           intcon	equ	0xFF2
 24372                           intcon2	equ	0xFF1
 24373                           postinc0	equ	0xFEE
 24374                           wreg	equ	0xFE8
 24375                           postdec1	equ	0xFE5
 24376                           fsr1l	equ	0xFE1
 24377                           indf2	equ	0xFDF
 24378                           postinc2	equ	0xFDE
 24379                           postdec2	equ	0xFDD
 24380                           fsr2h	equ	0xFDA
 24381                           fsr2l	equ	0xFD9
 24382                           status	equ	0xFD8
 24383                           
 24384 ;; *************** function _drawFastVLine *****************
 24385 ;; Defined at:
 24386 ;;		line 417 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/ST7735_TFT.c"
 24387 ;; Parameters:    Size  Location     Type
 24388 ;;  x               1    wreg     unsigned char 
 24389 ;;  y               1   21[BANK0 ] unsigned char 
 24390 ;;  h               1   22[BANK0 ] unsigned char 
 24391 ;;  color           2   23[BANK0 ] unsigned int 
 24392 ;; Auto vars:     Size  Location     Type
 24393 ;;  x               1   31[BANK0 ] unsigned char 
 24394 ;;  lo              1   30[BANK0 ] unsigned char 
 24395 ;;  hi              1   29[BANK0 ] unsigned char 
 24396 ;; Return value:  Size  Location     Type
 24397 ;;		None               void
 24398 ;; Registers used:
 24399 ;;		wreg, status,2, status,0, cstack
 24400 ;; Tracked objects:
 24401 ;;		On entry : 0/0
 24402 ;;		On exit  : 0/0
 24403 ;;		Unchanged: 0/0
 24404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24405 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24406 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24407 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24408 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24409 ;;Total ram usage:       11 bytes
 24410 ;; Hardware stack levels used:    1
 24411 ;; Hardware stack levels required when called:    9
 24412 ;; This function calls:
 24413 ;;		_setAddrWindow
 24414 ;;		_spiwrite
 24415 ;; This function is called by:
 24416 ;;		_fillRect
 24417 ;;		_fillCircleHelper
 24418 ;;		_fillCircle
 24419 ;;		_drawRect
 24420 ;; This function uses a non-reentrant model
 24421 ;;
 24422                           
 24423                           	psect	text94
 24424  007996                     __ptext94:
 24425                           	opt stack 0
 24426  007996                     _drawFastVLine:
 24427                           	opt stack 17
 24428                           
 24429                           ; BSR set to: 0
 24430                           ;incstack = 0
 24431                           ;drawFastVLine@x stored from wreg
 24432  007996  0100               	movlb	0	; () banked
 24433  007998  6F9F               	movwf	drawFastVLine@x& (0+255),b
 24434                           
 24435                           ; BSR set to: 0
 24436                           ;ST7735_TFT.c: 419: unsigned char hi, lo;
 24437                           ;ST7735_TFT.c: 420: if((x >= 128) || (y >= 160))
 24438  00799A  0E80               	movlw	128
 24439  00799C  0100               	movlb	0	; () banked
 24440  00799E  619F               	cpfslt	drawFastVLine@x& (0+255),b
 24441  0079A0  D05A               	goto	l744
 24442                           
 24443                           ; BSR set to: 0
 24444  0079A2  0E9F               	movlw	159
 24445  0079A4  0100               	movlb	0	; () banked
 24446  0079A6  6595               	cpfsgt	drawFastVLine@y& (0+255),b
 24447  0079A8  D001               	goto	l7227
 24448                           
 24449                           ; BSR set to: 0
 24450                           ;ST7735_TFT.c: 421: return;
 24451  0079AA  D055               	goto	l744
 24452  0079AC                     l7227:
 24453                           
 24454                           ; BSR set to: 0
 24455                           ;ST7735_TFT.c: 422: if((y + h - 1) >= 160)
 24456  0079AC  0EFF               	movlw	255
 24457  0079AE  0100               	movlb	0	; () banked
 24458  0079B0  6F99               	movwf	??_drawFastVLine& (0+255),b
 24459  0079B2  0EFF               	movlw	255
 24460  0079B4  0100               	movlb	0	; () banked
 24461  0079B6  6F9A               	movwf	(??_drawFastVLine+1)& (0+255),b
 24462  0079B8  0100               	movlb	0	; () banked
 24463  0079BA  5196               	movf	drawFastVLine@h& (0+255),w,b
 24464  0079BC  C095  F09B         	movff	drawFastVLine@y,??_drawFastVLine+2
 24465  0079C0  0100               	movlb	0	; () banked
 24466  0079C2  6B9C               	clrf	(??_drawFastVLine+3)& (0+255),b
 24467  0079C4  0100               	movlb	0	; () banked
 24468  0079C6  279B               	addwf	(??_drawFastVLine+2)& (0+255),f,b
 24469  0079C8  0E00               	movlw	0
 24470  0079CA  239C               	addwfc	(??_drawFastVLine+3)& (0+255),f,b
 24471  0079CC  0100               	movlb	0	; () banked
 24472  0079CE  5199               	movf	??_drawFastVLine& (0+255),w,b
 24473  0079D0  0100               	movlb	0	; () banked
 24474  0079D2  279B               	addwf	(??_drawFastVLine+2)& (0+255),f,b
 24475  0079D4  0100               	movlb	0	; () banked
 24476  0079D6  519A               	movf	(??_drawFastVLine+1)& (0+255),w,b
 24477  0079D8  0100               	movlb	0	; () banked
 24478  0079DA  239C               	addwfc	(??_drawFastVLine+3)& (0+255),f,b
 24479  0079DC  0100               	movlb	0	; () banked
 24480  0079DE  BF9C               	btfsc	(??_drawFastVLine+3)& (0+255),7,b
 24481  0079E0  D00F               	goto	l7231
 24482  0079E2  0100               	movlb	0	; () banked
 24483  0079E4  519C               	movf	(??_drawFastVLine+3)& (0+255),w,b
 24484  0079E6  E105               	bnz	u6510
 24485  0079E8  0EA0               	movlw	160
 24486  0079EA  0100               	movlb	0	; () banked
 24487  0079EC  5D9B               	subwf	(??_drawFastVLine+2)& (0+255),w,b
 24488  0079EE  A0D8               	btfss	status,0,c
 24489  0079F0  D007               	goto	l7231
 24490  0079F2                     u6510:
 24491                           
 24492                           ; BSR set to: 0
 24493                           ;ST7735_TFT.c: 423: h = 160 - y;
 24494  0079F2  0100               	movlb	0	; () banked
 24495  0079F4  5195               	movf	drawFastVLine@y& (0+255),w,b
 24496  0079F6  0800               	sublw	0
 24497  0079F8  0FA0               	addlw	160
 24498  0079FA  0100               	movlb	0	; () banked
 24499  0079FC  6F96               	movwf	drawFastVLine@h& (0+255),b
 24500  0079FE  D000               	goto	l7231
 24501  007A00                     l7231:
 24502                           
 24503                           ; BSR set to: 0
 24504                           ;ST7735_TFT.c: 424: hi = color >> 8; lo = color;
 24505  007A00  0100               	movlb	0	; () banked
 24506  007A02  5198               	movf	(drawFastVLine@color+1)& (0+255),w,b
 24507  007A04  0100               	movlb	0	; () banked
 24508  007A06  6F9D               	movwf	drawFastVLine@hi& (0+255),b
 24509                           
 24510                           ; BSR set to: 0
 24511  007A08  C097  F09E         	movff	drawFastVLine@color,drawFastVLine@lo
 24512                           
 24513                           ; BSR set to: 0
 24514                           ;ST7735_TFT.c: 425: setAddrWindow(x, y, x, y + h - 1);
 24515  007A0C  C095  F091         	movff	drawFastVLine@y,setAddrWindow@y0
 24516  007A10  C09F  F092         	movff	drawFastVLine@x,setAddrWindow@x1
 24517  007A14  0100               	movlb	0	; () banked
 24518  007A16  5195               	movf	drawFastVLine@y& (0+255),w,b
 24519  007A18  0100               	movlb	0	; () banked
 24520  007A1A  2596               	addwf	drawFastVLine@h& (0+255),w,b
 24521  007A1C  0100               	movlb	0	; () banked
 24522  007A1E  6F99               	movwf	??_drawFastVLine& (0+255),b
 24523  007A20  0100               	movlb	0	; () banked
 24524  007A22  0599               	decf	??_drawFastVLine& (0+255),w,b
 24525  007A24  0100               	movlb	0	; () banked
 24526  007A26  6F93               	movwf	setAddrWindow@y1& (0+255),b
 24527  007A28  0100               	movlb	0	; () banked
 24528  007A2A  519F               	movf	drawFastVLine@x& (0+255),w,b
 24529  007A2C  ECF0  F043         	call	_setAddrWindow
 24530                           
 24531                           ;ST7735_TFT.c: 426: PORTDbits.RD3 = 1;
 24532  007A30  8683               	bsf	3971,3,c	;volatile
 24533                           
 24534                           ;ST7735_TFT.c: 427: PORTDbits.RD4 = 0;
 24535  007A32  9883               	bcf	3971,4,c	;volatile
 24536                           
 24537                           ;ST7735_TFT.c: 429: while (h--) {
 24538  007A34  D009               	goto	l7243
 24539  007A36                     l7241:
 24540                           
 24541                           ;ST7735_TFT.c: 430: spiwrite(hi);
 24542  007A36  0100               	movlb	0	; () banked
 24543  007A38  519D               	movf	drawFastVLine@hi& (0+255),w,b
 24544  007A3A  EC7D  F048         	call	_spiwrite
 24545                           
 24546                           ;ST7735_TFT.c: 431: spiwrite(lo);
 24547  007A3E  0100               	movlb	0	; () banked
 24548  007A40  519E               	movf	drawFastVLine@lo& (0+255),w,b
 24549  007A42  EC7D  F048         	call	_spiwrite
 24550  007A46  D000               	goto	l7243
 24551  007A48                     l7243:
 24552  007A48  0100               	movlb	0	; () banked
 24553  007A4A  0796               	decf	drawFastVLine@h& (0+255),f,b
 24554  007A4C  0100               	movlb	0	; () banked
 24555  007A4E  2996               	incf	drawFastVLine@h& (0+255),w,b
 24556  007A50  A4D8               	btfss	status,2,c
 24557  007A52  D7F1               	goto	l7241
 24558                           
 24559                           ; BSR set to: 0
 24560                           ;ST7735_TFT.c: 432: }
 24561                           ;ST7735_TFT.c: 433: PORTDbits.RD4 = 1;
 24562  007A54  8883               	bsf	3971,4,c	;volatile
 24563  007A56                     l744:
 24564                           
 24565                           ; BSR set to: 0
 24566  007A56  0012               	return		;funcret
 24567  007A58                     __end_of_drawFastVLine:
 24568                           	opt stack 0
 24569                           tblptru	equ	0xFF8
 24570                           tblptrh	equ	0xFF7
 24571                           tblptrl	equ	0xFF6
 24572                           tablat	equ	0xFF5
 24573                           prodh	equ	0xFF4
 24574                           prodl	equ	0xFF3
 24575                           intcon	equ	0xFF2
 24576                           intcon2	equ	0xFF1
 24577                           postinc0	equ	0xFEE
 24578                           wreg	equ	0xFE8
 24579                           postdec1	equ	0xFE5
 24580                           fsr1l	equ	0xFE1
 24581                           indf2	equ	0xFDF
 24582                           postinc2	equ	0xFDE
 24583                           postdec2	equ	0xFDD
 24584                           fsr2h	equ	0xFDA
 24585                           fsr2l	equ	0xFD9
 24586                           status	equ	0xFD8
 24587                           
 24588 ;; *************** function _drawPixel *****************
 24589 ;; Defined at:
 24590 ;;		line 408 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/ST7735_TFT.c"
 24591 ;; Parameters:    Size  Location     Type
 24592 ;;  x               1    wreg     unsigned char 
 24593 ;;  y               1   21[BANK0 ] unsigned char 
 24594 ;;  color           2   22[BANK0 ] unsigned int 
 24595 ;; Auto vars:     Size  Location     Type
 24596 ;;  x               1   24[BANK0 ] unsigned char 
 24597 ;; Return value:  Size  Location     Type
 24598 ;;		None               void
 24599 ;; Registers used:
 24600 ;;		wreg, status,2, status,0, cstack
 24601 ;; Tracked objects:
 24602 ;;		On entry : 0/0
 24603 ;;		On exit  : 0/0
 24604 ;;		Unchanged: 0/0
 24605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24606 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24607 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24609 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24610 ;;Total ram usage:        4 bytes
 24611 ;; Hardware stack levels used:    1
 24612 ;; Hardware stack levels required when called:    9
 24613 ;; This function calls:
 24614 ;;		_setAddrWindow
 24615 ;;		_write_data
 24616 ;; This function is called by:
 24617 ;;		_drawChar
 24618 ;;		_drawCircle
 24619 ;;		_drawCircleHelper
 24620 ;; This function uses a non-reentrant model
 24621 ;;
 24622                           
 24623                           	psect	text95
 24624  008BBE                     __ptext95:
 24625                           	opt stack 0
 24626  008BBE                     _drawPixel:
 24627                           	opt stack 18
 24628                           
 24629                           ; BSR set to: 0
 24630                           ;incstack = 0
 24631                           ;drawPixel@x stored from wreg
 24632  008BBE  0100               	movlb	0	; () banked
 24633  008BC0  6F98               	movwf	drawPixel@x& (0+255),b
 24634                           
 24635                           ; BSR set to: 0
 24636                           ;ST7735_TFT.c: 410: if((x >= 128) || (y >= 160))
 24637  008BC2  0E80               	movlw	128
 24638  008BC4  0100               	movlb	0	; () banked
 24639  008BC6  6198               	cpfslt	drawPixel@x& (0+255),b
 24640  008BC8  D01B               	goto	l738
 24641                           
 24642                           ; BSR set to: 0
 24643  008BCA  0E9F               	movlw	159
 24644  008BCC  0100               	movlb	0	; () banked
 24645  008BCE  6595               	cpfsgt	drawPixel@y& (0+255),b
 24646  008BD0  D001               	goto	l7317
 24647                           
 24648                           ; BSR set to: 0
 24649                           ;ST7735_TFT.c: 411: return;
 24650  008BD2  D016               	goto	l738
 24651  008BD4                     l7317:
 24652                           
 24653                           ; BSR set to: 0
 24654                           ;ST7735_TFT.c: 412: setAddrWindow(x,y,x+1,y+1);
 24655  008BD4  C095  F091         	movff	drawPixel@y,setAddrWindow@y0
 24656  008BD8  0100               	movlb	0	; () banked
 24657  008BDA  2998               	incf	drawPixel@x& (0+255),w,b
 24658  008BDC  0100               	movlb	0	; () banked
 24659  008BDE  6F92               	movwf	setAddrWindow@x1& (0+255),b
 24660  008BE0  0100               	movlb	0	; () banked
 24661  008BE2  2995               	incf	drawPixel@y& (0+255),w,b
 24662  008BE4  0100               	movlb	0	; () banked
 24663  008BE6  6F93               	movwf	setAddrWindow@y1& (0+255),b
 24664  008BE8  0100               	movlb	0	; () banked
 24665  008BEA  5198               	movf	drawPixel@x& (0+255),w,b
 24666  008BEC  ECF0  F043         	call	_setAddrWindow
 24667                           
 24668                           ;ST7735_TFT.c: 413: write_data(color >> 8);
 24669  008BF0  0100               	movlb	0	; () banked
 24670  008BF2  5197               	movf	(drawPixel@color+1)& (0+255),w,b
 24671  008BF4  ECC7  F048         	call	_write_data
 24672                           
 24673                           ;ST7735_TFT.c: 414: write_data(color & 0xFF);
 24674  008BF8  0100               	movlb	0	; () banked
 24675  008BFA  5196               	movf	drawPixel@color& (0+255),w,b
 24676  008BFC  ECC7  F048         	call	_write_data
 24677  008C00                     l738:
 24678  008C00  0012               	return		;funcret
 24679  008C02                     __end_of_drawPixel:
 24680                           	opt stack 0
 24681                           tblptru	equ	0xFF8
 24682                           tblptrh	equ	0xFF7
 24683                           tblptrl	equ	0xFF6
 24684                           tablat	equ	0xFF5
 24685                           prodh	equ	0xFF4
 24686                           prodl	equ	0xFF3
 24687                           intcon	equ	0xFF2
 24688                           intcon2	equ	0xFF1
 24689                           postinc0	equ	0xFEE
 24690                           wreg	equ	0xFE8
 24691                           postdec1	equ	0xFE5
 24692                           fsr1l	equ	0xFE1
 24693                           indf2	equ	0xFDF
 24694                           postinc2	equ	0xFDE
 24695                           postdec2	equ	0xFDD
 24696                           fsr2h	equ	0xFDA
 24697                           fsr2l	equ	0xFD9
 24698                           status	equ	0xFD8
 24699                           
 24700 ;; *************** function _setAddrWindow *****************
 24701 ;; Defined at:
 24702 ;;		line 393 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/ST7735_TFT.c"
 24703 ;; Parameters:    Size  Location     Type
 24704 ;;  x0              1    wreg     unsigned char 
 24705 ;;  y0              1   17[BANK0 ] unsigned char 
 24706 ;;  x1              1   18[BANK0 ] unsigned char 
 24707 ;;  y1              1   19[BANK0 ] unsigned char 
 24708 ;; Auto vars:     Size  Location     Type
 24709 ;;  x0              1   20[BANK0 ] unsigned char 
 24710 ;; Return value:  Size  Location     Type
 24711 ;;		None               void
 24712 ;; Registers used:
 24713 ;;		wreg, status,2, status,0, cstack
 24714 ;; Tracked objects:
 24715 ;;		On entry : 0/0
 24716 ;;		On exit  : 0/0
 24717 ;;		Unchanged: 0/0
 24718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24719 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24720 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24722 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24723 ;;Total ram usage:        4 bytes
 24724 ;; Hardware stack levels used:    1
 24725 ;; Hardware stack levels required when called:    8
 24726 ;; This function calls:
 24727 ;;		_write_command
 24728 ;;		_write_data
 24729 ;; This function is called by:
 24730 ;;		_drawPixel
 24731 ;;		_drawFastVLine
 24732 ;;		_fillRectangle
 24733 ;;		_drawFastHLine
 24734 ;; This function uses a non-reentrant model
 24735 ;;
 24736                           
 24737                           	psect	text96
 24738  0087E0                     __ptext96:
 24739                           	opt stack 0
 24740  0087E0                     _setAddrWindow:
 24741                           	opt stack 17
 24742                           
 24743                           ;incstack = 0
 24744                           ;setAddrWindow@x0 stored from wreg
 24745  0087E0  0100               	movlb	0	; () banked
 24746  0087E2  6F94               	movwf	setAddrWindow@x0& (0+255),b
 24747                           
 24748                           ; BSR set to: 0
 24749                           ;ST7735_TFT.c: 395: write_command(0x2A);
 24750  0087E4  0E2A               	movlw	42
 24751  0087E6  ECD1  F048         	call	_write_command
 24752                           
 24753                           ;ST7735_TFT.c: 396: write_data(0);
 24754  0087EA  0E00               	movlw	0
 24755  0087EC  ECC7  F048         	call	_write_data
 24756                           
 24757                           ;ST7735_TFT.c: 397: write_data(x0 + colstart);
 24758  0087F0  0100               	movlb	0	; () banked
 24759  0087F2  5194               	movf	setAddrWindow@x0& (0+255),w,b
 24760  0087F4  0101               	movlb	1	; () banked
 24761  0087F6  25BE               	addwf	_colstart& (0+255),w,b
 24762  0087F8  ECC7  F048         	call	_write_data
 24763                           
 24764                           ;ST7735_TFT.c: 398: write_data(0);
 24765  0087FC  0E00               	movlw	0
 24766  0087FE  ECC7  F048         	call	_write_data
 24767                           
 24768                           ;ST7735_TFT.c: 399: write_data(x1 + colstart);
 24769  008802  0100               	movlb	0	; () banked
 24770  008804  5192               	movf	setAddrWindow@x1& (0+255),w,b
 24771  008806  0101               	movlb	1	; () banked
 24772  008808  25BE               	addwf	_colstart& (0+255),w,b
 24773  00880A  ECC7  F048         	call	_write_data
 24774                           
 24775                           ;ST7735_TFT.c: 400: write_command(0x2B);
 24776  00880E  0E2B               	movlw	43
 24777  008810  ECD1  F048         	call	_write_command
 24778                           
 24779                           ;ST7735_TFT.c: 401: write_data(0);
 24780  008814  0E00               	movlw	0
 24781  008816  ECC7  F048         	call	_write_data
 24782                           
 24783                           ;ST7735_TFT.c: 402: write_data(y0 + rowstart);
 24784  00881A  0100               	movlb	0	; () banked
 24785  00881C  5191               	movf	setAddrWindow@y0& (0+255),w,b
 24786  00881E  0101               	movlb	1	; () banked
 24787  008820  25BF               	addwf	_rowstart& (0+255),w,b
 24788  008822  ECC7  F048         	call	_write_data
 24789                           
 24790                           ;ST7735_TFT.c: 403: write_data(0);
 24791  008826  0E00               	movlw	0
 24792  008828  ECC7  F048         	call	_write_data
 24793                           
 24794                           ;ST7735_TFT.c: 404: write_data(y1 + rowstart);
 24795  00882C  0100               	movlb	0	; () banked
 24796  00882E  5193               	movf	setAddrWindow@y1& (0+255),w,b
 24797  008830  0101               	movlb	1	; () banked
 24798  008832  25BF               	addwf	_rowstart& (0+255),w,b
 24799  008834  ECC7  F048         	call	_write_data
 24800                           
 24801                           ;ST7735_TFT.c: 405: write_command(0x2C);
 24802  008838  0E2C               	movlw	44
 24803  00883A  ECD1  F048         	call	_write_command
 24804  00883E  0012               	return		;funcret
 24805  008840                     __end_of_setAddrWindow:
 24806                           	opt stack 0
 24807                           tblptru	equ	0xFF8
 24808                           tblptrh	equ	0xFF7
 24809                           tblptrl	equ	0xFF6
 24810                           tablat	equ	0xFF5
 24811                           prodh	equ	0xFF4
 24812                           prodl	equ	0xFF3
 24813                           intcon	equ	0xFF2
 24814                           intcon2	equ	0xFF1
 24815                           postinc0	equ	0xFEE
 24816                           wreg	equ	0xFE8
 24817                           postdec1	equ	0xFE5
 24818                           fsr1l	equ	0xFE1
 24819                           indf2	equ	0xFDF
 24820                           postinc2	equ	0xFDE
 24821                           postdec2	equ	0xFDD
 24822                           fsr2h	equ	0xFDA
 24823                           fsr2l	equ	0xFD9
 24824                           status	equ	0xFD8
 24825                           
 24826 ;; *************** function _write_data *****************
 24827 ;; Defined at:
 24828 ;;		line 210 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/ST7735_TFT.c"
 24829 ;; Parameters:    Size  Location     Type
 24830 ;;  data_           1    wreg     unsigned char 
 24831 ;; Auto vars:     Size  Location     Type
 24832 ;;  data_           1   16[BANK0 ] unsigned char 
 24833 ;; Return value:  Size  Location     Type
 24834 ;;		None               void
 24835 ;; Registers used:
 24836 ;;		wreg, status,2, cstack
 24837 ;; Tracked objects:
 24838 ;;		On entry : 0/0
 24839 ;;		On exit  : 0/0
 24840 ;;		Unchanged: 0/0
 24841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24843 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24845 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24846 ;;Total ram usage:        1 bytes
 24847 ;; Hardware stack levels used:    1
 24848 ;; Hardware stack levels required when called:    7
 24849 ;; This function calls:
 24850 ;;		_spiwrite
 24851 ;; This function is called by:
 24852 ;;		_Rcmd1
 24853 ;;		_Rcmd2red
 24854 ;;		_Rcmd3
 24855 ;;		_setAddrWindow
 24856 ;;		_drawPixel
 24857 ;;		_TFT_GreenTab_Initialize
 24858 ;;		_Bcmd
 24859 ;;		_setScrollDefinition
 24860 ;;		_Rcmd2green
 24861 ;;		_VerticalScroll
 24862 ;; This function uses a non-reentrant model
 24863 ;;
 24864                           
 24865                           	psect	text97
 24866  00918E                     __ptext97:
 24867                           	opt stack 0
 24868  00918E                     _write_data:
 24869                           	opt stack 17
 24870                           
 24871                           ;incstack = 0
 24872                           ;write_data@data_ stored from wreg
 24873  00918E  0100               	movlb	0	; () banked
 24874  009190  6F90               	movwf	write_data@data_& (0+255),b
 24875                           
 24876                           ; BSR set to: 0
 24877                           ;ST7735_TFT.c: 212: PORTDbits.RD4 = 0;
 24878  009192  9883               	bcf	3971,4,c	;volatile
 24879                           
 24880                           ;ST7735_TFT.c: 213: PORTDbits.RD3 = 1;
 24881  009194  8683               	bsf	3971,3,c	;volatile
 24882                           
 24883                           ; BSR set to: 0
 24884                           ;ST7735_TFT.c: 214: spiwrite(data_);
 24885  009196  0100               	movlb	0	; () banked
 24886  009198  5190               	movf	write_data@data_& (0+255),w,b
 24887  00919A  EC7D  F048         	call	_spiwrite
 24888                           
 24889                           ;ST7735_TFT.c: 215: PORTDbits.RD4 = 1;
 24890  00919E  8883               	bsf	3971,4,c	;volatile
 24891  0091A0  0012               	return		;funcret
 24892  0091A2                     __end_of_write_data:
 24893                           	opt stack 0
 24894                           tblptru	equ	0xFF8
 24895                           tblptrh	equ	0xFF7
 24896                           tblptrl	equ	0xFF6
 24897                           tablat	equ	0xFF5
 24898                           prodh	equ	0xFF4
 24899                           prodl	equ	0xFF3
 24900                           intcon	equ	0xFF2
 24901                           intcon2	equ	0xFF1
 24902                           postinc0	equ	0xFEE
 24903                           wreg	equ	0xFE8
 24904                           postdec1	equ	0xFE5
 24905                           fsr1l	equ	0xFE1
 24906                           indf2	equ	0xFDF
 24907                           postinc2	equ	0xFDE
 24908                           postdec2	equ	0xFDD
 24909                           fsr2h	equ	0xFDA
 24910                           fsr2l	equ	0xFD9
 24911                           status	equ	0xFD8
 24912                           
 24913 ;; *************** function _write_command *****************
 24914 ;; Defined at:
 24915 ;;		line 199 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/ST7735_TFT.c"
 24916 ;; Parameters:    Size  Location     Type
 24917 ;;  cmd_            1    wreg     unsigned char 
 24918 ;; Auto vars:     Size  Location     Type
 24919 ;;  cmd_            1   16[BANK0 ] unsigned char 
 24920 ;; Return value:  Size  Location     Type
 24921 ;;		None               void
 24922 ;; Registers used:
 24923 ;;		wreg, status,2, cstack
 24924 ;; Tracked objects:
 24925 ;;		On entry : 0/0
 24926 ;;		On exit  : 0/0
 24927 ;;		Unchanged: 0/0
 24928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24930 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24932 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24933 ;;Total ram usage:        1 bytes
 24934 ;; Hardware stack levels used:    1
 24935 ;; Hardware stack levels required when called:    7
 24936 ;; This function calls:
 24937 ;;		_spiwrite
 24938 ;; This function is called by:
 24939 ;;		_Rcmd1
 24940 ;;		_Rcmd2red
 24941 ;;		_Rcmd3
 24942 ;;		_setAddrWindow
 24943 ;;		_TFT_GreenTab_Initialize
 24944 ;;		_Bcmd
 24945 ;;		_setScrollDefinition
 24946 ;;		_Rcmd2green
 24947 ;;		_VerticalScroll
 24948 ;; This function uses a non-reentrant model
 24949 ;;
 24950                           
 24951                           	psect	text98
 24952  0091A2                     __ptext98:
 24953                           	opt stack 0
 24954  0091A2                     _write_command:
 24955                           	opt stack 17
 24956                           
 24957                           ;incstack = 0
 24958                           ;write_command@cmd_ stored from wreg
 24959  0091A2  0100               	movlb	0	; () banked
 24960  0091A4  6F90               	movwf	write_command@cmd_& (0+255),b
 24961                           
 24962                           ; BSR set to: 0
 24963                           ;ST7735_TFT.c: 201: PORTDbits.RD4 = 0;
 24964  0091A6  9883               	bcf	3971,4,c	;volatile
 24965                           
 24966                           ;ST7735_TFT.c: 203: PORTDbits.RD3 = 0;
 24967  0091A8  9683               	bcf	3971,3,c	;volatile
 24968                           
 24969                           ; BSR set to: 0
 24970                           ;ST7735_TFT.c: 204: spiwrite(cmd_);
 24971  0091AA  0100               	movlb	0	; () banked
 24972  0091AC  5190               	movf	write_command@cmd_& (0+255),w,b
 24973  0091AE  EC7D  F048         	call	_spiwrite
 24974                           
 24975                           ;ST7735_TFT.c: 206: PORTDbits.RD4 = 1;
 24976  0091B2  8883               	bsf	3971,4,c	;volatile
 24977  0091B4  0012               	return		;funcret
 24978  0091B6                     __end_of_write_command:
 24979                           	opt stack 0
 24980                           tblptru	equ	0xFF8
 24981                           tblptrh	equ	0xFF7
 24982                           tblptrl	equ	0xFF6
 24983                           tablat	equ	0xFF5
 24984                           prodh	equ	0xFF4
 24985                           prodl	equ	0xFF3
 24986                           intcon	equ	0xFF2
 24987                           intcon2	equ	0xFF1
 24988                           postinc0	equ	0xFEE
 24989                           wreg	equ	0xFE8
 24990                           postdec1	equ	0xFE5
 24991                           fsr1l	equ	0xFE1
 24992                           indf2	equ	0xFDF
 24993                           postinc2	equ	0xFDE
 24994                           postdec2	equ	0xFDD
 24995                           fsr2h	equ	0xFDA
 24996                           fsr2l	equ	0xFD9
 24997                           status	equ	0xFD8
 24998                           
 24999 ;; *************** function _spiwrite *****************
 25000 ;; Defined at:
 25001 ;;		line 190 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/ST7735_TFT.c"
 25002 ;; Parameters:    Size  Location     Type
 25003 ;;  spidata         1    wreg     unsigned char 
 25004 ;; Auto vars:     Size  Location     Type
 25005 ;;  spidata         1   15[BANK0 ] unsigned char 
 25006 ;;  x               1   14[BANK0 ] unsigned char 
 25007 ;; Return value:  Size  Location     Type
 25008 ;;		None               void
 25009 ;; Registers used:
 25010 ;;		wreg
 25011 ;; Tracked objects:
 25012 ;;		On entry : 0/0
 25013 ;;		On exit  : 0/0
 25014 ;;		Unchanged: 0/0
 25015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25017 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25019 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25020 ;;Total ram usage:        2 bytes
 25021 ;; Hardware stack levels used:    1
 25022 ;; Hardware stack levels required when called:    6
 25023 ;; This function calls:
 25024 ;;		Nothing
 25025 ;; This function is called by:
 25026 ;;		_write_command
 25027 ;;		_write_data
 25028 ;;		_drawFastVLine
 25029 ;;		_fillRectangle
 25030 ;;		_drawFastHLine
 25031 ;; This function uses a non-reentrant model
 25032 ;;
 25033                           
 25034                           	psect	text99
 25035  0090FA                     __ptext99:
 25036                           	opt stack 0
 25037  0090FA                     _spiwrite:
 25038                           	opt stack 19
 25039                           
 25040                           ;incstack = 0
 25041                           ;spiwrite@spidata stored from wreg
 25042  0090FA  0100               	movlb	0	; () banked
 25043  0090FC  6F8F               	movwf	spiwrite@spidata& (0+255),b
 25044                           
 25045                           ; BSR set to: 0
 25046                           ;ST7735_TFT.c: 192: char x;
 25047                           ;ST7735_TFT.c: 193: PIR1bits.SSPIF = 0;
 25048  0090FE  969E               	bcf	3998,3,c	;volatile
 25049                           
 25050                           ;ST7735_TFT.c: 194: x = SSPBUF;
 25051  009100  CFC9 F08E          	movff	4041,spiwrite@x	;volatile
 25052                           
 25053                           ; BSR set to: 0
 25054                           ;ST7735_TFT.c: 195: SSPBUF = spidata;
 25055  009104  C08F  FFC9         	movff	spiwrite@spidata,4041	;volatile
 25056                           
 25057                           ;ST7735_TFT.c: 196: while (!SSPSTATbits.BF);
 25058  009108  D000               	goto	l694
 25059  00910A                     l694:
 25060  00910A  A0C7               	btfss	4039,0,c	;volatile
 25061  00910C  D7FE               	goto	l694
 25062  00910E  0012               	return		;funcret
 25063  009110                     __end_of_spiwrite:
 25064                           	opt stack 0
 25065                           tblptru	equ	0xFF8
 25066                           tblptrh	equ	0xFF7
 25067                           tblptrl	equ	0xFF6
 25068                           tablat	equ	0xFF5
 25069                           prodh	equ	0xFF4
 25070                           prodl	equ	0xFF3
 25071                           intcon	equ	0xFF2
 25072                           intcon2	equ	0xFF1
 25073                           postinc0	equ	0xFEE
 25074                           wreg	equ	0xFE8
 25075                           postdec1	equ	0xFE5
 25076                           fsr1l	equ	0xFE1
 25077                           indf2	equ	0xFDF
 25078                           postinc2	equ	0xFDE
 25079                           postdec2	equ	0xFDD
 25080                           fsr2h	equ	0xFDA
 25081                           fsr2l	equ	0xFD9
 25082                           status	equ	0xFD8
 25083                           
 25084 ;; *************** function ___wmul *****************
 25085 ;; Defined at:
 25086 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 25087 ;; Parameters:    Size  Location     Type
 25088 ;;  multiplier      2   14[BANK0 ] unsigned int 
 25089 ;;  multiplicand    2   16[BANK0 ] unsigned int 
 25090 ;; Auto vars:     Size  Location     Type
 25091 ;;  product         2   18[BANK0 ] unsigned int 
 25092 ;; Return value:  Size  Location     Type
 25093 ;;                  2   14[BANK0 ] unsigned int 
 25094 ;; Registers used:
 25095 ;;		wreg, status,2, status,0, prodl, prodh
 25096 ;; Tracked objects:
 25097 ;;		On entry : 0/0
 25098 ;;		On exit  : 0/0
 25099 ;;		Unchanged: 0/0
 25100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25101 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25102 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25104 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25105 ;;Total ram usage:        6 bytes
 25106 ;; Hardware stack levels used:    1
 25107 ;; Hardware stack levels required when called:    6
 25108 ;; This function calls:
 25109 ;;		Nothing
 25110 ;; This function is called by:
 25111 ;;		_get_RPM
 25112 ;;		_main
 25113 ;;		_delay_ms
 25114 ;;		_drawChar
 25115 ;;		_read_volt
 25116 ;;		_fround
 25117 ;;		_scale
 25118 ;;		_printf
 25119 ;; This function uses a non-reentrant model
 25120 ;;
 25121                           
 25122                           	psect	text100
 25123  008CFE                     __ptext100:
 25124                           	opt stack 0
 25125  008CFE                     ___wmul:
 25126                           	opt stack 23
 25127                           
 25128                           ;incstack = 0
 25129  008CFE  0100               	movlb	0	; () banked
 25130  008D00  518E               	movf	___wmul@multiplier& (0+255),w,b
 25131  008D02  0100               	movlb	0	; () banked
 25132  008D04  0390               	mulwf	___wmul@multiplicand& (0+255),b
 25133  008D06  CFF3 F092          	movff	prodl,___wmul@product
 25134  008D0A  CFF4 F093          	movff	prodh,___wmul@product+1
 25135  008D0E  0100               	movlb	0	; () banked
 25136  008D10  518E               	movf	___wmul@multiplier& (0+255),w,b
 25137  008D12  0100               	movlb	0	; () banked
 25138  008D14  0391               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 25139  008D16  50F3               	movf	prodl,w,c
 25140  008D18  0100               	movlb	0	; () banked
 25141  008D1A  2793               	addwf	(___wmul@product+1)& (0+255),f,b
 25142  008D1C  0100               	movlb	0	; () banked
 25143  008D1E  518F               	movf	(___wmul@multiplier+1)& (0+255),w,b
 25144  008D20  0100               	movlb	0	; () banked
 25145  008D22  0390               	mulwf	___wmul@multiplicand& (0+255),b
 25146  008D24  50F3               	movf	prodl,w,c
 25147  008D26  0100               	movlb	0	; () banked
 25148  008D28  2793               	addwf	(___wmul@product+1)& (0+255),f,b
 25149                           
 25150                           ; BSR set to: 0
 25151  008D2A  C092  F08E         	movff	___wmul@product,?___wmul
 25152  008D2E  C093  F08F         	movff	___wmul@product+1,?___wmul+1
 25153  008D32  D000               	goto	l1697
 25154  008D34                     l1697:
 25155                           
 25156                           ; BSR set to: 0
 25157  008D34  0012               	return		;funcret
 25158  008D36                     __end_of___wmul:
 25159                           	opt stack 0
 25160                           tblptru	equ	0xFF8
 25161                           tblptrh	equ	0xFF7
 25162                           tblptrl	equ	0xFF6
 25163                           tablat	equ	0xFF5
 25164                           prodh	equ	0xFF4
 25165                           prodl	equ	0xFF3
 25166                           intcon	equ	0xFF2
 25167                           intcon2	equ	0xFF1
 25168                           postinc0	equ	0xFEE
 25169                           wreg	equ	0xFE8
 25170                           postdec1	equ	0xFE5
 25171                           fsr1l	equ	0xFE1
 25172                           indf2	equ	0xFDF
 25173                           postinc2	equ	0xFDE
 25174                           postdec2	equ	0xFDD
 25175                           fsr2h	equ	0xFDA
 25176                           fsr2l	equ	0xFD9
 25177                           status	equ	0xFD8
 25178                           
 25179 ;; *************** function _Do_Init *****************
 25180 ;; Defined at:
 25181 ;;		line 92 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Main.c"
 25182 ;; Parameters:    Size  Location     Type
 25183 ;;		None
 25184 ;; Auto vars:     Size  Location     Type
 25185 ;;		None
 25186 ;; Return value:  Size  Location     Type
 25187 ;;		None               void
 25188 ;; Registers used:
 25189 ;;		wreg, status,2, status,0, cstack
 25190 ;; Tracked objects:
 25191 ;;		On entry : 0/0
 25192 ;;		On exit  : 0/0
 25193 ;;		Unchanged: 0/0
 25194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25199 ;;Total ram usage:        0 bytes
 25200 ;; Hardware stack levels used:    1
 25201 ;; Hardware stack levels required when called:   10
 25202 ;; This function calls:
 25203 ;;		_DS1621_Init
 25204 ;;		_I2C_Init
 25205 ;;		_Init_ADC
 25206 ;;		_Init_Interrupt
 25207 ;;		_Turn_Off_Fan
 25208 ;;		_init_UART
 25209 ;; This function is called by:
 25210 ;;		_main
 25211 ;; This function uses a non-reentrant model
 25212 ;;
 25213                           
 25214                           	psect	text101
 25215  008658                     __ptext101:
 25216                           	opt stack 0
 25217  008658                     _Do_Init:
 25218                           	opt stack 20
 25219                           
 25220                           ;Main.c: 94: init_UART();
 25221                           
 25222                           ; BSR set to: 0
 25223                           ;incstack = 0
 25224  008658  EC88  F048         	call	_init_UART	;wreg free
 25225                           
 25226                           ;Main.c: 95: Init_ADC();
 25227  00865C  EC56  F049         	call	_Init_ADC	;wreg free
 25228                           
 25229                           ;Main.c: 96: OSCCON=0x70;
 25230  008660  0E70               	movlw	112
 25231  008662  6ED3               	movwf	4051,c	;volatile
 25232                           
 25233                           ;Main.c: 98: ADCON0= 0x04;
 25234  008664  0E04               	movlw	4
 25235  008666  6EC2               	movwf	4034,c	;volatile
 25236                           
 25237                           ;Main.c: 99: ADCON1= 0x0D;
 25238  008668  0E0D               	movlw	13
 25239  00866A  6EC1               	movwf	4033,c	;volatile
 25240                           
 25241                           ;Main.c: 100: TRISA = 0x06;
 25242  00866C  0E06               	movlw	6
 25243  00866E  6E92               	movwf	3986,c	;volatile
 25244                           
 25245                           ;Main.c: 101: TRISB = 0x07;
 25246  008670  0E07               	movlw	7
 25247  008672  6E93               	movwf	3987,c	;volatile
 25248                           
 25249                           ;Main.c: 102: TRISC = 0x01;
 25250  008674  0E01               	movlw	1
 25251  008676  6E94               	movwf	3988,c	;volatile
 25252                           
 25253                           ;Main.c: 103: TRISD = 0x00;
 25254  008678  0E00               	movlw	0
 25255  00867A  6E95               	movwf	3989,c	;volatile
 25256                           
 25257                           ;Main.c: 104: TRISE = 0x00;
 25258  00867C  0E00               	movlw	0
 25259  00867E  6E96               	movwf	3990,c	;volatile
 25260                           
 25261                           ;Main.c: 105: PORTE = 0x00;
 25262  008680  0E00               	movlw	0
 25263  008682  6E84               	movwf	3972,c	;volatile
 25264                           
 25265                           ;Main.c: 107: FAN = 0;
 25266  008684  0E00               	movlw	0
 25267  008686  6E7D               	movwf	_FAN,c
 25268                           
 25269                           ;Main.c: 108: RBPU=0;
 25270  008688  9EF1               	bcf	intcon2,7,c	;volatile
 25271                           
 25272                           ;Main.c: 110: TMR3L = 0x00;
 25273  00868A  0E00               	movlw	0
 25274  00868C  6EB2               	movwf	4018,c	;volatile
 25275                           
 25276                           ;Main.c: 111: T3CON = 0x03;
 25277  00868E  0E03               	movlw	3
 25278  008690  6EB1               	movwf	4017,c	;volatile
 25279                           
 25280                           ;Main.c: 112: I2C_Init(100000);
 25281  008692  0EA0               	movlw	160
 25282  008694  0100               	movlb	0	; () banked
 25283  008696  6F8E               	movwf	I2C_Init@c& (0+255),b
 25284  008698  0E86               	movlw	134
 25285  00869A  6F8F               	movwf	(I2C_Init@c+1)& (0+255),b
 25286  00869C  0E01               	movlw	1
 25287  00869E  6F90               	movwf	(I2C_Init@c+2)& (0+255),b
 25288  0086A0  0E00               	movlw	0
 25289  0086A2  6F91               	movwf	(I2C_Init@c+3)& (0+255),b
 25290  0086A4  EC5B  F049         	call	_I2C_Init	;wreg free
 25291                           
 25292                           ;Main.c: 114: DS1621_Init();
 25293  0086A8  EC44  F047         	call	_DS1621_Init	;wreg free
 25294                           
 25295                           ;Main.c: 115: Init_Interrupt();
 25296  0086AC  EC1D  F048         	call	_Init_Interrupt	;wreg free
 25297                           
 25298                           ;Main.c: 116: Turn_Off_Fan();
 25299  0086B0  EC73  F049         	call	_Turn_Off_Fan	;wreg free
 25300                           
 25301                           ;Main.c: 117: fan_set_temp = 75;
 25302  0086B4  0E4B               	movlw	75
 25303  0086B6  0101               	movlb	1	; () banked
 25304  0086B8  6F34               	movwf	_fan_set_temp& (0+255),b
 25305                           
 25306                           ; BSR set to: 1
 25307  0086BA  0012               	return		;funcret
 25308  0086BC                     __end_of_Do_Init:
 25309                           	opt stack 0
 25310                           tblptru	equ	0xFF8
 25311                           tblptrh	equ	0xFF7
 25312                           tblptrl	equ	0xFF6
 25313                           tablat	equ	0xFF5
 25314                           prodh	equ	0xFF4
 25315                           prodl	equ	0xFF3
 25316                           intcon	equ	0xFF2
 25317                           intcon2	equ	0xFF1
 25318                           postinc0	equ	0xFEE
 25319                           wreg	equ	0xFE8
 25320                           postdec1	equ	0xFE5
 25321                           fsr1l	equ	0xFE1
 25322                           indf2	equ	0xFDF
 25323                           postinc2	equ	0xFDE
 25324                           postdec2	equ	0xFDD
 25325                           fsr2h	equ	0xFDA
 25326                           fsr2l	equ	0xFD9
 25327                           status	equ	0xFD8
 25328                           
 25329 ;; *************** function _init_UART *****************
 25330 ;; Defined at:
 25331 ;;		line 84 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Main.c"
 25332 ;; Parameters:    Size  Location     Type
 25333 ;;		None
 25334 ;; Auto vars:     Size  Location     Type
 25335 ;;		None
 25336 ;; Return value:  Size  Location     Type
 25337 ;;		None               void
 25338 ;; Registers used:
 25339 ;;		wreg, status,2, cstack
 25340 ;; Tracked objects:
 25341 ;;		On entry : 0/0
 25342 ;;		On exit  : 0/0
 25343 ;;		Unchanged: 0/0
 25344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25349 ;;Total ram usage:        0 bytes
 25350 ;; Hardware stack levels used:    1
 25351 ;; Hardware stack levels required when called:    7
 25352 ;; This function calls:
 25353 ;;		_OpenUSART
 25354 ;; This function is called by:
 25355 ;;		_Do_Init
 25356 ;; This function uses a non-reentrant model
 25357 ;;
 25358                           
 25359                           	psect	text102
 25360  009110                     __ptext102:
 25361                           	opt stack 0
 25362  009110                     _init_UART:
 25363                           	opt stack 22
 25364                           
 25365                           ;Main.c: 86: OpenUSART (0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b11111111 &
      +                           0b11111111, 25);
 25366                           
 25367                           ; BSR set to: 1
 25368                           ;incstack = 0
 25369  009110  0E00               	movlw	0
 25370  009112  0100               	movlb	0	; () banked
 25371  009114  6F8F               	movwf	(OpenUSART@spbrg+1)& (0+255),b
 25372  009116  0E19               	movlw	25
 25373  009118  6F8E               	movwf	OpenUSART@spbrg& (0+255),b
 25374  00911A  0E3C               	movlw	60
 25375  00911C  ECE8  F040         	call	_OpenUSART
 25376                           
 25377                           ;Main.c: 87: OSCCON = 0x70;
 25378  009120  0E70               	movlw	112
 25379  009122  6ED3               	movwf	4051,c	;volatile
 25380  009124  0012               	return		;funcret
 25381  009126                     __end_of_init_UART:
 25382                           	opt stack 0
 25383                           tblptru	equ	0xFF8
 25384                           tblptrh	equ	0xFF7
 25385                           tblptrl	equ	0xFF6
 25386                           tablat	equ	0xFF5
 25387                           prodh	equ	0xFF4
 25388                           prodl	equ	0xFF3
 25389                           intcon	equ	0xFF2
 25390                           intcon2	equ	0xFF1
 25391                           postinc0	equ	0xFEE
 25392                           wreg	equ	0xFE8
 25393                           postdec1	equ	0xFE5
 25394                           fsr1l	equ	0xFE1
 25395                           indf2	equ	0xFDF
 25396                           postinc2	equ	0xFDE
 25397                           postdec2	equ	0xFDD
 25398                           fsr2h	equ	0xFDA
 25399                           fsr2l	equ	0xFD9
 25400                           status	equ	0xFD8
 25401                           
 25402 ;; *************** function _OpenUSART *****************
 25403 ;; Defined at:
 25404 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
 25405 ;; Parameters:    Size  Location     Type
 25406 ;;  config          1    wreg     unsigned char 
 25407 ;;  spbrg           2   14[BANK0 ] unsigned int 
 25408 ;; Auto vars:     Size  Location     Type
 25409 ;;  config          1   16[BANK0 ] unsigned char 
 25410 ;; Return value:  Size  Location     Type
 25411 ;;		None               void
 25412 ;; Registers used:
 25413 ;;		wreg, status,2
 25414 ;; Tracked objects:
 25415 ;;		On entry : 0/0
 25416 ;;		On exit  : 0/0
 25417 ;;		Unchanged: 0/0
 25418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25419 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25420 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25422 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25423 ;;Total ram usage:        3 bytes
 25424 ;; Hardware stack levels used:    1
 25425 ;; Hardware stack levels required when called:    6
 25426 ;; This function calls:
 25427 ;;		Nothing
 25428 ;; This function is called by:
 25429 ;;		_init_UART
 25430 ;; This function uses a non-reentrant model
 25431 ;;
 25432                           
 25433                           	psect	text103
 25434  0081D0                     __ptext103:
 25435                           	opt stack 0
 25436  0081D0                     _OpenUSART:
 25437                           	opt stack 22
 25438                           
 25439                           ;incstack = 0
 25440                           ;OpenUSART@config stored from wreg
 25441  0081D0  0100               	movlb	0	; () banked
 25442  0081D2  6F90               	movwf	OpenUSART@config& (0+255),b
 25443                           
 25444                           ; BSR set to: 0
 25445  0081D4  0E00               	movlw	0
 25446  0081D6  6EAC               	movwf	4012,c	;volatile
 25447  0081D8  0E00               	movlw	0
 25448  0081DA  6EAB               	movwf	4011,c	;volatile
 25449                           
 25450                           ; BSR set to: 0
 25451  0081DC  0100               	movlb	0	; () banked
 25452  0081DE  A190               	btfss	OpenUSART@config& (0+255),0,b
 25453  0081E0  D002               	goto	l9369
 25454                           
 25455                           ; BSR set to: 0
 25456  0081E2  88AC               	bsf	4012,4,c	;volatile
 25457  0081E4  D000               	goto	l9369
 25458  0081E6                     l9369:
 25459                           
 25460                           ; BSR set to: 0
 25461  0081E6  0100               	movlb	0	; () banked
 25462  0081E8  A390               	btfss	OpenUSART@config& (0+255),1,b
 25463  0081EA  D003               	goto	l9373
 25464                           
 25465                           ; BSR set to: 0
 25466  0081EC  8CAC               	bsf	4012,6,c	;volatile
 25467  0081EE  8CAB               	bsf	4011,6,c	;volatile
 25468  0081F0  D000               	goto	l9373
 25469  0081F2                     l9373:
 25470                           
 25471                           ; BSR set to: 0
 25472  0081F2  0100               	movlb	0	; () banked
 25473  0081F4  A590               	btfss	OpenUSART@config& (0+255),2,b
 25474  0081F6  D002               	goto	l9377
 25475                           
 25476                           ; BSR set to: 0
 25477  0081F8  8EAC               	bsf	4012,7,c	;volatile
 25478  0081FA  D000               	goto	l9377
 25479  0081FC                     l9377:
 25480                           
 25481                           ; BSR set to: 0
 25482  0081FC  0100               	movlb	0	; () banked
 25483  0081FE  A790               	btfss	OpenUSART@config& (0+255),3,b
 25484  008200  D002               	goto	l1685
 25485                           
 25486                           ; BSR set to: 0
 25487  008202  88AB               	bsf	4011,4,c	;volatile
 25488  008204  D002               	goto	l9381
 25489  008206                     l1685:
 25490                           
 25491                           ; BSR set to: 0
 25492  008206  8AAB               	bsf	4011,5,c	;volatile
 25493  008208  D000               	goto	l9381
 25494  00820A                     l9381:
 25495                           
 25496                           ; BSR set to: 0
 25497  00820A  0100               	movlb	0	; () banked
 25498  00820C  B990               	btfsc	OpenUSART@config& (0+255),4,b
 25499                           
 25500                           ; BSR set to: 0
 25501  00820E  84AC               	bsf	4012,2,c	;volatile
 25502                           
 25503                           ; BSR set to: 0
 25504  008210  989E               	bcf	3998,4,c	;volatile
 25505                           
 25506                           ; BSR set to: 0
 25507  008212  0100               	movlb	0	; () banked
 25508  008214  AB90               	btfss	OpenUSART@config& (0+255),5,b
 25509  008216  D002               	goto	l9389
 25510                           
 25511                           ; BSR set to: 0
 25512  008218  86AB               	bsf	4011,3,c	;volatile
 25513  00821A  D000               	goto	l9389
 25514  00821C                     l9389:
 25515                           
 25516                           ; BSR set to: 0
 25517  00821C  0100               	movlb	0	; () banked
 25518  00821E  AD90               	btfss	OpenUSART@config& (0+255),6,b
 25519  008220  D002               	goto	l1689
 25520                           
 25521                           ; BSR set to: 0
 25522  008222  8A9D               	bsf	3997,5,c	;volatile
 25523  008224  D001               	goto	l1690
 25524  008226                     l1689:
 25525                           
 25526                           ; BSR set to: 0
 25527  008226  9A9D               	bcf	3997,5,c	;volatile
 25528  008228                     l1690:
 25529                           
 25530                           ; BSR set to: 0
 25531  008228  9A9E               	bcf	3998,5,c	;volatile
 25532                           
 25533                           ; BSR set to: 0
 25534  00822A  0100               	movlb	0	; () banked
 25535  00822C  AF90               	btfss	OpenUSART@config& (0+255),7,b
 25536  00822E  D002               	goto	l1691
 25537                           
 25538                           ; BSR set to: 0
 25539  008230  889D               	bsf	3997,4,c	;volatile
 25540  008232  D001               	goto	l1692
 25541  008234                     l1691:
 25542                           
 25543                           ; BSR set to: 0
 25544  008234  989D               	bcf	3997,4,c	;volatile
 25545  008236                     l1692:
 25546                           
 25547                           ; BSR set to: 0
 25548  008236  C08E  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
 25549                           
 25550                           ; BSR set to: 0
 25551  00823A  0100               	movlb	0	; () banked
 25552  00823C  518F               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
 25553  00823E  6EB0               	movwf	4016,c	;volatile
 25554                           
 25555                           ; BSR set to: 0
 25556  008240  8AAC               	bsf	4012,5,c	;volatile
 25557                           
 25558                           ; BSR set to: 0
 25559  008242  8EAB               	bsf	4011,7,c	;volatile
 25560                           
 25561                           ; BSR set to: 0
 25562  008244  9C94               	bcf	3988,6,c	;volatile
 25563                           
 25564                           ; BSR set to: 0
 25565  008246  8E94               	bsf	3988,7,c	;volatile
 25566                           
 25567                           ; BSR set to: 0
 25568  008248  B8AC               	btfsc	4012,4,c	;volatile
 25569                           
 25570                           ; BSR set to: 0
 25571  00824A  BEAC               	btfsc	4012,7,c	;volatile
 25572  00824C  D002               	goto	l1694
 25573                           
 25574                           ; BSR set to: 0
 25575  00824E  8C94               	bsf	3988,6,c	;volatile
 25576  008250  D000               	goto	l1694
 25577  008252                     l1694:
 25578                           
 25579                           ; BSR set to: 0
 25580  008252  0012               	return		;funcret
 25581  008254                     __end_of_OpenUSART:
 25582                           	opt stack 0
 25583                           tblptru	equ	0xFF8
 25584                           tblptrh	equ	0xFF7
 25585                           tblptrl	equ	0xFF6
 25586                           tablat	equ	0xFF5
 25587                           prodh	equ	0xFF4
 25588                           prodl	equ	0xFF3
 25589                           intcon	equ	0xFF2
 25590                           intcon2	equ	0xFF1
 25591                           postinc0	equ	0xFEE
 25592                           wreg	equ	0xFE8
 25593                           postdec1	equ	0xFE5
 25594                           fsr1l	equ	0xFE1
 25595                           indf2	equ	0xFDF
 25596                           postinc2	equ	0xFDE
 25597                           postdec2	equ	0xFDD
 25598                           fsr2h	equ	0xFDA
 25599                           fsr2l	equ	0xFD9
 25600                           status	equ	0xFD8
 25601                           
 25602 ;; *************** function _Turn_Off_Fan *****************
 25603 ;; Defined at:
 25604 ;;		line 71 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Fan_Support.c"
 25605 ;; Parameters:    Size  Location     Type
 25606 ;;		None
 25607 ;; Auto vars:     Size  Location     Type
 25608 ;;		None
 25609 ;; Return value:  Size  Location     Type
 25610 ;;		None               void
 25611 ;; Registers used:
 25612 ;;		wreg, status,2
 25613 ;; Tracked objects:
 25614 ;;		On entry : 0/0
 25615 ;;		On exit  : 0/0
 25616 ;;		Unchanged: 0/0
 25617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25622 ;;Total ram usage:        0 bytes
 25623 ;; Hardware stack levels used:    1
 25624 ;; Hardware stack levels required when called:    6
 25625 ;; This function calls:
 25626 ;;		Nothing
 25627 ;; This function is called by:
 25628 ;;		_Do_Init
 25629 ;;		_Toggle_Fan
 25630 ;; This function uses a non-reentrant model
 25631 ;;
 25632                           
 25633                           	psect	text104
 25634  0092E6                     __ptext104:
 25635                           	opt stack 0
 25636  0092E6                     _Turn_Off_Fan:
 25637                           	opt stack 23
 25638                           
 25639                           ;Fan_Support.c: 73: FAN = 0;
 25640                           
 25641                           ; BSR set to: 0
 25642                           ;incstack = 0
 25643  0092E6  0E00               	movlw	0
 25644  0092E8  6E7D               	movwf	_FAN,c
 25645                           
 25646                           ;Fan_Support.c: 74: PORTAbits.RA5 = 0;
 25647  0092EA  9A80               	bcf	3968,5,c	;volatile
 25648  0092EC  0012               	return		;funcret
 25649  0092EE                     __end_of_Turn_Off_Fan:
 25650                           	opt stack 0
 25651                           tblptru	equ	0xFF8
 25652                           tblptrh	equ	0xFF7
 25653                           tblptrl	equ	0xFF6
 25654                           tablat	equ	0xFF5
 25655                           prodh	equ	0xFF4
 25656                           prodl	equ	0xFF3
 25657                           intcon	equ	0xFF2
 25658                           intcon2	equ	0xFF1
 25659                           postinc0	equ	0xFEE
 25660                           wreg	equ	0xFE8
 25661                           postdec1	equ	0xFE5
 25662                           fsr1l	equ	0xFE1
 25663                           indf2	equ	0xFDF
 25664                           postinc2	equ	0xFDE
 25665                           postdec2	equ	0xFDD
 25666                           fsr2h	equ	0xFDA
 25667                           fsr2l	equ	0xFD9
 25668                           status	equ	0xFD8
 25669                           
 25670 ;; *************** function _Init_Interrupt *****************
 25671 ;; Defined at:
 25672 ;;		line 18 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Interrupt.c"
 25673 ;; Parameters:    Size  Location     Type
 25674 ;;		None
 25675 ;; Auto vars:     Size  Location     Type
 25676 ;;		None
 25677 ;; Return value:  Size  Location     Type
 25678 ;;		None               void
 25679 ;; Registers used:
 25680 ;;		wreg, status,2
 25681 ;; Tracked objects:
 25682 ;;		On entry : 0/0
 25683 ;;		On exit  : 0/0
 25684 ;;		Unchanged: 0/0
 25685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25690 ;;Total ram usage:        0 bytes
 25691 ;; Hardware stack levels used:    1
 25692 ;; Hardware stack levels required when called:    6
 25693 ;; This function calls:
 25694 ;;		Nothing
 25695 ;; This function is called by:
 25696 ;;		_Do_Init
 25697 ;; This function uses a non-reentrant model
 25698 ;;
 25699                           
 25700                           	psect	text105
 25701  00903A                     __ptext105:
 25702                           	opt stack 0
 25703  00903A                     _Init_Interrupt:
 25704                           	opt stack 23
 25705                           
 25706                           ;Interrupt.c: 21: INTCONbits.INT0IF = 0 ;
 25707                           
 25708                           ;incstack = 0
 25709  00903A  92F2               	bcf	intcon,1,c	;volatile
 25710                           
 25711                           ;Interrupt.c: 22: INTCON3bits.INT1IF = 0;
 25712  00903C  90F0               	bcf	intcon3,0,c	;volatile
 25713                           
 25714                           ;Interrupt.c: 23: INTCON3bits.INT2IF = 0;
 25715  00903E  92F0               	bcf	intcon3,1,c	;volatile
 25716                           
 25717                           ;Interrupt.c: 24: INTCONbits.INT0IE = 1;
 25718  009040  88F2               	bsf	intcon,4,c	;volatile
 25719                           
 25720                           ;Interrupt.c: 26: INTCON3bits.INT2IE = 1;
 25721  009042  88F0               	bsf	intcon3,4,c	;volatile
 25722                           
 25723                           ;Interrupt.c: 27: INTCON2bits.INTEDG0 = 0;
 25724  009044  9CF1               	bcf	intcon2,6,c	;volatile
 25725                           
 25726                           ;Interrupt.c: 28: INTCON2bits.INTEDG2 = 0;
 25727  009046  98F1               	bcf	intcon2,4,c	;volatile
 25728                           
 25729                           ;Interrupt.c: 29: TMR1H = 0;
 25730  009048  0E00               	movlw	0
 25731  00904A  6ECF               	movwf	4047,c	;volatile
 25732                           
 25733                           ;Interrupt.c: 30: TMR1L = 0;
 25734  00904C  0E00               	movlw	0
 25735  00904E  6ECE               	movwf	4046,c	;volatile
 25736                           
 25737                           ;Interrupt.c: 31: PIR1bits.TMR1IF = 0;
 25738  009050  909E               	bcf	3998,0,c	;volatile
 25739                           
 25740                           ;Interrupt.c: 32: PIE1bits.TMR1IE = 1;
 25741  009052  809D               	bsf	3997,0,c	;volatile
 25742                           
 25743                           ;Interrupt.c: 33: INTCONbits.PEIE = 1;
 25744  009054  8CF2               	bsf	intcon,6,c	;volatile
 25745                           
 25746                           ;Interrupt.c: 34: INTCONbits.GIE = 1;
 25747  009056  8EF2               	bsf	intcon,7,c	;volatile
 25748  009058  0012               	return		;funcret
 25749  00905A                     __end_of_Init_Interrupt:
 25750                           	opt stack 0
 25751                           tblptru	equ	0xFF8
 25752                           tblptrh	equ	0xFF7
 25753                           tblptrl	equ	0xFF6
 25754                           tablat	equ	0xFF5
 25755                           prodh	equ	0xFF4
 25756                           prodl	equ	0xFF3
 25757                           intcon	equ	0xFF2
 25758                           intcon2	equ	0xFF1
 25759                           intcon3	equ	0xFF0
 25760                           postinc0	equ	0xFEE
 25761                           wreg	equ	0xFE8
 25762                           postdec1	equ	0xFE5
 25763                           fsr1l	equ	0xFE1
 25764                           indf2	equ	0xFDF
 25765                           postinc2	equ	0xFDE
 25766                           postdec2	equ	0xFDD
 25767                           fsr2h	equ	0xFDA
 25768                           fsr2l	equ	0xFD9
 25769                           status	equ	0xFD8
 25770                           
 25771 ;; *************** function _Init_ADC *****************
 25772 ;; Defined at:
 25773 ;;		line 170 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/utils.c"
 25774 ;; Parameters:    Size  Location     Type
 25775 ;;		None
 25776 ;; Auto vars:     Size  Location     Type
 25777 ;;		None
 25778 ;; Return value:  Size  Location     Type
 25779 ;;		None               void
 25780 ;; Registers used:
 25781 ;;		wreg, status,2
 25782 ;; Tracked objects:
 25783 ;;		On entry : 0/0
 25784 ;;		On exit  : 0/0
 25785 ;;		Unchanged: 0/0
 25786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25791 ;;Total ram usage:        0 bytes
 25792 ;; Hardware stack levels used:    1
 25793 ;; Hardware stack levels required when called:    6
 25794 ;; This function calls:
 25795 ;;		Nothing
 25796 ;; This function is called by:
 25797 ;;		_Do_Init
 25798 ;; This function uses a non-reentrant model
 25799 ;;
 25800                           
 25801                           	psect	text106
 25802  0092AC                     __ptext106:
 25803                           	opt stack 0
 25804  0092AC                     _Init_ADC:
 25805                           	opt stack 23
 25806                           
 25807                           ;utils.c: 172: ADCON1= 0x0D;
 25808                           
 25809                           ;incstack = 0
 25810  0092AC  0E0D               	movlw	13
 25811  0092AE  6EC1               	movwf	4033,c	;volatile
 25812                           
 25813                           ;utils.c: 173: ADCON2= 0xA9;
 25814  0092B0  0EA9               	movlw	169
 25815  0092B2  6EC0               	movwf	4032,c	;volatile
 25816  0092B4  0012               	return		;funcret
 25817  0092B6                     __end_of_Init_ADC:
 25818                           	opt stack 0
 25819                           tblptru	equ	0xFF8
 25820                           tblptrh	equ	0xFF7
 25821                           tblptrl	equ	0xFF6
 25822                           tablat	equ	0xFF5
 25823                           prodh	equ	0xFF4
 25824                           prodl	equ	0xFF3
 25825                           intcon	equ	0xFF2
 25826                           intcon2	equ	0xFF1
 25827                           intcon3	equ	0xFF0
 25828                           postinc0	equ	0xFEE
 25829                           wreg	equ	0xFE8
 25830                           postdec1	equ	0xFE5
 25831                           fsr1l	equ	0xFE1
 25832                           indf2	equ	0xFDF
 25833                           postinc2	equ	0xFDE
 25834                           postdec2	equ	0xFDD
 25835                           fsr2h	equ	0xFDA
 25836                           fsr2l	equ	0xFD9
 25837                           status	equ	0xFD8
 25838                           
 25839 ;; *************** function _I2C_Init *****************
 25840 ;; Defined at:
 25841 ;;		line 14 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/I2C_Soft.c"
 25842 ;; Parameters:    Size  Location     Type
 25843 ;;  c               4   14[BANK0 ] unsigned long 
 25844 ;; Auto vars:     Size  Location     Type
 25845 ;;		None
 25846 ;; Return value:  Size  Location     Type
 25847 ;;		None               void
 25848 ;; Registers used:
 25849 ;;		wreg, cstack
 25850 ;; Tracked objects:
 25851 ;;		On entry : 0/0
 25852 ;;		On exit  : 0/0
 25853 ;;		Unchanged: 0/0
 25854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25855 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25858 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25859 ;;Total ram usage:        4 bytes
 25860 ;; Hardware stack levels used:    1
 25861 ;; Hardware stack levels required when called:    7
 25862 ;; This function calls:
 25863 ;;		_i2cHighScl
 25864 ;;		_i2cHighSda
 25865 ;; This function is called by:
 25866 ;;		_Do_Init
 25867 ;; This function uses a non-reentrant model
 25868 ;;
 25869                           
 25870                           	psect	text107
 25871  0092B6                     __ptext107:
 25872                           	opt stack 0
 25873  0092B6                     _I2C_Init:
 25874                           	opt stack 22
 25875                           
 25876                           ;I2C_Soft.c: 16: i2cHighScl();
 25877                           
 25878                           ;incstack = 0
 25879  0092B6  EC50  F049         	call	_i2cHighScl	;wreg free
 25880                           
 25881                           ;I2C_Soft.c: 17: i2cHighSda();
 25882  0092BA  EC7B  F049         	call	_i2cHighSda	;wreg free
 25883  0092BE  0012               	return		;funcret
 25884  0092C0                     __end_of_I2C_Init:
 25885                           	opt stack 0
 25886                           tblptru	equ	0xFF8
 25887                           tblptrh	equ	0xFF7
 25888                           tblptrl	equ	0xFF6
 25889                           tablat	equ	0xFF5
 25890                           prodh	equ	0xFF4
 25891                           prodl	equ	0xFF3
 25892                           intcon	equ	0xFF2
 25893                           intcon2	equ	0xFF1
 25894                           intcon3	equ	0xFF0
 25895                           postinc0	equ	0xFEE
 25896                           wreg	equ	0xFE8
 25897                           postdec1	equ	0xFE5
 25898                           fsr1l	equ	0xFE1
 25899                           indf2	equ	0xFDF
 25900                           postinc2	equ	0xFDE
 25901                           postdec2	equ	0xFDD
 25902                           fsr2h	equ	0xFDA
 25903                           fsr2l	equ	0xFD9
 25904                           status	equ	0xFD8
 25905                           
 25906 ;; *************** function _DS1621_Init *****************
 25907 ;; Defined at:
 25908 ;;		line 22 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/I2C_Support.c"
 25909 ;; Parameters:    Size  Location     Type
 25910 ;;		None
 25911 ;; Auto vars:     Size  Location     Type
 25912 ;;  Device          1   19[BANK0 ] unsigned char 
 25913 ;; Return value:  Size  Location     Type
 25914 ;;		None               void
 25915 ;; Registers used:
 25916 ;;		wreg, status,2, status,0, cstack
 25917 ;; Tracked objects:
 25918 ;;		On entry : 0/0
 25919 ;;		On exit  : 0/0
 25920 ;;		Unchanged: 0/0
 25921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25923 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25925 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25926 ;;Total ram usage:        1 bytes
 25927 ;; Hardware stack levels used:    1
 25928 ;; Hardware stack levels required when called:    9
 25929 ;; This function calls:
 25930 ;;		_I2C_Write_Cmd_Only
 25931 ;;		_I2C_Write_Cmd_Write_Data
 25932 ;; This function is called by:
 25933 ;;		_Do_Init
 25934 ;; This function uses a non-reentrant model
 25935 ;;
 25936                           
 25937                           	psect	text108
 25938  008E88                     __ptext108:
 25939                           	opt stack 0
 25940  008E88                     _DS1621_Init:
 25941                           	opt stack 20
 25942                           
 25943                           ;I2C_Support.c: 24: char Device = 0x48;
 25944                           
 25945                           ;incstack = 0
 25946  008E88  0E48               	movlw	72
 25947  008E8A  0100               	movlb	0	; () banked
 25948  008E8C  6F93               	movwf	DS1621_Init@Device& (0+255),b
 25949                           
 25950                           ; BSR set to: 0
 25951                           ;I2C_Support.c: 25: I2C_Write_Cmd_Write_Data (Device, 0xAC, 0x02);
 25952  008E8E  0EAC               	movlw	172
 25953  008E90  0100               	movlb	0	; () banked
 25954  008E92  6F90               	movwf	I2C_Write_Cmd_Write_Data@Cmd& (0+255),b
 25955  008E94  0E02               	movlw	2
 25956  008E96  0100               	movlb	0	; () banked
 25957  008E98  6F91               	movwf	I2C_Write_Cmd_Write_Data@Data_Out& (0+255),b
 25958  008E9A  0100               	movlb	0	; () banked
 25959  008E9C  5193               	movf	DS1621_Init@Device& (0+255),w,b
 25960  008E9E  EC81  F047         	call	_I2C_Write_Cmd_Write_Data
 25961                           
 25962                           ;I2C_Support.c: 26: I2C_Write_Cmd_Only(Device, 0xEE);
 25963  008EA2  0EEE               	movlw	238
 25964  008EA4  0100               	movlb	0	; () banked
 25965  008EA6  6F90               	movwf	I2C_Write_Cmd_Only@Cmd& (0+255),b
 25966  008EA8  0100               	movlb	0	; () banked
 25967  008EAA  5193               	movf	DS1621_Init@Device& (0+255),w,b
 25968  008EAC  EC2D  F048         	call	_I2C_Write_Cmd_Only
 25969  008EB0  0012               	return		;funcret
 25970  008EB2                     __end_of_DS1621_Init:
 25971                           	opt stack 0
 25972                           tblptru	equ	0xFF8
 25973                           tblptrh	equ	0xFF7
 25974                           tblptrl	equ	0xFF6
 25975                           tablat	equ	0xFF5
 25976                           prodh	equ	0xFF4
 25977                           prodl	equ	0xFF3
 25978                           intcon	equ	0xFF2
 25979                           intcon2	equ	0xFF1
 25980                           intcon3	equ	0xFF0
 25981                           postinc0	equ	0xFEE
 25982                           wreg	equ	0xFE8
 25983                           postdec1	equ	0xFE5
 25984                           fsr1l	equ	0xFE1
 25985                           indf2	equ	0xFDF
 25986                           postinc2	equ	0xFDE
 25987                           postdec2	equ	0xFDD
 25988                           fsr2h	equ	0xFDA
 25989                           fsr2l	equ	0xFD9
 25990                           status	equ	0xFD8
 25991                           
 25992 ;; *************** function _I2C_Write_Cmd_Write_Data *****************
 25993 ;; Defined at:
 25994 ;;		line 152 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/I2C_Soft.c"
 25995 ;; Parameters:    Size  Location     Type
 25996 ;;  Device          1    wreg     unsigned char 
 25997 ;;  Cmd             1   16[BANK0 ] unsigned char 
 25998 ;;  Data_Out        1   17[BANK0 ] unsigned char 
 25999 ;; Auto vars:     Size  Location     Type
 26000 ;;  Device          1   18[BANK0 ] unsigned char 
 26001 ;; Return value:  Size  Location     Type
 26002 ;;		None               void
 26003 ;; Registers used:
 26004 ;;		wreg, status,2, status,0, cstack
 26005 ;; Tracked objects:
 26006 ;;		On entry : 0/0
 26007 ;;		On exit  : 0/0
 26008 ;;		Unchanged: 0/0
 26009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26010 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26011 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26013 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26014 ;;Total ram usage:        3 bytes
 26015 ;; Hardware stack levels used:    1
 26016 ;; Hardware stack levels required when called:    8
 26017 ;; This function calls:
 26018 ;;		_I2C_Start
 26019 ;;		_I2C_Stop
 26020 ;;		_I2C_Write
 26021 ;; This function is called by:
 26022 ;;		_DS1621_Init
 26023 ;; This function uses a non-reentrant model
 26024 ;;
 26025                           
 26026                           	psect	text109
 26027  008F02                     __ptext109:
 26028                           	opt stack 0
 26029  008F02                     _I2C_Write_Cmd_Write_Data:
 26030                           	opt stack 20
 26031                           
 26032                           ;incstack = 0
 26033                           ;I2C_Write_Cmd_Write_Data@Device stored from wreg
 26034  008F02  0100               	movlb	0	; () banked
 26035  008F04  6F92               	movwf	I2C_Write_Cmd_Write_Data@Device& (0+255),b
 26036                           
 26037                           ; BSR set to: 0
 26038                           ;I2C_Soft.c: 154: I2C_Start();
 26039  008F06  EC08  F049         	call	_I2C_Start	;wreg free
 26040                           
 26041                           ;I2C_Soft.c: 155: I2C_Write((Device << 1) | 0);
 26042  008F0A  0100               	movlb	0	; () banked
 26043  008F0C  5192               	movf	I2C_Write_Cmd_Write_Data@Device& (0+255),w,b
 26044  008F0E  2592               	addwf	I2C_Write_Cmd_Write_Data@Device& (0+255),w,b
 26045  008F10  EC4E  F045         	call	_I2C_Write
 26046                           
 26047                           ;I2C_Soft.c: 156: I2C_Write(Cmd);
 26048  008F14  0100               	movlb	0	; () banked
 26049  008F16  5190               	movf	I2C_Write_Cmd_Write_Data@Cmd& (0+255),w,b
 26050  008F18  EC4E  F045         	call	_I2C_Write
 26051                           
 26052                           ;I2C_Soft.c: 157: I2C_Write(Data_Out);
 26053  008F1C  0100               	movlb	0	; () banked
 26054  008F1E  5191               	movf	I2C_Write_Cmd_Write_Data@Data_Out& (0+255),w,b
 26055  008F20  EC4E  F045         	call	_I2C_Write
 26056                           
 26057                           ;I2C_Soft.c: 158: I2C_Stop();
 26058  008F24  ECFF  F048         	call	_I2C_Stop	;wreg free
 26059  008F28  0012               	return		;funcret
 26060  008F2A                     __end_of_I2C_Write_Cmd_Write_Data:
 26061                           	opt stack 0
 26062                           tblptru	equ	0xFF8
 26063                           tblptrh	equ	0xFF7
 26064                           tblptrl	equ	0xFF6
 26065                           tablat	equ	0xFF5
 26066                           prodh	equ	0xFF4
 26067                           prodl	equ	0xFF3
 26068                           intcon	equ	0xFF2
 26069                           intcon2	equ	0xFF1
 26070                           intcon3	equ	0xFF0
 26071                           postinc0	equ	0xFEE
 26072                           wreg	equ	0xFE8
 26073                           postdec1	equ	0xFE5
 26074                           fsr1l	equ	0xFE1
 26075                           indf2	equ	0xFDF
 26076                           postinc2	equ	0xFDE
 26077                           postdec2	equ	0xFDD
 26078                           fsr2h	equ	0xFDA
 26079                           fsr2l	equ	0xFD9
 26080                           status	equ	0xFD8
 26081                           
 26082 ;; *************** function _I2C_Write_Cmd_Only *****************
 26083 ;; Defined at:
 26084 ;;		line 144 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/I2C_Soft.c"
 26085 ;; Parameters:    Size  Location     Type
 26086 ;;  Device          1    wreg     unsigned char 
 26087 ;;  Cmd             1   16[BANK0 ] unsigned char 
 26088 ;; Auto vars:     Size  Location     Type
 26089 ;;  Device          1   17[BANK0 ] unsigned char 
 26090 ;; Return value:  Size  Location     Type
 26091 ;;		None               void
 26092 ;; Registers used:
 26093 ;;		wreg, status,2, status,0, cstack
 26094 ;; Tracked objects:
 26095 ;;		On entry : 0/0
 26096 ;;		On exit  : 0/0
 26097 ;;		Unchanged: 0/0
 26098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26099 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26100 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26102 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26103 ;;Total ram usage:        2 bytes
 26104 ;; Hardware stack levels used:    1
 26105 ;; Hardware stack levels required when called:    8
 26106 ;; This function calls:
 26107 ;;		_I2C_Start
 26108 ;;		_I2C_Stop
 26109 ;;		_I2C_Write
 26110 ;; This function is called by:
 26111 ;;		_DS1621_Init
 26112 ;; This function uses a non-reentrant model
 26113 ;;
 26114                           
 26115                           	psect	text110
 26116  00905A                     __ptext110:
 26117                           	opt stack 0
 26118  00905A                     _I2C_Write_Cmd_Only:
 26119                           	opt stack 20
 26120                           
 26121                           ;incstack = 0
 26122                           ;I2C_Write_Cmd_Only@Device stored from wreg
 26123  00905A  0100               	movlb	0	; () banked
 26124  00905C  6F91               	movwf	I2C_Write_Cmd_Only@Device& (0+255),b
 26125                           
 26126                           ; BSR set to: 0
 26127                           ;I2C_Soft.c: 146: I2C_Start();
 26128  00905E  EC08  F049         	call	_I2C_Start	;wreg free
 26129                           
 26130                           ;I2C_Soft.c: 147: I2C_Write((Device << 1) | 0);
 26131  009062  0100               	movlb	0	; () banked
 26132  009064  5191               	movf	I2C_Write_Cmd_Only@Device& (0+255),w,b
 26133  009066  2591               	addwf	I2C_Write_Cmd_Only@Device& (0+255),w,b
 26134  009068  EC4E  F045         	call	_I2C_Write
 26135                           
 26136                           ;I2C_Soft.c: 148: I2C_Write(Cmd);
 26137  00906C  0100               	movlb	0	; () banked
 26138  00906E  5190               	movf	I2C_Write_Cmd_Only@Cmd& (0+255),w,b
 26139  009070  EC4E  F045         	call	_I2C_Write
 26140                           
 26141                           ;I2C_Soft.c: 149: I2C_Stop();
 26142  009074  ECFF  F048         	call	_I2C_Stop	;wreg free
 26143  009078  0012               	return		;funcret
 26144  00907A                     __end_of_I2C_Write_Cmd_Only:
 26145                           	opt stack 0
 26146                           tblptru	equ	0xFF8
 26147                           tblptrh	equ	0xFF7
 26148                           tblptrl	equ	0xFF6
 26149                           tablat	equ	0xFF5
 26150                           prodh	equ	0xFF4
 26151                           prodl	equ	0xFF3
 26152                           intcon	equ	0xFF2
 26153                           intcon2	equ	0xFF1
 26154                           intcon3	equ	0xFF0
 26155                           postinc0	equ	0xFEE
 26156                           wreg	equ	0xFE8
 26157                           postdec1	equ	0xFE5
 26158                           fsr1l	equ	0xFE1
 26159                           indf2	equ	0xFDF
 26160                           postinc2	equ	0xFDE
 26161                           postdec2	equ	0xFDD
 26162                           fsr2h	equ	0xFDA
 26163                           fsr2l	equ	0xFD9
 26164                           status	equ	0xFD8
 26165                           
 26166 ;; *************** function _DS1621_Read_Temp *****************
 26167 ;; Defined at:
 26168 ;;		line 29 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/I2C_Support.c"
 26169 ;; Parameters:    Size  Location     Type
 26170 ;;		None
 26171 ;; Auto vars:     Size  Location     Type
 26172 ;;  Device          1   21[BANK0 ] unsigned char 
 26173 ;;  Data_Ret        1   20[BANK0 ] unsigned char 
 26174 ;;  Cmd             1   19[BANK0 ] unsigned char 
 26175 ;; Return value:  Size  Location     Type
 26176 ;;                  2   17[BANK0 ] int 
 26177 ;; Registers used:
 26178 ;;		wreg, status,2, status,0, cstack
 26179 ;; Tracked objects:
 26180 ;;		On entry : 0/0
 26181 ;;		On exit  : 0/0
 26182 ;;		Unchanged: 0/0
 26183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26184 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26185 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26187 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26188 ;;Total ram usage:        5 bytes
 26189 ;; Hardware stack levels used:    1
 26190 ;; Hardware stack levels required when called:    9
 26191 ;; This function calls:
 26192 ;;		_I2C_ReStart
 26193 ;;		_I2C_Read
 26194 ;;		_I2C_Start
 26195 ;;		_I2C_Stop
 26196 ;;		_I2C_Write
 26197 ;; This function is called by:
 26198 ;;		_main
 26199 ;; This function uses a non-reentrant model
 26200 ;;
 26201                           
 26202                           	psect	text111
 26203  008AE8                     __ptext111:
 26204                           	opt stack 0
 26205  008AE8                     _DS1621_Read_Temp:
 26206                           	opt stack 21
 26207                           
 26208                           ;I2C_Support.c: 32: char Device = 0x48;
 26209                           
 26210                           ;incstack = 0
 26211  008AE8  0E48               	movlw	72
 26212  008AEA  0100               	movlb	0	; () banked
 26213  008AEC  6F95               	movwf	DS1621_Read_Temp@Device& (0+255),b
 26214                           
 26215                           ;I2C_Support.c: 33: char Cmd = 0xAA;
 26216  008AEE  0EAA               	movlw	170
 26217  008AF0  0100               	movlb	0	; () banked
 26218  008AF2  6F93               	movwf	DS1621_Read_Temp@Cmd& (0+255),b
 26219                           
 26220                           ; BSR set to: 0
 26221                           ;I2C_Support.c: 34: char Data_Ret;
 26222                           ;I2C_Support.c: 35: I2C_Start();
 26223  008AF4  EC08  F049         	call	_I2C_Start	;wreg free
 26224                           
 26225                           ;I2C_Support.c: 36: I2C_Write((Device << 1) | 0);
 26226  008AF8  0100               	movlb	0	; () banked
 26227  008AFA  5195               	movf	DS1621_Read_Temp@Device& (0+255),w,b
 26228  008AFC  2595               	addwf	DS1621_Read_Temp@Device& (0+255),w,b
 26229  008AFE  EC4E  F045         	call	_I2C_Write
 26230                           
 26231                           ;I2C_Support.c: 37: I2C_Write(Cmd);
 26232  008B02  0100               	movlb	0	; () banked
 26233  008B04  5193               	movf	DS1621_Read_Temp@Cmd& (0+255),w,b
 26234  008B06  EC4E  F045         	call	_I2C_Write
 26235                           
 26236                           ;I2C_Support.c: 38: I2C_ReStart();
 26237  008B0A  EC93  F048         	call	_I2C_ReStart	;wreg free
 26238                           
 26239                           ;I2C_Support.c: 39: I2C_Write((Device << 1) | 1);
 26240  008B0E  80D8               	bsf	status,0,c
 26241  008B10  0100               	movlb	0	; () banked
 26242  008B12  3595               	rlcf	DS1621_Read_Temp@Device& (0+255),w,b
 26243  008B14  EC4E  F045         	call	_I2C_Write
 26244                           
 26245                           ;I2C_Support.c: 40: Data_Ret = I2C_Read(0);
 26246  008B18  0E00               	movlw	0
 26247  008B1A  EC7F  F044         	call	_I2C_Read
 26248  008B1E  0100               	movlb	0	; () banked
 26249  008B20  6F94               	movwf	DS1621_Read_Temp@Data_Ret& (0+255),b
 26250                           
 26251                           ; BSR set to: 0
 26252                           ;I2C_Support.c: 41: I2C_Stop();
 26253  008B22  ECFF  F048         	call	_I2C_Stop	;wreg free
 26254                           
 26255                           ;I2C_Support.c: 42: return Data_Ret;
 26256  008B26  C094  F091         	movff	DS1621_Read_Temp@Data_Ret,?_DS1621_Read_Temp
 26257  008B2A  0100               	movlb	0	; () banked
 26258  008B2C  6B92               	clrf	(?_DS1621_Read_Temp+1)& (0+255),b
 26259  008B2E  D000               	goto	l205
 26260  008B30                     l205:
 26261                           
 26262                           ; BSR set to: 0
 26263  008B30  0012               	return		;funcret
 26264  008B32                     __end_of_DS1621_Read_Temp:
 26265                           	opt stack 0
 26266                           tblptru	equ	0xFF8
 26267                           tblptrh	equ	0xFF7
 26268                           tblptrl	equ	0xFF6
 26269                           tablat	equ	0xFF5
 26270                           prodh	equ	0xFF4
 26271                           prodl	equ	0xFF3
 26272                           intcon	equ	0xFF2
 26273                           intcon2	equ	0xFF1
 26274                           intcon3	equ	0xFF0
 26275                           postinc0	equ	0xFEE
 26276                           wreg	equ	0xFE8
 26277                           postdec1	equ	0xFE5
 26278                           fsr1l	equ	0xFE1
 26279                           indf2	equ	0xFDF
 26280                           postinc2	equ	0xFDE
 26281                           postdec2	equ	0xFDD
 26282                           fsr2h	equ	0xFDA
 26283                           fsr2l	equ	0xFD9
 26284                           status	equ	0xFD8
 26285                           
 26286 ;; *************** function _I2C_Write *****************
 26287 ;; Defined at:
 26288 ;;		line 41 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/I2C_Soft.c"
 26289 ;; Parameters:    Size  Location     Type
 26290 ;;  outByte         1    wreg     unsigned char 
 26291 ;; Auto vars:     Size  Location     Type
 26292 ;;  outByte         1   14[BANK0 ] unsigned char 
 26293 ;;  n               1   15[BANK0 ] unsigned char 
 26294 ;; Return value:  Size  Location     Type
 26295 ;;		None               void
 26296 ;; Registers used:
 26297 ;;		wreg, status,2, status,0, cstack
 26298 ;; Tracked objects:
 26299 ;;		On entry : 0/0
 26300 ;;		On exit  : 0/0
 26301 ;;		Unchanged: 0/0
 26302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26304 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26306 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26307 ;;Total ram usage:        2 bytes
 26308 ;; Hardware stack levels used:    1
 26309 ;; Hardware stack levels required when called:    7
 26310 ;; This function calls:
 26311 ;;		_i2cHighScl
 26312 ;;		_i2cHighSda
 26313 ;;		_i2cLowScl
 26314 ;;		_i2cLowSda
 26315 ;; This function is called by:
 26316 ;;		_I2C_Write_Address_Read_One_Byte
 26317 ;;		_I2C_Write_Address_Write_One_Byte
 26318 ;;		_I2C_Write_Cmd_Only
 26319 ;;		_I2C_Write_Cmd_Write_Data
 26320 ;;		_DS1621_Read_Temp
 26321 ;;		_DS3231_Read_Time
 26322 ;;		_DS3231_Write_Time
 26323 ;;		_DS3231_Read_Alarm_Time
 26324 ;;		_DS3231_Init
 26325 ;;		_DS3231_Write_Alarm_Time
 26326 ;;		_I2C_Write_Cmd_Read_One_Byte
 26327 ;;		_DS3231_Setup_Time
 26328 ;;		_DS3231_Write_Initial_Alarm_Time
 26329 ;; This function uses a non-reentrant model
 26330 ;;
 26331                           
 26332                           	psect	text112
 26333  008A9C                     __ptext112:
 26334                           	opt stack 0
 26335  008A9C                     _I2C_Write:
 26336                           	opt stack 20
 26337                           
 26338                           ; BSR set to: 0
 26339                           ;incstack = 0
 26340                           ;I2C_Write@outByte stored from wreg
 26341  008A9C  0100               	movlb	0	; () banked
 26342  008A9E  6F8E               	movwf	I2C_Write@outByte& (0+255),b
 26343                           
 26344                           ; BSR set to: 0
 26345                           ;I2C_Soft.c: 43: unsigned char n;
 26346                           ;I2C_Soft.c: 44: for(n=0; n<8; n++)
 26347  008AA0  0E00               	movlw	0
 26348  008AA2  0100               	movlb	0	; () banked
 26349  008AA4  6F8F               	movwf	I2C_Write@n& (0+255),b
 26350  008AA6                     l7563:
 26351                           
 26352                           ; BSR set to: 0
 26353  008AA6  0E07               	movlw	7
 26354  008AA8  0100               	movlb	0	; () banked
 26355  008AAA  658F               	cpfsgt	I2C_Write@n& (0+255),b
 26356  008AAC  D001               	goto	l93
 26357                           
 26358                           ; BSR set to: 0
 26359  008AAE  D015               	goto	l7581
 26360  008AB0                     l93:
 26361                           
 26362                           ; BSR set to: 0
 26363                           ;I2C_Soft.c: 45: {
 26364                           ;I2C_Soft.c: 46: if(outByte&0x80) i2cHighSda();
 26365  008AB0  0100               	movlb	0	; () banked
 26366  008AB2  AF8E               	btfss	I2C_Write@outByte& (0+255),7,b
 26367  008AB4  D003               	goto	l7569
 26368                           
 26369                           ; BSR set to: 0
 26370  008AB6  EC7B  F049         	call	_i2cHighSda	;wreg free
 26371  008ABA  D003               	goto	l7571
 26372  008ABC                     l7569:
 26373                           
 26374                           ;I2C_Soft.c: 47: else i2cLowSda();
 26375  008ABC  EC65  F049         	call	_i2cLowSda	;wreg free
 26376  008AC0  D000               	goto	l7571
 26377  008AC2                     l7571:
 26378                           
 26379                           ;I2C_Soft.c: 48: i2cHighScl();
 26380  008AC2  EC50  F049         	call	_i2cHighScl	;wreg free
 26381                           
 26382                           ;I2C_Soft.c: 49: i2cLowScl();
 26383  008AC6  EC77  F049         	call	_i2cLowScl	;wreg free
 26384                           
 26385                           ;I2C_Soft.c: 50: outByte = outByte << 1;
 26386  008ACA  0100               	movlb	0	; () banked
 26387  008ACC  518E               	movf	I2C_Write@outByte& (0+255),w,b
 26388  008ACE  258E               	addwf	I2C_Write@outByte& (0+255),w,b
 26389  008AD0  0100               	movlb	0	; () banked
 26390  008AD2  6F8E               	movwf	I2C_Write@outByte& (0+255),b
 26391                           
 26392                           ; BSR set to: 0
 26393  008AD4  0100               	movlb	0	; () banked
 26394  008AD6  2B8F               	incf	I2C_Write@n& (0+255),f,b
 26395  008AD8  D7E6               	goto	l7563
 26396  008ADA                     l7581:
 26397                           
 26398                           ; BSR set to: 0
 26399                           ;I2C_Soft.c: 51: }
 26400                           ;I2C_Soft.c: 52: i2cHighSda();
 26401  008ADA  EC7B  F049         	call	_i2cHighSda	;wreg free
 26402                           
 26403                           ;I2C_Soft.c: 53: i2cHighScl();
 26404  008ADE  EC50  F049         	call	_i2cHighScl	;wreg free
 26405                           
 26406                           ;I2C_Soft.c: 54: i2cLowScl();
 26407  008AE2  EC77  F049         	call	_i2cLowScl	;wreg free
 26408  008AE6  0012               	return		;funcret
 26409  008AE8                     __end_of_I2C_Write:
 26410                           	opt stack 0
 26411                           tblptru	equ	0xFF8
 26412                           tblptrh	equ	0xFF7
 26413                           tblptrl	equ	0xFF6
 26414                           tablat	equ	0xFF5
 26415                           prodh	equ	0xFF4
 26416                           prodl	equ	0xFF3
 26417                           intcon	equ	0xFF2
 26418                           intcon2	equ	0xFF1
 26419                           intcon3	equ	0xFF0
 26420                           postinc0	equ	0xFEE
 26421                           wreg	equ	0xFE8
 26422                           postdec1	equ	0xFE5
 26423                           fsr1l	equ	0xFE1
 26424                           indf2	equ	0xFDF
 26425                           postinc2	equ	0xFDE
 26426                           postdec2	equ	0xFDD
 26427                           fsr2h	equ	0xFDA
 26428                           fsr2l	equ	0xFD9
 26429                           status	equ	0xFD8
 26430                           
 26431 ;; *************** function _I2C_Stop *****************
 26432 ;; Defined at:
 26433 ;;		line 88 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/I2C_Soft.c"
 26434 ;; Parameters:    Size  Location     Type
 26435 ;;		None
 26436 ;; Auto vars:     Size  Location     Type
 26437 ;;		None
 26438 ;; Return value:  Size  Location     Type
 26439 ;;		None               void
 26440 ;; Registers used:
 26441 ;;		wreg, cstack
 26442 ;; Tracked objects:
 26443 ;;		On entry : 0/0
 26444 ;;		On exit  : 0/0
 26445 ;;		Unchanged: 0/0
 26446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26451 ;;Total ram usage:        0 bytes
 26452 ;; Hardware stack levels used:    1
 26453 ;; Hardware stack levels required when called:    7
 26454 ;; This function calls:
 26455 ;;		_i2cHighScl
 26456 ;;		_i2cHighSda
 26457 ;;		_i2cLowScl
 26458 ;;		_i2cLowSda
 26459 ;; This function is called by:
 26460 ;;		_I2C_Write_Address_Read_One_Byte
 26461 ;;		_I2C_Write_Address_Write_One_Byte
 26462 ;;		_I2C_Write_Cmd_Only
 26463 ;;		_I2C_Write_Cmd_Write_Data
 26464 ;;		_DS1621_Read_Temp
 26465 ;;		_DS3231_Read_Time
 26466 ;;		_DS3231_Write_Time
 26467 ;;		_DS3231_Read_Alarm_Time
 26468 ;;		_DS3231_Init
 26469 ;;		_DS3231_Write_Alarm_Time
 26470 ;;		_I2C_Write_Cmd_Read_One_Byte
 26471 ;;		_DS3231_Setup_Time
 26472 ;;		_DS3231_Write_Initial_Alarm_Time
 26473 ;; This function uses a non-reentrant model
 26474 ;;
 26475                           
 26476                           	psect	text113
 26477  0091FE                     __ptext113:
 26478                           	opt stack 0
 26479  0091FE                     _I2C_Stop:
 26480                           	opt stack 20
 26481                           
 26482                           ;I2C_Soft.c: 90: i2cLowScl();
 26483                           
 26484                           ;incstack = 0
 26485  0091FE  EC77  F049         	call	_i2cLowScl	;wreg free
 26486                           
 26487                           ;I2C_Soft.c: 91: i2cLowSda();
 26488  009202  EC65  F049         	call	_i2cLowSda	;wreg free
 26489                           
 26490                           ;I2C_Soft.c: 92: i2cHighScl();
 26491  009206  EC50  F049         	call	_i2cHighScl	;wreg free
 26492                           
 26493                           ;I2C_Soft.c: 93: i2cHighSda();
 26494  00920A  EC7B  F049         	call	_i2cHighSda	;wreg free
 26495  00920E  0012               	return		;funcret
 26496  009210                     __end_of_I2C_Stop:
 26497                           	opt stack 0
 26498                           tblptru	equ	0xFF8
 26499                           tblptrh	equ	0xFF7
 26500                           tblptrl	equ	0xFF6
 26501                           tablat	equ	0xFF5
 26502                           prodh	equ	0xFF4
 26503                           prodl	equ	0xFF3
 26504                           intcon	equ	0xFF2
 26505                           intcon2	equ	0xFF1
 26506                           intcon3	equ	0xFF0
 26507                           postinc0	equ	0xFEE
 26508                           wreg	equ	0xFE8
 26509                           postdec1	equ	0xFE5
 26510                           fsr1l	equ	0xFE1
 26511                           indf2	equ	0xFDF
 26512                           postinc2	equ	0xFDE
 26513                           postdec2	equ	0xFDD
 26514                           fsr2h	equ	0xFDA
 26515                           fsr2l	equ	0xFD9
 26516                           status	equ	0xFD8
 26517                           
 26518 ;; *************** function _I2C_Start *****************
 26519 ;; Defined at:
 26520 ;;		line 71 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/I2C_Soft.c"
 26521 ;; Parameters:    Size  Location     Type
 26522 ;;		None
 26523 ;; Auto vars:     Size  Location     Type
 26524 ;;		None
 26525 ;; Return value:  Size  Location     Type
 26526 ;;		None               void
 26527 ;; Registers used:
 26528 ;;		wreg, cstack
 26529 ;; Tracked objects:
 26530 ;;		On entry : 0/0
 26531 ;;		On exit  : 0/0
 26532 ;;		Unchanged: 0/0
 26533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26538 ;;Total ram usage:        0 bytes
 26539 ;; Hardware stack levels used:    1
 26540 ;; Hardware stack levels required when called:    7
 26541 ;; This function calls:
 26542 ;;		_i2cHighScl
 26543 ;;		_i2cHighSda
 26544 ;;		_i2cLowScl
 26545 ;;		_i2cLowSda
 26546 ;; This function is called by:
 26547 ;;		_I2C_Write_Address_Read_One_Byte
 26548 ;;		_I2C_Write_Address_Write_One_Byte
 26549 ;;		_I2C_Write_Cmd_Only
 26550 ;;		_I2C_Write_Cmd_Write_Data
 26551 ;;		_DS1621_Read_Temp
 26552 ;;		_DS3231_Read_Time
 26553 ;;		_DS3231_Write_Time
 26554 ;;		_DS3231_Read_Alarm_Time
 26555 ;;		_DS3231_Init
 26556 ;;		_DS3231_Write_Alarm_Time
 26557 ;;		_I2C_Write_Cmd_Read_One_Byte
 26558 ;;		_DS3231_Setup_Time
 26559 ;;		_DS3231_Write_Initial_Alarm_Time
 26560 ;; This function uses a non-reentrant model
 26561 ;;
 26562                           
 26563                           	psect	text114
 26564  009210                     __ptext114:
 26565                           	opt stack 0
 26566  009210                     _I2C_Start:
 26567                           	opt stack 20
 26568                           
 26569                           ;I2C_Soft.c: 73: i2cHighSda();
 26570                           
 26571                           ;incstack = 0
 26572  009210  EC7B  F049         	call	_i2cHighSda	;wreg free
 26573                           
 26574                           ;I2C_Soft.c: 74: i2cHighScl();
 26575  009214  EC50  F049         	call	_i2cHighScl	;wreg free
 26576                           
 26577                           ;I2C_Soft.c: 75: i2cLowSda();
 26578  009218  EC65  F049         	call	_i2cLowSda	;wreg free
 26579                           
 26580                           ;I2C_Soft.c: 76: i2cLowScl();
 26581  00921C  EC77  F049         	call	_i2cLowScl	;wreg free
 26582  009220  0012               	return		;funcret
 26583  009222                     __end_of_I2C_Start:
 26584                           	opt stack 0
 26585                           tblptru	equ	0xFF8
 26586                           tblptrh	equ	0xFF7
 26587                           tblptrl	equ	0xFF6
 26588                           tablat	equ	0xFF5
 26589                           prodh	equ	0xFF4
 26590                           prodl	equ	0xFF3
 26591                           intcon	equ	0xFF2
 26592                           intcon2	equ	0xFF1
 26593                           intcon3	equ	0xFF0
 26594                           postinc0	equ	0xFEE
 26595                           wreg	equ	0xFE8
 26596                           postdec1	equ	0xFE5
 26597                           fsr1l	equ	0xFE1
 26598                           indf2	equ	0xFDF
 26599                           postinc2	equ	0xFDE
 26600                           postdec2	equ	0xFDD
 26601                           fsr2h	equ	0xFDA
 26602                           fsr2l	equ	0xFD9
 26603                           status	equ	0xFD8
 26604                           
 26605 ;; *************** function _I2C_Read *****************
 26606 ;; Defined at:
 26607 ;;		line 20 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/I2C_Soft.c"
 26608 ;; Parameters:    Size  Location     Type
 26609 ;;  ack             1    wreg     unsigned char 
 26610 ;; Auto vars:     Size  Location     Type
 26611 ;;  ack             1   14[BANK0 ] unsigned char 
 26612 ;;  inByte          1   16[BANK0 ] unsigned char 
 26613 ;;  n               1   15[BANK0 ] unsigned char 
 26614 ;; Return value:  Size  Location     Type
 26615 ;;                  1    wreg      unsigned char 
 26616 ;; Registers used:
 26617 ;;		wreg, status,2, status,0, cstack
 26618 ;; Tracked objects:
 26619 ;;		On entry : 0/0
 26620 ;;		On exit  : 0/0
 26621 ;;		Unchanged: 0/0
 26622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26624 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26626 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26627 ;;Total ram usage:        3 bytes
 26628 ;; Hardware stack levels used:    1
 26629 ;; Hardware stack levels required when called:    8
 26630 ;; This function calls:
 26631 ;;		_i2cAck
 26632 ;;		_i2cHighScl
 26633 ;;		_i2cHighSda
 26634 ;;		_i2cLowScl
 26635 ;;		_i2cNack
 26636 ;; This function is called by:
 26637 ;;		_I2C_Write_Address_Read_One_Byte
 26638 ;;		_DS1621_Read_Temp
 26639 ;;		_DS3231_Read_Time
 26640 ;;		_DS3231_Read_Alarm_Time
 26641 ;;		_DS3231_Init
 26642 ;;		_I2C_Write_Cmd_Read_One_Byte
 26643 ;; This function uses a non-reentrant model
 26644 ;;
 26645                           
 26646                           	psect	text115
 26647  0088FE                     __ptext115:
 26648                           	opt stack 0
 26649  0088FE                     _I2C_Read:
 26650                           	opt stack 19
 26651                           
 26652                           ;incstack = 0
 26653                           ;I2C_Read@ack stored from wreg
 26654  0088FE  0100               	movlb	0	; () banked
 26655  008900  6F8E               	movwf	I2C_Read@ack& (0+255),b
 26656                           
 26657                           ; BSR set to: 0
 26658                           ;I2C_Soft.c: 22: unsigned char inByte, n;
 26659                           ;I2C_Soft.c: 23: i2cHighSda();
 26660  008902  EC7B  F049         	call	_i2cHighSda	;wreg free
 26661                           
 26662                           ;I2C_Soft.c: 24: for (n=0; n<8; n++)
 26663  008906  0E00               	movlw	0
 26664  008908  0100               	movlb	0	; () banked
 26665  00890A  6F8F               	movwf	I2C_Read@n& (0+255),b
 26666  00890C                     l7533:
 26667                           
 26668                           ; BSR set to: 0
 26669  00890C  0E07               	movlw	7
 26670  00890E  0100               	movlb	0	; () banked
 26671  008910  658F               	cpfsgt	I2C_Read@n& (0+255),b
 26672  008912  D001               	goto	l7537
 26673                           
 26674                           ; BSR set to: 0
 26675  008914  D013               	goto	l7551
 26676  008916                     l7537:
 26677                           
 26678                           ; BSR set to: 0
 26679                           ;I2C_Soft.c: 25: {
 26680                           ;I2C_Soft.c: 26: i2cHighScl();
 26681  008916  EC50  F049         	call	_i2cHighScl	;wreg free
 26682                           
 26683                           ;I2C_Soft.c: 28: if (PORTDbits.RD7)
 26684  00891A  AE83               	btfss	3971,7,c	;volatile
 26685  00891C  D004               	goto	l7543
 26686                           
 26687                           ;I2C_Soft.c: 29: inByte = (inByte << 1) | 0x01;
 26688  00891E  80D8               	bsf	status,0,c
 26689  008920  0100               	movlb	0	; () banked
 26690  008922  3790               	rlcf	I2C_Read@inByte& (0+255),f,b
 26691  008924  D006               	goto	l7545
 26692  008926                     l7543:
 26693                           
 26694                           ;I2C_Soft.c: 30: else
 26695                           ;I2C_Soft.c: 31: inByte = inByte << 1;
 26696  008926  0100               	movlb	0	; () banked
 26697  008928  5190               	movf	I2C_Read@inByte& (0+255),w,b
 26698  00892A  2590               	addwf	I2C_Read@inByte& (0+255),w,b
 26699  00892C  0100               	movlb	0	; () banked
 26700  00892E  6F90               	movwf	I2C_Read@inByte& (0+255),b
 26701  008930  D000               	goto	l7545
 26702  008932                     l7545:
 26703                           
 26704                           ; BSR set to: 0
 26705                           ;I2C_Soft.c: 32: i2cLowScl();
 26706  008932  EC77  F049         	call	_i2cLowScl	;wreg free
 26707  008936  0100               	movlb	0	; () banked
 26708  008938  2B8F               	incf	I2C_Read@n& (0+255),f,b
 26709  00893A  D7E8               	goto	l7533
 26710  00893C                     l7551:
 26711                           
 26712                           ; BSR set to: 0
 26713                           ;I2C_Soft.c: 33: }
 26714                           ;I2C_Soft.c: 34: if (ack) i2cAck();
 26715  00893C  0100               	movlb	0	; () banked
 26716  00893E  518E               	movf	I2C_Read@ack& (0+255),w,b
 26717  008940  0100               	movlb	0	; () banked
 26718  008942  B4D8               	btfsc	status,2,c
 26719  008944  D003               	goto	l7555
 26720                           
 26721                           ; BSR set to: 0
 26722  008946  EC11  F049         	call	_i2cAck	;wreg free
 26723  00894A  D003               	goto	l7557
 26724  00894C                     l7555:
 26725                           
 26726                           ;I2C_Soft.c: 35: else i2cNack();
 26727  00894C  EC60  F049         	call	_i2cNack	;wreg free
 26728  008950  D000               	goto	l7557
 26729  008952                     l7557:
 26730                           
 26731                           ;I2C_Soft.c: 38: return(inByte);
 26732  008952  0100               	movlb	0	; () banked
 26733  008954  5190               	movf	I2C_Read@inByte& (0+255),w,b
 26734  008956  D000               	goto	l90
 26735  008958                     l90:
 26736                           
 26737                           ; BSR set to: 0
 26738  008958  0012               	return		;funcret
 26739  00895A                     __end_of_I2C_Read:
 26740                           	opt stack 0
 26741                           tblptru	equ	0xFF8
 26742                           tblptrh	equ	0xFF7
 26743                           tblptrl	equ	0xFF6
 26744                           tablat	equ	0xFF5
 26745                           prodh	equ	0xFF4
 26746                           prodl	equ	0xFF3
 26747                           intcon	equ	0xFF2
 26748                           intcon2	equ	0xFF1
 26749                           intcon3	equ	0xFF0
 26750                           postinc0	equ	0xFEE
 26751                           wreg	equ	0xFE8
 26752                           postdec1	equ	0xFE5
 26753                           fsr1l	equ	0xFE1
 26754                           indf2	equ	0xFDF
 26755                           postinc2	equ	0xFDE
 26756                           postdec2	equ	0xFDD
 26757                           fsr2h	equ	0xFDA
 26758                           fsr2l	equ	0xFD9
 26759                           status	equ	0xFD8
 26760                           
 26761 ;; *************** function _i2cNack *****************
 26762 ;; Defined at:
 26763 ;;		line 57 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/I2C_Soft.c"
 26764 ;; Parameters:    Size  Location     Type
 26765 ;;		None
 26766 ;; Auto vars:     Size  Location     Type
 26767 ;;		None
 26768 ;; Return value:  Size  Location     Type
 26769 ;;		None               void
 26770 ;; Registers used:
 26771 ;;		wreg, cstack
 26772 ;; Tracked objects:
 26773 ;;		On entry : 0/0
 26774 ;;		On exit  : 0/0
 26775 ;;		Unchanged: 0/0
 26776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26781 ;;Total ram usage:        0 bytes
 26782 ;; Hardware stack levels used:    1
 26783 ;; Hardware stack levels required when called:    7
 26784 ;; This function calls:
 26785 ;;		_i2cHighScl
 26786 ;;		_i2cLowScl
 26787 ;; This function is called by:
 26788 ;;		_I2C_Read
 26789 ;; This function uses a non-reentrant model
 26790 ;;
 26791                           
 26792                           	psect	text116
 26793  0092C0                     __ptext116:
 26794                           	opt stack 0
 26795  0092C0                     _i2cNack:
 26796                           	opt stack 19
 26797                           
 26798                           ;I2C_Soft.c: 59: i2cHighScl();
 26799                           
 26800                           ; BSR set to: 0
 26801                           ;incstack = 0
 26802  0092C0  EC50  F049         	call	_i2cHighScl	;wreg free
 26803                           
 26804                           ;I2C_Soft.c: 60: i2cLowScl();
 26805  0092C4  EC77  F049         	call	_i2cLowScl	;wreg free
 26806  0092C8  0012               	return		;funcret
 26807  0092CA                     __end_of_i2cNack:
 26808                           	opt stack 0
 26809                           tblptru	equ	0xFF8
 26810                           tblptrh	equ	0xFF7
 26811                           tblptrl	equ	0xFF6
 26812                           tablat	equ	0xFF5
 26813                           prodh	equ	0xFF4
 26814                           prodl	equ	0xFF3
 26815                           intcon	equ	0xFF2
 26816                           intcon2	equ	0xFF1
 26817                           intcon3	equ	0xFF0
 26818                           postinc0	equ	0xFEE
 26819                           wreg	equ	0xFE8
 26820                           postdec1	equ	0xFE5
 26821                           fsr1l	equ	0xFE1
 26822                           indf2	equ	0xFDF
 26823                           postinc2	equ	0xFDE
 26824                           postdec2	equ	0xFDD
 26825                           fsr2h	equ	0xFDA
 26826                           fsr2l	equ	0xFD9
 26827                           status	equ	0xFD8
 26828                           
 26829 ;; *************** function _i2cAck *****************
 26830 ;; Defined at:
 26831 ;;		line 63 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/I2C_Soft.c"
 26832 ;; Parameters:    Size  Location     Type
 26833 ;;		None
 26834 ;; Auto vars:     Size  Location     Type
 26835 ;;		None
 26836 ;; Return value:  Size  Location     Type
 26837 ;;		None               void
 26838 ;; Registers used:
 26839 ;;		wreg, cstack
 26840 ;; Tracked objects:
 26841 ;;		On entry : 0/0
 26842 ;;		On exit  : 0/0
 26843 ;;		Unchanged: 0/0
 26844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26849 ;;Total ram usage:        0 bytes
 26850 ;; Hardware stack levels used:    1
 26851 ;; Hardware stack levels required when called:    7
 26852 ;; This function calls:
 26853 ;;		_i2cHighScl
 26854 ;;		_i2cHighSda
 26855 ;;		_i2cLowScl
 26856 ;;		_i2cLowSda
 26857 ;; This function is called by:
 26858 ;;		_I2C_Read
 26859 ;; This function uses a non-reentrant model
 26860 ;;
 26861                           
 26862                           	psect	text117
 26863  009222                     __ptext117:
 26864                           	opt stack 0
 26865  009222                     _i2cAck:
 26866                           	opt stack 19
 26867                           
 26868                           ;I2C_Soft.c: 65: i2cLowSda();
 26869                           
 26870                           ;incstack = 0
 26871  009222  EC65  F049         	call	_i2cLowSda	;wreg free
 26872                           
 26873                           ;I2C_Soft.c: 66: i2cHighScl();
 26874  009226  EC50  F049         	call	_i2cHighScl	;wreg free
 26875                           
 26876                           ;I2C_Soft.c: 67: i2cLowScl();
 26877  00922A  EC77  F049         	call	_i2cLowScl	;wreg free
 26878                           
 26879                           ;I2C_Soft.c: 68: i2cHighSda();
 26880  00922E  EC7B  F049         	call	_i2cHighSda	;wreg free
 26881  009232  0012               	return		;funcret
 26882  009234                     __end_of_i2cAck:
 26883                           	opt stack 0
 26884                           tblptru	equ	0xFF8
 26885                           tblptrh	equ	0xFF7
 26886                           tblptrl	equ	0xFF6
 26887                           tablat	equ	0xFF5
 26888                           prodh	equ	0xFF4
 26889                           prodl	equ	0xFF3
 26890                           intcon	equ	0xFF2
 26891                           intcon2	equ	0xFF1
 26892                           intcon3	equ	0xFF0
 26893                           postinc0	equ	0xFEE
 26894                           wreg	equ	0xFE8
 26895                           postdec1	equ	0xFE5
 26896                           fsr1l	equ	0xFE1
 26897                           indf2	equ	0xFDF
 26898                           postinc2	equ	0xFDE
 26899                           postdec2	equ	0xFDD
 26900                           fsr2h	equ	0xFDA
 26901                           fsr2l	equ	0xFD9
 26902                           status	equ	0xFD8
 26903                           
 26904 ;; *************** function _I2C_ReStart *****************
 26905 ;; Defined at:
 26906 ;;		line 79 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/I2C_Soft.c"
 26907 ;; Parameters:    Size  Location     Type
 26908 ;;		None
 26909 ;; Auto vars:     Size  Location     Type
 26910 ;;		None
 26911 ;; Return value:  Size  Location     Type
 26912 ;;		None               void
 26913 ;; Registers used:
 26914 ;;		wreg, cstack
 26915 ;; Tracked objects:
 26916 ;;		On entry : 0/0
 26917 ;;		On exit  : 0/0
 26918 ;;		Unchanged: 0/0
 26919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26924 ;;Total ram usage:        0 bytes
 26925 ;; Hardware stack levels used:    1
 26926 ;; Hardware stack levels required when called:    7
 26927 ;; This function calls:
 26928 ;;		_i2cHighScl
 26929 ;;		_i2cHighSda
 26930 ;;		_i2cLowScl
 26931 ;;		_i2cLowSda
 26932 ;; This function is called by:
 26933 ;;		_I2C_Write_Address_Read_One_Byte
 26934 ;;		_DS1621_Read_Temp
 26935 ;;		_DS3231_Read_Time
 26936 ;;		_DS3231_Read_Alarm_Time
 26937 ;;		_DS3231_Init
 26938 ;;		_I2C_Write_Cmd_Read_One_Byte
 26939 ;; This function uses a non-reentrant model
 26940 ;;
 26941                           
 26942                           	psect	text118
 26943  009126                     __ptext118:
 26944                           	opt stack 0
 26945  009126                     _I2C_ReStart:
 26946                           	opt stack 20
 26947                           
 26948                           ;I2C_Soft.c: 81: i2cLowScl();
 26949                           
 26950                           ;incstack = 0
 26951  009126  EC77  F049         	call	_i2cLowScl	;wreg free
 26952                           
 26953                           ;I2C_Soft.c: 82: i2cHighSda();
 26954  00912A  EC7B  F049         	call	_i2cHighSda	;wreg free
 26955                           
 26956                           ;I2C_Soft.c: 83: i2cHighScl();
 26957  00912E  EC50  F049         	call	_i2cHighScl	;wreg free
 26958                           
 26959                           ;I2C_Soft.c: 84: i2cLowSda();
 26960  009132  EC65  F049         	call	_i2cLowSda	;wreg free
 26961                           
 26962                           ;I2C_Soft.c: 85: i2cLowScl();
 26963  009136  EC77  F049         	call	_i2cLowScl	;wreg free
 26964  00913A  0012               	return		;funcret
 26965  00913C                     __end_of_I2C_ReStart:
 26966                           	opt stack 0
 26967                           tblptru	equ	0xFF8
 26968                           tblptrh	equ	0xFF7
 26969                           tblptrl	equ	0xFF6
 26970                           tablat	equ	0xFF5
 26971                           prodh	equ	0xFF4
 26972                           prodl	equ	0xFF3
 26973                           intcon	equ	0xFF2
 26974                           intcon2	equ	0xFF1
 26975                           intcon3	equ	0xFF0
 26976                           postinc0	equ	0xFEE
 26977                           wreg	equ	0xFE8
 26978                           postdec1	equ	0xFE5
 26979                           fsr1l	equ	0xFE1
 26980                           indf2	equ	0xFDF
 26981                           postinc2	equ	0xFDE
 26982                           postdec2	equ	0xFDD
 26983                           fsr2h	equ	0xFDA
 26984                           fsr2l	equ	0xFD9
 26985                           status	equ	0xFD8
 26986                           
 26987 ;; *************** function _i2cLowSda *****************
 26988 ;; Defined at:
 26989 ;;		line 102 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/I2C_Soft.c"
 26990 ;; Parameters:    Size  Location     Type
 26991 ;;		None
 26992 ;; Auto vars:     Size  Location     Type
 26993 ;;		None
 26994 ;; Return value:  Size  Location     Type
 26995 ;;		None               void
 26996 ;; Registers used:
 26997 ;;		None
 26998 ;; Tracked objects:
 26999 ;;		On entry : 0/0
 27000 ;;		On exit  : 0/0
 27001 ;;		Unchanged: 0/0
 27002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27007 ;;Total ram usage:        0 bytes
 27008 ;; Hardware stack levels used:    1
 27009 ;; Hardware stack levels required when called:    6
 27010 ;; This function calls:
 27011 ;;		Nothing
 27012 ;; This function is called by:
 27013 ;;		_I2C_Write
 27014 ;;		_i2cAck
 27015 ;;		_I2C_Start
 27016 ;;		_I2C_ReStart
 27017 ;;		_I2C_Stop
 27018 ;; This function uses a non-reentrant model
 27019 ;;
 27020                           
 27021                           	psect	text119
 27022  0092CA                     __ptext119:
 27023                           	opt stack 0
 27024  0092CA                     _i2cLowSda:
 27025                           	opt stack 20
 27026                           
 27027                           ;I2C_Soft.c: 104: PORTDbits.RD7 = 0;
 27028                           
 27029                           ;incstack = 0
 27030  0092CA  9E83               	bcf	3971,7,c	;volatile
 27031                           
 27032                           ;I2C_Soft.c: 105: TRISDbits.RD7 = 0;
 27033  0092CC  9E95               	bcf	3989,7,c	;volatile
 27034                           
 27035                           ;I2C_Soft.c: 106: _delay((unsigned long)((2)*(8000000/4000000.0)));
 27036  0092CE  D000               	nop2		;2 cycle nop
 27037  0092D0  D000               	nop2		;2 cycle nop
 27038  0092D2  0012               	return		;funcret
 27039  0092D4                     __end_of_i2cLowSda:
 27040                           	opt stack 0
 27041                           tblptru	equ	0xFF8
 27042                           tblptrh	equ	0xFF7
 27043                           tblptrl	equ	0xFF6
 27044                           tablat	equ	0xFF5
 27045                           prodh	equ	0xFF4
 27046                           prodl	equ	0xFF3
 27047                           intcon	equ	0xFF2
 27048                           intcon2	equ	0xFF1
 27049                           intcon3	equ	0xFF0
 27050                           postinc0	equ	0xFEE
 27051                           wreg	equ	0xFE8
 27052                           postdec1	equ	0xFE5
 27053                           fsr1l	equ	0xFE1
 27054                           indf2	equ	0xFDF
 27055                           postinc2	equ	0xFDE
 27056                           postdec2	equ	0xFDD
 27057                           fsr2h	equ	0xFDA
 27058                           fsr2l	equ	0xFD9
 27059                           status	equ	0xFD8
 27060                           
 27061 ;; *************** function _i2cLowScl *****************
 27062 ;; Defined at:
 27063 ;;		line 115 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/I2C_Soft.c"
 27064 ;; Parameters:    Size  Location     Type
 27065 ;;		None
 27066 ;; Auto vars:     Size  Location     Type
 27067 ;;		None
 27068 ;; Return value:  Size  Location     Type
 27069 ;;		None               void
 27070 ;; Registers used:
 27071 ;;		None
 27072 ;; Tracked objects:
 27073 ;;		On entry : 0/0
 27074 ;;		On exit  : 0/0
 27075 ;;		Unchanged: 0/0
 27076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27081 ;;Total ram usage:        0 bytes
 27082 ;; Hardware stack levels used:    1
 27083 ;; Hardware stack levels required when called:    6
 27084 ;; This function calls:
 27085 ;;		Nothing
 27086 ;; This function is called by:
 27087 ;;		_I2C_Read
 27088 ;;		_I2C_Write
 27089 ;;		_i2cNack
 27090 ;;		_i2cAck
 27091 ;;		_I2C_Start
 27092 ;;		_I2C_ReStart
 27093 ;;		_I2C_Stop
 27094 ;; This function uses a non-reentrant model
 27095 ;;
 27096                           
 27097                           	psect	text120
 27098  0092EE                     __ptext120:
 27099                           	opt stack 0
 27100  0092EE                     _i2cLowScl:
 27101                           	opt stack 20
 27102                           
 27103                           ;I2C_Soft.c: 117: PORTDbits.RD6 = 0;
 27104                           
 27105                           ;incstack = 0
 27106  0092EE  9C83               	bcf	3971,6,c	;volatile
 27107                           
 27108                           ;I2C_Soft.c: 118: TRISDbits.RD6 = 0;
 27109  0092F0  9C95               	bcf	3989,6,c	;volatile
 27110                           
 27111                           ;I2C_Soft.c: 119: _delay((unsigned long)((1)*(8000000/4000000.0)));
 27112  0092F2  D000               	nop2		;2 cycle nop
 27113  0092F4  0012               	return		;funcret
 27114  0092F6                     __end_of_i2cLowScl:
 27115                           	opt stack 0
 27116                           tblptru	equ	0xFF8
 27117                           tblptrh	equ	0xFF7
 27118                           tblptrl	equ	0xFF6
 27119                           tablat	equ	0xFF5
 27120                           prodh	equ	0xFF4
 27121                           prodl	equ	0xFF3
 27122                           intcon	equ	0xFF2
 27123                           intcon2	equ	0xFF1
 27124                           intcon3	equ	0xFF0
 27125                           postinc0	equ	0xFEE
 27126                           wreg	equ	0xFE8
 27127                           postdec1	equ	0xFE5
 27128                           fsr1l	equ	0xFE1
 27129                           indf2	equ	0xFDF
 27130                           postinc2	equ	0xFDE
 27131                           postdec2	equ	0xFDD
 27132                           fsr2h	equ	0xFDA
 27133                           fsr2l	equ	0xFD9
 27134                           status	equ	0xFD8
 27135                           
 27136 ;; *************** function _i2cHighSda *****************
 27137 ;; Defined at:
 27138 ;;		line 96 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/I2C_Soft.c"
 27139 ;; Parameters:    Size  Location     Type
 27140 ;;		None
 27141 ;; Auto vars:     Size  Location     Type
 27142 ;;		None
 27143 ;; Return value:  Size  Location     Type
 27144 ;;		None               void
 27145 ;; Registers used:
 27146 ;;		None
 27147 ;; Tracked objects:
 27148 ;;		On entry : 0/0
 27149 ;;		On exit  : 0/0
 27150 ;;		Unchanged: 0/0
 27151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27156 ;;Total ram usage:        0 bytes
 27157 ;; Hardware stack levels used:    1
 27158 ;; Hardware stack levels required when called:    6
 27159 ;; This function calls:
 27160 ;;		Nothing
 27161 ;; This function is called by:
 27162 ;;		_I2C_Init
 27163 ;;		_I2C_Read
 27164 ;;		_I2C_Write
 27165 ;;		_i2cAck
 27166 ;;		_I2C_Start
 27167 ;;		_I2C_ReStart
 27168 ;;		_I2C_Stop
 27169 ;; This function uses a non-reentrant model
 27170 ;;
 27171                           
 27172                           	psect	text121
 27173  0092F6                     __ptext121:
 27174                           	opt stack 0
 27175  0092F6                     _i2cHighSda:
 27176                           	opt stack 20
 27177                           
 27178                           ;I2C_Soft.c: 98: TRISDbits.RD7 = 1;
 27179                           
 27180                           ;incstack = 0
 27181  0092F6  8E95               	bsf	3989,7,c	;volatile
 27182                           
 27183                           ;I2C_Soft.c: 99: _delay((unsigned long)((2)*(8000000/4000000.0)));
 27184  0092F8  D000               	nop2		;2 cycle nop
 27185  0092FA  D000               	nop2		;2 cycle nop
 27186  0092FC  0012               	return		;funcret
 27187  0092FE                     __end_of_i2cHighSda:
 27188                           	opt stack 0
 27189                           tblptru	equ	0xFF8
 27190                           tblptrh	equ	0xFF7
 27191                           tblptrl	equ	0xFF6
 27192                           tablat	equ	0xFF5
 27193                           prodh	equ	0xFF4
 27194                           prodl	equ	0xFF3
 27195                           intcon	equ	0xFF2
 27196                           intcon2	equ	0xFF1
 27197                           intcon3	equ	0xFF0
 27198                           postinc0	equ	0xFEE
 27199                           wreg	equ	0xFE8
 27200                           postdec1	equ	0xFE5
 27201                           fsr1l	equ	0xFE1
 27202                           indf2	equ	0xFDF
 27203                           postinc2	equ	0xFDE
 27204                           postdec2	equ	0xFDD
 27205                           fsr2h	equ	0xFDA
 27206                           fsr2l	equ	0xFD9
 27207                           status	equ	0xFD8
 27208                           
 27209 ;; *************** function _i2cHighScl *****************
 27210 ;; Defined at:
 27211 ;;		line 109 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/I2C_Soft.c"
 27212 ;; Parameters:    Size  Location     Type
 27213 ;;		None
 27214 ;; Auto vars:     Size  Location     Type
 27215 ;;		None
 27216 ;; Return value:  Size  Location     Type
 27217 ;;		None               void
 27218 ;; Registers used:
 27219 ;;		wreg
 27220 ;; Tracked objects:
 27221 ;;		On entry : 0/0
 27222 ;;		On exit  : 0/0
 27223 ;;		Unchanged: 0/0
 27224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27229 ;;Total ram usage:        0 bytes
 27230 ;; Hardware stack levels used:    1
 27231 ;; Hardware stack levels required when called:    6
 27232 ;; This function calls:
 27233 ;;		Nothing
 27234 ;; This function is called by:
 27235 ;;		_I2C_Init
 27236 ;;		_I2C_Read
 27237 ;;		_I2C_Write
 27238 ;;		_i2cNack
 27239 ;;		_i2cAck
 27240 ;;		_I2C_Start
 27241 ;;		_I2C_ReStart
 27242 ;;		_I2C_Stop
 27243 ;; This function uses a non-reentrant model
 27244 ;;
 27245                           
 27246                           	psect	text122
 27247  0092A0                     __ptext122:
 27248                           	opt stack 0
 27249  0092A0                     _i2cHighScl:
 27250                           	opt stack 20
 27251                           
 27252                           ;I2C_Soft.c: 111: TRISDbits.RD6 = 1;
 27253                           
 27254                           ;incstack = 0
 27255  0092A0  8C95               	bsf	3989,6,c	;volatile
 27256                           
 27257                           ;I2C_Soft.c: 112: _delay((unsigned long)((10)*(8000000/4000000.0)));
 27258  0092A2  0E06               	movlw	6
 27259  0092A4                     u18637:
 27260  0092A4  2EE8               	decfsz	wreg,f,c
 27261  0092A6  D7FE               	goto	u18637
 27262  0092A8  D000               	nop2		;nop
 27263  0092AA  0012               	return		;funcret
 27264  0092AC                     __end_of_i2cHighScl:
 27265                           	opt stack 0
 27266                           tblptru	equ	0xFF8
 27267                           tblptrh	equ	0xFF7
 27268                           tblptrl	equ	0xFF6
 27269                           tablat	equ	0xFF5
 27270                           prodh	equ	0xFF4
 27271                           prodl	equ	0xFF3
 27272                           intcon	equ	0xFF2
 27273                           intcon2	equ	0xFF1
 27274                           intcon3	equ	0xFF0
 27275                           postinc0	equ	0xFEE
 27276                           wreg	equ	0xFE8
 27277                           postdec1	equ	0xFE5
 27278                           fsr1l	equ	0xFE1
 27279                           indf2	equ	0xFDF
 27280                           postinc2	equ	0xFDE
 27281                           postdec2	equ	0xFDD
 27282                           fsr2h	equ	0xFDA
 27283                           fsr2l	equ	0xFD9
 27284                           status	equ	0xFD8
 27285                           
 27286 ;; *************** function _chkisr *****************
 27287 ;; Defined at:
 27288 ;;		line 38 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Interrupt.c"
 27289 ;; Parameters:    Size  Location     Type
 27290 ;;		None
 27291 ;; Auto vars:     Size  Location     Type
 27292 ;;		None
 27293 ;; Return value:  Size  Location     Type
 27294 ;;		None               void
 27295 ;; Registers used:
 27296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27297 ;; Tracked objects:
 27298 ;;		On entry : 0/0
 27299 ;;		On exit  : 0/0
 27300 ;;		Unchanged: 0/0
 27301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27304 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27305 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27306 ;;Total ram usage:       14 bytes
 27307 ;; Hardware stack levels used:    1
 27308 ;; Hardware stack levels required when called:    5
 27309 ;; This function calls:
 27310 ;;		_INT0_isr
 27311 ;;		_INT2_isr
 27312 ;;		_TIMER1_isr
 27313 ;; This function is called by:
 27314 ;;		Interrupt level 2
 27315 ;; This function uses a non-reentrant model
 27316 ;;
 27317                           
 27318                           	psect	intcode
 27319  000008                     __pintcode:
 27320                           	opt stack 0
 27321  000008                     _chkisr:
 27322                           	opt stack 15
 27323                           
 27324                           ;incstack = 0
 27325  000008  CFFA F080          	movff	pclath,??_chkisr
 27326  00000C  CFFB F081          	movff	pclatu,??_chkisr+1
 27327  000010  CFE9 F082          	movff	fsr0l,??_chkisr+2
 27328  000014  EDA5  F040         	call	int_func,f	;refresh shadow registers
 27329                           pclatu	equ	0xFFB
 27330                           pclath	equ	0xFFA
 27331                           tblptru	equ	0xFF8
 27332                           tblptrh	equ	0xFF7
 27333                           tblptrl	equ	0xFF6
 27334                           tablat	equ	0xFF5
 27335                           prodh	equ	0xFF4
 27336                           prodl	equ	0xFF3
 27337                           intcon	equ	0xFF2
 27338                           intcon2	equ	0xFF1
 27339                           intcon3	equ	0xFF0
 27340                           postinc0	equ	0xFEE
 27341                           fsr0l	equ	0xFE9
 27342                           wreg	equ	0xFE8
 27343                           postdec1	equ	0xFE5
 27344                           fsr1l	equ	0xFE1
 27345                           indf2	equ	0xFDF
 27346                           postinc2	equ	0xFDE
 27347                           postdec2	equ	0xFDD
 27348                           fsr2h	equ	0xFDA
 27349                           fsr2l	equ	0xFD9
 27350                           status	equ	0xFD8
 27351                           
 27352                           	psect	intcode_body
 27353  00814A                     __pintcode_body:
 27354                           	opt stack 15
 27355  00814A                     int_func:
 27356                           	opt stack 15
 27357  00814A  0006               	pop		; remove dummy address from shadow register refresh
 27358  00814C  CFEA F083          	movff	fsr0h,??_chkisr+3
 27359  008150  CFE1 F084          	movff	fsr1l,??_chkisr+4
 27360  008154  CFE2 F085          	movff	fsr1h,??_chkisr+5
 27361  008158  CFD9 F086          	movff	fsr2l,??_chkisr+6
 27362  00815C  CFDA F087          	movff	fsr2h,??_chkisr+7
 27363  008160  CFF3 F088          	movff	prodl,??_chkisr+8
 27364  008164  CFF4 F089          	movff	prodh,??_chkisr+9
 27365  008168  CFF6 F08A          	movff	tblptrl,??_chkisr+10
 27366  00816C  CFF7 F08B          	movff	tblptrh,??_chkisr+11
 27367  008170  CFF8 F08C          	movff	tblptru,??_chkisr+12
 27368  008174  CFF5 F08D          	movff	tablat,??_chkisr+13
 27369                           
 27370                           ;Interrupt.c: 42: if (PIR1bits.TMR1IF == 1) TIMER1_isr();
 27371  008178  A09E               	btfss	3998,0,c	;volatile
 27372  00817A  D003               	goto	i2l15551
 27373  00817C  EC42  F049         	call	_TIMER1_isr	;wreg free
 27374  008180  D000               	goto	i2l15551
 27375  008182                     i2l15551:
 27376                           
 27377                           ;Interrupt.c: 43: if (INTCONbits.INT0IF == 1) INT0_isr();
 27378  008182  A2F2               	btfss	intcon,1,c	;volatile
 27379  008184  D003               	goto	i2l15555
 27380  008186  ECA3  F02C         	call	_INT0_isr	;wreg free
 27381  00818A  D000               	goto	i2l15555
 27382  00818C                     i2l15555:
 27383                           
 27384                           ;Interrupt.c: 44: if (INTCON3bits.INT2IF == 1) INT2_isr();
 27385  00818C  A2F0               	btfss	intcon3,1,c	;volatile
 27386  00818E  D003               	goto	i2l281
 27387  008190  EC9E  F048         	call	_INT2_isr	;wreg free
 27388  008194  D000               	goto	i2l281
 27389  008196                     i2l281:
 27390  008196  C08D  FFF5         	movff	??_chkisr+13,tablat
 27391  00819A  C08C  FFF8         	movff	??_chkisr+12,tblptru
 27392  00819E  C08B  FFF7         	movff	??_chkisr+11,tblptrh
 27393  0081A2  C08A  FFF6         	movff	??_chkisr+10,tblptrl
 27394  0081A6  C089  FFF4         	movff	??_chkisr+9,prodh
 27395  0081AA  C088  FFF3         	movff	??_chkisr+8,prodl
 27396  0081AE  C087  FFDA         	movff	??_chkisr+7,fsr2h
 27397  0081B2  C086  FFD9         	movff	??_chkisr+6,fsr2l
 27398  0081B6  C085  FFE2         	movff	??_chkisr+5,fsr1h
 27399  0081BA  C084  FFE1         	movff	??_chkisr+4,fsr1l
 27400  0081BE  C083  FFEA         	movff	??_chkisr+3,fsr0h
 27401  0081C2  C082  FFE9         	movff	??_chkisr+2,fsr0l
 27402  0081C6  C081  FFFB         	movff	??_chkisr+1,pclatu
 27403  0081CA  C080  FFFA         	movff	??_chkisr,pclath
 27404  0081CE  0011               	retfie		f
 27405  0081D0                     __end_of_chkisr:
 27406                           	opt stack 0
 27407                           pclatu	equ	0xFFB
 27408                           pclath	equ	0xFFA
 27409                           tblptru	equ	0xFF8
 27410                           tblptrh	equ	0xFF7
 27411                           tblptrl	equ	0xFF6
 27412                           tablat	equ	0xFF5
 27413                           prodh	equ	0xFF4
 27414                           prodl	equ	0xFF3
 27415                           intcon	equ	0xFF2
 27416                           intcon2	equ	0xFF1
 27417                           intcon3	equ	0xFF0
 27418                           postinc0	equ	0xFEE
 27419                           fsr0h	equ	0xFEA
 27420                           fsr0l	equ	0xFE9
 27421                           wreg	equ	0xFE8
 27422                           postdec1	equ	0xFE5
 27423                           fsr1h	equ	0xFE2
 27424                           fsr1l	equ	0xFE1
 27425                           indf2	equ	0xFDF
 27426                           postinc2	equ	0xFDE
 27427                           postdec2	equ	0xFDD
 27428                           fsr2h	equ	0xFDA
 27429                           fsr2l	equ	0xFD9
 27430                           status	equ	0xFD8
 27431                           
 27432 ;; *************** function _TIMER1_isr *****************
 27433 ;; Defined at:
 27434 ;;		line 48 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Interrupt.c"
 27435 ;; Parameters:    Size  Location     Type
 27436 ;;		None
 27437 ;; Auto vars:     Size  Location     Type
 27438 ;;		None
 27439 ;; Return value:  Size  Location     Type
 27440 ;;		None               void
 27441 ;; Registers used:
 27442 ;;		wreg, status,2
 27443 ;; Tracked objects:
 27444 ;;		On entry : 0/0
 27445 ;;		On exit  : 0/0
 27446 ;;		Unchanged: 0/0
 27447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27452 ;;Total ram usage:        0 bytes
 27453 ;; Hardware stack levels used:    1
 27454 ;; This function calls:
 27455 ;;		Nothing
 27456 ;; This function is called by:
 27457 ;;		_chkisr
 27458 ;; This function uses a non-reentrant model
 27459 ;;
 27460                           
 27461                           	psect	text124
 27462  009284                     __ptext124:
 27463                           	opt stack 0
 27464  009284                     _TIMER1_isr:
 27465                           	opt stack 19
 27466                           
 27467                           ;Interrupt.c: 50: Nec_state = 0;
 27468                           
 27469                           ;incstack = 0
 27470  009284  0E00               	movlw	0
 27471  009286  0101               	movlb	1	; () banked
 27472  009288  6FB9               	movwf	_Nec_state& (0+255),b
 27473                           
 27474                           ; BSR set to: 1
 27475                           ;Interrupt.c: 51: INTCON2bits.INTEDG0 = 0;
 27476  00928A  9CF1               	bcf	intcon2,6,c	;volatile
 27477                           
 27478                           ; BSR set to: 1
 27479                           ;Interrupt.c: 52: T1CONbits.TMR1ON = 0;
 27480  00928C  90CD               	bcf	4045,0,c	;volatile
 27481                           
 27482                           ; BSR set to: 1
 27483                           ;Interrupt.c: 53: PIR1bits.TMR1IF = 0;
 27484  00928E  909E               	bcf	3998,0,c	;volatile
 27485                           
 27486                           ; BSR set to: 1
 27487  009290  0012               	return		;funcret
 27488  009292                     __end_of_TIMER1_isr:
 27489                           	opt stack 0
 27490                           pclatu	equ	0xFFB
 27491                           pclath	equ	0xFFA
 27492                           tblptru	equ	0xFF8
 27493                           tblptrh	equ	0xFF7
 27494                           tblptrl	equ	0xFF6
 27495                           tablat	equ	0xFF5
 27496                           prodh	equ	0xFF4
 27497                           prodl	equ	0xFF3
 27498                           intcon	equ	0xFF2
 27499                           intcon2	equ	0xFF1
 27500                           intcon3	equ	0xFF0
 27501                           postinc0	equ	0xFEE
 27502                           fsr0h	equ	0xFEA
 27503                           fsr0l	equ	0xFE9
 27504                           wreg	equ	0xFE8
 27505                           postdec1	equ	0xFE5
 27506                           fsr1h	equ	0xFE2
 27507                           fsr1l	equ	0xFE1
 27508                           indf2	equ	0xFDF
 27509                           postinc2	equ	0xFDE
 27510                           postdec2	equ	0xFDD
 27511                           fsr2h	equ	0xFDA
 27512                           fsr2l	equ	0xFD9
 27513                           status	equ	0xFD8
 27514                           
 27515 ;; *************** function _INT2_isr *****************
 27516 ;; Defined at:
 27517 ;;		line 62 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Interrupt.c"
 27518 ;; Parameters:    Size  Location     Type
 27519 ;;		None
 27520 ;; Auto vars:     Size  Location     Type
 27521 ;;		None
 27522 ;; Return value:  Size  Location     Type
 27523 ;;		None               void
 27524 ;; Registers used:
 27525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27526 ;; Tracked objects:
 27527 ;;		On entry : 0/0
 27528 ;;		On exit  : 0/0
 27529 ;;		Unchanged: 0/0
 27530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27535 ;;Total ram usage:        0 bytes
 27536 ;; Hardware stack levels used:    1
 27537 ;; Hardware stack levels required when called:    4
 27538 ;; This function calls:
 27539 ;;		i2_printf
 27540 ;; This function is called by:
 27541 ;;		_chkisr
 27542 ;; This function uses a non-reentrant model
 27543 ;;
 27544                           
 27545                           	psect	text125
 27546  00913C                     __ptext125:
 27547                           	opt stack 0
 27548  00913C                     _INT2_isr:
 27549                           	opt stack 15
 27550                           
 27551                           ;Interrupt.c: 64: INTCON3bits.INT2IF = 0;
 27552                           
 27553                           ; BSR set to: 1
 27554                           ;incstack = 0
 27555  00913C  92F0               	bcf	intcon3,1,c	;volatile
 27556                           
 27557                           ;Interrupt.c: 65: INT2_flag = 1;
 27558  00913E  0E01               	movlw	1
 27559  009140  0101               	movlb	1	; () banked
 27560  009142  6FB4               	movwf	_INT2_flag& (0+255),b
 27561                           
 27562                           ; BSR set to: 1
 27563                           ;Interrupt.c: 66: printf ("\r\n Interrupt 2 found.");
 27564  009144  0EEE               	movlw	low STR_1
 27565  009146  6E4A               	movwf	i2printf@f,c
 27566  009148  0EFE               	movlw	high STR_1
 27567  00914A  6E4B               	movwf	i2printf@f+1,c
 27568  00914C  ECFB  F00C         	call	i2_printf	;wreg free
 27569  009150  0012               	return		;funcret
 27570  009152                     __end_of_INT2_isr:
 27571                           	opt stack 0
 27572                           pclatu	equ	0xFFB
 27573                           pclath	equ	0xFFA
 27574                           tblptru	equ	0xFF8
 27575                           tblptrh	equ	0xFF7
 27576                           tblptrl	equ	0xFF6
 27577                           tablat	equ	0xFF5
 27578                           prodh	equ	0xFF4
 27579                           prodl	equ	0xFF3
 27580                           intcon	equ	0xFF2
 27581                           intcon2	equ	0xFF1
 27582                           intcon3	equ	0xFF0
 27583                           postinc0	equ	0xFEE
 27584                           fsr0h	equ	0xFEA
 27585                           fsr0l	equ	0xFE9
 27586                           wreg	equ	0xFE8
 27587                           postdec1	equ	0xFE5
 27588                           fsr1h	equ	0xFE2
 27589                           fsr1l	equ	0xFE1
 27590                           indf2	equ	0xFDF
 27591                           postinc2	equ	0xFDE
 27592                           postdec2	equ	0xFDD
 27593                           fsr2h	equ	0xFDA
 27594                           fsr2l	equ	0xFD9
 27595                           status	equ	0xFD8
 27596                           
 27597 ;; *************** function i2_printf *****************
 27598 ;; Defined at:
 27599 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 27600 ;; Parameters:    Size  Location     Type
 27601 ;;  f               2   73[COMRAM] PTR const unsigned char 
 27602 ;;		 -> STR_36(22), STR_28(11), STR_6(20), STR_5(22), 
 27603 ;;		 -> STR_4(21), STR_3(30), STR_2(7), STR_1(22), 
 27604 ;; Auto vars:     Size  Location     Type
 27605 ;;  printf          4  110[COMRAM] unsigned long 
 27606 ;;  printf          4  102[COMRAM] struct .
 27607 ;;  printf          3  114[COMRAM] struct .
 27608 ;;  printf          3   97[COMRAM] struct .
 27609 ;;  printf          3    0        PTR const unsigned char 
 27610 ;;  printf          2  120[COMRAM] unsigned short 
 27611 ;;  printf          2  117[COMRAM] int 
 27612 ;;  printf          2  108[COMRAM] int 
 27613 ;;  printf          2  106[COMRAM] int 
 27614 ;;  printf          2  100[COMRAM] PTR void [1]
 27615 ;;		 -> ?i2_printf(2), ?_printf(2), 
 27616 ;;  printf          2    0        unsigned int 
 27617 ;;  printf          1  119[COMRAM] char 
 27618 ;;  printf          1   84[COMRAM] unsigned char 
 27619 ;;  printf          1    0        unsigned char 
 27620 ;; Return value:  Size  Location     Type
 27621 ;;                  2   73[COMRAM] int 
 27622 ;; Registers used:
 27623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27624 ;; Tracked objects:
 27625 ;;		On entry : 0/0
 27626 ;;		On exit  : 0/0
 27627 ;;		Unchanged: 0/0
 27628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27629 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27630 ;;      Locals:        41       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27631 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27632 ;;      Totals:        49       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27633 ;;Total ram usage:       49 bytes
 27634 ;; Hardware stack levels used:    1
 27635 ;; Hardware stack levels required when called:    3
 27636 ;; This function calls:
 27637 ;;		i2___awdiv
 27638 ;;		i2___awmod
 27639 ;;		i2___ftadd
 27640 ;;		i2___ftdiv
 27641 ;;		i2___ftge
 27642 ;;		i2___ftmul
 27643 ;;		i2___ftneg
 27644 ;;		i2___ftsub
 27645 ;;		i2___fttol
 27646 ;;		i2___lldiv
 27647 ;;		i2___llmod
 27648 ;;		i2___lltoft
 27649 ;;		i2___wmul
 27650 ;;		i2__div_to_l_
 27651 ;;		i2__tdiv_to_l_
 27652 ;;		i2_fround
 27653 ;;		i2_isdigit
 27654 ;;		i2_putch
 27655 ;;		i2_scale
 27656 ;; This function is called by:
 27657 ;;		_INT2_isr
 27658 ;; This function uses a non-reentrant model
 27659 ;;
 27660                           
 27661                           	psect	text126
 27662  0019F6                     __ptext126:
 27663                           	opt stack 0
 27664  0019F6                     i2_printf:
 27665                           	opt stack 15
 27666                           
 27667                           ;doprnt.c: 466: va_list ap;
 27668                           ;doprnt.c: 499: signed char c;
 27669                           ;doprnt.c: 501: int width;
 27670                           ;doprnt.c: 504: int prec;
 27671                           ;doprnt.c: 508: unsigned short flag;
 27672                           ;doprnt.c: 515: char d;
 27673                           ;doprnt.c: 516: double fval;
 27674                           ;doprnt.c: 517: int exp;
 27675                           ;doprnt.c: 523: union {
 27676                           ;doprnt.c: 524: unsigned long vd;
 27677                           ;doprnt.c: 525: double integ;
 27678                           ;doprnt.c: 526: } tmpval;
 27679                           ;doprnt.c: 528: unsigned long val;
 27680                           ;doprnt.c: 529: unsigned len;
 27681                           ;doprnt.c: 530: const char * cp;
 27682                           ;doprnt.c: 533: *ap = __va_start();
 27683                           
 27684                           ;incstack = 0
 27685  0019F6  0E4C               	movlw	low (?i2_printf+2)
 27686  0019F8  6E65               	movwf	i2printf@ap,c
 27687  0019FA  0E00               	movlw	high (?i2_printf+2)
 27688  0019FC  6E66               	movwf	i2printf@ap+1,c
 27689                           
 27690                           ;doprnt.c: 536: while(c = *f++) {
 27691  0019FE  EFA1  F017         	goto	i2l15105
 27692  001A02                     i2l14495:
 27693                           
 27694                           ;doprnt.c: 538: if(c != '%')
 27695  001A02  0E25               	movlw	37
 27696  001A04  1878               	xorwf	i2printf@c,w,c
 27697  001A06  B4D8               	btfsc	status,2,c
 27698  001A08  D005               	goto	i2l14499
 27699                           
 27700                           ;doprnt.c: 540: {
 27701                           ;doprnt.c: 541: (putch(c) );
 27702  001A0A  5078               	movf	i2printf@c,w,c
 27703  001A0C  EC49  F049         	call	i2_putch
 27704                           
 27705                           ;doprnt.c: 542: continue;
 27706  001A10  EFA1  F017         	goto	i2l15105
 27707  001A14                     i2l14499:
 27708                           
 27709                           ;doprnt.c: 543: }
 27710                           ;doprnt.c: 546: width = 0;
 27711  001A14  0E00               	movlw	0
 27712  001A16  6E6E               	movwf	i2printf@width+1,c
 27713  001A18  0E00               	movlw	0
 27714  001A1A  6E6D               	movwf	i2printf@width,c
 27715                           
 27716                           ;doprnt.c: 548: flag = 0;
 27717  001A1C  0E00               	movlw	0
 27718  001A1E  6E7A               	movwf	i2printf@flag+1,c
 27719  001A20  0E00               	movlw	0
 27720  001A22  6E79               	movwf	i2printf@flag,c
 27721                           
 27722                           ;doprnt.c: 551: switch(*f) {
 27723                           
 27724                           ;doprnt.c: 550: for(;;) {
 27725  001A24  D00D               	goto	i2l14513
 27726  001A26                     i2l14501:
 27727                           
 27728                           ;doprnt.c: 554: flag |= 0x08;
 27729  001A26  8679               	bsf	i2printf@flag,3,c
 27730  001A28  D007               	goto	L29
 27731  001A2A                     i2l14503:
 27732                           
 27733                           ;doprnt.c: 561: flag |= 0x01;
 27734  001A2A  8079               	bsf	i2printf@flag,0,c
 27735  001A2C  D005               	goto	L29
 27736  001A2E                     i2l14505:
 27737                           
 27738                           ;doprnt.c: 568: flag |= 0x02;
 27739  001A2E  8279               	bsf	i2printf@flag,1,c
 27740  001A30  D003               	goto	L29
 27741  001A32                     i2l14507:
 27742                           
 27743                           ;doprnt.c: 574: flag |= 0x800;
 27744  001A32  867A               	bsf	i2printf@flag+1,3,c
 27745  001A34  D001               	goto	L29
 27746  001A36                     i2l14509:
 27747                           
 27748                           ;doprnt.c: 580: flag |= 0x04;
 27749  001A36  8479               	bsf	i2printf@flag,2,c
 27750  001A38                     L29:
 27751                           
 27752                           ;doprnt.c: 581: f++;
 27753  001A38  4A4A               	infsnz	i2printf@f,f,c
 27754  001A3A  2A4B               	incf	i2printf@f+1,f,c
 27755                           
 27756                           ;doprnt.c: 582: continue;
 27757  001A3C  D001               	goto	i2l14513
 27758                           
 27759                           ;doprnt.c: 584: }
 27760  001A3E  D017               	goto	i2l1427
 27761  001A40                     i2l14513:
 27762  001A40  C04A  FFF6         	movff	i2printf@f,tblptrl
 27763  001A44  C04B  FFF7         	movff	i2printf@f+1,tblptrh
 27764  001A48                     	if	0	;tblptru may be non-zero
 27765  001A48                     	endif
 27766  001A48                     	if	0	;tblptru may be non-zero
 27767  001A48                     	endif
 27768  001A48  0008               	tblrd		*
 27769  001A4A  50F5               	movf	tablat,w,c
 27770                           
 27771                           ; Switch size 1, requested type "space"
 27772                           ; Number of cases is 5, Range of values is 32 to 48
 27773                           ; switch strategies available:
 27774                           ; Name         Instructions Cycles
 27775                           ; simple_byte           16     9 (average)
 27776                           ;	Chosen strategy is simple_byte
 27777  001A4C  0A20               	xorlw	32	; case 32
 27778  001A4E  B4D8               	btfsc	status,2,c
 27779  001A50  D7EC               	goto	i2l14503
 27780  001A52  0A03               	xorlw	3	; case 35
 27781  001A54  B4D8               	btfsc	status,2,c
 27782  001A56  D7ED               	goto	i2l14507
 27783  001A58  0A08               	xorlw	8	; case 43
 27784  001A5A  B4D8               	btfsc	status,2,c
 27785  001A5C  D7E8               	goto	i2l14505
 27786  001A5E  0A06               	xorlw	6	; case 45
 27787  001A60  B4D8               	btfsc	status,2,c
 27788  001A62  D7E1               	goto	i2l14501
 27789  001A64  0A1D               	xorlw	29	; case 48
 27790  001A66  B4D8               	btfsc	status,2,c
 27791  001A68  D7E6               	goto	i2l14509
 27792                           
 27793                           ;doprnt.c: 585: break;
 27794  001A6A  D001               	goto	i2l1427
 27795                           
 27796                           ;doprnt.c: 586: }
 27797  001A6C  D7E9               	goto	i2l14513
 27798  001A6E                     i2l1427:
 27799                           
 27800                           ;doprnt.c: 589: if(flag & 0x02)
 27801  001A6E  A279               	btfss	i2printf@flag,1,c
 27802  001A70  D002               	goto	i2l14517
 27803                           
 27804                           ;doprnt.c: 590: flag &= ~0x01;
 27805  001A72  9079               	bcf	i2printf@flag,0,c
 27806  001A74  D000               	goto	i2l14517
 27807  001A76                     i2l14517:
 27808                           
 27809                           ;doprnt.c: 593: if(flag & 0x08)
 27810  001A76  A679               	btfss	i2printf@flag,3,c
 27811  001A78  D002               	goto	i2l14521
 27812                           
 27813                           ;doprnt.c: 594: flag &= ~0x04;
 27814  001A7A  9479               	bcf	i2printf@flag,2,c
 27815  001A7C  D000               	goto	i2l14521
 27816  001A7E                     i2l14521:
 27817                           
 27818                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 27819  001A7E  C04A  FFF6         	movff	i2printf@f,tblptrl
 27820  001A82  C04B  FFF7         	movff	i2printf@f+1,tblptrh
 27821  001A86                     	if	0	;tblptru may be non-zero
 27822  001A86                     	endif
 27823  001A86                     	if	0	;tblptru may be non-zero
 27824  001A86                     	endif
 27825  001A86  0008               	tblrd		*
 27826  001A88  50F5               	movf	tablat,w,c
 27827  001A8A  ECCC  F047         	call	i2_isdigit
 27828  001A8E  A0D8               	btfss	status,0,c
 27829  001A90  D035               	goto	i2l14533
 27830                           
 27831                           ;doprnt.c: 598: width = 0;
 27832  001A92  0E00               	movlw	0
 27833  001A94  6E6E               	movwf	i2printf@width+1,c
 27834  001A96  0E00               	movlw	0
 27835  001A98  6E6D               	movwf	i2printf@width,c
 27836  001A9A  D000               	goto	i2l14525
 27837  001A9C                     i2l14525:
 27838                           
 27839                           ;doprnt.c: 600: width *= 10;
 27840  001A9C  C06D  F00F         	movff	i2printf@width,i2___wmul@multiplier
 27841  001AA0  C06E  F010         	movff	i2printf@width+1,i2___wmul@multiplier+1
 27842  001AA4  0E00               	movlw	0
 27843  001AA6  6E12               	movwf	i2___wmul@multiplicand+1,c
 27844  001AA8  0E0A               	movlw	10
 27845  001AAA  6E11               	movwf	i2___wmul@multiplicand,c
 27846  001AAC  EC95  F047         	call	i2___wmul	;wreg free
 27847  001AB0  C00F  F06D         	movff	?i2___wmul,i2printf@width
 27848  001AB4  C010  F06E         	movff	?i2___wmul+1,i2printf@width+1
 27849                           
 27850                           ;doprnt.c: 601: width += *f++ - '0';
 27851  001AB8  0ED0               	movlw	208
 27852  001ABA  6E4C               	movwf	??i2_printf& (0+255),c
 27853  001ABC  0EFF               	movlw	255
 27854  001ABE  6E4D               	movwf	(??i2_printf+1)& (0+255),c
 27855  001AC0  C04A  FFF6         	movff	i2printf@f,tblptrl
 27856  001AC4  C04B  FFF7         	movff	i2printf@f+1,tblptrh
 27857  001AC8                     	if	0	;tblptru may be non-zero
 27858  001AC8                     	endif
 27859  001AC8                     	if	0	;tblptru may be non-zero
 27860  001AC8                     	endif
 27861  001AC8  0008               	tblrd		*
 27862  001ACA  50F5               	movf	tablat,w,c
 27863  001ACC  6E4E               	movwf	(??i2_printf+2)& (0+255),c
 27864  001ACE  6A4F               	clrf	(??i2_printf+3)& (0+255),c
 27865  001AD0  504C               	movf	??i2_printf,w,c
 27866  001AD2  264E               	addwf	??i2_printf+2,f,c
 27867  001AD4  504D               	movf	??i2_printf+1,w,c
 27868  001AD6  224F               	addwfc	??i2_printf+3,f,c
 27869  001AD8  504E               	movf	??i2_printf+2,w,c
 27870  001ADA  266D               	addwf	i2printf@width,f,c
 27871  001ADC  504F               	movf	??i2_printf+3,w,c
 27872  001ADE  226E               	addwfc	i2printf@width+1,f,c
 27873  001AE0  4A4A               	infsnz	i2printf@f,f,c
 27874  001AE2  2A4B               	incf	i2printf@f+1,f,c
 27875                           
 27876                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 27877  001AE4  C04A  FFF6         	movff	i2printf@f,tblptrl
 27878  001AE8  C04B  FFF7         	movff	i2printf@f+1,tblptrh
 27879  001AEC                     	if	0	;tblptru may be non-zero
 27880  001AEC                     	endif
 27881  001AEC                     	if	0	;tblptru may be non-zero
 27882  001AEC                     	endif
 27883  001AEC  0008               	tblrd		*
 27884  001AEE  50F5               	movf	tablat,w,c
 27885  001AF0  ECCC  F047         	call	i2_isdigit
 27886  001AF4  A0D8               	btfss	status,0,c
 27887  001AF6  D002               	goto	i2l14533
 27888  001AF8  D7D1               	goto	i2l14525
 27889  001AFA  D000               	goto	i2l14533
 27890  001AFC                     i2l14533:
 27891                           
 27892                           ;doprnt.c: 608: }
 27893                           ;doprnt.c: 611: if(*f == '.') {
 27894  001AFC  C04A  FFF6         	movff	i2printf@f,tblptrl
 27895  001B00  C04B  FFF7         	movff	i2printf@f+1,tblptrh
 27896  001B04                     	if	0	;tblptru may be non-zero
 27897  001B04                     	endif
 27898  001B04                     	if	0	;tblptru may be non-zero
 27899  001B04                     	endif
 27900  001B04  0008               	tblrd		*
 27901  001B06  50F5               	movf	tablat,w,c
 27902  001B08  0A2E               	xorlw	46
 27903  001B0A  A4D8               	btfss	status,2,c
 27904  001B0C  D030               	goto	i2l14545
 27905                           
 27906                           ;doprnt.c: 612: flag |= 0x4000;
 27907  001B0E  8C7A               	bsf	i2printf@flag+1,6,c
 27908                           
 27909                           ;doprnt.c: 613: f++;
 27910  001B10  4A4A               	infsnz	i2printf@f,f,c
 27911  001B12  2A4B               	incf	i2printf@f+1,f,c
 27912                           
 27913                           ;doprnt.c: 620: {
 27914                           ;doprnt.c: 621: prec = 0;
 27915  001B14  0E00               	movlw	0
 27916  001B16  6E77               	movwf	i2printf@prec+1,c
 27917  001B18  0E00               	movlw	0
 27918  001B1A  6E76               	movwf	i2printf@prec,c
 27919                           
 27920                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 27921  001B1C  D01C               	goto	i2l14543
 27922  001B1E                     i2l14539:
 27923                           
 27924                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 27925  001B1E  C076  F00F         	movff	i2printf@prec,i2___wmul@multiplier
 27926  001B22  C077  F010         	movff	i2printf@prec+1,i2___wmul@multiplier+1
 27927  001B26  0E00               	movlw	0
 27928  001B28  6E12               	movwf	i2___wmul@multiplicand+1,c
 27929  001B2A  0E0A               	movlw	10
 27930  001B2C  6E11               	movwf	i2___wmul@multiplicand,c
 27931  001B2E  EC95  F047         	call	i2___wmul	;wreg free
 27932  001B32  C04A  FFF6         	movff	i2printf@f,tblptrl
 27933  001B36  C04B  FFF7         	movff	i2printf@f+1,tblptrh
 27934  001B3A                     	if	0	;tblptru may be non-zero
 27935  001B3A                     	endif
 27936  001B3A                     	if	0	;tblptru may be non-zero
 27937  001B3A                     	endif
 27938  001B3A  0008               	tblrd		*
 27939  001B3C  50F5               	movf	tablat,w,c
 27940  001B3E  260F               	addwf	?i2___wmul,f,c
 27941  001B40  0E00               	movlw	0
 27942  001B42  2210               	addwfc	?i2___wmul+1,f,c
 27943  001B44  0ED0               	movlw	208
 27944  001B46  240F               	addwf	?i2___wmul,w,c
 27945  001B48  6E76               	movwf	i2printf@prec,c
 27946  001B4A  0EFF               	movlw	255
 27947  001B4C  2010               	addwfc	?i2___wmul+1,w,c
 27948  001B4E  6E77               	movwf	i2printf@prec+1,c
 27949  001B50  4A4A               	infsnz	i2printf@f,f,c
 27950  001B52  2A4B               	incf	i2printf@f+1,f,c
 27951  001B54  D000               	goto	i2l14543
 27952  001B56                     i2l14543:
 27953  001B56  C04A  FFF6         	movff	i2printf@f,tblptrl
 27954  001B5A  C04B  FFF7         	movff	i2printf@f+1,tblptrh
 27955  001B5E                     	if	0	;tblptru may be non-zero
 27956  001B5E                     	endif
 27957  001B5E                     	if	0	;tblptru may be non-zero
 27958  001B5E                     	endif
 27959  001B5E  0008               	tblrd		*
 27960  001B60  50F5               	movf	tablat,w,c
 27961  001B62  ECCC  F047         	call	i2_isdigit
 27962  001B66  A0D8               	btfss	status,0,c
 27963  001B68  D017               	goto	i2l14559
 27964  001B6A  D7D9               	goto	i2l14539
 27965                           
 27966                           ;doprnt.c: 624: }
 27967                           ;doprnt.c: 625: } else {
 27968  001B6C  D015               	goto	i2l14559
 27969  001B6E                     i2l14545:
 27970                           
 27971                           ;doprnt.c: 626: prec = 0;
 27972  001B6E  0E00               	movlw	0
 27973  001B70  6E77               	movwf	i2printf@prec+1,c
 27974  001B72  0E00               	movlw	0
 27975  001B74  6E76               	movwf	i2printf@prec,c
 27976                           
 27977                           ;doprnt.c: 628: flag |= 0x1000;
 27978  001B76  887A               	bsf	i2printf@flag+1,4,c
 27979                           
 27980                           ;doprnt.c: 630: }
 27981                           ;doprnt.c: 635: switch(c = *f++) {
 27982  001B78  D00F               	goto	i2l14559
 27983                           
 27984                           ;doprnt.c: 638: goto alldone;
 27985                           
 27986                           ;doprnt.c: 637: case 0:
 27987  001B7A  EFB0  F017         	goto	i2l1661
 27988  001B7E                     i2l14549:
 27989                           
 27990                           ;doprnt.c: 663: flag |= 0x400;
 27991  001B7E  847A               	bsf	i2printf@flag+1,2,c
 27992                           
 27993                           ;doprnt.c: 664: break;
 27994  001B80  D033               	goto	i2l14561
 27995  001B82                     i2l14551:
 27996                           
 27997                           ;doprnt.c: 670: flag |= 0x20;
 27998  001B82  8A79               	bsf	i2printf@flag,5,c
 27999  001B84                     i2l1444:
 28000                           
 28001                           ;doprnt.c: 673: flag |= 0x100;
 28002  001B84  807A               	bsf	i2printf@flag+1,0,c
 28003                           
 28004                           ;doprnt.c: 674: break;
 28005  001B86  D030               	goto	i2l14561
 28006  001B88                     i2l14553:
 28007                           
 28008                           ;doprnt.c: 680: flag |= 0x20;
 28009  001B88  8A79               	bsf	i2printf@flag,5,c
 28010  001B8A                     i2l1446:
 28011                           
 28012                           ;doprnt.c: 683: flag |= 0x200;
 28013  001B8A  827A               	bsf	i2printf@flag+1,1,c
 28014                           
 28015                           ;doprnt.c: 698: case 'i':
 28016                           ;doprnt.c: 699: break;
 28017                           
 28018                           ;doprnt.c: 697: case 'd':
 28019                           
 28020                           ;doprnt.c: 684: break;
 28021  001B8C  D02D               	goto	i2l14561
 28022  001B8E                     i2l14555:
 28023                           
 28024                           ;doprnt.c: 721: flag |= 0x80;
 28025  001B8E  8E79               	bsf	i2printf@flag,7,c
 28026                           
 28027                           ;doprnt.c: 723: break;
 28028  001B90  D02B               	goto	i2l14561
 28029                           
 28030                           ;doprnt.c: 813: continue;
 28031                           
 28032                           ;doprnt.c: 802: default:
 28033  001B92  EFA1  F017         	goto	i2l15105
 28034                           
 28035                           ;doprnt.c: 822: }
 28036  001B96  D028               	goto	i2l14561
 28037  001B98                     i2l14559:
 28038  001B98  C04A  FFF6         	movff	i2printf@f,tblptrl
 28039  001B9C  C04B  FFF7         	movff	i2printf@f+1,tblptrh
 28040  001BA0  4A4A               	infsnz	i2printf@f,f,c
 28041  001BA2  2A4B               	incf	i2printf@f+1,f,c
 28042  001BA4                     	if	0	;tblptru may be non-zero
 28043  001BA4                     	endif
 28044  001BA4                     	if	0	;tblptru may be non-zero
 28045  001BA4                     	endif
 28046  001BA4  0008               	tblrd		*
 28047  001BA6  CFF5 F078          	movff	tablat,i2printf@c
 28048  001BAA  5078               	movf	i2printf@c,w,c
 28049                           
 28050                           ; Switch size 1, requested type "space"
 28051                           ; Number of cases is 9, Range of values is 0 to 120
 28052                           ; switch strategies available:
 28053                           ; Name         Instructions Cycles
 28054                           ; simple_byte           28    15 (average)
 28055                           ;	Chosen strategy is simple_byte
 28056  001BAC  0A00               	xorlw	0	; case 0
 28057  001BAE  B4D8               	btfsc	status,2,c
 28058  001BB0  EFB0  F017         	goto	i2l1661
 28059  001BB4  0A45               	xorlw	69	; case 69
 28060  001BB6  B4D8               	btfsc	status,2,c
 28061  001BB8  D7E4               	goto	i2l14551
 28062  001BBA  0A02               	xorlw	2	; case 71
 28063  001BBC  B4D8               	btfsc	status,2,c
 28064  001BBE  D7E4               	goto	i2l14553
 28065  001BC0  0A23               	xorlw	35	; case 100
 28066  001BC2  B4D8               	btfsc	status,2,c
 28067  001BC4  D011               	goto	i2l14561
 28068  001BC6  0A01               	xorlw	1	; case 101
 28069  001BC8  B4D8               	btfsc	status,2,c
 28070  001BCA  D7DC               	goto	i2l1444
 28071  001BCC  0A03               	xorlw	3	; case 102
 28072  001BCE  B4D8               	btfsc	status,2,c
 28073  001BD0  D7D6               	goto	i2l14549
 28074  001BD2  0A01               	xorlw	1	; case 103
 28075  001BD4  B4D8               	btfsc	status,2,c
 28076  001BD6  D7D9               	goto	i2l1446
 28077  001BD8  0A0E               	xorlw	14	; case 105
 28078  001BDA  B4D8               	btfsc	status,2,c
 28079  001BDC  D005               	goto	i2l14561
 28080  001BDE  0A11               	xorlw	17	; case 120
 28081  001BE0  B4D8               	btfsc	status,2,c
 28082  001BE2  D7D5               	goto	i2l14555
 28083  001BE4  EFA1  F017         	goto	i2l15105
 28084  001BE8                     i2l14561:
 28085                           
 28086                           ;doprnt.c: 825: if(flag & (0x700)) {
 28087  001BE8  0E07               	movlw	7
 28088  001BEA  147A               	andwf	i2printf@flag+1,w,c
 28089  001BEC  B4D8               	btfsc	status,2,c
 28090  001BEE  EF6F  F015         	goto	i2l1451
 28091                           
 28092                           ;doprnt.c: 827: if(flag & 0x1000)
 28093  001BF2  A87A               	btfss	i2printf@flag+1,4,c
 28094  001BF4  D005               	goto	i2l14567
 28095                           
 28096                           ;doprnt.c: 829: prec = 6;
 28097  001BF6  0E00               	movlw	0
 28098  001BF8  6E77               	movwf	i2printf@prec+1,c
 28099  001BFA  0E06               	movlw	6
 28100  001BFC  6E76               	movwf	i2printf@prec,c
 28101  001BFE  D000               	goto	i2l14567
 28102  001C00                     i2l14567:
 28103                           
 28104                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 28105  001C00  C065  FFD9         	movff	i2printf@ap,fsr2l
 28106  001C04  C066  FFDA         	movff	i2printf@ap+1,fsr2h
 28107  001C08  CFDE F073          	movff	postinc2,i2printf@fval
 28108  001C0C  CFDE F074          	movff	postinc2,i2printf@fval+1
 28109  001C10  CFDD F075          	movff	postdec2,i2printf@fval+2
 28110  001C14  0E03               	movlw	3
 28111  001C16  2665               	addwf	i2printf@ap,f,c
 28112  001C18  0E00               	movlw	0
 28113  001C1A  2266               	addwfc	i2printf@ap+1,f,c
 28114                           
 28115                           ;doprnt.c: 831: if(fval < 0.0) {
 28116  001C1C  AE75               	btfss	i2printf@fval+2,7,c
 28117  001C1E  D011               	goto	i2l14577
 28118                           
 28119                           ;doprnt.c: 832: fval = -fval;
 28120  001C20  C073  F019         	movff	i2printf@fval,i2___ftneg@f1
 28121  001C24  C074  F01A         	movff	i2printf@fval+1,i2___ftneg@f1+1
 28122  001C28  C075  F01B         	movff	i2printf@fval+2,i2___ftneg@f1+2
 28123  001C2C  ECA9  F047         	call	i2___ftneg	;wreg free
 28124  001C30  C019  F073         	movff	?i2___ftneg,i2printf@fval
 28125  001C34  C01A  F074         	movff	?i2___ftneg+1,i2printf@fval+1
 28126  001C38  C01B  F075         	movff	?i2___ftneg+2,i2printf@fval+2
 28127                           
 28128                           ;doprnt.c: 833: flag |= 0x03;
 28129  001C3C  0E03               	movlw	3
 28130  001C3E  1279               	iorwf	i2printf@flag,f,c
 28131  001C40  D000               	goto	i2l14577
 28132  001C42                     i2l14577:
 28133                           
 28134                           ;doprnt.c: 834: }
 28135                           ;doprnt.c: 835: exp = 0;
 28136  001C42  0E00               	movlw	0
 28137  001C44  6E6C               	movwf	i2printf@exp+1,c
 28138  001C46  0E00               	movlw	0
 28139  001C48  6E6B               	movwf	i2printf@exp,c
 28140                           
 28141                           ;doprnt.c: 836: if( fval!=0) {
 28142  001C4A  5073               	movf	i2printf@fval,w,c
 28143  001C4C  1074               	iorwf	i2printf@fval+1,w,c
 28144  001C4E  1075               	iorwf	i2printf@fval+2,w,c
 28145  001C50  B4D8               	btfsc	status,2,c
 28146  001C52  D085               	goto	i2l14605
 28147                           
 28148                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 28149  001C54  0E82               	movlw	130
 28150  001C56  6E4C               	movwf	??i2_printf& (0+255),c
 28151  001C58  0EFF               	movlw	255
 28152  001C5A  6E4D               	movwf	(??i2_printf+1)& (0+255),c
 28153  001C5C  C073  F04E         	movff	i2printf@fval,??i2_printf+2
 28154  001C60  C074  F04F         	movff	i2printf@fval+1,??i2_printf+3
 28155  001C64  C075  F050         	movff	i2printf@fval+2,??i2_printf+4
 28156  001C68  C076  F051         	movff	i2printf@fval+3,??i2_printf+5
 28157  001C6C  0E10               	movlw	16
 28158  001C6E  D005               	goto	i2u1685_40
 28159  001C70                     i2u1685_45:
 28160  001C70  90D8               	bcf	status,0,c
 28161  001C72  3251               	rrcf	??i2_printf+5,f,c
 28162  001C74  3250               	rrcf	??i2_printf+4,f,c
 28163  001C76  324F               	rrcf	??i2_printf+3,f,c
 28164  001C78  324E               	rrcf	??i2_printf+2,f,c
 28165  001C7A                     i2u1685_40:
 28166  001C7A  2EE8               	decfsz	wreg,f,c
 28167  001C7C  D7F9               	goto	i2u1685_45
 28168  001C7E  504E               	movf	??i2_printf+2,w,c
 28169  001C80  244C               	addwf	??i2_printf,w,c
 28170  001C82  6E6B               	movwf	i2printf@exp,c
 28171  001C84  0E00               	movlw	0
 28172  001C86  204D               	addwfc	??i2_printf+1,w,c
 28173  001C88  6E6C               	movwf	i2printf@exp+1,c
 28174                           
 28175                           ;doprnt.c: 838: exp--;
 28176  001C8A  066B               	decf	i2printf@exp,f,c
 28177  001C8C  A0D8               	btfss	status,0,c
 28178  001C8E  066C               	decf	i2printf@exp+1,f,c
 28179                           
 28180                           ;doprnt.c: 839: exp *= 3;
 28181  001C90  C06B  F00F         	movff	i2printf@exp,i2___wmul@multiplier
 28182  001C94  C06C  F010         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 28183  001C98  0E00               	movlw	0
 28184  001C9A  6E12               	movwf	i2___wmul@multiplicand+1,c
 28185  001C9C  0E03               	movlw	3
 28186  001C9E  6E11               	movwf	i2___wmul@multiplicand,c
 28187  001CA0  EC95  F047         	call	i2___wmul	;wreg free
 28188  001CA4  C00F  F06B         	movff	?i2___wmul,i2printf@exp
 28189  001CA8  C010  F06C         	movff	?i2___wmul+1,i2printf@exp+1
 28190                           
 28191                           ;doprnt.c: 840: exp /= 10;
 28192  001CAC  C06B  F007         	movff	i2printf@exp,i2___awdiv@dividend
 28193  001CB0  C06C  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 28194  001CB4  0E00               	movlw	0
 28195  001CB6  6E0A               	movwf	i2___awdiv@divisor+1,c
 28196  001CB8  0E0A               	movlw	10
 28197  001CBA  6E09               	movwf	i2___awdiv@divisor,c
 28198  001CBC  ECC9  F03F         	call	i2___awdiv	;wreg free
 28199  001CC0  C007  F06B         	movff	?i2___awdiv,i2printf@exp
 28200  001CC4  C008  F06C         	movff	?i2___awdiv+1,i2printf@exp+1
 28201                           
 28202                           ;doprnt.c: 841: if(exp < 0)
 28203  001CC8  AE6C               	btfss	i2printf@exp+1,7,c
 28204  001CCA  D004               	goto	i2l14593
 28205                           
 28206                           ;doprnt.c: 842: exp--;
 28207  001CCC  066B               	decf	i2printf@exp,f,c
 28208  001CCE  A0D8               	btfss	status,0,c
 28209  001CD0  066C               	decf	i2printf@exp+1,f,c
 28210  001CD2  D000               	goto	i2l14593
 28211  001CD4                     i2l14593:
 28212                           
 28213                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 28214  001CD4  506B               	movf	i2printf@exp,w,c
 28215  001CD6  0800               	sublw	0
 28216  001CD8  ECCA  F01F         	call	i2_scale
 28217  001CDC  C02B  F067         	movff	?i2_scale,i2printf@tmpval
 28218  001CE0  C02C  F068         	movff	?i2_scale+1,i2printf@tmpval+1
 28219  001CE4  C02D  F069         	movff	?i2_scale+2,i2printf@tmpval+2
 28220                           
 28221                           ;doprnt.c: 847: tmpval.integ *= fval;
 28222  001CE8  C067  F01C         	movff	i2printf@tmpval,i2___ftmul@f1
 28223  001CEC  C068  F01D         	movff	i2printf@tmpval+1,i2___ftmul@f1+1
 28224  001CF0  C069  F01E         	movff	i2printf@tmpval+2,i2___ftmul@f1+2
 28225  001CF4  C073  F01F         	movff	i2printf@fval,i2___ftmul@f2
 28226  001CF8  C074  F020         	movff	i2printf@fval+1,i2___ftmul@f2+1
 28227  001CFC  C075  F021         	movff	i2printf@fval+2,i2___ftmul@f2+2
 28228  001D00  EC54  F036         	call	i2___ftmul	;wreg free
 28229  001D04  C01C  F067         	movff	?i2___ftmul,i2printf@tmpval
 28230  001D08  C01D  F068         	movff	?i2___ftmul+1,i2printf@tmpval+1
 28231  001D0C  C01E  F069         	movff	?i2___ftmul+2,i2printf@tmpval+2
 28232                           
 28233                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 28234  001D10  C067  F041         	movff	i2printf@tmpval,i2___ftge@ff1
 28235  001D14  C068  F042         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 28236  001D18  C069  F043         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 28237  001D1C  0E00               	movlw	0
 28238  001D1E  6E44               	movwf	i2___ftge@ff2,c
 28239  001D20  0E80               	movlw	128
 28240  001D22  6E45               	movwf	i2___ftge@ff2+1,c
 28241  001D24  0E3F               	movlw	63
 28242  001D26  6E46               	movwf	i2___ftge@ff2+2,c
 28243  001D28  EC14  F040         	call	i2___ftge	;wreg free
 28244  001D2C  B0D8               	btfsc	status,0,c
 28245  001D2E  D004               	goto	i2l14601
 28246                           
 28247                           ;doprnt.c: 849: exp--;
 28248  001D30  066B               	decf	i2printf@exp,f,c
 28249  001D32  A0D8               	btfss	status,0,c
 28250  001D34  066C               	decf	i2printf@exp+1,f,c
 28251  001D36  D013               	goto	i2l14605
 28252  001D38                     i2l14601:
 28253                           
 28254                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 28255  001D38  C067  F041         	movff	i2printf@tmpval,i2___ftge@ff1
 28256  001D3C  C068  F042         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 28257  001D40  C069  F043         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 28258  001D44  0E00               	movlw	0
 28259  001D46  6E44               	movwf	i2___ftge@ff2,c
 28260  001D48  0E20               	movlw	32
 28261  001D4A  6E45               	movwf	i2___ftge@ff2+1,c
 28262  001D4C  0E41               	movlw	65
 28263  001D4E  6E46               	movwf	i2___ftge@ff2+2,c
 28264  001D50  EC14  F040         	call	i2___ftge	;wreg free
 28265  001D54  A0D8               	btfss	status,0,c
 28266  001D56  D003               	goto	i2l14605
 28267                           
 28268                           ;doprnt.c: 851: exp++;
 28269  001D58  4A6B               	infsnz	i2printf@exp,f,c
 28270  001D5A  2A6C               	incf	i2printf@exp+1,f,c
 28271  001D5C  D000               	goto	i2l14605
 28272  001D5E                     i2l14605:
 28273                           
 28274                           ;doprnt.c: 852: }
 28275                           ;doprnt.c: 854: if(exp <= 0)
 28276  001D5E  BE6C               	btfsc	i2printf@exp+1,7,c
 28277  001D60  D005               	goto	i2l14607
 28278  001D62  506C               	movf	i2printf@exp+1,w,c
 28279  001D64  E106               	bnz	i2l1459
 28280  001D66  046B               	decf	i2printf@exp,w,c
 28281  001D68  B0D8               	btfsc	status,0,c
 28282  001D6A  D003               	goto	i2l1459
 28283  001D6C                     i2l14607:
 28284                           
 28285                           ;doprnt.c: 855: c = 1;
 28286  001D6C  0E01               	movlw	1
 28287  001D6E  6E78               	movwf	i2printf@c,c
 28288  001D70  D002               	goto	i2l1460
 28289  001D72                     i2l1459:
 28290                           
 28291                           ;doprnt.c: 856: else
 28292                           ;doprnt.c: 857: c = exp;
 28293  001D72  C06B  F078         	movff	i2printf@exp,i2printf@c
 28294  001D76                     i2l1460:
 28295                           
 28296                           ;doprnt.c: 858: if(
 28297                           ;doprnt.c: 860: flag & 0x100
 28298                           ;doprnt.c: 862: ||
 28299                           ;doprnt.c: 866: flag & 0x200 && (exp < -4 || exp >= (int)prec)
 28300                           ;doprnt.c: 868: ) {
 28301  001D76  B07A               	btfsc	i2printf@flag+1,0,c
 28302  001D78  D016               	goto	i2l14615
 28303  001D7A  A27A               	btfss	i2printf@flag+1,1,c
 28304  001D7C  D326               	goto	i2l1461
 28305  001D7E  AE6C               	btfss	i2printf@exp+1,7,c
 28306  001D80  D006               	goto	i2l14613
 28307  001D82  0EFC               	movlw	252
 28308  001D84  5C6B               	subwf	i2printf@exp,w,c
 28309  001D86  0EFF               	movlw	255
 28310  001D88  586C               	subwfb	i2printf@exp+1,w,c
 28311  001D8A  A0D8               	btfss	status,0,c
 28312  001D8C  D00C               	goto	i2l14615
 28313  001D8E                     i2l14613:
 28314  001D8E  5076               	movf	i2printf@prec,w,c
 28315  001D90  5C6B               	subwf	i2printf@exp,w,c
 28316  001D92  506C               	movf	i2printf@exp+1,w,c
 28317  001D94  0A80               	xorlw	128
 28318  001D96  6E4C               	movwf	??i2_printf& (0+255),c
 28319  001D98  5077               	movf	i2printf@prec+1,w,c
 28320  001D9A  0A80               	xorlw	128
 28321  001D9C  584C               	subwfb	??i2_printf& (0+255),w,c
 28322  001D9E  B0D8               	btfsc	status,0,c
 28323  001DA0  D002               	goto	i2l14615
 28324  001DA2  D313               	goto	i2l1461
 28325  001DA4  D000               	goto	i2l14615
 28326  001DA6                     i2l14615:
 28327                           
 28328                           ;doprnt.c: 870: if(prec && flag & 0x200)
 28329  001DA6  5076               	movf	i2printf@prec,w,c
 28330  001DA8  1077               	iorwf	i2printf@prec+1,w,c
 28331  001DAA  A4D8               	btfss	status,2,c
 28332  001DAC  A27A               	btfss	i2printf@flag+1,1,c
 28333  001DAE  D004               	goto	i2l14621
 28334                           
 28335                           ;doprnt.c: 871: prec--;
 28336  001DB0  0676               	decf	i2printf@prec,f,c
 28337  001DB2  A0D8               	btfss	status,0,c
 28338  001DB4  0677               	decf	i2printf@prec+1,f,c
 28339  001DB6  D000               	goto	i2l14621
 28340  001DB8                     i2l14621:
 28341                           
 28342                           ;doprnt.c: 873: if((unsigned)prec > (sizeof dpowers/sizeof dpowers[0]) - 2)
 28343  001DB8  5077               	movf	i2printf@prec+1,w,c
 28344  001DBA  E104               	bnz	i2u1696_40
 28345  001DBC  0E09               	movlw	9
 28346  001DBE  5C76               	subwf	i2printf@prec,w,c
 28347  001DC0  A0D8               	btfss	status,0,c
 28348  001DC2  D003               	goto	i2l1467
 28349  001DC4                     i2u1696_40:
 28350                           
 28351                           ;doprnt.c: 874: c = (sizeof dpowers/sizeof dpowers[0]) - 2;
 28352  001DC4  0E08               	movlw	8
 28353  001DC6  6E78               	movwf	i2printf@c,c
 28354  001DC8  D003               	goto	i2l14625
 28355  001DCA                     i2l1467:
 28356                           
 28357                           ;doprnt.c: 875: else
 28358                           ;doprnt.c: 876: c = prec;
 28359  001DCA  C076  F078         	movff	i2printf@prec,i2printf@c
 28360  001DCE  D000               	goto	i2l14625
 28361  001DD0                     i2l14625:
 28362                           
 28363                           ;doprnt.c: 877: if( fval!=0) {
 28364  001DD0  5073               	movf	i2printf@fval,w,c
 28365  001DD2  1074               	iorwf	i2printf@fval+1,w,c
 28366  001DD4  1075               	iorwf	i2printf@fval+2,w,c
 28367  001DD6  B4D8               	btfsc	status,2,c
 28368  001DD8  D0DE               	goto	i2l14645
 28369                           
 28370                           ;doprnt.c: 878: fval /= scale(exp-c);
 28371  001DDA  C073  F032         	movff	i2printf@fval,i2___ftdiv@f1
 28372  001DDE  C074  F033         	movff	i2printf@fval+1,i2___ftdiv@f1+1
 28373  001DE2  C075  F034         	movff	i2printf@fval+2,i2___ftdiv@f1+2
 28374  001DE6  5078               	movf	i2printf@c,w,c
 28375  001DE8  0800               	sublw	0
 28376  001DEA  246B               	addwf	i2printf@exp,w,c
 28377  001DEC  ECCA  F01F         	call	i2_scale
 28378  001DF0  C02B  F035         	movff	?i2_scale,i2___ftdiv@f2
 28379  001DF4  C02C  F036         	movff	?i2_scale+1,i2___ftdiv@f2+1
 28380  001DF8  C02D  F037         	movff	?i2_scale+2,i2___ftdiv@f2+2
 28381  001DFC  EC25  F039         	call	i2___ftdiv	;wreg free
 28382  001E00  C032  F073         	movff	?i2___ftdiv,i2printf@fval
 28383  001E04  C033  F074         	movff	?i2___ftdiv+1,i2printf@fval+1
 28384  001E08  C034  F075         	movff	?i2___ftdiv+2,i2printf@fval+2
 28385                           
 28386                           ;doprnt.c: 893: if(fval - (double)(unsigned long)fval >= 0.5)
 28387  001E0C  C073  F038         	movff	i2printf@fval,i2___ftadd@f2
 28388  001E10  C074  F039         	movff	i2printf@fval+1,i2___ftadd@f2+1
 28389  001E14  C075  F03A         	movff	i2printf@fval+2,i2___ftadd@f2+2
 28390  001E18  C073  F001         	movff	i2printf@fval,i2___fttol@f1
 28391  001E1C  C074  F002         	movff	i2printf@fval+1,i2___fttol@f1+1
 28392  001E20  C075  F003         	movff	i2printf@fval+2,i2___fttol@f1+2
 28393  001E24  EC41  F038         	call	i2___fttol	;wreg free
 28394  001E28  C001  F010         	movff	?i2___fttol,i2___lltoft@c
 28395  001E2C  C002  F011         	movff	?i2___fttol+1,i2___lltoft@c+1
 28396  001E30  C003  F012         	movff	?i2___fttol+2,i2___lltoft@c+2
 28397  001E34  C004  F013         	movff	?i2___fttol+3,i2___lltoft@c+3
 28398  001E38  EC20  F044         	call	i2___lltoft	;wreg free
 28399  001E3C  C010  F019         	movff	?i2___lltoft,i2___ftneg@f1
 28400  001E40  C011  F01A         	movff	?i2___lltoft+1,i2___ftneg@f1+1
 28401  001E44  C012  F01B         	movff	?i2___lltoft+2,i2___ftneg@f1+2
 28402  001E48  ECA9  F047         	call	i2___ftneg	;wreg free
 28403  001E4C  C019  F035         	movff	?i2___ftneg,i2___ftadd@f1
 28404  001E50  C01A  F036         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 28405  001E54  C01B  F037         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 28406  001E58  ECC1  F02B         	call	i2___ftadd	;wreg free
 28407  001E5C  C035  F041         	movff	?i2___ftadd,i2___ftge@ff1
 28408  001E60  C036  F042         	movff	?i2___ftadd+1,i2___ftge@ff1+1
 28409  001E64  C037  F043         	movff	?i2___ftadd+2,i2___ftge@ff1+2
 28410  001E68  0E00               	movlw	0
 28411  001E6A  6E44               	movwf	i2___ftge@ff2,c
 28412  001E6C  0E00               	movlw	0
 28413  001E6E  6E45               	movwf	i2___ftge@ff2+1,c
 28414  001E70  0E3F               	movlw	63
 28415  001E72  6E46               	movwf	i2___ftge@ff2+2,c
 28416  001E74  EC14  F040         	call	i2___ftge	;wreg free
 28417  001E78  A0D8               	btfss	status,0,c
 28418  001E7A  D015               	goto	i2l14633
 28419                           
 28420                           ;doprnt.c: 894: fval += 0.5;
 28421  001E7C  C073  F035         	movff	i2printf@fval,i2___ftadd@f1
 28422  001E80  C074  F036         	movff	i2printf@fval+1,i2___ftadd@f1+1
 28423  001E84  C075  F037         	movff	i2printf@fval+2,i2___ftadd@f1+2
 28424  001E88  0E00               	movlw	0
 28425  001E8A  6E38               	movwf	i2___ftadd@f2,c
 28426  001E8C  0E00               	movlw	0
 28427  001E8E  6E39               	movwf	i2___ftadd@f2+1,c
 28428  001E90  0E3F               	movlw	63
 28429  001E92  6E3A               	movwf	i2___ftadd@f2+2,c
 28430  001E94  ECC1  F02B         	call	i2___ftadd	;wreg free
 28431  001E98  C035  F073         	movff	?i2___ftadd,i2printf@fval
 28432  001E9C  C036  F074         	movff	?i2___ftadd+1,i2printf@fval+1
 28433  001EA0  C037  F075         	movff	?i2___ftadd+2,i2printf@fval+2
 28434  001EA4  D000               	goto	i2l14633
 28435  001EA6                     i2l14633:
 28436                           
 28437                           ;doprnt.c: 895: if((unsigned long)fval >= dpowers[c+1]) {
 28438  001EA6  C078  F04C         	movff	i2printf@c,??i2_printf
 28439  001EAA  6A4D               	clrf	(??i2_printf+1)& (0+255),c
 28440  001EAC  BE4C               	btfsc	??i2_printf& (0+255),7,c
 28441  001EAE  064D               	decf	(??i2_printf+1)& (0+255),f,c
 28442  001EB0  90D8               	bcf	status,0,c
 28443  001EB2  364C               	rlcf	??i2_printf,f,c
 28444  001EB4  364D               	rlcf	??i2_printf+1,f,c
 28445  001EB6  90D8               	bcf	status,0,c
 28446  001EB8  364C               	rlcf	??i2_printf,f,c
 28447  001EBA  364D               	rlcf	??i2_printf+1,f,c
 28448  001EBC  0E04               	movlw	4
 28449  001EBE  264C               	addwf	??i2_printf,f,c
 28450  001EC0  0E00               	movlw	0
 28451  001EC2  224D               	addwfc	??i2_printf+1,f,c
 28452  001EC4  0E0E               	movlw	low _dpowers
 28453  001EC6  244C               	addwf	??i2_printf,w,c
 28454  001EC8  6EF6               	movwf	tblptrl,c
 28455  001ECA  0EFE               	movlw	high _dpowers
 28456  001ECC  204D               	addwfc	??i2_printf+1,w,c
 28457  001ECE  6EF7               	movwf	tblptrh,c
 28458  001ED0                     	if	0	;There are less than 3 active tblptr bytes
 28459  001ED0                     	endif
 28460  001ED0  C073  F001         	movff	i2printf@fval,i2___fttol@f1
 28461  001ED4  C074  F002         	movff	i2printf@fval+1,i2___fttol@f1+1
 28462  001ED8  C075  F003         	movff	i2printf@fval+2,i2___fttol@f1+2
 28463  001EDC  EC41  F038         	call	i2___fttol	;wreg free
 28464  001EE0  0009               	tblrd		*+
 28465  001EE2  50F5               	movf	tablat,w,c
 28466  001EE4  5C01               	subwf	?i2___fttol,w,c
 28467  001EE6  0009               	tblrd		*+
 28468  001EE8  50F5               	movf	tablat,w,c
 28469  001EEA  5802               	subwfb	?i2___fttol+1,w,c
 28470  001EEC  0009               	tblrd		*+
 28471  001EEE  50F5               	movf	tablat,w,c
 28472  001EF0  5803               	subwfb	?i2___fttol+2,w,c
 28473  001EF2  0009               	tblrd		*+
 28474  001EF4  50F5               	movf	tablat,w,c
 28475  001EF6  5804               	subwfb	?i2___fttol+3,w,c
 28476  001EF8  A0D8               	btfss	status,0,c
 28477  001EFA  D017               	goto	i2l14639
 28478                           
 28479                           ;doprnt.c: 896: fval *= 1e-1;
 28480  001EFC  C073  F01C         	movff	i2printf@fval,i2___ftmul@f1
 28481  001F00  C074  F01D         	movff	i2printf@fval+1,i2___ftmul@f1+1
 28482  001F04  C075  F01E         	movff	i2printf@fval+2,i2___ftmul@f1+2
 28483  001F08  0ECD               	movlw	205
 28484  001F0A  6E1F               	movwf	i2___ftmul@f2,c
 28485  001F0C  0ECC               	movlw	204
 28486  001F0E  6E20               	movwf	i2___ftmul@f2+1,c
 28487  001F10  0E3D               	movlw	61
 28488  001F12  6E21               	movwf	i2___ftmul@f2+2,c
 28489  001F14  EC54  F036         	call	i2___ftmul	;wreg free
 28490  001F18  C01C  F073         	movff	?i2___ftmul,i2printf@fval
 28491  001F1C  C01D  F074         	movff	?i2___ftmul+1,i2printf@fval+1
 28492  001F20  C01E  F075         	movff	?i2___ftmul+2,i2printf@fval+2
 28493                           
 28494                           ;doprnt.c: 897: exp++;
 28495  001F24  4A6B               	infsnz	i2printf@exp,f,c
 28496  001F26  2A6C               	incf	i2printf@exp+1,f,c
 28497                           
 28498                           ;doprnt.c: 898: } else if((unsigned long)fval < dpowers[c]) {
 28499  001F28  D036               	goto	i2l14645
 28500  001F2A                     i2l14639:
 28501  001F2A  5078               	movf	i2printf@c,w,c
 28502  001F2C  0D04               	mullw	4
 28503  001F2E  0E0E               	movlw	low _dpowers
 28504  001F30  24F3               	addwf	prodl,w,c
 28505  001F32  6EF6               	movwf	tblptrl,c
 28506  001F34  0EFE               	movlw	high _dpowers
 28507  001F36  20F4               	addwfc	prodh,w,c
 28508  001F38  6EF7               	movwf	tblptrh,c
 28509  001F3A                     	if	0	;There are less than 3 active tblptr bytes
 28510  001F3A                     	endif
 28511  001F3A  C073  F001         	movff	i2printf@fval,i2___fttol@f1
 28512  001F3E  C074  F002         	movff	i2printf@fval+1,i2___fttol@f1+1
 28513  001F42  C075  F003         	movff	i2printf@fval+2,i2___fttol@f1+2
 28514  001F46  EC41  F038         	call	i2___fttol	;wreg free
 28515  001F4A  0009               	tblrd		*+
 28516  001F4C  50F5               	movf	tablat,w,c
 28517  001F4E  5C01               	subwf	?i2___fttol,w,c
 28518  001F50  0009               	tblrd		*+
 28519  001F52  50F5               	movf	tablat,w,c
 28520  001F54  5802               	subwfb	?i2___fttol+1,w,c
 28521  001F56  0009               	tblrd		*+
 28522  001F58  50F5               	movf	tablat,w,c
 28523  001F5A  5803               	subwfb	?i2___fttol+2,w,c
 28524  001F5C  0009               	tblrd		*+
 28525  001F5E  50F5               	movf	tablat,w,c
 28526  001F60  5804               	subwfb	?i2___fttol+3,w,c
 28527  001F62  B0D8               	btfsc	status,0,c
 28528  001F64  D018               	goto	i2l14645
 28529                           
 28530                           ;doprnt.c: 899: fval *= 10.0;
 28531  001F66  C073  F01C         	movff	i2printf@fval,i2___ftmul@f1
 28532  001F6A  C074  F01D         	movff	i2printf@fval+1,i2___ftmul@f1+1
 28533  001F6E  C075  F01E         	movff	i2printf@fval+2,i2___ftmul@f1+2
 28534  001F72  0E00               	movlw	0
 28535  001F74  6E1F               	movwf	i2___ftmul@f2,c
 28536  001F76  0E20               	movlw	32
 28537  001F78  6E20               	movwf	i2___ftmul@f2+1,c
 28538  001F7A  0E41               	movlw	65
 28539  001F7C  6E21               	movwf	i2___ftmul@f2+2,c
 28540  001F7E  EC54  F036         	call	i2___ftmul	;wreg free
 28541  001F82  C01C  F073         	movff	?i2___ftmul,i2printf@fval
 28542  001F86  C01D  F074         	movff	?i2___ftmul+1,i2printf@fval+1
 28543  001F8A  C01E  F075         	movff	?i2___ftmul+2,i2printf@fval+2
 28544                           
 28545                           ;doprnt.c: 900: exp--;
 28546  001F8E  066B               	decf	i2printf@exp,f,c
 28547  001F90  A0D8               	btfss	status,0,c
 28548  001F92  066C               	decf	i2printf@exp+1,f,c
 28549  001F94  D000               	goto	i2l14645
 28550  001F96                     i2l14645:
 28551                           
 28552                           ;doprnt.c: 901: }
 28553                           ;doprnt.c: 903: }
 28554                           ;doprnt.c: 905: if(flag & 0x200 && !(flag & 0x800)) {
 28555  001F96  B27A               	btfsc	i2printf@flag+1,1,c
 28556  001F98  B67A               	btfsc	i2printf@flag+1,3,c
 28557  001F9A  D083               	goto	i2l14669
 28558                           
 28559                           ;doprnt.c: 906: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])))
 28560  001F9C  BE77               	btfsc	i2printf@prec+1,7,c
 28561  001F9E  D00B               	goto	i2l14653
 28562  001FA0  5077               	movf	i2printf@prec+1,w,c
 28563  001FA2  E104               	bnz	i2u1703_40
 28564  001FA4  0E0B               	movlw	11
 28565  001FA6  5C76               	subwf	i2printf@prec,w,c
 28566  001FA8  A0D8               	btfss	status,0,c
 28567  001FAA  D005               	goto	i2l14653
 28568  001FAC                     i2u1703_40:
 28569                           
 28570                           ;doprnt.c: 907: prec = (sizeof dpowers/sizeof dpowers[0]);
 28571  001FAC  0E00               	movlw	0
 28572  001FAE  6E77               	movwf	i2printf@prec+1,c
 28573  001FB0  0E0A               	movlw	10
 28574  001FB2  6E76               	movwf	i2printf@prec,c
 28575  001FB4  D000               	goto	i2l14653
 28576  001FB6                     i2l14653:
 28577                           
 28578                           ;doprnt.c: 915: val = (unsigned long)fval;
 28579  001FB6  C073  F001         	movff	i2printf@fval,i2___fttol@f1
 28580  001FBA  C074  F002         	movff	i2printf@fval+1,i2___fttol@f1+1
 28581  001FBE  C075  F003         	movff	i2printf@fval+2,i2___fttol@f1+2
 28582  001FC2  EC41  F038         	call	i2___fttol	;wreg free
 28583  001FC6  C001  F06F         	movff	?i2___fttol,i2printf@val
 28584  001FCA  C002  F070         	movff	?i2___fttol+1,i2printf@val+1
 28585  001FCE  C003  F071         	movff	?i2___fttol+2,i2printf@val+2
 28586  001FD2  C004  F072         	movff	?i2___fttol+3,i2printf@val+3
 28587                           
 28588                           ;doprnt.c: 916: while(val && val % 10 == 0) {
 28589  001FD6  D01E               	goto	i2l14659
 28590  001FD8                     i2l14655:
 28591                           
 28592                           ;doprnt.c: 917: prec--;
 28593  001FD8  0676               	decf	i2printf@prec,f,c
 28594  001FDA  A0D8               	btfss	status,0,c
 28595  001FDC  0677               	decf	i2printf@prec+1,f,c
 28596                           
 28597                           ;doprnt.c: 918: val /= 10;
 28598  001FDE  C06F  F001         	movff	i2printf@val,i2___lldiv@dividend
 28599  001FE2  C070  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 28600  001FE6  C071  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 28601  001FEA  C072  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 28602  001FEE  0E0A               	movlw	10
 28603  001FF0  6E05               	movwf	i2___lldiv@divisor,c
 28604  001FF2  0E00               	movlw	0
 28605  001FF4  6E06               	movwf	i2___lldiv@divisor+1,c
 28606  001FF6  0E00               	movlw	0
 28607  001FF8  6E07               	movwf	i2___lldiv@divisor+2,c
 28608  001FFA  0E00               	movlw	0
 28609  001FFC  6E08               	movwf	i2___lldiv@divisor+3,c
 28610  001FFE  EC5F  F040         	call	i2___lldiv	;wreg free
 28611  002002  C001  F06F         	movff	?i2___lldiv,i2printf@val
 28612  002006  C002  F070         	movff	?i2___lldiv+1,i2printf@val+1
 28613  00200A  C003  F071         	movff	?i2___lldiv+2,i2printf@val+2
 28614  00200E  C004  F072         	movff	?i2___lldiv+3,i2printf@val+3
 28615  002012  D000               	goto	i2l14659
 28616  002014                     i2l14659:
 28617  002014  506F               	movf	i2printf@val,w,c
 28618  002016  1070               	iorwf	i2printf@val+1,w,c
 28619  002018  1071               	iorwf	i2printf@val+2,w,c
 28620  00201A  1072               	iorwf	i2printf@val+3,w,c
 28621  00201C  B4D8               	btfsc	status,2,c
 28622  00201E  D01A               	goto	i2l14663
 28623  002020  C06F  F00E         	movff	i2printf@val,i2___llmod@dividend
 28624  002024  C070  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 28625  002028  C071  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 28626  00202C  C072  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 28627  002030  0E0A               	movlw	10
 28628  002032  6E12               	movwf	i2___llmod@divisor,c
 28629  002034  0E00               	movlw	0
 28630  002036  6E13               	movwf	i2___llmod@divisor+1,c
 28631  002038  0E00               	movlw	0
 28632  00203A  6E14               	movwf	i2___llmod@divisor+2,c
 28633  00203C  0E00               	movlw	0
 28634  00203E  6E15               	movwf	i2___llmod@divisor+3,c
 28635  002040  EC20  F042         	call	i2___llmod	;wreg free
 28636  002044  500E               	movf	?i2___llmod,w,c
 28637  002046  100F               	iorwf	?i2___llmod+1,w,c
 28638  002048  1010               	iorwf	?i2___llmod+2,w,c
 28639  00204A  1011               	iorwf	?i2___llmod+3,w,c
 28640  00204C  A4D8               	btfss	status,2,c
 28641  00204E  D002               	goto	i2l14663
 28642  002050  D7C3               	goto	i2l14655
 28643  002052  D000               	goto	i2l14663
 28644  002054                     i2l14663:
 28645                           
 28646                           ;doprnt.c: 919: }
 28647                           ;doprnt.c: 921: if(prec < c) {
 28648  002054  5077               	movf	i2printf@prec+1,w,c
 28649  002056  0A80               	xorlw	128
 28650  002058  6E4C               	movwf	??i2_printf& (0+255),c
 28651  00205A  5078               	movf	i2printf@c,w,c
 28652  00205C  5C76               	subwf	i2printf@prec,w,c
 28653  00205E  0E80               	movlw	128
 28654  002060  BE78               	btfsc	i2printf@c,7,c
 28655  002062  0E7F               	movlw	127
 28656  002064  584C               	subwfb	??i2_printf& (0+255),w,c
 28657  002066  B0D8               	btfsc	status,0,c
 28658  002068  D01C               	goto	i2l14669
 28659                           
 28660                           ;doprnt.c: 922: fval /= scale(c-prec);
 28661  00206A  C073  F032         	movff	i2printf@fval,i2___ftdiv@f1
 28662  00206E  C074  F033         	movff	i2printf@fval+1,i2___ftdiv@f1+1
 28663  002072  C075  F034         	movff	i2printf@fval+2,i2___ftdiv@f1+2
 28664  002076  5076               	movf	i2printf@prec,w,c
 28665  002078  0800               	sublw	0
 28666  00207A  2478               	addwf	i2printf@c,w,c
 28667  00207C  ECCA  F01F         	call	i2_scale
 28668  002080  C02B  F035         	movff	?i2_scale,i2___ftdiv@f2
 28669  002084  C02C  F036         	movff	?i2_scale+1,i2___ftdiv@f2+1
 28670  002088  C02D  F037         	movff	?i2_scale+2,i2___ftdiv@f2+2
 28671  00208C  EC25  F039         	call	i2___ftdiv	;wreg free
 28672  002090  C032  F073         	movff	?i2___ftdiv,i2printf@fval
 28673  002094  C033  F074         	movff	?i2___ftdiv+1,i2printf@fval+1
 28674  002098  C034  F075         	movff	?i2___ftdiv+2,i2printf@fval+2
 28675                           
 28676                           ;doprnt.c: 923: c = prec;
 28677  00209C  C076  F078         	movff	i2printf@prec,i2printf@c
 28678  0020A0  D000               	goto	i2l14669
 28679  0020A2                     i2l14669:
 28680                           
 28681                           ;doprnt.c: 924: }
 28682                           ;doprnt.c: 926: }
 28683                           ;doprnt.c: 929: width -= prec + 5;
 28684  0020A2  0E05               	movlw	5
 28685  0020A4  2476               	addwf	i2printf@prec,w,c
 28686  0020A6  6E4C               	movwf	??i2_printf& (0+255),c
 28687  0020A8  0E00               	movlw	0
 28688  0020AA  2077               	addwfc	i2printf@prec+1,w,c
 28689  0020AC  6E4D               	movwf	(??i2_printf+1)& (0+255),c
 28690  0020AE  504C               	movf	??i2_printf,w,c
 28691  0020B0  5E6D               	subwf	i2printf@width,f,c
 28692  0020B2  504D               	movf	??i2_printf+1,w,c
 28693  0020B4  5A6E               	subwfb	i2printf@width+1,f,c
 28694                           
 28695                           ;doprnt.c: 931: if(prec || flag & 0x800)
 28696  0020B6  5076               	movf	i2printf@prec,w,c
 28697  0020B8  1077               	iorwf	i2printf@prec+1,w,c
 28698  0020BA  A4D8               	btfss	status,2,c
 28699  0020BC  D002               	goto	i2l14675
 28700  0020BE  A67A               	btfss	i2printf@flag+1,3,c
 28701  0020C0  D004               	goto	i2l14677
 28702  0020C2                     i2l14675:
 28703                           
 28704                           ;doprnt.c: 932: width--;
 28705  0020C2  066D               	decf	i2printf@width,f,c
 28706  0020C4  A0D8               	btfss	status,0,c
 28707  0020C6  066E               	decf	i2printf@width+1,f,c
 28708  0020C8  D000               	goto	i2l14677
 28709  0020CA                     i2l14677:
 28710                           
 28711                           ;doprnt.c: 934: if(flag & 0x03)
 28712  0020CA  0E03               	movlw	3
 28713  0020CC  1479               	andwf	i2printf@flag,w,c
 28714  0020CE  6E4C               	movwf	??i2_printf& (0+255),c
 28715  0020D0  0E00               	movlw	0
 28716  0020D2  147A               	andwf	i2printf@flag+1,w,c
 28717  0020D4  6E4D               	movwf	(??i2_printf+1)& (0+255),c
 28718  0020D6  504C               	movf	??i2_printf,w,c
 28719  0020D8  104D               	iorwf	??i2_printf+1,w,c
 28720  0020DA  B4D8               	btfsc	status,2,c
 28721  0020DC  D004               	goto	i2l14681
 28722                           
 28723                           ;doprnt.c: 935: width--;
 28724  0020DE  066D               	decf	i2printf@width,f,c
 28725  0020E0  A0D8               	btfss	status,0,c
 28726  0020E2  066E               	decf	i2printf@width+1,f,c
 28727  0020E4  D000               	goto	i2l14681
 28728  0020E6                     i2l14681:
 28729                           
 28730                           ;doprnt.c: 946: if(flag & 0x04) {
 28731  0020E6  A479               	btfss	i2printf@flag,2,c
 28732  0020E8  D027               	goto	i2l1486
 28733                           
 28734                           ;doprnt.c: 948: if(flag & 0x02)
 28735  0020EA  A279               	btfss	i2printf@flag,1,c
 28736  0020EC  D00F               	goto	i2l1487
 28737                           
 28738                           ;doprnt.c: 949: (putch(flag & 0x01 ? '-' : '+') );
 28739  0020EE  B079               	btfsc	i2printf@flag,0,c
 28740  0020F0  D004               	goto	i2l14689
 28741  0020F2  0E00               	movlw	0
 28742  0020F4  6E57               	movwf	i2_printf$2205+1,c
 28743  0020F6  0E2B               	movlw	43
 28744  0020F8  D003               	goto	L30
 28745  0020FA                     i2l14689:
 28746  0020FA  0E00               	movlw	0
 28747  0020FC  6E57               	movwf	i2_printf$2205+1,c
 28748  0020FE  0E2D               	movlw	45
 28749  002100                     L30:
 28750  002100  6E56               	movwf	i2_printf$2205,c
 28751  002102  D000               	goto	i2l14691
 28752  002104                     i2l14691:
 28753  002104  5056               	movf	i2_printf$2205,w,c
 28754  002106  EC49  F049         	call	i2_putch
 28755  00210A  D00D               	goto	i2l14699
 28756  00210C                     i2l1487:
 28757                           
 28758                           ;doprnt.c: 950: else if(flag & 0x01)
 28759  00210C  A079               	btfss	i2printf@flag,0,c
 28760  00210E  D00B               	goto	i2l14699
 28761                           
 28762                           ;doprnt.c: 951: (putch(' ') );
 28763  002110  0E20               	movlw	32
 28764  002112  EC49  F049         	call	i2_putch
 28765                           
 28766                           ;doprnt.c: 953: while(width > 0) {
 28767  002116  D007               	goto	i2l14699
 28768  002118                     i2l14695:
 28769                           
 28770                           ;doprnt.c: 954: (putch('0') );
 28771  002118  0E30               	movlw	48
 28772  00211A  EC49  F049         	call	i2_putch
 28773                           
 28774                           ;doprnt.c: 955: width--;
 28775  00211E  066D               	decf	i2printf@width,f,c
 28776  002120  A0D8               	btfss	status,0,c
 28777  002122  066E               	decf	i2printf@width+1,f,c
 28778  002124  D000               	goto	i2l14699
 28779  002126                     i2l14699:
 28780  002126  BE6E               	btfsc	i2printf@width+1,7,c
 28781  002128  D030               	goto	i2l14719
 28782  00212A  506E               	movf	i2printf@width+1,w,c
 28783  00212C  E1F5               	bnz	i2l14695
 28784  00212E  046D               	decf	i2printf@width,w,c
 28785  002130  A0D8               	btfss	status,0,c
 28786  002132  D02B               	goto	i2l14719
 28787  002134  D7F1               	goto	i2l14695
 28788                           
 28789                           ;doprnt.c: 956: }
 28790                           ;doprnt.c: 957: } else
 28791  002136  D029               	goto	i2l14719
 28792  002138                     i2l1486:
 28793                           
 28794                           ;doprnt.c: 959: {
 28795                           ;doprnt.c: 962: if(!(flag & 0x08))
 28796  002138  A679               	btfss	i2printf@flag,3,c
 28797  00213A  D009               	goto	i2l14707
 28798  00213C  D00F               	goto	i2l1498
 28799                           
 28800                           ;doprnt.c: 964: while(width > 0) {
 28801  00213E  D007               	goto	i2l14707
 28802  002140                     i2l14703:
 28803                           
 28804                           ;doprnt.c: 965: (putch(' ') );
 28805  002140  0E20               	movlw	32
 28806  002142  EC49  F049         	call	i2_putch
 28807                           
 28808                           ;doprnt.c: 966: width--;
 28809  002146  066D               	decf	i2printf@width,f,c
 28810  002148  A0D8               	btfss	status,0,c
 28811  00214A  066E               	decf	i2printf@width+1,f,c
 28812  00214C  D000               	goto	i2l14707
 28813  00214E                     i2l14707:
 28814  00214E  BE6E               	btfsc	i2printf@width+1,7,c
 28815  002150  D005               	goto	i2l1498
 28816  002152  506E               	movf	i2printf@width+1,w,c
 28817  002154  E1F5               	bnz	i2l14703
 28818  002156  046D               	decf	i2printf@width,w,c
 28819  002158  B0D8               	btfsc	status,0,c
 28820  00215A  D7F2               	goto	i2l14703
 28821  00215C                     i2l1498:
 28822                           
 28823                           ;doprnt.c: 967: }
 28824                           ;doprnt.c: 970: if(flag & 0x02)
 28825  00215C  A279               	btfss	i2printf@flag,1,c
 28826  00215E  D00F               	goto	i2l1502
 28827                           
 28828                           ;doprnt.c: 971: (putch(flag & 0x01 ? '-' : '+') );
 28829  002160  B079               	btfsc	i2printf@flag,0,c
 28830  002162  D004               	goto	i2l14713
 28831  002164  0E00               	movlw	0
 28832  002166  6E59               	movwf	i2_printf$2206+1,c
 28833  002168  0E2B               	movlw	43
 28834  00216A  D003               	goto	L31
 28835  00216C                     i2l14713:
 28836  00216C  0E00               	movlw	0
 28837  00216E  6E59               	movwf	i2_printf$2206+1,c
 28838  002170  0E2D               	movlw	45
 28839  002172                     L31:
 28840  002172  6E58               	movwf	i2_printf$2206,c
 28841  002174  D000               	goto	i2l14715
 28842  002176                     i2l14715:
 28843  002176  5058               	movf	i2_printf$2206,w,c
 28844  002178  EC49  F049         	call	i2_putch
 28845  00217C  D006               	goto	i2l14719
 28846  00217E                     i2l1502:
 28847                           
 28848                           ;doprnt.c: 977: else if(flag & 0x01)
 28849  00217E  A079               	btfss	i2printf@flag,0,c
 28850  002180  D004               	goto	i2l14719
 28851                           
 28852                           ;doprnt.c: 978: (putch(' ') );
 28853  002182  0E20               	movlw	32
 28854  002184  EC49  F049         	call	i2_putch
 28855  002188  D000               	goto	i2l14719
 28856  00218A                     i2l14719:
 28857                           
 28858                           ;doprnt.c: 980: }
 28859                           ;doprnt.c: 985: val = (unsigned long)fval;
 28860  00218A  C073  F001         	movff	i2printf@fval,i2___fttol@f1
 28861  00218E  C074  F002         	movff	i2printf@fval+1,i2___fttol@f1+1
 28862  002192  C075  F003         	movff	i2printf@fval+2,i2___fttol@f1+2
 28863  002196  EC41  F038         	call	i2___fttol	;wreg free
 28864  00219A  C001  F06F         	movff	?i2___fttol,i2printf@val
 28865  00219E  C002  F070         	movff	?i2___fttol+1,i2printf@val+1
 28866  0021A2  C003  F071         	movff	?i2___fttol+2,i2printf@val+2
 28867  0021A6  C004  F072         	movff	?i2___fttol+3,i2printf@val+3
 28868                           
 28869                           ;doprnt.c: 986: (putch(val/dpowers[c] + '0') );
 28870  0021AA  C06F  F001         	movff	i2printf@val,i2___lldiv@dividend
 28871  0021AE  C070  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 28872  0021B2  C071  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 28873  0021B6  C072  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 28874  0021BA  5078               	movf	i2printf@c,w,c
 28875  0021BC  0D04               	mullw	4
 28876  0021BE  0E0E               	movlw	low _dpowers
 28877  0021C0  24F3               	addwf	prodl,w,c
 28878  0021C2  6EF6               	movwf	tblptrl,c
 28879  0021C4  0EFE               	movlw	high _dpowers
 28880  0021C6  20F4               	addwfc	prodh,w,c
 28881  0021C8  6EF7               	movwf	tblptrh,c
 28882  0021CA                     	if	0	;There are less than 3 active tblptr bytes
 28883  0021CA                     	endif
 28884  0021CA  0009               	tblrd		*+
 28885  0021CC  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 28886  0021D0  0009               	tblrd		*+
 28887  0021D2  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 28888  0021D6  0009               	tblrd		*+
 28889  0021D8  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 28890  0021DC  000A               	tblrd		*-
 28891  0021DE  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 28892  0021E2  EC5F  F040         	call	i2___lldiv	;wreg free
 28893  0021E6  5001               	movf	?i2___lldiv,w,c
 28894  0021E8  0F30               	addlw	48
 28895  0021EA  EC49  F049         	call	i2_putch
 28896                           
 28897                           ;doprnt.c: 987: val %= dpowers[c];
 28898  0021EE  C06F  F00E         	movff	i2printf@val,i2___llmod@dividend
 28899  0021F2  C070  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 28900  0021F6  C071  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 28901  0021FA  C072  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 28902  0021FE  5078               	movf	i2printf@c,w,c
 28903  002200  0D04               	mullw	4
 28904  002202  0E0E               	movlw	low _dpowers
 28905  002204  24F3               	addwf	prodl,w,c
 28906  002206  6EF6               	movwf	tblptrl,c
 28907  002208  0EFE               	movlw	high _dpowers
 28908  00220A  20F4               	addwfc	prodh,w,c
 28909  00220C  6EF7               	movwf	tblptrh,c
 28910  00220E                     	if	0	;There are less than 3 active tblptr bytes
 28911  00220E                     	endif
 28912  00220E  0009               	tblrd		*+
 28913  002210  CFF5 F012          	movff	tablat,i2___llmod@divisor
 28914  002214  0009               	tblrd		*+
 28915  002216  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 28916  00221A  0009               	tblrd		*+
 28917  00221C  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 28918  002220  000A               	tblrd		*-
 28919  002222  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 28920  002226  EC20  F042         	call	i2___llmod	;wreg free
 28921  00222A  C00E  F06F         	movff	?i2___llmod,i2printf@val
 28922  00222E  C00F  F070         	movff	?i2___llmod+1,i2printf@val+1
 28923  002232  C010  F071         	movff	?i2___llmod+2,i2printf@val+2
 28924  002236  C011  F072         	movff	?i2___llmod+3,i2printf@val+3
 28925                           
 28926                           ;doprnt.c: 990: if(prec || flag & 0x800)
 28927  00223A  5076               	movf	i2printf@prec,w,c
 28928  00223C  1077               	iorwf	i2printf@prec+1,w,c
 28929  00223E  A4D8               	btfss	status,2,c
 28930  002240  D002               	goto	i2l14729
 28931  002242  A67A               	btfss	i2printf@flag+1,3,c
 28932  002244  D074               	goto	i2l1509
 28933  002246                     i2l14729:
 28934                           
 28935                           ;doprnt.c: 994: {
 28936                           ;doprnt.c: 995: (putch('.') );
 28937  002246  0E2E               	movlw	46
 28938  002248  EC49  F049         	call	i2_putch
 28939                           
 28940                           ;doprnt.c: 996: prec -= c;
 28941  00224C  5078               	movf	i2printf@c,w,c
 28942  00224E  5E76               	subwf	i2printf@prec,f,c
 28943  002250  0E00               	movlw	0
 28944  002252  BE78               	btfsc	i2printf@c,7,c
 28945  002254  0EFF               	movlw	255
 28946  002256  5A77               	subwfb	i2printf@prec+1,f,c
 28947                           
 28948                           ;doprnt.c: 997: while(c--) {
 28949  002258  D059               	goto	i2l14739
 28950  00225A                     i2l1513:
 28951                           
 28952                           ;doprnt.c: 1002: if(flag & 0x200 && val == 0) {
 28953  00225A  A27A               	btfss	i2printf@flag+1,1,c
 28954  00225C  D00E               	goto	i2l14737
 28955  00225E  506F               	movf	i2printf@val,w,c
 28956  002260  1070               	iorwf	i2printf@val+1,w,c
 28957  002262  1071               	iorwf	i2printf@val+2,w,c
 28958  002264  1072               	iorwf	i2printf@val+3,w,c
 28959  002266  A4D8               	btfss	status,2,c
 28960  002268  D008               	goto	i2l14737
 28961                           
 28962                           ;doprnt.c: 1003: prec = c = 0;
 28963  00226A  0E00               	movlw	0
 28964  00226C  6E78               	movwf	i2printf@c,c
 28965  00226E  5078               	movf	i2printf@c,w,c
 28966  002270  6E76               	movwf	i2printf@prec,c
 28967  002272  6A77               	clrf	i2printf@prec+1,c
 28968  002274  BE76               	btfsc	i2printf@prec,7,c
 28969  002276  0677               	decf	i2printf@prec+1,f,c
 28970                           
 28971                           ;doprnt.c: 1004: break;
 28972  002278  D056               	goto	i2l14745
 28973  00227A                     i2l14737:
 28974                           
 28975                           ;doprnt.c: 1005: }
 28976                           ;doprnt.c: 1007: (putch('0' + (val/dpowers[c])) );
 28977  00227A  C06F  F001         	movff	i2printf@val,i2___lldiv@dividend
 28978  00227E  C070  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 28979  002282  C071  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 28980  002286  C072  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 28981  00228A  5078               	movf	i2printf@c,w,c
 28982  00228C  0D04               	mullw	4
 28983  00228E  0E0E               	movlw	low _dpowers
 28984  002290  24F3               	addwf	prodl,w,c
 28985  002292  6EF6               	movwf	tblptrl,c
 28986  002294  0EFE               	movlw	high _dpowers
 28987  002296  20F4               	addwfc	prodh,w,c
 28988  002298  6EF7               	movwf	tblptrh,c
 28989  00229A                     	if	0	;There are less than 3 active tblptr bytes
 28990  00229A                     	endif
 28991  00229A  0009               	tblrd		*+
 28992  00229C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 28993  0022A0  0009               	tblrd		*+
 28994  0022A2  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 28995  0022A6  0009               	tblrd		*+
 28996  0022A8  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 28997  0022AC  000A               	tblrd		*-
 28998  0022AE  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 28999  0022B2  EC5F  F040         	call	i2___lldiv	;wreg free
 29000  0022B6  5001               	movf	?i2___lldiv,w,c
 29001  0022B8  0F30               	addlw	48
 29002  0022BA  EC49  F049         	call	i2_putch
 29003                           
 29004                           ;doprnt.c: 1008: val %= dpowers[c];
 29005  0022BE  C06F  F00E         	movff	i2printf@val,i2___llmod@dividend
 29006  0022C2  C070  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 29007  0022C6  C071  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 29008  0022CA  C072  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 29009  0022CE  5078               	movf	i2printf@c,w,c
 29010  0022D0  0D04               	mullw	4
 29011  0022D2  0E0E               	movlw	low _dpowers
 29012  0022D4  24F3               	addwf	prodl,w,c
 29013  0022D6  6EF6               	movwf	tblptrl,c
 29014  0022D8  0EFE               	movlw	high _dpowers
 29015  0022DA  20F4               	addwfc	prodh,w,c
 29016  0022DC  6EF7               	movwf	tblptrh,c
 29017  0022DE                     	if	0	;There are less than 3 active tblptr bytes
 29018  0022DE                     	endif
 29019  0022DE  0009               	tblrd		*+
 29020  0022E0  CFF5 F012          	movff	tablat,i2___llmod@divisor
 29021  0022E4  0009               	tblrd		*+
 29022  0022E6  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 29023  0022EA  0009               	tblrd		*+
 29024  0022EC  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 29025  0022F0  000A               	tblrd		*-
 29026  0022F2  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 29027  0022F6  EC20  F042         	call	i2___llmod	;wreg free
 29028  0022FA  C00E  F06F         	movff	?i2___llmod,i2printf@val
 29029  0022FE  C00F  F070         	movff	?i2___llmod+1,i2printf@val+1
 29030  002302  C010  F071         	movff	?i2___llmod+2,i2printf@val+2
 29031  002306  C011  F072         	movff	?i2___llmod+3,i2printf@val+3
 29032  00230A  D000               	goto	i2l14739
 29033  00230C                     i2l14739:
 29034  00230C  0678               	decf	i2printf@c,f,c
 29035  00230E  2878               	incf	i2printf@c,w,c
 29036  002310  B4D8               	btfsc	status,2,c
 29037  002312  D009               	goto	i2l14745
 29038  002314  D7A2               	goto	i2l1513
 29039                           
 29040                           ;doprnt.c: 1010: }
 29041                           ;doprnt.c: 1011: while(prec) {
 29042  002316  D007               	goto	i2l14745
 29043  002318                     i2l14741:
 29044                           
 29045                           ;doprnt.c: 1012: (putch('0') );
 29046  002318  0E30               	movlw	48
 29047  00231A  EC49  F049         	call	i2_putch
 29048                           
 29049                           ;doprnt.c: 1013: prec--;
 29050  00231E  0676               	decf	i2printf@prec,f,c
 29051  002320  A0D8               	btfss	status,0,c
 29052  002322  0677               	decf	i2printf@prec+1,f,c
 29053  002324  D000               	goto	i2l14745
 29054  002326                     i2l14745:
 29055  002326  5076               	movf	i2printf@prec,w,c
 29056  002328  1077               	iorwf	i2printf@prec+1,w,c
 29057  00232A  A4D8               	btfss	status,2,c
 29058  00232C  D7F5               	goto	i2l14741
 29059  00232E                     i2l1509:
 29060                           
 29061                           ;doprnt.c: 1014: }
 29062                           ;doprnt.c: 1015: }
 29063                           ;doprnt.c: 1017: if(flag & 0x20)
 29064  00232E  AA79               	btfss	i2printf@flag,5,c
 29065  002330  D004               	goto	i2l14749
 29066                           
 29067                           ;doprnt.c: 1018: (putch('E') );
 29068  002332  0E45               	movlw	69
 29069  002334  EC49  F049         	call	i2_putch
 29070  002338  D004               	goto	i2l14751
 29071  00233A                     i2l14749:
 29072                           
 29073                           ;doprnt.c: 1019: else
 29074                           ;doprnt.c: 1021: (putch('e') );
 29075  00233A  0E65               	movlw	101
 29076  00233C  EC49  F049         	call	i2_putch
 29077  002340  D000               	goto	i2l14751
 29078  002342                     i2l14751:
 29079                           
 29080                           ;doprnt.c: 1022: if(exp < 0) {
 29081  002342  AE6C               	btfss	i2printf@exp+1,7,c
 29082  002344  D008               	goto	i2l14757
 29083                           
 29084                           ;doprnt.c: 1023: exp = -exp;
 29085  002346  6C6B               	negf	i2printf@exp,c
 29086  002348  1E6C               	comf	i2printf@exp+1,f,c
 29087  00234A  B0D8               	btfsc	status,0,c
 29088  00234C  2A6C               	incf	i2printf@exp+1,f,c
 29089                           
 29090                           ;doprnt.c: 1024: (putch('-') );
 29091  00234E  0E2D               	movlw	45
 29092  002350  EC49  F049         	call	i2_putch
 29093                           
 29094                           ;doprnt.c: 1025: } else
 29095  002354  D004               	goto	i2l14759
 29096  002356                     i2l14757:
 29097                           
 29098                           ;doprnt.c: 1026: (putch('+') );
 29099  002356  0E2B               	movlw	43
 29100  002358  EC49  F049         	call	i2_putch
 29101  00235C  D000               	goto	i2l14759
 29102  00235E                     i2l14759:
 29103                           
 29104                           ;doprnt.c: 1039: (putch(exp / 10 + '0') );
 29105  00235E  C06B  F007         	movff	i2printf@exp,i2___awdiv@dividend
 29106  002362  C06C  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 29107  002366  0E00               	movlw	0
 29108  002368  6E0A               	movwf	i2___awdiv@divisor+1,c
 29109  00236A  0E0A               	movlw	10
 29110  00236C  6E09               	movwf	i2___awdiv@divisor,c
 29111  00236E  ECC9  F03F         	call	i2___awdiv	;wreg free
 29112  002372  5007               	movf	?i2___awdiv,w,c
 29113  002374  0F30               	addlw	48
 29114  002376  EC49  F049         	call	i2_putch
 29115                           
 29116                           ;doprnt.c: 1040: (putch(exp % 10 + '0') );
 29117  00237A  C06B  F001         	movff	i2printf@exp,i2___awmod@dividend
 29118  00237E  C06C  F002         	movff	i2printf@exp+1,i2___awmod@dividend+1
 29119  002382  0E00               	movlw	0
 29120  002384  6E04               	movwf	i2___awmod@divisor+1,c
 29121  002386  0E0A               	movlw	10
 29122  002388  6E03               	movwf	i2___awmod@divisor,c
 29123  00238A  EC2A  F041         	call	i2___awmod	;wreg free
 29124  00238E  5001               	movf	?i2___awmod,w,c
 29125  002390  0F30               	addlw	48
 29126  002392  EC49  F049         	call	i2_putch
 29127                           
 29128                           ;doprnt.c: 1042: if((flag & 0x08) && width > 0)
 29129  002396  B679               	btfsc	i2printf@flag,3,c
 29130  002398  BE6E               	btfsc	i2printf@width+1,7,c
 29131  00239A  EFA1  F017         	goto	i2l15105
 29132  00239E  506E               	movf	i2printf@width+1,w,c
 29133  0023A0  E106               	bnz	i2l14767
 29134  0023A2  046D               	decf	i2printf@width,w,c
 29135  0023A4  B0D8               	btfsc	status,0,c
 29136  0023A6  D003               	goto	i2l14767
 29137  0023A8  EFA1  F017         	goto	i2l15105
 29138  0023AC  D000               	goto	i2l14767
 29139  0023AE                     i2l14767:
 29140                           
 29141                           ;doprnt.c: 1044: (putch(' ') );
 29142  0023AE  0E20               	movlw	32
 29143  0023B0  EC49  F049         	call	i2_putch
 29144                           
 29145                           ;doprnt.c: 1045: while(--width);
 29146  0023B4  066D               	decf	i2printf@width,f,c
 29147  0023B6  A0D8               	btfss	status,0,c
 29148  0023B8  066E               	decf	i2printf@width+1,f,c
 29149  0023BA  506D               	movf	i2printf@width,w,c
 29150  0023BC  106E               	iorwf	i2printf@width+1,w,c
 29151  0023BE  B4D8               	btfsc	status,2,c
 29152  0023C0  EFA1  F017         	goto	i2l15105
 29153  0023C4  D7F4               	goto	i2l14767
 29154                           
 29155                           ;doprnt.c: 1047: continue;
 29156  0023C6  EFA1  F017         	goto	i2l15105
 29157  0023CA                     i2l1461:
 29158                           
 29159                           ;doprnt.c: 1048: }
 29160                           ;doprnt.c: 1087: if(flag & 0x200) {
 29161  0023CA  A27A               	btfss	i2printf@flag+1,1,c
 29162  0023CC  D0EE               	goto	i2l14807
 29163                           
 29164                           ;doprnt.c: 1088: if(exp < 0)
 29165  0023CE  AE6C               	btfss	i2printf@exp+1,7,c
 29166  0023D0  D00B               	goto	i2l14775
 29167                           
 29168                           ;doprnt.c: 1089: prec -= (exp+1);
 29169  0023D2  0E01               	movlw	1
 29170  0023D4  246B               	addwf	i2printf@exp,w,c
 29171  0023D6  6E4C               	movwf	??i2_printf& (0+255),c
 29172  0023D8  0E00               	movlw	0
 29173  0023DA  206C               	addwfc	i2printf@exp+1,w,c
 29174  0023DC  6E4D               	movwf	(??i2_printf+1)& (0+255),c
 29175  0023DE  504C               	movf	??i2_printf,w,c
 29176  0023E0  5E76               	subwf	i2printf@prec,f,c
 29177  0023E2  504D               	movf	??i2_printf+1,w,c
 29178  0023E4  5A77               	subwfb	i2printf@prec+1,f,c
 29179  0023E6  D000               	goto	i2l14775
 29180  0023E8                     i2l14775:
 29181                           
 29182                           ;doprnt.c: 1091: val = (unsigned long)fval;
 29183  0023E8  C073  F001         	movff	i2printf@fval,i2___fttol@f1
 29184  0023EC  C074  F002         	movff	i2printf@fval+1,i2___fttol@f1+1
 29185  0023F0  C075  F003         	movff	i2printf@fval+2,i2___fttol@f1+2
 29186  0023F4  EC41  F038         	call	i2___fttol	;wreg free
 29187  0023F8  C001  F06F         	movff	?i2___fttol,i2printf@val
 29188  0023FC  C002  F070         	movff	?i2___fttol+1,i2printf@val+1
 29189  002400  C003  F071         	movff	?i2___fttol+2,i2printf@val+2
 29190  002404  C004  F072         	movff	?i2___fttol+3,i2printf@val+3
 29191                           
 29192                           ;doprnt.c: 1092: for(c = 0 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 29193  002408  0E00               	movlw	0
 29194  00240A  6E78               	movwf	i2printf@c,c
 29195  00240C                     i2l14779:
 29196  00240C  0E0A               	movlw	10
 29197  00240E  1878               	xorwf	i2printf@c,w,c
 29198  002410  B4D8               	btfsc	status,2,c
 29199  002412  D01C               	goto	i2l14791
 29200  002414  D001               	goto	i2l14783
 29201  002416  D01A               	goto	i2l14791
 29202  002418                     i2l14783:
 29203                           
 29204                           ;doprnt.c: 1093: if(val < dpowers[c])
 29205  002418  5078               	movf	i2printf@c,w,c
 29206  00241A  0D04               	mullw	4
 29207  00241C  0E0E               	movlw	low _dpowers
 29208  00241E  24F3               	addwf	prodl,w,c
 29209  002420  6EF6               	movwf	tblptrl,c
 29210  002422  0EFE               	movlw	high _dpowers
 29211  002424  20F4               	addwfc	prodh,w,c
 29212  002426  6EF7               	movwf	tblptrh,c
 29213  002428                     	if	0	;There are less than 3 active tblptr bytes
 29214  002428                     	endif
 29215  002428  0009               	tblrd		*+
 29216  00242A  50F5               	movf	tablat,w,c
 29217  00242C  5C6F               	subwf	i2printf@val,w,c
 29218  00242E  0009               	tblrd		*+
 29219  002430  50F5               	movf	tablat,w,c
 29220  002432  5870               	subwfb	i2printf@val+1,w,c
 29221  002434  0009               	tblrd		*+
 29222  002436  50F5               	movf	tablat,w,c
 29223  002438  5871               	subwfb	i2printf@val+2,w,c
 29224  00243A  0009               	tblrd		*+
 29225  00243C  50F5               	movf	tablat,w,c
 29226  00243E  5872               	subwfb	i2printf@val+3,w,c
 29227  002440  A0D8               	btfss	status,0,c
 29228  002442  D004               	goto	i2l14791
 29229  002444  D001               	goto	i2l14787
 29230                           
 29231                           ;doprnt.c: 1094: break;
 29232  002446  D002               	goto	i2l14791
 29233  002448                     i2l14787:
 29234  002448  2A78               	incf	i2printf@c,f,c
 29235  00244A  D7E0               	goto	i2l14779
 29236  00244C                     i2l14791:
 29237                           
 29238                           ;doprnt.c: 1095: prec -= c;
 29239  00244C  5078               	movf	i2printf@c,w,c
 29240  00244E  5E76               	subwf	i2printf@prec,f,c
 29241  002450  0E00               	movlw	0
 29242  002452  BE78               	btfsc	i2printf@c,7,c
 29243  002454  0EFF               	movlw	255
 29244  002456  5A77               	subwfb	i2printf@prec+1,f,c
 29245                           
 29246                           ;doprnt.c: 1096: if(prec <= 12)
 29247  002458  BE77               	btfsc	i2printf@prec+1,7,c
 29248  00245A  D006               	goto	i2l14793
 29249  00245C  5077               	movf	i2printf@prec+1,w,c
 29250  00245E  E11B               	bnz	i2l1531
 29251  002460  0E0D               	movlw	13
 29252  002462  5C76               	subwf	i2printf@prec,w,c
 29253  002464  B0D8               	btfsc	status,0,c
 29254  002466  D017               	goto	i2l1531
 29255  002468                     i2l14793:
 29256                           
 29257                           ;doprnt.c: 1097: fval += fround(prec);
 29258  002468  C073  F035         	movff	i2printf@fval,i2___ftadd@f1
 29259  00246C  C074  F036         	movff	i2printf@fval+1,i2___ftadd@f1+1
 29260  002470  C075  F037         	movff	i2printf@fval+2,i2___ftadd@f1+2
 29261  002474  5076               	movf	i2printf@prec,w,c
 29262  002476  EC99  F026         	call	i2_fround
 29263  00247A  C02B  F038         	movff	?i2_fround,i2___ftadd@f2
 29264  00247E  C02C  F039         	movff	?i2_fround+1,i2___ftadd@f2+1
 29265  002482  C02D  F03A         	movff	?i2_fround+2,i2___ftadd@f2+2
 29266  002486  ECC1  F02B         	call	i2___ftadd	;wreg free
 29267  00248A  C035  F073         	movff	?i2___ftadd,i2printf@fval
 29268  00248E  C036  F074         	movff	?i2___ftadd+1,i2printf@fval+1
 29269  002492  C037  F075         	movff	?i2___ftadd+2,i2printf@fval+2
 29270  002496                     i2l1531:
 29271                           
 29272                           ;doprnt.c: 1100: {
 29273                           ;doprnt.c: 1101: double temp;
 29274                           ;doprnt.c: 1102: temp = scale(prec);
 29275  002496  5076               	movf	i2printf@prec,w,c
 29276  002498  ECCA  F01F         	call	i2_scale
 29277  00249C  C02B  F062         	movff	?i2_scale,i2printf@temp
 29278  0024A0  C02C  F063         	movff	?i2_scale+1,i2printf@temp+1
 29279  0024A4  C02D  F064         	movff	?i2_scale+2,i2printf@temp+2
 29280                           
 29281                           ;doprnt.c: 1103: temp *= fval - (double)val;
 29282  0024A8  C062  F01C         	movff	i2printf@temp,i2___ftmul@f1
 29283  0024AC  C063  F01D         	movff	i2printf@temp+1,i2___ftmul@f1+1
 29284  0024B0  C064  F01E         	movff	i2printf@temp+2,i2___ftmul@f1+2
 29285  0024B4  C073  F038         	movff	i2printf@fval,i2___ftadd@f2
 29286  0024B8  C074  F039         	movff	i2printf@fval+1,i2___ftadd@f2+1
 29287  0024BC  C075  F03A         	movff	i2printf@fval+2,i2___ftadd@f2+2
 29288  0024C0  C06F  F010         	movff	i2printf@val,i2___lltoft@c
 29289  0024C4  C070  F011         	movff	i2printf@val+1,i2___lltoft@c+1
 29290  0024C8  C071  F012         	movff	i2printf@val+2,i2___lltoft@c+2
 29291  0024CC  C072  F013         	movff	i2printf@val+3,i2___lltoft@c+3
 29292  0024D0  EC20  F044         	call	i2___lltoft	;wreg free
 29293  0024D4  C010  F019         	movff	?i2___lltoft,i2___ftneg@f1
 29294  0024D8  C011  F01A         	movff	?i2___lltoft+1,i2___ftneg@f1+1
 29295  0024DC  C012  F01B         	movff	?i2___lltoft+2,i2___ftneg@f1+2
 29296  0024E0  ECA9  F047         	call	i2___ftneg	;wreg free
 29297  0024E4  C019  F035         	movff	?i2___ftneg,i2___ftadd@f1
 29298  0024E8  C01A  F036         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 29299  0024EC  C01B  F037         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 29300  0024F0  ECC1  F02B         	call	i2___ftadd	;wreg free
 29301  0024F4  C035  F01F         	movff	?i2___ftadd,i2___ftmul@f2
 29302  0024F8  C036  F020         	movff	?i2___ftadd+1,i2___ftmul@f2+1
 29303  0024FC  C037  F021         	movff	?i2___ftadd+2,i2___ftmul@f2+2
 29304  002500  EC54  F036         	call	i2___ftmul	;wreg free
 29305  002504  C01C  F062         	movff	?i2___ftmul,i2printf@temp
 29306  002508  C01D  F063         	movff	?i2___ftmul+1,i2printf@temp+1
 29307  00250C  C01E  F064         	movff	?i2___ftmul+2,i2printf@temp+2
 29308                           
 29309                           ;doprnt.c: 1104: val = (unsigned long)temp;
 29310  002510  C062  F001         	movff	i2printf@temp,i2___fttol@f1
 29311  002514  C063  F002         	movff	i2printf@temp+1,i2___fttol@f1+1
 29312  002518  C064  F003         	movff	i2printf@temp+2,i2___fttol@f1+2
 29313  00251C  EC41  F038         	call	i2___fttol	;wreg free
 29314  002520  C001  F06F         	movff	?i2___fttol,i2printf@val
 29315  002524  C002  F070         	movff	?i2___fttol+1,i2printf@val+1
 29316  002528  C003  F071         	movff	?i2___fttol+2,i2printf@val+2
 29317  00252C  C004  F072         	movff	?i2___fttol+3,i2printf@val+3
 29318                           
 29319                           ;doprnt.c: 1105: }
 29320                           ;doprnt.c: 1106: while(prec && val % 10 == 0) {
 29321  002530  D01E               	goto	i2l14803
 29322  002532                     i2l14799:
 29323                           
 29324                           ;doprnt.c: 1107: val /= 10;
 29325  002532  C06F  F001         	movff	i2printf@val,i2___lldiv@dividend
 29326  002536  C070  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 29327  00253A  C071  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 29328  00253E  C072  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 29329  002542  0E0A               	movlw	10
 29330  002544  6E05               	movwf	i2___lldiv@divisor,c
 29331  002546  0E00               	movlw	0
 29332  002548  6E06               	movwf	i2___lldiv@divisor+1,c
 29333  00254A  0E00               	movlw	0
 29334  00254C  6E07               	movwf	i2___lldiv@divisor+2,c
 29335  00254E  0E00               	movlw	0
 29336  002550  6E08               	movwf	i2___lldiv@divisor+3,c
 29337  002552  EC5F  F040         	call	i2___lldiv	;wreg free
 29338  002556  C001  F06F         	movff	?i2___lldiv,i2printf@val
 29339  00255A  C002  F070         	movff	?i2___lldiv+1,i2printf@val+1
 29340  00255E  C003  F071         	movff	?i2___lldiv+2,i2printf@val+2
 29341  002562  C004  F072         	movff	?i2___lldiv+3,i2printf@val+3
 29342                           
 29343                           ;doprnt.c: 1108: prec--;
 29344  002566  0676               	decf	i2printf@prec,f,c
 29345  002568  A0D8               	btfss	status,0,c
 29346  00256A  0677               	decf	i2printf@prec+1,f,c
 29347  00256C  D000               	goto	i2l14803
 29348  00256E                     i2l14803:
 29349  00256E  5076               	movf	i2printf@prec,w,c
 29350  002570  1077               	iorwf	i2printf@prec+1,w,c
 29351  002572  B4D8               	btfsc	status,2,c
 29352  002574  D03A               	goto	i2l14811
 29353  002576  C06F  F00E         	movff	i2printf@val,i2___llmod@dividend
 29354  00257A  C070  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 29355  00257E  C071  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 29356  002582  C072  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 29357  002586  0E0A               	movlw	10
 29358  002588  6E12               	movwf	i2___llmod@divisor,c
 29359  00258A  0E00               	movlw	0
 29360  00258C  6E13               	movwf	i2___llmod@divisor+1,c
 29361  00258E  0E00               	movlw	0
 29362  002590  6E14               	movwf	i2___llmod@divisor+2,c
 29363  002592  0E00               	movlw	0
 29364  002594  6E15               	movwf	i2___llmod@divisor+3,c
 29365  002596  EC20  F042         	call	i2___llmod	;wreg free
 29366  00259A  500E               	movf	?i2___llmod,w,c
 29367  00259C  100F               	iorwf	?i2___llmod+1,w,c
 29368  00259E  1010               	iorwf	?i2___llmod+2,w,c
 29369  0025A0  1011               	iorwf	?i2___llmod+3,w,c
 29370  0025A2  A4D8               	btfss	status,2,c
 29371  0025A4  D022               	goto	i2l14811
 29372  0025A6  D7C5               	goto	i2l14799
 29373                           
 29374                           ;doprnt.c: 1109: }
 29375                           ;doprnt.c: 1110: } else
 29376  0025A8  D020               	goto	i2l14811
 29377  0025AA                     i2l14807:
 29378                           
 29379                           ;doprnt.c: 1112: if(prec <= 12)
 29380  0025AA  BE77               	btfsc	i2printf@prec+1,7,c
 29381  0025AC  D006               	goto	i2l14809
 29382  0025AE  5077               	movf	i2printf@prec+1,w,c
 29383  0025B0  E11C               	bnz	i2l14811
 29384  0025B2  0E0D               	movlw	13
 29385  0025B4  5C76               	subwf	i2printf@prec,w,c
 29386  0025B6  B0D8               	btfsc	status,0,c
 29387  0025B8  D018               	goto	i2l14811
 29388  0025BA                     i2l14809:
 29389                           
 29390                           ;doprnt.c: 1113: fval += fround(prec);
 29391  0025BA  C073  F035         	movff	i2printf@fval,i2___ftadd@f1
 29392  0025BE  C074  F036         	movff	i2printf@fval+1,i2___ftadd@f1+1
 29393  0025C2  C075  F037         	movff	i2printf@fval+2,i2___ftadd@f1+2
 29394  0025C6  5076               	movf	i2printf@prec,w,c
 29395  0025C8  EC99  F026         	call	i2_fround
 29396  0025CC  C02B  F038         	movff	?i2_fround,i2___ftadd@f2
 29397  0025D0  C02C  F039         	movff	?i2_fround+1,i2___ftadd@f2+1
 29398  0025D4  C02D  F03A         	movff	?i2_fround+2,i2___ftadd@f2+2
 29399  0025D8  ECC1  F02B         	call	i2___ftadd	;wreg free
 29400  0025DC  C035  F073         	movff	?i2___ftadd,i2printf@fval
 29401  0025E0  C036  F074         	movff	?i2___ftadd+1,i2printf@fval+1
 29402  0025E4  C037  F075         	movff	?i2___ftadd+2,i2printf@fval+2
 29403  0025E8  D000               	goto	i2l14811
 29404  0025EA                     i2l14811:
 29405                           
 29406                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 29407  0025EA  BE6C               	btfsc	i2printf@exp+1,7,c
 29408  0025EC  D006               	goto	i2l14813
 29409  0025EE  506C               	movf	i2printf@exp+1,w,c
 29410  0025F0  E120               	bnz	i2l14819
 29411  0025F2  0E0A               	movlw	10
 29412  0025F4  5C6B               	subwf	i2printf@exp,w,c
 29413  0025F6  B0D8               	btfsc	status,0,c
 29414  0025F8  D01C               	goto	i2l14819
 29415  0025FA                     i2l14813:
 29416  0025FA  5073               	movf	i2printf@fval,w,c
 29417  0025FC  1074               	iorwf	i2printf@fval+1,w,c
 29418  0025FE  1075               	iorwf	i2printf@fval+2,w,c
 29419  002600  B4D8               	btfsc	status,2,c
 29420  002602  D06D               	goto	i2l14833
 29421  002604  C073  F001         	movff	i2printf@fval,i2___fttol@f1
 29422  002608  C074  F002         	movff	i2printf@fval+1,i2___fttol@f1+1
 29423  00260C  C075  F003         	movff	i2printf@fval+2,i2___fttol@f1+2
 29424  002610  EC41  F038         	call	i2___fttol	;wreg free
 29425  002614  5001               	movf	?i2___fttol,w,c
 29426  002616  1002               	iorwf	?i2___fttol+1,w,c
 29427  002618  1003               	iorwf	?i2___fttol+2,w,c
 29428  00261A  1004               	iorwf	?i2___fttol+3,w,c
 29429  00261C  B4D8               	btfsc	status,2,c
 29430  00261E  BE6C               	btfsc	i2printf@exp+1,7,c
 29431  002620  D05E               	goto	i2l14833
 29432  002622  506C               	movf	i2printf@exp+1,w,c
 29433  002624  E106               	bnz	i2l14819
 29434  002626  0E02               	movlw	2
 29435  002628  5C6B               	subwf	i2printf@exp,w,c
 29436  00262A  B0D8               	btfsc	status,0,c
 29437  00262C  D002               	goto	i2l14819
 29438  00262E  D057               	goto	i2l14833
 29439  002630  D000               	goto	i2l14819
 29440  002632                     i2l14819:
 29441                           
 29442                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 29443  002632  C067  F041         	movff	i2printf@tmpval,i2___ftge@ff1
 29444  002636  C068  F042         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 29445  00263A  C069  F043         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 29446  00263E  0E70               	movlw	112
 29447  002640  6E44               	movwf	i2___ftge@ff2,c
 29448  002642  0E89               	movlw	137
 29449  002644  6E45               	movwf	i2___ftge@ff2+1,c
 29450  002646  0E40               	movlw	64
 29451  002648  6E46               	movwf	i2___ftge@ff2+2,c
 29452  00264A  EC14  F040         	call	i2___ftge	;wreg free
 29453  00264E  B0D8               	btfsc	status,0,c
 29454  002650  D002               	goto	i2l14823
 29455                           
 29456                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 29457  002652  0EF7               	movlw	247
 29458  002654  D001               	goto	L32
 29459  002656                     i2l14823:
 29460                           
 29461                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 29462  002656  0EF8               	movlw	248
 29463  002658                     L32:
 29464  002658  266B               	addwf	i2printf@exp,f,c
 29465  00265A  0EFF               	movlw	255
 29466  00265C  226C               	addwfc	i2printf@exp+1,f,c
 29467  00265E  D000               	goto	i2l14825
 29468  002660                     i2l14825:
 29469                           
 29470                           ;doprnt.c: 1124: }
 29471                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 29472  002660  506B               	movf	i2printf@exp,w,c
 29473  002662  ECCA  F01F         	call	i2_scale
 29474  002666  C02B  F067         	movff	?i2_scale,i2printf@tmpval
 29475  00266A  C02C  F068         	movff	?i2_scale+1,i2printf@tmpval+1
 29476  00266E  C02D  F069         	movff	?i2_scale+2,i2printf@tmpval+2
 29477                           
 29478                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 29479  002672  D017               	goto	i2l14829
 29480  002674  C073  F001         	movff	i2printf@fval,i2__div_to_l_@f1
 29481  002678  C074  F002         	movff	i2printf@fval+1,i2__div_to_l_@f1+1
 29482  00267C  C075  F003         	movff	i2printf@fval+2,i2__div_to_l_@f1+2
 29483  002680  C067  F004         	movff	i2printf@tmpval,i2__div_to_l_@f2
 29484  002684  C068  F005         	movff	i2printf@tmpval+1,i2__div_to_l_@f2+1
 29485  002688  C069  F006         	movff	i2printf@tmpval+2,i2__div_to_l_@f2+2
 29486  00268C  ECCF  F034         	call	i2__div_to_l_	;wreg free
 29487  002690  C001  F06F         	movff	?i2__div_to_l_,i2printf@val
 29488  002694  C002  F070         	movff	?i2__div_to_l_+1,i2printf@val+1
 29489  002698  C003  F071         	movff	?i2__div_to_l_+2,i2printf@val+2
 29490  00269C  C004  F072         	movff	?i2__div_to_l_+3,i2printf@val+3
 29491  0026A0  D017               	goto	i2l14831
 29492  0026A2                     i2l14829:
 29493  0026A2  C073  F001         	movff	i2printf@fval,i2__tdiv_to_l_@f1
 29494  0026A6  C074  F002         	movff	i2printf@fval+1,i2__tdiv_to_l_@f1+1
 29495  0026AA  C075  F003         	movff	i2printf@fval+2,i2__tdiv_to_l_@f1+2
 29496  0026AE  C067  F004         	movff	i2printf@tmpval,i2__tdiv_to_l_@f2
 29497  0026B2  C068  F005         	movff	i2printf@tmpval+1,i2__tdiv_to_l_@f2+1
 29498  0026B6  C069  F006         	movff	i2printf@tmpval+2,i2__tdiv_to_l_@f2+2
 29499  0026BA  EC47  F034         	call	i2__tdiv_to_l_	;wreg free
 29500  0026BE  C001  F06F         	movff	?i2__tdiv_to_l_,i2printf@val
 29501  0026C2  C002  F070         	movff	?i2__tdiv_to_l_+1,i2printf@val+1
 29502  0026C6  C003  F071         	movff	?i2__tdiv_to_l_+2,i2printf@val+2
 29503  0026CA  C004  F072         	movff	?i2__tdiv_to_l_+3,i2printf@val+3
 29504  0026CE  D000               	goto	i2l14831
 29505  0026D0                     i2l14831:
 29506                           
 29507                           ;doprnt.c: 1129: fval = 0.0;
 29508  0026D0  0E00               	movlw	0
 29509  0026D2  6E73               	movwf	i2printf@fval,c
 29510  0026D4  0E00               	movlw	0
 29511  0026D6  6E74               	movwf	i2printf@fval+1,c
 29512  0026D8  0E00               	movlw	0
 29513  0026DA  6E75               	movwf	i2printf@fval+2,c
 29514                           
 29515                           ;doprnt.c: 1130: } else {
 29516  0026DC  D033               	goto	i2l14837
 29517  0026DE                     i2l14833:
 29518                           
 29519                           ;doprnt.c: 1131: val = (unsigned long)fval;
 29520  0026DE  C073  F001         	movff	i2printf@fval,i2___fttol@f1
 29521  0026E2  C074  F002         	movff	i2printf@fval+1,i2___fttol@f1+1
 29522  0026E6  C075  F003         	movff	i2printf@fval+2,i2___fttol@f1+2
 29523  0026EA  EC41  F038         	call	i2___fttol	;wreg free
 29524  0026EE  C001  F06F         	movff	?i2___fttol,i2printf@val
 29525  0026F2  C002  F070         	movff	?i2___fttol+1,i2printf@val+1
 29526  0026F6  C003  F071         	movff	?i2___fttol+2,i2printf@val+2
 29527  0026FA  C004  F072         	movff	?i2___fttol+3,i2printf@val+3
 29528                           
 29529                           ;doprnt.c: 1132: fval -= (double)val;
 29530  0026FE  C073  F041         	movff	i2printf@fval,i2___ftsub@f1
 29531  002702  C074  F042         	movff	i2printf@fval+1,i2___ftsub@f1+1
 29532  002706  C075  F043         	movff	i2printf@fval+2,i2___ftsub@f1+2
 29533  00270A  C06F  F010         	movff	i2printf@val,i2___lltoft@c
 29534  00270E  C070  F011         	movff	i2printf@val+1,i2___lltoft@c+1
 29535  002712  C071  F012         	movff	i2printf@val+2,i2___lltoft@c+2
 29536  002716  C072  F013         	movff	i2printf@val+3,i2___lltoft@c+3
 29537  00271A  EC20  F044         	call	i2___lltoft	;wreg free
 29538  00271E  C010  F044         	movff	?i2___lltoft,i2___ftsub@f2
 29539  002722  C011  F045         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 29540  002726  C012  F046         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 29541  00272A  EC01  F046         	call	i2___ftsub	;wreg free
 29542  00272E  C041  F073         	movff	?i2___ftsub,i2printf@fval
 29543  002732  C042  F074         	movff	?i2___ftsub+1,i2printf@fval+1
 29544  002736  C043  F075         	movff	?i2___ftsub+2,i2printf@fval+2
 29545                           
 29546                           ;doprnt.c: 1133: exp = 0;
 29547  00273A  0E00               	movlw	0
 29548  00273C  6E6C               	movwf	i2printf@exp+1,c
 29549  00273E  0E00               	movlw	0
 29550  002740  6E6B               	movwf	i2printf@exp,c
 29551  002742  D000               	goto	i2l14837
 29552  002744                     i2l14837:
 29553                           
 29554                           ;doprnt.c: 1134: }
 29555                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 29556  002744  0E01               	movlw	1
 29557  002746  6E78               	movwf	i2printf@c,c
 29558  002748                     i2l14839:
 29559  002748  0E0A               	movlw	10
 29560  00274A  1878               	xorwf	i2printf@c,w,c
 29561  00274C  B4D8               	btfsc	status,2,c
 29562  00274E  D01C               	goto	i2l14851
 29563  002750  D001               	goto	i2l14843
 29564  002752  D01A               	goto	i2l14851
 29565  002754                     i2l14843:
 29566                           
 29567                           ;doprnt.c: 1137: if(val < dpowers[c])
 29568  002754  5078               	movf	i2printf@c,w,c
 29569  002756  0D04               	mullw	4
 29570  002758  0E0E               	movlw	low _dpowers
 29571  00275A  24F3               	addwf	prodl,w,c
 29572  00275C  6EF6               	movwf	tblptrl,c
 29573  00275E  0EFE               	movlw	high _dpowers
 29574  002760  20F4               	addwfc	prodh,w,c
 29575  002762  6EF7               	movwf	tblptrh,c
 29576  002764                     	if	0	;There are less than 3 active tblptr bytes
 29577  002764                     	endif
 29578  002764  0009               	tblrd		*+
 29579  002766  50F5               	movf	tablat,w,c
 29580  002768  5C6F               	subwf	i2printf@val,w,c
 29581  00276A  0009               	tblrd		*+
 29582  00276C  50F5               	movf	tablat,w,c
 29583  00276E  5870               	subwfb	i2printf@val+1,w,c
 29584  002770  0009               	tblrd		*+
 29585  002772  50F5               	movf	tablat,w,c
 29586  002774  5871               	subwfb	i2printf@val+2,w,c
 29587  002776  0009               	tblrd		*+
 29588  002778  50F5               	movf	tablat,w,c
 29589  00277A  5872               	subwfb	i2printf@val+3,w,c
 29590  00277C  A0D8               	btfss	status,0,c
 29591  00277E  D004               	goto	i2l14851
 29592  002780  D001               	goto	i2l14847
 29593                           
 29594                           ;doprnt.c: 1138: break;
 29595  002782  D002               	goto	i2l14851
 29596  002784                     i2l14847:
 29597  002784  2A78               	incf	i2printf@c,f,c
 29598  002786  D7E0               	goto	i2l14839
 29599  002788                     i2l14851:
 29600                           
 29601                           ;doprnt.c: 1142: width -= prec + c + exp;
 29602  002788  C078  F04C         	movff	i2printf@c,??i2_printf
 29603  00278C  6A4D               	clrf	(??i2_printf+1)& (0+255),c
 29604  00278E  BE4C               	btfsc	??i2_printf& (0+255),7,c
 29605  002790  064D               	decf	(??i2_printf+1)& (0+255),f,c
 29606  002792  5076               	movf	i2printf@prec,w,c
 29607  002794  264C               	addwf	??i2_printf,f,c
 29608  002796  5077               	movf	i2printf@prec+1,w,c
 29609  002798  224D               	addwfc	??i2_printf+1,f,c
 29610  00279A  506B               	movf	i2printf@exp,w,c
 29611  00279C  264C               	addwf	??i2_printf,f,c
 29612  00279E  506C               	movf	i2printf@exp+1,w,c
 29613  0027A0  224D               	addwfc	??i2_printf+1,f,c
 29614  0027A2  504C               	movf	??i2_printf,w,c
 29615  0027A4  5E6D               	subwf	i2printf@width,f,c
 29616  0027A6  504D               	movf	??i2_printf+1,w,c
 29617  0027A8  5A6E               	subwfb	i2printf@width+1,f,c
 29618                           
 29619                           ;doprnt.c: 1143: if(
 29620                           ;doprnt.c: 1145: flag & 0x800 ||
 29621                           ;doprnt.c: 1147: prec)
 29622  0027AA  B67A               	btfsc	i2printf@flag+1,3,c
 29623  0027AC  D004               	goto	i2l14857
 29624  0027AE  5076               	movf	i2printf@prec,w,c
 29625  0027B0  1077               	iorwf	i2printf@prec+1,w,c
 29626  0027B2  B4D8               	btfsc	status,2,c
 29627  0027B4  D004               	goto	i2l14859
 29628  0027B6                     i2l14857:
 29629                           
 29630                           ;doprnt.c: 1148: width--;
 29631  0027B6  066D               	decf	i2printf@width,f,c
 29632  0027B8  A0D8               	btfss	status,0,c
 29633  0027BA  066E               	decf	i2printf@width+1,f,c
 29634  0027BC  D000               	goto	i2l14859
 29635  0027BE                     i2l14859:
 29636                           
 29637                           ;doprnt.c: 1149: if(flag & 0x03)
 29638  0027BE  0E03               	movlw	3
 29639  0027C0  1479               	andwf	i2printf@flag,w,c
 29640  0027C2  6E4C               	movwf	??i2_printf& (0+255),c
 29641  0027C4  0E00               	movlw	0
 29642  0027C6  147A               	andwf	i2printf@flag+1,w,c
 29643  0027C8  6E4D               	movwf	(??i2_printf+1)& (0+255),c
 29644  0027CA  504C               	movf	??i2_printf,w,c
 29645  0027CC  104D               	iorwf	??i2_printf+1,w,c
 29646  0027CE  B4D8               	btfsc	status,2,c
 29647  0027D0  D004               	goto	i2l14863
 29648                           
 29649                           ;doprnt.c: 1150: width--;
 29650  0027D2  066D               	decf	i2printf@width,f,c
 29651  0027D4  A0D8               	btfss	status,0,c
 29652  0027D6  066E               	decf	i2printf@width+1,f,c
 29653  0027D8  D000               	goto	i2l14863
 29654  0027DA                     i2l14863:
 29655                           
 29656                           ;doprnt.c: 1153: if(flag & 0x04) {
 29657  0027DA  A479               	btfss	i2printf@flag,2,c
 29658  0027DC  D027               	goto	i2l1556
 29659                           
 29660                           ;doprnt.c: 1155: if(flag & 0x02)
 29661  0027DE  A279               	btfss	i2printf@flag,1,c
 29662  0027E0  D00F               	goto	i2l1557
 29663                           
 29664                           ;doprnt.c: 1159: (putch(flag & 0x01 ? '-' : '+') );
 29665  0027E2  B079               	btfsc	i2printf@flag,0,c
 29666  0027E4  D004               	goto	i2l14871
 29667  0027E6  0E00               	movlw	0
 29668  0027E8  6E5B               	movwf	i2_printf$2209+1,c
 29669  0027EA  0E2B               	movlw	43
 29670  0027EC  D003               	goto	L33
 29671  0027EE                     i2l14871:
 29672  0027EE  0E00               	movlw	0
 29673  0027F0  6E5B               	movwf	i2_printf$2209+1,c
 29674  0027F2  0E2D               	movlw	45
 29675  0027F4                     L33:
 29676  0027F4  6E5A               	movwf	i2_printf$2209,c
 29677  0027F6  D000               	goto	i2l14873
 29678  0027F8                     i2l14873:
 29679  0027F8  505A               	movf	i2_printf$2209,w,c
 29680  0027FA  EC49  F049         	call	i2_putch
 29681  0027FE  D00D               	goto	i2l14881
 29682  002800                     i2l1557:
 29683                           
 29684                           ;doprnt.c: 1161: else
 29685                           ;doprnt.c: 1164: if(flag & 0x01)
 29686  002800  A079               	btfss	i2printf@flag,0,c
 29687  002802  D00B               	goto	i2l14881
 29688                           
 29689                           ;doprnt.c: 1165: (putch(' ') );
 29690  002804  0E20               	movlw	32
 29691  002806  EC49  F049         	call	i2_putch
 29692                           
 29693                           ;doprnt.c: 1168: while(width > 0) {
 29694  00280A  D007               	goto	i2l14881
 29695  00280C                     i2l14877:
 29696                           
 29697                           ;doprnt.c: 1169: (putch('0') );
 29698  00280C  0E30               	movlw	48
 29699  00280E  EC49  F049         	call	i2_putch
 29700                           
 29701                           ;doprnt.c: 1170: width--;
 29702  002812  066D               	decf	i2printf@width,f,c
 29703  002814  A0D8               	btfss	status,0,c
 29704  002816  066E               	decf	i2printf@width+1,f,c
 29705  002818  D000               	goto	i2l14881
 29706  00281A                     i2l14881:
 29707  00281A  BE6E               	btfsc	i2printf@width+1,7,c
 29708  00281C  D075               	goto	i2l14907
 29709  00281E  506E               	movf	i2printf@width+1,w,c
 29710  002820  E1F5               	bnz	i2l14877
 29711  002822  046D               	decf	i2printf@width,w,c
 29712  002824  A0D8               	btfss	status,0,c
 29713  002826  D070               	goto	i2l14907
 29714  002828  D7F1               	goto	i2l14877
 29715                           
 29716                           ;doprnt.c: 1171: }
 29717                           ;doprnt.c: 1173: } else
 29718  00282A  D06E               	goto	i2l14907
 29719  00282C                     i2l1556:
 29720                           
 29721                           ;doprnt.c: 1175: {
 29722                           ;doprnt.c: 1177: if(!(flag & 0x08))
 29723  00282C  A679               	btfss	i2printf@flag,3,c
 29724  00282E  D009               	goto	i2l14889
 29725  002830  D00F               	goto	i2l1568
 29726                           
 29727                           ;doprnt.c: 1180: while(width > 0) {
 29728  002832  D007               	goto	i2l14889
 29729  002834                     i2l14885:
 29730                           
 29731                           ;doprnt.c: 1181: (putch(' ') );
 29732  002834  0E20               	movlw	32
 29733  002836  EC49  F049         	call	i2_putch
 29734                           
 29735                           ;doprnt.c: 1182: width--;
 29736  00283A  066D               	decf	i2printf@width,f,c
 29737  00283C  A0D8               	btfss	status,0,c
 29738  00283E  066E               	decf	i2printf@width+1,f,c
 29739  002840  D000               	goto	i2l14889
 29740  002842                     i2l14889:
 29741  002842  BE6E               	btfsc	i2printf@width+1,7,c
 29742  002844  D005               	goto	i2l1568
 29743  002846  506E               	movf	i2printf@width+1,w,c
 29744  002848  E1F5               	bnz	i2l14885
 29745  00284A  046D               	decf	i2printf@width,w,c
 29746  00284C  B0D8               	btfsc	status,0,c
 29747  00284E  D7F2               	goto	i2l14885
 29748  002850                     i2l1568:
 29749                           
 29750                           ;doprnt.c: 1183: }
 29751                           ;doprnt.c: 1186: if(flag & 0x02)
 29752  002850  A279               	btfss	i2printf@flag,1,c
 29753  002852  D00F               	goto	i2l1572
 29754                           
 29755                           ;doprnt.c: 1190: (putch(flag & 0x01 ? '-' : '+') );
 29756  002854  B079               	btfsc	i2printf@flag,0,c
 29757  002856  D004               	goto	i2l14895
 29758  002858  0E00               	movlw	0
 29759  00285A  6E5D               	movwf	i2_printf$2210+1,c
 29760  00285C  0E2B               	movlw	43
 29761  00285E  D003               	goto	L34
 29762  002860                     i2l14895:
 29763  002860  0E00               	movlw	0
 29764  002862  6E5D               	movwf	i2_printf$2210+1,c
 29765  002864  0E2D               	movlw	45
 29766  002866                     L34:
 29767  002866  6E5C               	movwf	i2_printf$2210,c
 29768  002868  D000               	goto	i2l14897
 29769  00286A                     i2l14897:
 29770  00286A  505C               	movf	i2_printf$2210,w,c
 29771  00286C  EC49  F049         	call	i2_putch
 29772  002870  D04B               	goto	i2l14907
 29773  002872                     i2l1572:
 29774                           
 29775                           ;doprnt.c: 1192: else if(flag & 0x01)
 29776  002872  A079               	btfss	i2printf@flag,0,c
 29777  002874  D049               	goto	i2l14907
 29778                           
 29779                           ;doprnt.c: 1193: (putch(' ') );
 29780  002876  0E20               	movlw	32
 29781  002878  EC49  F049         	call	i2_putch
 29782                           
 29783                           ;doprnt.c: 1195: }
 29784                           ;doprnt.c: 1196: while(c--) {
 29785  00287C  D045               	goto	i2l14907
 29786  00287E                     i2l14901:
 29787                           
 29788                           ;doprnt.c: 1200: {
 29789                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 29790  00287E  C06F  F001         	movff	i2printf@val,i2___lldiv@dividend
 29791  002882  C070  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 29792  002886  C071  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 29793  00288A  C072  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 29794  00288E  5078               	movf	i2printf@c,w,c
 29795  002890  0D04               	mullw	4
 29796  002892  0E0E               	movlw	low _dpowers
 29797  002894  24F3               	addwf	prodl,w,c
 29798  002896  6EF6               	movwf	tblptrl,c
 29799  002898  0EFE               	movlw	high _dpowers
 29800  00289A  20F4               	addwfc	prodh,w,c
 29801  00289C  6EF7               	movwf	tblptrh,c
 29802  00289E                     	if	0	;There are less than 3 active tblptr bytes
 29803  00289E                     	endif
 29804  00289E  0009               	tblrd		*+
 29805  0028A0  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 29806  0028A4  0009               	tblrd		*+
 29807  0028A6  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 29808  0028AA  0009               	tblrd		*+
 29809  0028AC  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 29810  0028B0  000A               	tblrd		*-
 29811  0028B2  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 29812  0028B6  EC5F  F040         	call	i2___lldiv	;wreg free
 29813  0028BA  C001  F067         	movff	?i2___lldiv,i2printf@tmpval
 29814  0028BE  C002  F068         	movff	?i2___lldiv+1,i2printf@tmpval+1
 29815  0028C2  C003  F069         	movff	?i2___lldiv+2,i2printf@tmpval+2
 29816  0028C6  C004  F06A         	movff	?i2___lldiv+3,i2printf@tmpval+3
 29817                           
 29818                           ;doprnt.c: 1202: tmpval.vd %= 10;
 29819  0028CA  C067  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 29820  0028CE  C068  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 29821  0028D2  C069  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 29822  0028D6  C06A  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 29823  0028DA  0E0A               	movlw	10
 29824  0028DC  6E12               	movwf	i2___llmod@divisor,c
 29825  0028DE  0E00               	movlw	0
 29826  0028E0  6E13               	movwf	i2___llmod@divisor+1,c
 29827  0028E2  0E00               	movlw	0
 29828  0028E4  6E14               	movwf	i2___llmod@divisor+2,c
 29829  0028E6  0E00               	movlw	0
 29830  0028E8  6E15               	movwf	i2___llmod@divisor+3,c
 29831  0028EA  EC20  F042         	call	i2___llmod	;wreg free
 29832  0028EE  C00E  F067         	movff	?i2___llmod,i2printf@tmpval
 29833  0028F2  C00F  F068         	movff	?i2___llmod+1,i2printf@tmpval+1
 29834  0028F6  C010  F069         	movff	?i2___llmod+2,i2printf@tmpval+2
 29835  0028FA  C011  F06A         	movff	?i2___llmod+3,i2printf@tmpval+3
 29836                           
 29837                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 29838  0028FE  5067               	movf	i2printf@tmpval,w,c
 29839  002900  0F30               	addlw	48
 29840  002902  EC49  F049         	call	i2_putch
 29841  002906  D000               	goto	i2l14907
 29842  002908                     i2l14907:
 29843  002908  0678               	decf	i2printf@c,f,c
 29844  00290A  2878               	incf	i2printf@c,w,c
 29845  00290C  B4D8               	btfsc	status,2,c
 29846  00290E  D009               	goto	i2l14913
 29847  002910  D7B6               	goto	i2l14901
 29848                           
 29849                           ;doprnt.c: 1204: }
 29850                           ;doprnt.c: 1206: }
 29851                           ;doprnt.c: 1207: while(exp > 0) {
 29852  002912  D007               	goto	i2l14913
 29853  002914                     i2l14909:
 29854                           
 29855                           ;doprnt.c: 1208: (putch('0') );
 29856  002914  0E30               	movlw	48
 29857  002916  EC49  F049         	call	i2_putch
 29858                           
 29859                           ;doprnt.c: 1209: exp--;
 29860  00291A  066B               	decf	i2printf@exp,f,c
 29861  00291C  A0D8               	btfss	status,0,c
 29862  00291E  066C               	decf	i2printf@exp+1,f,c
 29863  002920  D000               	goto	i2l14913
 29864  002922                     i2l14913:
 29865  002922  BE6C               	btfsc	i2printf@exp+1,7,c
 29866  002924  D005               	goto	i2l14915
 29867  002926  506C               	movf	i2printf@exp+1,w,c
 29868  002928  E1F5               	bnz	i2l14909
 29869  00292A  046B               	decf	i2printf@exp,w,c
 29870  00292C  B0D8               	btfsc	status,0,c
 29871  00292E  D7F2               	goto	i2l14909
 29872  002930                     i2l14915:
 29873                           
 29874                           ;doprnt.c: 1210: }
 29875                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 29876  002930  BE77               	btfsc	i2printf@prec+1,7,c
 29877  002932  D009               	goto	i2l1585
 29878  002934  5077               	movf	i2printf@prec+1,w,c
 29879  002936  E104               	bnz	i2u1763_40
 29880  002938  0E09               	movlw	9
 29881  00293A  5C76               	subwf	i2printf@prec,w,c
 29882  00293C  A0D8               	btfss	status,0,c
 29883  00293E  D003               	goto	i2l1585
 29884  002940                     i2u1763_40:
 29885                           
 29886                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 29887  002940  0E08               	movlw	8
 29888  002942  6E78               	movwf	i2printf@c,c
 29889  002944  D003               	goto	i2l14919
 29890  002946                     i2l1585:
 29891                           
 29892                           ;doprnt.c: 1213: else
 29893                           ;doprnt.c: 1214: c = prec;
 29894  002946  C076  F078         	movff	i2printf@prec,i2printf@c
 29895  00294A  D000               	goto	i2l14919
 29896  00294C                     i2l14919:
 29897                           
 29898                           ;doprnt.c: 1215: prec -= c;
 29899  00294C  5078               	movf	i2printf@c,w,c
 29900  00294E  5E76               	subwf	i2printf@prec,f,c
 29901  002950  0E00               	movlw	0
 29902  002952  BE78               	btfsc	i2printf@c,7,c
 29903  002954  0EFF               	movlw	255
 29904  002956  5A77               	subwfb	i2printf@prec+1,f,c
 29905                           
 29906                           ;doprnt.c: 1217: if(c || flag & 0x800)
 29907  002958  5078               	movf	i2printf@c,w,c
 29908  00295A  A4D8               	btfss	status,2,c
 29909  00295C  D002               	goto	i2l14925
 29910  00295E  A67A               	btfss	i2printf@flag+1,3,c
 29911  002960  D004               	goto	i2l14927
 29912  002962                     i2l14925:
 29913                           
 29914                           ;doprnt.c: 1221: (putch('.') );
 29915  002962  0E2E               	movlw	46
 29916  002964  EC49  F049         	call	i2_putch
 29917  002968  D000               	goto	i2l14927
 29918  00296A                     i2l14927:
 29919                           
 29920                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 29921  00296A  5078               	movf	i2printf@c,w,c
 29922  00296C  ECCA  F01F         	call	i2_scale
 29923  002970  C02B  F052         	movff	?i2_scale,i2_printf$3294
 29924  002974  C02C  F053         	movff	?i2_scale+1,i2_printf$3294+1
 29925  002978  C02D  F054         	movff	?i2_scale+2,i2_printf$3294+2
 29926                           
 29927                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 29928  00297C  C073  F01F         	movff	i2printf@fval,i2___ftmul@f2
 29929  002980  C074  F020         	movff	i2printf@fval+1,i2___ftmul@f2+1
 29930  002984  C075  F021         	movff	i2printf@fval+2,i2___ftmul@f2+2
 29931  002988  C052  F01C         	movff	i2_printf$3294,i2___ftmul@f1
 29932  00298C  C053  F01D         	movff	i2_printf$3294+1,i2___ftmul@f1+1
 29933  002990  C054  F01E         	movff	i2_printf$3294+2,i2___ftmul@f1+2
 29934  002994  EC54  F036         	call	i2___ftmul	;wreg free
 29935  002998  C01C  F001         	movff	?i2___ftmul,i2___fttol@f1
 29936  00299C  C01D  F002         	movff	?i2___ftmul+1,i2___fttol@f1+1
 29937  0029A0  C01E  F003         	movff	?i2___ftmul+2,i2___fttol@f1+2
 29938  0029A4  EC41  F038         	call	i2___fttol	;wreg free
 29939  0029A8  C001  F06F         	movff	?i2___fttol,i2printf@val
 29940  0029AC  C002  F070         	movff	?i2___fttol+1,i2printf@val+1
 29941  0029B0  C003  F071         	movff	?i2___fttol+2,i2printf@val+2
 29942  0029B4  C004  F072         	movff	?i2___fttol+3,i2printf@val+3
 29943                           
 29944                           ;doprnt.c: 1228: while(c--) {
 29945  0029B8  D06B               	goto	i2l14937
 29946  0029BA                     i2l14931:
 29947                           
 29948                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 29949  0029BA  C06F  F001         	movff	i2printf@val,i2___lldiv@dividend
 29950  0029BE  C070  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 29951  0029C2  C071  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 29952  0029C6  C072  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 29953  0029CA  5078               	movf	i2printf@c,w,c
 29954  0029CC  0D04               	mullw	4
 29955  0029CE  0E0E               	movlw	low _dpowers
 29956  0029D0  24F3               	addwf	prodl,w,c
 29957  0029D2  6EF6               	movwf	tblptrl,c
 29958  0029D4  0EFE               	movlw	high _dpowers
 29959  0029D6  20F4               	addwfc	prodh,w,c
 29960  0029D8  6EF7               	movwf	tblptrh,c
 29961  0029DA                     	if	0	;There are less than 3 active tblptr bytes
 29962  0029DA                     	endif
 29963  0029DA  0009               	tblrd		*+
 29964  0029DC  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 29965  0029E0  0009               	tblrd		*+
 29966  0029E2  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 29967  0029E6  0009               	tblrd		*+
 29968  0029E8  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 29969  0029EC  000A               	tblrd		*-
 29970  0029EE  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 29971  0029F2  EC5F  F040         	call	i2___lldiv	;wreg free
 29972  0029F6  C001  F067         	movff	?i2___lldiv,i2printf@tmpval
 29973  0029FA  C002  F068         	movff	?i2___lldiv+1,i2printf@tmpval+1
 29974  0029FE  C003  F069         	movff	?i2___lldiv+2,i2printf@tmpval+2
 29975  002A02  C004  F06A         	movff	?i2___lldiv+3,i2printf@tmpval+3
 29976                           
 29977                           ;doprnt.c: 1230: tmpval.vd %= 10;
 29978  002A06  C067  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 29979  002A0A  C068  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 29980  002A0E  C069  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 29981  002A12  C06A  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 29982  002A16  0E0A               	movlw	10
 29983  002A18  6E12               	movwf	i2___llmod@divisor,c
 29984  002A1A  0E00               	movlw	0
 29985  002A1C  6E13               	movwf	i2___llmod@divisor+1,c
 29986  002A1E  0E00               	movlw	0
 29987  002A20  6E14               	movwf	i2___llmod@divisor+2,c
 29988  002A22  0E00               	movlw	0
 29989  002A24  6E15               	movwf	i2___llmod@divisor+3,c
 29990  002A26  EC20  F042         	call	i2___llmod	;wreg free
 29991  002A2A  C00E  F067         	movff	?i2___llmod,i2printf@tmpval
 29992  002A2E  C00F  F068         	movff	?i2___llmod+1,i2printf@tmpval+1
 29993  002A32  C010  F069         	movff	?i2___llmod+2,i2printf@tmpval+2
 29994  002A36  C011  F06A         	movff	?i2___llmod+3,i2printf@tmpval+3
 29995                           
 29996                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 29997  002A3A  5067               	movf	i2printf@tmpval,w,c
 29998  002A3C  0F30               	addlw	48
 29999  002A3E  EC49  F049         	call	i2_putch
 30000                           
 30001                           ;doprnt.c: 1232: val %= dpowers[c];
 30002  002A42  C06F  F00E         	movff	i2printf@val,i2___llmod@dividend
 30003  002A46  C070  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 30004  002A4A  C071  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 30005  002A4E  C072  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 30006  002A52  5078               	movf	i2printf@c,w,c
 30007  002A54  0D04               	mullw	4
 30008  002A56  0E0E               	movlw	low _dpowers
 30009  002A58  24F3               	addwf	prodl,w,c
 30010  002A5A  6EF6               	movwf	tblptrl,c
 30011  002A5C  0EFE               	movlw	high _dpowers
 30012  002A5E  20F4               	addwfc	prodh,w,c
 30013  002A60  6EF7               	movwf	tblptrh,c
 30014  002A62                     	if	0	;There are less than 3 active tblptr bytes
 30015  002A62                     	endif
 30016  002A62  0009               	tblrd		*+
 30017  002A64  CFF5 F012          	movff	tablat,i2___llmod@divisor
 30018  002A68  0009               	tblrd		*+
 30019  002A6A  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 30020  002A6E  0009               	tblrd		*+
 30021  002A70  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 30022  002A74  000A               	tblrd		*-
 30023  002A76  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 30024  002A7A  EC20  F042         	call	i2___llmod	;wreg free
 30025  002A7E  C00E  F06F         	movff	?i2___llmod,i2printf@val
 30026  002A82  C00F  F070         	movff	?i2___llmod+1,i2printf@val+1
 30027  002A86  C010  F071         	movff	?i2___llmod+2,i2printf@val+2
 30028  002A8A  C011  F072         	movff	?i2___llmod+3,i2printf@val+3
 30029  002A8E  D000               	goto	i2l14937
 30030  002A90                     i2l14937:
 30031  002A90  0678               	decf	i2printf@c,f,c
 30032  002A92  2878               	incf	i2printf@c,w,c
 30033  002A94  B4D8               	btfsc	status,2,c
 30034  002A96  D009               	goto	i2l14943
 30035  002A98  D790               	goto	i2l14931
 30036                           
 30037                           ;doprnt.c: 1233: }
 30038                           ;doprnt.c: 1235: while(prec) {
 30039  002A9A  D007               	goto	i2l14943
 30040  002A9C                     i2l14939:
 30041                           
 30042                           ;doprnt.c: 1236: (putch('0') );
 30043  002A9C  0E30               	movlw	48
 30044  002A9E  EC49  F049         	call	i2_putch
 30045                           
 30046                           ;doprnt.c: 1237: prec--;
 30047  002AA2  0676               	decf	i2printf@prec,f,c
 30048  002AA4  A0D8               	btfss	status,0,c
 30049  002AA6  0677               	decf	i2printf@prec+1,f,c
 30050  002AA8  D000               	goto	i2l14943
 30051  002AAA                     i2l14943:
 30052  002AAA  5076               	movf	i2printf@prec,w,c
 30053  002AAC  1077               	iorwf	i2printf@prec+1,w,c
 30054  002AAE  A4D8               	btfss	status,2,c
 30055  002AB0  D7F5               	goto	i2l14939
 30056                           
 30057                           ;doprnt.c: 1238: }
 30058                           ;doprnt.c: 1240: if((flag & 0x08) && width > 0)
 30059  002AB2  B679               	btfsc	i2printf@flag,3,c
 30060  002AB4  BE6E               	btfsc	i2printf@width+1,7,c
 30061  002AB6  D245               	goto	i2l15105
 30062  002AB8  506E               	movf	i2printf@width+1,w,c
 30063  002ABA  E105               	bnz	i2l14947
 30064  002ABC  046D               	decf	i2printf@width,w,c
 30065  002ABE  B0D8               	btfsc	status,0,c
 30066  002AC0  D002               	goto	i2l14947
 30067  002AC2  D23F               	goto	i2l15105
 30068  002AC4  D000               	goto	i2l14947
 30069  002AC6                     i2l14947:
 30070                           
 30071                           ;doprnt.c: 1242: (putch(' ') );
 30072  002AC6  0E20               	movlw	32
 30073  002AC8  EC49  F049         	call	i2_putch
 30074                           
 30075                           ;doprnt.c: 1243: while(--width);
 30076  002ACC  066D               	decf	i2printf@width,f,c
 30077  002ACE  A0D8               	btfss	status,0,c
 30078  002AD0  066E               	decf	i2printf@width+1,f,c
 30079  002AD2  506D               	movf	i2printf@width,w,c
 30080  002AD4  106E               	iorwf	i2printf@width+1,w,c
 30081  002AD6  B4D8               	btfsc	status,2,c
 30082  002AD8  D234               	goto	i2l15105
 30083  002ADA  D7F5               	goto	i2l14947
 30084                           
 30085                           ;doprnt.c: 1245: continue;
 30086  002ADC  D232               	goto	i2l15105
 30087  002ADE                     i2l1451:
 30088                           
 30089                           ;doprnt.c: 1246: }
 30090                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
 30091  002ADE  BE79               	btfsc	i2printf@flag,7,c
 30092  002AE0  D01E               	goto	i2l14961
 30093                           
 30094                           ;doprnt.c: 1253: {
 30095                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 30096  002AE2  C065  FFD9         	movff	i2printf@ap,fsr2l
 30097  002AE6  C066  FFDA         	movff	i2printf@ap+1,fsr2h
 30098  002AEA  CFDE F06F          	movff	postinc2,i2printf@val
 30099  002AEE  CFDD F070          	movff	postdec2,i2printf@val+1
 30100  002AF2  0E00               	movlw	0
 30101  002AF4  BE70               	btfsc	i2printf@val+1,7,c
 30102  002AF6  0EFF               	movlw	-1
 30103  002AF8  6E71               	movwf	i2printf@val+2,c
 30104  002AFA  6E72               	movwf	i2printf@val+3,c
 30105  002AFC  0E02               	movlw	2
 30106  002AFE  2665               	addwf	i2printf@ap,f,c
 30107  002B00  0E00               	movlw	0
 30108  002B02  2266               	addwfc	i2printf@ap+1,f,c
 30109                           
 30110                           ;doprnt.c: 1261: if((long)val < 0) {
 30111  002B04  AE72               	btfss	i2printf@val+3,7,c
 30112  002B06  D01E               	goto	i2l14965
 30113                           
 30114                           ;doprnt.c: 1262: flag |= 0x03;
 30115  002B08  0E03               	movlw	3
 30116  002B0A  1279               	iorwf	i2printf@flag,f,c
 30117                           
 30118                           ;doprnt.c: 1263: val = -val;
 30119  002B0C  1E72               	comf	i2printf@val+3,f,c
 30120  002B0E  1E71               	comf	i2printf@val+2,f,c
 30121  002B10  1E70               	comf	i2printf@val+1,f,c
 30122  002B12  6C6F               	negf	i2printf@val,c
 30123  002B14  0E00               	movlw	0
 30124  002B16  2270               	addwfc	i2printf@val+1,f,c
 30125  002B18  2271               	addwfc	i2printf@val+2,f,c
 30126  002B1A  2272               	addwfc	i2printf@val+3,f,c
 30127                           
 30128                           ;doprnt.c: 1264: }
 30129                           ;doprnt.c: 1266: }
 30130  002B1C  D013               	goto	i2l14965
 30131  002B1E                     i2l14961:
 30132                           
 30133                           ;doprnt.c: 1268: else
 30134                           ;doprnt.c: 1273: {
 30135                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 30136  002B1E  C065  FFD9         	movff	i2printf@ap,fsr2l
 30137  002B22  C066  FFDA         	movff	i2printf@ap+1,fsr2h
 30138  002B26  CFDE F04C          	movff	postinc2,??i2_printf
 30139  002B2A  CFDD F04D          	movff	postdec2,??i2_printf+1
 30140  002B2E  C04C  F06F         	movff	??i2_printf,i2printf@val
 30141  002B32  C04D  F070         	movff	??i2_printf+1,i2printf@val+1
 30142  002B36  6A71               	clrf	i2printf@val+2,c
 30143  002B38  6A72               	clrf	i2printf@val+3,c
 30144  002B3A  0E02               	movlw	2
 30145  002B3C  2665               	addwf	i2printf@ap,f,c
 30146  002B3E  0E00               	movlw	0
 30147  002B40  2266               	addwfc	i2printf@ap+1,f,c
 30148  002B42  D000               	goto	i2l14965
 30149  002B44                     i2l14965:
 30150                           
 30151                           ;doprnt.c: 1287: }
 30152                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 30153  002B44  5076               	movf	i2printf@prec,w,c
 30154  002B46  1077               	iorwf	i2printf@prec+1,w,c
 30155  002B48  A4D8               	btfss	status,2,c
 30156  002B4A  D04F               	goto	i2l15001
 30157  002B4C  506F               	movf	i2printf@val,w,c
 30158  002B4E  1070               	iorwf	i2printf@val+1,w,c
 30159  002B50  1071               	iorwf	i2printf@val+2,w,c
 30160  002B52  1072               	iorwf	i2printf@val+3,w,c
 30161  002B54  A4D8               	btfss	status,2,c
 30162  002B56  D049               	goto	i2l15001
 30163                           
 30164                           ;doprnt.c: 1291: prec++;
 30165  002B58  4A76               	infsnz	i2printf@prec,f,c
 30166  002B5A  2A77               	incf	i2printf@prec+1,f,c
 30167                           
 30168                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
 30169  002B5C  D046               	goto	i2l15001
 30170  002B5E                     i2l14971:
 30171                           
 30172                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 30173  002B5E  0E01               	movlw	1
 30174  002B60  6E78               	movwf	i2printf@c,c
 30175  002B62                     i2l14973:
 30176  002B62  0E0A               	movlw	10
 30177  002B64  1878               	xorwf	i2printf@c,w,c
 30178  002B66  B4D8               	btfsc	status,2,c
 30179  002B68  D049               	goto	i2l15003
 30180  002B6A  D001               	goto	i2l14977
 30181  002B6C  D047               	goto	i2l15003
 30182  002B6E                     i2l14977:
 30183                           
 30184                           ;doprnt.c: 1306: if(val < dpowers[c])
 30185  002B6E  5078               	movf	i2printf@c,w,c
 30186  002B70  0D04               	mullw	4
 30187  002B72  0E0E               	movlw	low _dpowers
 30188  002B74  24F3               	addwf	prodl,w,c
 30189  002B76  6EF6               	movwf	tblptrl,c
 30190  002B78  0EFE               	movlw	high _dpowers
 30191  002B7A  20F4               	addwfc	prodh,w,c
 30192  002B7C  6EF7               	movwf	tblptrh,c
 30193  002B7E                     	if	0	;There are less than 3 active tblptr bytes
 30194  002B7E                     	endif
 30195  002B7E  0009               	tblrd		*+
 30196  002B80  50F5               	movf	tablat,w,c
 30197  002B82  5C6F               	subwf	i2printf@val,w,c
 30198  002B84  0009               	tblrd		*+
 30199  002B86  50F5               	movf	tablat,w,c
 30200  002B88  5870               	subwfb	i2printf@val+1,w,c
 30201  002B8A  0009               	tblrd		*+
 30202  002B8C  50F5               	movf	tablat,w,c
 30203  002B8E  5871               	subwfb	i2printf@val+2,w,c
 30204  002B90  0009               	tblrd		*+
 30205  002B92  50F5               	movf	tablat,w,c
 30206  002B94  5872               	subwfb	i2printf@val+3,w,c
 30207  002B96  A0D8               	btfss	status,0,c
 30208  002B98  D031               	goto	i2l15003
 30209  002B9A  D001               	goto	i2l14981
 30210                           
 30211                           ;doprnt.c: 1307: break;
 30212  002B9C  D02F               	goto	i2l15003
 30213  002B9E                     i2l14981:
 30214  002B9E  2A78               	incf	i2printf@c,f,c
 30215  002BA0  D7E0               	goto	i2l14973
 30216                           
 30217                           ;doprnt.c: 1309: break;
 30218  002BA2  D02C               	goto	i2l15003
 30219  002BA4                     i2l14985:
 30220                           
 30221                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 30222  002BA4  0E01               	movlw	1
 30223  002BA6  6E78               	movwf	i2printf@c,c
 30224  002BA8                     i2l14987:
 30225  002BA8  0E08               	movlw	8
 30226  002BAA  1878               	xorwf	i2printf@c,w,c
 30227  002BAC  B4D8               	btfsc	status,2,c
 30228  002BAE  D026               	goto	i2l15003
 30229  002BB0  D001               	goto	i2l14991
 30230  002BB2  D024               	goto	i2l15003
 30231  002BB4                     i2l14991:
 30232                           
 30233                           ;doprnt.c: 1317: if(val < hexpowers[c])
 30234  002BB4  5078               	movf	i2printf@c,w,c
 30235  002BB6  0D04               	mullw	4
 30236  002BB8  0E84               	movlw	low _hexpowers
 30237  002BBA  24F3               	addwf	prodl,w,c
 30238  002BBC  6EF6               	movwf	tblptrl,c
 30239  002BBE  0EFE               	movlw	high _hexpowers
 30240  002BC0  20F4               	addwfc	prodh,w,c
 30241  002BC2  6EF7               	movwf	tblptrh,c
 30242  002BC4                     	if	0	;There are less than 3 active tblptr bytes
 30243  002BC4                     	endif
 30244  002BC4  0009               	tblrd		*+
 30245  002BC6  50F5               	movf	tablat,w,c
 30246  002BC8  5C6F               	subwf	i2printf@val,w,c
 30247  002BCA  0009               	tblrd		*+
 30248  002BCC  50F5               	movf	tablat,w,c
 30249  002BCE  5870               	subwfb	i2printf@val+1,w,c
 30250  002BD0  0009               	tblrd		*+
 30251  002BD2  50F5               	movf	tablat,w,c
 30252  002BD4  5871               	subwfb	i2printf@val+2,w,c
 30253  002BD6  0009               	tblrd		*+
 30254  002BD8  50F5               	movf	tablat,w,c
 30255  002BDA  5872               	subwfb	i2printf@val+3,w,c
 30256  002BDC  A0D8               	btfss	status,0,c
 30257  002BDE  D00E               	goto	i2l15003
 30258  002BE0  D001               	goto	i2l14995
 30259                           
 30260                           ;doprnt.c: 1318: break;
 30261  002BE2  D00C               	goto	i2l15003
 30262  002BE4                     i2l14995:
 30263  002BE4  2A78               	incf	i2printf@c,f,c
 30264  002BE6  D7E0               	goto	i2l14987
 30265                           
 30266                           ;doprnt.c: 1336: }
 30267                           
 30268                           ;doprnt.c: 1320: break;
 30269  002BE8  D009               	goto	i2l15003
 30270  002BEA                     i2l15001:
 30271  002BEA  5079               	movf	i2printf@flag,w,c
 30272  002BEC  0B80               	andlw	128
 30273                           
 30274                           ; Switch size 1, requested type "space"
 30275                           ; Number of cases is 2, Range of values is 0 to 128
 30276                           ; switch strategies available:
 30277                           ; Name         Instructions Cycles
 30278                           ; simple_byte            7     4 (average)
 30279                           ;	Chosen strategy is simple_byte
 30280  002BEE  0A00               	xorlw	0	; case 0
 30281  002BF0  B4D8               	btfsc	status,2,c
 30282  002BF2  D7B5               	goto	i2l14971
 30283  002BF4  0A80               	xorlw	128	; case 128
 30284  002BF6  B4D8               	btfsc	status,2,c
 30285  002BF8  D7D5               	goto	i2l14985
 30286  002BFA  D000               	goto	i2l15003
 30287  002BFC                     i2l15003:
 30288                           
 30289                           ;doprnt.c: 1339: if(c < prec)
 30290  002BFC  0E80               	movlw	128
 30291  002BFE  BE78               	btfsc	i2printf@c,7,c
 30292  002C00  0E7F               	movlw	127
 30293  002C02  6E4C               	movwf	??i2_printf& (0+255),c
 30294  002C04  5076               	movf	i2printf@prec,w,c
 30295  002C06  5C78               	subwf	i2printf@c,w,c
 30296  002C08  5077               	movf	i2printf@prec+1,w,c
 30297  002C0A  0A80               	xorlw	128
 30298  002C0C  584C               	subwfb	??i2_printf& (0+255),w,c
 30299  002C0E  B0D8               	btfsc	status,0,c
 30300  002C10  D003               	goto	i2l15007
 30301                           
 30302                           ;doprnt.c: 1340: c = prec;
 30303  002C12  C076  F078         	movff	i2printf@prec,i2printf@c
 30304  002C16  D011               	goto	i2l15011
 30305  002C18                     i2l15007:
 30306                           
 30307                           ;doprnt.c: 1341: else if(prec < c)
 30308  002C18  5077               	movf	i2printf@prec+1,w,c
 30309  002C1A  0A80               	xorlw	128
 30310  002C1C  6E4C               	movwf	??i2_printf& (0+255),c
 30311  002C1E  5078               	movf	i2printf@c,w,c
 30312  002C20  5C76               	subwf	i2printf@prec,w,c
 30313  002C22  0E80               	movlw	128
 30314  002C24  BE78               	btfsc	i2printf@c,7,c
 30315  002C26  0E7F               	movlw	127
 30316  002C28  584C               	subwfb	??i2_printf& (0+255),w,c
 30317  002C2A  B0D8               	btfsc	status,0,c
 30318  002C2C  D006               	goto	i2l15011
 30319                           
 30320                           ;doprnt.c: 1342: prec = c;
 30321  002C2E  5078               	movf	i2printf@c,w,c
 30322  002C30  6E76               	movwf	i2printf@prec,c
 30323  002C32  6A77               	clrf	i2printf@prec+1,c
 30324  002C34  BE76               	btfsc	i2printf@prec,7,c
 30325  002C36  0677               	decf	i2printf@prec+1,f,c
 30326  002C38  D000               	goto	i2l15011
 30327  002C3A                     i2l15011:
 30328                           
 30329                           ;doprnt.c: 1345: if(width && flag & 0x03)
 30330  002C3A  506D               	movf	i2printf@width,w,c
 30331  002C3C  106E               	iorwf	i2printf@width+1,w,c
 30332  002C3E  B4D8               	btfsc	status,2,c
 30333  002C40  D00E               	goto	i2l15017
 30334  002C42  0E03               	movlw	3
 30335  002C44  1479               	andwf	i2printf@flag,w,c
 30336  002C46  6E4C               	movwf	??i2_printf& (0+255),c
 30337  002C48  0E00               	movlw	0
 30338  002C4A  147A               	andwf	i2printf@flag+1,w,c
 30339  002C4C  6E4D               	movwf	(??i2_printf+1)& (0+255),c
 30340  002C4E  504C               	movf	??i2_printf,w,c
 30341  002C50  104D               	iorwf	??i2_printf+1,w,c
 30342  002C52  B4D8               	btfsc	status,2,c
 30343  002C54  D004               	goto	i2l15017
 30344                           
 30345                           ;doprnt.c: 1346: width--;
 30346  002C56  066D               	decf	i2printf@width,f,c
 30347  002C58  A0D8               	btfss	status,0,c
 30348  002C5A  066E               	decf	i2printf@width+1,f,c
 30349  002C5C  D000               	goto	i2l15017
 30350  002C5E                     i2l15017:
 30351                           
 30352                           ;doprnt.c: 1348: if(flag & 0x4000) {
 30353  002C5E  AC7A               	btfss	i2printf@flag+1,6,c
 30354  002C60  D014               	goto	i2l15025
 30355                           
 30356                           ;doprnt.c: 1349: if(width > prec)
 30357  002C62  506D               	movf	i2printf@width,w,c
 30358  002C64  5C76               	subwf	i2printf@prec,w,c
 30359  002C66  5077               	movf	i2printf@prec+1,w,c
 30360  002C68  0A80               	xorlw	128
 30361  002C6A  6E4C               	movwf	??i2_printf& (0+255),c
 30362  002C6C  506E               	movf	i2printf@width+1,w,c
 30363  002C6E  0A80               	xorlw	128
 30364  002C70  584C               	subwfb	??i2_printf& (0+255),w,c
 30365  002C72  B0D8               	btfsc	status,0,c
 30366  002C74  D005               	goto	i2l15023
 30367                           
 30368                           ;doprnt.c: 1350: width -= prec;
 30369  002C76  5076               	movf	i2printf@prec,w,c
 30370  002C78  5E6D               	subwf	i2printf@width,f,c
 30371  002C7A  5077               	movf	i2printf@prec+1,w,c
 30372  002C7C  5A6E               	subwfb	i2printf@width+1,f,c
 30373  002C7E  D005               	goto	i2l15025
 30374  002C80                     i2l15023:
 30375                           
 30376                           ;doprnt.c: 1351: else
 30377                           ;doprnt.c: 1352: width = 0;
 30378  002C80  0E00               	movlw	0
 30379  002C82  6E6E               	movwf	i2printf@width+1,c
 30380  002C84  0E00               	movlw	0
 30381  002C86  6E6D               	movwf	i2printf@width,c
 30382  002C88  D000               	goto	i2l15025
 30383  002C8A                     i2l15025:
 30384                           
 30385                           ;doprnt.c: 1353: }
 30386                           ;doprnt.c: 1368: if((flag & (0x80|0x800)) == (0x80|0x800)) {
 30387  002C8A  0E80               	movlw	128
 30388  002C8C  6E4C               	movwf	??i2_printf& (0+255),c
 30389  002C8E  0E08               	movlw	8
 30390  002C90  6E4D               	movwf	(??i2_printf+1)& (0+255),c
 30391  002C92  C079  F04E         	movff	i2printf@flag,??i2_printf+2
 30392  002C96  C07A  F04F         	movff	i2printf@flag+1,??i2_printf+3
 30393  002C9A  504C               	movf	??i2_printf,w,c
 30394  002C9C  164E               	andwf	??i2_printf+2,f,c
 30395  002C9E  504D               	movf	??i2_printf+1,w,c
 30396  002CA0  164F               	andwf	??i2_printf+3,f,c
 30397  002CA2  0E80               	movlw	128
 30398  002CA4  184E               	xorwf	??i2_printf+2,w,c
 30399  002CA6  E116               	bnz	i2l15033
 30400  002CA8  0E08               	movlw	8
 30401  002CAA  184F               	xorwf	??i2_printf+3,w,c
 30402  002CAC  A4D8               	btfss	status,2,c
 30403  002CAE  D012               	goto	i2l15033
 30404                           
 30405                           ;doprnt.c: 1372: if(width > 2)
 30406  002CB0  BE6E               	btfsc	i2printf@width+1,7,c
 30407  002CB2  D00B               	goto	i2l15031
 30408  002CB4  506E               	movf	i2printf@width+1,w,c
 30409  002CB6  E104               	bnz	i2u1788_40
 30410  002CB8  0E03               	movlw	3
 30411  002CBA  5C6D               	subwf	i2printf@width,w,c
 30412  002CBC  A0D8               	btfss	status,0,c
 30413  002CBE  D005               	goto	i2l15031
 30414  002CC0                     i2u1788_40:
 30415                           
 30416                           ;doprnt.c: 1373: width -= 2;
 30417  002CC0  0EFE               	movlw	254
 30418  002CC2  266D               	addwf	i2printf@width,f,c
 30419  002CC4  0EFF               	movlw	255
 30420  002CC6  226E               	addwfc	i2printf@width+1,f,c
 30421  002CC8  D005               	goto	i2l15033
 30422  002CCA                     i2l15031:
 30423                           
 30424                           ;doprnt.c: 1374: else
 30425                           ;doprnt.c: 1375: width = 0;
 30426  002CCA  0E00               	movlw	0
 30427  002CCC  6E6E               	movwf	i2printf@width+1,c
 30428  002CCE  0E00               	movlw	0
 30429  002CD0  6E6D               	movwf	i2printf@width,c
 30430  002CD2  D000               	goto	i2l15033
 30431  002CD4                     i2l15033:
 30432                           
 30433                           ;doprnt.c: 1376: }
 30434                           ;doprnt.c: 1381: if(width > c)
 30435  002CD4  0E80               	movlw	128
 30436  002CD6  BE78               	btfsc	i2printf@c,7,c
 30437  002CD8  0E7F               	movlw	127
 30438  002CDA  6E4C               	movwf	??i2_printf& (0+255),c
 30439  002CDC  506D               	movf	i2printf@width,w,c
 30440  002CDE  5C78               	subwf	i2printf@c,w,c
 30441  002CE0  506E               	movf	i2printf@width+1,w,c
 30442  002CE2  0A80               	xorlw	128
 30443  002CE4  584C               	subwfb	??i2_printf& (0+255),w,c
 30444  002CE6  B0D8               	btfsc	status,0,c
 30445  002CE8  D007               	goto	i2l15037
 30446                           
 30447                           ;doprnt.c: 1382: width -= c;
 30448  002CEA  5078               	movf	i2printf@c,w,c
 30449  002CEC  5E6D               	subwf	i2printf@width,f,c
 30450  002CEE  0E00               	movlw	0
 30451  002CF0  BE78               	btfsc	i2printf@c,7,c
 30452  002CF2  0EFF               	movlw	255
 30453  002CF4  5A6E               	subwfb	i2printf@width+1,f,c
 30454  002CF6  D005               	goto	i2l15039
 30455  002CF8                     i2l15037:
 30456                           
 30457                           ;doprnt.c: 1383: else
 30458                           ;doprnt.c: 1384: width = 0;
 30459  002CF8  0E00               	movlw	0
 30460  002CFA  6E6E               	movwf	i2printf@width+1,c
 30461  002CFC  0E00               	movlw	0
 30462  002CFE  6E6D               	movwf	i2printf@width,c
 30463  002D00  D000               	goto	i2l15039
 30464  002D02                     i2l15039:
 30465                           
 30466                           ;doprnt.c: 1387: if(flag & 0x04) {
 30467  002D02  A479               	btfss	i2printf@flag,2,c
 30468  002D04  D041               	goto	i2l15063
 30469                           
 30470                           ;doprnt.c: 1389: if(flag & 0x02)
 30471  002D06  A279               	btfss	i2printf@flag,1,c
 30472  002D08  D00F               	goto	i2l1626
 30473                           
 30474                           ;doprnt.c: 1390: (putch(flag & 0x01 ? '-' : '+') );
 30475  002D0A  B079               	btfsc	i2printf@flag,0,c
 30476  002D0C  D004               	goto	i2l15047
 30477  002D0E  0E00               	movlw	0
 30478  002D10  6E5F               	movwf	i2_printf$2211+1,c
 30479  002D12  0E2B               	movlw	43
 30480  002D14  D003               	goto	L35
 30481  002D16                     i2l15047:
 30482  002D16  0E00               	movlw	0
 30483  002D18  6E5F               	movwf	i2_printf$2211+1,c
 30484  002D1A  0E2D               	movlw	45
 30485  002D1C                     L35:
 30486  002D1C  6E5E               	movwf	i2_printf$2211,c
 30487  002D1E  D000               	goto	i2l15049
 30488  002D20                     i2l15049:
 30489  002D20  505E               	movf	i2_printf$2211,w,c
 30490  002D22  EC49  F049         	call	i2_putch
 30491  002D26  D020               	goto	i2l15057
 30492  002D28                     i2l1626:
 30493                           
 30494                           ;doprnt.c: 1396: else
 30495                           ;doprnt.c: 1399: if(flag & 0x01)
 30496  002D28  A079               	btfss	i2printf@flag,0,c
 30497  002D2A  D004               	goto	i2l15053
 30498                           
 30499                           ;doprnt.c: 1400: (putch(' ') );
 30500  002D2C  0E20               	movlw	32
 30501  002D2E  EC49  F049         	call	i2_putch
 30502  002D32  D01A               	goto	i2l15057
 30503  002D34                     i2l15053:
 30504                           
 30505                           ;doprnt.c: 1403: else if((flag & (0x80|0x800)) == (0x80|0x800)) {
 30506  002D34  0E80               	movlw	128
 30507  002D36  6E4C               	movwf	??i2_printf& (0+255),c
 30508  002D38  0E08               	movlw	8
 30509  002D3A  6E4D               	movwf	(??i2_printf+1)& (0+255),c
 30510  002D3C  C079  F04E         	movff	i2printf@flag,??i2_printf+2
 30511  002D40  C07A  F04F         	movff	i2printf@flag+1,??i2_printf+3
 30512  002D44  504C               	movf	??i2_printf,w,c
 30513  002D46  164E               	andwf	??i2_printf+2,f,c
 30514  002D48  504D               	movf	??i2_printf+1,w,c
 30515  002D4A  164F               	andwf	??i2_printf+3,f,c
 30516  002D4C  0E80               	movlw	128
 30517  002D4E  184E               	xorwf	??i2_printf+2,w,c
 30518  002D50  E10B               	bnz	i2l15057
 30519  002D52  0E08               	movlw	8
 30520  002D54  184F               	xorwf	??i2_printf+3,w,c
 30521  002D56  A4D8               	btfss	status,2,c
 30522  002D58  D007               	goto	i2l15057
 30523                           
 30524                           ;doprnt.c: 1404: (putch('0') );
 30525  002D5A  0E30               	movlw	48
 30526  002D5C  EC49  F049         	call	i2_putch
 30527                           
 30528                           ;doprnt.c: 1410: (putch('x') );
 30529  002D60  0E78               	movlw	120
 30530  002D62  EC49  F049         	call	i2_putch
 30531  002D66  D000               	goto	i2l15057
 30532  002D68                     i2l15057:
 30533                           
 30534                           ;doprnt.c: 1412: }
 30535                           ;doprnt.c: 1415: if(width)
 30536  002D68  506D               	movf	i2printf@width,w,c
 30537  002D6A  106E               	iorwf	i2printf@width+1,w,c
 30538  002D6C  B4D8               	btfsc	status,2,c
 30539  002D6E  D0CB               	goto	i2l15097
 30540  002D70                     i2l15059:
 30541                           
 30542                           ;doprnt.c: 1417: (putch('0') );
 30543  002D70  0E30               	movlw	48
 30544  002D72  EC49  F049         	call	i2_putch
 30545                           
 30546                           ;doprnt.c: 1418: while(--width);
 30547  002D76  066D               	decf	i2printf@width,f,c
 30548  002D78  A0D8               	btfss	status,0,c
 30549  002D7A  066E               	decf	i2printf@width+1,f,c
 30550  002D7C  506D               	movf	i2printf@width,w,c
 30551  002D7E  106E               	iorwf	i2printf@width+1,w,c
 30552  002D80  B4D8               	btfsc	status,2,c
 30553  002D82  D0C1               	goto	i2l15097
 30554  002D84  D7F5               	goto	i2l15059
 30555                           
 30556                           ;doprnt.c: 1420: } else
 30557  002D86  D0BF               	goto	i2l15097
 30558  002D88                     i2l15063:
 30559                           
 30560                           ;doprnt.c: 1422: {
 30561                           ;doprnt.c: 1424: if(width
 30562                           ;doprnt.c: 1426: && !(flag & 0x08)
 30563                           ;doprnt.c: 1428: )
 30564  002D88  506D               	movf	i2printf@width,w,c
 30565  002D8A  106E               	iorwf	i2printf@width+1,w,c
 30566  002D8C  A4D8               	btfss	status,2,c
 30567  002D8E  B679               	btfsc	i2printf@flag,3,c
 30568  002D90  D00A               	goto	i2l1639
 30569  002D92                     i2l15067:
 30570                           
 30571                           ;doprnt.c: 1430: (putch(' ') );
 30572  002D92  0E20               	movlw	32
 30573  002D94  EC49  F049         	call	i2_putch
 30574                           
 30575                           ;doprnt.c: 1431: while(--width);
 30576  002D98  066D               	decf	i2printf@width,f,c
 30577  002D9A  A0D8               	btfss	status,0,c
 30578  002D9C  066E               	decf	i2printf@width+1,f,c
 30579  002D9E  506D               	movf	i2printf@width,w,c
 30580  002DA0  106E               	iorwf	i2printf@width+1,w,c
 30581  002DA2  A4D8               	btfss	status,2,c
 30582  002DA4  D7F6               	goto	i2l15067
 30583  002DA6                     i2l1639:
 30584                           
 30585                           ;doprnt.c: 1434: if(flag & 0x02)
 30586  002DA6  A279               	btfss	i2printf@flag,1,c
 30587  002DA8  D00F               	goto	i2l1642
 30588                           
 30589                           ;doprnt.c: 1435: (putch(flag & 0x01 ? '-' : '+') );
 30590  002DAA  B079               	btfsc	i2printf@flag,0,c
 30591  002DAC  D004               	goto	i2l15075
 30592  002DAE  0E00               	movlw	0
 30593  002DB0  6E61               	movwf	i2_printf$2212+1,c
 30594  002DB2  0E2B               	movlw	43
 30595  002DB4  D003               	goto	L36
 30596  002DB6                     i2l15075:
 30597  002DB6  0E00               	movlw	0
 30598  002DB8  6E61               	movwf	i2_printf$2212+1,c
 30599  002DBA  0E2D               	movlw	45
 30600  002DBC                     L36:
 30601  002DBC  6E60               	movwf	i2_printf$2212,c
 30602  002DBE  D000               	goto	i2l15077
 30603  002DC0                     i2l15077:
 30604  002DC0  5060               	movf	i2_printf$2212,w,c
 30605  002DC2  EC49  F049         	call	i2_putch
 30606  002DC6  D006               	goto	i2l15081
 30607  002DC8                     i2l1642:
 30608                           
 30609                           ;doprnt.c: 1443: else if(flag & 0x01)
 30610  002DC8  A079               	btfss	i2printf@flag,0,c
 30611  002DCA  D004               	goto	i2l15081
 30612                           
 30613                           ;doprnt.c: 1444: (putch(' ') );
 30614  002DCC  0E20               	movlw	32
 30615  002DCE  EC49  F049         	call	i2_putch
 30616  002DD2  D000               	goto	i2l15081
 30617  002DD4                     i2l15081:
 30618                           
 30619                           ;doprnt.c: 1454: if((flag & (0x80|0x800)) == (0x80|0x800)) {
 30620  002DD4  0E80               	movlw	128
 30621  002DD6  6E4C               	movwf	??i2_printf& (0+255),c
 30622  002DD8  0E08               	movlw	8
 30623  002DDA  6E4D               	movwf	(??i2_printf+1)& (0+255),c
 30624  002DDC  C079  F04E         	movff	i2printf@flag,??i2_printf+2
 30625  002DE0  C07A  F04F         	movff	i2printf@flag+1,??i2_printf+3
 30626  002DE4  504C               	movf	??i2_printf,w,c
 30627  002DE6  164E               	andwf	??i2_printf+2,f,c
 30628  002DE8  504D               	movf	??i2_printf+1,w,c
 30629  002DEA  164F               	andwf	??i2_printf+3,f,c
 30630  002DEC  0E80               	movlw	128
 30631  002DEE  184E               	xorwf	??i2_printf+2,w,c
 30632  002DF0  E103               	bnz	i2u1803_41
 30633  002DF2  0E08               	movlw	8
 30634  002DF4  184F               	xorwf	??i2_printf+3,w,c
 30635  002DF6  A4D8               	btfss	status,2,c
 30636  002DF8                     i2u1803_41:
 30637  002DF8  D086               	goto	i2l15097
 30638                           
 30639                           ;doprnt.c: 1458: (putch('0') );
 30640  002DFA  0E30               	movlw	48
 30641  002DFC  EC49  F049         	call	i2_putch
 30642                           
 30643                           ;doprnt.c: 1464: (putch('x') );
 30644  002E00  0E78               	movlw	120
 30645  002E02  EC49  F049         	call	i2_putch
 30646                           
 30647                           ;doprnt.c: 1466: }
 30648                           ;doprnt.c: 1469: }
 30649                           ;doprnt.c: 1474: while(prec--) {
 30650  002E06  D07F               	goto	i2l15097
 30651                           
 30652                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
 30653  002E08  D071               	goto	i2l15093
 30654  002E0A                     i2l15085:
 30655                           
 30656                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 30657  002E0A  C076  F04C         	movff	i2printf@prec,??i2_printf
 30658  002E0E  C077  F04D         	movff	i2printf@prec+1,??i2_printf+1
 30659  002E12  90D8               	bcf	status,0,c
 30660  002E14  364C               	rlcf	??i2_printf,f,c
 30661  002E16  364D               	rlcf	??i2_printf+1,f,c
 30662  002E18  90D8               	bcf	status,0,c
 30663  002E1A  364C               	rlcf	??i2_printf,f,c
 30664  002E1C  364D               	rlcf	??i2_printf+1,f,c
 30665  002E1E  0E0E               	movlw	low _dpowers
 30666  002E20  244C               	addwf	??i2_printf,w,c
 30667  002E22  6EF6               	movwf	tblptrl,c
 30668  002E24  0EFE               	movlw	high _dpowers
 30669  002E26  204D               	addwfc	??i2_printf+1,w,c
 30670  002E28  6EF7               	movwf	tblptrh,c
 30671  002E2A                     	if	0	;There are less than 3 active tblptr bytes
 30672  002E2A                     	endif
 30673  002E2A  0009               	tblrd		*+
 30674  002E2C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 30675  002E30  0009               	tblrd		*+
 30676  002E32  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 30677  002E36  0009               	tblrd		*+
 30678  002E38  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 30679  002E3C  000A               	tblrd		*-
 30680  002E3E  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 30681  002E42  C06F  F001         	movff	i2printf@val,i2___lldiv@dividend
 30682  002E46  C070  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 30683  002E4A  C071  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 30684  002E4E  C072  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 30685  002E52  EC5F  F040         	call	i2___lldiv	;wreg free
 30686  002E56  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 30687  002E5A  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 30688  002E5E  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 30689  002E62  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 30690  002E66  0E0A               	movlw	10
 30691  002E68  6E12               	movwf	i2___llmod@divisor,c
 30692  002E6A  0E00               	movlw	0
 30693  002E6C  6E13               	movwf	i2___llmod@divisor+1,c
 30694  002E6E  0E00               	movlw	0
 30695  002E70  6E14               	movwf	i2___llmod@divisor+2,c
 30696  002E72  0E00               	movlw	0
 30697  002E74  6E15               	movwf	i2___llmod@divisor+3,c
 30698  002E76  EC20  F042         	call	i2___llmod	;wreg free
 30699  002E7A  500E               	movf	?i2___llmod,w,c
 30700  002E7C  0F30               	addlw	48
 30701  002E7E  6E78               	movwf	i2printf@c,c
 30702                           
 30703                           ;doprnt.c: 1491: break;
 30704  002E80  D03E               	goto	i2l15095
 30705  002E82                     i2l15087:
 30706                           
 30707                           ;doprnt.c: 1499: {
 30708                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 30709  002E82  C06F  F001         	movff	i2printf@val,i2___lldiv@dividend
 30710  002E86  C070  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 30711  002E8A  C071  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 30712  002E8E  C072  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 30713  002E92  C076  F04C         	movff	i2printf@prec,??i2_printf
 30714  002E96  C077  F04D         	movff	i2printf@prec+1,??i2_printf+1
 30715  002E9A  90D8               	bcf	status,0,c
 30716  002E9C  364C               	rlcf	??i2_printf,f,c
 30717  002E9E  364D               	rlcf	??i2_printf+1,f,c
 30718  002EA0  90D8               	bcf	status,0,c
 30719  002EA2  364C               	rlcf	??i2_printf,f,c
 30720  002EA4  364D               	rlcf	??i2_printf+1,f,c
 30721  002EA6  0E84               	movlw	low _hexpowers
 30722  002EA8  244C               	addwf	??i2_printf,w,c
 30723  002EAA  6EF6               	movwf	tblptrl,c
 30724  002EAC  0EFE               	movlw	high _hexpowers
 30725  002EAE  204D               	addwfc	??i2_printf+1,w,c
 30726  002EB0  6EF7               	movwf	tblptrh,c
 30727  002EB2                     	if	0	;There are less than 3 active tblptr bytes
 30728  002EB2                     	endif
 30729  002EB2  0009               	tblrd		*+
 30730  002EB4  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 30731  002EB8  0009               	tblrd		*+
 30732  002EBA  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 30733  002EBE  0009               	tblrd		*+
 30734  002EC0  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 30735  002EC4  000A               	tblrd		*-
 30736  002EC6  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 30737  002ECA  EC5F  F040         	call	i2___lldiv	;wreg free
 30738  002ECE  5001               	movf	?i2___lldiv,w,c
 30739  002ED0  0B0F               	andlw	15
 30740  002ED2  6E55               	movwf	i2printf@idx,c
 30741                           
 30742                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
 30743  002ED4  5055               	movf	i2printf@idx,w,c
 30744  002ED6  0D01               	mullw	1
 30745  002ED8  0E56               	movlw	low STR_37
 30746  002EDA  24F3               	addwf	prodl,w,c
 30747  002EDC  6EF6               	movwf	tblptrl,c
 30748  002EDE  0EFF               	movlw	high STR_37
 30749  002EE0  20F4               	addwfc	prodh,w,c
 30750  002EE2  6EF7               	movwf	tblptrh,c
 30751  002EE4                     	if	0	;There are less than 3 active tblptr bytes
 30752  002EE4                     	endif
 30753  002EE4  0008               	tblrd		*
 30754  002EE6  CFF5 F078          	movff	tablat,i2printf@c
 30755                           
 30756                           ;doprnt.c: 1523: }
 30757                           
 30758                           ;doprnt.c: 1508: }
 30759                           ;doprnt.c: 1510: break;
 30760  002EEA  D009               	goto	i2l15095
 30761  002EEC                     i2l15093:
 30762  002EEC  5079               	movf	i2printf@flag,w,c
 30763  002EEE  0B80               	andlw	128
 30764                           
 30765                           ; Switch size 1, requested type "space"
 30766                           ; Number of cases is 2, Range of values is 0 to 128
 30767                           ; switch strategies available:
 30768                           ; Name         Instructions Cycles
 30769                           ; simple_byte            7     4 (average)
 30770                           ;	Chosen strategy is simple_byte
 30771  002EF0  0A00               	xorlw	0	; case 0
 30772  002EF2  B4D8               	btfsc	status,2,c
 30773  002EF4  D78A               	goto	i2l15085
 30774  002EF6  0A80               	xorlw	128	; case 128
 30775  002EF8  B4D8               	btfsc	status,2,c
 30776  002EFA  D7C3               	goto	i2l15087
 30777  002EFC  D000               	goto	i2l15095
 30778  002EFE                     i2l15095:
 30779                           
 30780                           ;doprnt.c: 1524: (putch(c) );
 30781  002EFE  5078               	movf	i2printf@c,w,c
 30782  002F00  EC49  F049         	call	i2_putch
 30783  002F04  D000               	goto	i2l15097
 30784  002F06                     i2l15097:
 30785  002F06  0676               	decf	i2printf@prec,f,c
 30786  002F08  A0D8               	btfss	status,0,c
 30787  002F0A  0677               	decf	i2printf@prec+1,f,c
 30788  002F0C  2876               	incf	i2printf@prec,w,c
 30789  002F0E  E1EE               	bnz	i2l15093
 30790  002F10  2877               	incf	i2printf@prec+1,w,c
 30791  002F12  A4D8               	btfss	status,2,c
 30792  002F14  D7EB               	goto	i2l15093
 30793                           
 30794                           ;doprnt.c: 1525: }
 30795                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
 30796  002F16  B679               	btfsc	i2printf@flag,3,c
 30797  002F18  BE6E               	btfsc	i2printf@width+1,7,c
 30798  002F1A  D013               	goto	i2l15105
 30799  002F1C  506E               	movf	i2printf@width+1,w,c
 30800  002F1E  E105               	bnz	i2l15101
 30801  002F20  046D               	decf	i2printf@width,w,c
 30802  002F22  B0D8               	btfsc	status,0,c
 30803  002F24  D002               	goto	i2l15101
 30804  002F26  D00D               	goto	i2l15105
 30805  002F28  D000               	goto	i2l15101
 30806  002F2A                     i2l15101:
 30807                           
 30808                           ;doprnt.c: 1530: (putch(' ') );
 30809  002F2A  0E20               	movlw	32
 30810  002F2C  EC49  F049         	call	i2_putch
 30811                           
 30812                           ;doprnt.c: 1531: while(--width);
 30813  002F30  066D               	decf	i2printf@width,f,c
 30814  002F32  A0D8               	btfss	status,0,c
 30815  002F34  066E               	decf	i2printf@width+1,f,c
 30816  002F36  506D               	movf	i2printf@width,w,c
 30817  002F38  106E               	iorwf	i2printf@width+1,w,c
 30818  002F3A  B4D8               	btfsc	status,2,c
 30819  002F3C  D002               	goto	i2l15105
 30820  002F3E  D7F5               	goto	i2l15101
 30821  002F40  D000               	goto	i2l15105
 30822  002F42                     i2l15105:
 30823  002F42  C04A  FFF6         	movff	i2printf@f,tblptrl
 30824  002F46  C04B  FFF7         	movff	i2printf@f+1,tblptrh
 30825  002F4A  4A4A               	infsnz	i2printf@f,f,c
 30826  002F4C  2A4B               	incf	i2printf@f+1,f,c
 30827  002F4E                     	if	0	;tblptru may be non-zero
 30828  002F4E                     	endif
 30829  002F4E                     	if	0	;tblptru may be non-zero
 30830  002F4E                     	endif
 30831  002F4E  0008               	tblrd		*
 30832  002F50  CFF5 F078          	movff	tablat,i2printf@c
 30833  002F54  5078               	movf	i2printf@c,w,c
 30834  002F56  B4D8               	btfsc	status,2,c
 30835  002F58  D003               	goto	i2l1661
 30836  002F5A  EF01  F00D         	goto	i2l14495
 30837  002F5E  D000               	goto	i2l1661
 30838  002F60                     i2l1661:
 30839  002F60  0012               	return		;funcret
 30840  002F62                     __end_ofi2_printf:
 30841                           	opt stack 0
 30842                           pclatu	equ	0xFFB
 30843                           pclath	equ	0xFFA
 30844                           tblptru	equ	0xFF8
 30845                           tblptrh	equ	0xFF7
 30846                           tblptrl	equ	0xFF6
 30847                           tablat	equ	0xFF5
 30848                           prodh	equ	0xFF4
 30849                           prodl	equ	0xFF3
 30850                           intcon	equ	0xFF2
 30851                           intcon2	equ	0xFF1
 30852                           intcon3	equ	0xFF0
 30853                           postinc0	equ	0xFEE
 30854                           fsr0h	equ	0xFEA
 30855                           fsr0l	equ	0xFE9
 30856                           wreg	equ	0xFE8
 30857                           postdec1	equ	0xFE5
 30858                           fsr1h	equ	0xFE2
 30859                           fsr1l	equ	0xFE1
 30860                           indf2	equ	0xFDF
 30861                           postinc2	equ	0xFDE
 30862                           postdec2	equ	0xFDD
 30863                           fsr2h	equ	0xFDA
 30864                           fsr2l	equ	0xFD9
 30865                           status	equ	0xFD8
 30866                           
 30867 ;; *************** function i2_scale *****************
 30868 ;; Defined at:
 30869 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 30870 ;; Parameters:    Size  Location     Type
 30871 ;;  scl             1    wreg     char 
 30872 ;; Auto vars:     Size  Location     Type
 30873 ;;  scl             1   48[COMRAM] char 
 30874 ;; Return value:  Size  Location     Type
 30875 ;;                  3   42[COMRAM] char 
 30876 ;; Registers used:
 30877 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30878 ;; Tracked objects:
 30879 ;;		On entry : 0/0
 30880 ;;		On exit  : 0/0
 30881 ;;		Unchanged: 0/0
 30882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30883 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30884 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30886 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30887 ;;Total ram usage:        7 bytes
 30888 ;; Hardware stack levels used:    1
 30889 ;; Hardware stack levels required when called:    2
 30890 ;; This function calls:
 30891 ;;		i2___awdiv
 30892 ;;		i2___awmod
 30893 ;;		i2___ftmul
 30894 ;;		i2___wmul
 30895 ;; This function is called by:
 30896 ;;		i2_printf
 30897 ;; This function uses a non-reentrant model
 30898 ;;
 30899                           
 30900                           	psect	text127
 30901  003F94                     __ptext127:
 30902                           	opt stack 0
 30903  003F94                     i2_scale:
 30904                           	opt stack 15
 30905                           
 30906                           ;incstack = 0
 30907                           ;i2scale@scl stored from wreg
 30908  003F94  6E31               	movwf	i2scale@scl,c
 30909                           
 30910                           ;doprnt.c: 428: if(scl < 0) {
 30911  003F96  AE31               	btfss	i2scale@scl,7,c
 30912  003F98  D0EF               	goto	i2l13873
 30913                           
 30914                           ;doprnt.c: 429: scl = -scl;
 30915  003F9A  6C31               	negf	i2scale@scl,c
 30916                           
 30917                           ;doprnt.c: 430: if(scl>=110)
 30918  003F9C  5031               	movf	i2scale@scl,w,c
 30919  003F9E  0A80               	xorlw	128
 30920  003FA0  0F12               	addlw	-238
 30921  003FA2  A0D8               	btfss	status,0,c
 30922  003FA4  D08D               	goto	i2l13863
 30923                           
 30924                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 30925  003FA6  0E00               	movlw	0
 30926  003FA8  6E12               	movwf	i2___wmul@multiplicand+1,c
 30927  003FAA  0E03               	movlw	3
 30928  003FAC  6E11               	movwf	i2___wmul@multiplicand,c
 30929  003FAE  0E00               	movlw	0
 30930  003FB0  6E0A               	movwf	i2___awdiv@divisor+1,c
 30931  003FB2  0E0A               	movlw	10
 30932  003FB4  6E09               	movwf	i2___awdiv@divisor,c
 30933  003FB6  0E00               	movlw	0
 30934  003FB8  6E04               	movwf	i2___awmod@divisor+1,c
 30935  003FBA  0E64               	movlw	100
 30936  003FBC  6E03               	movwf	i2___awmod@divisor,c
 30937  003FBE  5031               	movf	i2scale@scl,w,c
 30938  003FC0  6E01               	movwf	i2___awmod@dividend,c
 30939  003FC2  6A02               	clrf	i2___awmod@dividend+1,c
 30940  003FC4  BE01               	btfsc	i2___awmod@dividend,7,c
 30941  003FC6  0602               	decf	i2___awmod@dividend+1,f,c
 30942  003FC8  EC2A  F041         	call	i2___awmod	;wreg free
 30943  003FCC  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 30944  003FD0  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 30945  003FD4  ECC9  F03F         	call	i2___awdiv	;wreg free
 30946  003FD8  0E09               	movlw	9
 30947  003FDA  2407               	addwf	?i2___awdiv,w,c
 30948  003FDC  6E0F               	movwf	i2___wmul@multiplier,c
 30949  003FDE  0E00               	movlw	0
 30950  003FE0  2008               	addwfc	?i2___awdiv+1,w,c
 30951  003FE2  6E10               	movwf	i2___wmul@multiplier+1,c
 30952  003FE4  EC95  F047         	call	i2___wmul	;wreg free
 30953  003FE8  0E36               	movlw	low __npowers_
 30954  003FEA  240F               	addwf	?i2___wmul,w,c
 30955  003FEC  6EF6               	movwf	tblptrl,c
 30956  003FEE  0EFE               	movlw	high __npowers_
 30957  003FF0  2010               	addwfc	?i2___wmul+1,w,c
 30958  003FF2  6EF7               	movwf	tblptrh,c
 30959  003FF4                     	if	0	;There are less than 3 active tblptr bytes
 30960  003FF4                     	endif
 30961  003FF4  0009               	tblrd		*+
 30962  003FF6  CFF5 F01F          	movff	tablat,i2___ftmul@f2
 30963  003FFA  0009               	tblrd		*+
 30964  003FFC  CFF5 F020          	movff	tablat,i2___ftmul@f2+1
 30965  004000  000A               	tblrd		*-
 30966  004002  CFF5 F021          	movff	tablat,i2___ftmul@f2+2
 30967  004006  0E00               	movlw	0
 30968  004008  6E0A               	movwf	i2___awdiv@divisor+1,c
 30969  00400A  0E64               	movlw	100
 30970  00400C  6E09               	movwf	i2___awdiv@divisor,c
 30971  00400E  5031               	movf	i2scale@scl,w,c
 30972  004010  6E07               	movwf	i2___awdiv@dividend,c
 30973  004012  6A08               	clrf	i2___awdiv@dividend+1,c
 30974  004014  BE07               	btfsc	i2___awdiv@dividend,7,c
 30975  004016  0608               	decf	i2___awdiv@dividend+1,f,c
 30976  004018  ECC9  F03F         	call	i2___awdiv	;wreg free
 30977  00401C  0E12               	movlw	18
 30978  00401E  2407               	addwf	?i2___awdiv,w,c
 30979  004020  6E0F               	movwf	i2___wmul@multiplier,c
 30980  004022  0E00               	movlw	0
 30981  004024  2008               	addwfc	?i2___awdiv+1,w,c
 30982  004026  6E10               	movwf	i2___wmul@multiplier+1,c
 30983  004028  0E00               	movlw	0
 30984  00402A  6E12               	movwf	i2___wmul@multiplicand+1,c
 30985  00402C  0E03               	movlw	3
 30986  00402E  6E11               	movwf	i2___wmul@multiplicand,c
 30987  004030  EC95  F047         	call	i2___wmul	;wreg free
 30988  004034  0E36               	movlw	low __npowers_
 30989  004036  240F               	addwf	?i2___wmul,w,c
 30990  004038  6EF6               	movwf	tblptrl,c
 30991  00403A  0EFE               	movlw	high __npowers_
 30992  00403C  2010               	addwfc	?i2___wmul+1,w,c
 30993  00403E  6EF7               	movwf	tblptrh,c
 30994  004040                     	if	0	;There are less than 3 active tblptr bytes
 30995  004040                     	endif
 30996  004040  0009               	tblrd		*+
 30997  004042  CFF5 F01C          	movff	tablat,i2___ftmul@f1
 30998  004046  0009               	tblrd		*+
 30999  004048  CFF5 F01D          	movff	tablat,i2___ftmul@f1+1
 31000  00404C  000A               	tblrd		*-
 31001  00404E  CFF5 F01E          	movff	tablat,i2___ftmul@f1+2
 31002  004052  EC54  F036         	call	i2___ftmul	;wreg free
 31003  004056  C01C  F02E         	movff	?i2___ftmul,i2_scale$3293
 31004  00405A  C01D  F02F         	movff	?i2___ftmul+1,i2_scale$3293+1
 31005  00405E  C01E  F030         	movff	?i2___ftmul+2,i2_scale$3293+2
 31006                           
 31007                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 31008  004062  C02E  F01C         	movff	i2_scale$3293,i2___ftmul@f1
 31009  004066  C02F  F01D         	movff	i2_scale$3293+1,i2___ftmul@f1+1
 31010  00406A  C030  F01E         	movff	i2_scale$3293+2,i2___ftmul@f1+2
 31011  00406E  0E00               	movlw	0
 31012  004070  6E12               	movwf	i2___wmul@multiplicand+1,c
 31013  004072  0E03               	movlw	3
 31014  004074  6E11               	movwf	i2___wmul@multiplicand,c
 31015  004076  0E00               	movlw	0
 31016  004078  6E04               	movwf	i2___awmod@divisor+1,c
 31017  00407A  0E0A               	movlw	10
 31018  00407C  6E03               	movwf	i2___awmod@divisor,c
 31019  00407E  5031               	movf	i2scale@scl,w,c
 31020  004080  6E01               	movwf	i2___awmod@dividend,c
 31021  004082  6A02               	clrf	i2___awmod@dividend+1,c
 31022  004084  BE01               	btfsc	i2___awmod@dividend,7,c
 31023  004086  0602               	decf	i2___awmod@dividend+1,f,c
 31024  004088  EC2A  F041         	call	i2___awmod	;wreg free
 31025  00408C  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 31026  004090  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 31027  004094  EC95  F047         	call	i2___wmul	;wreg free
 31028  004098  0E36               	movlw	low __npowers_
 31029  00409A  240F               	addwf	?i2___wmul,w,c
 31030  00409C  6EF6               	movwf	tblptrl,c
 31031  00409E  0EFE               	movlw	high __npowers_
 31032  0040A0  2010               	addwfc	?i2___wmul+1,w,c
 31033  0040A2  6EF7               	movwf	tblptrh,c
 31034  0040A4                     	if	0	;There are less than 3 active tblptr bytes
 31035  0040A4                     	endif
 31036  0040A4  0009               	tblrd		*+
 31037  0040A6  CFF5 F01F          	movff	tablat,i2___ftmul@f2
 31038  0040AA  0009               	tblrd		*+
 31039  0040AC  CFF5 F020          	movff	tablat,i2___ftmul@f2+1
 31040  0040B0  000A               	tblrd		*-
 31041  0040B2  CFF5 F021          	movff	tablat,i2___ftmul@f2+2
 31042  0040B6  EC54  F036         	call	i2___ftmul	;wreg free
 31043  0040BA  D141               	goto	L40
 31044  0040BC  D15A               	goto	i2l1407
 31045  0040BE  D054               	goto	i2l13869
 31046  0040C0                     i2l13863:
 31047                           
 31048                           ;doprnt.c: 432: else if(scl > 10)
 31049  0040C0  5031               	movf	i2scale@scl,w,c
 31050  0040C2  0A80               	xorlw	128
 31051  0040C4  0F75               	addlw	-139
 31052  0040C6  A0D8               	btfss	status,0,c
 31053  0040C8  D04F               	goto	i2l13869
 31054                           
 31055                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 31056  0040CA  0E00               	movlw	0
 31057  0040CC  6E0A               	movwf	i2___awdiv@divisor+1,c
 31058  0040CE  0E0A               	movlw	10
 31059  0040D0  6E09               	movwf	i2___awdiv@divisor,c
 31060  0040D2  5031               	movf	i2scale@scl,w,c
 31061  0040D4  6E07               	movwf	i2___awdiv@dividend,c
 31062  0040D6  6A08               	clrf	i2___awdiv@dividend+1,c
 31063  0040D8  BE07               	btfsc	i2___awdiv@dividend,7,c
 31064  0040DA  0608               	decf	i2___awdiv@dividend+1,f,c
 31065  0040DC  ECC9  F03F         	call	i2___awdiv	;wreg free
 31066  0040E0  0E09               	movlw	9
 31067  0040E2  2407               	addwf	?i2___awdiv,w,c
 31068  0040E4  6E0F               	movwf	i2___wmul@multiplier,c
 31069  0040E6  0E00               	movlw	0
 31070  0040E8  2008               	addwfc	?i2___awdiv+1,w,c
 31071  0040EA  6E10               	movwf	i2___wmul@multiplier+1,c
 31072  0040EC  0E00               	movlw	0
 31073  0040EE  6E12               	movwf	i2___wmul@multiplicand+1,c
 31074  0040F0  0E03               	movlw	3
 31075  0040F2  6E11               	movwf	i2___wmul@multiplicand,c
 31076  0040F4  EC95  F047         	call	i2___wmul	;wreg free
 31077  0040F8  0E36               	movlw	low __npowers_
 31078  0040FA  240F               	addwf	?i2___wmul,w,c
 31079  0040FC  6EF6               	movwf	tblptrl,c
 31080  0040FE  0EFE               	movlw	high __npowers_
 31081  004100  2010               	addwfc	?i2___wmul+1,w,c
 31082  004102  6EF7               	movwf	tblptrh,c
 31083  004104                     	if	0	;There are less than 3 active tblptr bytes
 31084  004104                     	endif
 31085  004104  0009               	tblrd		*+
 31086  004106  CFF5 F01C          	movff	tablat,i2___ftmul@f1
 31087  00410A  0009               	tblrd		*+
 31088  00410C  CFF5 F01D          	movff	tablat,i2___ftmul@f1+1
 31089  004110  000A               	tblrd		*-
 31090  004112  CFF5 F01E          	movff	tablat,i2___ftmul@f1+2
 31091  004116  0E00               	movlw	0
 31092  004118  6E12               	movwf	i2___wmul@multiplicand+1,c
 31093  00411A  0E03               	movlw	3
 31094  00411C  6E11               	movwf	i2___wmul@multiplicand,c
 31095  00411E  0E00               	movlw	0
 31096  004120  6E04               	movwf	i2___awmod@divisor+1,c
 31097  004122  0E0A               	movlw	10
 31098  004124  6E03               	movwf	i2___awmod@divisor,c
 31099  004126  5031               	movf	i2scale@scl,w,c
 31100  004128  6E01               	movwf	i2___awmod@dividend,c
 31101  00412A  6A02               	clrf	i2___awmod@dividend+1,c
 31102  00412C  BE01               	btfsc	i2___awmod@dividend,7,c
 31103  00412E  0602               	decf	i2___awmod@dividend+1,f,c
 31104  004130  EC2A  F041         	call	i2___awmod	;wreg free
 31105  004134  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 31106  004138  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 31107  00413C  EC95  F047         	call	i2___wmul	;wreg free
 31108  004140  0E36               	movlw	low __npowers_
 31109  004142  240F               	addwf	?i2___wmul,w,c
 31110  004144  6EF6               	movwf	tblptrl,c
 31111  004146  0EFE               	movlw	high __npowers_
 31112  004148  2010               	addwfc	?i2___wmul+1,w,c
 31113  00414A  6EF7               	movwf	tblptrh,c
 31114  00414C                     	if	0	;There are less than 3 active tblptr bytes
 31115  00414C                     	endif
 31116  00414C  0009               	tblrd		*+
 31117  00414E  CFF5 F01F          	movff	tablat,i2___ftmul@f2
 31118  004152  0009               	tblrd		*+
 31119  004154  CFF5 F020          	movff	tablat,i2___ftmul@f2+1
 31120  004158  000A               	tblrd		*-
 31121  00415A  CFF5 F021          	movff	tablat,i2___ftmul@f2+2
 31122  00415E  EC54  F036         	call	i2___ftmul	;wreg free
 31123  004162  D0ED               	goto	L40
 31124  004164  D106               	goto	i2l1407
 31125  004166  D000               	goto	i2l13869
 31126  004168                     i2l13869:
 31127                           
 31128                           ;doprnt.c: 434: return _npowers_[scl];
 31129  004168  5031               	movf	i2scale@scl,w,c
 31130  00416A  0D03               	mullw	3
 31131  00416C  0E36               	movlw	low __npowers_
 31132  00416E  24F3               	addwf	prodl,w,c
 31133  004170  6EF6               	movwf	tblptrl,c
 31134  004172  0EFE               	movlw	high __npowers_
 31135  004174  D0F2               	goto	L39
 31136  004176  D0FD               	goto	i2l1407
 31137  004178                     i2l13873:
 31138                           
 31139                           ;doprnt.c: 435: }
 31140                           ;doprnt.c: 436: if(scl>=110)
 31141  004178  5031               	movf	i2scale@scl,w,c
 31142  00417A  0A80               	xorlw	128
 31143  00417C  0F12               	addlw	-238
 31144  00417E  A0D8               	btfss	status,0,c
 31145  004180  D08D               	goto	i2l13881
 31146                           
 31147                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 31148  004182  0E00               	movlw	0
 31149  004184  6E12               	movwf	i2___wmul@multiplicand+1,c
 31150  004186  0E03               	movlw	3
 31151  004188  6E11               	movwf	i2___wmul@multiplicand,c
 31152  00418A  0E00               	movlw	0
 31153  00418C  6E0A               	movwf	i2___awdiv@divisor+1,c
 31154  00418E  0E0A               	movlw	10
 31155  004190  6E09               	movwf	i2___awdiv@divisor,c
 31156  004192  0E00               	movlw	0
 31157  004194  6E04               	movwf	i2___awmod@divisor+1,c
 31158  004196  0E64               	movlw	100
 31159  004198  6E03               	movwf	i2___awmod@divisor,c
 31160  00419A  5031               	movf	i2scale@scl,w,c
 31161  00419C  6E01               	movwf	i2___awmod@dividend,c
 31162  00419E  6A02               	clrf	i2___awmod@dividend+1,c
 31163  0041A0  BE01               	btfsc	i2___awmod@dividend,7,c
 31164  0041A2  0602               	decf	i2___awmod@dividend+1,f,c
 31165  0041A4  EC2A  F041         	call	i2___awmod	;wreg free
 31166  0041A8  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 31167  0041AC  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 31168  0041B0  ECC9  F03F         	call	i2___awdiv	;wreg free
 31169  0041B4  0E09               	movlw	9
 31170  0041B6  2407               	addwf	?i2___awdiv,w,c
 31171  0041B8  6E0F               	movwf	i2___wmul@multiplier,c
 31172  0041BA  0E00               	movlw	0
 31173  0041BC  2008               	addwfc	?i2___awdiv+1,w,c
 31174  0041BE  6E10               	movwf	i2___wmul@multiplier+1,c
 31175  0041C0  EC95  F047         	call	i2___wmul	;wreg free
 31176  0041C4  0E5D               	movlw	low __powers_
 31177  0041C6  240F               	addwf	?i2___wmul,w,c
 31178  0041C8  6EF6               	movwf	tblptrl,c
 31179  0041CA  0EFE               	movlw	high __powers_
 31180  0041CC  2010               	addwfc	?i2___wmul+1,w,c
 31181  0041CE  6EF7               	movwf	tblptrh,c
 31182  0041D0                     	if	0	;There are less than 3 active tblptr bytes
 31183  0041D0                     	endif
 31184  0041D0  0009               	tblrd		*+
 31185  0041D2  CFF5 F01F          	movff	tablat,i2___ftmul@f2
 31186  0041D6  0009               	tblrd		*+
 31187  0041D8  CFF5 F020          	movff	tablat,i2___ftmul@f2+1
 31188  0041DC  000A               	tblrd		*-
 31189  0041DE  CFF5 F021          	movff	tablat,i2___ftmul@f2+2
 31190  0041E2  0E00               	movlw	0
 31191  0041E4  6E0A               	movwf	i2___awdiv@divisor+1,c
 31192  0041E6  0E64               	movlw	100
 31193  0041E8  6E09               	movwf	i2___awdiv@divisor,c
 31194  0041EA  5031               	movf	i2scale@scl,w,c
 31195  0041EC  6E07               	movwf	i2___awdiv@dividend,c
 31196  0041EE  6A08               	clrf	i2___awdiv@dividend+1,c
 31197  0041F0  BE07               	btfsc	i2___awdiv@dividend,7,c
 31198  0041F2  0608               	decf	i2___awdiv@dividend+1,f,c
 31199  0041F4  ECC9  F03F         	call	i2___awdiv	;wreg free
 31200  0041F8  0E12               	movlw	18
 31201  0041FA  2407               	addwf	?i2___awdiv,w,c
 31202  0041FC  6E0F               	movwf	i2___wmul@multiplier,c
 31203  0041FE  0E00               	movlw	0
 31204  004200  2008               	addwfc	?i2___awdiv+1,w,c
 31205  004202  6E10               	movwf	i2___wmul@multiplier+1,c
 31206  004204  0E00               	movlw	0
 31207  004206  6E12               	movwf	i2___wmul@multiplicand+1,c
 31208  004208  0E03               	movlw	3
 31209  00420A  6E11               	movwf	i2___wmul@multiplicand,c
 31210  00420C  EC95  F047         	call	i2___wmul	;wreg free
 31211  004210  0E5D               	movlw	low __powers_
 31212  004212  240F               	addwf	?i2___wmul,w,c
 31213  004214  6EF6               	movwf	tblptrl,c
 31214  004216  0EFE               	movlw	high __powers_
 31215  004218  2010               	addwfc	?i2___wmul+1,w,c
 31216  00421A  6EF7               	movwf	tblptrh,c
 31217  00421C                     	if	0	;There are less than 3 active tblptr bytes
 31218  00421C                     	endif
 31219  00421C  0009               	tblrd		*+
 31220  00421E  CFF5 F01C          	movff	tablat,i2___ftmul@f1
 31221  004222  0009               	tblrd		*+
 31222  004224  CFF5 F01D          	movff	tablat,i2___ftmul@f1+1
 31223  004228  000A               	tblrd		*-
 31224  00422A  CFF5 F01E          	movff	tablat,i2___ftmul@f1+2
 31225  00422E  EC54  F036         	call	i2___ftmul	;wreg free
 31226  004232  C01C  F02E         	movff	?i2___ftmul,i2_scale$3293
 31227  004236  C01D  F02F         	movff	?i2___ftmul+1,i2_scale$3293+1
 31228  00423A  C01E  F030         	movff	?i2___ftmul+2,i2_scale$3293+2
 31229                           
 31230                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 31231  00423E  C02E  F01C         	movff	i2_scale$3293,i2___ftmul@f1
 31232  004242  C02F  F01D         	movff	i2_scale$3293+1,i2___ftmul@f1+1
 31233  004246  C030  F01E         	movff	i2_scale$3293+2,i2___ftmul@f1+2
 31234  00424A  0E00               	movlw	0
 31235  00424C  6E12               	movwf	i2___wmul@multiplicand+1,c
 31236  00424E  0E03               	movlw	3
 31237  004250  6E11               	movwf	i2___wmul@multiplicand,c
 31238  004252  0E00               	movlw	0
 31239  004254  6E04               	movwf	i2___awmod@divisor+1,c
 31240  004256  0E0A               	movlw	10
 31241  004258  6E03               	movwf	i2___awmod@divisor,c
 31242  00425A  5031               	movf	i2scale@scl,w,c
 31243  00425C  6E01               	movwf	i2___awmod@dividend,c
 31244  00425E  6A02               	clrf	i2___awmod@dividend+1,c
 31245  004260  BE01               	btfsc	i2___awmod@dividend,7,c
 31246  004262  0602               	decf	i2___awmod@dividend+1,f,c
 31247  004264  EC2A  F041         	call	i2___awmod	;wreg free
 31248  004268  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 31249  00426C  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 31250  004270  EC95  F047         	call	i2___wmul	;wreg free
 31251  004274  0E5D               	movlw	low __powers_
 31252  004276  240F               	addwf	?i2___wmul,w,c
 31253  004278  6EF6               	movwf	tblptrl,c
 31254  00427A  0EFE               	movlw	high __powers_
 31255  00427C  2010               	addwfc	?i2___wmul+1,w,c
 31256  00427E  6EF7               	movwf	tblptrh,c
 31257  004280                     	if	0	;There are less than 3 active tblptr bytes
 31258  004280                     	endif
 31259  004280  0009               	tblrd		*+
 31260  004282  CFF5 F01F          	movff	tablat,i2___ftmul@f2
 31261  004286  0009               	tblrd		*+
 31262  004288  CFF5 F020          	movff	tablat,i2___ftmul@f2+1
 31263  00428C  000A               	tblrd		*-
 31264  00428E  CFF5 F021          	movff	tablat,i2___ftmul@f2+2
 31265  004292  EC54  F036         	call	i2___ftmul	;wreg free
 31266  004296  D053               	goto	L40
 31267  004298  D06C               	goto	i2l1407
 31268  00429A  D059               	goto	i2l13887
 31269  00429C                     i2l13881:
 31270                           
 31271                           ;doprnt.c: 438: else if(scl > 10)
 31272  00429C  5031               	movf	i2scale@scl,w,c
 31273  00429E  0A80               	xorlw	128
 31274  0042A0  0F75               	addlw	-139
 31275  0042A2  A0D8               	btfss	status,0,c
 31276  0042A4  D054               	goto	i2l13887
 31277                           
 31278                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 31279  0042A6  0E00               	movlw	0
 31280  0042A8  6E0A               	movwf	i2___awdiv@divisor+1,c
 31281  0042AA  0E0A               	movlw	10
 31282  0042AC  6E09               	movwf	i2___awdiv@divisor,c
 31283  0042AE  5031               	movf	i2scale@scl,w,c
 31284  0042B0  6E07               	movwf	i2___awdiv@dividend,c
 31285  0042B2  6A08               	clrf	i2___awdiv@dividend+1,c
 31286  0042B4  BE07               	btfsc	i2___awdiv@dividend,7,c
 31287  0042B6  0608               	decf	i2___awdiv@dividend+1,f,c
 31288  0042B8  ECC9  F03F         	call	i2___awdiv	;wreg free
 31289  0042BC  0E09               	movlw	9
 31290  0042BE  2407               	addwf	?i2___awdiv,w,c
 31291  0042C0  6E0F               	movwf	i2___wmul@multiplier,c
 31292  0042C2  0E00               	movlw	0
 31293  0042C4  2008               	addwfc	?i2___awdiv+1,w,c
 31294  0042C6  6E10               	movwf	i2___wmul@multiplier+1,c
 31295  0042C8  0E00               	movlw	0
 31296  0042CA  6E12               	movwf	i2___wmul@multiplicand+1,c
 31297  0042CC  0E03               	movlw	3
 31298  0042CE  6E11               	movwf	i2___wmul@multiplicand,c
 31299  0042D0  EC95  F047         	call	i2___wmul	;wreg free
 31300  0042D4  0E5D               	movlw	low __powers_
 31301  0042D6  240F               	addwf	?i2___wmul,w,c
 31302  0042D8  6EF6               	movwf	tblptrl,c
 31303  0042DA  0EFE               	movlw	high __powers_
 31304  0042DC  2010               	addwfc	?i2___wmul+1,w,c
 31305  0042DE  6EF7               	movwf	tblptrh,c
 31306  0042E0                     	if	0	;There are less than 3 active tblptr bytes
 31307  0042E0                     	endif
 31308  0042E0  0009               	tblrd		*+
 31309  0042E2  CFF5 F01C          	movff	tablat,i2___ftmul@f1
 31310  0042E6  0009               	tblrd		*+
 31311  0042E8  CFF5 F01D          	movff	tablat,i2___ftmul@f1+1
 31312  0042EC  000A               	tblrd		*-
 31313  0042EE  CFF5 F01E          	movff	tablat,i2___ftmul@f1+2
 31314  0042F2  0E00               	movlw	0
 31315  0042F4  6E12               	movwf	i2___wmul@multiplicand+1,c
 31316  0042F6  0E03               	movlw	3
 31317  0042F8  6E11               	movwf	i2___wmul@multiplicand,c
 31318  0042FA  0E00               	movlw	0
 31319  0042FC  6E04               	movwf	i2___awmod@divisor+1,c
 31320  0042FE  0E0A               	movlw	10
 31321  004300  6E03               	movwf	i2___awmod@divisor,c
 31322  004302  5031               	movf	i2scale@scl,w,c
 31323  004304  6E01               	movwf	i2___awmod@dividend,c
 31324  004306  6A02               	clrf	i2___awmod@dividend+1,c
 31325  004308  BE01               	btfsc	i2___awmod@dividend,7,c
 31326  00430A  0602               	decf	i2___awmod@dividend+1,f,c
 31327  00430C  EC2A  F041         	call	i2___awmod	;wreg free
 31328  004310  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 31329  004314  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 31330  004318  EC95  F047         	call	i2___wmul	;wreg free
 31331  00431C  0E5D               	movlw	low __powers_
 31332  00431E  240F               	addwf	?i2___wmul,w,c
 31333  004320  6EF6               	movwf	tblptrl,c
 31334  004322  0EFE               	movlw	high __powers_
 31335  004324  2010               	addwfc	?i2___wmul+1,w,c
 31336  004326  6EF7               	movwf	tblptrh,c
 31337  004328                     	if	0	;There are less than 3 active tblptr bytes
 31338  004328                     	endif
 31339  004328  0009               	tblrd		*+
 31340  00432A  CFF5 F01F          	movff	tablat,i2___ftmul@f2
 31341  00432E  0009               	tblrd		*+
 31342  004330  CFF5 F020          	movff	tablat,i2___ftmul@f2+1
 31343  004334  000A               	tblrd		*-
 31344  004336  CFF5 F021          	movff	tablat,i2___ftmul@f2+2
 31345  00433A  EC54  F036         	call	i2___ftmul	;wreg free
 31346  00433E                     L40:
 31347  00433E  C01C  F02B         	movff	?i2___ftmul,?i2_scale
 31348  004342  C01D  F02C         	movff	?i2___ftmul+1,?i2_scale+1
 31349  004346  C01E  F02D         	movff	?i2___ftmul+2,?i2_scale+2
 31350  00434A  D013               	goto	i2l1407
 31351  00434C  D000               	goto	i2l13887
 31352  00434E                     i2l13887:
 31353                           
 31354                           ;doprnt.c: 440: return _powers_[scl];
 31355  00434E  5031               	movf	i2scale@scl,w,c
 31356  004350  0D03               	mullw	3
 31357  004352  0E5D               	movlw	low __powers_
 31358  004354  24F3               	addwf	prodl,w,c
 31359  004356  6EF6               	movwf	tblptrl,c
 31360  004358  0EFE               	movlw	high __powers_
 31361  00435A                     L39:
 31362  00435A  20F4               	addwfc	prodh,w,c
 31363  00435C  6EF7               	movwf	tblptrh,c
 31364  00435E                     	if	0	;There are less than 3 active tblptr bytes
 31365  00435E                     	endif
 31366  00435E  0009               	tblrd		*+
 31367  004360  CFF5 F02B          	movff	tablat,?i2_scale
 31368  004364  0009               	tblrd		*+
 31369  004366  CFF5 F02C          	movff	tablat,?i2_scale+1
 31370  00436A  000A               	tblrd		*-
 31371  00436C  CFF5 F02D          	movff	tablat,?i2_scale+2
 31372  004370  D000               	goto	i2l1407
 31373  004372                     i2l1407:
 31374  004372  0012               	return		;funcret
 31375  004374                     __end_ofi2_scale:
 31376                           	opt stack 0
 31377                           pclatu	equ	0xFFB
 31378                           pclath	equ	0xFFA
 31379                           tblptru	equ	0xFF8
 31380                           tblptrh	equ	0xFF7
 31381                           tblptrl	equ	0xFF6
 31382                           tablat	equ	0xFF5
 31383                           prodh	equ	0xFF4
 31384                           prodl	equ	0xFF3
 31385                           intcon	equ	0xFF2
 31386                           intcon2	equ	0xFF1
 31387                           intcon3	equ	0xFF0
 31388                           postinc0	equ	0xFEE
 31389                           fsr0h	equ	0xFEA
 31390                           fsr0l	equ	0xFE9
 31391                           wreg	equ	0xFE8
 31392                           postdec1	equ	0xFE5
 31393                           fsr1h	equ	0xFE2
 31394                           fsr1l	equ	0xFE1
 31395                           indf2	equ	0xFDF
 31396                           postinc2	equ	0xFDE
 31397                           postdec2	equ	0xFDD
 31398                           fsr2h	equ	0xFDA
 31399                           fsr2l	equ	0xFD9
 31400                           status	equ	0xFD8
 31401                           
 31402 ;; *************** function i2_putch *****************
 31403 ;; Defined at:
 31404 ;;		line 78 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Main.c"
 31405 ;; Parameters:    Size  Location     Type
 31406 ;;  c               1    wreg     unsigned char 
 31407 ;; Auto vars:     Size  Location     Type
 31408 ;;  c               1    0[COMRAM] unsigned char 
 31409 ;; Return value:  Size  Location     Type
 31410 ;;		None               void
 31411 ;; Registers used:
 31412 ;;		wreg
 31413 ;; Tracked objects:
 31414 ;;		On entry : 0/0
 31415 ;;		On exit  : 0/0
 31416 ;;		Unchanged: 0/0
 31417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31419 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31421 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31422 ;;Total ram usage:        1 bytes
 31423 ;; Hardware stack levels used:    1
 31424 ;; This function calls:
 31425 ;;		Nothing
 31426 ;; This function is called by:
 31427 ;;		i2_printf
 31428 ;; This function uses a non-reentrant model
 31429 ;;
 31430                           
 31431                           	psect	text128
 31432  009292                     __ptext128:
 31433                           	opt stack 0
 31434  009292                     i2_putch:
 31435                           	opt stack 17
 31436                           
 31437                           ;incstack = 0
 31438                           ;i2putch@c stored from wreg
 31439  009292  6E01               	movwf	i2putch@c,c
 31440                           
 31441                           ;Main.c: 80: while (!TRMT);
 31442  009294  D000               	goto	i2l520
 31443  009296                     i2l520:
 31444  009296  A2AC               	btfss	4012,1,c	;volatile
 31445  009298  D7FE               	goto	i2l520
 31446                           
 31447                           ;Main.c: 81: TXREG = c;
 31448  00929A  C001  FFAD         	movff	i2putch@c,4013	;volatile
 31449  00929E  0012               	return		;funcret
 31450  0092A0                     __end_ofi2_putch:
 31451                           	opt stack 0
 31452                           pclatu	equ	0xFFB
 31453                           pclath	equ	0xFFA
 31454                           tblptru	equ	0xFF8
 31455                           tblptrh	equ	0xFF7
 31456                           tblptrl	equ	0xFF6
 31457                           tablat	equ	0xFF5
 31458                           prodh	equ	0xFF4
 31459                           prodl	equ	0xFF3
 31460                           intcon	equ	0xFF2
 31461                           intcon2	equ	0xFF1
 31462                           intcon3	equ	0xFF0
 31463                           postinc0	equ	0xFEE
 31464                           fsr0h	equ	0xFEA
 31465                           fsr0l	equ	0xFE9
 31466                           wreg	equ	0xFE8
 31467                           postdec1	equ	0xFE5
 31468                           fsr1h	equ	0xFE2
 31469                           fsr1l	equ	0xFE1
 31470                           indf2	equ	0xFDF
 31471                           postinc2	equ	0xFDE
 31472                           postdec2	equ	0xFDD
 31473                           fsr2h	equ	0xFDA
 31474                           fsr2l	equ	0xFD9
 31475                           status	equ	0xFD8
 31476                           
 31477 ;; *************** function i2_isdigit *****************
 31478 ;; Defined at:
 31479 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
 31480 ;; Parameters:    Size  Location     Type
 31481 ;;  c               1    wreg     unsigned char 
 31482 ;; Auto vars:     Size  Location     Type
 31483 ;;  c               1    2[COMRAM] unsigned char 
 31484 ;; Return value:  Size  Location     Type
 31485 ;;		None               void
 31486 ;; Registers used:
 31487 ;;		wreg, status,2, status,0
 31488 ;; Tracked objects:
 31489 ;;		On entry : 0/0
 31490 ;;		On exit  : 0/0
 31491 ;;		Unchanged: 0/0
 31492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31494 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31495 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31496 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31497 ;;Total ram usage:        3 bytes
 31498 ;; Hardware stack levels used:    1
 31499 ;; This function calls:
 31500 ;;		Nothing
 31501 ;; This function is called by:
 31502 ;;		i2_printf
 31503 ;; This function uses a non-reentrant model
 31504 ;;
 31505                           
 31506                           	psect	text129
 31507  008F98                     __ptext129:
 31508                           	opt stack 0
 31509  008F98                     i2_isdigit:
 31510                           	opt stack 17
 31511                           
 31512                           ;incstack = 0
 31513                           ;i2isdigit@c stored from wreg
 31514  008F98  6E03               	movwf	i2isdigit@c,c
 31515  008F9A  0E00               	movlw	0
 31516  008F9C  6E02               	movwf	i2_isdigit$2749,c
 31517  008F9E  0E3A               	movlw	58
 31518  008FA0  6003               	cpfslt	i2isdigit@c,c
 31519  008FA2  D006               	goto	i2l14137
 31520  008FA4  0E2F               	movlw	47
 31521  008FA6  6403               	cpfsgt	i2isdigit@c,c
 31522  008FA8  D003               	goto	i2l14137
 31523  008FAA  0E01               	movlw	1
 31524  008FAC  6E02               	movwf	i2_isdigit$2749,c
 31525  008FAE  D000               	goto	i2l14137
 31526  008FB0                     i2l14137:
 31527  008FB0  C002  F001         	movff	i2_isdigit$2749,??i2_isdigit
 31528  008FB4  3001               	rrcf	??i2_isdigit,w,c
 31529  008FB6  D000               	goto	i2l2162
 31530  008FB8                     i2l2162:
 31531  008FB8  0012               	return		;funcret
 31532  008FBA                     __end_ofi2_isdigit:
 31533                           	opt stack 0
 31534                           pclatu	equ	0xFFB
 31535                           pclath	equ	0xFFA
 31536                           tblptru	equ	0xFF8
 31537                           tblptrh	equ	0xFF7
 31538                           tblptrl	equ	0xFF6
 31539                           tablat	equ	0xFF5
 31540                           prodh	equ	0xFF4
 31541                           prodl	equ	0xFF3
 31542                           intcon	equ	0xFF2
 31543                           intcon2	equ	0xFF1
 31544                           intcon3	equ	0xFF0
 31545                           postinc0	equ	0xFEE
 31546                           fsr0h	equ	0xFEA
 31547                           fsr0l	equ	0xFE9
 31548                           wreg	equ	0xFE8
 31549                           postdec1	equ	0xFE5
 31550                           fsr1h	equ	0xFE2
 31551                           fsr1l	equ	0xFE1
 31552                           indf2	equ	0xFDF
 31553                           postinc2	equ	0xFDE
 31554                           postdec2	equ	0xFDD
 31555                           fsr2h	equ	0xFDA
 31556                           fsr2l	equ	0xFD9
 31557                           status	equ	0xFD8
 31558                           
 31559 ;; *************** function i2_fround *****************
 31560 ;; Defined at:
 31561 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 31562 ;; Parameters:    Size  Location     Type
 31563 ;;  prec            1    wreg     unsigned char 
 31564 ;; Auto vars:     Size  Location     Type
 31565 ;;  prec            1   51[COMRAM] unsigned char 
 31566 ;; Return value:  Size  Location     Type
 31567 ;;                  3   42[COMRAM] unsigned char 
 31568 ;; Registers used:
 31569 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31570 ;; Tracked objects:
 31571 ;;		On entry : 0/0
 31572 ;;		On exit  : 0/0
 31573 ;;		Unchanged: 0/0
 31574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31575 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31576 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31578 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31579 ;;Total ram usage:       10 bytes
 31580 ;; Hardware stack levels used:    1
 31581 ;; Hardware stack levels required when called:    2
 31582 ;; This function calls:
 31583 ;;		i2___awdiv
 31584 ;;		i2___awmod
 31585 ;;		i2___ftmul
 31586 ;;		i2___wmul
 31587 ;; This function is called by:
 31588 ;;		i2_printf
 31589 ;; This function uses a non-reentrant model
 31590 ;;
 31591                           
 31592                           	psect	text130
 31593  004D32                     __ptext130:
 31594                           	opt stack 0
 31595  004D32                     i2_fround:
 31596                           	opt stack 15
 31597                           
 31598                           ;incstack = 0
 31599                           ;i2fround@prec stored from wreg
 31600  004D32  6E34               	movwf	i2fround@prec,c
 31601                           
 31602                           ;doprnt.c: 413: if(prec>=110)
 31603  004D34  0E6D               	movlw	109
 31604  004D36  6434               	cpfsgt	i2fround@prec,c
 31605  004D38  D09B               	goto	i2l13841
 31606                           
 31607                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 31608  004D3A  0E00               	movlw	0
 31609  004D3C  6E12               	movwf	i2___wmul@multiplicand+1,c
 31610  004D3E  0E03               	movlw	3
 31611  004D40  6E11               	movwf	i2___wmul@multiplicand,c
 31612  004D42  0E00               	movlw	0
 31613  004D44  6E0A               	movwf	i2___awdiv@divisor+1,c
 31614  004D46  0E0A               	movlw	10
 31615  004D48  6E09               	movwf	i2___awdiv@divisor,c
 31616  004D4A  0E00               	movlw	0
 31617  004D4C  6E04               	movwf	i2___awmod@divisor+1,c
 31618  004D4E  0E64               	movlw	100
 31619  004D50  6E03               	movwf	i2___awmod@divisor,c
 31620  004D52  C034  F001         	movff	i2fround@prec,i2___awmod@dividend
 31621  004D56  6A02               	clrf	i2___awmod@dividend+1,c
 31622  004D58  EC2A  F041         	call	i2___awmod	;wreg free
 31623  004D5C  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 31624  004D60  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 31625  004D64  ECC9  F03F         	call	i2___awdiv	;wreg free
 31626  004D68  0E09               	movlw	9
 31627  004D6A  2407               	addwf	?i2___awdiv,w,c
 31628  004D6C  6E0F               	movwf	i2___wmul@multiplier,c
 31629  004D6E  0E00               	movlw	0
 31630  004D70  2008               	addwfc	?i2___awdiv+1,w,c
 31631  004D72  6E10               	movwf	i2___wmul@multiplier+1,c
 31632  004D74  EC95  F047         	call	i2___wmul	;wreg free
 31633  004D78  0E36               	movlw	low __npowers_
 31634  004D7A  240F               	addwf	?i2___wmul,w,c
 31635  004D7C  6EF6               	movwf	tblptrl,c
 31636  004D7E  0EFE               	movlw	high __npowers_
 31637  004D80  2010               	addwfc	?i2___wmul+1,w,c
 31638  004D82  6EF7               	movwf	tblptrh,c
 31639  004D84                     	if	0	;There are less than 3 active tblptr bytes
 31640  004D84                     	endif
 31641  004D84  0009               	tblrd		*+
 31642  004D86  CFF5 F01F          	movff	tablat,i2___ftmul@f2
 31643  004D8A  0009               	tblrd		*+
 31644  004D8C  CFF5 F020          	movff	tablat,i2___ftmul@f2+1
 31645  004D90  000A               	tblrd		*-
 31646  004D92  CFF5 F021          	movff	tablat,i2___ftmul@f2+2
 31647  004D96  0E00               	movlw	0
 31648  004D98  6E0A               	movwf	i2___awdiv@divisor+1,c
 31649  004D9A  0E64               	movlw	100
 31650  004D9C  6E09               	movwf	i2___awdiv@divisor,c
 31651  004D9E  C034  F007         	movff	i2fround@prec,i2___awdiv@dividend
 31652  004DA2  6A08               	clrf	i2___awdiv@dividend+1,c
 31653  004DA4  ECC9  F03F         	call	i2___awdiv	;wreg free
 31654  004DA8  0E12               	movlw	18
 31655  004DAA  2407               	addwf	?i2___awdiv,w,c
 31656  004DAC  6E0F               	movwf	i2___wmul@multiplier,c
 31657  004DAE  0E00               	movlw	0
 31658  004DB0  2008               	addwfc	?i2___awdiv+1,w,c
 31659  004DB2  6E10               	movwf	i2___wmul@multiplier+1,c
 31660  004DB4  0E00               	movlw	0
 31661  004DB6  6E12               	movwf	i2___wmul@multiplicand+1,c
 31662  004DB8  0E03               	movlw	3
 31663  004DBA  6E11               	movwf	i2___wmul@multiplicand,c
 31664  004DBC  EC95  F047         	call	i2___wmul	;wreg free
 31665  004DC0  0E36               	movlw	low __npowers_
 31666  004DC2  240F               	addwf	?i2___wmul,w,c
 31667  004DC4  6EF6               	movwf	tblptrl,c
 31668  004DC6  0EFE               	movlw	high __npowers_
 31669  004DC8  2010               	addwfc	?i2___wmul+1,w,c
 31670  004DCA  6EF7               	movwf	tblptrh,c
 31671  004DCC                     	if	0	;There are less than 3 active tblptr bytes
 31672  004DCC                     	endif
 31673  004DCC  0009               	tblrd		*+
 31674  004DCE  CFF5 F01C          	movff	tablat,i2___ftmul@f1
 31675  004DD2  0009               	tblrd		*+
 31676  004DD4  CFF5 F01D          	movff	tablat,i2___ftmul@f1+1
 31677  004DD8  000A               	tblrd		*-
 31678  004DDA  CFF5 F01E          	movff	tablat,i2___ftmul@f1+2
 31679  004DDE  EC54  F036         	call	i2___ftmul	;wreg free
 31680  004DE2  C01C  F031         	movff	?i2___ftmul,i2_fround$3291
 31681  004DE6  C01D  F032         	movff	?i2___ftmul+1,i2_fround$3291+1
 31682  004DEA  C01E  F033         	movff	?i2___ftmul+2,i2_fround$3291+2
 31683                           
 31684                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 31685  004DEE  0E00               	movlw	0
 31686  004DF0  6E12               	movwf	i2___wmul@multiplicand+1,c
 31687  004DF2  0E03               	movlw	3
 31688  004DF4  6E11               	movwf	i2___wmul@multiplicand,c
 31689  004DF6  0E00               	movlw	0
 31690  004DF8  6E04               	movwf	i2___awmod@divisor+1,c
 31691  004DFA  0E0A               	movlw	10
 31692  004DFC  6E03               	movwf	i2___awmod@divisor,c
 31693  004DFE  C034  F001         	movff	i2fround@prec,i2___awmod@dividend
 31694  004E02  6A02               	clrf	i2___awmod@dividend+1,c
 31695  004E04  EC2A  F041         	call	i2___awmod	;wreg free
 31696  004E08  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 31697  004E0C  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 31698  004E10  EC95  F047         	call	i2___wmul	;wreg free
 31699  004E14  0E36               	movlw	low __npowers_
 31700  004E16  240F               	addwf	?i2___wmul,w,c
 31701  004E18  6EF6               	movwf	tblptrl,c
 31702  004E1A  0EFE               	movlw	high __npowers_
 31703  004E1C  2010               	addwfc	?i2___wmul+1,w,c
 31704  004E1E  6EF7               	movwf	tblptrh,c
 31705  004E20                     	if	0	;There are less than 3 active tblptr bytes
 31706  004E20                     	endif
 31707  004E20  0009               	tblrd		*+
 31708  004E22  CFF5 F01F          	movff	tablat,i2___ftmul@f2
 31709  004E26  0009               	tblrd		*+
 31710  004E28  CFF5 F020          	movff	tablat,i2___ftmul@f2+1
 31711  004E2C  000A               	tblrd		*-
 31712  004E2E  CFF5 F021          	movff	tablat,i2___ftmul@f2+2
 31713  004E32  C031  F01C         	movff	i2_fround$3291,i2___ftmul@f1
 31714  004E36  C032  F01D         	movff	i2_fround$3291+1,i2___ftmul@f1+1
 31715  004E3A  C033  F01E         	movff	i2_fround$3291+2,i2___ftmul@f1+2
 31716  004E3E  EC54  F036         	call	i2___ftmul	;wreg free
 31717  004E42  C01C  F02E         	movff	?i2___ftmul,i2_fround$3292
 31718  004E46  C01D  F02F         	movff	?i2___ftmul+1,i2_fround$3292+1
 31719  004E4A  C01E  F030         	movff	?i2___ftmul+2,i2_fround$3292+2
 31720                           
 31721                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 31722  004E4E  C02E  F01C         	movff	i2_fround$3292,i2___ftmul@f1
 31723  004E52  C02F  F01D         	movff	i2_fround$3292+1,i2___ftmul@f1+1
 31724  004E56  C030  F01E         	movff	i2_fround$3292+2,i2___ftmul@f1+2
 31725  004E5A  0E00               	movlw	0
 31726  004E5C  6E1F               	movwf	i2___ftmul@f2,c
 31727  004E5E  0E00               	movlw	0
 31728  004E60  6E20               	movwf	i2___ftmul@f2+1,c
 31729  004E62  0E3F               	movlw	63
 31730  004E64  6E21               	movwf	i2___ftmul@f2+2,c
 31731  004E66  EC54  F036         	call	i2___ftmul	;wreg free
 31732  004E6A  D07D               	goto	L42
 31733  004E6C  D083               	goto	i2l1400
 31734  004E6E  D062               	goto	i2l13849
 31735  004E70                     i2l13841:
 31736                           
 31737                           ;doprnt.c: 415: else if(prec > 10)
 31738  004E70  0E0A               	movlw	10
 31739  004E72  6434               	cpfsgt	i2fround@prec,c
 31740  004E74  D05F               	goto	i2l13849
 31741                           
 31742                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 31743  004E76  0E00               	movlw	0
 31744  004E78  6E12               	movwf	i2___wmul@multiplicand+1,c
 31745  004E7A  0E03               	movlw	3
 31746  004E7C  6E11               	movwf	i2___wmul@multiplicand,c
 31747  004E7E  0E00               	movlw	0
 31748  004E80  6E04               	movwf	i2___awmod@divisor+1,c
 31749  004E82  0E0A               	movlw	10
 31750  004E84  6E03               	movwf	i2___awmod@divisor,c
 31751  004E86  C034  F001         	movff	i2fround@prec,i2___awmod@dividend
 31752  004E8A  6A02               	clrf	i2___awmod@dividend+1,c
 31753  004E8C  EC2A  F041         	call	i2___awmod	;wreg free
 31754  004E90  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 31755  004E94  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 31756  004E98  EC95  F047         	call	i2___wmul	;wreg free
 31757  004E9C  0E36               	movlw	low __npowers_
 31758  004E9E  240F               	addwf	?i2___wmul,w,c
 31759  004EA0  6EF6               	movwf	tblptrl,c
 31760  004EA2  0EFE               	movlw	high __npowers_
 31761  004EA4  2010               	addwfc	?i2___wmul+1,w,c
 31762  004EA6  6EF7               	movwf	tblptrh,c
 31763  004EA8                     	if	0	;There are less than 3 active tblptr bytes
 31764  004EA8                     	endif
 31765  004EA8  0009               	tblrd		*+
 31766  004EAA  CFF5 F01F          	movff	tablat,i2___ftmul@f2
 31767  004EAE  0009               	tblrd		*+
 31768  004EB0  CFF5 F020          	movff	tablat,i2___ftmul@f2+1
 31769  004EB4  000A               	tblrd		*-
 31770  004EB6  CFF5 F021          	movff	tablat,i2___ftmul@f2+2
 31771  004EBA  0E00               	movlw	0
 31772  004EBC  6E0A               	movwf	i2___awdiv@divisor+1,c
 31773  004EBE  0E0A               	movlw	10
 31774  004EC0  6E09               	movwf	i2___awdiv@divisor,c
 31775  004EC2  C034  F007         	movff	i2fround@prec,i2___awdiv@dividend
 31776  004EC6  6A08               	clrf	i2___awdiv@dividend+1,c
 31777  004EC8  ECC9  F03F         	call	i2___awdiv	;wreg free
 31778  004ECC  0E09               	movlw	9
 31779  004ECE  2407               	addwf	?i2___awdiv,w,c
 31780  004ED0  6E0F               	movwf	i2___wmul@multiplier,c
 31781  004ED2  0E00               	movlw	0
 31782  004ED4  2008               	addwfc	?i2___awdiv+1,w,c
 31783  004ED6  6E10               	movwf	i2___wmul@multiplier+1,c
 31784  004ED8  0E00               	movlw	0
 31785  004EDA  6E12               	movwf	i2___wmul@multiplicand+1,c
 31786  004EDC  0E03               	movlw	3
 31787  004EDE  6E11               	movwf	i2___wmul@multiplicand,c
 31788  004EE0  EC95  F047         	call	i2___wmul	;wreg free
 31789  004EE4  0E36               	movlw	low __npowers_
 31790  004EE6  240F               	addwf	?i2___wmul,w,c
 31791  004EE8  6EF6               	movwf	tblptrl,c
 31792  004EEA  0EFE               	movlw	high __npowers_
 31793  004EEC  2010               	addwfc	?i2___wmul+1,w,c
 31794  004EEE  6EF7               	movwf	tblptrh,c
 31795  004EF0                     	if	0	;There are less than 3 active tblptr bytes
 31796  004EF0                     	endif
 31797  004EF0  0009               	tblrd		*+
 31798  004EF2  CFF5 F01C          	movff	tablat,i2___ftmul@f1
 31799  004EF6  0009               	tblrd		*+
 31800  004EF8  CFF5 F01D          	movff	tablat,i2___ftmul@f1+1
 31801  004EFC  000A               	tblrd		*-
 31802  004EFE  CFF5 F01E          	movff	tablat,i2___ftmul@f1+2
 31803  004F02  EC54  F036         	call	i2___ftmul	;wreg free
 31804  004F06  C01C  F031         	movff	?i2___ftmul,i2_fround$3291
 31805  004F0A  C01D  F032         	movff	?i2___ftmul+1,i2_fround$3291+1
 31806  004F0E  C01E  F033         	movff	?i2___ftmul+2,i2_fround$3291+2
 31807                           
 31808                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 31809  004F12  C031  F01C         	movff	i2_fround$3291,i2___ftmul@f1
 31810  004F16  C032  F01D         	movff	i2_fround$3291+1,i2___ftmul@f1+1
 31811  004F1A  C033  F01E         	movff	i2_fround$3291+2,i2___ftmul@f1+2
 31812  004F1E  0E00               	movlw	0
 31813  004F20  6E1F               	movwf	i2___ftmul@f2,c
 31814  004F22  0E00               	movlw	0
 31815  004F24  6E20               	movwf	i2___ftmul@f2+1,c
 31816  004F26  0E3F               	movlw	63
 31817  004F28  6E21               	movwf	i2___ftmul@f2+2,c
 31818  004F2A  EC54  F036         	call	i2___ftmul	;wreg free
 31819  004F2E  D01B               	goto	L42
 31820  004F30  D021               	goto	i2l1400
 31821  004F32  D000               	goto	i2l13849
 31822  004F34                     i2l13849:
 31823                           
 31824                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 31825  004F34  5034               	movf	i2fround@prec,w,c
 31826  004F36  0D03               	mullw	3
 31827  004F38  0E36               	movlw	low __npowers_
 31828  004F3A  24F3               	addwf	prodl,w,c
 31829  004F3C  6EF6               	movwf	tblptrl,c
 31830  004F3E  0EFE               	movlw	high __npowers_
 31831  004F40  20F4               	addwfc	prodh,w,c
 31832  004F42  6EF7               	movwf	tblptrh,c
 31833  004F44                     	if	0	;There are less than 3 active tblptr bytes
 31834  004F44                     	endif
 31835  004F44  0009               	tblrd		*+
 31836  004F46  CFF5 F01C          	movff	tablat,i2___ftmul@f1
 31837  004F4A  0009               	tblrd		*+
 31838  004F4C  CFF5 F01D          	movff	tablat,i2___ftmul@f1+1
 31839  004F50  000A               	tblrd		*-
 31840  004F52  CFF5 F01E          	movff	tablat,i2___ftmul@f1+2
 31841  004F56  0E00               	movlw	0
 31842  004F58  6E1F               	movwf	i2___ftmul@f2,c
 31843  004F5A  0E00               	movlw	0
 31844  004F5C  6E20               	movwf	i2___ftmul@f2+1,c
 31845  004F5E  0E3F               	movlw	63
 31846  004F60  6E21               	movwf	i2___ftmul@f2+2,c
 31847  004F62  EC54  F036         	call	i2___ftmul	;wreg free
 31848  004F66                     L42:
 31849  004F66  C01C  F02B         	movff	?i2___ftmul,?i2_fround
 31850  004F6A  C01D  F02C         	movff	?i2___ftmul+1,?i2_fround+1
 31851  004F6E  C01E  F02D         	movff	?i2___ftmul+2,?i2_fround+2
 31852  004F72  D000               	goto	i2l1400
 31853  004F74                     i2l1400:
 31854  004F74  0012               	return		;funcret
 31855  004F76                     __end_ofi2_fround:
 31856                           	opt stack 0
 31857                           pclatu	equ	0xFFB
 31858                           pclath	equ	0xFFA
 31859                           tblptru	equ	0xFF8
 31860                           tblptrh	equ	0xFF7
 31861                           tblptrl	equ	0xFF6
 31862                           tablat	equ	0xFF5
 31863                           prodh	equ	0xFF4
 31864                           prodl	equ	0xFF3
 31865                           intcon	equ	0xFF2
 31866                           intcon2	equ	0xFF1
 31867                           intcon3	equ	0xFF0
 31868                           postinc0	equ	0xFEE
 31869                           fsr0h	equ	0xFEA
 31870                           fsr0l	equ	0xFE9
 31871                           wreg	equ	0xFE8
 31872                           postdec1	equ	0xFE5
 31873                           fsr1h	equ	0xFE2
 31874                           fsr1l	equ	0xFE1
 31875                           indf2	equ	0xFDF
 31876                           postinc2	equ	0xFDE
 31877                           postdec2	equ	0xFDD
 31878                           fsr2h	equ	0xFDA
 31879                           fsr2l	equ	0xFD9
 31880                           status	equ	0xFD8
 31881                           
 31882 ;; *************** function i2___wmul *****************
 31883 ;; Defined at:
 31884 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 31885 ;; Parameters:    Size  Location     Type
 31886 ;;  multiplier      2   14[COMRAM] unsigned int 
 31887 ;;  multiplicand    2   16[COMRAM] unsigned int 
 31888 ;; Auto vars:     Size  Location     Type
 31889 ;;  __wmul          2   18[COMRAM] unsigned int 
 31890 ;; Return value:  Size  Location     Type
 31891 ;;                  2   14[COMRAM] unsigned int 
 31892 ;; Registers used:
 31893 ;;		wreg, status,2, status,0, prodl, prodh
 31894 ;; Tracked objects:
 31895 ;;		On entry : 0/0
 31896 ;;		On exit  : 0/0
 31897 ;;		Unchanged: 0/0
 31898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31899 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31900 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31902 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31903 ;;Total ram usage:        6 bytes
 31904 ;; Hardware stack levels used:    1
 31905 ;; This function calls:
 31906 ;;		Nothing
 31907 ;; This function is called by:
 31908 ;;		i2_fround
 31909 ;;		i2_scale
 31910 ;;		i2_printf
 31911 ;; This function uses a non-reentrant model
 31912 ;;
 31913                           
 31914                           	psect	text131
 31915  008F2A                     __ptext131:
 31916                           	opt stack 0
 31917  008F2A                     i2___wmul:
 31918                           	opt stack 16
 31919                           
 31920                           ;incstack = 0
 31921  008F2A  500F               	movf	i2___wmul@multiplier,w,c
 31922  008F2C  0211               	mulwf	i2___wmul@multiplicand,c
 31923  008F2E  CFF3 F013          	movff	prodl,i2___wmul@product
 31924  008F32  CFF4 F014          	movff	prodh,i2___wmul@product+1
 31925  008F36  500F               	movf	i2___wmul@multiplier,w,c
 31926  008F38  0212               	mulwf	i2___wmul@multiplicand+1,c
 31927  008F3A  50F3               	movf	prodl,w,c
 31928  008F3C  2614               	addwf	i2___wmul@product+1,f,c
 31929  008F3E  5010               	movf	i2___wmul@multiplier+1,w,c
 31930  008F40  0211               	mulwf	i2___wmul@multiplicand,c
 31931  008F42  50F3               	movf	prodl,w,c
 31932  008F44  2614               	addwf	i2___wmul@product+1,f,c
 31933  008F46  C013  F00F         	movff	i2___wmul@product,?i2___wmul
 31934  008F4A  C014  F010         	movff	i2___wmul@product+1,?i2___wmul+1
 31935  008F4E  D000               	goto	i2l1697
 31936  008F50                     i2l1697:
 31937  008F50  0012               	return		;funcret
 31938  008F52                     __end_ofi2___wmul:
 31939                           	opt stack 0
 31940                           pclatu	equ	0xFFB
 31941                           pclath	equ	0xFFA
 31942                           tblptru	equ	0xFF8
 31943                           tblptrh	equ	0xFF7
 31944                           tblptrl	equ	0xFF6
 31945                           tablat	equ	0xFF5
 31946                           prodh	equ	0xFF4
 31947                           prodl	equ	0xFF3
 31948                           intcon	equ	0xFF2
 31949                           intcon2	equ	0xFF1
 31950                           intcon3	equ	0xFF0
 31951                           postinc0	equ	0xFEE
 31952                           fsr0h	equ	0xFEA
 31953                           fsr0l	equ	0xFE9
 31954                           wreg	equ	0xFE8
 31955                           postdec1	equ	0xFE5
 31956                           fsr1h	equ	0xFE2
 31957                           fsr1l	equ	0xFE1
 31958                           indf2	equ	0xFDF
 31959                           postinc2	equ	0xFDE
 31960                           postdec2	equ	0xFDD
 31961                           fsr2h	equ	0xFDA
 31962                           fsr2l	equ	0xFD9
 31963                           status	equ	0xFD8
 31964                           
 31965 ;; *************** function i2___ftmul *****************
 31966 ;; Defined at:
 31967 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
 31968 ;; Parameters:    Size  Location     Type
 31969 ;;  f1              3   27[COMRAM] float 
 31970 ;;  f2              3   30[COMRAM] float 
 31971 ;; Auto vars:     Size  Location     Type
 31972 ;;  __ftmul         3   37[COMRAM] unsigned um
 31973 ;;  __ftmul         1   41[COMRAM] unsigned char 
 31974 ;;  __ftmul         1   40[COMRAM] unsigned char 
 31975 ;;  __ftmul         1   36[COMRAM] unsigned char 
 31976 ;; Return value:  Size  Location     Type
 31977 ;;                  3   27[COMRAM] float 
 31978 ;; Registers used:
 31979 ;;		wreg, status,2, status,0, cstack
 31980 ;; Tracked objects:
 31981 ;;		On entry : 0/0
 31982 ;;		On exit  : 0/0
 31983 ;;		Unchanged: 0/0
 31984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31985 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31986 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31987 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31988 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31989 ;;Total ram usage:       15 bytes
 31990 ;; Hardware stack levels used:    1
 31991 ;; Hardware stack levels required when called:    1
 31992 ;; This function calls:
 31993 ;;		i2___ftpack
 31994 ;; This function is called by:
 31995 ;;		i2_fround
 31996 ;;		i2_scale
 31997 ;;		i2_printf
 31998 ;; This function uses a non-reentrant model
 31999 ;;
 32000                           
 32001                           	psect	text132
 32002  006CA8                     __ptext132:
 32003                           	opt stack 0
 32004  006CA8                     i2___ftmul:
 32005                           	opt stack 15
 32006                           
 32007                           ;incstack = 0
 32008  006CA8  C01E  F022         	movff	i2___ftmul@f1+2,??i2___ftmul
 32009  006CAC  6A23               	clrf	(??i2___ftmul+1)& (0+255),c
 32010  006CAE  6A24               	clrf	(??i2___ftmul+2)& (0+255),c
 32011  006CB0  341D               	rlcf	i2___ftmul@f1+1,w,c
 32012  006CB2  3622               	rlcf	??i2___ftmul& (0+255),f,c
 32013  006CB4  E301               	bnc	u1590_41
 32014  006CB6  8023               	bsf	(??i2___ftmul+1)& (0+255),0,c
 32015  006CB8                     u1590_41:
 32016  006CB8  5022               	movf	??i2___ftmul,w,c
 32017  006CBA  6E25               	movwf	i2___ftmul@exp,c
 32018  006CBC  5025               	movf	i2___ftmul@exp,w,c
 32019  006CBE  A4D8               	btfss	status,2,c
 32020  006CC0  D002               	goto	i2l13631
 32021  006CC2  D00E               	goto	i2l13633
 32022  006CC4  D06C               	goto	i2l2126
 32023  006CC6                     i2l13631:
 32024  006CC6  C021  F022         	movff	i2___ftmul@f2+2,??i2___ftmul
 32025  006CCA  6A23               	clrf	(??i2___ftmul+1)& (0+255),c
 32026  006CCC  6A24               	clrf	(??i2___ftmul+2)& (0+255),c
 32027  006CCE  3420               	rlcf	i2___ftmul@f2+1,w,c
 32028  006CD0  3622               	rlcf	??i2___ftmul& (0+255),f,c
 32029  006CD2  E301               	bnc	u1592_41
 32030  006CD4  8023               	bsf	(??i2___ftmul+1)& (0+255),0,c
 32031  006CD6                     u1592_41:
 32032  006CD6  5022               	movf	??i2___ftmul,w,c
 32033  006CD8  6E2A               	movwf	i2___ftmul@sign,c
 32034  006CDA  502A               	movf	i2___ftmul@sign,w,c
 32035  006CDC  A4D8               	btfss	status,2,c
 32036  006CDE  D007               	goto	i2l13637
 32037  006CE0                     i2l13633:
 32038  006CE0  0E00               	movlw	0
 32039  006CE2  6E1C               	movwf	?i2___ftmul,c
 32040  006CE4  0E00               	movlw	0
 32041  006CE6  6E1D               	movwf	?i2___ftmul+1,c
 32042  006CE8  0E00               	movlw	0
 32043  006CEA  6E1E               	movwf	?i2___ftmul+2,c
 32044  006CEC  D058               	goto	i2l2126
 32045  006CEE                     i2l13637:
 32046  006CEE  502A               	movf	i2___ftmul@sign,w,c
 32047  006CF0  0F7B               	addlw	123
 32048  006CF2  2625               	addwf	i2___ftmul@exp,f,c
 32049  006CF4  C01E  F02A         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 32050  006CF8  5021               	movf	i2___ftmul@f2+2,w,c
 32051  006CFA  1A2A               	xorwf	i2___ftmul@sign,f,c
 32052  006CFC  0E80               	movlw	128
 32053  006CFE  162A               	andwf	i2___ftmul@sign,f,c
 32054  006D00  8E1D               	bsf	i2___ftmul@f1+1,7,c
 32055  006D02  8E20               	bsf	i2___ftmul@f2+1,7,c
 32056  006D04  0EFF               	movlw	255
 32057  006D06  161F               	andwf	i2___ftmul@f2,f,c
 32058  006D08  0EFF               	movlw	255
 32059  006D0A  1620               	andwf	i2___ftmul@f2+1,f,c
 32060  006D0C  0E00               	movlw	0
 32061  006D0E  1621               	andwf	i2___ftmul@f2+2,f,c
 32062  006D10  0E00               	movlw	0
 32063  006D12  6E26               	movwf	i2___ftmul@f3_as_product,c
 32064  006D14  0E00               	movlw	0
 32065  006D16  6E27               	movwf	i2___ftmul@f3_as_product+1,c
 32066  006D18  0E00               	movlw	0
 32067  006D1A  6E28               	movwf	i2___ftmul@f3_as_product+2,c
 32068  006D1C  0E07               	movlw	7
 32069  006D1E  6E29               	movwf	i2___ftmul@cntr,c
 32070  006D20  D000               	goto	i2l13651
 32071  006D22                     i2l13651:
 32072  006D22  A01C               	btfss	i2___ftmul@f1,0,c
 32073  006D24  D007               	goto	i2l13655
 32074  006D26  501F               	movf	i2___ftmul@f2,w,c
 32075  006D28  2626               	addwf	i2___ftmul@f3_as_product,f,c
 32076  006D2A  5020               	movf	i2___ftmul@f2+1,w,c
 32077  006D2C  2227               	addwfc	i2___ftmul@f3_as_product+1,f,c
 32078  006D2E  5021               	movf	i2___ftmul@f2+2,w,c
 32079  006D30  2228               	addwfc	i2___ftmul@f3_as_product+2,f,c
 32080  006D32  D000               	goto	i2l13655
 32081  006D34                     i2l13655:
 32082  006D34  90D8               	bcf	status,0,c
 32083  006D36  321E               	rrcf	i2___ftmul@f1+2,f,c
 32084  006D38  321D               	rrcf	i2___ftmul@f1+1,f,c
 32085  006D3A  321C               	rrcf	i2___ftmul@f1,f,c
 32086  006D3C  90D8               	bcf	status,0,c
 32087  006D3E  361F               	rlcf	i2___ftmul@f2,f,c
 32088  006D40  3620               	rlcf	i2___ftmul@f2+1,f,c
 32089  006D42  3621               	rlcf	i2___ftmul@f2+2,f,c
 32090  006D44  2E29               	decfsz	i2___ftmul@cntr,f,c
 32091  006D46  D7ED               	goto	i2l13651
 32092  006D48  D000               	goto	i2l13659
 32093  006D4A                     i2l13659:
 32094  006D4A  0E09               	movlw	9
 32095  006D4C  6E29               	movwf	i2___ftmul@cntr,c
 32096  006D4E  D000               	goto	i2l13661
 32097  006D50                     i2l13661:
 32098  006D50  A01C               	btfss	i2___ftmul@f1,0,c
 32099  006D52  D007               	goto	i2l13665
 32100  006D54  501F               	movf	i2___ftmul@f2,w,c
 32101  006D56  2626               	addwf	i2___ftmul@f3_as_product,f,c
 32102  006D58  5020               	movf	i2___ftmul@f2+1,w,c
 32103  006D5A  2227               	addwfc	i2___ftmul@f3_as_product+1,f,c
 32104  006D5C  5021               	movf	i2___ftmul@f2+2,w,c
 32105  006D5E  2228               	addwfc	i2___ftmul@f3_as_product+2,f,c
 32106  006D60  D000               	goto	i2l13665
 32107  006D62                     i2l13665:
 32108  006D62  90D8               	bcf	status,0,c
 32109  006D64  321E               	rrcf	i2___ftmul@f1+2,f,c
 32110  006D66  321D               	rrcf	i2___ftmul@f1+1,f,c
 32111  006D68  321C               	rrcf	i2___ftmul@f1,f,c
 32112  006D6A  90D8               	bcf	status,0,c
 32113  006D6C  3228               	rrcf	i2___ftmul@f3_as_product+2,f,c
 32114  006D6E  3227               	rrcf	i2___ftmul@f3_as_product+1,f,c
 32115  006D70  3226               	rrcf	i2___ftmul@f3_as_product,f,c
 32116  006D72  2E29               	decfsz	i2___ftmul@cntr,f,c
 32117  006D74  D7ED               	goto	i2l13661
 32118  006D76  D000               	goto	i2l13669
 32119  006D78                     i2l13669:
 32120  006D78  C026  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 32121  006D7C  C027  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 32122  006D80  C028  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 32123  006D84  C025  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 32124  006D88  C02A  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 32125  006D8C  ECA6  F03B         	call	i2___ftpack	;wreg free
 32126  006D90  C001  F01C         	movff	?i2___ftpack,?i2___ftmul
 32127  006D94  C002  F01D         	movff	?i2___ftpack+1,?i2___ftmul+1
 32128  006D98  C003  F01E         	movff	?i2___ftpack+2,?i2___ftmul+2
 32129  006D9C  D000               	goto	i2l2126
 32130  006D9E                     i2l2126:
 32131  006D9E  0012               	return		;funcret
 32132  006DA0                     __end_ofi2___ftmul:
 32133                           	opt stack 0
 32134                           pclatu	equ	0xFFB
 32135                           pclath	equ	0xFFA
 32136                           tblptru	equ	0xFF8
 32137                           tblptrh	equ	0xFF7
 32138                           tblptrl	equ	0xFF6
 32139                           tablat	equ	0xFF5
 32140                           prodh	equ	0xFF4
 32141                           prodl	equ	0xFF3
 32142                           intcon	equ	0xFF2
 32143                           intcon2	equ	0xFF1
 32144                           intcon3	equ	0xFF0
 32145                           postinc0	equ	0xFEE
 32146                           fsr0h	equ	0xFEA
 32147                           fsr0l	equ	0xFE9
 32148                           wreg	equ	0xFE8
 32149                           postdec1	equ	0xFE5
 32150                           fsr1h	equ	0xFE2
 32151                           fsr1l	equ	0xFE1
 32152                           indf2	equ	0xFDF
 32153                           postinc2	equ	0xFDE
 32154                           postdec2	equ	0xFDD
 32155                           fsr2h	equ	0xFDA
 32156                           fsr2l	equ	0xFD9
 32157                           status	equ	0xFD8
 32158                           
 32159 ;; *************** function i2___awmod *****************
 32160 ;; Defined at:
 32161 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 32162 ;; Parameters:    Size  Location     Type
 32163 ;;  dividend        2    0[COMRAM] int 
 32164 ;;  divisor         2    2[COMRAM] int 
 32165 ;; Auto vars:     Size  Location     Type
 32166 ;;  __awmod         1    5[COMRAM] unsigned char 
 32167 ;;  __awmod         1    4[COMRAM] unsigned char 
 32168 ;; Return value:  Size  Location     Type
 32169 ;;                  2    0[COMRAM] int 
 32170 ;; Registers used:
 32171 ;;		wreg, status,2, status,0
 32172 ;; Tracked objects:
 32173 ;;		On entry : 0/0
 32174 ;;		On exit  : 0/0
 32175 ;;		Unchanged: 0/0
 32176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32177 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32178 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32180 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32181 ;;Total ram usage:        6 bytes
 32182 ;; Hardware stack levels used:    1
 32183 ;; This function calls:
 32184 ;;		Nothing
 32185 ;; This function is called by:
 32186 ;;		i2_fround
 32187 ;;		i2_scale
 32188 ;;		i2_printf
 32189 ;; This function uses a non-reentrant model
 32190 ;;
 32191                           
 32192                           	psect	text133
 32193  008254                     __ptext133:
 32194                           	opt stack 0
 32195  008254                     i2___awmod:
 32196                           	opt stack 16
 32197                           
 32198                           ;incstack = 0
 32199  008254  0E00               	movlw	0
 32200  008256  6E06               	movwf	i2___awmod@sign,c
 32201  008258  AE02               	btfss	i2___awmod@dividend+1,7,c
 32202  00825A  D007               	goto	i2l13527
 32203  00825C  6C01               	negf	i2___awmod@dividend,c
 32204  00825E  1E02               	comf	i2___awmod@dividend+1,f,c
 32205  008260  B0D8               	btfsc	status,0,c
 32206  008262  2A02               	incf	i2___awmod@dividend+1,f,c
 32207  008264  0E01               	movlw	1
 32208  008266  6E06               	movwf	i2___awmod@sign,c
 32209  008268  D000               	goto	i2l13527
 32210  00826A                     i2l13527:
 32211  00826A  AE04               	btfss	i2___awmod@divisor+1,7,c
 32212  00826C  D005               	goto	i2l13531
 32213  00826E  6C03               	negf	i2___awmod@divisor,c
 32214  008270  1E04               	comf	i2___awmod@divisor+1,f,c
 32215  008272  B0D8               	btfsc	status,0,c
 32216  008274  2A04               	incf	i2___awmod@divisor+1,f,c
 32217  008276  D000               	goto	i2l13531
 32218  008278                     i2l13531:
 32219  008278  5003               	movf	i2___awmod@divisor,w,c
 32220  00827A  1004               	iorwf	i2___awmod@divisor+1,w,c
 32221  00827C  B4D8               	btfsc	status,2,c
 32222  00827E  D01D               	goto	i2l13547
 32223  008280  0E01               	movlw	1
 32224  008282  6E05               	movwf	i2___awmod@counter,c
 32225  008284  D005               	goto	i2l13537
 32226  008286                     i2l13535:
 32227  008286  90D8               	bcf	status,0,c
 32228  008288  3603               	rlcf	i2___awmod@divisor,f,c
 32229  00828A  3604               	rlcf	i2___awmod@divisor+1,f,c
 32230  00828C  2A05               	incf	i2___awmod@counter,f,c
 32231  00828E  D000               	goto	i2l13537
 32232  008290                     i2l13537:
 32233  008290  BE04               	btfsc	i2___awmod@divisor+1,7,c
 32234  008292  D002               	goto	i2l13539
 32235  008294  D7F8               	goto	i2l13535
 32236  008296  D000               	goto	i2l13539
 32237  008298                     i2l13539:
 32238  008298  5003               	movf	i2___awmod@divisor,w,c
 32239  00829A  5C01               	subwf	i2___awmod@dividend,w,c
 32240  00829C  5004               	movf	i2___awmod@divisor+1,w,c
 32241  00829E  5802               	subwfb	i2___awmod@dividend+1,w,c
 32242  0082A0  A0D8               	btfss	status,0,c
 32243  0082A2  D005               	goto	i2l13543
 32244  0082A4  5003               	movf	i2___awmod@divisor,w,c
 32245  0082A6  5E01               	subwf	i2___awmod@dividend,f,c
 32246  0082A8  5004               	movf	i2___awmod@divisor+1,w,c
 32247  0082AA  5A02               	subwfb	i2___awmod@dividend+1,f,c
 32248  0082AC  D000               	goto	i2l13543
 32249  0082AE                     i2l13543:
 32250  0082AE  90D8               	bcf	status,0,c
 32251  0082B0  3204               	rrcf	i2___awmod@divisor+1,f,c
 32252  0082B2  3203               	rrcf	i2___awmod@divisor,f,c
 32253  0082B4  2E05               	decfsz	i2___awmod@counter,f,c
 32254  0082B6  D7F0               	goto	i2l13539
 32255  0082B8  D000               	goto	i2l13547
 32256  0082BA                     i2l13547:
 32257  0082BA  5006               	movf	i2___awmod@sign,w,c
 32258  0082BC  B4D8               	btfsc	status,2,c
 32259  0082BE  D005               	goto	i2l13551
 32260  0082C0  6C01               	negf	i2___awmod@dividend,c
 32261  0082C2  1E02               	comf	i2___awmod@dividend+1,f,c
 32262  0082C4  B0D8               	btfsc	status,0,c
 32263  0082C6  2A02               	incf	i2___awmod@dividend+1,f,c
 32264  0082C8  D000               	goto	i2l13551
 32265  0082CA                     i2l13551:
 32266  0082CA  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 32267  0082CE  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 32268  0082D2  D000               	goto	i2l1903
 32269  0082D4                     i2l1903:
 32270  0082D4  0012               	return		;funcret
 32271  0082D6                     __end_ofi2___awmod:
 32272                           	opt stack 0
 32273                           pclatu	equ	0xFFB
 32274                           pclath	equ	0xFFA
 32275                           tblptru	equ	0xFF8
 32276                           tblptrh	equ	0xFF7
 32277                           tblptrl	equ	0xFF6
 32278                           tablat	equ	0xFF5
 32279                           prodh	equ	0xFF4
 32280                           prodl	equ	0xFF3
 32281                           intcon	equ	0xFF2
 32282                           intcon2	equ	0xFF1
 32283                           intcon3	equ	0xFF0
 32284                           postinc0	equ	0xFEE
 32285                           fsr0h	equ	0xFEA
 32286                           fsr0l	equ	0xFE9
 32287                           wreg	equ	0xFE8
 32288                           postdec1	equ	0xFE5
 32289                           fsr1h	equ	0xFE2
 32290                           fsr1l	equ	0xFE1
 32291                           indf2	equ	0xFDF
 32292                           postinc2	equ	0xFDE
 32293                           postdec2	equ	0xFDD
 32294                           fsr2h	equ	0xFDA
 32295                           fsr2l	equ	0xFD9
 32296                           status	equ	0xFD8
 32297                           
 32298 ;; *************** function i2___awdiv *****************
 32299 ;; Defined at:
 32300 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 32301 ;; Parameters:    Size  Location     Type
 32302 ;;  dividend        2    6[COMRAM] int 
 32303 ;;  divisor         2    8[COMRAM] int 
 32304 ;; Auto vars:     Size  Location     Type
 32305 ;;  __awdiv         2   12[COMRAM] int 
 32306 ;;  __awdiv         1   11[COMRAM] unsigned char 
 32307 ;;  __awdiv         1   10[COMRAM] unsigned char 
 32308 ;; Return value:  Size  Location     Type
 32309 ;;                  2    6[COMRAM] int 
 32310 ;; Registers used:
 32311 ;;		wreg, status,2, status,0
 32312 ;; Tracked objects:
 32313 ;;		On entry : 0/0
 32314 ;;		On exit  : 0/0
 32315 ;;		Unchanged: 0/0
 32316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32317 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32318 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32320 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32321 ;;Total ram usage:        8 bytes
 32322 ;; Hardware stack levels used:    1
 32323 ;; This function calls:
 32324 ;;		Nothing
 32325 ;; This function is called by:
 32326 ;;		i2_fround
 32327 ;;		i2_scale
 32328 ;;		i2_printf
 32329 ;; This function uses a non-reentrant model
 32330 ;;
 32331                           
 32332                           	psect	text134
 32333  007F92                     __ptext134:
 32334                           	opt stack 0
 32335  007F92                     i2___awdiv:
 32336                           	opt stack 16
 32337                           
 32338                           ;incstack = 0
 32339  007F92  0E00               	movlw	0
 32340  007F94  6E0C               	movwf	i2___awdiv@sign,c
 32341  007F96  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 32342  007F98  D007               	goto	i2l13483
 32343  007F9A  6C09               	negf	i2___awdiv@divisor,c
 32344  007F9C  1E0A               	comf	i2___awdiv@divisor+1,f,c
 32345  007F9E  B0D8               	btfsc	status,0,c
 32346  007FA0  2A0A               	incf	i2___awdiv@divisor+1,f,c
 32347  007FA2  0E01               	movlw	1
 32348  007FA4  6E0C               	movwf	i2___awdiv@sign,c
 32349  007FA6  D000               	goto	i2l13483
 32350  007FA8                     i2l13483:
 32351  007FA8  AE08               	btfss	i2___awdiv@dividend+1,7,c
 32352  007FAA  D007               	goto	i2l13489
 32353  007FAC  6C07               	negf	i2___awdiv@dividend,c
 32354  007FAE  1E08               	comf	i2___awdiv@dividend+1,f,c
 32355  007FB0  B0D8               	btfsc	status,0,c
 32356  007FB2  2A08               	incf	i2___awdiv@dividend+1,f,c
 32357  007FB4  0E01               	movlw	1
 32358  007FB6  1A0C               	xorwf	i2___awdiv@sign,f,c
 32359  007FB8  D000               	goto	i2l13489
 32360  007FBA                     i2l13489:
 32361  007FBA  0E00               	movlw	0
 32362  007FBC  6E0E               	movwf	i2___awdiv@quotient+1,c
 32363  007FBE  0E00               	movlw	0
 32364  007FC0  6E0D               	movwf	i2___awdiv@quotient,c
 32365  007FC2  5009               	movf	i2___awdiv@divisor,w,c
 32366  007FC4  100A               	iorwf	i2___awdiv@divisor+1,w,c
 32367  007FC6  B4D8               	btfsc	status,2,c
 32368  007FC8  D021               	goto	i2l13511
 32369  007FCA  0E01               	movlw	1
 32370  007FCC  6E0B               	movwf	i2___awdiv@counter,c
 32371  007FCE  D005               	goto	i2l13497
 32372  007FD0                     i2l13495:
 32373  007FD0  90D8               	bcf	status,0,c
 32374  007FD2  3609               	rlcf	i2___awdiv@divisor,f,c
 32375  007FD4  360A               	rlcf	i2___awdiv@divisor+1,f,c
 32376  007FD6  2A0B               	incf	i2___awdiv@counter,f,c
 32377  007FD8  D000               	goto	i2l13497
 32378  007FDA                     i2l13497:
 32379  007FDA  BE0A               	btfsc	i2___awdiv@divisor+1,7,c
 32380  007FDC  D002               	goto	i2l13499
 32381  007FDE  D7F8               	goto	i2l13495
 32382  007FE0  D000               	goto	i2l13499
 32383  007FE2                     i2l13499:
 32384  007FE2  90D8               	bcf	status,0,c
 32385  007FE4  360D               	rlcf	i2___awdiv@quotient,f,c
 32386  007FE6  360E               	rlcf	i2___awdiv@quotient+1,f,c
 32387  007FE8  5009               	movf	i2___awdiv@divisor,w,c
 32388  007FEA  5C07               	subwf	i2___awdiv@dividend,w,c
 32389  007FEC  500A               	movf	i2___awdiv@divisor+1,w,c
 32390  007FEE  5808               	subwfb	i2___awdiv@dividend+1,w,c
 32391  007FF0  A0D8               	btfss	status,0,c
 32392  007FF2  D006               	goto	i2l13507
 32393  007FF4  5009               	movf	i2___awdiv@divisor,w,c
 32394  007FF6  5E07               	subwf	i2___awdiv@dividend,f,c
 32395  007FF8  500A               	movf	i2___awdiv@divisor+1,w,c
 32396  007FFA  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 32397  007FFC  800D               	bsf	i2___awdiv@quotient,0,c
 32398  007FFE  D000               	goto	i2l13507
 32399  008000                     i2l13507:
 32400  008000  90D8               	bcf	status,0,c
 32401  008002  320A               	rrcf	i2___awdiv@divisor+1,f,c
 32402  008004  3209               	rrcf	i2___awdiv@divisor,f,c
 32403  008006  2E0B               	decfsz	i2___awdiv@counter,f,c
 32404  008008  D7EC               	goto	i2l13499
 32405  00800A  D000               	goto	i2l13511
 32406  00800C                     i2l13511:
 32407  00800C  500C               	movf	i2___awdiv@sign,w,c
 32408  00800E  B4D8               	btfsc	status,2,c
 32409  008010  D005               	goto	i2l13515
 32410  008012  6C0D               	negf	i2___awdiv@quotient,c
 32411  008014  1E0E               	comf	i2___awdiv@quotient+1,f,c
 32412  008016  B0D8               	btfsc	status,0,c
 32413  008018  2A0E               	incf	i2___awdiv@quotient+1,f,c
 32414  00801A  D000               	goto	i2l13515
 32415  00801C                     i2l13515:
 32416  00801C  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 32417  008020  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 32418  008024  D000               	goto	i2l1890
 32419  008026                     i2l1890:
 32420  008026  0012               	return		;funcret
 32421  008028                     __end_ofi2___awdiv:
 32422                           	opt stack 0
 32423                           pclatu	equ	0xFFB
 32424                           pclath	equ	0xFFA
 32425                           tblptru	equ	0xFF8
 32426                           tblptrh	equ	0xFF7
 32427                           tblptrl	equ	0xFF6
 32428                           tablat	equ	0xFF5
 32429                           prodh	equ	0xFF4
 32430                           prodl	equ	0xFF3
 32431                           intcon	equ	0xFF2
 32432                           intcon2	equ	0xFF1
 32433                           intcon3	equ	0xFF0
 32434                           postinc0	equ	0xFEE
 32435                           fsr0h	equ	0xFEA
 32436                           fsr0l	equ	0xFE9
 32437                           wreg	equ	0xFE8
 32438                           postdec1	equ	0xFE5
 32439                           fsr1h	equ	0xFE2
 32440                           fsr1l	equ	0xFE1
 32441                           indf2	equ	0xFDF
 32442                           postinc2	equ	0xFDE
 32443                           postdec2	equ	0xFDD
 32444                           fsr2h	equ	0xFDA
 32445                           fsr2l	equ	0xFD9
 32446                           status	equ	0xFD8
 32447                           
 32448 ;; *************** function i2__tdiv_to_l_ *****************
 32449 ;; Defined at:
 32450 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
 32451 ;; Parameters:    Size  Location     Type
 32452 ;;  f1              3    0[COMRAM] float 
 32453 ;;  f2              3    3[COMRAM] float 
 32454 ;; Auto vars:     Size  Location     Type
 32455 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 32456 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 32457 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 32458 ;; Return value:  Size  Location     Type
 32459 ;;                  4    0[COMRAM] unsigned long 
 32460 ;; Registers used:
 32461 ;;		wreg, status,2, status,0
 32462 ;; Tracked objects:
 32463 ;;		On entry : 0/0
 32464 ;;		On exit  : 0/0
 32465 ;;		Unchanged: 0/0
 32466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32467 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32468 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32469 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32470 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32471 ;;Total ram usage:       15 bytes
 32472 ;; Hardware stack levels used:    1
 32473 ;; This function calls:
 32474 ;;		Nothing
 32475 ;; This function is called by:
 32476 ;;		i2_printf
 32477 ;; This function uses a non-reentrant model
 32478 ;;
 32479                           
 32480                           	psect	text135
 32481  00688E                     __ptext135:
 32482                           	opt stack 0
 32483  00688E                     i2__tdiv_to_l_:
 32484                           	opt stack 17
 32485                           
 32486                           ;incstack = 0
 32487  00688E  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 32488  006892  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 32489  006894  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 32490  006896  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 32491  006898  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 32492  00689A  E301               	bnc	u1617_41
 32493  00689C  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 32494  00689E                     u1617_41:
 32495  00689E  5007               	movf	??i2__tdiv_to_l_,w,c
 32496  0068A0  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 32497  0068A2  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 32498  0068A4  A4D8               	btfss	status,2,c
 32499  0068A6  D002               	goto	i2l14003
 32500  0068A8  D05D               	goto	i2l14045
 32501  0068AA  D078               	goto	i2l2102
 32502  0068AC                     i2l14003:
 32503  0068AC  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 32504  0068B0  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 32505  0068B2  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 32506  0068B4  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 32507  0068B6  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 32508  0068B8  E301               	bnc	u1619_41
 32509  0068BA  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 32510  0068BC                     u1619_41:
 32511  0068BC  5007               	movf	??i2__tdiv_to_l_,w,c
 32512  0068BE  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 32513  0068C0  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 32514  0068C2  A4D8               	btfss	status,2,c
 32515  0068C4  D002               	goto	i2l14009
 32516  0068C6  D04E               	goto	i2l14045
 32517  0068C8  D069               	goto	i2l2102
 32518  0068CA                     i2l14009:
 32519  0068CA  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 32520  0068CC  0EFF               	movlw	255
 32521  0068CE  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 32522  0068D0  0EFF               	movlw	255
 32523  0068D2  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 32524  0068D4  0E00               	movlw	0
 32525  0068D6  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 32526  0068D8  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 32527  0068DA  0EFF               	movlw	255
 32528  0068DC  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 32529  0068DE  0EFF               	movlw	255
 32530  0068E0  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 32531  0068E2  0E00               	movlw	0
 32532  0068E4  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 32533  0068E6  0E00               	movlw	0
 32534  0068E8  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 32535  0068EA  0E00               	movlw	0
 32536  0068EC  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 32537  0068EE  0E00               	movlw	0
 32538  0068F0  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 32539  0068F2  0E00               	movlw	0
 32540  0068F4  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 32541  0068F6  0E7F               	movlw	127
 32542  0068F8  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 32543  0068FA  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 32544  0068FC  0F98               	addlw	152
 32545  0068FE  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 32546  006900  0E18               	movlw	24
 32547  006902  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 32548  006904                     i2l2104:
 32549  006904  90D8               	bcf	status,0,c
 32550  006906  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 32551  006908  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 32552  00690A  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 32553  00690C  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 32554  00690E  5004               	movf	i2__tdiv_to_l_@f2,w,c
 32555  006910  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 32556  006912  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 32557  006914  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 32558  006916  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 32559  006918  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 32560  00691A  A0D8               	btfss	status,0,c
 32561  00691C  D007               	goto	i2l2105
 32562  00691E  5004               	movf	i2__tdiv_to_l_@f2,w,c
 32563  006920  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 32564  006922  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 32565  006924  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 32566  006926  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 32567  006928  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 32568  00692A  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 32569  00692C                     i2l2105:
 32570  00692C  90D8               	bcf	status,0,c
 32571  00692E  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 32572  006930  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 32573  006932  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 32574  006934  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 32575  006936  D7E6               	goto	i2l2104
 32576  006938  D000               	goto	i2l14031
 32577  00693A                     i2l14031:
 32578  00693A  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 32579  00693C  D010               	goto	i2l14043
 32580  00693E  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 32581  006940  0A80               	xorlw	128
 32582  006942  0F97               	addlw	151
 32583  006944  B0D8               	btfsc	status,0,c
 32584  006946  D003               	goto	i2l14039
 32585  006948  D00D               	goto	i2l14045
 32586  00694A  D028               	goto	i2l2102
 32587  00694C  D000               	goto	i2l14039
 32588  00694E                     i2l14039:
 32589  00694E  90D8               	bcf	status,0,c
 32590  006950  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 32591  006952  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 32592  006954  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 32593  006956  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 32594  006958  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 32595  00695A  D7F9               	goto	i2l14039
 32596  00695C  D017               	goto	i2l2111
 32597  00695E                     i2l14043:
 32598  00695E  0E17               	movlw	23
 32599  006960  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 32600  006962  D011               	goto	i2l14051
 32601  006964                     i2l14045:
 32602  006964  0E00               	movlw	0
 32603  006966  6E01               	movwf	?i2__tdiv_to_l_,c
 32604  006968  0E00               	movlw	0
 32605  00696A  6E02               	movwf	?i2__tdiv_to_l_+1,c
 32606  00696C  0E00               	movlw	0
 32607  00696E  6E03               	movwf	?i2__tdiv_to_l_+2,c
 32608  006970  0E00               	movlw	0
 32609  006972  6E04               	movwf	?i2__tdiv_to_l_+3,c
 32610  006974  D013               	goto	i2l2102
 32611  006976  D007               	goto	i2l14051
 32612  006978                     i2l14049:
 32613  006978  90D8               	bcf	status,0,c
 32614  00697A  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 32615  00697C  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 32616  00697E  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 32617  006980  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 32618  006982  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 32619  006984  D000               	goto	i2l14051
 32620  006986                     i2l14051:
 32621  006986  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 32622  006988  A4D8               	btfss	status,2,c
 32623  00698A  D7F6               	goto	i2l14049
 32624  00698C                     i2l2111:
 32625  00698C  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 32626  006990  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 32627  006994  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 32628  006998  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 32629  00699C                     i2l2102:
 32630  00699C  0012               	return		;funcret
 32631  00699E                     __end_ofi2__tdiv_to_l_:
 32632                           	opt stack 0
 32633                           pclatu	equ	0xFFB
 32634                           pclath	equ	0xFFA
 32635                           tblptru	equ	0xFF8
 32636                           tblptrh	equ	0xFF7
 32637                           tblptrl	equ	0xFF6
 32638                           tablat	equ	0xFF5
 32639                           prodh	equ	0xFF4
 32640                           prodl	equ	0xFF3
 32641                           intcon	equ	0xFF2
 32642                           intcon2	equ	0xFF1
 32643                           intcon3	equ	0xFF0
 32644                           postinc0	equ	0xFEE
 32645                           fsr0h	equ	0xFEA
 32646                           fsr0l	equ	0xFE9
 32647                           wreg	equ	0xFE8
 32648                           postdec1	equ	0xFE5
 32649                           fsr1h	equ	0xFE2
 32650                           fsr1l	equ	0xFE1
 32651                           indf2	equ	0xFDF
 32652                           postinc2	equ	0xFDE
 32653                           postdec2	equ	0xFDD
 32654                           fsr2h	equ	0xFDA
 32655                           fsr2l	equ	0xFD9
 32656                           status	equ	0xFD8
 32657                           
 32658 ;; *************** function i2__div_to_l_ *****************
 32659 ;; Defined at:
 32660 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
 32661 ;; Parameters:    Size  Location     Type
 32662 ;;  f1              3    0[COMRAM] unsigned long 
 32663 ;;  f2              3    3[COMRAM] unsigned long 
 32664 ;; Auto vars:     Size  Location     Type
 32665 ;;  _div_to_l_      4    6[COMRAM] unsigned long 
 32666 ;;  _div_to_l_      1   11[COMRAM] unsigned char 
 32667 ;;  _div_to_l_      1   10[COMRAM] unsigned char 
 32668 ;; Return value:  Size  Location     Type
 32669 ;;                  4    0[COMRAM] unsigned long 
 32670 ;; Registers used:
 32671 ;;		wreg, status,2, status,0
 32672 ;; Tracked objects:
 32673 ;;		On entry : 0/0
 32674 ;;		On exit  : 0/0
 32675 ;;		Unchanged: 0/0
 32676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32677 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32678 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32680 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32681 ;;Total ram usage:       12 bytes
 32682 ;; Hardware stack levels used:    1
 32683 ;; This function calls:
 32684 ;;		Nothing
 32685 ;; This function is called by:
 32686 ;;		i2_printf
 32687 ;; This function uses a non-reentrant model
 32688 ;;
 32689                           
 32690                           	psect	text136
 32691  00699E                     __ptext136:
 32692                           	opt stack 0
 32693  00699E                     i2__div_to_l_:
 32694                           	opt stack 17
 32695                           
 32696                           ;incstack = 0
 32697  00699E  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 32698  0069A0  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 32699  0069A2  6E0C               	movwf	i2__div_to_l_@exp1,c
 32700  0069A4  500C               	movf	i2__div_to_l_@exp1,w,c
 32701  0069A6  A4D8               	btfss	status,2,c
 32702  0069A8  D002               	goto	i2l13897
 32703  0069AA  D061               	goto	i2l13943
 32704  0069AC  D07C               	goto	i2l1981
 32705  0069AE                     i2l13897:
 32706  0069AE  3406               	rlcf	i2__div_to_l_@f2+2,w,c
 32707  0069B0  3407               	rlcf	i2__div_to_l_@f2+3,w,c
 32708  0069B2  6E0B               	movwf	i2__div_to_l_@cntr,c
 32709  0069B4  500B               	movf	i2__div_to_l_@cntr,w,c
 32710  0069B6  A4D8               	btfss	status,2,c
 32711  0069B8  D002               	goto	i2l13903
 32712  0069BA  D059               	goto	i2l13943
 32713  0069BC  D074               	goto	i2l1981
 32714  0069BE                     i2l13903:
 32715  0069BE  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 32716  0069C0  0EFF               	movlw	255
 32717  0069C2  1601               	andwf	i2__div_to_l_@f1,f,c
 32718  0069C4  0EFF               	movlw	255
 32719  0069C6  1602               	andwf	i2__div_to_l_@f1+1,f,c
 32720  0069C8  0EFF               	movlw	255
 32721  0069CA  1603               	andwf	i2__div_to_l_@f1+2,f,c
 32722  0069CC  0E00               	movlw	0
 32723  0069CE  1604               	andwf	i2__div_to_l_@f1+3,f,c
 32724  0069D0  8E06               	bsf	i2__div_to_l_@f2+2,7,c
 32725  0069D2  0EFF               	movlw	255
 32726  0069D4  1604               	andwf	i2__div_to_l_@f2,f,c
 32727  0069D6  0EFF               	movlw	255
 32728  0069D8  1605               	andwf	i2__div_to_l_@f2+1,f,c
 32729  0069DA  0EFF               	movlw	255
 32730  0069DC  1606               	andwf	i2__div_to_l_@f2+2,f,c
 32731  0069DE  0E00               	movlw	0
 32732  0069E0  1607               	andwf	i2__div_to_l_@f2+3,f,c
 32733  0069E2  0E00               	movlw	0
 32734  0069E4  6E07               	movwf	i2__div_to_l_@quot,c
 32735  0069E6  0E00               	movlw	0
 32736  0069E8  6E08               	movwf	i2__div_to_l_@quot+1,c
 32737  0069EA  0E00               	movlw	0
 32738  0069EC  6E09               	movwf	i2__div_to_l_@quot+2,c
 32739  0069EE  0E00               	movlw	0
 32740  0069F0  6E0A               	movwf	i2__div_to_l_@quot+3,c
 32741  0069F2  0E7F               	movlw	127
 32742  0069F4  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 32743  0069F6  500B               	movf	i2__div_to_l_@cntr,w,c
 32744  0069F8  0FA0               	addlw	160
 32745  0069FA  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 32746  0069FC  0E20               	movlw	32
 32747  0069FE  6E0B               	movwf	i2__div_to_l_@cntr,c
 32748  006A00  D000               	goto	i2l13917
 32749  006A02                     i2l13917:
 32750  006A02  90D8               	bcf	status,0,c
 32751  006A04  3607               	rlcf	i2__div_to_l_@quot,f,c
 32752  006A06  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 32753  006A08  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 32754  006A0A  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 32755  006A0C  5004               	movf	i2__div_to_l_@f2,w,c
 32756  006A0E  5C01               	subwf	i2__div_to_l_@f1,w,c
 32757  006A10  5005               	movf	i2__div_to_l_@f2+1,w,c
 32758  006A12  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 32759  006A14  5006               	movf	i2__div_to_l_@f2+2,w,c
 32760  006A16  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 32761  006A18  5007               	movf	i2__div_to_l_@f2+3,w,c
 32762  006A1A  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 32763  006A1C  A0D8               	btfss	status,0,c
 32764  006A1E  D00A               	goto	i2l13925
 32765  006A20  5004               	movf	i2__div_to_l_@f2,w,c
 32766  006A22  5E01               	subwf	i2__div_to_l_@f1,f,c
 32767  006A24  5005               	movf	i2__div_to_l_@f2+1,w,c
 32768  006A26  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 32769  006A28  5006               	movf	i2__div_to_l_@f2+2,w,c
 32770  006A2A  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 32771  006A2C  5007               	movf	i2__div_to_l_@f2+3,w,c
 32772  006A2E  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 32773  006A30  8007               	bsf	i2__div_to_l_@quot,0,c
 32774  006A32  D000               	goto	i2l13925
 32775  006A34                     i2l13925:
 32776  006A34  90D8               	bcf	status,0,c
 32777  006A36  3601               	rlcf	i2__div_to_l_@f1,f,c
 32778  006A38  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 32779  006A3A  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 32780  006A3C  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 32781  006A3E  2E0B               	decfsz	i2__div_to_l_@cntr,f,c
 32782  006A40  D7E0               	goto	i2l13917
 32783  006A42  D000               	goto	i2l13929
 32784  006A44                     i2l13929:
 32785  006A44  AE0C               	btfss	i2__div_to_l_@exp1,7,c
 32786  006A46  D010               	goto	i2l13941
 32787  006A48  500C               	movf	i2__div_to_l_@exp1,w,c
 32788  006A4A  0A80               	xorlw	128
 32789  006A4C  0F9F               	addlw	159
 32790  006A4E  B0D8               	btfsc	status,0,c
 32791  006A50  D003               	goto	i2l13937
 32792  006A52  D00D               	goto	i2l13943
 32793  006A54  D028               	goto	i2l1981
 32794  006A56  D000               	goto	i2l13937
 32795  006A58                     i2l13937:
 32796  006A58  90D8               	bcf	status,0,c
 32797  006A5A  320A               	rrcf	i2__div_to_l_@quot+3,f,c
 32798  006A5C  3209               	rrcf	i2__div_to_l_@quot+2,f,c
 32799  006A5E  3208               	rrcf	i2__div_to_l_@quot+1,f,c
 32800  006A60  3207               	rrcf	i2__div_to_l_@quot,f,c
 32801  006A62  3E0C               	incfsz	i2__div_to_l_@exp1,f,c
 32802  006A64  D7F9               	goto	i2l13937
 32803  006A66  D017               	goto	i2l1990
 32804  006A68                     i2l13941:
 32805  006A68  0E1F               	movlw	31
 32806  006A6A  640C               	cpfsgt	i2__div_to_l_@exp1,c
 32807  006A6C  D011               	goto	i2l13949
 32808  006A6E                     i2l13943:
 32809  006A6E  0E00               	movlw	0
 32810  006A70  6E01               	movwf	?i2__div_to_l_,c
 32811  006A72  0E00               	movlw	0
 32812  006A74  6E02               	movwf	?i2__div_to_l_+1,c
 32813  006A76  0E00               	movlw	0
 32814  006A78  6E03               	movwf	?i2__div_to_l_+2,c
 32815  006A7A  0E00               	movlw	0
 32816  006A7C  6E04               	movwf	?i2__div_to_l_+3,c
 32817  006A7E  D013               	goto	i2l1981
 32818  006A80  D007               	goto	i2l13949
 32819  006A82                     i2l13947:
 32820  006A82  90D8               	bcf	status,0,c
 32821  006A84  3607               	rlcf	i2__div_to_l_@quot,f,c
 32822  006A86  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 32823  006A88  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 32824  006A8A  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 32825  006A8C  060C               	decf	i2__div_to_l_@exp1,f,c
 32826  006A8E  D000               	goto	i2l13949
 32827  006A90                     i2l13949:
 32828  006A90  500C               	movf	i2__div_to_l_@exp1,w,c
 32829  006A92  A4D8               	btfss	status,2,c
 32830  006A94  D7F6               	goto	i2l13947
 32831  006A96                     i2l1990:
 32832  006A96  C007  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 32833  006A9A  C008  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 32834  006A9E  C009  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 32835  006AA2  C00A  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 32836  006AA6                     i2l1981:
 32837  006AA6  0012               	return		;funcret
 32838  006AA8                     __end_ofi2__div_to_l_:
 32839                           	opt stack 0
 32840                           pclatu	equ	0xFFB
 32841                           pclath	equ	0xFFA
 32842                           tblptru	equ	0xFF8
 32843                           tblptrh	equ	0xFF7
 32844                           tblptrl	equ	0xFF6
 32845                           tablat	equ	0xFF5
 32846                           prodh	equ	0xFF4
 32847                           prodl	equ	0xFF3
 32848                           intcon	equ	0xFF2
 32849                           intcon2	equ	0xFF1
 32850                           intcon3	equ	0xFF0
 32851                           postinc0	equ	0xFEE
 32852                           fsr0h	equ	0xFEA
 32853                           fsr0l	equ	0xFE9
 32854                           wreg	equ	0xFE8
 32855                           postdec1	equ	0xFE5
 32856                           fsr1h	equ	0xFE2
 32857                           fsr1l	equ	0xFE1
 32858                           indf2	equ	0xFDF
 32859                           postinc2	equ	0xFDE
 32860                           postdec2	equ	0xFDD
 32861                           fsr2h	equ	0xFDA
 32862                           fsr2l	equ	0xFD9
 32863                           status	equ	0xFD8
 32864                           
 32865 ;; *************** function i2___lltoft *****************
 32866 ;; Defined at:
 32867 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
 32868 ;; Parameters:    Size  Location     Type
 32869 ;;  c               4   15[COMRAM] unsigned long 
 32870 ;; Auto vars:     Size  Location     Type
 32871 ;;  __lltoft        1   23[COMRAM] unsigned char 
 32872 ;; Return value:  Size  Location     Type
 32873 ;;                  3   15[COMRAM] float 
 32874 ;; Registers used:
 32875 ;;		wreg, status,2, status,0, cstack
 32876 ;; Tracked objects:
 32877 ;;		On entry : 0/0
 32878 ;;		On exit  : 0/0
 32879 ;;		Unchanged: 0/0
 32880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32881 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32882 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32883 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32884 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32885 ;;Total ram usage:        9 bytes
 32886 ;; Hardware stack levels used:    1
 32887 ;; Hardware stack levels required when called:    1
 32888 ;; This function calls:
 32889 ;;		i2___ftpack
 32890 ;; This function is called by:
 32891 ;;		i2_printf
 32892 ;; This function uses a non-reentrant model
 32893 ;;
 32894                           
 32895                           	psect	text137
 32896  008840                     __ptext137:
 32897                           	opt stack 0
 32898  008840                     i2___lltoft:
 32899                           	opt stack 16
 32900                           
 32901                           ;incstack = 0
 32902  008840  0E8E               	movlw	142
 32903  008842  6E18               	movwf	i2___lltoft@exp,c
 32904  008844  D007               	goto	i2l14183
 32905  008846                     i2l14181:
 32906  008846  90D8               	bcf	status,0,c
 32907  008848  3213               	rrcf	i2___lltoft@c+3,f,c
 32908  00884A  3212               	rrcf	i2___lltoft@c+2,f,c
 32909  00884C  3211               	rrcf	i2___lltoft@c+1,f,c
 32910  00884E  3210               	rrcf	i2___lltoft@c,f,c
 32911  008850  2A18               	incf	i2___lltoft@exp,f,c
 32912  008852  D000               	goto	i2l14183
 32913  008854                     i2l14183:
 32914  008854  0E00               	movlw	0
 32915  008856  1410               	andwf	i2___lltoft@c,w,c
 32916  008858  6E14               	movwf	??i2___lltoft& (0+255),c
 32917  00885A  0E00               	movlw	0
 32918  00885C  1411               	andwf	i2___lltoft@c+1,w,c
 32919  00885E  6E15               	movwf	(??i2___lltoft+1)& (0+255),c
 32920  008860  0E00               	movlw	0
 32921  008862  1412               	andwf	i2___lltoft@c+2,w,c
 32922  008864  6E16               	movwf	(??i2___lltoft+2)& (0+255),c
 32923  008866  0EFF               	movlw	255
 32924  008868  1413               	andwf	i2___lltoft@c+3,w,c
 32925  00886A  6E17               	movwf	(??i2___lltoft+3)& (0+255),c
 32926  00886C  5014               	movf	??i2___lltoft,w,c
 32927  00886E  1015               	iorwf	??i2___lltoft+1,w,c
 32928  008870  1016               	iorwf	??i2___lltoft+2,w,c
 32929  008872  1017               	iorwf	??i2___lltoft+3,w,c
 32930  008874  A4D8               	btfss	status,2,c
 32931  008876  D7E7               	goto	i2l14181
 32932  008878  C010  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 32933  00887C  C011  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 32934  008880  C012  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 32935  008884  C018  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 32936  008888  0E00               	movlw	0
 32937  00888A  6E05               	movwf	i2___ftpack@sign,c
 32938  00888C  ECA6  F03B         	call	i2___ftpack	;wreg free
 32939  008890  C001  F010         	movff	?i2___ftpack,?i2___lltoft
 32940  008894  C002  F011         	movff	?i2___ftpack+1,?i2___lltoft+1
 32941  008898  C003  F012         	movff	?i2___ftpack+2,?i2___lltoft+2
 32942  00889C  D000               	goto	i2l2221
 32943  00889E                     i2l2221:
 32944  00889E  0012               	return		;funcret
 32945  0088A0                     __end_ofi2___lltoft:
 32946                           	opt stack 0
 32947                           pclatu	equ	0xFFB
 32948                           pclath	equ	0xFFA
 32949                           tblptru	equ	0xFF8
 32950                           tblptrh	equ	0xFF7
 32951                           tblptrl	equ	0xFF6
 32952                           tablat	equ	0xFF5
 32953                           prodh	equ	0xFF4
 32954                           prodl	equ	0xFF3
 32955                           intcon	equ	0xFF2
 32956                           intcon2	equ	0xFF1
 32957                           intcon3	equ	0xFF0
 32958                           postinc0	equ	0xFEE
 32959                           fsr0h	equ	0xFEA
 32960                           fsr0l	equ	0xFE9
 32961                           wreg	equ	0xFE8
 32962                           postdec1	equ	0xFE5
 32963                           fsr1h	equ	0xFE2
 32964                           fsr1l	equ	0xFE1
 32965                           indf2	equ	0xFDF
 32966                           postinc2	equ	0xFDE
 32967                           postdec2	equ	0xFDD
 32968                           fsr2h	equ	0xFDA
 32969                           fsr2l	equ	0xFD9
 32970                           status	equ	0xFD8
 32971                           
 32972 ;; *************** function i2___llmod *****************
 32973 ;; Defined at:
 32974 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
 32975 ;; Parameters:    Size  Location     Type
 32976 ;;  dividend        4   13[COMRAM] unsigned long 
 32977 ;;  divisor         4   17[COMRAM] unsigned long 
 32978 ;; Auto vars:     Size  Location     Type
 32979 ;;  __llmod         1   21[COMRAM] unsigned char 
 32980 ;; Return value:  Size  Location     Type
 32981 ;;                  4   13[COMRAM] unsigned long 
 32982 ;; Registers used:
 32983 ;;		wreg, status,2, status,0
 32984 ;; Tracked objects:
 32985 ;;		On entry : 0/0
 32986 ;;		On exit  : 0/0
 32987 ;;		Unchanged: 0/0
 32988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32989 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32990 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32992 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32993 ;;Total ram usage:        9 bytes
 32994 ;; Hardware stack levels used:    1
 32995 ;; This function calls:
 32996 ;;		Nothing
 32997 ;; This function is called by:
 32998 ;;		i2_printf
 32999 ;; This function uses a non-reentrant model
 33000 ;;
 33001                           
 33002                           	psect	text138
 33003  008440                     __ptext138:
 33004                           	opt stack 0
 33005  008440                     i2___llmod:
 33006                           	opt stack 17
 33007                           
 33008                           ;incstack = 0
 33009  008440  5012               	movf	i2___llmod@divisor,w,c
 33010  008442  1013               	iorwf	i2___llmod@divisor+1,w,c
 33011  008444  1014               	iorwf	i2___llmod@divisor+2,w,c
 33012  008446  1015               	iorwf	i2___llmod@divisor+3,w,c
 33013  008448  B4D8               	btfsc	status,2,c
 33014  00844A  D029               	goto	i2l2201
 33015  00844C  0E01               	movlw	1
 33016  00844E  6E16               	movwf	i2___llmod@counter,c
 33017  008450  D007               	goto	i2l14169
 33018  008452                     i2l14167:
 33019  008452  90D8               	bcf	status,0,c
 33020  008454  3612               	rlcf	i2___llmod@divisor,f,c
 33021  008456  3613               	rlcf	i2___llmod@divisor+1,f,c
 33022  008458  3614               	rlcf	i2___llmod@divisor+2,f,c
 33023  00845A  3615               	rlcf	i2___llmod@divisor+3,f,c
 33024  00845C  2A16               	incf	i2___llmod@counter,f,c
 33025  00845E  D000               	goto	i2l14169
 33026  008460                     i2l14169:
 33027  008460  BE15               	btfsc	i2___llmod@divisor+3,7,c
 33028  008462  D002               	goto	i2l14171
 33029  008464  D7F6               	goto	i2l14167
 33030  008466  D000               	goto	i2l14171
 33031  008468                     i2l14171:
 33032  008468  5012               	movf	i2___llmod@divisor,w,c
 33033  00846A  5C0E               	subwf	i2___llmod@dividend,w,c
 33034  00846C  5013               	movf	i2___llmod@divisor+1,w,c
 33035  00846E  580F               	subwfb	i2___llmod@dividend+1,w,c
 33036  008470  5014               	movf	i2___llmod@divisor+2,w,c
 33037  008472  5810               	subwfb	i2___llmod@dividend+2,w,c
 33038  008474  5015               	movf	i2___llmod@divisor+3,w,c
 33039  008476  5811               	subwfb	i2___llmod@dividend+3,w,c
 33040  008478  A0D8               	btfss	status,0,c
 33041  00847A  D009               	goto	i2l14175
 33042  00847C  5012               	movf	i2___llmod@divisor,w,c
 33043  00847E  5E0E               	subwf	i2___llmod@dividend,f,c
 33044  008480  5013               	movf	i2___llmod@divisor+1,w,c
 33045  008482  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 33046  008484  5014               	movf	i2___llmod@divisor+2,w,c
 33047  008486  5A10               	subwfb	i2___llmod@dividend+2,f,c
 33048  008488  5015               	movf	i2___llmod@divisor+3,w,c
 33049  00848A  5A11               	subwfb	i2___llmod@dividend+3,f,c
 33050  00848C  D000               	goto	i2l14175
 33051  00848E                     i2l14175:
 33052  00848E  90D8               	bcf	status,0,c
 33053  008490  3215               	rrcf	i2___llmod@divisor+3,f,c
 33054  008492  3214               	rrcf	i2___llmod@divisor+2,f,c
 33055  008494  3213               	rrcf	i2___llmod@divisor+1,f,c
 33056  008496  3212               	rrcf	i2___llmod@divisor,f,c
 33057  008498  2E16               	decfsz	i2___llmod@counter,f,c
 33058  00849A  D7E6               	goto	i2l14171
 33059  00849C  D000               	goto	i2l2201
 33060  00849E                     i2l2201:
 33061  00849E  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 33062  0084A2  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 33063  0084A6  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 33064  0084AA  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 33065  0084AE  0012               	return		;funcret
 33066  0084B0                     __end_ofi2___llmod:
 33067                           	opt stack 0
 33068                           pclatu	equ	0xFFB
 33069                           pclath	equ	0xFFA
 33070                           tblptru	equ	0xFF8
 33071                           tblptrh	equ	0xFF7
 33072                           tblptrl	equ	0xFF6
 33073                           tablat	equ	0xFF5
 33074                           prodh	equ	0xFF4
 33075                           prodl	equ	0xFF3
 33076                           intcon	equ	0xFF2
 33077                           intcon2	equ	0xFF1
 33078                           intcon3	equ	0xFF0
 33079                           postinc0	equ	0xFEE
 33080                           fsr0h	equ	0xFEA
 33081                           fsr0l	equ	0xFE9
 33082                           wreg	equ	0xFE8
 33083                           postdec1	equ	0xFE5
 33084                           fsr1h	equ	0xFE2
 33085                           fsr1l	equ	0xFE1
 33086                           indf2	equ	0xFDF
 33087                           postinc2	equ	0xFDE
 33088                           postdec2	equ	0xFDD
 33089                           fsr2h	equ	0xFDA
 33090                           fsr2l	equ	0xFD9
 33091                           status	equ	0xFD8
 33092                           
 33093 ;; *************** function i2___lldiv *****************
 33094 ;; Defined at:
 33095 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
 33096 ;; Parameters:    Size  Location     Type
 33097 ;;  dividend        4    0[COMRAM] unsigned long 
 33098 ;;  divisor         4    4[COMRAM] unsigned long 
 33099 ;; Auto vars:     Size  Location     Type
 33100 ;;  __lldiv         4    8[COMRAM] unsigned long 
 33101 ;;  __lldiv         1   12[COMRAM] unsigned char 
 33102 ;; Return value:  Size  Location     Type
 33103 ;;                  4    0[COMRAM] unsigned long 
 33104 ;; Registers used:
 33105 ;;		wreg, status,2, status,0
 33106 ;; Tracked objects:
 33107 ;;		On entry : 0/0
 33108 ;;		On exit  : 0/0
 33109 ;;		Unchanged: 0/0
 33110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33111 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33112 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33114 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33115 ;;Total ram usage:       13 bytes
 33116 ;; Hardware stack levels used:    1
 33117 ;; This function calls:
 33118 ;;		Nothing
 33119 ;; This function is called by:
 33120 ;;		i2_printf
 33121 ;; This function uses a non-reentrant model
 33122 ;;
 33123                           
 33124                           	psect	text139
 33125  0080BE                     __ptext139:
 33126                           	opt stack 0
 33127  0080BE                     i2___lldiv:
 33128                           	opt stack 17
 33129                           
 33130                           ;incstack = 0
 33131  0080BE  0E00               	movlw	0
 33132  0080C0  6E09               	movwf	i2___lldiv@quotient,c
 33133  0080C2  0E00               	movlw	0
 33134  0080C4  6E0A               	movwf	i2___lldiv@quotient+1,c
 33135  0080C6  0E00               	movlw	0
 33136  0080C8  6E0B               	movwf	i2___lldiv@quotient+2,c
 33137  0080CA  0E00               	movlw	0
 33138  0080CC  6E0C               	movwf	i2___lldiv@quotient+3,c
 33139  0080CE  5005               	movf	i2___lldiv@divisor,w,c
 33140  0080D0  1006               	iorwf	i2___lldiv@divisor+1,w,c
 33141  0080D2  1007               	iorwf	i2___lldiv@divisor+2,w,c
 33142  0080D4  1008               	iorwf	i2___lldiv@divisor+3,w,c
 33143  0080D6  B4D8               	btfsc	status,2,c
 33144  0080D8  D02F               	goto	i2l2191
 33145  0080DA  0E01               	movlw	1
 33146  0080DC  6E0D               	movwf	i2___lldiv@counter,c
 33147  0080DE  D007               	goto	i2l14149
 33148  0080E0                     i2l14147:
 33149  0080E0  90D8               	bcf	status,0,c
 33150  0080E2  3605               	rlcf	i2___lldiv@divisor,f,c
 33151  0080E4  3606               	rlcf	i2___lldiv@divisor+1,f,c
 33152  0080E6  3607               	rlcf	i2___lldiv@divisor+2,f,c
 33153  0080E8  3608               	rlcf	i2___lldiv@divisor+3,f,c
 33154  0080EA  2A0D               	incf	i2___lldiv@counter,f,c
 33155  0080EC  D000               	goto	i2l14149
 33156  0080EE                     i2l14149:
 33157  0080EE  BE08               	btfsc	i2___lldiv@divisor+3,7,c
 33158  0080F0  D002               	goto	i2l14151
 33159  0080F2  D7F6               	goto	i2l14147
 33160  0080F4  D000               	goto	i2l14151
 33161  0080F6                     i2l14151:
 33162  0080F6  90D8               	bcf	status,0,c
 33163  0080F8  3609               	rlcf	i2___lldiv@quotient,f,c
 33164  0080FA  360A               	rlcf	i2___lldiv@quotient+1,f,c
 33165  0080FC  360B               	rlcf	i2___lldiv@quotient+2,f,c
 33166  0080FE  360C               	rlcf	i2___lldiv@quotient+3,f,c
 33167  008100  5005               	movf	i2___lldiv@divisor,w,c
 33168  008102  5C01               	subwf	i2___lldiv@dividend,w,c
 33169  008104  5006               	movf	i2___lldiv@divisor+1,w,c
 33170  008106  5802               	subwfb	i2___lldiv@dividend+1,w,c
 33171  008108  5007               	movf	i2___lldiv@divisor+2,w,c
 33172  00810A  5803               	subwfb	i2___lldiv@dividend+2,w,c
 33173  00810C  5008               	movf	i2___lldiv@divisor+3,w,c
 33174  00810E  5804               	subwfb	i2___lldiv@dividend+3,w,c
 33175  008110  A0D8               	btfss	status,0,c
 33176  008112  D00A               	goto	i2l14159
 33177  008114  5005               	movf	i2___lldiv@divisor,w,c
 33178  008116  5E01               	subwf	i2___lldiv@dividend,f,c
 33179  008118  5006               	movf	i2___lldiv@divisor+1,w,c
 33180  00811A  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 33181  00811C  5007               	movf	i2___lldiv@divisor+2,w,c
 33182  00811E  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 33183  008120  5008               	movf	i2___lldiv@divisor+3,w,c
 33184  008122  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 33185  008124  8009               	bsf	i2___lldiv@quotient,0,c
 33186  008126  D000               	goto	i2l14159
 33187  008128                     i2l14159:
 33188  008128  90D8               	bcf	status,0,c
 33189  00812A  3208               	rrcf	i2___lldiv@divisor+3,f,c
 33190  00812C  3207               	rrcf	i2___lldiv@divisor+2,f,c
 33191  00812E  3206               	rrcf	i2___lldiv@divisor+1,f,c
 33192  008130  3205               	rrcf	i2___lldiv@divisor,f,c
 33193  008132  2E0D               	decfsz	i2___lldiv@counter,f,c
 33194  008134  D7E0               	goto	i2l14151
 33195  008136  D000               	goto	i2l2191
 33196  008138                     i2l2191:
 33197  008138  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 33198  00813C  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 33199  008140  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 33200  008144  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 33201  008148  0012               	return		;funcret
 33202  00814A                     __end_ofi2___lldiv:
 33203                           	opt stack 0
 33204                           pclatu	equ	0xFFB
 33205                           pclath	equ	0xFFA
 33206                           tblptru	equ	0xFF8
 33207                           tblptrh	equ	0xFF7
 33208                           tblptrl	equ	0xFF6
 33209                           tablat	equ	0xFF5
 33210                           prodh	equ	0xFF4
 33211                           prodl	equ	0xFF3
 33212                           intcon	equ	0xFF2
 33213                           intcon2	equ	0xFF1
 33214                           intcon3	equ	0xFF0
 33215                           postinc0	equ	0xFEE
 33216                           fsr0h	equ	0xFEA
 33217                           fsr0l	equ	0xFE9
 33218                           wreg	equ	0xFE8
 33219                           postdec1	equ	0xFE5
 33220                           fsr1h	equ	0xFE2
 33221                           fsr1l	equ	0xFE1
 33222                           indf2	equ	0xFDF
 33223                           postinc2	equ	0xFDE
 33224                           postdec2	equ	0xFDD
 33225                           fsr2h	equ	0xFDA
 33226                           fsr2l	equ	0xFD9
 33227                           status	equ	0xFD8
 33228                           
 33229 ;; *************** function i2___fttol *****************
 33230 ;; Defined at:
 33231 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
 33232 ;; Parameters:    Size  Location     Type
 33233 ;;  f1              3    0[COMRAM] float 
 33234 ;; Auto vars:     Size  Location     Type
 33235 ;;  __fttol         4   10[COMRAM] unsigned long 
 33236 ;;  __fttol         1   14[COMRAM] unsigned char 
 33237 ;;  __fttol         1    9[COMRAM] unsigned char 
 33238 ;; Return value:  Size  Location     Type
 33239 ;;                  4    0[COMRAM] long 
 33240 ;; Registers used:
 33241 ;;		wreg, status,2, status,0
 33242 ;; Tracked objects:
 33243 ;;		On entry : 0/0
 33244 ;;		On exit  : 0/0
 33245 ;;		Unchanged: 0/0
 33246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33247 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33248 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33249 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33250 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33251 ;;Total ram usage:       15 bytes
 33252 ;; Hardware stack levels used:    1
 33253 ;; This function calls:
 33254 ;;		Nothing
 33255 ;; This function is called by:
 33256 ;;		i2_printf
 33257 ;; This function uses a non-reentrant model
 33258 ;;
 33259                           
 33260                           	psect	text140
 33261  007082                     __ptext140:
 33262                           	opt stack 0
 33263  007082                     i2___fttol:
 33264                           	opt stack 17
 33265                           
 33266                           ;incstack = 0
 33267  007082  C003  F005         	movff	i2___fttol@f1+2,??i2___fttol
 33268  007086  6A06               	clrf	(??i2___fttol+1)& (0+255),c
 33269  007088  6A07               	clrf	(??i2___fttol+2)& (0+255),c
 33270  00708A  3402               	rlcf	i2___fttol@f1+1,w,c
 33271  00708C  3605               	rlcf	??i2___fttol& (0+255),f,c
 33272  00708E  E301               	bnc	u1631_41
 33273  007090  8006               	bsf	(??i2___fttol+1)& (0+255),0,c
 33274  007092                     u1631_41:
 33275  007092  5005               	movf	??i2___fttol,w,c
 33276  007094  6E0F               	movwf	i2___fttol@exp1,c
 33277  007096  500F               	movf	i2___fttol@exp1,w,c
 33278  007098  A4D8               	btfss	status,2,c
 33279  00709A  D002               	goto	i2l14089
 33280  00709C  D039               	goto	i2l14113
 33281  00709E  D063               	goto	i2l2147
 33282  0070A0                     i2l14089:
 33283  0070A0  0E17               	movlw	23
 33284  0070A2  6E05               	movwf	??i2___fttol& (0+255),c
 33285  0070A4  C001  F006         	movff	i2___fttol@f1,??i2___fttol+1
 33286  0070A8  C002  F007         	movff	i2___fttol@f1+1,??i2___fttol+2
 33287  0070AC  C003  F008         	movff	i2___fttol@f1+2,??i2___fttol+3
 33288  0070B0  2805               	incf	??i2___fttol,w,c
 33289  0070B2  6E09               	movwf	(??i2___fttol+4)& (0+255),c
 33290  0070B4  D004               	goto	i2u1633_40
 33291  0070B6                     i2u1633_45:
 33292  0070B6  90D8               	bcf	status,0,c
 33293  0070B8  3208               	rrcf	??i2___fttol+3,f,c
 33294  0070BA  3207               	rrcf	??i2___fttol+2,f,c
 33295  0070BC  3206               	rrcf	??i2___fttol+1,f,c
 33296  0070BE                     i2u1633_40:
 33297  0070BE  2E09               	decfsz	(??i2___fttol+4)& (0+255),f,c
 33298  0070C0  D7FA               	goto	i2u1633_45
 33299  0070C2  5006               	movf	??i2___fttol+1,w,c
 33300  0070C4  6E0A               	movwf	i2___fttol@sign1,c
 33301  0070C6  8E02               	bsf	i2___fttol@f1+1,7,c
 33302  0070C8  0EFF               	movlw	255
 33303  0070CA  1601               	andwf	i2___fttol@f1,f,c
 33304  0070CC  0EFF               	movlw	255
 33305  0070CE  1602               	andwf	i2___fttol@f1+1,f,c
 33306  0070D0  0E00               	movlw	0
 33307  0070D2  1603               	andwf	i2___fttol@f1+2,f,c
 33308  0070D4  5001               	movf	i2___fttol@f1,w,c
 33309  0070D6  6E0B               	movwf	i2___fttol@lval,c
 33310  0070D8  5002               	movf	i2___fttol@f1+1,w,c
 33311  0070DA  6E0C               	movwf	i2___fttol@lval+1,c
 33312  0070DC  5003               	movf	i2___fttol@f1+2,w,c
 33313  0070DE  6E0D               	movwf	i2___fttol@lval+2,c
 33314  0070E0  6A0E               	clrf	i2___fttol@lval+3,c
 33315  0070E2  0E8E               	movlw	142
 33316  0070E4  5E0F               	subwf	i2___fttol@exp1,f,c
 33317  0070E6  AE0F               	btfss	i2___fttol@exp1,7,c
 33318  0070E8  D010               	goto	i2l14111
 33319  0070EA  500F               	movf	i2___fttol@exp1,w,c
 33320  0070EC  0A80               	xorlw	128
 33321  0070EE  0F8F               	addlw	143
 33322  0070F0  B0D8               	btfsc	status,0,c
 33323  0070F2  D003               	goto	i2l14107
 33324  0070F4  D00D               	goto	i2l14113
 33325  0070F6  D037               	goto	i2l2147
 33326  0070F8  D000               	goto	i2l14107
 33327  0070FA                     i2l14107:
 33328  0070FA  90D8               	bcf	status,0,c
 33329  0070FC  320E               	rrcf	i2___fttol@lval+3,f,c
 33330  0070FE  320D               	rrcf	i2___fttol@lval+2,f,c
 33331  007100  320C               	rrcf	i2___fttol@lval+1,f,c
 33332  007102  320B               	rrcf	i2___fttol@lval,f,c
 33333  007104  3E0F               	incfsz	i2___fttol@exp1,f,c
 33334  007106  D7F9               	goto	i2l14107
 33335  007108  D019               	goto	i2l14121
 33336  00710A                     i2l14111:
 33337  00710A  0E17               	movlw	23
 33338  00710C  640F               	cpfsgt	i2___fttol@exp1,c
 33339  00710E  D011               	goto	i2l14119
 33340  007110                     i2l14113:
 33341  007110  0E00               	movlw	0
 33342  007112  6E01               	movwf	?i2___fttol,c
 33343  007114  0E00               	movlw	0
 33344  007116  6E02               	movwf	?i2___fttol+1,c
 33345  007118  0E00               	movlw	0
 33346  00711A  6E03               	movwf	?i2___fttol+2,c
 33347  00711C  0E00               	movlw	0
 33348  00711E  6E04               	movwf	?i2___fttol+3,c
 33349  007120  D022               	goto	i2l2147
 33350  007122  D007               	goto	i2l14119
 33351  007124                     i2l14117:
 33352  007124  90D8               	bcf	status,0,c
 33353  007126  360B               	rlcf	i2___fttol@lval,f,c
 33354  007128  360C               	rlcf	i2___fttol@lval+1,f,c
 33355  00712A  360D               	rlcf	i2___fttol@lval+2,f,c
 33356  00712C  360E               	rlcf	i2___fttol@lval+3,f,c
 33357  00712E  060F               	decf	i2___fttol@exp1,f,c
 33358  007130  D000               	goto	i2l14119
 33359  007132                     i2l14119:
 33360  007132  500F               	movf	i2___fttol@exp1,w,c
 33361  007134  B4D8               	btfsc	status,2,c
 33362  007136  D002               	goto	i2l14121
 33363  007138  D7F5               	goto	i2l14117
 33364  00713A  D000               	goto	i2l14121
 33365  00713C                     i2l14121:
 33366  00713C  500A               	movf	i2___fttol@sign1,w,c
 33367  00713E  B4D8               	btfsc	status,2,c
 33368  007140  D009               	goto	i2l14125
 33369  007142  1E0E               	comf	i2___fttol@lval+3,f,c
 33370  007144  1E0D               	comf	i2___fttol@lval+2,f,c
 33371  007146  1E0C               	comf	i2___fttol@lval+1,f,c
 33372  007148  6C0B               	negf	i2___fttol@lval,c
 33373  00714A  0E00               	movlw	0
 33374  00714C  220C               	addwfc	i2___fttol@lval+1,f,c
 33375  00714E  220D               	addwfc	i2___fttol@lval+2,f,c
 33376  007150  220E               	addwfc	i2___fttol@lval+3,f,c
 33377  007152  D000               	goto	i2l14125
 33378  007154                     i2l14125:
 33379  007154  C00B  F001         	movff	i2___fttol@lval,?i2___fttol
 33380  007158  C00C  F002         	movff	i2___fttol@lval+1,?i2___fttol+1
 33381  00715C  C00D  F003         	movff	i2___fttol@lval+2,?i2___fttol+2
 33382  007160  C00E  F004         	movff	i2___fttol@lval+3,?i2___fttol+3
 33383  007164  D000               	goto	i2l2147
 33384  007166                     i2l2147:
 33385  007166  0012               	return		;funcret
 33386  007168                     __end_ofi2___fttol:
 33387                           	opt stack 0
 33388                           pclatu	equ	0xFFB
 33389                           pclath	equ	0xFFA
 33390                           tblptru	equ	0xFF8
 33391                           tblptrh	equ	0xFF7
 33392                           tblptrl	equ	0xFF6
 33393                           tablat	equ	0xFF5
 33394                           prodh	equ	0xFF4
 33395                           prodl	equ	0xFF3
 33396                           intcon	equ	0xFF2
 33397                           intcon2	equ	0xFF1
 33398                           intcon3	equ	0xFF0
 33399                           postinc0	equ	0xFEE
 33400                           fsr0h	equ	0xFEA
 33401                           fsr0l	equ	0xFE9
 33402                           wreg	equ	0xFE8
 33403                           postdec1	equ	0xFE5
 33404                           fsr1h	equ	0xFE2
 33405                           fsr1l	equ	0xFE1
 33406                           indf2	equ	0xFDF
 33407                           postinc2	equ	0xFDE
 33408                           postdec2	equ	0xFDD
 33409                           fsr2h	equ	0xFDA
 33410                           fsr2l	equ	0xFD9
 33411                           status	equ	0xFD8
 33412                           
 33413 ;; *************** function i2___ftsub *****************
 33414 ;; Defined at:
 33415 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
 33416 ;; Parameters:    Size  Location     Type
 33417 ;;  f1              3   64[COMRAM] float 
 33418 ;;  f2              3   67[COMRAM] float 
 33419 ;; Auto vars:     Size  Location     Type
 33420 ;;		None
 33421 ;; Return value:  Size  Location     Type
 33422 ;;                  3   64[COMRAM] float 
 33423 ;; Registers used:
 33424 ;;		wreg, status,2, status,0, cstack
 33425 ;; Tracked objects:
 33426 ;;		On entry : 0/0
 33427 ;;		On exit  : 0/0
 33428 ;;		Unchanged: 0/0
 33429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33430 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33433 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33434 ;;Total ram usage:        6 bytes
 33435 ;; Hardware stack levels used:    1
 33436 ;; Hardware stack levels required when called:    2
 33437 ;; This function calls:
 33438 ;;		i2___ftadd
 33439 ;; This function is called by:
 33440 ;;		i2_printf
 33441 ;; This function uses a non-reentrant model
 33442 ;;
 33443                           
 33444                           	psect	text141
 33445  008C02                     __ptext141:
 33446                           	opt stack 0
 33447  008C02                     i2___ftsub:
 33448                           	opt stack 15
 33449                           
 33450                           ;incstack = 0
 33451  008C02  5044               	movf	i2___ftsub@f2,w,c
 33452  008C04  1045               	iorwf	i2___ftsub@f2+1,w,c
 33453  008C06  1046               	iorwf	i2___ftsub@f2+2,w,c
 33454  008C08  B4D8               	btfsc	status,2,c
 33455  008C0A  D007               	goto	i2l14079
 33456  008C0C  0E00               	movlw	0
 33457  008C0E  1A44               	xorwf	i2___ftsub@f2,f,c
 33458  008C10  0E00               	movlw	0
 33459  008C12  1A45               	xorwf	i2___ftsub@f2+1,f,c
 33460  008C14  0E80               	movlw	128
 33461  008C16  1A46               	xorwf	i2___ftsub@f2+2,f,c
 33462  008C18  D000               	goto	i2l14079
 33463  008C1A                     i2l14079:
 33464  008C1A  C041  F035         	movff	i2___ftsub@f1,i2___ftadd@f1
 33465  008C1E  C042  F036         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 33466  008C22  C043  F037         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 33467  008C26  C044  F038         	movff	i2___ftsub@f2,i2___ftadd@f2
 33468  008C2A  C045  F039         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 33469  008C2E  C046  F03A         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 33470  008C32  ECC1  F02B         	call	i2___ftadd	;wreg free
 33471  008C36  C035  F041         	movff	?i2___ftadd,?i2___ftsub
 33472  008C3A  C036  F042         	movff	?i2___ftadd+1,?i2___ftsub+1
 33473  008C3E  C037  F043         	movff	?i2___ftadd+2,?i2___ftsub+2
 33474  008C42  D000               	goto	i2l2143
 33475  008C44                     i2l2143:
 33476  008C44  0012               	return		;funcret
 33477  008C46                     __end_ofi2___ftsub:
 33478                           	opt stack 0
 33479                           pclatu	equ	0xFFB
 33480                           pclath	equ	0xFFA
 33481                           tblptru	equ	0xFF8
 33482                           tblptrh	equ	0xFF7
 33483                           tblptrl	equ	0xFF6
 33484                           tablat	equ	0xFF5
 33485                           prodh	equ	0xFF4
 33486                           prodl	equ	0xFF3
 33487                           intcon	equ	0xFF2
 33488                           intcon2	equ	0xFF1
 33489                           intcon3	equ	0xFF0
 33490                           postinc0	equ	0xFEE
 33491                           fsr0h	equ	0xFEA
 33492                           fsr0l	equ	0xFE9
 33493                           wreg	equ	0xFE8
 33494                           postdec1	equ	0xFE5
 33495                           fsr1h	equ	0xFE2
 33496                           fsr1l	equ	0xFE1
 33497                           indf2	equ	0xFDF
 33498                           postinc2	equ	0xFDE
 33499                           postdec2	equ	0xFDD
 33500                           fsr2h	equ	0xFDA
 33501                           fsr2l	equ	0xFD9
 33502                           status	equ	0xFD8
 33503                           
 33504 ;; *************** function i2___ftadd *****************
 33505 ;; Defined at:
 33506 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
 33507 ;; Parameters:    Size  Location     Type
 33508 ;;  f1              3   52[COMRAM] float 
 33509 ;;  f2              3   55[COMRAM] float 
 33510 ;; Auto vars:     Size  Location     Type
 33511 ;;  __ftadd         1   63[COMRAM] unsigned char 
 33512 ;;  __ftadd         1   62[COMRAM] unsigned char 
 33513 ;;  __ftadd         1   61[COMRAM] unsigned char 
 33514 ;; Return value:  Size  Location     Type
 33515 ;;                  3   52[COMRAM] float 
 33516 ;; Registers used:
 33517 ;;		wreg, status,2, status,0, cstack
 33518 ;; Tracked objects:
 33519 ;;		On entry : 0/0
 33520 ;;		On exit  : 0/0
 33521 ;;		Unchanged: 0/0
 33522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33523 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33524 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33525 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33526 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33527 ;;Total ram usage:       12 bytes
 33528 ;; Hardware stack levels used:    1
 33529 ;; Hardware stack levels required when called:    1
 33530 ;; This function calls:
 33531 ;;		i2___ftpack
 33532 ;; This function is called by:
 33533 ;;		i2_printf
 33534 ;;		i2___ftsub
 33535 ;; This function uses a non-reentrant model
 33536 ;;
 33537                           
 33538                           	psect	text142
 33539  005782                     __ptext142:
 33540                           	opt stack 0
 33541  005782                     i2___ftadd:
 33542                           	opt stack 15
 33543                           
 33544                           ;incstack = 0
 33545  005782  C037  F03B         	movff	i2___ftadd@f1+2,??i2___ftadd
 33546  005786  6A3C               	clrf	(??i2___ftadd+1)& (0+255),c
 33547  005788  6A3D               	clrf	(??i2___ftadd+2)& (0+255),c
 33548  00578A  3436               	rlcf	i2___ftadd@f1+1,w,c
 33549  00578C  363B               	rlcf	??i2___ftadd& (0+255),f,c
 33550  00578E  E301               	bnc	u1569_41
 33551  005790  803C               	bsf	(??i2___ftadd+1)& (0+255),0,c
 33552  005792                     u1569_41:
 33553  005792  503B               	movf	??i2___ftadd,w,c
 33554  005794  6E40               	movwf	i2___ftadd@exp1,c
 33555  005796  C03A  F03B         	movff	i2___ftadd@f2+2,??i2___ftadd
 33556  00579A  6A3C               	clrf	(??i2___ftadd+1)& (0+255),c
 33557  00579C  6A3D               	clrf	(??i2___ftadd+2)& (0+255),c
 33558  00579E  3439               	rlcf	i2___ftadd@f2+1,w,c
 33559  0057A0  363B               	rlcf	??i2___ftadd& (0+255),f,c
 33560  0057A2  E301               	bnc	u1570_41
 33561  0057A4  803C               	bsf	(??i2___ftadd+1)& (0+255),0,c
 33562  0057A6                     u1570_41:
 33563  0057A6  503B               	movf	??i2___ftadd,w,c
 33564  0057A8  6E3F               	movwf	i2___ftadd@exp2,c
 33565  0057AA  5040               	movf	i2___ftadd@exp1,w,c
 33566  0057AC  B4D8               	btfsc	status,2,c
 33567  0057AE  D00B               	goto	i2l2062
 33568  0057B0  503F               	movf	i2___ftadd@exp2,w,c
 33569  0057B2  5C40               	subwf	i2___ftadd@exp1,w,c
 33570  0057B4  B0D8               	btfsc	status,0,c
 33571  0057B6  D00E               	goto	i2l13563
 33572  0057B8  5040               	movf	i2___ftadd@exp1,w,c
 33573  0057BA  0800               	sublw	0
 33574  0057BC  243F               	addwf	i2___ftadd@exp2,w,c
 33575  0057BE  6E3B               	movwf	??i2___ftadd& (0+255),c
 33576  0057C0  0E18               	movlw	24
 33577  0057C2  643B               	cpfsgt	??i2___ftadd,c
 33578  0057C4  D007               	goto	i2l13563
 33579  0057C6                     i2l2062:
 33580  0057C6  C038  F035         	movff	i2___ftadd@f2,?i2___ftadd
 33581  0057CA  C039  F036         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 33582  0057CE  C03A  F037         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 33583  0057D2  D0B8               	goto	i2l2063
 33584  0057D4                     i2l13563:
 33585  0057D4  503F               	movf	i2___ftadd@exp2,w,c
 33586  0057D6  B4D8               	btfsc	status,2,c
 33587  0057D8  D00B               	goto	i2l2066
 33588  0057DA  5040               	movf	i2___ftadd@exp1,w,c
 33589  0057DC  5C3F               	subwf	i2___ftadd@exp2,w,c
 33590  0057DE  B0D8               	btfsc	status,0,c
 33591  0057E0  D00E               	goto	i2l13569
 33592  0057E2  503F               	movf	i2___ftadd@exp2,w,c
 33593  0057E4  0800               	sublw	0
 33594  0057E6  2440               	addwf	i2___ftadd@exp1,w,c
 33595  0057E8  6E3B               	movwf	??i2___ftadd& (0+255),c
 33596  0057EA  0E18               	movlw	24
 33597  0057EC  643B               	cpfsgt	??i2___ftadd,c
 33598  0057EE  D007               	goto	i2l13569
 33599  0057F0                     i2l2066:
 33600  0057F0  C035  F035         	movff	i2___ftadd@f1,?i2___ftadd
 33601  0057F4  C036  F036         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 33602  0057F8  C037  F037         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 33603  0057FC  D0A3               	goto	i2l2063
 33604  0057FE                     i2l13569:
 33605  0057FE  0E06               	movlw	6
 33606  005800  6E3E               	movwf	i2___ftadd@sign,c
 33607  005802  AE37               	btfss	i2___ftadd@f1+2,7,c
 33608  005804  D002               	goto	i2l13575
 33609  005806  8E3E               	bsf	i2___ftadd@sign,7,c
 33610  005808  D000               	goto	i2l13575
 33611  00580A                     i2l13575:
 33612  00580A  BE3A               	btfsc	i2___ftadd@f2+2,7,c
 33613  00580C  8C3E               	bsf	i2___ftadd@sign,6,c
 33614  00580E  8E36               	bsf	i2___ftadd@f1+1,7,c
 33615  005810  0EFF               	movlw	255
 33616  005812  1635               	andwf	i2___ftadd@f1,f,c
 33617  005814  0EFF               	movlw	255
 33618  005816  1636               	andwf	i2___ftadd@f1+1,f,c
 33619  005818  0E00               	movlw	0
 33620  00581A  1637               	andwf	i2___ftadd@f1+2,f,c
 33621  00581C  8E39               	bsf	i2___ftadd@f2+1,7,c
 33622  00581E  0EFF               	movlw	255
 33623  005820  1638               	andwf	i2___ftadd@f2,f,c
 33624  005822  0EFF               	movlw	255
 33625  005824  1639               	andwf	i2___ftadd@f2+1,f,c
 33626  005826  0E00               	movlw	0
 33627  005828  163A               	andwf	i2___ftadd@f2+2,f,c
 33628  00582A  503F               	movf	i2___ftadd@exp2,w,c
 33629  00582C  5C40               	subwf	i2___ftadd@exp1,w,c
 33630  00582E  B0D8               	btfsc	status,0,c
 33631  005830  D01E               	goto	i2l13595
 33632  005832                     i2l13585:
 33633  005832  90D8               	bcf	status,0,c
 33634  005834  3638               	rlcf	i2___ftadd@f2,f,c
 33635  005836  3639               	rlcf	i2___ftadd@f2+1,f,c
 33636  005838  363A               	rlcf	i2___ftadd@f2+2,f,c
 33637  00583A  063F               	decf	i2___ftadd@exp2,f,c
 33638  00583C  5040               	movf	i2___ftadd@exp1,w,c
 33639  00583E  183F               	xorwf	i2___ftadd@exp2,w,c
 33640  005840  B4D8               	btfsc	status,2,c
 33641  005842  D00F               	goto	i2l13593
 33642  005844  063E               	decf	i2___ftadd@sign,f,c
 33643  005846  C03E  F03B         	movff	i2___ftadd@sign,??i2___ftadd
 33644  00584A  0E07               	movlw	7
 33645  00584C  163B               	andwf	??i2___ftadd,f,c
 33646  00584E  B4D8               	btfsc	status,2,c
 33647  005850  D008               	goto	i2l13593
 33648  005852  D7EF               	goto	i2l13585
 33649  005854  D006               	goto	i2l13593
 33650  005856                     i2l13591:
 33651  005856  90D8               	bcf	status,0,c
 33652  005858  3237               	rrcf	i2___ftadd@f1+2,f,c
 33653  00585A  3236               	rrcf	i2___ftadd@f1+1,f,c
 33654  00585C  3235               	rrcf	i2___ftadd@f1,f,c
 33655  00585E  2A40               	incf	i2___ftadd@exp1,f,c
 33656  005860  D000               	goto	i2l13593
 33657  005862                     i2l13593:
 33658  005862  503F               	movf	i2___ftadd@exp2,w,c
 33659  005864  1840               	xorwf	i2___ftadd@exp1,w,c
 33660  005866  B4D8               	btfsc	status,2,c
 33661  005868  D024               	goto	i2l2077
 33662  00586A  D7F5               	goto	i2l13591
 33663  00586C  D022               	goto	i2l2077
 33664  00586E                     i2l13595:
 33665  00586E  5040               	movf	i2___ftadd@exp1,w,c
 33666  005870  5C3F               	subwf	i2___ftadd@exp2,w,c
 33667  005872  B0D8               	btfsc	status,0,c
 33668  005874  D01E               	goto	i2l2077
 33669  005876                     i2l13597:
 33670  005876  90D8               	bcf	status,0,c
 33671  005878  3635               	rlcf	i2___ftadd@f1,f,c
 33672  00587A  3636               	rlcf	i2___ftadd@f1+1,f,c
 33673  00587C  3637               	rlcf	i2___ftadd@f1+2,f,c
 33674  00587E  0640               	decf	i2___ftadd@exp1,f,c
 33675  005880  5040               	movf	i2___ftadd@exp1,w,c
 33676  005882  183F               	xorwf	i2___ftadd@exp2,w,c
 33677  005884  B4D8               	btfsc	status,2,c
 33678  005886  D00F               	goto	i2l13605
 33679  005888  063E               	decf	i2___ftadd@sign,f,c
 33680  00588A  C03E  F03B         	movff	i2___ftadd@sign,??i2___ftadd
 33681  00588E  0E07               	movlw	7
 33682  005890  163B               	andwf	??i2___ftadd,f,c
 33683  005892  B4D8               	btfsc	status,2,c
 33684  005894  D008               	goto	i2l13605
 33685  005896  D7EF               	goto	i2l13597
 33686  005898  D006               	goto	i2l13605
 33687  00589A                     i2l13603:
 33688  00589A  90D8               	bcf	status,0,c
 33689  00589C  323A               	rrcf	i2___ftadd@f2+2,f,c
 33690  00589E  3239               	rrcf	i2___ftadd@f2+1,f,c
 33691  0058A0  3238               	rrcf	i2___ftadd@f2,f,c
 33692  0058A2  2A3F               	incf	i2___ftadd@exp2,f,c
 33693  0058A4  D000               	goto	i2l13605
 33694  0058A6                     i2l13605:
 33695  0058A6  503F               	movf	i2___ftadd@exp2,w,c
 33696  0058A8  1840               	xorwf	i2___ftadd@exp1,w,c
 33697  0058AA  B4D8               	btfsc	status,2,c
 33698  0058AC  D002               	goto	i2l2077
 33699  0058AE  D7F5               	goto	i2l13603
 33700  0058B0  D000               	goto	i2l2077
 33701  0058B2                     i2l2077:
 33702  0058B2  AE3E               	btfss	i2___ftadd@sign,7,c
 33703  0058B4  D00C               	goto	i2l2086
 33704  0058B6  0EFF               	movlw	255
 33705  0058B8  1A35               	xorwf	i2___ftadd@f1,f,c
 33706  0058BA  0EFF               	movlw	255
 33707  0058BC  1A36               	xorwf	i2___ftadd@f1+1,f,c
 33708  0058BE  0EFF               	movlw	255
 33709  0058C0  1A37               	xorwf	i2___ftadd@f1+2,f,c
 33710  0058C2  0E01               	movlw	1
 33711  0058C4  2635               	addwf	i2___ftadd@f1,f,c
 33712  0058C6  0E00               	movlw	0
 33713  0058C8  2236               	addwfc	i2___ftadd@f1+1,f,c
 33714  0058CA  0E00               	movlw	0
 33715  0058CC  2237               	addwfc	i2___ftadd@f1+2,f,c
 33716  0058CE                     i2l2086:
 33717  0058CE  AC3E               	btfss	i2___ftadd@sign,6,c
 33718  0058D0  D00D               	goto	i2l13611
 33719  0058D2  0EFF               	movlw	255
 33720  0058D4  1A38               	xorwf	i2___ftadd@f2,f,c
 33721  0058D6  0EFF               	movlw	255
 33722  0058D8  1A39               	xorwf	i2___ftadd@f2+1,f,c
 33723  0058DA  0EFF               	movlw	255
 33724  0058DC  1A3A               	xorwf	i2___ftadd@f2+2,f,c
 33725  0058DE  0E01               	movlw	1
 33726  0058E0  2638               	addwf	i2___ftadd@f2,f,c
 33727  0058E2  0E00               	movlw	0
 33728  0058E4  2239               	addwfc	i2___ftadd@f2+1,f,c
 33729  0058E6  0E00               	movlw	0
 33730  0058E8  223A               	addwfc	i2___ftadd@f2+2,f,c
 33731  0058EA  D000               	goto	i2l13611
 33732  0058EC                     i2l13611:
 33733  0058EC  0E00               	movlw	0
 33734  0058EE  6E3E               	movwf	i2___ftadd@sign,c
 33735  0058F0  5035               	movf	i2___ftadd@f1,w,c
 33736  0058F2  2638               	addwf	i2___ftadd@f2,f,c
 33737  0058F4  5036               	movf	i2___ftadd@f1+1,w,c
 33738  0058F6  2239               	addwfc	i2___ftadd@f2+1,f,c
 33739  0058F8  5037               	movf	i2___ftadd@f1+2,w,c
 33740  0058FA  223A               	addwfc	i2___ftadd@f2+2,f,c
 33741  0058FC  AE3A               	btfss	i2___ftadd@f2+2,7,c
 33742  0058FE  D00F               	goto	i2l13621
 33743  005900  0EFF               	movlw	255
 33744  005902  1A38               	xorwf	i2___ftadd@f2,f,c
 33745  005904  0EFF               	movlw	255
 33746  005906  1A39               	xorwf	i2___ftadd@f2+1,f,c
 33747  005908  0EFF               	movlw	255
 33748  00590A  1A3A               	xorwf	i2___ftadd@f2+2,f,c
 33749  00590C  0E01               	movlw	1
 33750  00590E  2638               	addwf	i2___ftadd@f2,f,c
 33751  005910  0E00               	movlw	0
 33752  005912  2239               	addwfc	i2___ftadd@f2+1,f,c
 33753  005914  0E00               	movlw	0
 33754  005916  223A               	addwfc	i2___ftadd@f2+2,f,c
 33755  005918  0E01               	movlw	1
 33756  00591A  6E3E               	movwf	i2___ftadd@sign,c
 33757  00591C  D000               	goto	i2l13621
 33758  00591E                     i2l13621:
 33759  00591E  C038  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 33760  005922  C039  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 33761  005926  C03A  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 33762  00592A  C040  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 33763  00592E  C03E  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 33764  005932  ECA6  F03B         	call	i2___ftpack	;wreg free
 33765  005936  C001  F035         	movff	?i2___ftpack,?i2___ftadd
 33766  00593A  C002  F036         	movff	?i2___ftpack+1,?i2___ftadd+1
 33767  00593E  C003  F037         	movff	?i2___ftpack+2,?i2___ftadd+2
 33768  005942  D000               	goto	i2l2063
 33769  005944                     i2l2063:
 33770  005944  0012               	return		;funcret
 33771  005946                     __end_ofi2___ftadd:
 33772                           	opt stack 0
 33773                           pclatu	equ	0xFFB
 33774                           pclath	equ	0xFFA
 33775                           tblptru	equ	0xFF8
 33776                           tblptrh	equ	0xFF7
 33777                           tblptrl	equ	0xFF6
 33778                           tablat	equ	0xFF5
 33779                           prodh	equ	0xFF4
 33780                           prodl	equ	0xFF3
 33781                           intcon	equ	0xFF2
 33782                           intcon2	equ	0xFF1
 33783                           intcon3	equ	0xFF0
 33784                           postinc0	equ	0xFEE
 33785                           fsr0h	equ	0xFEA
 33786                           fsr0l	equ	0xFE9
 33787                           wreg	equ	0xFE8
 33788                           postdec1	equ	0xFE5
 33789                           fsr1h	equ	0xFE2
 33790                           fsr1l	equ	0xFE1
 33791                           indf2	equ	0xFDF
 33792                           postinc2	equ	0xFDE
 33793                           postdec2	equ	0xFDD
 33794                           fsr2h	equ	0xFDA
 33795                           fsr2l	equ	0xFD9
 33796                           status	equ	0xFD8
 33797                           
 33798 ;; *************** function i2___ftneg *****************
 33799 ;; Defined at:
 33800 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
 33801 ;; Parameters:    Size  Location     Type
 33802 ;;  f1              3   24[COMRAM] float 
 33803 ;; Auto vars:     Size  Location     Type
 33804 ;;		None
 33805 ;; Return value:  Size  Location     Type
 33806 ;;                  3   24[COMRAM] float 
 33807 ;; Registers used:
 33808 ;;		wreg, status,2, status,0
 33809 ;; Tracked objects:
 33810 ;;		On entry : 0/0
 33811 ;;		On exit  : 0/0
 33812 ;;		Unchanged: 0/0
 33813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33814 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33817 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33818 ;;Total ram usage:        3 bytes
 33819 ;; Hardware stack levels used:    1
 33820 ;; This function calls:
 33821 ;;		Nothing
 33822 ;; This function is called by:
 33823 ;;		i2_printf
 33824 ;; This function uses a non-reentrant model
 33825 ;;
 33826                           
 33827                           	psect	text143
 33828  008F52                     __ptext143:
 33829                           	opt stack 0
 33830  008F52                     i2___ftneg:
 33831                           	opt stack 17
 33832                           
 33833                           ;incstack = 0
 33834  008F52  5019               	movf	i2___ftneg@f1,w,c
 33835  008F54  101A               	iorwf	i2___ftneg@f1+1,w,c
 33836  008F56  101B               	iorwf	i2___ftneg@f1+2,w,c
 33837  008F58  B4D8               	btfsc	status,2,c
 33838  008F5A  D006               	goto	i2l2136
 33839  008F5C  0E00               	movlw	0
 33840  008F5E  1A19               	xorwf	i2___ftneg@f1,f,c
 33841  008F60  0E00               	movlw	0
 33842  008F62  1A1A               	xorwf	i2___ftneg@f1+1,f,c
 33843  008F64  0E80               	movlw	128
 33844  008F66  1A1B               	xorwf	i2___ftneg@f1+2,f,c
 33845  008F68                     i2l2136:
 33846  008F68  C019  F019         	movff	i2___ftneg@f1,?i2___ftneg
 33847  008F6C  C01A  F01A         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 33848  008F70  C01B  F01B         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 33849  008F74  0012               	return		;funcret
 33850  008F76                     __end_ofi2___ftneg:
 33851                           	opt stack 0
 33852                           pclatu	equ	0xFFB
 33853                           pclath	equ	0xFFA
 33854                           tblptru	equ	0xFF8
 33855                           tblptrh	equ	0xFF7
 33856                           tblptrl	equ	0xFF6
 33857                           tablat	equ	0xFF5
 33858                           prodh	equ	0xFF4
 33859                           prodl	equ	0xFF3
 33860                           intcon	equ	0xFF2
 33861                           intcon2	equ	0xFF1
 33862                           intcon3	equ	0xFF0
 33863                           postinc0	equ	0xFEE
 33864                           fsr0h	equ	0xFEA
 33865                           fsr0l	equ	0xFE9
 33866                           wreg	equ	0xFE8
 33867                           postdec1	equ	0xFE5
 33868                           fsr1h	equ	0xFE2
 33869                           fsr1l	equ	0xFE1
 33870                           indf2	equ	0xFDF
 33871                           postinc2	equ	0xFDE
 33872                           postdec2	equ	0xFDD
 33873                           fsr2h	equ	0xFDA
 33874                           fsr2l	equ	0xFD9
 33875                           status	equ	0xFD8
 33876                           
 33877 ;; *************** function i2___ftge *****************
 33878 ;; Defined at:
 33879 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
 33880 ;; Parameters:    Size  Location     Type
 33881 ;;  ff1             3   64[COMRAM] float 
 33882 ;;  ff2             3   67[COMRAM] float 
 33883 ;; Auto vars:     Size  Location     Type
 33884 ;;		None
 33885 ;; Return value:  Size  Location     Type
 33886 ;;		None               void
 33887 ;; Registers used:
 33888 ;;		wreg, status,2, status,0
 33889 ;; Tracked objects:
 33890 ;;		On entry : 0/0
 33891 ;;		On exit  : 0/0
 33892 ;;		Unchanged: 0/0
 33893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33894 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33896 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33897 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33898 ;;Total ram usage:        9 bytes
 33899 ;; Hardware stack levels used:    1
 33900 ;; This function calls:
 33901 ;;		Nothing
 33902 ;; This function is called by:
 33903 ;;		i2_printf
 33904 ;; This function uses a non-reentrant model
 33905 ;;
 33906                           
 33907                           	psect	text144
 33908  008028                     __ptext144:
 33909                           	opt stack 0
 33910  008028                     i2___ftge:
 33911                           	opt stack 17
 33912                           
 33913                           ;incstack = 0
 33914  008028  AE43               	btfss	i2___ftge@ff1+2,7,c
 33915  00802A  D017               	goto	i2l14057
 33916  00802C  C041  F047         	movff	i2___ftge@ff1,??i2___ftge
 33917  008030  C042  F048         	movff	i2___ftge@ff1+1,??i2___ftge+1
 33918  008034  C043  F049         	movff	i2___ftge@ff1+2,??i2___ftge+2
 33919  008038  1E47               	comf	??i2___ftge,f,c
 33920  00803A  1E48               	comf	??i2___ftge+1,f,c
 33921  00803C  1E49               	comf	??i2___ftge+2,f,c
 33922  00803E  2A47               	incf	??i2___ftge,f,c
 33923  008040  0E00               	movlw	0
 33924  008042  2248               	addwfc	??i2___ftge+1,f,c
 33925  008044  2249               	addwfc	??i2___ftge+2,f,c
 33926  008046  0E00               	movlw	0
 33927  008048  2447               	addwf	??i2___ftge,w,c
 33928  00804A  6E41               	movwf	i2___ftge@ff1,c
 33929  00804C  0E00               	movlw	0
 33930  00804E  2048               	addwfc	??i2___ftge+1,w,c
 33931  008050  6E42               	movwf	i2___ftge@ff1+1,c
 33932  008052  0E80               	movlw	128
 33933  008054  2049               	addwfc	??i2___ftge+2,w,c
 33934  008056  6E43               	movwf	i2___ftge@ff1+2,c
 33935  008058  D000               	goto	i2l14057
 33936  00805A                     i2l14057:
 33937  00805A  AE46               	btfss	i2___ftge@ff2+2,7,c
 33938  00805C  D017               	goto	i2l14061
 33939  00805E  C044  F047         	movff	i2___ftge@ff2,??i2___ftge
 33940  008062  C045  F048         	movff	i2___ftge@ff2+1,??i2___ftge+1
 33941  008066  C046  F049         	movff	i2___ftge@ff2+2,??i2___ftge+2
 33942  00806A  1E47               	comf	??i2___ftge,f,c
 33943  00806C  1E48               	comf	??i2___ftge+1,f,c
 33944  00806E  1E49               	comf	??i2___ftge+2,f,c
 33945  008070  2A47               	incf	??i2___ftge,f,c
 33946  008072  0E00               	movlw	0
 33947  008074  2248               	addwfc	??i2___ftge+1,f,c
 33948  008076  2249               	addwfc	??i2___ftge+2,f,c
 33949  008078  0E00               	movlw	0
 33950  00807A  2447               	addwf	??i2___ftge,w,c
 33951  00807C  6E44               	movwf	i2___ftge@ff2,c
 33952  00807E  0E00               	movlw	0
 33953  008080  2048               	addwfc	??i2___ftge+1,w,c
 33954  008082  6E45               	movwf	i2___ftge@ff2+1,c
 33955  008084  0E80               	movlw	128
 33956  008086  2049               	addwfc	??i2___ftge+2,w,c
 33957  008088  6E46               	movwf	i2___ftge@ff2+2,c
 33958  00808A  D000               	goto	i2l14061
 33959  00808C                     i2l14061:
 33960  00808C  0E00               	movlw	0
 33961  00808E  1A41               	xorwf	i2___ftge@ff1,f,c
 33962  008090  0E00               	movlw	0
 33963  008092  1A42               	xorwf	i2___ftge@ff1+1,f,c
 33964  008094  0E80               	movlw	128
 33965  008096  1A43               	xorwf	i2___ftge@ff1+2,f,c
 33966  008098  0E00               	movlw	0
 33967  00809A  1A44               	xorwf	i2___ftge@ff2,f,c
 33968  00809C  0E00               	movlw	0
 33969  00809E  1A45               	xorwf	i2___ftge@ff2+1,f,c
 33970  0080A0  0E80               	movlw	128
 33971  0080A2  1A46               	xorwf	i2___ftge@ff2+2,f,c
 33972  0080A4  5044               	movf	i2___ftge@ff2,w,c
 33973  0080A6  5C41               	subwf	i2___ftge@ff1,w,c
 33974  0080A8  5045               	movf	i2___ftge@ff2+1,w,c
 33975  0080AA  5842               	subwfb	i2___ftge@ff1+1,w,c
 33976  0080AC  5046               	movf	i2___ftge@ff2+2,w,c
 33977  0080AE  5843               	subwfb	i2___ftge@ff1+2,w,c
 33978  0080B0  B0D8               	btfsc	status,0,c
 33979  0080B2  D002               	goto	i2l14067
 33980  0080B4  90D8               	bcf	status,0,c
 33981  0080B6  D002               	goto	i2l2120
 33982  0080B8                     i2l14067:
 33983  0080B8  80D8               	bsf	status,0,c
 33984  0080BA  D000               	goto	i2l2120
 33985  0080BC                     i2l2120:
 33986  0080BC  0012               	return		;funcret
 33987  0080BE                     __end_ofi2___ftge:
 33988                           	opt stack 0
 33989                           pclatu	equ	0xFFB
 33990                           pclath	equ	0xFFA
 33991                           tblptru	equ	0xFF8
 33992                           tblptrh	equ	0xFF7
 33993                           tblptrl	equ	0xFF6
 33994                           tablat	equ	0xFF5
 33995                           prodh	equ	0xFF4
 33996                           prodl	equ	0xFF3
 33997                           intcon	equ	0xFF2
 33998                           intcon2	equ	0xFF1
 33999                           intcon3	equ	0xFF0
 34000                           postinc0	equ	0xFEE
 34001                           fsr0h	equ	0xFEA
 34002                           fsr0l	equ	0xFE9
 34003                           wreg	equ	0xFE8
 34004                           postdec1	equ	0xFE5
 34005                           fsr1h	equ	0xFE2
 34006                           fsr1l	equ	0xFE1
 34007                           indf2	equ	0xFDF
 34008                           postinc2	equ	0xFDE
 34009                           postdec2	equ	0xFDD
 34010                           fsr2h	equ	0xFDA
 34011                           fsr2l	equ	0xFD9
 34012                           status	equ	0xFD8
 34013                           
 34014 ;; *************** function i2___ftdiv *****************
 34015 ;; Defined at:
 34016 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
 34017 ;; Parameters:    Size  Location     Type
 34018 ;;  f1              3   49[COMRAM] float 
 34019 ;;  f2              3   52[COMRAM] float 
 34020 ;; Auto vars:     Size  Location     Type
 34021 ;;  __ftdiv         3   59[COMRAM] float 
 34022 ;;  __ftdiv         1   63[COMRAM] unsigned char 
 34023 ;;  __ftdiv         1   62[COMRAM] unsigned char 
 34024 ;;  __ftdiv         1   58[COMRAM] unsigned char 
 34025 ;; Return value:  Size  Location     Type
 34026 ;;                  3   49[COMRAM] float 
 34027 ;; Registers used:
 34028 ;;		wreg, status,2, status,0, cstack
 34029 ;; Tracked objects:
 34030 ;;		On entry : 0/0
 34031 ;;		On exit  : 0/0
 34032 ;;		Unchanged: 0/0
 34033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34034 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34035 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34036 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34037 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34038 ;;Total ram usage:       15 bytes
 34039 ;; Hardware stack levels used:    1
 34040 ;; Hardware stack levels required when called:    1
 34041 ;; This function calls:
 34042 ;;		i2___ftpack
 34043 ;; This function is called by:
 34044 ;;		i2_printf
 34045 ;; This function uses a non-reentrant model
 34046 ;;
 34047                           
 34048                           	psect	text145
 34049  00724A                     __ptext145:
 34050                           	opt stack 0
 34051  00724A                     i2___ftdiv:
 34052                           	opt stack 16
 34053                           
 34054                           ;incstack = 0
 34055  00724A  C034  F038         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 34056  00724E  6A39               	clrf	(??i2___ftdiv+1)& (0+255),c
 34057  007250  6A3A               	clrf	(??i2___ftdiv+2)& (0+255),c
 34058  007252  3433               	rlcf	i2___ftdiv@f1+1,w,c
 34059  007254  3638               	rlcf	??i2___ftdiv& (0+255),f,c
 34060  007256  E301               	bnc	u1612_41
 34061  007258  8039               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 34062  00725A                     u1612_41:
 34063  00725A  5038               	movf	??i2___ftdiv,w,c
 34064  00725C  6E3F               	movwf	i2___ftdiv@exp,c
 34065  00725E  503F               	movf	i2___ftdiv@exp,w,c
 34066  007260  A4D8               	btfss	status,2,c
 34067  007262  D002               	goto	i2l13957
 34068  007264  D00E               	goto	i2l13959
 34069  007266  D061               	goto	i2l2094
 34070  007268                     i2l13957:
 34071  007268  C037  F038         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 34072  00726C  6A39               	clrf	(??i2___ftdiv+1)& (0+255),c
 34073  00726E  6A3A               	clrf	(??i2___ftdiv+2)& (0+255),c
 34074  007270  3436               	rlcf	i2___ftdiv@f2+1,w,c
 34075  007272  3638               	rlcf	??i2___ftdiv& (0+255),f,c
 34076  007274  E301               	bnc	u1614_41
 34077  007276  8039               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 34078  007278                     u1614_41:
 34079  007278  5038               	movf	??i2___ftdiv,w,c
 34080  00727A  6E40               	movwf	i2___ftdiv@sign,c
 34081  00727C  5040               	movf	i2___ftdiv@sign,w,c
 34082  00727E  A4D8               	btfss	status,2,c
 34083  007280  D007               	goto	i2l13963
 34084  007282                     i2l13959:
 34085  007282  0E00               	movlw	0
 34086  007284  6E32               	movwf	?i2___ftdiv,c
 34087  007286  0E00               	movlw	0
 34088  007288  6E33               	movwf	?i2___ftdiv+1,c
 34089  00728A  0E00               	movlw	0
 34090  00728C  6E34               	movwf	?i2___ftdiv+2,c
 34091  00728E  D04D               	goto	i2l2094
 34092  007290                     i2l13963:
 34093  007290  0E00               	movlw	0
 34094  007292  6E3C               	movwf	i2___ftdiv@f3,c
 34095  007294  0E00               	movlw	0
 34096  007296  6E3D               	movwf	i2___ftdiv@f3+1,c
 34097  007298  0E00               	movlw	0
 34098  00729A  6E3E               	movwf	i2___ftdiv@f3+2,c
 34099  00729C  5040               	movf	i2___ftdiv@sign,w,c
 34100  00729E  0F89               	addlw	137
 34101  0072A0  5E3F               	subwf	i2___ftdiv@exp,f,c
 34102  0072A2  C034  F040         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 34103  0072A6  5037               	movf	i2___ftdiv@f2+2,w,c
 34104  0072A8  1A40               	xorwf	i2___ftdiv@sign,f,c
 34105  0072AA  0E80               	movlw	128
 34106  0072AC  1640               	andwf	i2___ftdiv@sign,f,c
 34107  0072AE  8E33               	bsf	i2___ftdiv@f1+1,7,c
 34108  0072B0  0EFF               	movlw	255
 34109  0072B2  1632               	andwf	i2___ftdiv@f1,f,c
 34110  0072B4  0EFF               	movlw	255
 34111  0072B6  1633               	andwf	i2___ftdiv@f1+1,f,c
 34112  0072B8  0E00               	movlw	0
 34113  0072BA  1634               	andwf	i2___ftdiv@f1+2,f,c
 34114  0072BC  8E36               	bsf	i2___ftdiv@f2+1,7,c
 34115  0072BE  0EFF               	movlw	255
 34116  0072C0  1635               	andwf	i2___ftdiv@f2,f,c
 34117  0072C2  0EFF               	movlw	255
 34118  0072C4  1636               	andwf	i2___ftdiv@f2+1,f,c
 34119  0072C6  0E00               	movlw	0
 34120  0072C8  1637               	andwf	i2___ftdiv@f2+2,f,c
 34121  0072CA  0E18               	movlw	24
 34122  0072CC  6E3B               	movwf	i2___ftdiv@cntr,c
 34123  0072CE  D000               	goto	i2l13983
 34124  0072D0                     i2l13983:
 34125  0072D0  90D8               	bcf	status,0,c
 34126  0072D2  363C               	rlcf	i2___ftdiv@f3,f,c
 34127  0072D4  363D               	rlcf	i2___ftdiv@f3+1,f,c
 34128  0072D6  363E               	rlcf	i2___ftdiv@f3+2,f,c
 34129  0072D8  5035               	movf	i2___ftdiv@f2,w,c
 34130  0072DA  5C32               	subwf	i2___ftdiv@f1,w,c
 34131  0072DC  5036               	movf	i2___ftdiv@f2+1,w,c
 34132  0072DE  5833               	subwfb	i2___ftdiv@f1+1,w,c
 34133  0072E0  5037               	movf	i2___ftdiv@f2+2,w,c
 34134  0072E2  5834               	subwfb	i2___ftdiv@f1+2,w,c
 34135  0072E4  A0D8               	btfss	status,0,c
 34136  0072E6  D007               	goto	i2l2097
 34137  0072E8  5035               	movf	i2___ftdiv@f2,w,c
 34138  0072EA  5E32               	subwf	i2___ftdiv@f1,f,c
 34139  0072EC  5036               	movf	i2___ftdiv@f2+1,w,c
 34140  0072EE  5A33               	subwfb	i2___ftdiv@f1+1,f,c
 34141  0072F0  5037               	movf	i2___ftdiv@f2+2,w,c
 34142  0072F2  5A34               	subwfb	i2___ftdiv@f1+2,f,c
 34143  0072F4  803C               	bsf	i2___ftdiv@f3,0,c
 34144  0072F6                     i2l2097:
 34145  0072F6  90D8               	bcf	status,0,c
 34146  0072F8  3632               	rlcf	i2___ftdiv@f1,f,c
 34147  0072FA  3633               	rlcf	i2___ftdiv@f1+1,f,c
 34148  0072FC  3634               	rlcf	i2___ftdiv@f1+2,f,c
 34149  0072FE  2E3B               	decfsz	i2___ftdiv@cntr,f,c
 34150  007300  D7E7               	goto	i2l13983
 34151  007302  D000               	goto	i2l13993
 34152  007304                     i2l13993:
 34153  007304  C03C  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 34154  007308  C03D  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 34155  00730C  C03E  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 34156  007310  C03F  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 34157  007314  C040  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 34158  007318  ECA6  F03B         	call	i2___ftpack	;wreg free
 34159  00731C  C001  F032         	movff	?i2___ftpack,?i2___ftdiv
 34160  007320  C002  F033         	movff	?i2___ftpack+1,?i2___ftdiv+1
 34161  007324  C003  F034         	movff	?i2___ftpack+2,?i2___ftdiv+2
 34162  007328  D000               	goto	i2l2094
 34163  00732A                     i2l2094:
 34164  00732A  0012               	return		;funcret
 34165  00732C                     __end_ofi2___ftdiv:
 34166                           	opt stack 0
 34167                           pclatu	equ	0xFFB
 34168                           pclath	equ	0xFFA
 34169                           tblptru	equ	0xFF8
 34170                           tblptrh	equ	0xFF7
 34171                           tblptrl	equ	0xFF6
 34172                           tablat	equ	0xFF5
 34173                           prodh	equ	0xFF4
 34174                           prodl	equ	0xFF3
 34175                           intcon	equ	0xFF2
 34176                           intcon2	equ	0xFF1
 34177                           intcon3	equ	0xFF0
 34178                           postinc0	equ	0xFEE
 34179                           fsr0h	equ	0xFEA
 34180                           fsr0l	equ	0xFE9
 34181                           wreg	equ	0xFE8
 34182                           postdec1	equ	0xFE5
 34183                           fsr1h	equ	0xFE2
 34184                           fsr1l	equ	0xFE1
 34185                           indf2	equ	0xFDF
 34186                           postinc2	equ	0xFDE
 34187                           postdec2	equ	0xFDD
 34188                           fsr2h	equ	0xFDA
 34189                           fsr2l	equ	0xFD9
 34190                           status	equ	0xFD8
 34191                           
 34192 ;; *************** function i2___ftpack *****************
 34193 ;; Defined at:
 34194 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
 34195 ;; Parameters:    Size  Location     Type
 34196 ;;  arg             3    0[COMRAM] unsigned um
 34197 ;;  exp             1    3[COMRAM] unsigned char 
 34198 ;;  sign            1    4[COMRAM] unsigned char 
 34199 ;; Auto vars:     Size  Location     Type
 34200 ;;		None
 34201 ;; Return value:  Size  Location     Type
 34202 ;;                  3    0[COMRAM] float 
 34203 ;; Registers used:
 34204 ;;		wreg, status,2, status,0
 34205 ;; Tracked objects:
 34206 ;;		On entry : 0/0
 34207 ;;		On exit  : 0/0
 34208 ;;		Unchanged: 0/0
 34209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34210 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34212 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34213 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34214 ;;Total ram usage:        8 bytes
 34215 ;; Hardware stack levels used:    1
 34216 ;; This function calls:
 34217 ;;		Nothing
 34218 ;; This function is called by:
 34219 ;;		i2___ftadd
 34220 ;;		i2___ftdiv
 34221 ;;		i2___ftmul
 34222 ;;		i2___lltoft
 34223 ;; This function uses a non-reentrant model
 34224 ;;
 34225                           
 34226                           	psect	text146
 34227  00774C                     __ptext146:
 34228                           	opt stack 0
 34229  00774C                     i2___ftpack:
 34230                           	opt stack 15
 34231                           
 34232                           ;incstack = 0
 34233  00774C  5004               	movf	i2___ftpack@exp,w,c
 34234  00774E  B4D8               	btfsc	status,2,c
 34235  007750  D005               	goto	i2l12755
 34236  007752  5001               	movf	i2___ftpack@arg,w,c
 34237  007754  1002               	iorwf	i2___ftpack@arg+1,w,c
 34238  007756  1003               	iorwf	i2___ftpack@arg+2,w,c
 34239  007758  A4D8               	btfss	status,2,c
 34240  00775A  D00E               	goto	i2l12761
 34241  00775C                     i2l12755:
 34242  00775C  0E00               	movlw	0
 34243  00775E  6E01               	movwf	?i2___ftpack,c
 34244  007760  0E00               	movlw	0
 34245  007762  6E02               	movwf	?i2___ftpack+1,c
 34246  007764  0E00               	movlw	0
 34247  007766  6E03               	movwf	?i2___ftpack+2,c
 34248  007768  D053               	goto	i2l2022
 34249  00776A  D006               	goto	i2l12761
 34250  00776C                     i2l12759:
 34251  00776C  2A04               	incf	i2___ftpack@exp,f,c
 34252  00776E  90D8               	bcf	status,0,c
 34253  007770  3203               	rrcf	i2___ftpack@arg+2,f,c
 34254  007772  3202               	rrcf	i2___ftpack@arg+1,f,c
 34255  007774  3201               	rrcf	i2___ftpack@arg,f,c
 34256  007776  D000               	goto	i2l12761
 34257  007778                     i2l12761:
 34258  007778  0E00               	movlw	0
 34259  00777A  1401               	andwf	i2___ftpack@arg,w,c
 34260  00777C  6E06               	movwf	??i2___ftpack& (0+255),c
 34261  00777E  0E00               	movlw	0
 34262  007780  1402               	andwf	i2___ftpack@arg+1,w,c
 34263  007782  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 34264  007784  0EFE               	movlw	254
 34265  007786  1403               	andwf	i2___ftpack@arg+2,w,c
 34266  007788  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 34267  00778A  5006               	movf	??i2___ftpack,w,c
 34268  00778C  1007               	iorwf	??i2___ftpack+1,w,c
 34269  00778E  1008               	iorwf	??i2___ftpack+2,w,c
 34270  007790  B4D8               	btfsc	status,2,c
 34271  007792  D00E               	goto	i2l12767
 34272  007794  D7EB               	goto	i2l12759
 34273  007796  D00C               	goto	i2l12767
 34274  007798                     i2l12763:
 34275  007798  2A04               	incf	i2___ftpack@exp,f,c
 34276  00779A  0E01               	movlw	1
 34277  00779C  2601               	addwf	i2___ftpack@arg,f,c
 34278  00779E  0E00               	movlw	0
 34279  0077A0  2202               	addwfc	i2___ftpack@arg+1,f,c
 34280  0077A2  0E00               	movlw	0
 34281  0077A4  2203               	addwfc	i2___ftpack@arg+2,f,c
 34282  0077A6  90D8               	bcf	status,0,c
 34283  0077A8  3203               	rrcf	i2___ftpack@arg+2,f,c
 34284  0077AA  3202               	rrcf	i2___ftpack@arg+1,f,c
 34285  0077AC  3201               	rrcf	i2___ftpack@arg,f,c
 34286  0077AE  D000               	goto	i2l12767
 34287  0077B0                     i2l12767:
 34288  0077B0  0E00               	movlw	0
 34289  0077B2  1401               	andwf	i2___ftpack@arg,w,c
 34290  0077B4  6E06               	movwf	??i2___ftpack& (0+255),c
 34291  0077B6  0E00               	movlw	0
 34292  0077B8  1402               	andwf	i2___ftpack@arg+1,w,c
 34293  0077BA  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 34294  0077BC  0EFF               	movlw	255
 34295  0077BE  1403               	andwf	i2___ftpack@arg+2,w,c
 34296  0077C0  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 34297  0077C2  5006               	movf	??i2___ftpack,w,c
 34298  0077C4  1007               	iorwf	??i2___ftpack+1,w,c
 34299  0077C6  1008               	iorwf	??i2___ftpack+2,w,c
 34300  0077C8  B4D8               	btfsc	status,2,c
 34301  0077CA  D008               	goto	i2l12771
 34302  0077CC  D7E5               	goto	i2l12763
 34303  0077CE  D006               	goto	i2l12771
 34304  0077D0                     i2l12769:
 34305  0077D0  0604               	decf	i2___ftpack@exp,f,c
 34306  0077D2  90D8               	bcf	status,0,c
 34307  0077D4  3601               	rlcf	i2___ftpack@arg,f,c
 34308  0077D6  3602               	rlcf	i2___ftpack@arg+1,f,c
 34309  0077D8  3603               	rlcf	i2___ftpack@arg+2,f,c
 34310  0077DA  D000               	goto	i2l12771
 34311  0077DC                     i2l12771:
 34312  0077DC  BE02               	btfsc	i2___ftpack@arg+1,7,c
 34313  0077DE  D004               	goto	i2l2033
 34314  0077E0  0E02               	movlw	2
 34315  0077E2  6004               	cpfslt	i2___ftpack@exp,c
 34316  0077E4  D7F5               	goto	i2l12769
 34317  0077E6  D000               	goto	i2l2033
 34318  0077E8                     i2l2033:
 34319  0077E8  B004               	btfsc	i2___ftpack@exp,0,c
 34320  0077EA  D002               	goto	i2l12777
 34321  0077EC  9E02               	bcf	i2___ftpack@arg+1,7,c
 34322  0077EE  D000               	goto	i2l12777
 34323  0077F0                     i2l12777:
 34324  0077F0  90D8               	bcf	status,0,c
 34325  0077F2  3204               	rrcf	i2___ftpack@exp,f,c
 34326  0077F4  5004               	movf	i2___ftpack@exp,w,c
 34327  0077F6  1203               	iorwf	i2___ftpack@arg+2,f,c
 34328  0077F8  5005               	movf	i2___ftpack@sign,w,c
 34329  0077FA  B4D8               	btfsc	status,2,c
 34330  0077FC  D002               	goto	i2l12783
 34331  0077FE  8E03               	bsf	i2___ftpack@arg+2,7,c
 34332  007800  D000               	goto	i2l12783
 34333  007802                     i2l12783:
 34334  007802  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 34335  007806  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 34336  00780A  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 34337  00780E  D000               	goto	i2l2022
 34338  007810                     i2l2022:
 34339  007810  0012               	return		;funcret
 34340  007812                     __end_ofi2___ftpack:
 34341                           	opt stack 0
 34342                           pclatu	equ	0xFFB
 34343                           pclath	equ	0xFFA
 34344                           tblptru	equ	0xFF8
 34345                           tblptrh	equ	0xFF7
 34346                           tblptrl	equ	0xFF6
 34347                           tablat	equ	0xFF5
 34348                           prodh	equ	0xFF4
 34349                           prodl	equ	0xFF3
 34350                           intcon	equ	0xFF2
 34351                           intcon2	equ	0xFF1
 34352                           intcon3	equ	0xFF0
 34353                           postinc0	equ	0xFEE
 34354                           fsr0h	equ	0xFEA
 34355                           fsr0l	equ	0xFE9
 34356                           wreg	equ	0xFE8
 34357                           postdec1	equ	0xFE5
 34358                           fsr1h	equ	0xFE2
 34359                           fsr1l	equ	0xFE1
 34360                           indf2	equ	0xFDF
 34361                           postinc2	equ	0xFDE
 34362                           postdec2	equ	0xFDD
 34363                           fsr2h	equ	0xFDA
 34364                           fsr2l	equ	0xFD9
 34365                           status	equ	0xFD8
 34366                           
 34367 ;; *************** function _INT0_isr *****************
 34368 ;; Defined at:
 34369 ;;		line 69 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Interrupt.c"
 34370 ;; Parameters:    Size  Location     Type
 34371 ;;		None
 34372 ;; Auto vars:     Size  Location     Type
 34373 ;;		None
 34374 ;; Return value:  Size  Location     Type
 34375 ;;		None               void
 34376 ;; Registers used:
 34377 ;;		wreg, status,2, status,0, cstack
 34378 ;; Tracked objects:
 34379 ;;		On entry : 0/0
 34380 ;;		On exit  : 0/0
 34381 ;;		Unchanged: 0/0
 34382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34385 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34386 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34387 ;;Total ram usage:        2 bytes
 34388 ;; Hardware stack levels used:    1
 34389 ;; Hardware stack levels required when called:    1
 34390 ;; This function calls:
 34391 ;;		_force_nec_state0
 34392 ;; This function is called by:
 34393 ;;		_chkisr
 34394 ;; This function uses a non-reentrant model
 34395 ;;
 34396                           
 34397                           	psect	text147
 34398  005946                     __ptext147:
 34399                           	opt stack 0
 34400  005946                     _INT0_isr:
 34401                           	opt stack 18
 34402                           
 34403                           ;Interrupt.c: 71: INTCONbits.INT0IF = 0;
 34404                           
 34405                           ;incstack = 0
 34406  005946  92F2               	bcf	intcon,1,c	;volatile
 34407                           
 34408                           ;Interrupt.c: 72: if (Nec_state != 0)
 34409  005948  0101               	movlb	1	; () banked
 34410  00594A  51B9               	movf	_Nec_state& (0+255),w,b
 34411  00594C  B4D8               	btfsc	status,2,c
 34412  00594E  D0B6               	goto	i2l11097
 34413                           
 34414                           ; BSR set to: 1
 34415                           ;Interrupt.c: 73: {
 34416                           ;Interrupt.c: 74: Time_Elapsed = (TMR1H << 8) | TMR1L;
 34417  005950  50CE               	movf	4046,w,c	;volatile
 34418  005952  CFCF F001          	movff	4047,??_INT0_isr	;volatile
 34419  005956  6A02               	clrf	(??_INT0_isr+1)& (0+255),c
 34420  005958  C001  F002         	movff	??_INT0_isr,??_INT0_isr+1
 34421  00595C  6A01               	clrf	??_INT0_isr,c
 34422  00595E  1001               	iorwf	??_INT0_isr,w,c
 34423  005960  6E7B               	movwf	_Time_Elapsed,c
 34424  005962  5002               	movf	??_INT0_isr+1,w,c
 34425  005964  6E7C               	movwf	_Time_Elapsed+1,c
 34426                           
 34427                           ; BSR set to: 1
 34428                           ;Interrupt.c: 75: TMR1H = 0;
 34429  005966  0E00               	movlw	0
 34430  005968  6ECF               	movwf	4047,c	;volatile
 34431                           
 34432                           ; BSR set to: 1
 34433                           ;Interrupt.c: 76: TMR1L = 0;
 34434  00596A  0E00               	movlw	0
 34435  00596C  6ECE               	movwf	4046,c	;volatile
 34436                           
 34437                           ; BSR set to: 1
 34438                           ;Interrupt.c: 77: }
 34439                           ;Interrupt.c: 79: switch(Nec_state)
 34440  00596E  D0A6               	goto	i2l11097
 34441  005970                     i2l11029:
 34442                           
 34443                           ; BSR set to: 1
 34444                           ;Interrupt.c: 82: {
 34445                           ;Interrupt.c: 84: TMR1H = 0;
 34446  005970  0E00               	movlw	0
 34447  005972  6ECF               	movwf	4047,c	;volatile
 34448                           
 34449                           ;Interrupt.c: 85: TMR1L = 0;
 34450  005974  0E00               	movlw	0
 34451  005976  6ECE               	movwf	4046,c	;volatile
 34452                           
 34453                           ; BSR set to: 1
 34454                           ;Interrupt.c: 86: PIR1bits.TMR1IF = 0;
 34455  005978  909E               	bcf	3998,0,c	;volatile
 34456                           
 34457                           ;Interrupt.c: 87: T1CON= 0x90;
 34458  00597A  0E90               	movlw	144
 34459  00597C  6ECD               	movwf	4045,c	;volatile
 34460                           
 34461                           ; BSR set to: 1
 34462                           ;Interrupt.c: 88: T1CONbits.TMR1ON = 1;
 34463  00597E  80CD               	bsf	4045,0,c	;volatile
 34464                           
 34465                           ;Interrupt.c: 89: bit_count = 0;
 34466  005980  0E00               	movlw	0
 34467  005982  0101               	movlb	1	; () banked
 34468  005984  6FBD               	movwf	_bit_count& (0+255),b
 34469                           
 34470                           ;Interrupt.c: 90: Nec_code = 0;
 34471  005986  0E00               	movlw	0
 34472  005988  0101               	movlb	1	; () banked
 34473  00598A  6F98               	movwf	_Nec_code& (0+255),b
 34474  00598C  0E00               	movlw	0
 34475  00598E  6F99               	movwf	(_Nec_code+1)& (0+255),b
 34476  005990  0E00               	movlw	0
 34477  005992  6F9A               	movwf	(_Nec_code+2)& (0+255),b
 34478  005994  0E00               	movlw	0
 34479  005996  6F9B               	movwf	(_Nec_code+3)& (0+255),b
 34480                           
 34481                           ;Interrupt.c: 91: Nec_state = 1;
 34482  005998  0E01               	movlw	1
 34483  00599A  0101               	movlb	1	; () banked
 34484  00599C  6FB9               	movwf	_Nec_state& (0+255),b
 34485  00599E  D08C               	goto	i2l11091
 34486                           
 34487                           ; BSR set to: 1
 34488                           ;Interrupt.c: 93: return;
 34489                           
 34490                           ; BSR set to: 1
 34491                           ;Interrupt.c: 92: INTCON2bits.INTEDG0 = 1;
 34492  0059A0  D09F               	goto	i2l296
 34493  0059A2                     i2l11039:
 34494                           
 34495                           ; BSR set to: 1
 34496                           ;Interrupt.c: 97: {
 34497                           ;Interrupt.c: 98: if ((Time_Elapsed < 9500) && (Time_Elapsed > 8500)){
 34498  0059A2  0E1C               	movlw	28
 34499  0059A4  5C7B               	subwf	_Time_Elapsed,w,c
 34500  0059A6  0E25               	movlw	37
 34501  0059A8  587C               	subwfb	_Time_Elapsed+1,w,c
 34502  0059AA  B0D8               	btfsc	status,0,c
 34503  0059AC  D00A               	goto	i2l11045
 34504                           
 34505                           ; BSR set to: 1
 34506  0059AE  0E35               	movlw	53
 34507  0059B0  5C7B               	subwf	_Time_Elapsed,w,c
 34508  0059B2  0E21               	movlw	33
 34509  0059B4  587C               	subwfb	_Time_Elapsed+1,w,c
 34510  0059B6  A0D8               	btfss	status,0,c
 34511  0059B8  D004               	goto	i2l11045
 34512                           
 34513                           ; BSR set to: 1
 34514                           ;Interrupt.c: 99: Nec_state = 2;
 34515  0059BA  0E02               	movlw	2
 34516  0059BC  0101               	movlb	1	; () banked
 34517  0059BE  6FB9               	movwf	_Nec_state& (0+255),b
 34518                           
 34519                           ;Interrupt.c: 100: }
 34520  0059C0  D02B               	goto	i2l11071
 34521  0059C2                     i2l11045:
 34522                           
 34523                           ; BSR set to: 1
 34524                           ;Interrupt.c: 101: else {
 34525                           ;Interrupt.c: 102: force_nec_state0();
 34526  0059C2  EC6A  F049         	call	_force_nec_state0	;wreg free
 34527  0059C6  D028               	goto	i2l11071
 34528  0059C8  D027               	goto	i2l11071
 34529                           
 34530                           ;Interrupt.c: 105: return;
 34531                           
 34532                           ;Interrupt.c: 103: }
 34533                           ;Interrupt.c: 104: INTCON2bits.INTEDG0 = 0;
 34534  0059CA  D08A               	goto	i2l296
 34535  0059CC                     i2l11051:
 34536                           
 34537                           ;Interrupt.c: 109: {
 34538                           ;Interrupt.c: 110: if ((Time_Elapsed < 5000) && (Time_Elapsed > 4000)){
 34539  0059CC  0E88               	movlw	136
 34540  0059CE  5C7B               	subwf	_Time_Elapsed,w,c
 34541  0059D0  0E13               	movlw	19
 34542  0059D2  587C               	subwfb	_Time_Elapsed+1,w,c
 34543  0059D4  B0D8               	btfsc	status,0,c
 34544  0059D6  D00A               	goto	i2l11057
 34545  0059D8  0EA1               	movlw	161
 34546  0059DA  5C7B               	subwf	_Time_Elapsed,w,c
 34547  0059DC  0E0F               	movlw	15
 34548  0059DE  587C               	subwfb	_Time_Elapsed+1,w,c
 34549  0059E0  A0D8               	btfss	status,0,c
 34550  0059E2  D004               	goto	i2l11057
 34551  0059E4                     
 34552                           ;Interrupt.c: 111: Nec_state = 3;
 34553  0059E4  0E03               	movlw	3
 34554  0059E6  0101               	movlb	1	; () banked
 34555  0059E8  6FB9               	movwf	_Nec_state& (0+255),b
 34556                           
 34557                           ;Interrupt.c: 112: }
 34558  0059EA  D066               	goto	i2l11091
 34559  0059EC                     i2l11057:
 34560                           
 34561                           ;Interrupt.c: 113: else {
 34562                           ;Interrupt.c: 114: force_nec_state0();
 34563  0059EC  EC6A  F049         	call	_force_nec_state0	;wreg free
 34564  0059F0  D063               	goto	i2l11091
 34565  0059F2  D062               	goto	i2l11091
 34566                           
 34567                           ;Interrupt.c: 117: return;
 34568                           
 34569                           ;Interrupt.c: 115: }
 34570                           ;Interrupt.c: 116: INTCON2bits.INTEDG0 = 1;
 34571  0059F4  D075               	goto	i2l296
 34572  0059F6                     i2l11063:
 34573                           
 34574                           ;Interrupt.c: 121: {
 34575                           ;Interrupt.c: 122: if ((Time_Elapsed < 700) && (Time_Elapsed > 400)){
 34576  0059F6  0EBC               	movlw	188
 34577  0059F8  5C7B               	subwf	_Time_Elapsed,w,c
 34578  0059FA  0E02               	movlw	2
 34579  0059FC  587C               	subwfb	_Time_Elapsed+1,w,c
 34580  0059FE  B0D8               	btfsc	status,0,c
 34581  005A00  D008               	goto	i2l11069
 34582  005A02  0E91               	movlw	145
 34583  005A04  5C7B               	subwf	_Time_Elapsed,w,c
 34584  005A06  0E01               	movlw	1
 34585  005A08  587C               	subwfb	_Time_Elapsed+1,w,c
 34586  005A0A  A0D8               	btfss	status,0,c
 34587  005A0C  D002               	goto	i2l11069
 34588                           
 34589                           ;Interrupt.c: 123: Nec_state = 4;
 34590  005A0E  0E04               	movlw	4
 34591  005A10  D7D5               	goto	L43
 34592  005A12                     i2l11069:
 34593                           
 34594                           ;Interrupt.c: 125: else {
 34595                           ;Interrupt.c: 126: force_nec_state0();
 34596  005A12  EC6A  F049         	call	_force_nec_state0	;wreg free
 34597  005A16  D000               	goto	i2l11071
 34598  005A18                     i2l11071:
 34599                           
 34600                           ;Interrupt.c: 127: }
 34601                           ;Interrupt.c: 128: INTCON2bits.INTEDG0 = 0;
 34602  005A18  9CF1               	bcf	intcon2,6,c	;volatile
 34603                           
 34604                           ;Interrupt.c: 129: return;
 34605  005A1A  D062               	goto	i2l296
 34606  005A1C                     i2l11075:
 34607                           
 34608                           ;Interrupt.c: 133: {
 34609                           ;Interrupt.c: 134: if ((Time_Elapsed < 1800) && (Time_Elapsed > 400)){
 34610  005A1C  0E08               	movlw	8
 34611  005A1E  5C7B               	subwf	_Time_Elapsed,w,c
 34612  005A20  0E07               	movlw	7
 34613  005A22  587C               	subwfb	_Time_Elapsed+1,w,c
 34614  005A24  B0D8               	btfsc	status,0,c
 34615  005A26  D045               	goto	i2l11089
 34616  005A28  0E91               	movlw	145
 34617  005A2A  5C7B               	subwf	_Time_Elapsed,w,c
 34618  005A2C  0E01               	movlw	1
 34619  005A2E  587C               	subwfb	_Time_Elapsed+1,w,c
 34620  005A30  A0D8               	btfss	status,0,c
 34621  005A32  D03F               	goto	i2l11089
 34622                           
 34623                           ;Interrupt.c: 135: Nec_code = Nec_code << 1;
 34624  005A34  90D8               	bcf	status,0,c
 34625  005A36  0101               	movlb	1	; () banked
 34626  005A38  3598               	rlcf	_Nec_code& (0+255),w,b
 34627  005A3A  0101               	movlb	1	; () banked
 34628  005A3C  6F98               	movwf	_Nec_code& (0+255),b
 34629  005A3E  0101               	movlb	1	; () banked
 34630  005A40  3599               	rlcf	(_Nec_code+1)& (0+255),w,b
 34631  005A42  0101               	movlb	1	; () banked
 34632  005A44  6F99               	movwf	(_Nec_code+1)& (0+255),b
 34633  005A46  0101               	movlb	1	; () banked
 34634  005A48  359A               	rlcf	(_Nec_code+2)& (0+255),w,b
 34635  005A4A  0101               	movlb	1	; () banked
 34636  005A4C  6F9A               	movwf	(_Nec_code+2)& (0+255),b
 34637  005A4E  0101               	movlb	1	; () banked
 34638  005A50  359B               	rlcf	(_Nec_code+3)& (0+255),w,b
 34639  005A52  0101               	movlb	1	; () banked
 34640  005A54  6F9B               	movwf	(_Nec_code+3)& (0+255),b
 34641                           
 34642                           ;Interrupt.c: 137: if (Time_Elapsed > 1000){
 34643  005A56  0EE9               	movlw	233
 34644  005A58  5C7B               	subwf	_Time_Elapsed,w,c
 34645  005A5A  0E03               	movlw	3
 34646  005A5C  587C               	subwfb	_Time_Elapsed+1,w,c
 34647  005A5E  A0D8               	btfss	status,0,c
 34648  005A60  D014               	goto	i2l308
 34649                           
 34650                           ; BSR set to: 1
 34651                           ;Interrupt.c: 138: Nec_code = Nec_code + 1;
 34652  005A62  0E01               	movlw	1
 34653  005A64  0101               	movlb	1	; () banked
 34654  005A66  2598               	addwf	_Nec_code& (0+255),w,b
 34655  005A68  0101               	movlb	1	; () banked
 34656  005A6A  6F98               	movwf	_Nec_code& (0+255),b
 34657  005A6C  0E00               	movlw	0
 34658  005A6E  0101               	movlb	1	; () banked
 34659  005A70  2199               	addwfc	(_Nec_code+1)& (0+255),w,b
 34660  005A72  0101               	movlb	1	; () banked
 34661  005A74  6F99               	movwf	(_Nec_code+1)& (0+255),b
 34662  005A76  0E00               	movlw	0
 34663  005A78  0101               	movlb	1	; () banked
 34664  005A7A  219A               	addwfc	(_Nec_code+2)& (0+255),w,b
 34665  005A7C  0101               	movlb	1	; () banked
 34666  005A7E  6F9A               	movwf	(_Nec_code+2)& (0+255),b
 34667  005A80  0E00               	movlw	0
 34668  005A82  0101               	movlb	1	; () banked
 34669  005A84  219B               	addwfc	(_Nec_code+3)& (0+255),w,b
 34670  005A86  0101               	movlb	1	; () banked
 34671  005A88  6F9B               	movwf	(_Nec_code+3)& (0+255),b
 34672  005A8A                     i2l308:
 34673                           
 34674                           ; BSR set to: 1
 34675                           ;Interrupt.c: 139: }
 34676                           ;Interrupt.c: 141: bit_count = bit_count + 1;
 34677  005A8A  0101               	movlb	1	; () banked
 34678  005A8C  29BD               	incf	_bit_count& (0+255),w,b
 34679  005A8E  0101               	movlb	1	; () banked
 34680  005A90  6FBD               	movwf	_bit_count& (0+255),b
 34681                           
 34682                           ;Interrupt.c: 143: if (bit_count > 31){
 34683  005A92  0E1F               	movlw	31
 34684  005A94  0101               	movlb	1	; () banked
 34685  005A96  65BD               	cpfsgt	_bit_count& (0+255),b
 34686  005A98  D7A5               	goto	L44
 34687                           
 34688                           ; BSR set to: 1
 34689                           ;Interrupt.c: 144: nec_ok = 1;
 34690  005A9A  0E00               	movlw	0
 34691  005A9C  0101               	movlb	1	; () banked
 34692  005A9E  6FAE               	movwf	(_nec_ok+1)& (0+255),b
 34693  005AA0  0E01               	movlw	1
 34694  005AA2  6FAD               	movwf	_nec_ok& (0+255),b
 34695                           
 34696                           ; BSR set to: 1
 34697                           ;Interrupt.c: 145: Nec_code1 = (char) ((Nec_code >> 8));
 34698  005AA4  C199  F1B8         	movff	_Nec_code+1,_Nec_code1
 34699                           
 34700                           ; BSR set to: 1
 34701                           ;Interrupt.c: 146: INTCONbits.INT0IE = 0;
 34702  005AA8  98F2               	bcf	intcon,4,c	;volatile
 34703                           
 34704                           ;Interrupt.c: 147: Nec_state = 0;
 34705  005AAA  0E00               	movlw	0
 34706  005AAC  0101               	movlb	1	; () banked
 34707  005AAE  6FB9               	movwf	_Nec_state& (0+255),b
 34708  005AB0  D799               	goto	L44
 34709  005AB2                     i2l11089:
 34710                           
 34711                           ;Interrupt.c: 151: else {
 34712                           ;Interrupt.c: 152: force_nec_state0();
 34713  005AB2  EC6A  F049         	call	_force_nec_state0	;wreg free
 34714  005AB6  D000               	goto	i2l11091
 34715  005AB8                     i2l11091:
 34716                           
 34717                           ;Interrupt.c: 153: }
 34718                           ;Interrupt.c: 154: INTCON2bits.INTEDG0 = 1;
 34719  005AB8  8CF1               	bsf	intcon2,6,c	;volatile
 34720                           
 34721                           ;Interrupt.c: 156: }
 34722                           ;Interrupt.c: 157: }
 34723                           
 34724                           ;Interrupt.c: 155: return;
 34725  005ABA  D012               	goto	i2l296
 34726  005ABC                     i2l11097:
 34727  005ABC  0101               	movlb	1	; () banked
 34728  005ABE  51B9               	movf	_Nec_state& (0+255),w,b
 34729                           
 34730                           ; Switch size 1, requested type "space"
 34731                           ; Number of cases is 5, Range of values is 0 to 4
 34732                           ; switch strategies available:
 34733                           ; Name         Instructions Cycles
 34734                           ; simple_byte           16     9 (average)
 34735                           ;	Chosen strategy is simple_byte
 34736  005AC0  0A00               	xorlw	0	; case 0
 34737  005AC2  B4D8               	btfsc	status,2,c
 34738  005AC4  D755               	goto	i2l11029
 34739  005AC6  0A01               	xorlw	1	; case 1
 34740  005AC8  B4D8               	btfsc	status,2,c
 34741  005ACA  D76B               	goto	i2l11039
 34742  005ACC  0A03               	xorlw	3	; case 2
 34743  005ACE  B4D8               	btfsc	status,2,c
 34744  005AD0  D77D               	goto	i2l11051
 34745  005AD2  0A01               	xorlw	1	; case 3
 34746  005AD4  B4D8               	btfsc	status,2,c
 34747  005AD6  D78F               	goto	i2l11063
 34748  005AD8  0A07               	xorlw	7	; case 4
 34749  005ADA  B4D8               	btfsc	status,2,c
 34750  005ADC  D79F               	goto	i2l11075
 34751  005ADE  D000               	goto	i2l296
 34752  005AE0                     i2l296:
 34753  005AE0  0012               	return		;funcret
 34754  005AE2                     __end_of_INT0_isr:
 34755                           	opt stack 0
 34756                           pclatu	equ	0xFFB
 34757                           pclath	equ	0xFFA
 34758                           tblptru	equ	0xFF8
 34759                           tblptrh	equ	0xFF7
 34760                           tblptrl	equ	0xFF6
 34761                           tablat	equ	0xFF5
 34762                           prodh	equ	0xFF4
 34763                           prodl	equ	0xFF3
 34764                           intcon	equ	0xFF2
 34765                           intcon2	equ	0xFF1
 34766                           intcon3	equ	0xFF0
 34767                           postinc0	equ	0xFEE
 34768                           fsr0h	equ	0xFEA
 34769                           fsr0l	equ	0xFE9
 34770                           wreg	equ	0xFE8
 34771                           postdec1	equ	0xFE5
 34772                           fsr1h	equ	0xFE2
 34773                           fsr1l	equ	0xFE1
 34774                           indf2	equ	0xFDF
 34775                           postinc2	equ	0xFDE
 34776                           postdec2	equ	0xFDD
 34777                           fsr2h	equ	0xFDA
 34778                           fsr2l	equ	0xFD9
 34779                           status	equ	0xFD8
 34780                           
 34781 ;; *************** function _force_nec_state0 *****************
 34782 ;; Defined at:
 34783 ;;		line 56 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab13.X/Interrupt.c"
 34784 ;; Parameters:    Size  Location     Type
 34785 ;;		None
 34786 ;; Auto vars:     Size  Location     Type
 34787 ;;		None
 34788 ;; Return value:  Size  Location     Type
 34789 ;;		None               void
 34790 ;; Registers used:
 34791 ;;		wreg, status,2
 34792 ;; Tracked objects:
 34793 ;;		On entry : 0/0
 34794 ;;		On exit  : 0/0
 34795 ;;		Unchanged: 0/0
 34796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34801 ;;Total ram usage:        0 bytes
 34802 ;; Hardware stack levels used:    1
 34803 ;; This function calls:
 34804 ;;		Nothing
 34805 ;; This function is called by:
 34806 ;;		_INT0_isr
 34807 ;; This function uses a non-reentrant model
 34808 ;;
 34809                           
 34810                           	psect	text148
 34811  0092D4                     __ptext148:
 34812                           	opt stack 0
 34813  0092D4                     _force_nec_state0:
 34814                           	opt stack 18
 34815                           
 34816                           ;Interrupt.c: 58: Nec_state=0;
 34817                           
 34818                           ;incstack = 0
 34819  0092D4  0E00               	movlw	0
 34820  0092D6  0101               	movlb	1	; () banked
 34821  0092D8  6FB9               	movwf	_Nec_state& (0+255),b
 34822                           
 34823                           ; BSR set to: 1
 34824                           ;Interrupt.c: 59: T1CONbits.TMR1ON = 0;
 34825  0092DA  90CD               	bcf	4045,0,c	;volatile
 34826                           
 34827                           ; BSR set to: 1
 34828  0092DC  0012               	return		;funcret
 34829  0092DE                     __end_of_force_nec_state0:
 34830                           	opt stack 0
 34831                           pclatu	equ	0xFFB
 34832                           pclath	equ	0xFFA
 34833                           tblptru	equ	0xFF8
 34834                           tblptrh	equ	0xFF7
 34835                           tblptrl	equ	0xFF6
 34836                           tablat	equ	0xFF5
 34837                           prodh	equ	0xFF4
 34838                           prodl	equ	0xFF3
 34839                           intcon	equ	0xFF2
 34840                           intcon2	equ	0xFF1
 34841                           intcon3	equ	0xFF0
 34842                           postinc0	equ	0xFEE
 34843                           fsr0h	equ	0xFEA
 34844                           fsr0l	equ	0xFE9
 34845                           wreg	equ	0xFE8
 34846                           postdec1	equ	0xFE5
 34847                           fsr1h	equ	0xFE2
 34848                           fsr1l	equ	0xFE1
 34849                           indf2	equ	0xFDF
 34850                           postinc2	equ	0xFDE
 34851                           postdec2	equ	0xFDD
 34852                           fsr2h	equ	0xFDA
 34853                           fsr2l	equ	0xFD9
 34854                           status	equ	0xFD8
 34855                           pclatu	equ	0xFFB
 34856                           pclath	equ	0xFFA
 34857                           tblptru	equ	0xFF8
 34858                           tblptrh	equ	0xFF7
 34859                           tblptrl	equ	0xFF6
 34860                           tablat	equ	0xFF5
 34861                           prodh	equ	0xFF4
 34862                           prodl	equ	0xFF3
 34863                           intcon	equ	0xFF2
 34864                           intcon2	equ	0xFF1
 34865                           intcon3	equ	0xFF0
 34866                           postinc0	equ	0xFEE
 34867                           fsr0h	equ	0xFEA
 34868                           fsr0l	equ	0xFE9
 34869                           wreg	equ	0xFE8
 34870                           postdec1	equ	0xFE5
 34871                           fsr1h	equ	0xFE2
 34872                           fsr1l	equ	0xFE1
 34873                           indf2	equ	0xFDF
 34874                           postinc2	equ	0xFDE
 34875                           postdec2	equ	0xFDD
 34876                           fsr2h	equ	0xFDA
 34877                           fsr2l	equ	0xFD9
 34878                           status	equ	0xFD8
 34879                           
 34880                           	psect	rparam
 34881  0000                     pclatu	equ	0xFFB
 34882                           pclath	equ	0xFFA
 34883                           tblptru	equ	0xFF8
 34884                           tblptrh	equ	0xFF7
 34885                           tblptrl	equ	0xFF6
 34886                           tablat	equ	0xFF5
 34887                           prodh	equ	0xFF4
 34888                           prodl	equ	0xFF3
 34889                           intcon	equ	0xFF2
 34890                           intcon2	equ	0xFF1
 34891                           intcon3	equ	0xFF0
 34892                           postinc0	equ	0xFEE
 34893                           fsr0h	equ	0xFEA
 34894                           fsr0l	equ	0xFE9
 34895                           wreg	equ	0xFE8
 34896                           postdec1	equ	0xFE5
 34897                           fsr1h	equ	0xFE2
 34898                           fsr1l	equ	0xFE1
 34899                           indf2	equ	0xFDF
 34900                           postinc2	equ	0xFDE
 34901                           postdec2	equ	0xFDD
 34902                           fsr2h	equ	0xFDA
 34903                           fsr2l	equ	0xFD9
 34904                           status	equ	0xFD8


Data Sizes:
    Strings     347
    Constant    625
    Data        152
    BSS         69
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    122     127
    BANK0           128    100     114
    BANK1           256     21     223
    BANK2           256     41      41
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    nbr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 9
		 -> NULL(NULL[0]), setup_date(BANK1[9]), setup_time(BANK1[9]), setup_fan_set_text(BANK1[5]), 
		 -> setup_alarm_time(BANK1[9]), RPM_Txt(BANK1[5]), Volt_Txt(BANK1[6]), DC_Txt(BANK1[4]), 
		 -> RTC_ALARM_Txt(BANK1[2]), Fan_SW_Txt(BANK1[4]), Fan_Set_Temp_Txt(BANK1[5]), Alarm_SW_Txt(BANK1[4]), 
		 -> alarm_time(BANK1[9]), date(BANK1[9]), time(BANK1[9]), tempF(BANK1[4]), 
		 -> tempC(BANK1[4]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 9
		 -> NULL(NULL[0]), setup_date(BANK1[9]), setup_time(BANK1[9]), setup_fan_set_text(BANK1[5]), 
		 -> setup_alarm_time(BANK1[9]), RPM_Txt(BANK1[5]), Volt_Txt(BANK1[6]), DC_Txt(BANK1[4]), 
		 -> RTC_ALARM_Txt(BANK1[2]), Fan_SW_Txt(BANK1[4]), Fan_Set_Temp_Txt(BANK1[5]), Alarm_SW_Txt(BANK1[4]), 
		 -> alarm_time(BANK1[9]), date(BANK1[9]), time(BANK1[9]), tempF(BANK1[4]), 
		 -> tempC(BANK1[4]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_35(CODE[5]), STR_34(CODE[5]), STR_33(CODE[12]), STR_32(CODE[21]), 
		 -> STR_31(CODE[15]), STR_30(CODE[12]), STR_29(CODE[21]), STR_27(CODE[5]), 
		 -> STR_26(CODE[11]), STR_25(CODE[20]), STR_24(CODE[4]), STR_23(CODE[4]), 
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_20(CODE[4]), STR_19(CODE[5]), 
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[7]), STR_15(CODE[13]), 
		 -> STR_14(CODE[9]), STR_13(CODE[11]), STR_12(CODE[5]), STR_11(CODE[5]), 
		 -> STR_10(CODE[2]), STR_9(CODE[3]), STR_8(CODE[13]), STR_7(CODE[21]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 4
		 -> NULL(NULL[0]), Fan_SW_Txt(BANK1[4]), Alarm_SW_Txt(BANK1[4]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 4
		 -> NULL(NULL[0]), Fan_SW_Txt(BANK1[4]), Alarm_SW_Txt(BANK1[4]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_36(CODE[22]), STR_28(CODE[11]), STR_6(CODE[20]), STR_5(CODE[22]), 
		 -> STR_4(CODE[21]), STR_3(CODE[30]), STR_2(CODE[7]), STR_1(CODE[22]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?_printf(BANK1[2]), 

    drawtext@_text	PTR unsigned char  size(2) Largest target is 9
		 -> NULL(NULL[0]), setup_date(BANK1[9]), setup_time(BANK1[9]), setup_fan_set_text(BANK1[5]), 
		 -> setup_alarm_time(BANK1[9]), RPM_Txt(BANK1[5]), Volt_Txt(BANK1[6]), DC_Txt(BANK1[4]), 
		 -> RTC_ALARM_Txt(BANK1[2]), Fan_SW_Txt(BANK1[4]), Fan_Set_Temp_Txt(BANK1[5]), Alarm_SW_Txt(BANK1[4]), 
		 -> alarm_time(BANK1[9]), date(BANK1[9]), time(BANK1[9]), tempF(BANK1[4]), 
		 -> tempC(BANK1[4]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 4
		 -> NULL(NULL[0]), Fan_SW_Txt(BANK1[4]), Alarm_SW_Txt(BANK1[4]), 

    txt	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _chkisr in COMRAM

    _INT2_isr->i2_printf
    i2_printf->i2___ftge
    i2_scale->i2___ftmul
    i2_fround->i2___ftmul
    i2___wmul->i2___awdiv
    i2___ftmul->i2___ftneg
    i2___awdiv->i2___awmod
    i2___lltoft->i2___fttol
    i2___llmod->i2___lldiv
    i2___ftsub->i2___ftadd
    i2___ftadd->i2_fround
    i2___ftneg->i2___lltoft
    i2___ftge->i2___ftadd
    i2___ftdiv->i2_scale

Critical Paths under _main in BANK0

    _main->_Setup_Temp_Fan
    _test_alarm->___ftge
    _DS3231_Turn_On_Alarm->_DS3231_Init
    _DS3231_Turn_Off_Alarm->_DS3231_Init
    _DS3231_Init->_I2C_Write_Address_Read_One_Byte
    _I2C_Write_Address_Write_One_Byte->_I2C_Write
    _I2C_Write_Address_Read_One_Byte->_I2C_Read
    _read_volt->___ftdiv
    ___awtoft->___ftpack
    _get_RPM->___awdiv
    _Update_Screen->_drawtext
    _Setup_Temp_Fan->_check_for_button_input
    _Initialize_Setup_Fan_Screen->_drawtext
    _Increase_Fan_Temp->_Update_Setup_Fan_Screen
    _Decrease_Fan_Temp->_Update_Setup_Fan_Screen
    _Update_Setup_Fan_Screen->_drawtext
    _Monitor_Fan->_do_update_pwm
    _Do_Setup_Time->_check_for_button_input
    _Initialize_Setup_Time_Screen->_drawtext
    _Go_Prev_Field->_Update_Setup_Screen_Cursor_Backward
    _Go_Next_Field->_Update_Setup_Screen_Cursor_Forward
    _Do_Save_New_Time->_DS3231_Write_Time
    _DS3231_Write_Time->_dec_2_bcd
    _Update_Setup_Time_Screen->_drawtext
    _Do_Setup_Alarm_Time->_check_for_button_input
    _Initialize_Setup_Alarm_Time_Screen->_drawtext
    _Go_Prev_Alarm_Field->_Update_Setup_Screen_Cursor_Backward
    _Update_Setup_Screen_Cursor_Backward->_fillRect
    _Go_Next_Alarm_Field->_Update_Setup_Screen_Cursor_Forward
    _Update_Setup_Screen_Cursor_Forward->_fillRect
    _Do_Save_New_Alarm_Time->_DS3231_Write_Alarm_Time
    _Initialize_Screen->_drawtext
    _fillScreen->_fillRectangle
    _fillRectangle->_setAddrWindow
    _drawCircle->_drawPixel
    _Rcmd3->_delay_ms
    _Rcmd2red->_write_command
    _Rcmd2red->_write_data
    _Rcmd1->_delay_ms
    _LCD_Reset->_delay_ms
    _delay_ms->___wmul
    _DS3231_Write_Alarm_Time->_dec_2_bcd
    _dec_2_bcd->___awmod
    _DS3231_Read_Time->_I2C_Read
    _DS3231_Read_Alarm_Time->_I2C_Read
    _Do_Beep_Good->_do_update_pwm
    _Do_Beep_Bad->_do_update_pwm
    _do_update_pwm->___ftdiv
    ___lbtoft->___ftpack
    _printf->___ftge
    _scale->___awmod
    _fround->___awmod
    ___ftmul->___awdiv
    ___awmod->___fttol
    ___awdiv->___wmul
    ___lltoft->___fttol
    ___llmod->___lldiv
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___ftneg->___lltoft
    ___ftge->___ftadd
    ___ftdiv->_scale
    _drawtext->_drawChar
    _drawChar->_fillRect
    _fillRect->_drawFastVLine
    _drawFastVLine->_setAddrWindow
    _drawPixel->_setAddrWindow
    _setAddrWindow->_write_command
    _setAddrWindow->_write_data
    _write_data->_spiwrite
    _write_command->_spiwrite
    _Do_Init->_DS1621_Init
    _init_UART->_OpenUSART
    _DS1621_Init->_I2C_Write_Cmd_Write_Data
    _I2C_Write_Cmd_Write_Data->_I2C_Write
    _I2C_Write_Cmd_Only->_I2C_Write
    _DS1621_Read_Temp->_I2C_Read

Critical Paths under _chkisr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf
    _check_for_button_input->_printf
    _Update_Setup_Alarm_Time_Screen->_printf

Critical Paths under _chkisr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_printf
    _check_for_button_input->_printf
    _Update_Setup_Alarm_Time_Screen->_printf

Critical Paths under _chkisr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _chkisr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _chkisr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _chkisr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _chkisr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _chkisr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _chkisr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _chkisr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _chkisr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _chkisr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _chkisr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _chkisr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _chkisr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _chkisr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0 1846993
                                             20 BANK1      1     1      0
                   _DS1621_Read_Temp
             _DS3231_Read_Alarm_Time
                   _DS3231_Read_Time
              _DS3231_Turn_Off_Alarm
                        _Do_Beep_Bad
                       _Do_Beep_Good
                            _Do_Init
                _Do_Setup_Alarm_Time
                      _Do_Setup_Time
                  _Initialize_Screen
                        _Monitor_Fan
                     _Setup_Temp_Fan
                 _Toggle_Fan_Monitor
                      _Update_Screen
                            ___awdiv
                             ___wmul
             _check_for_button_input
                            _get_RPM
                             _printf
                          _read_volt
                         _test_alarm
 ---------------------------------------------------------------------------------
 (1) _test_alarm                                           0     0      0    7478
               _Activate_Buzzer_4KHz
              _DS3231_Turn_Off_Alarm
               _DS3231_Turn_On_Alarm
                  _Deactivate_Buzzer
                      _Set_RGB_Color
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) _Set_RGB_Color                                        1     1      0      22
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _DS3231_Turn_On_Alarm                                 5     5      0    3304
                                             24 BANK0      5     5      0
                        _DS3231_Init
    _I2C_Write_Address_Read_One_Byte
   _I2C_Write_Address_Write_One_Byte
 ---------------------------------------------------------------------------------
 (2) _DS3231_Turn_Off_Alarm                                5     5      0    3304
                                             24 BANK0      5     5      0
                        _DS3231_Init
    _I2C_Write_Address_Read_One_Byte
   _I2C_Write_Address_Write_One_Byte
 ---------------------------------------------------------------------------------
 (3) _DS3231_Init                                          4     4      0    1765
                                             20 BANK0      4     4      0
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
    _I2C_Write_Address_Read_One_Byte
   _I2C_Write_Address_Write_One_Byte
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Address_Write_One_Byte                     3     1      2     687
                                             16 BANK0      3     1      2
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Address_Read_One_Byte                      3     2      1     581
                                             17 BANK0      3     2      1
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _Activate_Buzzer_4KHz                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_volt                                            8     5      3    9053
                                             86 BANK0      8     5      3
                           ___awtoft
                            ___ftdiv
                             ___wmul
                       _get_full_ADC
 ---------------------------------------------------------------------------------
 (2) _get_full_ADC                                         6     4      2      23
                                             14 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    2386
                                             22 BANK0      4     1      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _get_RPM                                              4     2      2    8517
                                             28 BANK0      4     2      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _Update_Screen                                        4     4      0   51232
                                             71 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                            ___ftmul
                            ___fttol
                           _drawtext
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _Toggle_Fan_Monitor                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Setup_Temp_Fan                                       2     2      0  383740
                                             98 BANK0      2     2      0
                  _Decrease_Fan_Temp
                        _Do_Beep_Bad
                       _Do_Beep_Good
               _Do_Save_New_Fan_Temp
                _Exit_Setup_Fan_Temp
                  _Increase_Fan_Temp
        _Initialize_Setup_Fan_Screen
            _Update_Setup_Fan_Screen
             _check_for_button_input
 ---------------------------------------------------------------------------------
 (2) _Initialize_Setup_Fan_Screen                          0     0      0   36231
                           _drawtext
                         _fillScreen
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _Increase_Fan_Temp                                    0     0      0   41579
            _Update_Setup_Fan_Screen
 ---------------------------------------------------------------------------------
 (2) _Exit_Setup_Fan_Temp                                  0     0      0   55290
                   _DS3231_Read_Time
                  _Initialize_Screen
 ---------------------------------------------------------------------------------
 (2) _Do_Save_New_Fan_Temp                                 0     0      0   55290
                   _DS3231_Read_Time
                  _Initialize_Screen
 ---------------------------------------------------------------------------------
 (2) _Decrease_Fan_Temp                                    0     0      0   41579
            _Update_Setup_Fan_Screen
 ---------------------------------------------------------------------------------
 (2) _Update_Setup_Fan_Screen                              3     3      0   41579
                                             71 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                           _drawtext
 ---------------------------------------------------------------------------------
 (1) _Monitor_Fan                                          0     0      0   12473
                      _do_update_pwm
                     _get_duty_cycle
 ---------------------------------------------------------------------------------
 (2) _get_duty_cycle                                       5     1      4     194
                                             14 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _Do_Setup_Time                                        0     0      0  421785
                   _DS3231_Read_Time
                      _Decrease_Time
                        _Do_Beep_Bad
                       _Do_Beep_Good
                   _Do_Save_New_Time
                    _Exit_Time_Setup
                      _Go_Next_Field
                      _Go_Prev_Field
                      _Increase_Time
       _Initialize_Setup_Time_Screen
           _Update_Setup_Time_Screen
                          _bcd_2_dec
             _check_for_button_input
 ---------------------------------------------------------------------------------
 (2) _Initialize_Setup_Time_Screen                         0     0      0   45211
                           _drawtext
                           _fillRect
                         _fillScreen
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _Increase_Time                                        0     0      0   41477
           _Update_Setup_Time_Screen
 ---------------------------------------------------------------------------------
 (2) _Go_Prev_Field                                        0     0      0    9312
_Update_Setup_Screen_Cursor_Backward
 ---------------------------------------------------------------------------------
 (2) _Go_Next_Field                                        0     0      0    9334
 _Update_Setup_Screen_Cursor_Forward
 ---------------------------------------------------------------------------------
 (2) _Exit_Time_Setup                                      0     0      0   55290
                   _DS3231_Read_Time
                  _Initialize_Screen
 ---------------------------------------------------------------------------------
 (2) _Do_Save_New_Time                                     0     0      0   65653
                   _DS3231_Read_Time
                  _DS3231_Write_Time
                  _Initialize_Screen
 ---------------------------------------------------------------------------------
 (3) _DS3231_Write_Time                                    2     2      0   10363
                                             71 BANK0      2     2      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                          _dec_2_bcd
 ---------------------------------------------------------------------------------
 (2) _Decrease_Time                                        0     0      0   41477
           _Update_Setup_Time_Screen
 ---------------------------------------------------------------------------------
 (2) _Update_Setup_Time_Screen                             0     0      0   41477
                            ___awdiv
                            ___awmod
                           _drawtext
 ---------------------------------------------------------------------------------
 (1) _Do_Setup_Alarm_Time                                  0     0      0  684602
             _DS3231_Read_Alarm_Time
                _Decrease_Alarm_Time
                        _Do_Beep_Bad
                       _Do_Beep_Good
             _Do_Save_New_Alarm_Time
              _Exit_Setup_Alarm_Time
                _Go_Next_Alarm_Field
                _Go_Prev_Alarm_Field
                _Increase_Alarm_Time
 _Initialize_Setup_Alarm_Time_Screen
     _Update_Setup_Alarm_Time_Screen
                          _bcd_2_dec
             _check_for_button_input
 ---------------------------------------------------------------------------------
 (1) _check_for_button_input                               3     3      0   87542
                                             95 BANK0      3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _bcd_2_dec                                            5     5      0      67
                                             14 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _Initialize_Setup_Alarm_Time_Screen                   0     0      0   45211
                           _drawtext
                           _fillRect
                         _fillScreen
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _Increase_Alarm_Time                                  0     0      0  128886
     _Update_Setup_Alarm_Time_Screen
 ---------------------------------------------------------------------------------
 (2) _Go_Prev_Alarm_Field                                  0     0      0    9312
_Update_Setup_Screen_Cursor_Backward
 ---------------------------------------------------------------------------------
 (3) _Update_Setup_Screen_Cursor_Backward                  3     3      0    9312
                                             43 BANK0      3     3      0
                           _fillRect
 ---------------------------------------------------------------------------------
 (2) _Go_Next_Alarm_Field                                  0     0      0    9334
 _Update_Setup_Screen_Cursor_Forward
 ---------------------------------------------------------------------------------
 (3) _Update_Setup_Screen_Cursor_Forward                   3     3      0    9334
                                             43 BANK0      3     3      0
                           _fillRect
 ---------------------------------------------------------------------------------
 (2) _Exit_Setup_Alarm_Time                                0     0      0   55290
                   _DS3231_Read_Time
                  _Initialize_Screen
 ---------------------------------------------------------------------------------
 (2) _Do_Save_New_Alarm_Time                               0     0      0   66243
             _DS3231_Read_Alarm_Time
                   _DS3231_Read_Time
            _DS3231_Write_Alarm_Time
                  _Initialize_Screen
 ---------------------------------------------------------------------------------
 (3) _Initialize_Screen                                    0     0      0   54995
                          _LCD_Reset
            _TFT_GreenTab_Initialize
                         _drawCircle
                           _drawtext
                         _fillScreen
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4    3043
                                             14 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _fillScreen                                           2     0      2    1819
                                             33 BANK0      2     0      2
                      _fillRectangle
 ---------------------------------------------------------------------------------
 (4) _fillRectangle                                       12     7      5    1585
                                             21 BANK0     12     7      5
                      _setAddrWindow
                           _spiwrite
 ---------------------------------------------------------------------------------
 (4) _drawCircle                                          20    12      8    5210
                                             25 BANK0     20    12      8
                          _drawPixel
 ---------------------------------------------------------------------------------
 (4) _TFT_GreenTab_Initialize                              0     0      0    9156
                              _Rcmd1
                           _Rcmd2red
                              _Rcmd3
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (5) _Rcmd3                                                0     0      0    4488
                           _delay_ms
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (5) _Rcmd2red                                             0     0      0      90
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (5) _Rcmd1                                                0     0      0    4488
                           _delay_ms
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (4) _LCD_Reset                                            0     0      0    4398
                           _delay_ms
 ---------------------------------------------------------------------------------
 (6) _delay_ms                                             6     4      2    4398
                                             20 BANK0      6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _DS3231_Write_Alarm_Time                              2     2      0   10658
                                             71 BANK0      2     2      0
                   _DS3231_Read_Time
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                          _dec_2_bcd
 ---------------------------------------------------------------------------------
 (4) _dec_2_bcd                                            7     5      2   10204
                                             64 BANK0      7     5      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) _DS3231_Read_Time                                     2     2      0     295
                                             17 BANK0      2     2      0
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _DS3231_Read_Alarm_Time                               2     2      0     295
                                             17 BANK0      2     2      0
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _Do_Beep_Good                                         0     0      0   12325
               _Activate_Buzzer_2KHz
                  _Deactivate_Buzzer
                       _Wait_One_Sec
                      _do_update_pwm
 ---------------------------------------------------------------------------------
 (3) _Activate_Buzzer_2KHz                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Do_Beep_Bad                                          0     0      0   12325
              _Activate_Buzzer_500Hz
                  _Deactivate_Buzzer
                       _Wait_One_Sec
                      _do_update_pwm
 ---------------------------------------------------------------------------------
 (3) _do_update_pwm                                        9     9      0   12279
                                             86 BANK0      9     9      0
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (4) ___lbtoft                                             4     1      3    2219
                                             22 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _Wait_One_Sec                                         2     2      0      46
                                             14 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Deactivate_Buzzer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Activate_Buzzer_500Hz                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Decrease_Alarm_Time                                  0     0      0  128886
     _Update_Setup_Alarm_Time_Screen
 ---------------------------------------------------------------------------------
 (2) _Update_Setup_Alarm_Time_Screen                       0     0      0  128886
                            ___awdiv
                            ___awmod
                           _drawtext
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              67    53     14   87409
                                              0 BANK1     20     6     14
                                              0 BANK2     41    41      0
                            ___awdiv
                            ___awmod
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3   19529
                                             64 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                            ___fttol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      31
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             14 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3   19250
                                             64 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    5366
                                             28 BANK0     15     9      6
                            ___awdiv (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    4983
                                             58 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___ftmul (ARG)
                            ___fttol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    5125
                                             20 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     584
                                             14 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     854
                                             14 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    2485
                                             58 BANK0      9     5      4
                            ___ftmul (ARG)
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8    1272
                                             27 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1281
                                             14 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4    1281
                                             43 BANK0     15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4599
                                             86 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    4283
                                             74 BANK0     12     6      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                            ___fttol (ARG)
                           ___lltoft (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     260
                                             67 BANK0      3     0      3
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     848
                                             86 BANK0      9     3      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3218
                                             71 BANK0     15     9      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                             ___wmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2188
                                             14 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _drawtext                                            17     9      8   31369
                                             54 BANK0     17     9      8
                           _drawChar
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     143
                                             14 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _drawChar                                            11     4      7   17514
                                             43 BANK0     11     4      7
                             ___wmul
                          _drawPixel
                           _fillRect
 ---------------------------------------------------------------------------------
 (4) _fillRect                                            11     6      5    8980
                                             32 BANK0     11     6      5
                      _drawFastVLine
 ---------------------------------------------------------------------------------
 (5) _drawFastVLine                                       11     7      4    2442
                                             21 BANK0     11     7      4
                      _setAddrWindow
                           _spiwrite
 ---------------------------------------------------------------------------------
 (4) _drawPixel                                            4     1      3    3367
                                             21 BANK0      4     1      3
                      _setAddrWindow
                         _write_data
 ---------------------------------------------------------------------------------
 (6) _setAddrWindow                                        4     1      3     814
                                             17 BANK0      4     1      3
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (7) _write_data                                           1     1      0      45
                                             16 BANK0      1     1      0
                           _spiwrite
 ---------------------------------------------------------------------------------
 (7) _write_command                                        1     1      0      45
                                             16 BANK0      1     1      0
                           _spiwrite
 ---------------------------------------------------------------------------------
 (6) _spiwrite                                             2     2      0      23
                                             14 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    3358
                                             14 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Do_Init                                              0     0      0     822
                        _DS1621_Init
                           _I2C_Init
                           _Init_ADC
                     _Init_Interrupt
                       _Turn_Off_Fan
                          _init_UART
 ---------------------------------------------------------------------------------
 (2) _init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     1      2     273
                                             14 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Turn_Off_Fan                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init_Interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             4     0      4      53
                                             14 BANK0      4     0      4
                         _i2cHighScl
                         _i2cHighSda
 ---------------------------------------------------------------------------------
 (2) _DS1621_Init                                          1     1      0     496
                                             19 BANK0      1     1      0
                 _I2C_Write_Cmd_Only
           _I2C_Write_Cmd_Write_Data
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Cmd_Write_Data                             3     1      2     263
                                             16 BANK0      3     1      2
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Cmd_Only                                   2     1      1     188
                                             16 BANK0      2     1      1
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _DS1621_Read_Temp                                     5     3      2     318
                                             17 BANK0      5     3      2
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Write                                            2     2      0      91
                                             14 BANK0      2     2      0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (4) _I2C_Read                                             3     3      0     136
                                             14 BANK0      3     3      0
                             _i2cAck
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                            _i2cNack
 ---------------------------------------------------------------------------------
 (5) _i2cNack                                              0     0      0       0
                         _i2cHighScl
                          _i2cLowScl
 ---------------------------------------------------------------------------------
 (5) _i2cAck                                               0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (4) _I2C_ReStart                                          0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (5) _i2cLowSda                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2cLowScl                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2cHighSda                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2cHighScl                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _chkisr                                             14    14      0   39770
                                              0 BANK0     14    14      0
                           _INT0_isr
                           _INT2_isr
                         _TIMER1_isr
 ---------------------------------------------------------------------------------
 (12) _TIMER1_isr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT2_isr                                            0     0      0   39770
                           i2_printf
 ---------------------------------------------------------------------------------
 (13) i2_printf                                           55    53      2   39770
                                             73 COMRAM    49    47      2
                          i2___awdiv
                          i2___awmod
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (14) i2_scale                                            13    10      3    6972
                                             42 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                          i2___fttol (ARG)
                           i2___wmul
 ---------------------------------------------------------------------------------
 (14) i2_putch                                             1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (14) i2_fround                                           16    13      3    6693
                                             42 COMRAM    10     7      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (15) i2___wmul                                            6     2      4    1486
                                             14 COMRAM     6     2      4
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___ftmul                                          15     9      6    2441
                                             27 COMRAM    15     9      6
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
                          i2___fttol (ARG)
                         i2___lltoft (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           6     2      4    1133
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) i2___awdiv                                           8     4      4    1215
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (14) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (14) i2__div_to_l_                                       12     6      6     692
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (14) i2___lltoft                                          9     5      4     970
                                             15 COMRAM     9     5      4
                         i2___ftpack
                          i2___fttol (ARG)
 ---------------------------------------------------------------------------------
 (14) i2___llmod                                           9     1      8     792
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (14) i2___lldiv                                          13     5      8     801
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (14) i2___fttol                                          15    11      4     721
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (14) i2___ftsub                                           6     0      6    2574
                                             64 COMRAM     6     0      6
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___ftadd                                          12     6      6    2408
                                             52 COMRAM    12     6      6
                          i2___ftmul (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
                          i2___fttol (ARG)
                         i2___lltoft (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (14) i2___ftneg                                           3     0      3     170
                                             24 COMRAM     3     0      3
                          i2___fttol (ARG)
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (14) i2___ftge                                            9     3      6     478
                                             64 COMRAM     9     3      6
                          i2___ftadd (ARG)
                          i2___ftneg (ARG)
                          i2___fttol (ARG)
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (14) i2___ftdiv                                          15     9      6    1323
                                             49 COMRAM    15     9      6
                         i2___ftpack
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftpack                                          8     3      5     763
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (12) _INT0_isr                                            2     2      0       0
                                              0 COMRAM     2     2      0
                   _force_nec_state0
 ---------------------------------------------------------------------------------
 (13) _force_nec_state0                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS1621_Read_Temp
     _I2C_ReStart
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Read
       _i2cAck
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cNack
         _i2cHighScl
         _i2cLowScl
     _I2C_Start
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Stop
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Write
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
   _DS3231_Read_Alarm_Time
     _I2C_ReStart
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Read
       _i2cAck
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cNack
         _i2cHighScl
         _i2cLowScl
     _I2C_Start
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Stop
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Write
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
   _DS3231_Read_Time
     _I2C_ReStart
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Read
       _i2cAck
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cNack
         _i2cHighScl
         _i2cLowScl
     _I2C_Start
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Stop
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Write
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
   _DS3231_Turn_Off_Alarm
     _DS3231_Init
       _I2C_ReStart
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Read
         _i2cAck
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cNack
           _i2cHighScl
           _i2cLowScl
       _I2C_Start
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Stop
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Write
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Write_Address_Read_One_Byte
         _I2C_ReStart
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Read
           _i2cAck
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cNack
             _i2cHighScl
             _i2cLowScl
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
       _I2C_Write_Address_Write_One_Byte
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
     _I2C_Write_Address_Read_One_Byte
       _I2C_ReStart
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Read
         _i2cAck
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cNack
           _i2cHighScl
           _i2cLowScl
       _I2C_Start
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Stop
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Write
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
     _I2C_Write_Address_Write_One_Byte
       _I2C_Start
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Stop
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Write
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
   _Do_Beep_Bad
     _Activate_Buzzer_500Hz
     _Deactivate_Buzzer
     _Wait_One_Sec
     _do_update_pwm
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _scale (ARG)
           ___awdiv
             ___wmul (ARG)
           ___awmod
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___wmul (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
           ___wmul (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
       ___lbtoft
         ___ftpack
   _Do_Beep_Good
     _Activate_Buzzer_2KHz
     _Deactivate_Buzzer
     _Wait_One_Sec
     _do_update_pwm
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _scale (ARG)
           ___awdiv
             ___wmul (ARG)
           ___awmod
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___wmul (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
           ___wmul (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___wmul (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
       ___lbtoft
         ___ftpack
   _Do_Init
     _DS1621_Init
       _I2C_Write_Cmd_Only
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
       _I2C_Write_Cmd_Write_Data
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
     _I2C_Init
       _i2cHighScl
       _i2cHighSda
     _Init_ADC
     _Init_Interrupt
     _Turn_Off_Fan
     _init_UART
       _OpenUSART
   _Do_Setup_Alarm_Time
     _DS3231_Read_Alarm_Time
       _I2C_ReStart
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Read
         _i2cAck
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cNack
           _i2cHighScl
           _i2cLowScl
       _I2C_Start
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Stop
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Write
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
     _Decrease_Alarm_Time
       _Update_Setup_Alarm_Time_Screen
         ___awdiv
           ___wmul (ARG)
         ___awmod
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
           ___wmul (ARG)
         _drawtext
           _drawChar
             ___wmul
             _drawPixel
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _write_data
                 _spiwrite
             _fillRect
               _drawFastVLine
                 _setAddrWindow
                   _write_command
                     _spiwrite
                   _write_data
                     _spiwrite
                 _spiwrite
           _strlen
         _printf
           ___awdiv
             ___wmul (ARG)
           ___awmod
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___wmul (ARG)
           ___ftadd
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
               ___lltoft (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___lltoft (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
             _fround (ARG)
               ___awdiv
                 ___wmul (ARG)
               ___awmod
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                 ___wmul (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___wmul
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
             _scale (ARG)
               ___awdiv
                 ___wmul (ARG)
               ___awmod
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                 ___wmul (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
               ___wmul (ARG)
           ___ftge
             ___ftadd (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                 ___lltoft (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___fttol (ARG)
                     ___ftmul (ARG)
                       ___awdiv (ARG)
                         ___wmul (ARG)
                       ___ftpack (ARG)
                       ___lbtoft (ARG)
                         ___ftpack
                       ___wmul (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
               ___lltoft (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
               _fround (ARG)
                 ___awdiv
                   ___wmul (ARG)
                 ___awmod
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                   ___fttol (ARG)
                     ___ftmul (ARG)
                       ___awdiv (ARG)
                         ___wmul (ARG)
                       ___ftpack (ARG)
                       ___lbtoft (ARG)
                         ___ftpack
                       ___wmul (ARG)
                   ___wmul (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___wmul
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
               ___lltoft (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___lltoft (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___lltoft (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
           ___ftsub
             ___ftadd
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                 ___lltoft (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___fttol (ARG)
                     ___ftmul (ARG)
                       ___awdiv (ARG)
                         ___wmul (ARG)
                       ___ftpack (ARG)
                       ___lbtoft (ARG)
                         ___ftpack
                       ___wmul (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
               ___lltoft (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
               _fround (ARG)
                 ___awdiv
                   ___wmul (ARG)
                 ___awmod
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                   ___fttol (ARG)
                     ___ftmul (ARG)
                       ___awdiv (ARG)
                         ___wmul (ARG)
                       ___ftpack (ARG)
                       ___lbtoft (ARG)
                         ___ftpack
                       ___wmul (ARG)
                   ___wmul (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___wmul
             ___lltoft (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___lltoft
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
           ___wmul
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___wmul (ARG)
             ___awmod
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
               ___wmul (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___wmul
           _isdigit
           _putch
           _scale
             ___awdiv
               ___wmul (ARG)
             ___awmod
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
               ___wmul (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___wmul (ARG)
     _Do_Beep_Bad
       _Activate_Buzzer_500Hz
       _Deactivate_Buzzer
       _Wait_One_Sec
       _do_update_pwm
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
           _scale (ARG)
             ___awdiv
               ___wmul (ARG)
             ___awmod
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
               ___wmul (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___wmul (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
         ___lbtoft
           ___ftpack
     _Do_Beep_Good
       _Activate_Buzzer_2KHz
       _Deactivate_Buzzer
       _Wait_One_Sec
       _do_update_pwm
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
           _scale (ARG)
             ___awdiv
               ___wmul (ARG)
             ___awmod
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
               ___wmul (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___wmul (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
         ___lbtoft
           ___ftpack
     _Do_Save_New_Alarm_Time
       _DS3231_Read_Alarm_Time
         _I2C_ReStart
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Read
           _i2cAck
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cNack
             _i2cHighScl
             _i2cLowScl
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
       _DS3231_Read_Time
         _I2C_ReStart
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Read
           _i2cAck
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cNack
             _i2cHighScl
             _i2cLowScl
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
       _DS3231_Write_Alarm_Time
         _DS3231_Read_Time
           _I2C_ReStart
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _I2C_Read
             _i2cAck
               _i2cHighScl
               _i2cHighSda
               _i2cLowScl
               _i2cLowSda
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cNack
               _i2cHighScl
               _i2cLowScl
           _I2C_Start
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _I2C_Stop
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _I2C_Write
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _dec_2_bcd
           ___awdiv
             ___wmul (ARG)
           ___awmod
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___wmul (ARG)
       _Initialize_Screen
         _LCD_Reset
           _delay_ms
             ___wmul
         _TFT_GreenTab_Initialize
           _Rcmd1
             _delay_ms
               ___wmul
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _Rcmd2red
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _Rcmd3
             _delay_ms
               ___wmul
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _drawCircle
           _drawPixel
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _write_data
               _spiwrite
         _drawtext
           _drawChar
             ___wmul
             _drawPixel
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _write_data
                 _spiwrite
             _fillRect
               _drawFastVLine
                 _setAddrWindow
                   _write_command
                     _spiwrite
                   _write_data
                     _spiwrite
                 _spiwrite
           _strlen
         _fillScreen
           _fillRectangle
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
         _strcpy
     _Exit_Setup_Alarm_Time
       _DS3231_Read_Time
         _I2C_ReStart
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Read
           _i2cAck
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cNack
             _i2cHighScl
             _i2cLowScl
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
       _Initialize_Screen
         _LCD_Reset
           _delay_ms
             ___wmul
         _TFT_GreenTab_Initialize
           _Rcmd1
             _delay_ms
               ___wmul
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _Rcmd2red
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _Rcmd3
             _delay_ms
               ___wmul
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _drawCircle
           _drawPixel
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _write_data
               _spiwrite
         _drawtext
           _drawChar
             ___wmul
             _drawPixel
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _write_data
                 _spiwrite
             _fillRect
               _drawFastVLine
                 _setAddrWindow
                   _write_command
                     _spiwrite
                   _write_data
                     _spiwrite
                 _spiwrite
           _strlen
         _fillScreen
           _fillRectangle
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
         _strcpy
     _Go_Next_Alarm_Field
       _Update_Setup_Screen_Cursor_Forward
         _fillRect
           _drawFastVLine
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
     _Go_Prev_Alarm_Field
       _Update_Setup_Screen_Cursor_Backward
         _fillRect
           _drawFastVLine
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
     _Increase_Alarm_Time
       _Update_Setup_Alarm_Time_Screen
         ___awdiv
           ___wmul (ARG)
         ___awmod
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
           ___wmul (ARG)
         _drawtext
           _drawChar
             ___wmul
             _drawPixel
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _write_data
                 _spiwrite
             _fillRect
               _drawFastVLine
                 _setAddrWindow
                   _write_command
                     _spiwrite
                   _write_data
                     _spiwrite
                 _spiwrite
           _strlen
         _printf
           ___awdiv
             ___wmul (ARG)
           ___awmod
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___wmul (ARG)
           ___ftadd
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
               ___lltoft (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___lltoft (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
             _fround (ARG)
               ___awdiv
                 ___wmul (ARG)
               ___awmod
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                 ___wmul (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___wmul
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
             _scale (ARG)
               ___awdiv
                 ___wmul (ARG)
               ___awmod
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                 ___wmul (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
               ___wmul (ARG)
           ___ftge
             ___ftadd (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                 ___lltoft (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___fttol (ARG)
                     ___ftmul (ARG)
                       ___awdiv (ARG)
                         ___wmul (ARG)
                       ___ftpack (ARG)
                       ___lbtoft (ARG)
                         ___ftpack
                       ___wmul (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
               ___lltoft (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
               _fround (ARG)
                 ___awdiv
                   ___wmul (ARG)
                 ___awmod
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                   ___fttol (ARG)
                     ___ftmul (ARG)
                       ___awdiv (ARG)
                         ___wmul (ARG)
                       ___ftpack (ARG)
                       ___lbtoft (ARG)
                         ___ftpack
                       ___wmul (ARG)
                   ___wmul (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___wmul
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
               ___lltoft (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___lltoft (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___lltoft (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
           ___ftsub
             ___ftadd
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                 ___lltoft (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___fttol (ARG)
                     ___ftmul (ARG)
                       ___awdiv (ARG)
                         ___wmul (ARG)
                       ___ftpack (ARG)
                       ___lbtoft (ARG)
                         ___ftpack
                       ___wmul (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
               ___lltoft (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
               _fround (ARG)
                 ___awdiv
                   ___wmul (ARG)
                 ___awmod
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                   ___fttol (ARG)
                     ___ftmul (ARG)
                       ___awdiv (ARG)
                         ___wmul (ARG)
                       ___ftpack (ARG)
                       ___lbtoft (ARG)
                         ___ftpack
                       ___wmul (ARG)
                   ___wmul (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___wmul
             ___lltoft (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___lltoft
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
           ___wmul
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___wmul (ARG)
             ___awmod
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
               ___wmul (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___wmul
           _isdigit
           _putch
           _scale
             ___awdiv
               ___wmul (ARG)
             ___awmod
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
               ___wmul (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___wmul (ARG)
     _Initialize_Setup_Alarm_Time_Screen
       _drawtext
         _drawChar
           ___wmul
           _drawPixel
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _write_data
               _spiwrite
           _fillRect
             _drawFastVLine
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _spiwrite
         _strlen
       _fillRect
         _drawFastVLine
           _setAddrWindow
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _spiwrite
       _fillScreen
         _fillRectangle
           _setAddrWindow
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _spiwrite
       _strcpy
     _Update_Setup_Alarm_Time_Screen
       ___awdiv
         ___wmul (ARG)
       ___awmod
         ___awdiv (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___fttol (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
         ___wmul (ARG)
       _drawtext
         _drawChar
           ___wmul
           _drawPixel
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _write_data
               _spiwrite
           _fillRect
             _drawFastVLine
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _spiwrite
         _strlen
       _printf
         ___awdiv
           ___wmul (ARG)
         ___awmod
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
           ___wmul (ARG)
         ___ftadd
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___lltoft (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
           ___lltoft (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
           _fround (ARG)
             ___awdiv
               ___wmul (ARG)
             ___awmod
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
               ___wmul (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___wmul
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
           _scale (ARG)
             ___awdiv
               ___wmul (ARG)
             ___awmod
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
               ___wmul (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___wmul (ARG)
         ___ftge
           ___ftadd (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
               ___lltoft (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___lltoft (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
             _fround (ARG)
               ___awdiv
                 ___wmul (ARG)
               ___awmod
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                 ___wmul (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___wmul
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___lltoft (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
           ___lltoft (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
           ___lltoft (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
         ___ftsub
           ___ftadd
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
               ___lltoft (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___lltoft (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
             _fround (ARG)
               ___awdiv
                 ___wmul (ARG)
               ___awmod
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                 ___wmul (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___wmul
           ___lltoft (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
         ___wmul
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___wmul (ARG)
           ___awmod
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___wmul (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___wmul
         _isdigit
         _putch
         _scale
           ___awdiv
             ___wmul (ARG)
           ___awmod
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___wmul (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
           ___wmul (ARG)
     _bcd_2_dec
     _check_for_button_input
       _printf
         ___awdiv
           ___wmul (ARG)
         ___awmod
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
           ___wmul (ARG)
         ___ftadd
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___lltoft (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
           ___lltoft (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
           _fround (ARG)
             ___awdiv
               ___wmul (ARG)
             ___awmod
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
               ___wmul (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___wmul
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
           _scale (ARG)
             ___awdiv
               ___wmul (ARG)
             ___awmod
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
               ___wmul (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___wmul (ARG)
         ___ftge
           ___ftadd (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
               ___lltoft (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___lltoft (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
             _fround (ARG)
               ___awdiv
                 ___wmul (ARG)
               ___awmod
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                 ___wmul (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___wmul
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___lltoft (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
           ___lltoft (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftneg
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
           ___lltoft (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
         ___ftsub
           ___ftadd
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
               ___lltoft (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___lltoft (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
             _fround (ARG)
               ___awdiv
                 ___wmul (ARG)
               ___awmod
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___wmul (ARG)
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                 ___wmul (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___wmul
           ___lltoft (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
         ___wmul
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___wmul (ARG)
           ___awmod
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___wmul (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___wmul
         _isdigit
         _putch
         _scale
           ___awdiv
             ___wmul (ARG)
           ___awmod
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___wmul (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
           ___wmul (ARG)
   _Do_Setup_Time
     _DS3231_Read_Time
       _I2C_ReStart
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Read
         _i2cAck
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cNack
           _i2cHighScl
           _i2cLowScl
       _I2C_Start
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Stop
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _I2C_Write
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
     _Decrease_Time
       _Update_Setup_Time_Screen
         ___awdiv
           ___wmul (ARG)
         ___awmod
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
           ___wmul (ARG)
         _drawtext
           _drawChar
             ___wmul
             _drawPixel
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _write_data
                 _spiwrite
             _fillRect
               _drawFastVLine
                 _setAddrWindow
                   _write_command
                     _spiwrite
                   _write_data
                     _spiwrite
                 _spiwrite
           _strlen
     _Do_Beep_Bad
       _Activate_Buzzer_500Hz
       _Deactivate_Buzzer
       _Wait_One_Sec
       _do_update_pwm
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
           _scale (ARG)
             ___awdiv
               ___wmul (ARG)
             ___awmod
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
               ___wmul (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___wmul (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
         ___lbtoft
           ___ftpack
     _Do_Beep_Good
       _Activate_Buzzer_2KHz
       _Deactivate_Buzzer
       _Wait_One_Sec
       _do_update_pwm
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
           _scale (ARG)
             ___awdiv
               ___wmul (ARG)
             ___awmod
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___wmul (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
               ___wmul (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___wmul (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___wmul (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
         ___lbtoft
           ___ftpack
     _Do_Save_New_Time
       _DS3231_Read_Time
         _I2C_ReStart
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Read
           _i2cAck
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cNack
             _i2cHighScl
             _i2cLowScl
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
       _DS3231_Write_Time
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _dec_2_bcd
           ___awdiv
             ___wmul (ARG)
           ___awmod
             ___awdiv (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___wmul (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
             ___wmul (ARG)
       _Initialize_Screen
         _LCD_Reset
           _delay_ms
             ___wmul
         _TFT_GreenTab_Initialize
           _Rcmd1
             _delay_ms
               ___wmul
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _Rcmd2red
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _Rcmd3
             _delay_ms
               ___wmul
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _drawCircle
           _drawPixel
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _write_data
               _spiwrite
         _drawtext
           _drawChar
             ___wmul
             _drawPixel
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _write_data
                 _spiwrite
             _fillRect
               _drawFastVLine
                 _setAddrWindow
                   _write_command
                     _spiwrite
                   _write_data
                     _spiwrite
                 _spiwrite
           _strlen
         _fillScreen
           _fillRectangle
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
         _strcpy
     _Exit_Time_Setup
       _DS3231_Read_Time
         _I2C_ReStart
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Read
           _i2cAck
             _i2cHighScl
             _i2cHighSda
             _i2cLowScl
             _i2cLowSda
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cNack
             _i2cHighScl
             _i2cLowScl
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
       _Initialize_Screen
         _LCD_Reset
           _delay_ms
             ___wmul
         _TFT_GreenTab_Initialize
           _Rcmd1
             _delay_ms
               ___wmul
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _Rcmd2red
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _Rcmd3
             _delay_ms
               ___wmul
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _drawCircle
           _drawPixel
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _write_data
               _spiwrite
         _drawtext
           _drawChar
             ___wmul
             _drawPixel
               _setAddrWindow
                 _write_command
                   _spiwrite
                 _write_data
                   _spiwrite
               _write_data
                 _spiwrite


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri May 14 19:49:31 2021

                                 drawCircle@f 00A7                                   drawCircle@r 009D  
                                 drawCircle@x 00A9                                   drawCircle@y 00AB  
                          __size_of_I2C_Start 0012                                   _SSPSTATbits 000FC7  
                          __size_of_I2C_Write 004C                                  drawCircle@x0 0099  
                                drawCircle@y0 009B                                            l31 8D9E  
                                          l26 89B0                                            l36 91D8  
                                          l29 8D9A                                            l39 8BBC  
                                          l90 8958                                            l93 8AB0  
                __size_of_Do_Setup_Alarm_Time 00DE                                  ___awdiv@sign 0099  
                         ___wmul@multiplicand 0090                                    i2___ftpack 774C  
                             ??_Update_Screen 00C7                                  ___ftadd@exp1 00D5  
                                ___ftadd@exp2 00D4                                    i2___lltoft 8840  
                                ___ftadd@sign 00D3                                           l205 8B30  
                                         l127 8C82                                           l520 927A  
                                         l800 6170                                           l801 619E  
                                         l555 6B34                                           l559 6BA6  
                                         l744 7A56                                           l760 5780  
                                         l808 4996                                           l738 8C00  
                                         l762 55EA                                           l684 87D8  
                                         l694 910A                                           _FAN 007D  
                                         l769 5692                                           l797 61A0  
                                         l798 60C6                                           _PR2 000FCB  
                        DS3231_Init@Address_7 0094                          DS3231_Init@Address_E 0095  
                                         _day 00EA                             _Deactivate_Buzzer 92DE  
                        __size_of_I2C_ReStart 0016                     __size_of_Do_Save_New_Time 0014  
                                         _dow 007F                                           _nbr 01AB  
                                         _rpm 01AF                         __size_of_Turn_Off_Fan 0008  
                                         _rps 01B1                                           _txt 00E4  
                                ___awmod@sign 00BF                                           wreg 000FE8  
                               _Increase_Time 7A58                  __size_of_Go_Next_Alarm_Field 0020  
                          ?_Deactivate_Buzzer 0001               Update_Setup_Fan_Screen@dc_char1 00C7  
             Update_Setup_Fan_Screen@dc_char2 00C8               Update_Setup_Fan_Screen@dc_char3 00C9  
                                  _Fan_SW_Txt 018A                   __end_of_Decrease_Alarm_Time 8780  
      Update_Setup_Screen_Cursor_Forward@xinc 00AD        Update_Setup_Screen_Cursor_Forward@yinc 00AC  
                             ??_fillRectangle 009A                                  __CFG_LVP$OFF 000000  
                     _TFT_GreenTab_Initialize 8E5E                                  ___ftdiv@cntr 00D0  
                                ___ftdiv@sign 00D5                                  __CFG_WDT$OFF 000000  
                              drawFastVLine@h 0096                                          l2022 665E  
                                        l2102 5C56                                          l2111 5C46  
                                        l2120 7684                                          l2104 5B8A  
                                        l1400 461C                                          l2033 6626  
                                        l2201 7DAE                                          l2105 5BCE  
                                        l1321 7F90                                          l2221 8354  
                                        l1325 8CFC                                          l2062 4686  
                                        l2126 5F16                                          l1502 0944  
                                        l1342 8F00                                          l1246 4D30  
                                        l2063 489A                                          l2143 8A00  
                                        l1407 3B58                                          l2136 8E22  
                                        l1328 843E                                          l1513 0A36  
                                        l1257 51B4                                          l2066 46C0  
                                        l2162 8E5C                                          l1370 8DA4  
                                        l2147 6414                                          l1531 0CE6  
                                        l1451 1434                                          l1427 00AC  
                                        l2068 46EA                                          l1460 044E  
                                        l1444 0204                                drawFastVLine@x 009F  
                                        l2077 47CE                                          l1509 0B2A  
                                        l1461 0BE6                                          l1373 8DCE  
                              drawFastVLine@y 0095                                          l2094 62E2  
                                        l2086 47F8                                          l1446 020E  
                                        l2191 773A                                          l1367 85F2  
                                        l2097 62AA                                          l1642 1814  
                                        l1626 1740                                          l1467 04C8  
                                        l1459 044A                                          l1572 117A  
                                        l1556 1120                                          l2188 8DFE  
                                        l1557 10EA                                          l1661 19F4  
                                        l1486 08EA                                          l1903 7BC0  
                                        l1639 17E8                                          l1487 08B4  
                                        l1568 114E                                          l2297 8A4E  
                                        l1585 126A                                          l1690 8228  
                                        l1498 0918                                          l1691 8234  
                                        l1915 8B78                                          l1692 8236  
                                        l1685 8206                                          l1694 8252  
                                        l1689 8226                                          l1697 8D34  
                                        l1890 75B6                                          l1981 5DBA  
                                        l1990 5DAA                I2C_Write_Cmd_Write_Data@Device 0092  
                                        l7231 7A00                                          l7241 7A36  
                                        l7243 7A48                                          l7227 79AC  
                                        l7317 8BD4                                          l7325 8602  
                                        l7329 8622                                          l7533 890C  
                                        l7543 8926                                          l7551 893C  
                                        l7545 8932                                          l7537 8916  
                                        l7555 894C                                          l7571 8AC2  
                                        l7563 8AA6                                          l7557 8952  
                                        l7581 8ADA                                          l7805 6198  
                                        l9503 4D06                                          l7569 8ABC  
                                        l7761 8A0C                                          l9513 5020  
                                        l7763 8A14                                          l9523 513A  
                                        l9507 4F88                                          l9381 820A  
                                        l9373 81F2                                          l7773 6074  
                                        l8901 8D40                                          l9517 5092  
                                        l9509 4FD0                                          l7791 6162  
                                        l8903 8D4E                                          l9519 50E2  
                                        l9377 81FC                                          l9369 81E6  
                                        l9553 8EF6                                          l9481 4AFC  
                                        l9529 518A                                          l7795 6174  
                                        l7779 611A                                          l9491 4C0E  
                                        l9389 821C                                          l9549 8EE4  
                                        l9485 4B76                                          l7799 6182  
                                        l9495 4C5E                                          l9487 4BBE  
                                        l9497 4CAE                                          l9931 89A6  
                       __size_ofi2__div_to_l_ 010A                                          l8959 496E  
                                        l9927 897E                                          STR_1 FEEE  
                                        STR_2 FFD9                                          STR_3 FEA4  
                                        STR_4 FF19                                          l8987 4AC8  
                                        STR_5 FED8                                          STR_6 FF42  
                                        STR_7 FF04                                          STR_8 FF76  
                                        STR_9 FFF6                                  printf@tmpval 0215  
                                        u7300 610C                                          u6510 79F2  
                __end_of_Activate_Buzzer_2KHz 91EC                                          u7290 60BA  
                                        _RBPU 007F8F                  __end_of_Activate_Buzzer_4KHz 91C8  
                                        _TRMT 007D61                      ??_Do_Save_New_Alarm_Time 00C9  
                                _DS1621_tempC 01A1                                  _DS1621_tempF 01A3  
                         ??_Deactivate_Buzzer 008E                                          _date 0140  
                                        _main 51B6                                          _font FC33  
     Update_Setup_Screen_Cursor_Backward@xinc 00AD                                  ___ftpack@arg 008E  
     Update_Setup_Screen_Cursor_Backward@yinc 00AC                                          _hour 00ED  
                                ___ftpack@exp 0091                              __end_of_I2C_Init 92C0  
                            __end_of_I2C_Read 895A                                          _time 0164  
                                        _year 00F1                                          fsr0h 000FEA  
                                        fsr1h 000FE2                                ??_get_full_ADC 0090  
                                        fsr0l 000FE9                                          fsr2h 000FDA  
                                        fsr1l 000FE1                                          indf2 000FDF  
                                        fsr2l 000FD9                                          _wrap 0136  
                                        _volt 019C                              __end_of_I2C_Stop 9210  
                                i2___ftadd@f1 0035                                  i2___ftadd@f2 0038  
                      ?_DS3231_Turn_Off_Alarm 0001                                          pclat 000FFA  
                                i2___ftge@ff1 0041                                  i2___ftge@ff2 0044  
                          __size_of_LCD_Reset 0014                                          prodh 000FF4  
                                        prodl 000FF3                                          start 0018  
                 __size_of_I2C_Write_Cmd_Only 0020                               __end_of_Do_Init 86BC  
                                i2___ftdiv@f1 0032                                  i2___ftdiv@f2 0035  
                                i2___ftdiv@f3 003C                                   _Do_Beep_Bad 90C8  
                             __end_ofi2_scale 4374                                  i2___ftneg@f1 0019  
                             ??_drawFastVLine 0099                               __end_ofi2_putch 92A0  
                                ___ftmul@cntr 00A9                                  i2___ftmul@f1 001C  
                                i2___ftmul@f2 001F                               __end_of_i2cNack 92CA  
                                ___param_bank 000010                                  ___ftmul@sign 00AA  
                                i2___ftsub@f1 0041                                  i2___ftsub@f2 0044  
                                i2___fttol@f1 0001       Update_Setup_Screen_Cursor_Forward@field 00AB  
                                ___fttol@exp1 00B9                     ??_DS3231_Write_Alarm_Time 00C7  
                       __size_of_Do_Beep_Good 001A                                  i2___lltoft@c 0010  
                                _Turn_Off_Fan 92E6                                  ___fttol@lval 00B5  
                                 ?_TIMER1_isr 0001                              __end_of_INT0_isr 5AE2  
                            __end_of_INT2_isr 9152                                         l12001 655A  
                                       l10225 8FCA                                         l10083 900A  
                                       l10235 8FF0                                         l10227 8FD0  
                                       l12013 65D4                                         l12005 6570  
                                       l10093 9030                                         l10085 9010  
                                       l12023 6632                                         l12015 6606  
                                       l12007 6580                                         l12103 4824  
                                       l12017 6616                                         l12009 65B2  
                                       l12113 4874                                         l12201 7596  
                                       l12123 5DE6                                         l13003 08F4  
                                       l12029 6650                                         l12061 46CE  
                                       l12205 75AC                                         l12221 7B3E  
                                       l12125 5E0C                                         l13013 092E  
                                       l12055 4694                                         l12151 5EAC  
                                       l12143 5E70                                         l13111 0E56  
                                       l13103 0DC4                                         l13015 093A  
                                       l13007 0904                                         l12241 7BB6  
                                       l12233 7B90                                         l12225 7B52  
                                       l12217 7B2C                                         l12161 5EF0  
                                       l12153 5EB4                                         l12129 5E20  
                                       l13201 1188                                         l13113 0E6C  
                                       l13041 0B0E                                         l12083 4752  
                                       l12067 46E0                                         l12227 7B60  
                                       l12147 5E90                                         l12411 45D4  
                                       l12403 44EC                                         l13131 0F66  
                                       l13123 0EE8                                         l13107 0E0E  
                                       l13051 0B40                                         l13019 0952  
                                       l12085 4762                                         l12077 4722  
                                       l12173 7506                                         l12229 7B6A  
                                       l12237 7BA0                                         l12157 5ED4  
                                       l13301 157E                                         l13213 1238  
                                       l13125 0EF4                                         l13133 0F7A  
                                       l13109 0E24                                         l13045 0B1E  
                                       l13037 0A66                                         l13029 0A1A  
                                       l12351 55E4                                         l12343 55C0  
                                       l12095 47AE                                         l12087 4772  
                                       l12511 5C0C                                         l12431 38F0  
                                       l13311 15EC                                         l13303 1592  
                                       l13231 12EE                                         l13215 124C  
                                       l13207 1218                                         l13151 1036  
                                       l13143 0FF6                                         l13119 0EBA  
                                       l13039 0AFE                                         l12361 563C  
                                       l12353 55F0                                         l12097 47BE  
                                       l12089 477E                                         l12513 5C14  
                                       l12185 753C                                         l12425 3826  
                                       l13401 19B4                                         l13225 1294  
                                       l13209 1228                                         l13137 0FE2  
                                       l13129 0F38                                         l13057 0B58  
                                       l13049 0B38                                         l12363 5682  
                                       l12347 55D2                                         l12507 5BF8  
                                       l12187 754A                                         l12179 751E  
                                       l12443 3A5E                                         l12435 3902  
                                       l13331 16BE                                         l13323 165A  
                                       l13307 15BA                                         l13243 13EC  
                                       l13227 129C                                         l13219 1270  
                                       l13171 10D4                                         l13163 10B8  
                                       l13147 1030                                         l13139 0FE8  
                                       l13091 0C8C                                         l13083 0C4C  
                                       l13075 0C18                                         l13067 0BC4  
                                       l13059 0B60                                         l14203 7F3C  
                                       l12381 5738                                         l12373 56C2  
                                       l12365 5688                                         l12357 55FA  
                                       l12613 6268                                         l12533 5C84  
                                       l12517 5C2A                                         l12197 7586  
                                       l12189 7554                                         l12461 8E52  
                                       l13333 16CA                                         l13325 1666  
                                       l13317 1622                                         l13261 1480  
                                       l13237 13CC                                         l13181 1108  
                                       l13173 10E0                                         l13157 1084  
                                       l13093 0CB6                                         l13405 19D2  
                                       l14301 874C                                         l14213 7F70  
                                       l12383 576E                                         l12375 56F8  
                                       l12623 62BC                                         l12631 89D6  
                                       l12711 76C6                                         l12527 5C6E  
                                       l12519 5C3C                                         l12471 5B0C  
                                       l13271 14D2                                         l13247 1416  
                                       l13239 13DC                                         l13159 108E  
                                       l13087 0C86                                         l13079 0C3E  
                                       l14311 877A                                         l14223 7F8C  
              __size_of_Activate_Buzzer_500Hz 0012                                         l12721 7726  
                                       l12713 76D0                                         l12449 3B32  
                                       l13353 174E                                         l13337 1702  
                                       l13281 1520                                         l13273 14D8  
                                       l13265 14AA                                         l13185 112A  
                                       l13177 10F8                                         l12801 0058  
                                       l14305 875C                                         l14209 7F66  
                                       l14401 7BF0                                         l12643 763C  
                                       l12731 7D4A                                         l12571 5D70  
                                       l12555 5D30                                         l12547 5CDA  
                                       l13347 172A                                         l13363 17BC  
                                       l13339 170E                                         l13291 153C  
                                       l13195 1164                                         l13099 0D84  
                                       l12803 005E                                         l14411 7C16  
                                       l15203 2FFA                                         l12389 577A  
                                       l13461 6522                                         l13453 64C8  
                                       l13437 6442                                         l12709 76B4  
                                       l12733 7D54                                         l12573 5D78  
                                       l12477 5B36                                         l13381 1822  
                                       l13357 1792                                         l13349 1736  
                                       l13285 1528                                         l13277 14E6  
                                       l13197 1170                                         l13189 113A  
                                       l12901 03FE                                         l12821 00C4  
                                       l12805 0064                                         l12813 007E  
                                       l14309 8762                                         l14413 7C1C  
                                       l14405 7C00                                         l10981 91D2  
                                       l15213 3058                     __end_of_Deactivate_Buzzer 92E6  
                                       l13463 652A                                         l12639 75FA  
                                       l12663 630E                                         l12743 82DE  
                                       l12567 5D5C                                         l12559 5D44  
                                       l13375 17FE                                         l13367 17CE  
                                       l13359 179E                                         l13295 1576  
                                       l13287 152E                                         l12807 006A  
                                       l14263 86BE                                         l14423 7C3E  
                                       l14407 7C06                                         l15143 6AD0  
                                       l13449 64A6                                         l12593 6206  
                                       l12649 7680                                         l12681 6392  
                                       l12737 7D9A                                         l12729 7D38  
                                       l12745 82F0                                         l12577 5D8E  
                                       l13385 1868                                         l13393 1962  
                                       l13377 180A                                         l12921 04B0  
                                       l12913 0470                                         l12905 042E  
                                       l12825 00E4                                         l12833 015E  
                                       l12817 00B8                                         l12809 0070  
                                       l14417 7C28                                         l14433 7A5A  
                                       l12587 61CC                                         l12691 63C4  
                                       l12579 5DA0                                         l12499 5BE0  
                                       l13387 18EC                                         l13395 1976  
                                       l12915 0494                                         l12907 0442  
                                       l12851 0200                                         l12843 01CE  
                                       l14275 86EA                                         l14283 8700  
                                       l15403 7454                                         l14419 7C2E  
                                       l14427 7C44                                         l14451 7A9C  
                                       l14347 90A8                                         l14355 908E  
                                       l15219 30A0                                         l12589 61F2  
                                       l12693 63D6                                         l12685 63A6  
                                       l13397 1980                                         l12933 05BC  
                                       l12925 04CE                                         l12853 020A  
                                       l12861 0274                                         l12845 01E6  
                                       l14293 8730                                         l14269 86D4  
                                       l14285 8718                                         l14429 7C6E  
                                       l14445 7A86                                         l15261 31C0  
                                       l12687 63AE                                         l12695 63E4  
                                       l12855 0214                                         l12839 0186  
                                       l14295 8736                                         l14199 7F22  
                                       l15431 74C2                                         l15423 74A2  
                                       l15415 7482                                         l14463 7AC8  
                                       l14439 7A70                                         l14471 7ADE  
                                       l15271 325A                                         l15159 6B02  
                                       l12953 0706                                         l12945 06D8  
                                       l12849 01FA                                         l14289 8720  
                                       l14393 7BD4                                         l14457 7AB2  
                                       l14473 7B08                                         l15361 6F36  
                                       l15345 6EF8                                         l15273 3278  
                                       l15185 6B96                                         l12699 6402  
                                       l12963 07BA                                         l12955 0728  
                                       l12939 065A                                         l12867 0292  
                                       l12859 0220                                         l12795 002C  
                                       l14299 8746                                         l13683 7216  
                                       l15427 74B2                                         l15419 7492  
                                       l15435 74D2                                         l14395 7BDA  
                                       l15259 31A2                                         l15611 5358  
                                       l15603 5344                                         l12981 0882  
                                       l12893 038E                                         l12877 02DA  
                                       l15437 74D8                                         l14389 7BC4  
                                       l15373 6F66                                         l15365 6F46  
                                       l15357 6F26                                         l15381 6F82  
                                       l15277 3280                                         l15197 2FB2  
                                       l12991 08AA                                         l12975 084E  
                                       l12959 0768                                         l12799 0042  
                                       l15439 74DE                                         l14399 7BEA  
                                       l15471 7E3C                                         l15463 7E1C  
                                       l15279 3288                                         l15615 5362  
                                       l15607 534E                                         l15623 5372  
                                       l12977 0858                                         l12969 0818  
                                       l15369 6F56                                         l15377 6F76  
                                       l15449 7DD4                                         l14489 8B50  
                                       l15633 53B6                                         l15625 5392  
                                       l12995 08C2                                         l15379 6F7C  
                                       l15467 7E2C                                         l15475 7E4C  
                                       l15619 536C                                         l15571 51D6  
                                       l12989 089E                                         l15477 7E52  
                             ??_do_update_pwm 00D6                                         l12999 08D2  
                                       l15479 7E58                               drawFastVLine@hi 009D  
                                       l15599 532E                               drawFastVLine@lo 009E  
               __end_of_Activate_Buzzer_500Hz 91FE                                         ?_main 0001  
                             __end_of___awdiv 75B8                               __end_of___ftadd 489C  
                             drawCircle@ddF_x 00A3                                         STR_10 FFF0  
                             drawCircle@ddF_y 00A5                                         STR_11 FFC4  
                                       STR_20 FFF2                                         STR_12 FFE0  
                                       STR_21 FFEA                                         STR_13 FFBE  
                                       STR_22 FFEE                                         STR_14 FFC9  
                                       STR_30 FF9C                                         STR_23 FFEA  
                                       STR_15 FF83                                         STR_31 FF67  
                                       STR_32 FF04                                         STR_24 FFEE  
                                       STR_16 FFD2                                         STR_17 FFF9  
                                       STR_33 FF90                                         STR_25 FF2E  
                                       STR_34 FFC4                                         STR_18 FFFC  
                                       STR_26 FFB3                                         STR_27 FFC4  
                                       STR_35 FFE0                                         STR_19 FFE5  
                                       STR_28 FFA8                                         STR_36 FEC2  
                             __end_of___awmod 7BC2                                         STR_29 FF04  
                                       STR_37 FF56                               __end_of___ftdiv 62E4  
                             __end_of___ftneg 8E30                               __end_of___lldiv 774C  
                             __end_of___ftmul 5F18                                         _T0CON 000FD5  
                             ___awdiv@divisor 0096                                         _T1CON 000FCD  
                                       u13041 4634                               __end_of___llmod 7DC0  
                                       u13051 4652                               __end_of___ftsub 8A02  
                             __end_of___fttol 6416                                         _T2CON 000FCA  
                                       u13251 5DD2                                         u13271 5DFC  
                                       _T3CON 000FB1                                         u15050 1262  
                                       u13540 570E                                         u15300 16B2  
                                       u14270 0320                                         u14450 06FA  
                                       u14275 0314                                         u14380 04C0  
                                       u13831 61B8                                         u13671 5AF8  
                                       u15520 647E                                         u13851 61E2  
                                       u13931 62FA                                         u13691 5B22  
                                       u15451 1856                                         u13950 6334  
                                       u13955 632A                                         u18637 92A4  
                                       u18590 52E6                                         u18598 52EA  
                                       i2l308 5A8A                                         i2l520 9296  
                                       i2l281 8196                                         i2l296 5AE0  
                             ___awdiv@counter 0098                               drawCircle@color 009F  
                                       _RCSTA 000FAB                                         _TMR0H 000FD7  
                                       _TMR1H 000FCF                                         _TMR0L 000FD6  
                                       _TMR1L 000FCE                                         _TMR3L 000FB2  
                                       _SPBRG 000FAF                                         _PORTD 000F83  
                                       _PORTE 000F84                                  i2__div_to_l_ 699E  
                              ?_Increase_Time 0001                                         _TRISA 000F92  
                                       _TRISB 000F93                                         _TRISC 000F94  
                                       _TRISD 000F95                                         _TRISE 000F96  
                                       _TXREG 000FAD                                         _TXSTA 000FAC  
                             __end_of_get_RPM 8BBE                                         _Rcmd1 677A  
                                       _Rcmd3 6F8C                                  ___lltoft@exp 00C2  
    Update_Setup_Screen_Cursor_Backward@field 00AB                 __size_of_Do_Save_New_Fan_Temp 0014  
                                  _i2cHighSda 92F6                                    _i2cHighScl 92A0  
                                bcd_2_dec@bcd 0092                                    i2isdigit@c 0003  
                                bcd_2_dec@dec 0090                                 ___awtoft@sign 0099  
                             __end_of_dpowers FE36                                         _color 01A9  
                                       _font2 FD32                                    i2scale@scl 0031  
            __size_of_Update_Setup_Fan_Screen 00C2                                         _found 00EC  
                                       _scale 36BC                               __end_of_isdigit 8E5E  
                                       _tempC 018E                                         _tempF 0192  
                                       _month 00EF                                 ___ftpack@sign 0092  
                                       _putch 9274                             __end_of_I2C_Start 9222  
                           __end_of_I2C_Write 8AE8                                __CFG_BOREN$OFF 000000  
                                       tablat 000FF5                              __end_ofi2___ftge 80BE  
                            read_volt@voltage 00D9                              __end_ofi2___wmul 8F52  
                                       status 000FD8                             ?_DS1621_Read_Temp 0091  
                            __end_ofi2_fround 4F76                                 i2___ftdiv@exp 003F  
                                _Do_Beep_Good 90AE                            __size_ofi2___awdiv 0096  
                          __size_ofi2___ftadd 01C4                            __size_ofi2___awmod 0082  
                               i2printf@width 006D                            __size_ofi2___ftdiv 00E2  
                          __size_ofi2___ftneg 0024                            __size_ofi2___lldiv 008C  
                          __size_ofi2___ftmul 00F8                            __size_ofi2___llmod 0070  
                          __size_ofi2___ftsub 0044                            __size_ofi2___fttol 00E6  
             __size_of_check_for_button_input 0098                         __end_of_Go_Next_Field 8FFA  
                            __end_ofi2_printf 2F62                               write_data@data_ 0090  
                          ??_DS1621_Read_Temp 0093                            Set_RGB_Color@color 008E  
                       _Select_Fan_Temp_Field 01BB                               __initialization 8A50  
                           i2___lldiv@divisor 0005                                  __end_of_main 53C6  
                                __end_of_font FD32                             i2___lldiv@counter 000D  
                               i2___ftmul@exp 0025                                    i2printf@ap 0065  
                            __end_of_Init_ADC 92B6                              __end_of_Rcmd2red 8CC2  
                          __size_ofi2_isdigit 0022                            _Select_Alarm_Field 01BA  
                                 ?i2___ftpack 0001                                   ?i2___lltoft 0010  
                                      ??_main 01DE                                 ___fttol@sign1 00B4  
                __size_of_Exit_Setup_Fan_Temp 0010                             _Decrease_Fan_Temp 9094  
                               __activetblptr 000002                             ?_DS3231_Read_Time 0001  
                           __end_of_LCD_Reset 918E                          __size_of__tdiv_to_l_ 0176  
     I2C_Write_Address_Write_One_Byte@Address 0090                         __end_of_Go_Prev_Field 8FDA  
                   ??_TFT_GreenTab_Initialize 009A                            ?_Decrease_Fan_Temp 0001  
                  ??_Update_Setup_Time_Screen 00C7                                _Init_Interrupt 903A  
                          ??_DS3231_Read_Time 0091                                        ?_Rcmd1 0001  
                                      ?_Rcmd3 0001                                     I2C_Init@c 008E  
                         _In_Alarm_Time_Setup 01B5                                     I2C_Read@n 008F  
                 DS3231_Turn_Off_Alarm@Device 009C                                        _ADCON0 000FC2  
                                      _ADCON1 000FC1                                        _ADCON2 000FC0  
                         DS1621_Read_Temp@Cmd 0093                              ___llmod@dividend 009B  
                                      ?_scale 00C0                                        _ADRESH 000FC4  
                                      _ADRESL 000FC3                                        _CCPR1L 000FBE  
                                      _CCPR2L 000FBB                              ___awdiv@dividend 0094  
                          __size_of_i2cLowSda 000A                            __size_of_i2cLowScl 0008  
                            __end_of___awtoft 8B7A                                        ?_putch 0001  
                            __end_of___ftpack 6660                              __end_of___lbtoft 8E00  
                          _Toggle_Fan_Monitor 91C8                           ??_Decrease_Fan_Temp 00CA  
                            __end_of___lltoft 8356                                 ??_Monitor_Fan 00DF  
                                      _DC_Txt 0186                                        i2l2022 7810  
                                      i2l2102 699C                                        i2l2111 698C  
                                      i2l2120 80BC                                        i2l2104 6904  
                                      i2l1400 4F74                                        i2l2033 77E8  
                                      i2l2201 849E                                        i2l2105 692C  
                                      i2l2221 889E                                        i2l2062 57C6  
                                      i2l2126 6D9E                                        i2l1502 217E  
                                      i2l2063 5944                                        i2l2143 8C44  
                                      i2l1407 4372                                        i2l2136 8F68  
                                      i2l1513 225A                                        i2l2066 57F0  
                                      i2l2162 8FB8                                        i2l2147 7166  
                                      i2l1531 2496                                        i2l1451 2ADE  
                                      i2l1427 1A6E                                        i2l1460 1D76  
                                      i2l1444 1B84                                        i2l2077 58B2  
                                      i2l1509 232E                                        i2l1461 23CA  
                                      i2l2094 732A                                        i2l2086 58CE  
                                      i2l1446 1B8A                                        i2l2191 8138  
                                      i2l2097 72F6                                        i2l1642 2DC8  
                                      i2l1626 2D28                                        i2l1467 1DCA  
                                      i2l1459 1D72                                        i2l1572 2872  
                                      i2l1556 282C                                        i2l1557 2800  
                                      i2l1661 2F60                                        i2l1486 2138  
                                      i2l1903 82D4                                        i2l1639 2DA6  
                                      i2l1487 210C                                        i2l1568 2850  
                                      i2l1585 2946                                        i2l1498 215C  
                                      i2l1697 8F50                                     ??_Do_Init 0094  
                                      i2l1890 8026                                        i2l1981 6AA6  
                                      i2l1990 6A96                                     ??i2_scale 002E  
                                      _OSCCON 000FD3               __size_of_Do_Save_New_Alarm_Time 0018  
                                   ??i2_putch 0001                           __size_of_TIMER1_isr 000E  
                                      _SPBRGH 000FB0                                        _SSPBUF 000FC9  
                                   ??_i2cNack 008E                                  _Alarm_SW_Txt 0182  
                            _force_nec_state0 92D4                        __size_ofi2__tdiv_to_l_ 0110  
                            __end_of_delay_ms 87E0                                        _i2cAck 9222  
                         ?_Toggle_Fan_Monitor 0001                  __size_of_Go_Prev_Alarm_Field 0020  
                            __end_of_fillRect 8658                                  i2_scale$3293 002E  
                            __end_of_drawChar 5782                              __end_of__powers_ FE84  
                          __size_of_OpenUSART 0084                                        ___ftge 75B8  
         __end_of_Initialize_Setup_Fan_Screen 740A                   _Initialize_Setup_Fan_Screen 732C  
                 __end_of_Increase_Alarm_Time 871E                          DS3231_Init@control_E 0096  
                                      ___wmul 8CFE                                     ??___awdiv 0098  
                            __end_of_drawtext 6540                                     ??___ftadd 00D0  
                                   ??___awmod 00BE                                     ??___ftdiv 00CD  
                           _In_Fan_Temp_Setup 01B6                                     ??___ftneg 00C6  
                                   ??___lldiv 0096                                     ??___ftmul 00A2  
                                   ??___llmod 00A3                                     ??___ftsub 00DC  
                                   ??___fttol 00AF                                        _chkisr 0008  
                                      _array1 011F                                        _buffer 0100  
              __size_of_Exit_Setup_Alarm_Time 0010                                        _nec_ok 01AD  
               __end_of_Exit_Setup_Alarm_Time 9274                     __end_of_Decrease_Fan_Temp 90AE  
                                      _fround 4374                                        clear_0 8A56  
                                      clear_1 8A62                              ___awdiv@quotient 009A  
                                      _minute 00EE                                        _second 00F0  
                             ___awmod@divisor 00BC                          _Activate_Buzzer_2KHz 91DA  
                           read_volt@num_step 00DC                          _Activate_Buzzer_4KHz 91B6  
                                   ??_get_RPM 009E                    __size_of_Deactivate_Buzzer 0008  
                             ___awmod@counter 00BE                                        _printf 001C  
                                drawtext@size 00BD                               ??_Increase_Time 00C7  
                                      _strcpy 8D36                                        _strlen 8A02  
                              i2___awdiv@sign 000C                         ___ftmul@f3_as_product 00A6  
                      __end_of_Init_Interrupt 905A                          __end_of_get_full_ADC 8DD0  
                      _check_for_button_input 7EFA                              _Do_Save_New_Time 9166  
                        ??_Toggle_Fan_Monitor 008E                                     ??_isdigit 008E  
                                   ?_I2C_Init 008E                                     ?_I2C_Read 0001  
                           __end_ofi2___awdiv 8028                             __end_ofi2___ftadd 5946  
                           __end_ofi2___awmod 82D6                             __end_ofi2___ftdiv 732C  
                              i2___ftadd@exp1 0040                                i2___ftadd@exp2 003F  
                           __end_ofi2___ftneg 8F76                                     ?_I2C_Stop 0001  
                      get_duty_cycle@set_temp 0090                             __end_ofi2___lldiv 814A  
                           __end_ofi2___ftmul 6DA0                             __end_ofi2___llmod 84B0  
                           __end_ofi2___ftsub 8C46                             __end_ofi2___fttol 7168  
                              i2___ftadd@sign 003E                                  __mediumconst FC32  
                                      tblptrh 000FF7                                        tblptrl 000FF6  
                                      tblptru 000FF8              __end_of_I2C_Write_Cmd_Write_Data 8F2A  
                                 ?_i2cHighSda 0001                                   ?_i2cHighScl 0001  
                                      putch@c 008E                        __size_of_Set_RGB_Color 0010  
                              i2___awmod@sign 0006                              __end_of_spiwrite 9110  
                    __size_of_Exit_Time_Setup 0010                            __size_of_bcd_2_dec 003C  
                         _Do_Setup_Alarm_Time 740A                             __end_ofi2_isdigit 8FBA  
                              i2___ftdiv@cntr 003B                                    __accesstop 0080  
                     __end_of__initialization 8A92                              ??_get_duty_cycle 0092  
                              i2___ftdiv@sign 0040         I2C_Write_Address_Read_One_Byte@Device 0093  
                          __size_of_dec_2_bcd 0070                                    ___ftadd@f1 00CA  
                                  ___ftadd@f2 00CD                           __size_ofi2___ftpack 00C6  
                              i2printf@tmpval 0067                                    ___ftge@ff1 00D6  
                                  ___ftge@ff2 00D9                                     ?_INT0_isr 0001  
                                   ?_INT2_isr 0001                           __size_ofi2___lltoft 0060  
                          _setup_alarm_minute 01C1                            _setup_alarm_second 01C2  
                               ___rparam_used 000001                                    ___ftdiv@f1 00C7  
                                  ___ftdiv@f2 00CA                                    ___ftdiv@f3 00D1  
                                  ___ftneg@f1 00C3                                    ___awtoft@c 0096  
                              i2___ftpack@arg 0001                            i2__tdiv_to_l_@exp1 000F  
                           i2___llmod@divisor 0012                                i2___ftpack@exp 0004  
                          i2__tdiv_to_l_@cntr 000E                                    ___lbtoft@c 0099  
                         __end_of_Monitor_Fan 8DA0                       __size_of_Setup_Temp_Fan 00A2  
                         _Go_Next_Alarm_Field 901A                             i2___llmod@counter 0016  
                          i2__tdiv_to_l_@quot 000A                                    ___ftmul@f1 009C  
                                  ___ftmul@f2 009F                                    ___ftsub@f1 00D6  
                                  ___ftsub@f2 00D9                                    ___fttol@f1 00AB  
                               __end_of_Rcmd1 688E                                 __end_of_Rcmd3 7082  
                              __pcstackCOMRAM 0001                            i2___lldiv@dividend 0001  
               DS3231_Turn_On_Alarm@Address_E 0098                 DS3231_Turn_On_Alarm@Address_F 0099  
                                __pidataBANK1 7E62                                    ___lltoft@c 00BA  
                               __end_of_font2 FE0E                                i2___ftmul@cntr 0029  
                           __end_of_i2cLowSda 92D4                             __end_of_i2cLowScl 92F6  
                               __end_of_scale 3B5A                          ?_Do_Setup_Alarm_Time 0001  
                              i2___ftmul@sign 002A                                 __end_of_putch 9284  
                                 i2printf@idx 0055                         ?_Activate_Buzzer_2KHz 0001  
                                 i2printf@exp 006B                         ?_Activate_Buzzer_4KHz 0001  
                                 i2printf@val 006F                        _Do_Save_New_Alarm_Time 90E2  
                              i2___fttol@exp1 000F                                i2___fttol@lval 000B  
                              drawPixel@color 0096                                  dec_2_bcd@bcd 00C4  
                                dec_2_bcd@dec 00C6                                     ?i2___ftge 0041  
                      __size_of_Decrease_Time 00B2                                     ?i2___wmul 000F  
                               i2__tdiv_to_l_ 688E                            _setup_fan_set_temp 01C4  
                          _setup_fan_set_text 017D                               ?_Init_Interrupt 0001  
                      __size_of_write_command 0014                                    __div_to_l_ 5C58  
                                  ??_I2C_Init 0092                                    ??_I2C_Read 008E  
                                _alarm_minute 00E8                                  _alarm_second 00E9  
             ?_Update_Setup_Alarm_Time_Screen 0001              ??_Update_Setup_Alarm_Time_Screen 00DF  
                __end_of_DS3231_Turn_On_Alarm 851C                                    ??_I2C_Stop 008E  
                        ?_Go_Next_Alarm_Field 0001                                     ?i2_fround 002B  
                                     ??_Rcmd1 009A                                       ??_Rcmd3 009A  
                     _Update_Setup_Fan_Screen 7812                                     ?i2_printf 004A  
                          __size_of_drawPixel 0044                             __end_of_OpenUSART 8254  
                             __div_to_l_@exp1 0099                               __div_to_l_@cntr 0098  
                                     ??_scale 00C3                                i2___lltoft@exp 0018  
                             __div_to_l_@quot 0094                                       ??_putch 008E  
                          i2___lldiv@quotient 0009                       ??_DS3231_Turn_Off_Alarm 0098  
                                  __pbssBANK0 00E4                                    __pbssBANK1 0198  
                            _setup_alarm_hour 01C0                                     ?_Init_ADC 0001  
                            i2__tdiv_to_l_@f1 0001                              i2__tdiv_to_l_@f2 0004  
                            _setup_alarm_time 0149          __end_of_Initialize_Setup_Time_Screen 605E  
       __size_of_Initialize_Setup_Time_Screen 0146                  _Initialize_Setup_Time_Screen 5F18  
                               ??_DS1621_Init 0093                                 ??_DS3231_Init 0094  
                                   ?_Rcmd2red 0001                            __size_of_init_UART 0016  
                             spiwrite@spidata 008F                                    _alarm_date 00E6  
                                  ??_INT0_isr 0001                                    ??_INT2_isr 007B  
                                  _alarm_mode 01A7                                    _alarm_hour 00E7  
                                  _alarm_time 0137                                 ?_Wait_One_Sec 0001  
    I2C_Write_Address_Write_One_Byte@Data_Out 0091                                 __div_to_l_@f1 008E  
                               __div_to_l_@f2 0091                                  _fan_set_temp 0134  
                                     ?_i2cAck 0001                                  ?_Do_Beep_Bad 0001  
                          __size_of_read_volt 006C                            __CFG_CCP2MX$PORTBE 000000  
                               _Set_RGB_Color 9234                                I2C_Read@inByte 0090  
                                     ?___ftge 00D6                    DS3231_Turn_On_Alarm@Device 009C  
                                     ?___wmul 008E                           __size_of_i2cHighSda 0008  
                         __size_of_i2cHighScl 000C                         ??_Do_Setup_Alarm_Time 00E2  
                                     ?_chkisr 0001                        __size_of_setAddrWindow 0060  
                           __end_of_bcd_2_dec 8CFE                                       _CCP1CON 000FBD  
            I2C_Write_Cmd_Write_Data@Data_Out 0091                                       _CCP2CON 000FBA  
                      __size_of_Do_Setup_Time 00F6                                  ??_TIMER1_isr 0001  
                  __size_of_Decrease_Fan_Temp 001A                                       ?_fround 00C0  
                               ??_I2C_ReStart 008E                                       _ALARMEN 019F  
                                   ?___awtoft 0096                                     ?___ftpack 008E  
                                   ?___lbtoft 0096                                    I2C_Write@n 008F  
                                     ?_printf 01CA                                     ?___lltoft 00BA  
                              ?i2__tdiv_to_l_ 0001                                    ??i2___ftge 0047  
                                     ?_strcpy 008E                                       ?_strlen 008E  
                           __end_of_dec_2_bcd 8440                                    ??i2___wmul 0013  
                                  _fillScreen 8F76                                       _MATCHED 01A5  
                                     u1612_41 725A                                       u1614_41 7278  
                                     u1631_41 7092                                       u1617_41 689E  
                                     u1570_41 57A6                         __end_of_Update_Screen 36BC  
                                     u1619_41 68BC                                       i2l11051 59CC  
                                     i2l11045 59C2                                       i2l11029 5970  
                                     i2l11071 5A18                                       i2l11063 59F6  
                                     i2l11039 59A2                                       i2l11057 59EC  
                                     i2l11091 5AB8                                       i2l11075 5A1C  
                                     i2l11069 5A12                                       i2l11089 5AB2  
                                     i2l11097 5ABC                                       i2l14003 68AC  
                                     u1590_41 6CB8                                       i2l14111 710A  
                                     i2l14031 693A                                       i2l14113 7110  
                                     i2l14121 713C                                       i2l14009 68CA  
                                     i2l15001 2BEA                                       i2l14107 70FA  
                                     i2l14051 6986                                       i2l14043 695E  
                                     i2l15011 2C3A                                       i2l15003 2BFC  
                                     i2l14061 808C                                       i2l14125 7154  
                                     i2l14117 7124                                       i2l14045 6964  
                                     i2l15101 2F2A                                       i2l14119 7132  
                                     i2l14151 80F6                                       i2l14039 694E  
                                     i2l13511 800C                                       i2l15031 2CCA  
                                     i2l15023 2C80                                       i2l15007 2C18  
                                     i2l14057 805A                                       i2l14049 6978  
                                     i2l14137 8FB0                                       i2l15033 2CD4  
                                     i2l15025 2C8A                                       i2l15017 2C5E  
                                     i2l15105 2F42                      ??_DS3231_Read_Alarm_Time 0091  
                                     i2l14067 80B8                                       i2l13611 58EC  
                                     i2l13603 589A                                       i2l14147 80E0  
                                     i2l14171 8468                                       i2l13515 801C  
                                     i2l13507 8000                                       i2l13531 8278  
                                     i2l13621 591E                                       i2l13605 58A6  
                                     i2l14149 80EE                                       i2l14181 8846  
                                     u1592_41 6CD6                                       i2l15053 2D34  
                                     i2l15037 2CF8                                       i2l14501 1A26  
                                     i2l14079 8C1A                                       i2l14159 8128  
                                     i2l14175 848E                                       i2l14167 8452  
                                     i2l14183 8854                                       i2l13551 82CA  
                                     i2l13543 82AE                                       i2l13535 8286  
                                     i2l13527 826A                                       i2l13631 6CC6  
                                     i2l15047 2D16                                       i2l15063 2D88  
                                     i2l15039 2D02                                       i2l14503 1A2A  
                                     i2l12761 7778                                       i2l14089 70A0  
                                     i2l14169 8460                                       i2l13537 8290  
                                     i2l13633 6CE0                                       i2l15081 2DD4  
                                     i2l15057 2D68                                       i2l15049 2D20  
                                     i2l14601 1D38                                       i2l14521 1A7E  
                                     i2l14505 1A2E                                       i2l14513 1A40  
                                     i2l12771 77DC                                       i2l12763 7798  
                                     i2l12755 775C                                       i2l13563 57D4  
                                     i2l13483 7FA8                                       i2l13539 8298  
                                     i2l13547 82BA                                       i2l13651 6D22  
                                     i2l15075 2DB6                                       i2l15067 2D92  
                                     i2l15059 2D70                                       i2l14507 1A32  
                                     u1569_41 5792                                       i2l13661 6D50  
                                     i2l13637 6CEE                                       i2l15085 2E0A  
                                     i2l15093 2EEC                                       i2l15077 2DC0  
                                     i2l14621 1DB8                                       i2l14613 1D8E  
                                     i2l14605 1D5E                                       i2l14525 1A9C  
                                     i2l14533 1AFC                                       i2l14517 1A76  
                                     i2l14509 1A36                                       i2l12783 7802  
                                     i2l12767 77B0                                       i2l12759 776C  
                                     i2l13591 5856                                       i2l13575 580A  
                                     i2l13903 69BE                                       i2l13495 7FD0  
                                     i2l13655 6D34                                       i2l15087 2E82  
                                     i2l15095 2EFE                                       i2l14703 2140  
                                     i2l14615 1DA6                                       i2l14607 1D6C  
                                     i2l14551 1B82                                       i2l14543 1B56  
                                     i2l12777 77F0                                       i2l12769 77D0  
                                     i2l13593 5862                                       i2l13585 5832  
                                     i2l13569 57FE                                       i2l13497 7FDA  
                                     i2l13489 7FBA                                       i2l13665 6D62  
                                     i2l13841 4E70                                       i2l15097 2F06  
                                     i2l14713 216C                                       i2l14633 1EA6  
                                     i2l14625 1DD0                                       i2l14553 1B88  
                                     i2l14561 1BE8                                       i2l14545 1B6E  
                                  _drawCircle 489C                                       i2l13595 586E  
                                     i2l13499 7FE2                                       i2l13659 6D4A  
                                     i2l14811 25EA                                       i2l14803 256E  
                                     i2l14715 2176                                       i2l14707 214E  
                                     i2l14555 1B8E                                       i2l14539 1B1E  
                                     i2l13597 5876                                       i2l13941 6A68  
                                     i2l13925 6A34                                       i2l13917 6A02  
                                     i2l13669 6D78                                       i2l14901 287E  
                                     i2l14813 25FA                                       i2l14741 2318  
                                     i2l14653 1FB6                                       i2l14645 1F96  
                                     i2l14549 1B7E                                       i2l13943 6A6E  
                                     i2l13863 40C0                                       i2l14831 26D0  
                                     i2l14823 2656                                       i2l14807 25AA  
                                     i2l14751 2342                                       i2l14719 218A  
                                     i2l14663 2054                                       i2l14655 1FD8  
                                     i2l14639 1F2A                                       i2l14567 1C00  
                                     i2l14559 1B98                                       i2l14495 1A02  
                                     i2l15551 8182                                       i2l13937 6A58  
                                     i2l13929 6A44                                       i2l13849 4F34  
                                     i2l13881 429C                                       i2l13873 4178  
                                     i2l14913 2922                                       i2l14825 2660  
                                     i2l14833 26DE                                       i2l14809 25BA  
                                     i2l14745 2326                                       i2l14737 227A  
                                     i2l14729 2246                                       i2l14681 20E6  
                                     i2l14593 1CD4                                       i2l14577 1C42  
                                     i2l13963 7290                                       i2l13947 6A82  
                                     i2l14931 29BA                                       i2l14915 2930  
                                     i2l14907 2908                                       i2l14851 2788  
                                     i2l14843 2754                                       i2l14819 2632  
                                     i2l14739 230C                                       i2l14691 2104  
                                     i2l14675 20C2                                       i2l14659 2014  
                                     i2l14499 1A14                                       i2l15555 818C  
                                     i2l13957 7268                                       i2l13949 6A90  
                                     i2l13869 4168                                       i2l14925 2962  
                                     i2l14909 2914                                       i2l14837 2744  
                                     i2l14829 26A2                                       i2l14757 2356  
                                     i2l14749 233A                                       i2l14677 20CA  
                                     i2l14669 20A2                                       i2l13983 72D0  
                                     i2l13959 7282                                       i2l13887 434E  
                                     i2l14943 2AAA                                       i2l14927 296A  
                                     i2l14919 294C                                       i2l14871 27EE  
                                     i2l14863 27DA                                       i2l14847 2784  
                                     i2l14839 2748                                       i2l14791 244C  
                                     i2l14783 2418                                       i2l14775 23E8  
                                     i2l14767 23AE                                       i2l14759 235E  
                                     i2l14695 2118                                       i2l13993 7304  
                                     i2l13897 69AE                                       i2l14961 2B1E  
                                     i2l14937 2A90                                       i2l14881 281A  
                                     i2l14873 27F8                                       i2l14857 27B6  
                                     i2l14793 2468                                       i2l14689 20FA  
                                     i2l14971 2B5E                                       i2l14947 2AC6  
                                     i2l14939 2A9C                                       i2l14859 27BE  
                                     i2l14787 2448                                       i2l14779 240C  
                                     i2l14699 2126                                       i2l14981 2B9E  
                                     i2l14973 2B62                                       i2l14965 2B44  
                                     i2l14885 2834                                       i2l14877 280C  
                                     i2l14991 2BB4                                       i2l14895 2860  
                                     i2l14799 2532                                       i2l14985 2BA4  
                                     i2l14977 2B6E                                       i2l14897 286A  
                                     i2l14889 2842                                       i2l14995 2BE4  
                                     i2l14987 2BA8                         ??_Go_Next_Alarm_Field 00AE  
                                  ??i2_fround 002E                                     ?_delay_ms 0094  
                                  ??i2_printf 004C                                     ?_fillRect 00A0  
                                   ?_drawChar 00AB                                       _SSPCON1 000FC6  
                                     _SSPSTAT 000FC7                                       _RPM_Txt 0178  
                       __end_of_fillRectangle 61A2                                     ?_drawtext 00B6  
                                  ??_Init_ADC 008E                                       _Do_Init 8658  
                                     i2_scale 3F94                                   _Monitor_Fan 8D6C  
                    _I2C_Write_Cmd_Write_Data 8F02                    __end_of_I2C_Write_Cmd_Only 907A  
                                     i2_putch 9292                                    ??_Rcmd2red 0091  
                      DS1621_Read_Temp@Device 0095                                 _Decrease_Time 7BC2  
                         _Exit_Setup_Fan_Temp 9244                                ??_Wait_One_Sec 008E  
                                     _i2cNack 92C0                            __end_of_TIMER1_isr 9292  
               ?_Initialize_Setup_Time_Screen 0001                  __size_of_Decrease_Alarm_Time 0062  
                               _write_command 91A2                                     _I2C_Start 9210  
                                   _I2C_Write 8A9C                             ??_Exit_Time_Setup 00C7  
                             __size_of_i2cAck 0012                             __end_of__npowers_ FE5D  
                                     __Hparam 0000                                    _scale$3113 00C3  
                __end_of_Do_Save_New_Fan_Temp 9166                                       __Lparam 0000  
                              ?_Set_RGB_Color 0001                           __end_of_DS1621_Init 8EB2  
                         __end_of_DS3231_Init 6E96                             __end_of_drawPixel 8C02  
                       __end_of_drawFastVLine 7A58                               __size_of___ftge 00CE  
                                     ___awdiv 74E8                                       ___ftadd 461E  
                                     ___awmod 7B0E                                       ___ftdiv 61A2  
                                     ___ftneg 8E00                                       ___lldiv 7686  
                             __size_of___wmul 0038                        ??_Activate_Buzzer_2KHz 008E  
                                     ___ftmul 5DBC                                       ___llmod 7D1C  
                      ??_Activate_Buzzer_4KHz 008E                                       ___ftsub 89B2  
                                     ___fttol 62E4                         __size_of_get_full_ADC 0030  
                             __size_of_chkisr 81C8                                     ?_spiwrite 0001  
                                     __pcinit 8A50                                  ??i2___ftpack 0006  
                                  ??___awtoft 0099                                    ??___ftpack 0093  
                                  ??___lbtoft 0099                               __size_of_fround 02AA  
                     i2___ftmul@f3_as_product 0026                                       __ramtop 1000  
                                     _get_RPM 8B7A                                  ??i2___lltoft 0014  
                                  ??___lltoft 00BE                                       __ptext0 51B6  
                                     __ptext1 6AA8                                       __ptext2 9234  
                                     __ptext3 84B0                                       __ptext4 851C  
                                     __ptext5 6DA0                     __size_of_DS1621_Read_Temp 004A  
                                     __ptext6 8EB2                                       __ptext7 8C46  
                                     __ptext8 91B6                                       __ptext9 8588  
                        ?_Exit_Setup_Fan_Temp 0001                               __size_of_printf 19DA  
                           __end_of_init_UART 9126                                     _T0CONbits 000FD5  
                               i2_fround$3291 0031                                 i2_fround$3292 002E  
                             __size_of_strcpy 0036                               __size_of_strlen 004E  
                           __end_of_hexpowers FEA4                      __end_of_force_nec_state0 92DE  
                                   _T1CONbits 000FCD                                   ?__div_to_l_ 008E  
                   ??_Update_Setup_Fan_Screen 00C7                                       _dpowers FE0E  
                       __end_of_do_update_pwm 724A                                  i2fround@prec 0034  
                                     _isdigit 8E30                         _Activate_Buzzer_500Hz 91EC  
                            ___awmod@dividend 00BA                                    _duty_cycle 00EB  
                         _Go_Prev_Alarm_Field 8FFA                             __end_of_read_volt 85F4  
                                  ??_delay_ms 0096                           __end_of_I2C_ReStart 913C  
                               drawtext@_text 00B7                                 drawtext@color 00B9  
                                  ??_fillRect 00A5                                    ??_drawChar 00B2  
                                   _LCD_Reset 917A                             _DS3231_Write_Time 78D4  
                               _setAddrWindow 87E0                                __pintcode_body 814A  
                               Wait_One_Sec@k 008E                                    delay_ms@ms 0094  
                        end_of_initialization 8A92                                 _Do_Setup_Time 6E96  
                                   _INT1_flag 01B3                                     _INT2_flag 01B4  
                                  ??_drawtext 00BE                             _Increase_Fan_Temp 907A  
                          ?_DS3231_Write_Time 0001                                ?_Decrease_Time 0001  
               DS3231_Turn_On_Alarm@control_E 009A                 DS3231_Turn_On_Alarm@control_F 009B  
                              ?_write_command 0001                                 __Lmediumconst FC32  
                   __size_of_DS3231_Read_Time 007A                                       int_func 814A  
                         i2___wmul@multiplier 000F                            ?_Increase_Fan_Temp 0001  
                     DS3231_Read_Time@Address 0091                      DS3231_Write_Time@Address 00C8  
                                  ?_I2C_Start 0001                            __end_ofi2___ftpack 7812  
                                  ?_I2C_Write 0001                                     i2u1703_40 1FAC  
                                   i2u1633_40 70BE                                     i2u1633_45 70B6  
                                   i2u1803_41 2DF8                                    get_RPM@RPS 009E  
                    __end_of_Do_Save_New_Time 917A                                  _get_full_ADC 8DA0  
                                   i2u1763_40 2940                                     i2u1685_40 1C7A  
                          __end_ofi2___lltoft 88A0                                     i2u1685_45 1C70  
                                   i2u1696_40 1DC4                               ___lldiv@divisor 0092  
                                   i2u1788_40 2CC0                                _Setup_Temp_Fan 7DC0  
                         ??_DS3231_Write_Time 00C7                          ?_Go_Prev_Alarm_Field 0001  
                             ___lldiv@counter 009A                       check_for_button_input@j 00E0  
                    ?_DS3231_Write_Alarm_Time 0001                                    _tempSecond 0135  
                        _DS3231_Turn_On_Alarm 84B0                                     _RCSTAbits 000FAB  
                                     printf@c 0226                                       printf@f 01CA  
                         ??_Increase_Fan_Temp 00CA                                       postdec1 000FE5  
                                     postdec2 000FDD                                       postinc0 000FEE  
                                     postinc2 000FDE                                __tdiv_to_l_@f1 008E  
                              __tdiv_to_l_@f2 0091                               ??i2__tdiv_to_l_ 0007  
                                  ??_spiwrite 008E                       ?_check_for_button_input 0001  
                                     strlen@s 008E                                 ??__tdiv_to_l_ 0094  
                 I2C_Write_Cmd_Write_Data@Cmd 0090                         ??_Exit_Setup_Fan_Temp 00C7  
                                   _PORTAbits 000F80                              drawtext@cursor_x 00C6  
                            drawtext@cursor_y 00C5                                     _PORTBbits 000F81  
                                   _PORTDbits 000F83                                    _test_alarm 6AA8  
                            I2C_Write@outByte 008E                                    _setup_date 0152  
                                 ?_fillScreen 00A1                                    _setup_hour 01C5  
                                  _setup_time 015B                                    _setup_year 01C9  
                                 ?_drawCircle 0099               __size_of_DS3231_Read_Alarm_Time 005E  
                                  drawChar@bg 00AF                     __end_of_DS3231_Write_Time 7996  
              DS3231_Turn_Off_Alarm@Address_E 0098                DS3231_Turn_Off_Alarm@Address_F 0099  
                                   _TRISCbits 000F94                                     _TRISDbits 000F95  
        __size_of_Initialize_Setup_Fan_Screen 00DE                        __size_of_Go_Next_Field 0020  
      I2C_Write_Address_Read_One_Byte@Address 0091                                  ??_i2cHighSda 008E  
                                ??_i2cHighScl 008E                             __size_of_I2C_Init 000A  
                           __size_of_I2C_Read 005C                     __end_of_Increase_Fan_Temp 9094  
                           __size_of_I2C_Stop 0012                                ?_setAddrWindow 0091  
                                  ?_LCD_Reset 0001                                ?_Do_Setup_Time 0001  
                                   i2___awdiv 7F92                                     i2___ftadd 5782  
                                   i2___awmod 8254                                     i2___ftdiv 724A  
                                   i2___ftneg 8F52                                     i2___lldiv 80BE  
                            drawtext@textsize 00C1                                     i2___ftmul 6CA8  
                                   i2___llmod 8440                                     i2___ftsub 8C02  
                                   i2___fttol 7082                                    drawPixel@x 0098  
                                  drawPixel@y 0095                                   _DS1621_Init 8E88  
                                 _DS3231_Init 6DA0                        __end_of_Setup_Temp_Fan 7E62  
                                 ___ftdiv@exp 00D4                                   printf@width 021B  
                                   _TXSTAbits 000FAC                            i2___llmod@dividend 000E  
                          i2___awdiv@dividend 0007                               ??_Set_RGB_Color 008E  
                       ??_Go_Prev_Alarm_Field 00AE                               i2___ftpack@sign 0005  
                                   i2_isdigit 8F98             __size_of_Update_Setup_Time_Screen 01E4  
                          get_full_ADC@result 0092                           __size_of__div_to_l_ 0164  
                   ?_Update_Setup_Time_Screen 0001                         ?_DS3231_Turn_On_Alarm 0001  
                           __size_of_INT0_isr 019C                             __size_of_INT2_isr 0016  
                              __end_of_i2cAck 9234                                   ___ftmul@exp 00A5  
                      __size_of_Go_Prev_Field 0020                ??_Initialize_Setup_Time_Screen 00C7  
                     ?_Do_Save_New_Alarm_Time 0001                          __size_of_Do_Beep_Bad 001A  
                    DS1621_Read_Temp@Data_Ret 0094                __end_of_check_for_button_input 7F92  
                            ??_Init_Interrupt 008E                            __end_of_i2cHighSda 92FE  
                              __end_of___ftge 7686                            __end_of_i2cHighScl 92AC  
                              __end_of___wmul 8D36                                 delay_ms@count 0098  
                                  _write_data 918E                                __end_of_chkisr 81D0  
                    ?_TFT_GreenTab_Initialize 0001                                   _I2C_ReStart 9126  
                                  drawtext@bg 00BB                                __end_of_fround 461E  
                       _Exit_Setup_Alarm_Time 9264                        ?_Activate_Buzzer_500Hz 0001  
                                   _Nec_code1 01B8                                     _i2cLowSda 92CA  
                                   _i2cLowScl 92EE                              i2___wmul@product 0013  
                __size_of_Increase_Alarm_Time 0062                          __end_of_Wait_One_Sec 8F02  
                              __end_of_printf 19F6                                 i2_printf$2210 005C  
                               i2_printf$2211 005E                                 i2_printf$2212 0060  
                               i2_printf$2205 0056                                 i2_printf$2206 0058  
                               i2_printf$2209 005A                                 i2_printf$3294 0052  
                       __end_of_Increase_Time 7B0E                                  i2printf@flag 0079  
                              __end_of_strcpy 8D6C                                __end_of_strlen 8A50  
                 __size_of_Toggle_Fan_Monitor 0012                                  i2printf@fval 0073  
                                   _Nec_state 01B9                                  i2printf@prec 0076  
                         start_initialization 8A50                                  i2printf@temp 0062  
                           __size_ofi2___ftge 0096                            i2___awdiv@quotient 000D  
                           __size_ofi2___wmul 0028                           __end_of__tdiv_to_l_ 5C58  
                        _Do_Save_New_Fan_Temp 9152                                     i2printf@c 0078  
                                   i2printf@f 004A                        Update_Screen@neg_tempF 00C9  
                             i2___fttol@sign1 000A                             __size_ofi2_fround 0244  
                                  ?i2___awdiv 0007                                    ?i2___ftadd 0035  
                                  ?i2___awmod 0001                                    ?i2___ftdiv 0032  
                                  ?i2___ftneg 0019                                    ?i2___lldiv 0001  
                                  ?i2___ftmul 001C                                    ?i2___llmod 000E  
                                  ?i2___ftsub 0041                                    ?i2___fttol 0001  
                             ??_Decrease_Time 00C7                            get_duty_cycle@temp 008E  
                           __size_ofi2_printf 156C                               ??_write_command 0090  
             __end_of_DS3231_Write_Alarm_Time 7D1C                                     _OpenUSART 81D0  
              __size_of_DS3231_Turn_Off_Alarm 006C                  DS3231_Read_Alarm_Time@Device 0092  
               __end_of_DS3231_Turn_Off_Alarm 8588                               ?_Setup_Temp_Fan 0001  
                             ___llmod@divisor 009F                              __CFG_OSC$INTIO67 000000  
                                 ??_I2C_Start 008E                             __size_of_Init_ADC 000A  
                             ___llmod@counter 00A3                                   ??_I2C_Write 008E  
                      _DS3231_Read_Alarm_Time 88A0                                      ??_i2cAck 008E  
                                  ?i2_isdigit 0001                             __size_of_Rcmd2red 003E  
                         __size_of_fillScreen 0022       I2C_Write_Address_Read_One_Byte@Data_Ret 0092  
              __end_of_Do_Save_New_Alarm_Time 90FA                           __size_of_drawCircle 024E  
                               _Go_Next_Field 8FDA                                      ??___ftge 00DC  
                                    ??___wmul 0092                                 ?_Turn_Off_Fan 0001  
                                    ??_chkisr 0080                                   __pdataBANK1 0100  
                                    ??_fround 00C3                               setAddrWindow@x0 0094  
                             setAddrWindow@x1 0092                               setAddrWindow@y0 0091  
                             setAddrWindow@y1 0093                                      ??_printf 01D8  
                            _DS1621_Read_Temp 8AE8                                   ?_test_alarm 0001  
                                    ??_strcpy 0092                                      ??_strlen 0090  
                                  ?_i2cLowSda 0001                                    ?_i2cLowScl 0001  
                         _Decrease_Alarm_Time 871E                                     _bcd_2_dec 8CC2  
                                  fround@prec 00C9                                 ?i2__div_to_l_ 0001  
                           __size_of___awtoft 0048                             __size_of___ftpack 0120  
                           __size_of___lbtoft 0030                             __size_of___lltoft 0080  
                                 __pbssCOMRAM 007B                    ??_I2C_Write_Cmd_Write_Data 0092  
                  __size_of_DS3231_Write_Time 00C2                               ??_setAddrWindow 0094  
                               __pcstackBANK0 0080                                 __pcstackBANK1 01CA  
                               __pcstackBANK2 0200                                 _Go_Prev_Field 8FBA  
                             ??_Do_Setup_Time 00E2                         ?_Do_Save_New_Fan_Temp 0001  
                                   _dec_2_bcd 83D0                               _Exit_Time_Setup 9254  
                  __size_of_Increase_Fan_Temp 001A                                   ??_LCD_Reset 009A  
                                _isdigit$2749 008F                             __size_of_delay_ms 0060  
                                    ?_Do_Init 0001                                  ?_Monitor_Fan 0001  
                           __size_of_fillRect 0064                                      ?i2_scale 002B  
                           __size_of_drawChar 01D8                                    ?_OpenUSART 008E  
                                    ?i2_putch 0001                              _DS3231_Read_Time 8356  
                                    ?_i2cNack 0001                          ?_Decrease_Alarm_Time 0001  
                           __size_of_drawtext 012A                                 ?_Do_Beep_Good 0001  
                      ??_DS3231_Turn_On_Alarm 0098   __end_of_Update_Setup_Screen_Cursor_Backward 51B6  
__size_of_Update_Setup_Screen_Cursor_Backward 0240          ?_Update_Setup_Screen_Cursor_Backward 0001  
       ??_Update_Setup_Screen_Cursor_Backward 00AB           _Update_Setup_Screen_Cursor_Backward 4F76  
                 __end_of_Do_Setup_Alarm_Time 74E8                                ?_Go_Next_Field 0001  
                                 I2C_Read@ack 008E                                     _bit_count 01BD  
                                   __pintcode 0008               __end_of_TFT_GreenTab_Initialize 8E88  
                              ??_Turn_Off_Fan 008E                                 __pmediumconst FC32  
                                    ?___awdiv 0094                                     __ptext100 8CFE  
                                   __ptext101 8658                                     __ptext110 905A  
                                   __ptext102 9110                                     __ptext111 8AE8  
                                   __ptext103 81D0                                     __ptext120 92EE  
                                   __ptext112 8A9C                                     __ptext104 92E6  
                                   __ptext121 92F6                                     __ptext113 91FE  
                                   __ptext105 903A                                     __ptext130 4D32  
                                   __ptext122 92A0                                     __ptext114 9210  
                                   __ptext106 92AC                                     __ptext131 8F2A  
                                   __ptext115 88FE                                     __ptext107 92B6  
                                   __ptext140 7082                                     __ptext132 6CA8  
                                   __ptext124 9284                                     __ptext116 92C0  
                                   __ptext108 8E88                                     __ptext141 8C02  
                                   __ptext133 8254                                     __ptext125 913C  
                                   __ptext117 9222                                     __ptext109 8F02  
                                    ?___ftadd 00CA                                     __ptext142 5782  
                                   __ptext134 7F92                                     __ptext126 19F6  
                                   __ptext118 9126                                     __ptext143 8F52  
                                   __ptext135 688E                                     __ptext127 3F94  
                                   __ptext119 92CA                                     __ptext144 8028  
                                   __ptext136 699E                                     __ptext128 9292  
                                   __ptext145 724A                                     __ptext137 8840  
                                   __ptext129 8F98                                     __ptext146 774C  
                                   __ptext138 8440                                     __ptext147 5946  
                                   __ptext139 80BE                                     __ptext148 92D4  
                                    ?___awmod 00BA                                      ?___ftdiv 00C7  
                                    ?___ftneg 00C3                                      ?___lldiv 008E  
                                    ?___ftmul 009C                                      ?___llmod 009B  
                                    ?___ftsub 00D6                                     __npowers_ FE36  
                                    ?___fttol 00AB                       __size_of_get_duty_cycle 0058  
                                   __tft_type 007E                            _I2C_Write_Cmd_Only 905A  
                 __end_of_Go_Next_Alarm_Field 903A                DS3231_Turn_Off_Alarm@control_E 009A  
              DS3231_Turn_Off_Alarm@control_F 009B                            drawFastVLine@color 0097  
                                 ?_write_data 0001                        ?_Exit_Setup_Alarm_Time 0001  
                                   _drawPixel 8BBE                                      ?_get_RPM 009C  
                                 __tdiv_to_l_ 5AE2                                ??i2__div_to_l_ 0007  
                           __size_of_spiwrite 0016                                  ??__div_to_l_ 0094  
                                  ?_bcd_2_dec 0001                           ?_I2C_Write_Cmd_Only 0090  
                           ?_force_nec_state0 0001                                      ?_isdigit 0001  
                                    _I2C_Init 92B6                                      _I2C_Read 88FE  
                              ?_Go_Prev_Field 0001                                      _I2C_Stop 91FE  
                           _Initialize_Screen 3B5A                                __size_of_Rcmd1 0114  
                              __size_of_Rcmd3 00F6                                     _init_UART 9110  
                                  ?_dec_2_bcd 00C0                            ??_force_nec_state0 0001  
                    I2C_Write_Cmd_Only@Device 0091                                     _hexpowers FE84  
                          ?_Initialize_Screen 0001                                   ??i2___awdiv 000B  
                                 ??i2___ftadd 003B                                   ??i2___awmod 0005  
                                 ??i2___ftdiv 0038                                   ??i2___ftneg 001C  
                                 ??i2___lldiv 0009                                   ??i2___ftmul 0022  
                              __size_of_scale 049E                                   ??i2___llmod 0016  
                                 ??i2___ftsub 0047                                   ??i2___fttol 0005  
                              __size_of_putch 0010                                     _read_volt 8588  
    __end_of_I2C_Write_Address_Write_One_Byte 8EDA     __size_of_I2C_Write_Address_Write_One_Byte 0028  
          ??_I2C_Write_Address_Write_One_Byte 0092             ?_I2C_Write_Address_Write_One_Byte 0090  
            _I2C_Write_Address_Write_One_Byte 8EB2                         ??_Decrease_Alarm_Time 00DF  
                              ___wmul@product 0092                                ??_Do_Beep_Good 00DF  
                         ??_Initialize_Screen 00C7                                  _Select_Field 01BC  
                                    _INT0_isr 5946                                      _INT2_isr 913C  
                        ??_I2C_Write_Cmd_Only 0091                           __size_of_test_alarm 0100  
                                    _PIE1bits 000F9D                                   ??i2_isdigit 0001  
                           ?_Do_Save_New_Time 0001                        __size_of_Update_Screen 075A  
                      DS3231_Read_Time@Device 0092                       DS3231_Write_Time@Device 00C7  
                                    _PIR1bits 000F9E                            __end_of__div_to_l_ 5DBC  
                               _In_Time_Setup 01B7                            ??_Do_Save_New_Time 00C9  
                            _Fan_Set_Temp_Txt 0173                  ?_Initialize_Setup_Fan_Screen 0001  
                             i2__div_to_l_@f1 0001                               i2__div_to_l_@f2 0004  
                       __size_of_Wait_One_Sec 0028                                     _setup_day 01C3  
                           DS1621_Init@Device 0093                                     fillRect@h 00A2  
                                   fillRect@i 00A9                                     fillRect@w 00A1  
                                   fillRect@x 00A8                                     fillRect@y 00A0  
                                   drawChar@c 00AC                                     drawChar@i 00B5  
                                   drawChar@j 00B4                                     drawChar@x 00B3  
                                   drawChar@y 00AB                 __size_of_Activate_Buzzer_2KHz 0012  
               __size_of_Activate_Buzzer_4KHz 0012                                    ?_drawPixel 0095  
                      __size_of_fillRectangle 0144                                    _ADCON0bits 000FC2  
                     __end_of_Exit_Time_Setup 9264                             ___wmul@multiplier 008E  
                                    i2___ftge 8028                     __end_of_Initialize_Screen 3F94  
                                 ??_i2cLowSda 008E                                   ??_i2cLowScl 008E  
               DS3231_Read_Alarm_Time@Address 0091                                  ??_fillScreen 00A3  
                                    i2___wmul 8F2A              __size_of_DS3231_Write_Alarm_Time 00A8  
                                ??_drawCircle 00A1                                    printf@flag 0227  
                                  printf@fval 0221                                    printf@prec 0224  
                                  printf@temp 0210                        ??_Do_Save_New_Fan_Temp 00C7  
                           i2___awdiv@divisor 0009                                      i2_fround 4D32  
                           i2___awdiv@counter 000B                                    ?_init_UART 0001  
                                    i2_printf 19F6              __end_of_Update_Setup_Time_Screen 55AA  
                                 _INTCON2bits 000FF1       __end_of_I2C_Write_Address_Read_One_Byte 8C84  
    __size_of_I2C_Write_Address_Read_One_Byte 003E             ??_I2C_Write_Address_Read_One_Byte 0092  
            ?_I2C_Write_Address_Read_One_Byte 0091               _I2C_Write_Address_Read_One_Byte 8C46  
                                 _INTCON3bits 000FF0                                     copy_data0 8A86  
                                   drawtext@i 00C3                        __size_of_drawFastVLine 00C2  
                                   drawtext@x 00C0                                     drawtext@y 00B6  
                                  ?_read_volt 00D6                                      _Nec_code 0198  
                          i2___awmod@dividend 0001                                      _Init_ADC 92AC  
                           write_command@cmd_ 0090    __end_of_Initialize_Setup_Alarm_Time_Screen 6CA8  
 __size_of_Initialize_Setup_Alarm_Time_Screen 0100           ?_Initialize_Setup_Alarm_Time_Screen 0001  
        ??_Initialize_Setup_Alarm_Time_Screen 00C7            _Initialize_Setup_Alarm_Time_Screen 6BA8  
                                 ??_OpenUSART 0090                                  ?_DS1621_Init 0001  
                                    _Rcmd2red 8C84                              __size_of_Do_Init 0064  
                         __size_of_write_data 0014                                  ?_DS3231_Init 0001  
                                    i2putch@c 0001                              __size_ofi2_scale 03E0  
                             ??_Go_Next_Field 00AE                               OpenUSART@config 0090  
      I2C_Write_Address_Write_One_Byte@Device 0092                              __size_ofi2_putch 000E  
                                _Time_Elapsed 007B                           _Increase_Alarm_Time 86BC  
                            __size_of_i2cNack 000A                                 _RTC_ALARM_Txt 0196  
                                _Wait_One_Sec 8EDA                                      __Hrparam 0000  
                      __size_of_do_update_pwm 00E2                            __end_of_fillScreen 8F98  
                                    __Lrparam 0000                            __end_of_drawCircle 4AEA  
                 __end_of_Exit_Setup_Fan_Temp 9254                       ??_Activate_Buzzer_500Hz 008E  
                            __size_of___awdiv 00D0                              __size_of___ftadd 027E  
                    ?_Update_Setup_Fan_Screen 0001                              __size_of___awmod 00B4  
                            __size_of___ftdiv 0142                              __size_of___ftneg 0030  
                       i2___wmul@multiplicand 0011                              __size_of___lldiv 00C6  
                            __size_of___ftmul 015C                              __size_of___llmod 00A4  
                            __size_of___ftsub 0050                              __size_of___fttol 0132  
                                    _Volt_Txt 016D                 ??_Initialize_Setup_Fan_Screen 00C7  
                                    ___awtoft 8B32                                      ___ftpack 6540  
                                    ___lbtoft 8DD0                                  ?_I2C_ReStart 0001  
                                 _fround$3111 00C6                                   _fround$3112 00C3  
                                    ___lltoft 82D6                         __end_ofi2__tdiv_to_l_ 699E  
                             ??_Go_Prev_Field 00AE                              __size_of_get_RPM 0044  
                                 ??_bcd_2_dec 008E                          ?_Increase_Alarm_Time 0001  
                               _Update_Screen 2F62                              __size_of_isdigit 002E  
                                    _delay_ms 8780                                   ??_dec_2_bcd 00C2  
                                    __ptext10 8DA0                                      __ptext11 8B32  
                                    __ptext20 9094                                      __ptext12 8B7A  
                                    __ptext21 7812                                      __ptext13 2F62  
                                    __ptext30 9166                                      __ptext22 8D6C  
                                    __ptext14 91C8                                      __ptext31 78D4  
                                    __ptext23 895A                                      __ptext15 7DC0  
                                    __ptext40 4F76                                      __ptext32 7BC2  
                                    __ptext24 6E96                                      __ptext16 732C  
                                    __ptext41 901A                                      __ptext33 53C6  
                                    __ptext25 5F18                                      __ptext17 907A  
                                    __ptext50 8E5E                                      __ptext42 4AEA  
                                    __ptext34 740A                                      __ptext26 7A58  
                                    __ptext18 9244                                      __ptext51 6F8C  
                                    __ptext43 9264                                      __ptext35 7EFA  
                                    __ptext27 8FBA                                      __ptext19 9152  
                                    __ptext60 90AE                                      __ptext52 8C84  
                                    __ptext44 90E2                                      __ptext36 8CC2  
                                    __ptext28 8FDA                                      __ptext61 91DA  
                                    __ptext53 677A                                      __ptext45 3B5A  
                                    __ptext37 6BA8                                      __ptext29 9254  
                                    __ptext70 001C                                      __ptext62 90C8  
                                    __ptext54 917A                                      __ptext46 8D36  
                                    __ptext38 86BC                                      __ptext71 36BC  
                                    __ptext63 7168                                      __ptext55 8780  
                                    __ptext47 8F76                                      __ptext39 8FFA  
                                    __ptext80 82D6                                      __ptext72 9274  
                                    __ptext64 8DD0                                      __ptext56 7C74  
                                    __ptext48 605E                                      __ptext81 7D1C  
                                    __ptext73 8E30                                      __ptext65 8EDA  
                                    __ptext57 83D0                                      __ptext49 489C  
                                    __ptext90 6416                                      __ptext82 7686  
                                    __ptext74 4374                                      __ptext66 92DE  
                                    __ptext58 8356                                      __ptext91 8A02  
                                    __ptext83 62E4                                      __ptext75 5DBC  
                                    __ptext67 91EC                                      __ptext59 88A0  
                                    __ptext92 55AA                                      __ptext84 89B2  
                                    __ptext76 7B0E                                      __ptext68 871E  
                                    __ptext93 85F4                                      __ptext85 461E  
                                    __ptext77 74E8                                      __ptext69 6660  
                                    __ptext94 7996                                      __ptext86 8E00  
                                    __ptext78 5AE2                                      __ptext95 8BBE  
                                    __ptext87 75B8                                      __ptext79 5C58  
                                    __ptext96 87E0                                      __ptext88 61A2  
                                    __ptext97 918E                                      __ptext89 6540  
                                    __ptext98 91A2                                      __ptext99 90FA  
                                    _fillRect 85F4                                      _drawChar 55AA  
                                    __powers_ FE5D                              ??_Setup_Temp_Fan 00E2  
                        __end_of_Turn_Off_Fan 92EE              __size_of_TFT_GreenTab_Initialize 002A  
  __end_of_Update_Setup_Screen_Cursor_Forward 4D32   __size_of_Update_Setup_Screen_Cursor_Forward 0248  
         ?_Update_Setup_Screen_Cursor_Forward 0001          ??_Update_Setup_Screen_Cursor_Forward 00AB  
          _Update_Setup_Screen_Cursor_Forward 4AEA                                      _colstart 01BE  
                 __end_of_Go_Prev_Alarm_Field 901A                                      _drawtext 6416  
                                  strcpy@from 0090                                i2_isdigit$2749 0002  
                     ?_DS3231_Read_Alarm_Time 0001                                 _fillRectangle 605E  
              DS3231_Write_Alarm_Time@Address 00C8                      __end_of_DS1621_Read_Temp 8B32  
                               __size_of_main 0210                          __size_of_Monitor_Fan 0034  
                        __end_ofi2__div_to_l_ 6AA8                                 ??_Do_Beep_Bad 00DF  
                       __end_of_Set_RGB_Color 9244                               fillRectangle@hi 009E  
                             fillRectangle@lo 009F                                _get_duty_cycle 895A  
                               _drawFastVLine 7996                                     printf@idx 0203  
                                   printf@exp 0219                                      _spiwrite 90FA  
                                   printf@val 021D                             DS3231_Init@Device 0097  
                                 ??_drawPixel 0098                                      _rowstart 01BF  
                  __end_of_Toggle_Fan_Monitor 91DA                                  ??_test_alarm 00DF  
                    __end_of_DS3231_Read_Time 83D0                         ??_Increase_Alarm_Time 00DF  
                  __size_of_Initialize_Screen 043A                              ?_Exit_Time_Setup 0001  
                        __end_of_Do_Beep_Good 90C8                             i2___awmod@divisor 0003  
                              ?_Update_Screen 0001                             i2___awmod@counter 0005  
                                  _INTCONbits 000FF2                                 _do_update_pwm 7168  
                              OpenUSART@spbrg 008E                                   ??_init_UART 0091  
                                    isdigit@c 0090                                      scale@scl 00C6  
              __end_of_DS3231_Read_Alarm_Time 88FE                                   ??_read_volt 00D9  
                                   spiwrite@x 008E                                      intlevel2 0000  
                              ?_fillRectangle 0095                              __tdiv_to_l_@exp1 009C  
                            __tdiv_to_l_@cntr 009B                              __tdiv_to_l_@quot 0097  
                       __end_of_Decrease_Time 7C74                      _Update_Setup_Time_Screen 53C6  
                       __end_of_write_command 91B6                              ___lldiv@dividend 008E  
                             fillScreen@color 00A1                            __end_of_test_alarm 6BA8  
                       _DS3231_Turn_Off_Alarm 851C                 DS3231_Write_Alarm_Time@Device 00C7  
                     do_update_pwm@duty_cycle 00DC                        __end_of_get_duty_cycle 89B2  
                      __size_of_Increase_Time 00B6               __end_of_Update_Setup_Fan_Screen 78D4  
                              fillRectangle@h 0097                                fillRectangle@w 0096  
                              fillRectangle@x 00A0                                fillRectangle@y 0095  
                     ??_Exit_Setup_Alarm_Time 00C7                                ?_drawFastVLine 0095  
                                    printf@ap 0213                           __end_of_Do_Beep_Bad 90E2  
                                ??_write_data 0090                                    _TIMER1_isr 9284  
                               fillRect@color 00A3                                  ?__tdiv_to_l_ 008E  
                     _DS3231_Write_Alarm_Time 7C74                                   _printf$2210 020A  
                                 _printf$2211 020C                                   _printf$2212 020E  
                                 _printf$2205 0204                                   _printf$2206 0206  
                                 _printf$2209 0208                                   _printf$3114 0200  
                              ?_do_update_pwm 0001                              ___lldiv@quotient 0096  
                                    strcpy@cp 0092                                      strlen@cp 0092  
                                    strcpy@to 008E                         I2C_Write_Cmd_Only@Cmd 0090  
                                _setup_minute 01C6                                  _setup_second 01C8  
                     __size_of_Init_Interrupt 0020                         __end_of_setAddrWindow 8840  
                       __end_of_Do_Setup_Time 6F8C                            fillRectangle@color 0098  
                           do_update_pwm@dc_I 00DD                             i2__div_to_l_@exp1 000C  
                           i2__div_to_l_@cntr 000B                             do_update_pwm@dc_f 00D9  
                               drawChar@color 00AD                                   _setup_month 01C7  
                           i2__div_to_l_@quot 0007                            __end_of_write_data 91A2  
                   __size_of_force_nec_state0 000A                                  drawChar@line 00B2  
                               ?_get_full_ADC 008E                      ??_check_for_button_input 00DF  
                                drawChar@size 00B1             __size_of_I2C_Write_Cmd_Write_Data 0028  
                        __size_of_DS1621_Init 002A                     ?_I2C_Write_Cmd_Write_Data 0090  
                        __size_of_DS3231_Init 00F6                               ?_get_duty_cycle 008E  
               __size_of_DS3231_Turn_On_Alarm 006C        __end_of_Update_Setup_Alarm_Time_Screen 677A  
     __size_of_Update_Setup_Alarm_Time_Screen 011A                _Update_Setup_Alarm_Time_Screen 6660  
