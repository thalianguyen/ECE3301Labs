

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Apr 23 23:09:20 2021

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           	psect	idataCOMRAM
    54  001B3A                     __pidataCOMRAM:
    55                           	opt stack 0
    56                           
    57                           ;initializer for _array1
    58  001B3A  A2                 	db	162
    59  001B3B  62                 	db	98
    60  001B3C  E2                 	db	226
    61  001B3D  22                 	db	34
    62  001B3E  02                 	db	2
    63  001B3F  C2                 	db	194
    64  001B40  E0                 	db	224
    65  001B41  A8                 	db	168
    66  001B42  90                 	db	144
    67  001B43  68                 	db	104
    68  001B44  98                 	db	152
    69  001B45  B0                 	db	176
    70  001B46  30                 	db	48
    71  001B47  18                 	db	24
    72  001B48  7A                 	db	122
    73  001B49  10                 	db	16
    74  001B4A  38                 	db	56
    75  001B4B  5A                 	db	90
    76  001B4C  42                 	db	66
    77  001B4D  4A                 	db	74
    78  001B4E  52                 	db	82
    79                           
    80                           ;initializer for _tempSecond
    81  001B4F  FF                 	db	255
    82                           
    83                           	psect	smallconst
    84  001000                     __psmallconst:
    85                           	opt stack 0
    86  001000  00                 	db	0
    87  001001                     _dpowers:
    88                           	opt stack 0
    89  001001  0001               	dw	1
    90  001003  000A               	dw	10
    91  001005  0064               	dw	100
    92  001007  03E8               	dw	1000
    93  001009  2710               	dw	10000
    94  00100B                     __end_of_dpowers:
    95                           	opt stack 0
    96  00100B                     _hexpowers:
    97                           	opt stack 0
    98  00100B  0001               	dw	1
    99  00100D  0010               	dw	16
   100  00100F  0100               	dw	256
   101  001011  1000               	dw	4096
   102  001013                     __end_of_hexpowers:
   103                           	opt stack 0
   104  0000                     _ADCON1	set	4033
   105  0000                     _CCP2CON	set	4026
   106  0000                     _CCPR2L	set	4027
   107  0000                     _INTCON2bits	set	4081
   108  0000                     _INTCONbits	set	4082
   109  0000                     _OSCCON	set	4051
   110  0000                     _PIE1bits	set	3997
   111  0000                     _PIR1bits	set	3998
   112  0000                     _PORTBbits	set	3969
   113  0000                     _PORTCbits	set	3970
   114  0000                     _PR2	set	4043
   115  0000                     _RCSTA	set	4011
   116  0000                     _RCSTAbits	set	4011
   117  0000                     _SPBRG	set	4015
   118  0000                     _SPBRGH	set	4016
   119  0000                     _T1CON	set	4045
   120  0000                     _T1CONbits	set	4045
   121  0000                     _T2CON	set	4042
   122  0000                     _TMR1H	set	4047
   123  0000                     _TMR1L	set	4046
   124  0000                     _TRISB	set	3987
   125  0000                     _TRISC	set	3988
   126  0000                     _TRISCbits	set	3988
   127  0000                     _TRISD	set	3989
   128  0000                     _TXREG	set	4013
   129  0000                     _TXSTA	set	4012
   130  0000                     _TXSTAbits	set	4012
   131  0000                     _RBPU	set	32655
   132  0000                     _TRMT	set	32097
   133  001013                     STR_2:
   134  001013  20                 	db	32
   135  001014  54                 	db	84	;'T'
   136  001015  65                 	db	101	;'e'
   137  001016  6D                 	db	109	;'m'
   138  001017  70                 	db	112	;'p'
   139  001018  65                 	db	101	;'e'
   140  001019  72                 	db	114	;'r'
   141  00101A  61                 	db	97	;'a'
   142  00101B  74                 	db	116	;'t'
   143  00101C  75                 	db	117	;'u'
   144  00101D  72                 	db	114	;'r'
   145  00101E  65                 	db	101	;'e'
   146  00101F  20                 	db	32
   147  001020  3D                 	db	61	;'='
   148  001021  20                 	db	32
   149  001022  25                 	db	37
   150  001023  64                 	db	100	;'d'
   151  001024  20                 	db	32
   152  001025  64                 	db	100	;'d'
   153  001026  65                 	db	101	;'e'
   154  001027  67                 	db	103	;'g'
   155  001028  72                 	db	114	;'r'
   156  001029  65                 	db	101	;'e'
   157  00102A  65                 	db	101	;'e'
   158  00102B  73                 	db	115	;'s'
   159  00102C  43                 	db	67	;'C'
   160  00102D  20                 	db	32
   161  00102E  3D                 	db	61	;'='
   162  00102F  20                 	db	32
   163  001030  25                 	db	37
   164  001031  64                 	db	100	;'d'
   165  001032  20                 	db	32
   166  001033  64                 	db	100	;'d'
   167  001034  65                 	db	101	;'e'
   168  001035  67                 	db	103	;'g'
   169  001036  72                 	db	114	;'r'
   170  001037  65                 	db	101	;'e'
   171  001038  65                 	db	101	;'e'
   172  001039  73                 	db	115	;'s'
   173  00103A  46                 	db	70	;'F'
   174  00103B  0D                 	db	13
   175  00103C  0A                 	db	10
   176  00103D  00                 	db	0
   177  00103E                     STR_1:
   178  00103E  25                 	db	37
   179  00103F  30                 	db	48	;'0'
   180  001040  32                 	db	50	;'2'
   181  001041  78                 	db	120	;'x'
   182  001042  3A                 	db	58	;':'
   183  001043  25                 	db	37
   184  001044  30                 	db	48	;'0'
   185  001045  32                 	db	50	;'2'
   186  001046  78                 	db	120	;'x'
   187  001047  3A                 	db	58	;':'
   188  001048  25                 	db	37
   189  001049  30                 	db	48	;'0'
   190  00104A  32                 	db	50	;'2'
   191  00104B  78                 	db	120	;'x'
   192  00104C  20                 	db	32
   193  00104D  25                 	db	37
   194  00104E  30                 	db	48	;'0'
   195  00104F  32                 	db	50	;'2'
   196  001050  78                 	db	120	;'x'
   197  001051  2F                 	db	47
   198  001052  25                 	db	37
   199  001053  30                 	db	48	;'0'
   200  001054  32                 	db	50	;'2'
   201  001055  78                 	db	120	;'x'
   202  001056  2F                 	db	47
   203  001057  25                 	db	37
   204  001058  30                 	db	48	;'0'
   205  001059  32                 	db	50	;'2'
   206  00105A  78                 	db	120	;'x'
   207  00105B  00                 	db	0
   208  00105C                     STR_3:
   209  00105C  30                 	db	48	;'0'
   210  00105D  31                 	db	49	;'1'
   211  00105E  32                 	db	50	;'2'
   212  00105F  33                 	db	51	;'3'
   213  001060  34                 	db	52	;'4'
   214  001061  35                 	db	53	;'5'
   215  001062  36                 	db	54	;'6'
   216  001063  37                 	db	55	;'7'
   217  001064  38                 	db	56	;'8'
   218  001065  39                 	db	57	;'9'
   219  001066  61                 	db	97	;'a'
   220  001067  62                 	db	98	;'b'
   221  001068  63                 	db	99	;'c'
   222  001069  64                 	db	100	;'d'
   223  00106A  65                 	db	101	;'e'
   224  00106B  66                 	db	102	;'f'
   225  00106C  00                 	db	0
   226                           
   227                           ; #config settings
   228  00106D  00                 	db	0	; dummy byte at the end
   229  0000                     
   230                           	psect	cinit
   231  0019F2                     __pcinit:
   232                           	opt stack 0
   233  0019F2                     start_initialization:
   234                           	opt stack 0
   235  0019F2                     __initialization:
   236                           	opt stack 0
   237                           
   238                           ; Clear objects allocated to COMRAM (33 bytes)
   239  0019F2  EE00  F039         	lfsr	0,__pbssCOMRAM
   240  0019F6  0E21               	movlw	33
   241  0019F8                     clear_0:
   242  0019F8  6AEE               	clrf	postinc0,c
   243  0019FA  06E8               	decf	wreg,f,c
   244  0019FC  E1FD               	bnz	clear_0
   245                           
   246                           ; Initialize objects allocated to COMRAM (22 bytes)
   247                           ; load TBLPTR registers with __pidataCOMRAM
   248  0019FE  0E3A               	movlw	low __pidataCOMRAM
   249  001A00  6EF6               	movwf	tblptrl,c
   250  001A02  0E1B               	movlw	high __pidataCOMRAM
   251  001A04  6EF7               	movwf	tblptrh,c
   252  001A06  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   253  001A08  6EF8               	movwf	tblptru,c
   254  001A0A  EE00  F05A         	lfsr	0,__pdataCOMRAM
   255  001A0E  EE10 F016          	lfsr	1,22
   256  001A12                     copy_data0:
   257  001A12  0009               	tblrd		*+
   258  001A14  CFF5 FFEE          	movff	tablat,postinc0
   259  001A18  50E5               	movf	postdec1,w,c
   260  001A1A  50E1               	movf	fsr1l,w,c
   261  001A1C  E1FA               	bnz	copy_data0
   262  001A1E                     end_of_initialization:
   263                           	opt stack 0
   264  001A1E                     __end_of__initialization:
   265                           	opt stack 0
   266  001A1E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   267  001A20  6EF8               	movwf	tblptru,c
   268  001A22  0100               	movlb	0
   269  001A24  EF94  F00A         	goto	_main	;jump to C main() function
   270                           tblptru	equ	0xFF8
   271                           tblptrh	equ	0xFF7
   272                           tblptrl	equ	0xFF6
   273                           tablat	equ	0xFF5
   274                           postinc0	equ	0xFEE
   275                           wreg	equ	0xFE8
   276                           postdec1	equ	0xFE5
   277                           fsr1l	equ	0xFE1
   278                           
   279                           	psect	bssCOMRAM
   280  000039                     __pbssCOMRAM:
   281                           	opt stack 0
   282  000039                     _Nec_code:
   283                           	opt stack 0
   284  000039                     	ds	4
   285  00003D                     _Time_Elapsed:
   286                           	opt stack 0
   287  00003D                     	ds	2
   288  00003F                     _nec_ok:
   289                           	opt stack 0
   290  00003F                     	ds	2
   291  000041                     _Nec_code1:
   292                           	opt stack 0
   293  000041                     	ds	1
   294  000042                     _Nec_state:
   295                           	opt stack 0
   296  000042                     	ds	1
   297  000043                     _TempSecond:
   298                           	opt stack 0
   299  000043                     	ds	1
   300  000044                     _alarm_date:
   301                           	opt stack 0
   302  000044                     	ds	1
   303  000045                     _alarm_hour:
   304                           	opt stack 0
   305  000045                     	ds	1
   306  000046                     _alarm_minute:
   307                           	opt stack 0
   308  000046                     	ds	1
   309  000047                     _alarm_second:
   310                           	opt stack 0
   311  000047                     	ds	1
   312  000048                     _bit_count:
   313                           	opt stack 0
   314  000048                     	ds	1
   315  000049                     _day:
   316                           	opt stack 0
   317  000049                     	ds	1
   318  00004A                     _dow:
   319                           	opt stack 0
   320  00004A                     	ds	1
   321  00004B                     _hour:
   322                           	opt stack 0
   323  00004B                     	ds	1
   324  00004C                     _i:
   325                           	opt stack 0
   326  00004C                     	ds	1
   327  00004D                     _minute:
   328                           	opt stack 0
   329  00004D                     	ds	1
   330  00004E                     _month:
   331                           	opt stack 0
   332  00004E                     	ds	1
   333  00004F                     _second:
   334                           	opt stack 0
   335  00004F                     	ds	1
   336  000050                     _setup_alarm_hour:
   337                           	opt stack 0
   338  000050                     	ds	1
   339  000051                     _setup_alarm_minute:
   340                           	opt stack 0
   341  000051                     	ds	1
   342  000052                     _setup_alarm_second:
   343                           	opt stack 0
   344  000052                     	ds	1
   345  000053                     _setup_day:
   346                           	opt stack 0
   347  000053                     	ds	1
   348  000054                     _setup_hour:
   349                           	opt stack 0
   350  000054                     	ds	1
   351  000055                     _setup_minute:
   352                           	opt stack 0
   353  000055                     	ds	1
   354  000056                     _setup_month:
   355                           	opt stack 0
   356  000056                     	ds	1
   357  000057                     _setup_second:
   358                           	opt stack 0
   359  000057                     	ds	1
   360  000058                     _setup_year:
   361                           	opt stack 0
   362  000058                     	ds	1
   363  000059                     _year:
   364                           	opt stack 0
   365  000059                     	ds	1
   366                           tblptru	equ	0xFF8
   367                           tblptrh	equ	0xFF7
   368                           tblptrl	equ	0xFF6
   369                           tablat	equ	0xFF5
   370                           postinc0	equ	0xFEE
   371                           wreg	equ	0xFE8
   372                           postdec1	equ	0xFE5
   373                           fsr1l	equ	0xFE1
   374                           
   375                           	psect	dataCOMRAM
   376  00005A                     __pdataCOMRAM:
   377                           	opt stack 0
   378  00005A                     _array1:
   379                           	opt stack 0
   380  00005A                     	ds	21
   381  00006F                     _tempSecond:
   382                           	opt stack 0
   383  00006F                     	ds	1
   384                           tblptru	equ	0xFF8
   385                           tblptrh	equ	0xFF7
   386                           tblptrl	equ	0xFF6
   387                           tablat	equ	0xFF5
   388                           postinc0	equ	0xFEE
   389                           wreg	equ	0xFE8
   390                           postdec1	equ	0xFE5
   391                           fsr1l	equ	0xFE1
   392                           
   393                           	psect	cstackBANK0
   394  000080                     __pcstackBANK0:
   395                           	opt stack 0
   396  000080                     
   397                           ; 0 bytes @ 0x0
   398  000080                     	ds	1
   399  000081                     main@tempF:
   400                           	opt stack 0
   401                           
   402                           ; 1 bytes @ 0x1
   403  000081                     	ds	1
   404  000082                     main@found:
   405                           	opt stack 0
   406                           
   407                           ; 1 bytes @ 0x2
   408  000082                     	ds	1
   409  000083                     main@tempC:
   410                           	opt stack 0
   411                           
   412                           ; 1 bytes @ 0x3
   413  000083                     	ds	1
   414  000084                     main@i:
   415                           	opt stack 0
   416                           
   417                           ; 2 bytes @ 0x4
   418  000084                     	ds	2
   419                           tblptru	equ	0xFF8
   420                           tblptrh	equ	0xFF7
   421                           tblptrl	equ	0xFF6
   422                           tablat	equ	0xFF5
   423                           postinc0	equ	0xFEE
   424                           wreg	equ	0xFE8
   425                           postdec1	equ	0xFE5
   426                           fsr1l	equ	0xFE1
   427                           
   428                           	psect	cstackCOMRAM
   429  000001                     __pcstackCOMRAM:
   430                           	opt stack 0
   431  000001                     ??_INT0_isr:
   432  000001                     
   433                           ; 1 bytes @ 0x0
   434  000001                     	ds	2
   435  000003                     ??_chkisr:
   436                           
   437                           ; 0 bytes @ 0x2
   438  000003                     	ds	14
   439  000011                     ??_isdigit:
   440  000011                     ?___wmul:
   441                           	opt stack 0
   442  000011                     ?___awdiv:
   443                           	opt stack 0
   444  000011                     ?___lwdiv:
   445                           	opt stack 0
   446  000011                     putch@c:
   447                           	opt stack 0
   448  000011                     I2C_Read@ack:
   449                           	opt stack 0
   450  000011                     I2C_Write@outByte:
   451                           	opt stack 0
   452  000011                     Wait_One_Sec@k:
   453                           	opt stack 0
   454  000011                     OpenUSART@spbrg:
   455                           	opt stack 0
   456  000011                     ___wmul@multiplier:
   457                           	opt stack 0
   458  000011                     ___awdiv@dividend:
   459                           	opt stack 0
   460  000011                     ___lwdiv@dividend:
   461                           	opt stack 0
   462  000011                     I2C_Init@c:
   463                           	opt stack 0
   464                           
   465                           ; 4 bytes @ 0x10
   466  000011                     	ds	1
   467  000012                     I2C_Read@n:
   468                           	opt stack 0
   469  000012                     I2C_Write@n:
   470                           	opt stack 0
   471  000012                     _isdigit$1366:
   472                           	opt stack 0
   473                           
   474                           ; 1 bytes @ 0x11
   475  000012                     	ds	1
   476  000013                     I2C_Read@inByte:
   477                           	opt stack 0
   478  000013                     I2C_Write_Cmd_Only@Cmd:
   479                           	opt stack 0
   480  000013                     I2C_Write_Cmd_Write_Data@Cmd:
   481                           	opt stack 0
   482  000013                     DS3231_Setup_Time@Device:
   483                           	opt stack 0
   484  000013                     OpenUSART@config:
   485                           	opt stack 0
   486  000013                     isdigit@c:
   487                           	opt stack 0
   488  000013                     ___wmul@multiplicand:
   489                           	opt stack 0
   490  000013                     ___awdiv@divisor:
   491                           	opt stack 0
   492  000013                     ___lwdiv@divisor:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x12
   496  000013                     	ds	1
   497  000014                     ?_DS1621_Read_Temp:
   498                           	opt stack 0
   499  000014                     I2C_Write_Cmd_Only@Device:
   500                           	opt stack 0
   501  000014                     I2C_Write_Cmd_Write_Data@Data_Out:
   502                           	opt stack 0
   503  000014                     DS3231_Read_Time@Address:
   504                           	opt stack 0
   505  000014                     DS3231_Setup_Time@Address:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0x13
   509  000014                     	ds	1
   510  000015                     I2C_Write_Cmd_Write_Data@Device:
   511                           	opt stack 0
   512  000015                     DS3231_Read_Time@Device:
   513                           	opt stack 0
   514  000015                     ___awdiv@counter:
   515                           	opt stack 0
   516  000015                     ___lwdiv@counter:
   517                           	opt stack 0
   518  000015                     ___wmul@product:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x14
   522  000015                     	ds	1
   523  000016                     DS1621_Init@Device:
   524                           	opt stack 0
   525  000016                     DS1621_Read_Temp@Cmd:
   526                           	opt stack 0
   527  000016                     ___awdiv@sign:
   528                           	opt stack 0
   529  000016                     ___lwdiv@quotient:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0x15
   533  000016                     	ds	1
   534  000017                     DS1621_Read_Temp@Data_Ret:
   535                           	opt stack 0
   536  000017                     ___awdiv@quotient:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x16
   540  000017                     	ds	1
   541  000018                     ?___lwmod:
   542                           	opt stack 0
   543  000018                     DS1621_Read_Temp@Device:
   544                           	opt stack 0
   545  000018                     ___lwmod@dividend:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0x17
   549  000018                     	ds	2
   550  00001A                     ___lwmod@divisor:
   551                           	opt stack 0
   552                           
   553                           ; 2 bytes @ 0x19
   554  00001A                     	ds	2
   555  00001C                     ___lwmod@counter:
   556                           	opt stack 0
   557                           
   558                           ; 1 bytes @ 0x1B
   559  00001C                     	ds	1
   560  00001D                     ?_printf:
   561                           	opt stack 0
   562  00001D                     printf@f:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x1C
   566  00001D                     	ds	14
   567  00002B                     ??_printf:
   568                           
   569                           ; 0 bytes @ 0x2A
   570  00002B                     	ds	4
   571  00002F                     printf@idx:
   572                           	opt stack 0
   573                           
   574                           ; 1 bytes @ 0x2E
   575  00002F                     	ds	1
   576  000030                     printf@ap:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x2F
   580  000030                     	ds	2
   581  000032                     printf@prec:
   582                           	opt stack 0
   583                           
   584                           ; 1 bytes @ 0x31
   585  000032                     	ds	1
   586  000033                     printf@val:
   587                           	opt stack 0
   588                           
   589                           ; 2 bytes @ 0x32
   590  000033                     	ds	2
   591  000035                     printf@flag:
   592                           	opt stack 0
   593                           
   594                           ; 1 bytes @ 0x34
   595  000035                     	ds	1
   596  000036                     printf@width:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x35
   600  000036                     	ds	2
   601  000038                     printf@c:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0x37
   605  000038                     	ds	1
   606                           tblptru	equ	0xFF8
   607                           tblptrh	equ	0xFF7
   608                           tblptrl	equ	0xFF6
   609                           tablat	equ	0xFF5
   610                           postinc0	equ	0xFEE
   611                           wreg	equ	0xFE8
   612                           postdec1	equ	0xFE5
   613                           fsr1l	equ	0xFE1
   614                           
   615 ;;
   616 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   617 ;;
   618 ;; *************** function _main *****************
   619 ;; Defined at:
   620 ;;		line 103 in file "Lab11.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;  i               2    4[BANK0 ] int 
   625 ;;  found           1    2[BANK0 ] unsigned char 
   626 ;;  tempC           1    3[BANK0 ] unsigned char 
   627 ;;  tempF           1    1[BANK0 ] unsigned char 
   628 ;; Return value:  Size  Location     Type
   629 ;;		None               void
   630 ;; Registers used:
   631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   638 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   639 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   640 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   641 ;;Total ram usage:        6 bytes
   642 ;; Hardware stack levels required when called:    8
   643 ;; This function calls:
   644 ;;		_Activate_Buzzer
   645 ;;		_DS1621_Read_Temp
   646 ;;		_DS3231_Read_Time
   647 ;;		_DS3231_Setup_Time
   648 ;;		_Deactivate_Buzzer
   649 ;;		_Do_Init
   650 ;;		_Wait_One_Sec
   651 ;;		___awdiv
   652 ;;		_printf
   653 ;; This function is called by:
   654 ;;		Startup code after reset
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658                           	psect	text0
   659  001528                     __ptext0:
   660                           	opt stack 0
   661  001528                     _main:
   662                           	opt stack 23
   663                           
   664                           ;Lab11.c: 105: Do_Init();
   665                           
   666                           ;incstack = 0
   667  001528  EC14  F00D         	call	_Do_Init	;wreg free
   668                           
   669                           ;Lab11.c: 106: DS3231_Setup_Time();
   670  00152C  ECDF  F00B         	call	_DS3231_Setup_Time	;wreg free
   671  001530                     l135:
   672                           
   673                           ;Lab11.c: 116: {
   674                           ;Lab11.c: 118: DS3231_Read_Time();
   675  001530  EC12  F00C         	call	_DS3231_Read_Time	;wreg free
   676                           
   677                           ;Lab11.c: 119: if(tempSecond != second)
   678  001534  504F               	movf	_second,w,c
   679  001536  186F               	xorwf	_tempSecond,w,c
   680  001538  B4D8               	btfsc	status,2,c
   681  00153A  D03D               	goto	l2690
   682                           
   683                           ;Lab11.c: 120: {
   684                           ;Lab11.c: 121: tempSecond = second;
   685  00153C  C04F  F06F         	movff	_second,_tempSecond
   686                           
   687                           ;Lab11.c: 122: char tempC = DS1621_Read_Temp();
   688  001540  ECDB  F00C         	call	_DS1621_Read_Temp	;wreg free
   689  001544  5014               	movf	?_DS1621_Read_Temp,w,c
   690  001546  0100               	movlb	0	; () banked
   691  001548  6F83               	movwf	main@tempC& (0+255),b
   692                           
   693                           ; BSR set to: 0
   694                           ;Lab11.c: 123: char tempF = (tempC * 9 / 5) + 32;
   695  00154A  0100               	movlb	0	; () banked
   696  00154C  5183               	movf	main@tempC& (0+255),w,b
   697  00154E  0D09               	mullw	9
   698  001550  CFF3 F011          	movff	prodl,___awdiv@dividend
   699  001554  CFF4 F012          	movff	prodh,___awdiv@dividend+1
   700  001558  0E00               	movlw	0
   701  00155A  6E14               	movwf	___awdiv@divisor+1,c
   702  00155C  0E05               	movlw	5
   703  00155E  6E13               	movwf	___awdiv@divisor,c
   704  001560  EC1E  F00B         	call	___awdiv	;wreg free
   705  001564  5011               	movf	?___awdiv,w,c
   706  001566  0F20               	addlw	32
   707  001568  0100               	movlb	0	; () banked
   708  00156A  6F81               	movwf	main@tempF& (0+255),b
   709                           
   710                           ; BSR set to: 0
   711                           ;Lab11.c: 124: printf ("%02x:%02x:%02x %02x/%02x/%02x",hour,minute,second,month,day,year
      +                          );
   712  00156C  0E3E               	movlw	low STR_1
   713  00156E  6E1D               	movwf	printf@f,c
   714  001570  0E10               	movlw	high STR_1
   715  001572  6E1E               	movwf	printf@f+1,c
   716  001574  C04B  F01F         	movff	_hour,?_printf+2
   717  001578  6A20               	clrf	?_printf+3,c
   718  00157A  C04D  F021         	movff	_minute,?_printf+4
   719  00157E  6A22               	clrf	?_printf+5,c
   720  001580  C04F  F023         	movff	_second,?_printf+6
   721  001584  6A24               	clrf	?_printf+7,c
   722  001586  C04E  F025         	movff	_month,?_printf+8
   723  00158A  6A26               	clrf	?_printf+9,c
   724  00158C  C049  F027         	movff	_day,?_printf+10
   725  001590  6A28               	clrf	?_printf+11,c
   726  001592  C059  F029         	movff	_year,?_printf+12
   727  001596  6A2A               	clrf	?_printf+13,c
   728  001598  EC37  F008         	call	_printf	;wreg free
   729                           
   730                           ;Lab11.c: 125: printf (" Temperature = %d degreesC = %d degreesF\r\n", tempC, tempF);
   731  00159C  0E13               	movlw	low STR_2
   732  00159E  6E1D               	movwf	printf@f,c
   733  0015A0  0E10               	movlw	high STR_2
   734  0015A2  6E1E               	movwf	printf@f+1,c
   735  0015A4  C083  F01F         	movff	main@tempC,?_printf+2
   736  0015A8  6A20               	clrf	?_printf+3,c
   737  0015AA  C081  F021         	movff	main@tempF,?_printf+4
   738  0015AE  6A22               	clrf	?_printf+5,c
   739  0015B0  EC37  F008         	call	_printf	;wreg free
   740  0015B4  D000               	goto	l2690
   741  0015B6                     l2690:
   742                           
   743                           ;Lab11.c: 126: }
   744                           ;Lab11.c: 128: if (nec_ok == 1)
   745  0015B6  043F               	decf	_nec_ok,w,c
   746  0015B8  1040               	iorwf	_nec_ok+1,w,c
   747  0015BA  A4D8               	btfss	status,2,c
   748  0015BC  D7B9               	goto	l135
   749                           
   750                           ;Lab11.c: 129: {
   751                           ;Lab11.c: 130: nec_ok = 0;
   752  0015BE  0E00               	movlw	0
   753  0015C0  6E40               	movwf	_nec_ok+1,c
   754  0015C2  0E00               	movlw	0
   755  0015C4  6E3F               	movwf	_nec_ok,c
   756                           
   757                           ;Lab11.c: 131: DS3231_Setup_Time();
   758  0015C6  ECDF  F00B         	call	_DS3231_Setup_Time	;wreg free
   759                           
   760                           ;Lab11.c: 132: Nec_code1 = (char) ((Nec_code >> 8));
   761  0015CA  C03A  F041         	movff	_Nec_code+1,_Nec_code1
   762                           
   763                           ;Lab11.c: 133: INTCONbits.INT0IE = 1;
   764  0015CE  88F2               	bsf	intcon,4,c	;volatile
   765                           
   766                           ;Lab11.c: 134: INTCON2bits.INTEDG0 = 0;
   767  0015D0  9CF1               	bcf	intcon2,6,c	;volatile
   768                           
   769                           ;Lab11.c: 136: char found = 0xff;
   770  0015D2  0100               	movlb	0	; () banked
   771  0015D4  6982               	setf	main@found& (0+255),b
   772                           
   773                           ; BSR set to: 0
   774                           ;Lab11.c: 138: for (int i=0; i < 21; i++){
   775  0015D6  0E00               	movlw	0
   776  0015D8  0100               	movlb	0	; () banked
   777  0015DA  6F85               	movwf	(main@i+1)& (0+255),b
   778  0015DC  0E00               	movlw	0
   779  0015DE  6F84               	movwf	main@i& (0+255),b
   780  0015E0                     l2706:
   781                           
   782                           ; BSR set to: 0
   783  0015E0  0100               	movlb	0	; () banked
   784  0015E2  BF85               	btfsc	(main@i+1)& (0+255),7,b
   785  0015E4  D00A               	goto	l2710
   786  0015E6  0100               	movlb	0	; () banked
   787  0015E8  5185               	movf	(main@i+1)& (0+255),w,b
   788  0015EA  E11B               	bnz	l2718
   789  0015EC  0E15               	movlw	21
   790  0015EE  0100               	movlb	0	; () banked
   791  0015F0  5D84               	subwf	main@i& (0+255),w,b
   792  0015F2  B0D8               	btfsc	status,0,c
   793  0015F4  D016               	goto	l2718
   794  0015F6  D001               	goto	l2710
   795                           
   796                           ; BSR set to: 0
   797  0015F8  D014               	goto	l2718
   798  0015FA                     l2710:
   799                           
   800                           ; BSR set to: 0
   801                           ;Lab11.c: 139: if (Nec_code1 == array1[i]){
   802  0015FA  0E5A               	movlw	low _array1
   803  0015FC  0100               	movlb	0	; () banked
   804  0015FE  2584               	addwf	main@i& (0+255),w,b
   805  001600  6ED9               	movwf	fsr2l,c
   806  001602  0E00               	movlw	high _array1
   807  001604  0100               	movlb	0	; () banked
   808  001606  2185               	addwfc	(main@i+1)& (0+255),w,b
   809  001608  6EDA               	movwf	fsr2h,c
   810  00160A  5041               	movf	_Nec_code1,w,c
   811  00160C  18DE               	xorwf	postinc2,w,c
   812  00160E  A4D8               	btfss	status,2,c
   813  001610  D003               	goto	l2714
   814                           
   815                           ; BSR set to: 0
   816                           ;Lab11.c: 140: found= i;
   817  001612  C084  F082         	movff	main@i,main@found
   818  001616  D000               	goto	l2714
   819  001618                     l2714:
   820                           
   821                           ; BSR set to: 0
   822  001618  0100               	movlb	0	; () banked
   823  00161A  4B84               	infsnz	main@i& (0+255),f,b
   824  00161C  2B85               	incf	(main@i+1)& (0+255),f,b
   825  00161E  D7E0               	goto	l2706
   826                           
   827                           ; BSR set to: 0
   828  001620  D000               	goto	l2718
   829  001622                     l2718:
   830                           
   831                           ; BSR set to: 0
   832                           ;Lab11.c: 141: }
   833                           ;Lab11.c: 142: }
   834                           ;Lab11.c: 143: if (found != 0xff) {
   835  001622  0100               	movlb	0	; () banked
   836  001624  2982               	incf	main@found& (0+255),w,b
   837  001626  B4D8               	btfsc	status,2,c
   838  001628  D783               	goto	l135
   839                           
   840                           ; BSR set to: 0
   841                           ;Lab11.c: 144: Activate_Buzzer();
   842  00162A  ECD8  F00D         	call	_Activate_Buzzer	;wreg free
   843                           
   844                           ;Lab11.c: 145: Wait_One_Sec();
   845  00162E  EC42  F00D         	call	_Wait_One_Sec	;wreg free
   846                           
   847                           ;Lab11.c: 146: Deactivate_Buzzer();
   848  001632  EC03  F00E         	call	_Deactivate_Buzzer	;wreg free
   849  001636  D77C               	goto	l135
   850  001638  EF0C  F000         	goto	start
   851  00163C                     __end_of_main:
   852                           	opt stack 0
   853                           tblptru	equ	0xFF8
   854                           tblptrh	equ	0xFF7
   855                           tblptrl	equ	0xFF6
   856                           tablat	equ	0xFF5
   857                           prodh	equ	0xFF4
   858                           prodl	equ	0xFF3
   859                           intcon	equ	0xFF2
   860                           intcon2	equ	0xFF1
   861                           postinc0	equ	0xFEE
   862                           wreg	equ	0xFE8
   863                           postdec1	equ	0xFE5
   864                           fsr1l	equ	0xFE1
   865                           postinc2	equ	0xFDE
   866                           fsr2h	equ	0xFDA
   867                           fsr2l	equ	0xFD9
   868                           status	equ	0xFD8
   869                           
   870 ;; *************** function _printf *****************
   871 ;; Defined at:
   872 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;  f               2   28[COMRAM] PTR const unsigned char 
   875 ;;		 -> STR_2(43), STR_1(30), 
   876 ;; Auto vars:     Size  Location     Type
   877 ;;  idx             1   46[COMRAM] unsigned char 
   878 ;;  tmpval          4    0        struct .
   879 ;;  cp              3    0        PTR const unsigned char 
   880 ;;  width           2   53[COMRAM] int 
   881 ;;  val             2   50[COMRAM] unsigned int 
   882 ;;  ap              2   47[COMRAM] PTR void [1]
   883 ;;		 -> ?_printf(2), 
   884 ;;  len             2    0        unsigned int 
   885 ;;  c               1   55[COMRAM] char 
   886 ;;  flag            1   52[COMRAM] unsigned char 
   887 ;;  prec            1   49[COMRAM] char 
   888 ;; Return value:  Size  Location     Type
   889 ;;                  2   28[COMRAM] int 
   890 ;; Registers used:
   891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   897 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   898 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   899 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   900 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   901 ;;Total ram usage:       28 bytes
   902 ;; Hardware stack levels used:    1
   903 ;; Hardware stack levels required when called:    4
   904 ;; This function calls:
   905 ;;		___lwdiv
   906 ;;		___lwmod
   907 ;;		___wmul
   908 ;;		_isdigit
   909 ;;		_putch
   910 ;; This function is called by:
   911 ;;		_main
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text1
   916  00106E                     __ptext1:
   917                           	opt stack 0
   918  00106E                     _printf:
   919                           	opt stack 26
   920                           
   921                           ;doprnt.c: 466: va_list ap;
   922                           ;doprnt.c: 499: signed char c;
   923                           ;doprnt.c: 501: int width;
   924                           ;doprnt.c: 506: signed char prec;
   925                           ;doprnt.c: 508: unsigned char flag;
   926                           ;doprnt.c: 523: union {
   927                           ;doprnt.c: 524: unsigned long vd;
   928                           ;doprnt.c: 525: double integ;
   929                           ;doprnt.c: 526: } tmpval;
   930                           ;doprnt.c: 528: unsigned int val;
   931                           ;doprnt.c: 529: unsigned len;
   932                           ;doprnt.c: 530: const char * cp;
   933                           ;doprnt.c: 533: *ap = __va_start();
   934                           
   935                           ;incstack = 0
   936  00106E  0E1F               	movlw	low (?_printf+2)
   937  001070  6E30               	movwf	printf@ap,c
   938  001072  0E00               	movlw	high (?_printf+2)
   939  001074  6E31               	movwf	printf@ap+1,c
   940                           
   941                           ;doprnt.c: 536: while(c = *f++) {
   942  001076  D199               	goto	l2630
   943  001078                     l2504:
   944                           
   945                           ;doprnt.c: 538: if(c != '%')
   946  001078  0E25               	movlw	37
   947  00107A  1838               	xorwf	printf@c,w,c
   948  00107C  B4D8               	btfsc	status,2,c
   949  00107E  D004               	goto	l2508
   950                           
   951                           ;doprnt.c: 540: {
   952                           ;doprnt.c: 541: (putch(c) );
   953  001080  5038               	movf	printf@c,w,c
   954  001082  ECE1  F00D         	call	_putch
   955                           
   956                           ;doprnt.c: 542: continue;
   957  001086  D191               	goto	l2630
   958  001088                     l2508:
   959                           
   960                           ;doprnt.c: 543: }
   961                           ;doprnt.c: 546: width = 0;
   962  001088  0E00               	movlw	0
   963  00108A  6E37               	movwf	printf@width+1,c
   964  00108C  0E00               	movlw	0
   965  00108E  6E36               	movwf	printf@width,c
   966                           
   967                           ;doprnt.c: 548: flag = 0;
   968  001090  0E00               	movlw	0
   969  001092  6E35               	movwf	printf@flag,c
   970                           
   971                           ;doprnt.c: 551: switch(*f) {
   972                           
   973                           ;doprnt.c: 550: for(;;) {
   974  001094  D005               	goto	l2514
   975  001096                     l2510:
   976                           
   977                           ;doprnt.c: 580: flag |= 0x04;
   978  001096  8435               	bsf	printf@flag,2,c
   979                           
   980                           ;doprnt.c: 581: f++;
   981  001098  4A1D               	infsnz	printf@f,f,c
   982  00109A  2A1E               	incf	printf@f+1,f,c
   983                           
   984                           ;doprnt.c: 582: continue;
   985  00109C  D001               	goto	l2514
   986                           
   987                           ;doprnt.c: 584: }
   988  00109E  D00B               	goto	l2516
   989  0010A0                     l2514:
   990  0010A0  C01D  FFF6         	movff	printf@f,tblptrl
   991  0010A4  C01E  FFF7         	movff	printf@f+1,tblptrh
   992  0010A8                     	if	0	;tblptru may be non-zero
   993  0010A8                     	endif
   994  0010A8                     	if	0	;tblptru may be non-zero
   995  0010A8                     	endif
   996  0010A8  0008               	tblrd		*
   997  0010AA  50F5               	movf	tablat,w,c
   998                           
   999                           ; Switch size 1, requested type "space"
  1000                           ; Number of cases is 1, Range of values is 48 to 48
  1001                           ; switch strategies available:
  1002                           ; Name         Instructions Cycles
  1003                           ; simple_byte            4     3 (average)
  1004                           ;	Chosen strategy is simple_byte
  1005  0010AC  0A30               	xorlw	48	; case 48
  1006  0010AE  B4D8               	btfsc	status,2,c
  1007  0010B0  D7F2               	goto	l2510
  1008                           
  1009                           ;doprnt.c: 585: break;
  1010  0010B2  D001               	goto	l2516
  1011                           
  1012                           ;doprnt.c: 586: }
  1013  0010B4  D7F5               	goto	l2514
  1014  0010B6                     l2516:
  1015                           
  1016                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1017  0010B6  C01D  FFF6         	movff	printf@f,tblptrl
  1018  0010BA  C01E  FFF7         	movff	printf@f+1,tblptrh
  1019  0010BE                     	if	0	;tblptru may be non-zero
  1020  0010BE                     	endif
  1021  0010BE                     	if	0	;tblptru may be non-zero
  1022  0010BE                     	endif
  1023  0010BE  0008               	tblrd		*
  1024  0010C0  50F5               	movf	tablat,w,c
  1025  0010C2  EC54  F00D         	call	_isdigit
  1026  0010C6  A0D8               	btfss	status,0,c
  1027  0010C8  D03B               	goto	l2532
  1028                           
  1029                           ;doprnt.c: 598: width = 0;
  1030  0010CA  0E00               	movlw	0
  1031  0010CC  6E37               	movwf	printf@width+1,c
  1032  0010CE  0E00               	movlw	0
  1033  0010D0  6E36               	movwf	printf@width,c
  1034  0010D2  D000               	goto	l2520
  1035  0010D4                     l2520:
  1036                           
  1037                           ;doprnt.c: 600: width *= 10;
  1038  0010D4  C036  F011         	movff	printf@width,___wmul@multiplier
  1039  0010D8  C037  F012         	movff	printf@width+1,___wmul@multiplier+1
  1040  0010DC  0E00               	movlw	0
  1041  0010DE  6E14               	movwf	___wmul@multiplicand+1,c
  1042  0010E0  0E0A               	movlw	10
  1043  0010E2  6E13               	movwf	___wmul@multiplicand,c
  1044  0010E4  EC2E  F00D         	call	___wmul	;wreg free
  1045  0010E8  C011  F036         	movff	?___wmul,printf@width
  1046  0010EC  C012  F037         	movff	?___wmul+1,printf@width+1
  1047                           
  1048                           ;doprnt.c: 601: width += *f++ - '0';
  1049  0010F0  0ED0               	movlw	208
  1050  0010F2  6E2B               	movwf	??_printf& (0+255),c
  1051  0010F4  0EFF               	movlw	255
  1052  0010F6  6E2C               	movwf	(??_printf+1)& (0+255),c
  1053  0010F8  C01D  FFF6         	movff	printf@f,tblptrl
  1054  0010FC  C01E  FFF7         	movff	printf@f+1,tblptrh
  1055  001100                     	if	0	;tblptru may be non-zero
  1056  001100                     	endif
  1057  001100                     	if	0	;tblptru may be non-zero
  1058  001100                     	endif
  1059  001100  0008               	tblrd		*
  1060  001102  50F5               	movf	tablat,w,c
  1061  001104  6E2D               	movwf	(??_printf+2)& (0+255),c
  1062  001106  6A2E               	clrf	(??_printf+3)& (0+255),c
  1063  001108  502B               	movf	??_printf,w,c
  1064  00110A  262D               	addwf	??_printf+2,f,c
  1065  00110C  502C               	movf	??_printf+1,w,c
  1066  00110E  222E               	addwfc	??_printf+3,f,c
  1067  001110  502D               	movf	??_printf+2,w,c
  1068  001112  2636               	addwf	printf@width,f,c
  1069  001114  502E               	movf	??_printf+3,w,c
  1070  001116  2237               	addwfc	printf@width+1,f,c
  1071  001118  4A1D               	infsnz	printf@f,f,c
  1072  00111A  2A1E               	incf	printf@f+1,f,c
  1073                           
  1074                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1075  00111C  C01D  FFF6         	movff	printf@f,tblptrl
  1076  001120  C01E  FFF7         	movff	printf@f+1,tblptrh
  1077  001124                     	if	0	;tblptru may be non-zero
  1078  001124                     	endif
  1079  001124                     	if	0	;tblptru may be non-zero
  1080  001124                     	endif
  1081  001124  0008               	tblrd		*
  1082  001126  50F5               	movf	tablat,w,c
  1083  001128  EC54  F00D         	call	_isdigit
  1084  00112C  A0D8               	btfss	status,0,c
  1085  00112E  D008               	goto	l2532
  1086  001130  D7D1               	goto	l2520
  1087                           
  1088                           ;doprnt.c: 608: }
  1089                           ;doprnt.c: 635: switch(c = *f++) {
  1090  001132  D006               	goto	l2532
  1091                           
  1092                           ;doprnt.c: 638: goto alldone;
  1093                           
  1094                           ;doprnt.c: 637: case 0:
  1095  001134  D148               	goto	l394
  1096                           
  1097                           ;doprnt.c: 698: case 'i':
  1098                           ;doprnt.c: 699: break;
  1099                           
  1100                           ;doprnt.c: 697: case 'd':
  1101  001136  D01B               	goto	l357
  1102  001138                     l2528:
  1103                           
  1104                           ;doprnt.c: 721: flag |= 0x80;
  1105  001138  8E35               	bsf	printf@flag,7,c
  1106                           
  1107                           ;doprnt.c: 723: break;
  1108  00113A  D019               	goto	l357
  1109                           
  1110                           ;doprnt.c: 813: continue;
  1111                           
  1112                           ;doprnt.c: 802: default:
  1113  00113C  D136               	goto	l2630
  1114                           
  1115                           ;doprnt.c: 822: }
  1116  00113E  D017               	goto	l357
  1117  001140                     l2532:
  1118  001140  C01D  FFF6         	movff	printf@f,tblptrl
  1119  001144  C01E  FFF7         	movff	printf@f+1,tblptrh
  1120  001148  4A1D               	infsnz	printf@f,f,c
  1121  00114A  2A1E               	incf	printf@f+1,f,c
  1122  00114C                     	if	0	;tblptru may be non-zero
  1123  00114C                     	endif
  1124  00114C                     	if	0	;tblptru may be non-zero
  1125  00114C                     	endif
  1126  00114C  0008               	tblrd		*
  1127  00114E  CFF5 F038          	movff	tablat,printf@c
  1128  001152  5038               	movf	printf@c,w,c
  1129                           
  1130                           ; Switch size 1, requested type "space"
  1131                           ; Number of cases is 4, Range of values is 0 to 120
  1132                           ; switch strategies available:
  1133                           ; Name         Instructions Cycles
  1134                           ; simple_byte           13     7 (average)
  1135                           ;	Chosen strategy is simple_byte
  1136  001154  0A00               	xorlw	0	; case 0
  1137  001156  B4D8               	btfsc	status,2,c
  1138  001158  D136               	goto	l394
  1139  00115A  0A64               	xorlw	100	; case 100
  1140  00115C  B4D8               	btfsc	status,2,c
  1141  00115E  D007               	goto	l357
  1142  001160  0A0D               	xorlw	13	; case 105
  1143  001162  B4D8               	btfsc	status,2,c
  1144  001164  D004               	goto	l357
  1145  001166  0A11               	xorlw	17	; case 120
  1146  001168  B4D8               	btfsc	status,2,c
  1147  00116A  D7E6               	goto	l2528
  1148  00116C  D11E               	goto	l2630
  1149  00116E                     l357:
  1150                           
  1151                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  1152  00116E  BE35               	btfsc	printf@flag,7,c
  1153  001170  D015               	goto	l2544
  1154                           
  1155                           ;doprnt.c: 1253: {
  1156                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1157  001172  C030  FFD9         	movff	printf@ap,fsr2l
  1158  001176  C031  FFDA         	movff	printf@ap+1,fsr2h
  1159  00117A  CFDE F033          	movff	postinc2,printf@val
  1160  00117E  CFDD F034          	movff	postdec2,printf@val+1
  1161  001182  0E02               	movlw	2
  1162  001184  2630               	addwf	printf@ap,f,c
  1163  001186  0E00               	movlw	0
  1164  001188  2231               	addwfc	printf@ap+1,f,c
  1165                           
  1166                           ;doprnt.c: 1261: if((int)val < 0) {
  1167  00118A  AE34               	btfss	printf@val+1,7,c
  1168  00118C  D04E               	goto	l2578
  1169                           
  1170                           ;doprnt.c: 1262: flag |= 0x03;
  1171  00118E  0E03               	movlw	3
  1172  001190  1235               	iorwf	printf@flag,f,c
  1173                           
  1174                           ;doprnt.c: 1263: val = -val;
  1175  001192  6C33               	negf	printf@val,c
  1176  001194  1E34               	comf	printf@val+1,f,c
  1177  001196  B0D8               	btfsc	status,0,c
  1178  001198  2A34               	incf	printf@val+1,f,c
  1179                           
  1180                           ;doprnt.c: 1264: }
  1181                           ;doprnt.c: 1266: }
  1182  00119A  D047               	goto	l2578
  1183  00119C                     l2544:
  1184                           
  1185                           ;doprnt.c: 1268: else
  1186                           ;doprnt.c: 1273: {
  1187                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1188  00119C  C030  FFD9         	movff	printf@ap,fsr2l
  1189  0011A0  C031  FFDA         	movff	printf@ap+1,fsr2h
  1190  0011A4  CFDE F033          	movff	postinc2,printf@val
  1191  0011A8  CFDD F034          	movff	postdec2,printf@val+1
  1192  0011AC  0E02               	movlw	2
  1193  0011AE  2630               	addwf	printf@ap,f,c
  1194  0011B0  0E00               	movlw	0
  1195  0011B2  2231               	addwfc	printf@ap+1,f,c
  1196                           
  1197                           ;doprnt.c: 1287: }
  1198                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  1199  0011B4  D03A               	goto	l2578
  1200  0011B6                     l2548:
  1201                           
  1202                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1203  0011B6  0E01               	movlw	1
  1204  0011B8  6E38               	movwf	printf@c,c
  1205  0011BA                     l2550:
  1206  0011BA  0E05               	movlw	5
  1207  0011BC  1838               	xorwf	printf@c,w,c
  1208  0011BE  B4D8               	btfsc	status,2,c
  1209  0011C0  D03D               	goto	l2580
  1210  0011C2  D001               	goto	l2554
  1211  0011C4  D03B               	goto	l2580
  1212  0011C6                     l2554:
  1213                           
  1214                           ;doprnt.c: 1306: if(val < dpowers[c])
  1215  0011C6  5038               	movf	printf@c,w,c
  1216  0011C8  0D02               	mullw	2
  1217  0011CA  0E01               	movlw	low _dpowers
  1218  0011CC  24F3               	addwf	prodl,w,c
  1219  0011CE  6EF6               	movwf	tblptrl,c
  1220  0011D0  0E10               	movlw	high _dpowers
  1221  0011D2  20F4               	addwfc	prodh,w,c
  1222  0011D4  6EF7               	movwf	tblptrh,c
  1223  0011D6                     	if	0	;There are less than 3 active tblptr bytes
  1224  0011D6                     	endif
  1225  0011D6  0009               	tblrd		*+
  1226  0011D8  50F5               	movf	tablat,w,c
  1227  0011DA  5C33               	subwf	printf@val,w,c
  1228  0011DC  0009               	tblrd		*+
  1229  0011DE  50F5               	movf	tablat,w,c
  1230  0011E0  5834               	subwfb	printf@val+1,w,c
  1231  0011E2  A0D8               	btfss	status,0,c
  1232  0011E4  D02B               	goto	l2580
  1233  0011E6  D001               	goto	l2558
  1234                           
  1235                           ;doprnt.c: 1307: break;
  1236  0011E8  D029               	goto	l2580
  1237  0011EA                     l2558:
  1238  0011EA  2A38               	incf	printf@c,f,c
  1239  0011EC  D7E6               	goto	l2550
  1240                           
  1241                           ;doprnt.c: 1309: break;
  1242  0011EE  D026               	goto	l2580
  1243  0011F0                     l2562:
  1244                           
  1245                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  1246  0011F0  0E01               	movlw	1
  1247  0011F2  6E38               	movwf	printf@c,c
  1248  0011F4                     l2564:
  1249  0011F4  0E04               	movlw	4
  1250  0011F6  1838               	xorwf	printf@c,w,c
  1251  0011F8  B4D8               	btfsc	status,2,c
  1252  0011FA  D020               	goto	l2580
  1253  0011FC  D001               	goto	l2568
  1254  0011FE  D01E               	goto	l2580
  1255  001200                     l2568:
  1256                           
  1257                           ;doprnt.c: 1317: if(val < hexpowers[c])
  1258  001200  5038               	movf	printf@c,w,c
  1259  001202  0D02               	mullw	2
  1260  001204  0E0B               	movlw	low _hexpowers
  1261  001206  24F3               	addwf	prodl,w,c
  1262  001208  6EF6               	movwf	tblptrl,c
  1263  00120A  0E10               	movlw	high _hexpowers
  1264  00120C  20F4               	addwfc	prodh,w,c
  1265  00120E  6EF7               	movwf	tblptrh,c
  1266  001210                     	if	0	;There are less than 3 active tblptr bytes
  1267  001210                     	endif
  1268  001210  0009               	tblrd		*+
  1269  001212  50F5               	movf	tablat,w,c
  1270  001214  5C33               	subwf	printf@val,w,c
  1271  001216  0009               	tblrd		*+
  1272  001218  50F5               	movf	tablat,w,c
  1273  00121A  5834               	subwfb	printf@val+1,w,c
  1274  00121C  A0D8               	btfss	status,0,c
  1275  00121E  D00E               	goto	l2580
  1276  001220  D001               	goto	l2572
  1277                           
  1278                           ;doprnt.c: 1318: break;
  1279  001222  D00C               	goto	l2580
  1280  001224                     l2572:
  1281  001224  2A38               	incf	printf@c,f,c
  1282  001226  D7E6               	goto	l2564
  1283                           
  1284                           ;doprnt.c: 1336: }
  1285                           
  1286                           ;doprnt.c: 1320: break;
  1287  001228  D009               	goto	l2580
  1288  00122A                     l2578:
  1289  00122A  5035               	movf	printf@flag,w,c
  1290  00122C  0B80               	andlw	128
  1291                           
  1292                           ; Switch size 1, requested type "space"
  1293                           ; Number of cases is 2, Range of values is 0 to 128
  1294                           ; switch strategies available:
  1295                           ; Name         Instructions Cycles
  1296                           ; simple_byte            7     4 (average)
  1297                           ;	Chosen strategy is simple_byte
  1298  00122E  0A00               	xorlw	0	; case 0
  1299  001230  B4D8               	btfsc	status,2,c
  1300  001232  D7C1               	goto	l2548
  1301  001234  0A80               	xorlw	128	; case 128
  1302  001236  B4D8               	btfsc	status,2,c
  1303  001238  D7DB               	goto	l2562
  1304  00123A  D000               	goto	l2580
  1305  00123C                     l2580:
  1306                           
  1307                           ;doprnt.c: 1345: if(width && flag & 0x03)
  1308  00123C  5036               	movf	printf@width,w,c
  1309  00123E  1037               	iorwf	printf@width+1,w,c
  1310  001240  B4D8               	btfsc	status,2,c
  1311  001242  D00A               	goto	l2586
  1312  001244  C035  F02B         	movff	printf@flag,??_printf
  1313  001248  0E03               	movlw	3
  1314  00124A  162B               	andwf	??_printf,f,c
  1315  00124C  B4D8               	btfsc	status,2,c
  1316  00124E  D004               	goto	l2586
  1317                           
  1318                           ;doprnt.c: 1346: width--;
  1319  001250  0636               	decf	printf@width,f,c
  1320  001252  A0D8               	btfss	status,0,c
  1321  001254  0637               	decf	printf@width+1,f,c
  1322  001256  D000               	goto	l2586
  1323  001258                     l2586:
  1324                           
  1325                           ;doprnt.c: 1381: if(width > c)
  1326  001258  0E80               	movlw	128
  1327  00125A  BE38               	btfsc	printf@c,7,c
  1328  00125C  0E7F               	movlw	127
  1329  00125E  6E2B               	movwf	??_printf& (0+255),c
  1330  001260  5036               	movf	printf@width,w,c
  1331  001262  5C38               	subwf	printf@c,w,c
  1332  001264  5037               	movf	printf@width+1,w,c
  1333  001266  0A80               	xorlw	128
  1334  001268  582B               	subwfb	??_printf& (0+255),w,c
  1335  00126A  B0D8               	btfsc	status,0,c
  1336  00126C  D007               	goto	l2590
  1337                           
  1338                           ;doprnt.c: 1382: width -= c;
  1339  00126E  5038               	movf	printf@c,w,c
  1340  001270  5E36               	subwf	printf@width,f,c
  1341  001272  0E00               	movlw	0
  1342  001274  BE38               	btfsc	printf@c,7,c
  1343  001276  0EFF               	movlw	255
  1344  001278  5A37               	subwfb	printf@width+1,f,c
  1345  00127A  D005               	goto	l2592
  1346  00127C                     l2590:
  1347                           
  1348                           ;doprnt.c: 1383: else
  1349                           ;doprnt.c: 1384: width = 0;
  1350  00127C  0E00               	movlw	0
  1351  00127E  6E37               	movwf	printf@width+1,c
  1352  001280  0E00               	movlw	0
  1353  001282  6E36               	movwf	printf@width,c
  1354  001284  D000               	goto	l2592
  1355  001286                     l2592:
  1356                           
  1357                           ;doprnt.c: 1387: if(flag & 0x04) {
  1358  001286  A435               	btfss	printf@flag,2,c
  1359  001288  D01A               	goto	l2604
  1360                           
  1361                           ;doprnt.c: 1392: if(flag & 0x03)
  1362  00128A  C035  F02B         	movff	printf@flag,??_printf
  1363  00128E  0E03               	movlw	3
  1364  001290  162B               	andwf	??_printf,f,c
  1365  001292  B4D8               	btfsc	status,2,c
  1366  001294  D004               	goto	l2598
  1367                           
  1368                           ;doprnt.c: 1393: (putch('-') );
  1369  001296  0E2D               	movlw	45
  1370  001298  ECE1  F00D         	call	_putch
  1371  00129C  D000               	goto	l2598
  1372  00129E                     l2598:
  1373                           
  1374                           ;doprnt.c: 1415: if(width)
  1375  00129E  5036               	movf	printf@width,w,c
  1376  0012A0  1037               	iorwf	printf@width+1,w,c
  1377  0012A2  B4D8               	btfsc	status,2,c
  1378  0012A4  D026               	goto	l2614
  1379  0012A6                     l2600:
  1380                           
  1381                           ;doprnt.c: 1417: (putch('0') );
  1382  0012A6  0E30               	movlw	48
  1383  0012A8  ECE1  F00D         	call	_putch
  1384                           
  1385                           ;doprnt.c: 1418: while(--width);
  1386  0012AC  0636               	decf	printf@width,f,c
  1387  0012AE  A0D8               	btfss	status,0,c
  1388  0012B0  0637               	decf	printf@width+1,f,c
  1389  0012B2  5036               	movf	printf@width,w,c
  1390  0012B4  1037               	iorwf	printf@width+1,w,c
  1391  0012B6  B4D8               	btfsc	status,2,c
  1392  0012B8  D01C               	goto	l2614
  1393  0012BA  D7F5               	goto	l2600
  1394                           
  1395                           ;doprnt.c: 1420: } else
  1396  0012BC  D01A               	goto	l2614
  1397  0012BE                     l2604:
  1398                           
  1399                           ;doprnt.c: 1422: {
  1400                           ;doprnt.c: 1424: if(width
  1401                           ;doprnt.c: 1428: )
  1402  0012BE  5036               	movf	printf@width,w,c
  1403  0012C0  1037               	iorwf	printf@width+1,w,c
  1404  0012C2  B4D8               	btfsc	status,2,c
  1405  0012C4  D00C               	goto	l2610
  1406  0012C6                     l2606:
  1407                           
  1408                           ;doprnt.c: 1430: (putch(' ') );
  1409  0012C6  0E20               	movlw	32
  1410  0012C8  ECE1  F00D         	call	_putch
  1411                           
  1412                           ;doprnt.c: 1431: while(--width);
  1413  0012CC  0636               	decf	printf@width,f,c
  1414  0012CE  A0D8               	btfss	status,0,c
  1415  0012D0  0637               	decf	printf@width+1,f,c
  1416  0012D2  5036               	movf	printf@width,w,c
  1417  0012D4  1037               	iorwf	printf@width+1,w,c
  1418  0012D6  B4D8               	btfsc	status,2,c
  1419  0012D8  D002               	goto	l2610
  1420  0012DA  D7F5               	goto	l2606
  1421  0012DC  D000               	goto	l2610
  1422  0012DE                     l2610:
  1423                           
  1424                           ;doprnt.c: 1438: if(flag & 0x03)
  1425  0012DE  C035  F02B         	movff	printf@flag,??_printf
  1426  0012E2  0E03               	movlw	3
  1427  0012E4  162B               	andwf	??_printf,f,c
  1428  0012E6  B4D8               	btfsc	status,2,c
  1429  0012E8  D004               	goto	l2614
  1430                           
  1431                           ;doprnt.c: 1439: (putch('-') );
  1432  0012EA  0E2D               	movlw	45
  1433  0012EC  ECE1  F00D         	call	_putch
  1434  0012F0  D000               	goto	l2614
  1435  0012F2                     l2614:
  1436                           
  1437                           ;doprnt.c: 1469: }
  1438                           ;doprnt.c: 1472: prec = c;
  1439  0012F2  C038  F032         	movff	printf@c,printf@prec
  1440                           
  1441                           ;doprnt.c: 1474: while(prec--) {
  1442  0012F6  D053               	goto	l2628
  1443                           
  1444                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
  1445  0012F8  D045               	goto	l2624
  1446  0012FA                     l2616:
  1447                           
  1448                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1449  0012FA  5032               	movf	printf@prec,w,c
  1450  0012FC  0D02               	mullw	2
  1451  0012FE  0E01               	movlw	low _dpowers
  1452  001300  24F3               	addwf	prodl,w,c
  1453  001302  6EF6               	movwf	tblptrl,c
  1454  001304  0E10               	movlw	high _dpowers
  1455  001306  20F4               	addwfc	prodh,w,c
  1456  001308  6EF7               	movwf	tblptrh,c
  1457  00130A                     	if	0	;There are less than 3 active tblptr bytes
  1458  00130A                     	endif
  1459  00130A  0009               	tblrd		*+
  1460  00130C  CFF5 F013          	movff	tablat,___lwdiv@divisor
  1461  001310  000A               	tblrd		*-
  1462  001312  CFF5 F014          	movff	tablat,___lwdiv@divisor+1
  1463  001316  C033  F011         	movff	printf@val,___lwdiv@dividend
  1464  00131A  C034  F012         	movff	printf@val+1,___lwdiv@dividend+1
  1465  00131E  EC44  F00C         	call	___lwdiv	;wreg free
  1466  001322  C011  F018         	movff	?___lwdiv,___lwmod@dividend
  1467  001326  C012  F019         	movff	?___lwdiv+1,___lwmod@dividend+1
  1468  00132A  0E00               	movlw	0
  1469  00132C  6E1B               	movwf	___lwmod@divisor+1,c
  1470  00132E  0E0A               	movlw	10
  1471  001330  6E1A               	movwf	___lwmod@divisor,c
  1472  001332  EC72  F00C         	call	___lwmod	;wreg free
  1473  001336  5018               	movf	?___lwmod,w,c
  1474  001338  0F30               	addlw	48
  1475  00133A  6E38               	movwf	printf@c,c
  1476                           
  1477                           ;doprnt.c: 1491: break;
  1478  00133C  D02C               	goto	l2626
  1479  00133E                     l2618:
  1480                           
  1481                           ;doprnt.c: 1499: {
  1482                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  1483  00133E  C033  F011         	movff	printf@val,___lwdiv@dividend
  1484  001342  C034  F012         	movff	printf@val+1,___lwdiv@dividend+1
  1485  001346  5032               	movf	printf@prec,w,c
  1486  001348  0D02               	mullw	2
  1487  00134A  0E0B               	movlw	low _hexpowers
  1488  00134C  24F3               	addwf	prodl,w,c
  1489  00134E  6EF6               	movwf	tblptrl,c
  1490  001350  0E10               	movlw	high _hexpowers
  1491  001352  20F4               	addwfc	prodh,w,c
  1492  001354  6EF7               	movwf	tblptrh,c
  1493  001356                     	if	0	;There are less than 3 active tblptr bytes
  1494  001356                     	endif
  1495  001356  0009               	tblrd		*+
  1496  001358  CFF5 F013          	movff	tablat,___lwdiv@divisor
  1497  00135C  000A               	tblrd		*-
  1498  00135E  CFF5 F014          	movff	tablat,___lwdiv@divisor+1
  1499  001362  EC44  F00C         	call	___lwdiv	;wreg free
  1500  001366  5011               	movf	?___lwdiv,w,c
  1501  001368  0B0F               	andlw	15
  1502  00136A  6E2F               	movwf	printf@idx,c
  1503                           
  1504                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  1505  00136C  502F               	movf	printf@idx,w,c
  1506  00136E  0D01               	mullw	1
  1507  001370  0E5C               	movlw	low STR_3
  1508  001372  24F3               	addwf	prodl,w,c
  1509  001374  6EF6               	movwf	tblptrl,c
  1510  001376  0E10               	movlw	high STR_3
  1511  001378  20F4               	addwfc	prodh,w,c
  1512  00137A  6EF7               	movwf	tblptrh,c
  1513  00137C                     	if	0	;There are less than 3 active tblptr bytes
  1514  00137C                     	endif
  1515  00137C  0008               	tblrd		*
  1516  00137E  CFF5 F038          	movff	tablat,printf@c
  1517                           
  1518                           ;doprnt.c: 1523: }
  1519                           
  1520                           ;doprnt.c: 1508: }
  1521                           ;doprnt.c: 1510: break;
  1522  001382  D009               	goto	l2626
  1523  001384                     l2624:
  1524  001384  5035               	movf	printf@flag,w,c
  1525  001386  0B80               	andlw	128
  1526                           
  1527                           ; Switch size 1, requested type "space"
  1528                           ; Number of cases is 2, Range of values is 0 to 128
  1529                           ; switch strategies available:
  1530                           ; Name         Instructions Cycles
  1531                           ; simple_byte            7     4 (average)
  1532                           ;	Chosen strategy is simple_byte
  1533  001388  0A00               	xorlw	0	; case 0
  1534  00138A  B4D8               	btfsc	status,2,c
  1535  00138C  D7B6               	goto	l2616
  1536  00138E  0A80               	xorlw	128	; case 128
  1537  001390  B4D8               	btfsc	status,2,c
  1538  001392  D7D5               	goto	l2618
  1539  001394  D000               	goto	l2626
  1540  001396                     l2626:
  1541                           
  1542                           ;doprnt.c: 1524: (putch(c) );
  1543  001396  5038               	movf	printf@c,w,c
  1544  001398  ECE1  F00D         	call	_putch
  1545  00139C  D000               	goto	l2628
  1546  00139E                     l2628:
  1547  00139E  0632               	decf	printf@prec,f,c
  1548  0013A0  2832               	incf	printf@prec,w,c
  1549  0013A2  B4D8               	btfsc	status,2,c
  1550  0013A4  D002               	goto	l2630
  1551  0013A6  D7EE               	goto	l2624
  1552  0013A8  D000               	goto	l2630
  1553  0013AA                     l2630:
  1554  0013AA  C01D  FFF6         	movff	printf@f,tblptrl
  1555  0013AE  C01E  FFF7         	movff	printf@f+1,tblptrh
  1556  0013B2  4A1D               	infsnz	printf@f,f,c
  1557  0013B4  2A1E               	incf	printf@f+1,f,c
  1558  0013B6                     	if	0	;tblptru may be non-zero
  1559  0013B6                     	endif
  1560  0013B6                     	if	0	;tblptru may be non-zero
  1561  0013B6                     	endif
  1562  0013B6  0008               	tblrd		*
  1563  0013B8  CFF5 F038          	movff	tablat,printf@c
  1564  0013BC  5038               	movf	printf@c,w,c
  1565  0013BE  B4D8               	btfsc	status,2,c
  1566  0013C0  D002               	goto	l394
  1567  0013C2  D65A               	goto	l2504
  1568  0013C4  D000               	goto	l394
  1569  0013C6                     l394:
  1570  0013C6  0012               	return		;funcret
  1571  0013C8                     __end_of_printf:
  1572                           	opt stack 0
  1573                           tblptru	equ	0xFF8
  1574                           tblptrh	equ	0xFF7
  1575                           tblptrl	equ	0xFF6
  1576                           tablat	equ	0xFF5
  1577                           prodh	equ	0xFF4
  1578                           prodl	equ	0xFF3
  1579                           intcon	equ	0xFF2
  1580                           intcon2	equ	0xFF1
  1581                           postinc0	equ	0xFEE
  1582                           wreg	equ	0xFE8
  1583                           postdec1	equ	0xFE5
  1584                           fsr1l	equ	0xFE1
  1585                           postinc2	equ	0xFDE
  1586                           postdec2	equ	0xFDD
  1587                           fsr2h	equ	0xFDA
  1588                           fsr2l	equ	0xFD9
  1589                           status	equ	0xFD8
  1590                           
  1591 ;; *************** function _putch *****************
  1592 ;; Defined at:
  1593 ;;		line 39 in file "Lab11.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;  c               1    wreg     unsigned char 
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;  c               1   16[COMRAM] unsigned char 
  1598 ;; Return value:  Size  Location     Type
  1599 ;;		None               void
  1600 ;; Registers used:
  1601 ;;		wreg
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1608 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1610 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1611 ;;Total ram usage:        1 bytes
  1612 ;; Hardware stack levels used:    1
  1613 ;; Hardware stack levels required when called:    3
  1614 ;; This function calls:
  1615 ;;		Nothing
  1616 ;; This function is called by:
  1617 ;;		_printf
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text2
  1622  001BC2                     __ptext2:
  1623                           	opt stack 0
  1624  001BC2                     _putch:
  1625                           	opt stack 26
  1626                           
  1627                           ;incstack = 0
  1628                           ;putch@c stored from wreg
  1629  001BC2  6E11               	movwf	putch@c,c
  1630                           
  1631                           ;Lab11.c: 41: while (!TRMT);
  1632  001BC4  D000               	goto	l109
  1633  001BC6                     l109:
  1634  001BC6  A2AC               	btfss	4012,1,c	;volatile
  1635  001BC8  D7FE               	goto	l109
  1636                           
  1637                           ;Lab11.c: 42: TXREG = c;
  1638  001BCA  C011  FFAD         	movff	putch@c,4013	;volatile
  1639  001BCE  0012               	return		;funcret
  1640  001BD0                     __end_of_putch:
  1641                           	opt stack 0
  1642                           tblptru	equ	0xFF8
  1643                           tblptrh	equ	0xFF7
  1644                           tblptrl	equ	0xFF6
  1645                           tablat	equ	0xFF5
  1646                           prodh	equ	0xFF4
  1647                           prodl	equ	0xFF3
  1648                           intcon	equ	0xFF2
  1649                           intcon2	equ	0xFF1
  1650                           postinc0	equ	0xFEE
  1651                           wreg	equ	0xFE8
  1652                           postdec1	equ	0xFE5
  1653                           fsr1l	equ	0xFE1
  1654                           postinc2	equ	0xFDE
  1655                           postdec2	equ	0xFDD
  1656                           fsr2h	equ	0xFDA
  1657                           fsr2l	equ	0xFD9
  1658                           status	equ	0xFD8
  1659                           
  1660 ;; *************** function _isdigit *****************
  1661 ;; Defined at:
  1662 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;  c               1    wreg     unsigned char 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  c               1   18[COMRAM] unsigned char 
  1667 ;; Return value:  Size  Location     Type
  1668 ;;		None               void
  1669 ;; Registers used:
  1670 ;;		wreg, status,2, status,0
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1677 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1678 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1679 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1680 ;;Total ram usage:        3 bytes
  1681 ;; Hardware stack levels used:    1
  1682 ;; Hardware stack levels required when called:    3
  1683 ;; This function calls:
  1684 ;;		Nothing
  1685 ;; This function is called by:
  1686 ;;		_printf
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text3
  1691  001AA8                     __ptext3:
  1692                           	opt stack 0
  1693  001AA8                     _isdigit:
  1694                           	opt stack 26
  1695                           
  1696                           ;incstack = 0
  1697                           ;isdigit@c stored from wreg
  1698  001AA8  6E13               	movwf	isdigit@c,c
  1699  001AAA  0E00               	movlw	0
  1700  001AAC  6E12               	movwf	_isdigit$1366,c
  1701  001AAE  0E3A               	movlw	58
  1702  001AB0  6013               	cpfslt	isdigit@c,c
  1703  001AB2  D006               	goto	l2346
  1704  001AB4  0E2F               	movlw	47
  1705  001AB6  6413               	cpfsgt	isdigit@c,c
  1706  001AB8  D003               	goto	l2346
  1707  001ABA  0E01               	movlw	1
  1708  001ABC  6E12               	movwf	_isdigit$1366,c
  1709  001ABE  D000               	goto	l2346
  1710  001AC0                     l2346:
  1711  001AC0  C012  F011         	movff	_isdigit$1366,??_isdigit
  1712  001AC4  3011               	rrcf	??_isdigit,w,c
  1713  001AC6  D000               	goto	l861
  1714  001AC8                     l861:
  1715  001AC8  0012               	return		;funcret
  1716  001ACA                     __end_of_isdigit:
  1717                           	opt stack 0
  1718                           tblptru	equ	0xFF8
  1719                           tblptrh	equ	0xFF7
  1720                           tblptrl	equ	0xFF6
  1721                           tablat	equ	0xFF5
  1722                           prodh	equ	0xFF4
  1723                           prodl	equ	0xFF3
  1724                           intcon	equ	0xFF2
  1725                           intcon2	equ	0xFF1
  1726                           postinc0	equ	0xFEE
  1727                           wreg	equ	0xFE8
  1728                           postdec1	equ	0xFE5
  1729                           fsr1l	equ	0xFE1
  1730                           postinc2	equ	0xFDE
  1731                           postdec2	equ	0xFDD
  1732                           fsr2h	equ	0xFDA
  1733                           fsr2l	equ	0xFD9
  1734                           status	equ	0xFD8
  1735                           
  1736 ;; *************** function ___wmul *****************
  1737 ;; Defined at:
  1738 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  multiplier      2   16[COMRAM] unsigned int 
  1741 ;;  multiplicand    2   18[COMRAM] unsigned int 
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;  product         2   20[COMRAM] unsigned int 
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  2   16[COMRAM] unsigned int 
  1746 ;; Registers used:
  1747 ;;		wreg, status,2, status,0, prodl, prodh
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1753 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1754 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1756 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;Total ram usage:        6 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; Hardware stack levels required when called:    3
  1760 ;; This function calls:
  1761 ;;		Nothing
  1762 ;; This function is called by:
  1763 ;;		_printf
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           	psect	text4
  1768  001A5C                     __ptext4:
  1769                           	opt stack 0
  1770  001A5C                     ___wmul:
  1771                           	opt stack 26
  1772                           
  1773                           ;incstack = 0
  1774  001A5C  5011               	movf	___wmul@multiplier,w,c
  1775  001A5E  0213               	mulwf	___wmul@multiplicand,c
  1776  001A60  CFF3 F015          	movff	prodl,___wmul@product
  1777  001A64  CFF4 F016          	movff	prodh,___wmul@product+1
  1778  001A68  5011               	movf	___wmul@multiplier,w,c
  1779  001A6A  0214               	mulwf	___wmul@multiplicand+1,c
  1780  001A6C  50F3               	movf	prodl,w,c
  1781  001A6E  2616               	addwf	___wmul@product+1,f,c
  1782  001A70  5012               	movf	___wmul@multiplier+1,w,c
  1783  001A72  0213               	mulwf	___wmul@multiplicand,c
  1784  001A74  50F3               	movf	prodl,w,c
  1785  001A76  2616               	addwf	___wmul@product+1,f,c
  1786  001A78  C015  F011         	movff	___wmul@product,?___wmul
  1787  001A7C  C016  F012         	movff	___wmul@product+1,?___wmul+1
  1788  001A80  D000               	goto	l430
  1789  001A82                     l430:
  1790  001A82  0012               	return		;funcret
  1791  001A84                     __end_of___wmul:
  1792                           	opt stack 0
  1793                           tblptru	equ	0xFF8
  1794                           tblptrh	equ	0xFF7
  1795                           tblptrl	equ	0xFF6
  1796                           tablat	equ	0xFF5
  1797                           prodh	equ	0xFF4
  1798                           prodl	equ	0xFF3
  1799                           intcon	equ	0xFF2
  1800                           intcon2	equ	0xFF1
  1801                           postinc0	equ	0xFEE
  1802                           wreg	equ	0xFE8
  1803                           postdec1	equ	0xFE5
  1804                           fsr1l	equ	0xFE1
  1805                           postinc2	equ	0xFDE
  1806                           postdec2	equ	0xFDD
  1807                           fsr2h	equ	0xFDA
  1808                           fsr2l	equ	0xFD9
  1809                           status	equ	0xFD8
  1810                           
  1811 ;; *************** function ___lwmod *****************
  1812 ;; Defined at:
  1813 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;  dividend        2   23[COMRAM] unsigned int 
  1816 ;;  divisor         2   25[COMRAM] unsigned int 
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  counter         1   27[COMRAM] unsigned char 
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  2   23[COMRAM] unsigned int 
  1821 ;; Registers used:
  1822 ;;		wreg, status,2, status,0
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1828 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1829 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1832 ;;Total ram usage:        5 bytes
  1833 ;; Hardware stack levels used:    1
  1834 ;; Hardware stack levels required when called:    3
  1835 ;; This function calls:
  1836 ;;		Nothing
  1837 ;; This function is called by:
  1838 ;;		_printf
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text5
  1843  0018E4                     __ptext5:
  1844                           	opt stack 0
  1845  0018E4                     ___lwmod:
  1846                           	opt stack 26
  1847                           
  1848                           ;incstack = 0
  1849  0018E4  501A               	movf	___lwmod@divisor,w,c
  1850  0018E6  101B               	iorwf	___lwmod@divisor+1,w,c
  1851  0018E8  B4D8               	btfsc	status,2,c
  1852  0018EA  D01D               	goto	l963
  1853  0018EC  0E01               	movlw	1
  1854  0018EE  6E1C               	movwf	___lwmod@counter,c
  1855  0018F0  D005               	goto	l2384
  1856  0018F2                     l2382:
  1857  0018F2  90D8               	bcf	status,0,c
  1858  0018F4  361A               	rlcf	___lwmod@divisor,f,c
  1859  0018F6  361B               	rlcf	___lwmod@divisor+1,f,c
  1860  0018F8  2A1C               	incf	___lwmod@counter,f,c
  1861  0018FA  D000               	goto	l2384
  1862  0018FC                     l2384:
  1863  0018FC  BE1B               	btfsc	___lwmod@divisor+1,7,c
  1864  0018FE  D002               	goto	l2386
  1865  001900  D7F8               	goto	l2382
  1866  001902  D000               	goto	l2386
  1867  001904                     l2386:
  1868  001904  501A               	movf	___lwmod@divisor,w,c
  1869  001906  5C18               	subwf	___lwmod@dividend,w,c
  1870  001908  501B               	movf	___lwmod@divisor+1,w,c
  1871  00190A  5819               	subwfb	___lwmod@dividend+1,w,c
  1872  00190C  A0D8               	btfss	status,0,c
  1873  00190E  D005               	goto	l2390
  1874  001910  501A               	movf	___lwmod@divisor,w,c
  1875  001912  5E18               	subwf	___lwmod@dividend,f,c
  1876  001914  501B               	movf	___lwmod@divisor+1,w,c
  1877  001916  5A19               	subwfb	___lwmod@dividend+1,f,c
  1878  001918  D000               	goto	l2390
  1879  00191A                     l2390:
  1880  00191A  90D8               	bcf	status,0,c
  1881  00191C  321B               	rrcf	___lwmod@divisor+1,f,c
  1882  00191E  321A               	rrcf	___lwmod@divisor,f,c
  1883  001920  2E1C               	decfsz	___lwmod@counter,f,c
  1884  001922  D7F0               	goto	l2386
  1885  001924  D000               	goto	l963
  1886  001926                     l963:
  1887  001926  C018  F018         	movff	___lwmod@dividend,?___lwmod
  1888  00192A  C019  F019         	movff	___lwmod@dividend+1,?___lwmod+1
  1889  00192E  0012               	return		;funcret
  1890  001930                     __end_of___lwmod:
  1891                           	opt stack 0
  1892                           tblptru	equ	0xFF8
  1893                           tblptrh	equ	0xFF7
  1894                           tblptrl	equ	0xFF6
  1895                           tablat	equ	0xFF5
  1896                           prodh	equ	0xFF4
  1897                           prodl	equ	0xFF3
  1898                           intcon	equ	0xFF2
  1899                           intcon2	equ	0xFF1
  1900                           postinc0	equ	0xFEE
  1901                           wreg	equ	0xFE8
  1902                           postdec1	equ	0xFE5
  1903                           fsr1l	equ	0xFE1
  1904                           postinc2	equ	0xFDE
  1905                           postdec2	equ	0xFDD
  1906                           fsr2h	equ	0xFDA
  1907                           fsr2l	equ	0xFD9
  1908                           status	equ	0xFD8
  1909                           
  1910 ;; *************** function ___lwdiv *****************
  1911 ;; Defined at:
  1912 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1913 ;; Parameters:    Size  Location     Type
  1914 ;;  dividend        2   16[COMRAM] unsigned int 
  1915 ;;  divisor         2   18[COMRAM] unsigned int 
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;  quotient        2   21[COMRAM] unsigned int 
  1918 ;;  counter         1   20[COMRAM] unsigned char 
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  2   16[COMRAM] unsigned int 
  1921 ;; Registers used:
  1922 ;;		wreg, status,2, status,0
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1928 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1929 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1931 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1932 ;;Total ram usage:        7 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; Hardware stack levels required when called:    3
  1935 ;; This function calls:
  1936 ;;		Nothing
  1937 ;; This function is called by:
  1938 ;;		_printf
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text6
  1943  001888                     __ptext6:
  1944                           	opt stack 0
  1945  001888                     ___lwdiv:
  1946                           	opt stack 26
  1947                           
  1948                           ;incstack = 0
  1949  001888  0E00               	movlw	0
  1950  00188A  6E17               	movwf	___lwdiv@quotient+1,c
  1951  00188C  0E00               	movlw	0
  1952  00188E  6E16               	movwf	___lwdiv@quotient,c
  1953  001890  5013               	movf	___lwdiv@divisor,w,c
  1954  001892  1014               	iorwf	___lwdiv@divisor+1,w,c
  1955  001894  B4D8               	btfsc	status,2,c
  1956  001896  D021               	goto	l953
  1957  001898  0E01               	movlw	1
  1958  00189A  6E15               	movwf	___lwdiv@counter,c
  1959  00189C  D005               	goto	l2364
  1960  00189E                     l2362:
  1961  00189E  90D8               	bcf	status,0,c
  1962  0018A0  3613               	rlcf	___lwdiv@divisor,f,c
  1963  0018A2  3614               	rlcf	___lwdiv@divisor+1,f,c
  1964  0018A4  2A15               	incf	___lwdiv@counter,f,c
  1965  0018A6  D000               	goto	l2364
  1966  0018A8                     l2364:
  1967  0018A8  BE14               	btfsc	___lwdiv@divisor+1,7,c
  1968  0018AA  D002               	goto	l2366
  1969  0018AC  D7F8               	goto	l2362
  1970  0018AE  D000               	goto	l2366
  1971  0018B0                     l2366:
  1972  0018B0  90D8               	bcf	status,0,c
  1973  0018B2  3616               	rlcf	___lwdiv@quotient,f,c
  1974  0018B4  3617               	rlcf	___lwdiv@quotient+1,f,c
  1975  0018B6  5013               	movf	___lwdiv@divisor,w,c
  1976  0018B8  5C11               	subwf	___lwdiv@dividend,w,c
  1977  0018BA  5014               	movf	___lwdiv@divisor+1,w,c
  1978  0018BC  5812               	subwfb	___lwdiv@dividend+1,w,c
  1979  0018BE  A0D8               	btfss	status,0,c
  1980  0018C0  D006               	goto	l2374
  1981  0018C2  5013               	movf	___lwdiv@divisor,w,c
  1982  0018C4  5E11               	subwf	___lwdiv@dividend,f,c
  1983  0018C6  5014               	movf	___lwdiv@divisor+1,w,c
  1984  0018C8  5A12               	subwfb	___lwdiv@dividend+1,f,c
  1985  0018CA  8016               	bsf	___lwdiv@quotient,0,c
  1986  0018CC  D000               	goto	l2374
  1987  0018CE                     l2374:
  1988  0018CE  90D8               	bcf	status,0,c
  1989  0018D0  3214               	rrcf	___lwdiv@divisor+1,f,c
  1990  0018D2  3213               	rrcf	___lwdiv@divisor,f,c
  1991  0018D4  2E15               	decfsz	___lwdiv@counter,f,c
  1992  0018D6  D7EC               	goto	l2366
  1993  0018D8  D000               	goto	l953
  1994  0018DA                     l953:
  1995  0018DA  C016  F011         	movff	___lwdiv@quotient,?___lwdiv
  1996  0018DE  C017  F012         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1997  0018E2  0012               	return		;funcret
  1998  0018E4                     __end_of___lwdiv:
  1999                           	opt stack 0
  2000                           tblptru	equ	0xFF8
  2001                           tblptrh	equ	0xFF7
  2002                           tblptrl	equ	0xFF6
  2003                           tablat	equ	0xFF5
  2004                           prodh	equ	0xFF4
  2005                           prodl	equ	0xFF3
  2006                           intcon	equ	0xFF2
  2007                           intcon2	equ	0xFF1
  2008                           postinc0	equ	0xFEE
  2009                           wreg	equ	0xFE8
  2010                           postdec1	equ	0xFE5
  2011                           fsr1l	equ	0xFE1
  2012                           postinc2	equ	0xFDE
  2013                           postdec2	equ	0xFDD
  2014                           fsr2h	equ	0xFDA
  2015                           fsr2l	equ	0xFD9
  2016                           status	equ	0xFD8
  2017                           
  2018 ;; *************** function ___awdiv *****************
  2019 ;; Defined at:
  2020 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  dividend        2   16[COMRAM] int 
  2023 ;;  divisor         2   18[COMRAM] int 
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;  quotient        2   22[COMRAM] int 
  2026 ;;  sign            1   21[COMRAM] unsigned char 
  2027 ;;  counter         1   20[COMRAM] unsigned char 
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  2   16[COMRAM] int 
  2030 ;; Registers used:
  2031 ;;		wreg, status,2, status,0
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2037 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2038 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2040 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2041 ;;Total ram usage:        8 bytes
  2042 ;; Hardware stack levels used:    1
  2043 ;; Hardware stack levels required when called:    3
  2044 ;; This function calls:
  2045 ;;		Nothing
  2046 ;; This function is called by:
  2047 ;;		_main
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           	psect	text7
  2052  00163C                     __ptext7:
  2053                           	opt stack 0
  2054  00163C                     ___awdiv:
  2055                           	opt stack 27
  2056                           
  2057                           ;incstack = 0
  2058  00163C  0E00               	movlw	0
  2059  00163E  6E16               	movwf	___awdiv@sign,c
  2060  001640  AE14               	btfss	___awdiv@divisor+1,7,c
  2061  001642  D007               	goto	l2640
  2062  001644  6C13               	negf	___awdiv@divisor,c
  2063  001646  1E14               	comf	___awdiv@divisor+1,f,c
  2064  001648  B0D8               	btfsc	status,0,c
  2065  00164A  2A14               	incf	___awdiv@divisor+1,f,c
  2066  00164C  0E01               	movlw	1
  2067  00164E  6E16               	movwf	___awdiv@sign,c
  2068  001650  D000               	goto	l2640
  2069  001652                     l2640:
  2070  001652  AE12               	btfss	___awdiv@dividend+1,7,c
  2071  001654  D007               	goto	l2646
  2072  001656  6C11               	negf	___awdiv@dividend,c
  2073  001658  1E12               	comf	___awdiv@dividend+1,f,c
  2074  00165A  B0D8               	btfsc	status,0,c
  2075  00165C  2A12               	incf	___awdiv@dividend+1,f,c
  2076  00165E  0E01               	movlw	1
  2077  001660  1A16               	xorwf	___awdiv@sign,f,c
  2078  001662  D000               	goto	l2646
  2079  001664                     l2646:
  2080  001664  0E00               	movlw	0
  2081  001666  6E18               	movwf	___awdiv@quotient+1,c
  2082  001668  0E00               	movlw	0
  2083  00166A  6E17               	movwf	___awdiv@quotient,c
  2084  00166C  5013               	movf	___awdiv@divisor,w,c
  2085  00166E  1014               	iorwf	___awdiv@divisor+1,w,c
  2086  001670  B4D8               	btfsc	status,2,c
  2087  001672  D021               	goto	l2668
  2088  001674  0E01               	movlw	1
  2089  001676  6E15               	movwf	___awdiv@counter,c
  2090  001678  D005               	goto	l2654
  2091  00167A                     l2652:
  2092  00167A  90D8               	bcf	status,0,c
  2093  00167C  3613               	rlcf	___awdiv@divisor,f,c
  2094  00167E  3614               	rlcf	___awdiv@divisor+1,f,c
  2095  001680  2A15               	incf	___awdiv@counter,f,c
  2096  001682  D000               	goto	l2654
  2097  001684                     l2654:
  2098  001684  BE14               	btfsc	___awdiv@divisor+1,7,c
  2099  001686  D002               	goto	l2656
  2100  001688  D7F8               	goto	l2652
  2101  00168A  D000               	goto	l2656
  2102  00168C                     l2656:
  2103  00168C  90D8               	bcf	status,0,c
  2104  00168E  3617               	rlcf	___awdiv@quotient,f,c
  2105  001690  3618               	rlcf	___awdiv@quotient+1,f,c
  2106  001692  5013               	movf	___awdiv@divisor,w,c
  2107  001694  5C11               	subwf	___awdiv@dividend,w,c
  2108  001696  5014               	movf	___awdiv@divisor+1,w,c
  2109  001698  5812               	subwfb	___awdiv@dividend+1,w,c
  2110  00169A  A0D8               	btfss	status,0,c
  2111  00169C  D006               	goto	l2664
  2112  00169E  5013               	movf	___awdiv@divisor,w,c
  2113  0016A0  5E11               	subwf	___awdiv@dividend,f,c
  2114  0016A2  5014               	movf	___awdiv@divisor+1,w,c
  2115  0016A4  5A12               	subwfb	___awdiv@dividend+1,f,c
  2116  0016A6  8017               	bsf	___awdiv@quotient,0,c
  2117  0016A8  D000               	goto	l2664
  2118  0016AA                     l2664:
  2119  0016AA  90D8               	bcf	status,0,c
  2120  0016AC  3214               	rrcf	___awdiv@divisor+1,f,c
  2121  0016AE  3213               	rrcf	___awdiv@divisor,f,c
  2122  0016B0  2E15               	decfsz	___awdiv@counter,f,c
  2123  0016B2  D7EC               	goto	l2656
  2124  0016B4  D000               	goto	l2668
  2125  0016B6                     l2668:
  2126  0016B6  5016               	movf	___awdiv@sign,w,c
  2127  0016B8  B4D8               	btfsc	status,2,c
  2128  0016BA  D005               	goto	l2672
  2129  0016BC  6C17               	negf	___awdiv@quotient,c
  2130  0016BE  1E18               	comf	___awdiv@quotient+1,f,c
  2131  0016C0  B0D8               	btfsc	status,0,c
  2132  0016C2  2A18               	incf	___awdiv@quotient+1,f,c
  2133  0016C4  D000               	goto	l2672
  2134  0016C6                     l2672:
  2135  0016C6  C017  F011         	movff	___awdiv@quotient,?___awdiv
  2136  0016CA  C018  F012         	movff	___awdiv@quotient+1,?___awdiv+1
  2137  0016CE  D000               	goto	l623
  2138  0016D0                     l623:
  2139  0016D0  0012               	return		;funcret
  2140  0016D2                     __end_of___awdiv:
  2141                           	opt stack 0
  2142                           tblptru	equ	0xFF8
  2143                           tblptrh	equ	0xFF7
  2144                           tblptrl	equ	0xFF6
  2145                           tablat	equ	0xFF5
  2146                           prodh	equ	0xFF4
  2147                           prodl	equ	0xFF3
  2148                           intcon	equ	0xFF2
  2149                           intcon2	equ	0xFF1
  2150                           postinc0	equ	0xFEE
  2151                           wreg	equ	0xFE8
  2152                           postdec1	equ	0xFE5
  2153                           fsr1l	equ	0xFE1
  2154                           postinc2	equ	0xFDE
  2155                           postdec2	equ	0xFDD
  2156                           fsr2h	equ	0xFDA
  2157                           fsr2l	equ	0xFD9
  2158                           status	equ	0xFD8
  2159                           
  2160 ;; *************** function _Wait_One_Sec *****************
  2161 ;; Defined at:
  2162 ;;		line 83 in file "Lab11.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;		None
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;  k               2   16[COMRAM] int 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;		None               void
  2169 ;; Registers used:
  2170 ;;		wreg, status,2, status,0
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2179 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;Total ram usage:        2 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; Hardware stack levels required when called:    3
  2183 ;; This function calls:
  2184 ;;		Nothing
  2185 ;; This function is called by:
  2186 ;;		_main
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text8
  2191  001A84                     __ptext8:
  2192                           	opt stack 0
  2193  001A84                     _Wait_One_Sec:
  2194                           	opt stack 27
  2195                           
  2196                           ;Lab11.c: 85: for (int k = 0; k < 17000; k++);
  2197                           
  2198                           ;incstack = 0
  2199  001A84  0E00               	movlw	0
  2200  001A86  6E12               	movwf	Wait_One_Sec@k+1,c
  2201  001A88  0E00               	movlw	0
  2202  001A8A  6E11               	movwf	Wait_One_Sec@k,c
  2203  001A8C                     l2416:
  2204  001A8C  BE12               	btfsc	Wait_One_Sec@k+1,7,c
  2205  001A8E  D008               	goto	l2420
  2206  001A90  0E68               	movlw	104
  2207  001A92  5C11               	subwf	Wait_One_Sec@k,w,c
  2208  001A94  0E42               	movlw	66
  2209  001A96  5812               	subwfb	Wait_One_Sec@k+1,w,c
  2210  001A98  B0D8               	btfsc	status,0,c
  2211  001A9A  D005               	goto	l126
  2212  001A9C  D001               	goto	l2420
  2213  001A9E  D003               	goto	l126
  2214  001AA0                     l2420:
  2215  001AA0  4A11               	infsnz	Wait_One_Sec@k,f,c
  2216  001AA2  2A12               	incf	Wait_One_Sec@k+1,f,c
  2217  001AA4  D7F3               	goto	l2416
  2218  001AA6                     l126:
  2219  001AA6  0012               	return		;funcret
  2220  001AA8                     __end_of_Wait_One_Sec:
  2221                           	opt stack 0
  2222                           tblptru	equ	0xFF8
  2223                           tblptrh	equ	0xFF7
  2224                           tblptrl	equ	0xFF6
  2225                           tablat	equ	0xFF5
  2226                           prodh	equ	0xFF4
  2227                           prodl	equ	0xFF3
  2228                           intcon	equ	0xFF2
  2229                           intcon2	equ	0xFF1
  2230                           postinc0	equ	0xFEE
  2231                           wreg	equ	0xFE8
  2232                           postdec1	equ	0xFE5
  2233                           fsr1l	equ	0xFE1
  2234                           postinc2	equ	0xFDE
  2235                           postdec2	equ	0xFDD
  2236                           fsr2h	equ	0xFDA
  2237                           fsr2l	equ	0xFD9
  2238                           status	equ	0xFD8
  2239                           
  2240 ;; *************** function _Do_Init *****************
  2241 ;; Defined at:
  2242 ;;		line 64 in file "Lab11.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;		None
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;		None
  2247 ;; Return value:  Size  Location     Type
  2248 ;;		None               void
  2249 ;; Registers used:
  2250 ;;		wreg, status,2, status,0, cstack
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2260 ;;Total ram usage:        0 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    7
  2263 ;; This function calls:
  2264 ;;		_DS1621_Init
  2265 ;;		_I2C_Init
  2266 ;;		_init_INTERRUPT
  2267 ;;		_init_UART
  2268 ;; This function is called by:
  2269 ;;		_main
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273                           	psect	text9
  2274  001A28                     __ptext9:
  2275                           	opt stack 0
  2276  001A28                     _Do_Init:
  2277                           	opt stack 23
  2278                           
  2279                           ;Lab11.c: 66: init_UART();
  2280                           
  2281                           ;incstack = 0
  2282  001A28  ECB3  F00D         	call	_init_UART	;wreg free
  2283                           
  2284                           ;Lab11.c: 67: OSCCON=0x70;
  2285  001A2C  0E70               	movlw	112
  2286  001A2E  6ED3               	movwf	4051,c	;volatile
  2287                           
  2288                           ;Lab11.c: 69: ADCON1=0x0F;
  2289  001A30  0E0F               	movlw	15
  2290  001A32  6EC1               	movwf	4033,c	;volatile
  2291                           
  2292                           ;Lab11.c: 71: TRISB = 0x01;
  2293  001A34  0E01               	movlw	1
  2294  001A36  6E93               	movwf	3987,c	;volatile
  2295                           
  2296                           ;Lab11.c: 72: TRISC = 0xFF;
  2297  001A38  6894               	setf	3988,c	;volatile
  2298                           
  2299                           ;Lab11.c: 73: TRISD = 0xFF;
  2300  001A3A  6895               	setf	3989,c	;volatile
  2301                           
  2302                           ;Lab11.c: 75: RBPU=0;
  2303  001A3C  9EF1               	bcf	intcon2,7,c	;volatile
  2304                           
  2305                           ;Lab11.c: 77: I2C_Init(100000);
  2306  001A3E  0EA0               	movlw	160
  2307  001A40  6E11               	movwf	I2C_Init@c,c
  2308  001A42  0E86               	movlw	134
  2309  001A44  6E12               	movwf	I2C_Init@c+1,c
  2310  001A46  0E01               	movlw	1
  2311  001A48  6E13               	movwf	I2C_Init@c+2,c
  2312  001A4A  0E00               	movlw	0
  2313  001A4C  6E14               	movwf	I2C_Init@c+3,c
  2314  001A4E  ECF4  F00D         	call	_I2C_Init	;wreg free
  2315                           
  2316                           ;Lab11.c: 78: DS1621_Init();
  2317  001A52  EC75  F00D         	call	_DS1621_Init	;wreg free
  2318                           
  2319                           ;Lab11.c: 79: init_INTERRUPT();
  2320  001A56  EC91  F00D         	call	_init_INTERRUPT	;wreg free
  2321  001A5A  0012               	return		;funcret
  2322  001A5C                     __end_of_Do_Init:
  2323                           	opt stack 0
  2324                           tblptru	equ	0xFF8
  2325                           tblptrh	equ	0xFF7
  2326                           tblptrl	equ	0xFF6
  2327                           tablat	equ	0xFF5
  2328                           prodh	equ	0xFF4
  2329                           prodl	equ	0xFF3
  2330                           intcon	equ	0xFF2
  2331                           intcon2	equ	0xFF1
  2332                           postinc0	equ	0xFEE
  2333                           wreg	equ	0xFE8
  2334                           postdec1	equ	0xFE5
  2335                           fsr1l	equ	0xFE1
  2336                           postinc2	equ	0xFDE
  2337                           postdec2	equ	0xFDD
  2338                           fsr2h	equ	0xFDA
  2339                           fsr2l	equ	0xFD9
  2340                           status	equ	0xFD8
  2341                           
  2342 ;; *************** function _init_UART *****************
  2343 ;; Defined at:
  2344 ;;		line 45 in file "Lab11.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;		None
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;		None
  2349 ;; Return value:  Size  Location     Type
  2350 ;;		None               void
  2351 ;; Registers used:
  2352 ;;		wreg, status,2, cstack
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2362 ;;Total ram usage:        0 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; Hardware stack levels required when called:    4
  2365 ;; This function calls:
  2366 ;;		_OpenUSART
  2367 ;; This function is called by:
  2368 ;;		_Do_Init
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           	psect	text10
  2373  001B66                     __ptext10:
  2374                           	opt stack 0
  2375  001B66                     _init_UART:
  2376                           	opt stack 25
  2377                           
  2378                           ;Lab11.c: 47: OpenUSART (0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b11111111 
      +                          & 0b11111111, 25);
  2379                           
  2380                           ;incstack = 0
  2381  001B66  0E00               	movlw	0
  2382  001B68  6E12               	movwf	OpenUSART@spbrg+1,c
  2383  001B6A  0E19               	movlw	25
  2384  001B6C  6E11               	movwf	OpenUSART@spbrg,c
  2385  001B6E  0E3C               	movlw	60
  2386  001B70  ECA7  F00B         	call	_OpenUSART
  2387                           
  2388                           ;Lab11.c: 48: OSCCON = 0x70;
  2389  001B74  0E70               	movlw	112
  2390  001B76  6ED3               	movwf	4051,c	;volatile
  2391  001B78  0012               	return		;funcret
  2392  001B7A                     __end_of_init_UART:
  2393                           	opt stack 0
  2394                           tblptru	equ	0xFF8
  2395                           tblptrh	equ	0xFF7
  2396                           tblptrl	equ	0xFF6
  2397                           tablat	equ	0xFF5
  2398                           prodh	equ	0xFF4
  2399                           prodl	equ	0xFF3
  2400                           intcon	equ	0xFF2
  2401                           intcon2	equ	0xFF1
  2402                           postinc0	equ	0xFEE
  2403                           wreg	equ	0xFE8
  2404                           postdec1	equ	0xFE5
  2405                           fsr1l	equ	0xFE1
  2406                           postinc2	equ	0xFDE
  2407                           postdec2	equ	0xFDD
  2408                           fsr2h	equ	0xFDA
  2409                           fsr2l	equ	0xFD9
  2410                           status	equ	0xFD8
  2411                           
  2412 ;; *************** function _OpenUSART *****************
  2413 ;; Defined at:
  2414 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  config          1    wreg     unsigned char 
  2417 ;;  spbrg           2   16[COMRAM] unsigned int 
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;  config          1   18[COMRAM] unsigned char 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;		None               void
  2422 ;; Registers used:
  2423 ;;		wreg, status,2
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2429 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;Total ram usage:        3 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; Hardware stack levels required when called:    3
  2436 ;; This function calls:
  2437 ;;		Nothing
  2438 ;; This function is called by:
  2439 ;;		_init_UART
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           	psect	text11
  2444  00174E                     __ptext11:
  2445                           	opt stack 0
  2446  00174E                     _OpenUSART:
  2447                           	opt stack 25
  2448                           
  2449                           ;incstack = 0
  2450                           ;OpenUSART@config stored from wreg
  2451  00174E  6E13               	movwf	OpenUSART@config,c
  2452  001750  0E00               	movlw	0
  2453  001752  6EAC               	movwf	4012,c	;volatile
  2454  001754  0E00               	movlw	0
  2455  001756  6EAB               	movwf	4011,c	;volatile
  2456  001758  A013               	btfss	OpenUSART@config,0,c
  2457  00175A  D002               	goto	l2196
  2458  00175C  88AC               	bsf	4012,4,c	;volatile
  2459  00175E  D000               	goto	l2196
  2460  001760                     l2196:
  2461  001760  A213               	btfss	OpenUSART@config,1,c
  2462  001762  D003               	goto	l2200
  2463  001764  8CAC               	bsf	4012,6,c	;volatile
  2464  001766  8CAB               	bsf	4011,6,c	;volatile
  2465  001768  D000               	goto	l2200
  2466  00176A                     l2200:
  2467  00176A  A413               	btfss	OpenUSART@config,2,c
  2468  00176C  D002               	goto	l2204
  2469  00176E  8EAC               	bsf	4012,7,c	;volatile
  2470  001770  D000               	goto	l2204
  2471  001772                     l2204:
  2472  001772  A613               	btfss	OpenUSART@config,3,c
  2473  001774  D002               	goto	l418
  2474  001776  88AB               	bsf	4011,4,c	;volatile
  2475  001778  D002               	goto	l2208
  2476  00177A                     l418:
  2477  00177A  8AAB               	bsf	4011,5,c	;volatile
  2478  00177C  D000               	goto	l2208
  2479  00177E                     l2208:
  2480  00177E  B813               	btfsc	OpenUSART@config,4,c
  2481  001780  84AC               	bsf	4012,2,c	;volatile
  2482  001782  989E               	bcf	3998,4,c	;volatile
  2483  001784  AA13               	btfss	OpenUSART@config,5,c
  2484  001786  D002               	goto	l2216
  2485  001788  86AB               	bsf	4011,3,c	;volatile
  2486  00178A  D000               	goto	l2216
  2487  00178C                     l2216:
  2488  00178C  AC13               	btfss	OpenUSART@config,6,c
  2489  00178E  D002               	goto	l422
  2490  001790  8A9D               	bsf	3997,5,c	;volatile
  2491  001792  D001               	goto	l423
  2492  001794                     l422:
  2493  001794  9A9D               	bcf	3997,5,c	;volatile
  2494  001796                     l423:
  2495  001796  9A9E               	bcf	3998,5,c	;volatile
  2496  001798  AE13               	btfss	OpenUSART@config,7,c
  2497  00179A  D002               	goto	l424
  2498  00179C  889D               	bsf	3997,4,c	;volatile
  2499  00179E  D001               	goto	l425
  2500  0017A0                     l424:
  2501  0017A0  989D               	bcf	3997,4,c	;volatile
  2502  0017A2                     l425:
  2503  0017A2  C011  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2504  0017A6  5012               	movf	OpenUSART@spbrg+1,w,c
  2505  0017A8  6EB0               	movwf	4016,c	;volatile
  2506  0017AA  8AAC               	bsf	4012,5,c	;volatile
  2507  0017AC  8EAB               	bsf	4011,7,c	;volatile
  2508  0017AE  9C94               	bcf	3988,6,c	;volatile
  2509  0017B0  8E94               	bsf	3988,7,c	;volatile
  2510  0017B2  B8AC               	btfsc	4012,4,c	;volatile
  2511  0017B4  BEAC               	btfsc	4012,7,c	;volatile
  2512  0017B6  D002               	goto	l427
  2513  0017B8  8C94               	bsf	3988,6,c	;volatile
  2514  0017BA  D000               	goto	l427
  2515  0017BC                     l427:
  2516  0017BC  0012               	return		;funcret
  2517  0017BE                     __end_of_OpenUSART:
  2518                           	opt stack 0
  2519                           tblptru	equ	0xFF8
  2520                           tblptrh	equ	0xFF7
  2521                           tblptrl	equ	0xFF6
  2522                           tablat	equ	0xFF5
  2523                           prodh	equ	0xFF4
  2524                           prodl	equ	0xFF3
  2525                           intcon	equ	0xFF2
  2526                           intcon2	equ	0xFF1
  2527                           postinc0	equ	0xFEE
  2528                           wreg	equ	0xFE8
  2529                           postdec1	equ	0xFE5
  2530                           fsr1l	equ	0xFE1
  2531                           postinc2	equ	0xFDE
  2532                           postdec2	equ	0xFDD
  2533                           fsr2h	equ	0xFDA
  2534                           fsr2l	equ	0xFD9
  2535                           status	equ	0xFD8
  2536                           
  2537 ;; *************** function _init_INTERRUPT *****************
  2538 ;; Defined at:
  2539 ;;		line 51 in file "Lab11.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;		None               void
  2546 ;; Registers used:
  2547 ;;		wreg, status,2
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2557 ;;Total ram usage:        0 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; Hardware stack levels required when called:    3
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		_Do_Init
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text12
  2568  001B22                     __ptext12:
  2569                           	opt stack 0
  2570  001B22                     _init_INTERRUPT:
  2571                           	opt stack 26
  2572                           
  2573                           ;Lab11.c: 53: INTCONbits.INT0IF = 0;
  2574                           
  2575                           ;incstack = 0
  2576  001B22  92F2               	bcf	intcon,1,c	;volatile
  2577                           
  2578                           ;Lab11.c: 54: INTCON2bits.INTEDG0 = 0;
  2579  001B24  9CF1               	bcf	intcon2,6,c	;volatile
  2580                           
  2581                           ;Lab11.c: 55: INTCONbits.INT0IE = 1;
  2582  001B26  88F2               	bsf	intcon,4,c	;volatile
  2583                           
  2584                           ;Lab11.c: 56: TMR1H = 0;
  2585  001B28  0E00               	movlw	0
  2586  001B2A  6ECF               	movwf	4047,c	;volatile
  2587                           
  2588                           ;Lab11.c: 57: TMR1L = 0;
  2589  001B2C  0E00               	movlw	0
  2590  001B2E  6ECE               	movwf	4046,c	;volatile
  2591                           
  2592                           ;Lab11.c: 58: PIR1bits.TMR1IF = 0;
  2593  001B30  909E               	bcf	3998,0,c	;volatile
  2594                           
  2595                           ;Lab11.c: 59: PIE1bits.TMR1IE = 1;
  2596  001B32  809D               	bsf	3997,0,c	;volatile
  2597                           
  2598                           ;Lab11.c: 60: INTCONbits.PEIE = 1;
  2599  001B34  8CF2               	bsf	intcon,6,c	;volatile
  2600                           
  2601                           ;Lab11.c: 61: INTCONbits.GIE = 1;
  2602  001B36  8EF2               	bsf	intcon,7,c	;volatile
  2603  001B38  0012               	return		;funcret
  2604  001B3A                     __end_of_init_INTERRUPT:
  2605                           	opt stack 0
  2606                           tblptru	equ	0xFF8
  2607                           tblptrh	equ	0xFF7
  2608                           tblptrl	equ	0xFF6
  2609                           tablat	equ	0xFF5
  2610                           prodh	equ	0xFF4
  2611                           prodl	equ	0xFF3
  2612                           intcon	equ	0xFF2
  2613                           intcon2	equ	0xFF1
  2614                           postinc0	equ	0xFEE
  2615                           wreg	equ	0xFE8
  2616                           postdec1	equ	0xFE5
  2617                           fsr1l	equ	0xFE1
  2618                           postinc2	equ	0xFDE
  2619                           postdec2	equ	0xFDD
  2620                           fsr2h	equ	0xFDA
  2621                           fsr2l	equ	0xFD9
  2622                           status	equ	0xFD8
  2623                           
  2624 ;; *************** function _I2C_Init *****************
  2625 ;; Defined at:
  2626 ;;		line 14 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab11.X/I2C_Soft.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  c               4   16[COMRAM] unsigned long 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;		None
  2631 ;; Return value:  Size  Location     Type
  2632 ;;		None               void
  2633 ;; Registers used:
  2634 ;;		wreg, cstack
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2640 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2643 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2644 ;;Total ram usage:        4 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:    4
  2647 ;; This function calls:
  2648 ;;		_i2cHighScl
  2649 ;;		_i2cHighSda
  2650 ;; This function is called by:
  2651 ;;		_Do_Init
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           	psect	text13
  2656  001BE8                     __ptext13:
  2657                           	opt stack 0
  2658  001BE8                     _I2C_Init:
  2659                           	opt stack 25
  2660                           
  2661                           ;I2C_Soft.c: 16: i2cHighScl();
  2662                           
  2663                           ;incstack = 0
  2664  001BE8  ECE8  F00D         	call	_i2cHighScl	;wreg free
  2665                           
  2666                           ;I2C_Soft.c: 17: i2cHighSda();
  2667  001BEC  EC0B  F00E         	call	_i2cHighSda	;wreg free
  2668  001BF0  0012               	return		;funcret
  2669  001BF2                     __end_of_I2C_Init:
  2670                           	opt stack 0
  2671                           tblptru	equ	0xFF8
  2672                           tblptrh	equ	0xFF7
  2673                           tblptrl	equ	0xFF6
  2674                           tablat	equ	0xFF5
  2675                           prodh	equ	0xFF4
  2676                           prodl	equ	0xFF3
  2677                           intcon	equ	0xFF2
  2678                           intcon2	equ	0xFF1
  2679                           postinc0	equ	0xFEE
  2680                           wreg	equ	0xFE8
  2681                           postdec1	equ	0xFE5
  2682                           fsr1l	equ	0xFE1
  2683                           postinc2	equ	0xFDE
  2684                           postdec2	equ	0xFDD
  2685                           fsr2h	equ	0xFDA
  2686                           fsr2l	equ	0xFD9
  2687                           status	equ	0xFD8
  2688                           
  2689 ;; *************** function _DS1621_Init *****************
  2690 ;; Defined at:
  2691 ;;		line 20 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab11.X/I2C_Support.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;		None
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;  Device          1   21[COMRAM] unsigned char 
  2696 ;; Return value:  Size  Location     Type
  2697 ;;		None               void
  2698 ;; Registers used:
  2699 ;;		wreg, status,2, status,0, cstack
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2706 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2709 ;;Total ram usage:        1 bytes
  2710 ;; Hardware stack levels used:    1
  2711 ;; Hardware stack levels required when called:    6
  2712 ;; This function calls:
  2713 ;;		_I2C_Write_Cmd_Only
  2714 ;;		_I2C_Write_Cmd_Write_Data
  2715 ;; This function is called by:
  2716 ;;		_Do_Init
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           	psect	text14
  2721  001AEA                     __ptext14:
  2722                           	opt stack 0
  2723  001AEA                     _DS1621_Init:
  2724                           	opt stack 23
  2725                           
  2726                           ;I2C_Support.c: 22: char Device = 0x48;
  2727                           
  2728                           ;incstack = 0
  2729  001AEA  0E48               	movlw	72
  2730  001AEC  6E16               	movwf	DS1621_Init@Device,c
  2731                           
  2732                           ;I2C_Support.c: 23: I2C_Write_Cmd_Write_Data (Device, 0xAC, 0x02);
  2733  001AEE  0EAC               	movlw	172
  2734  001AF0  6E13               	movwf	I2C_Write_Cmd_Write_Data@Cmd,c
  2735  001AF2  0E02               	movlw	2
  2736  001AF4  6E14               	movwf	I2C_Write_Cmd_Write_Data@Data_Out,c
  2737  001AF6  5016               	movf	DS1621_Init@Device,w,c
  2738  001AF8  EC65  F00D         	call	_I2C_Write_Cmd_Write_Data
  2739                           
  2740                           ;I2C_Support.c: 24: I2C_Write_Cmd_Only(Device, 0xEE);
  2741  001AFC  0EEE               	movlw	238
  2742  001AFE  6E13               	movwf	I2C_Write_Cmd_Only@Cmd,c
  2743  001B00  5016               	movf	DS1621_Init@Device,w,c
  2744  001B02  EC84  F00D         	call	_I2C_Write_Cmd_Only
  2745  001B06  0012               	return		;funcret
  2746  001B08                     __end_of_DS1621_Init:
  2747                           	opt stack 0
  2748                           tblptru	equ	0xFF8
  2749                           tblptrh	equ	0xFF7
  2750                           tblptrl	equ	0xFF6
  2751                           tablat	equ	0xFF5
  2752                           prodh	equ	0xFF4
  2753                           prodl	equ	0xFF3
  2754                           intcon	equ	0xFF2
  2755                           intcon2	equ	0xFF1
  2756                           postinc0	equ	0xFEE
  2757                           wreg	equ	0xFE8
  2758                           postdec1	equ	0xFE5
  2759                           fsr1l	equ	0xFE1
  2760                           postinc2	equ	0xFDE
  2761                           postdec2	equ	0xFDD
  2762                           fsr2h	equ	0xFDA
  2763                           fsr2l	equ	0xFD9
  2764                           status	equ	0xFD8
  2765                           
  2766 ;; *************** function _I2C_Write_Cmd_Write_Data *****************
  2767 ;; Defined at:
  2768 ;;		line 152 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab11.X/I2C_Soft.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  Device          1    wreg     unsigned char 
  2771 ;;  Cmd             1   18[COMRAM] unsigned char 
  2772 ;;  Data_Out        1   19[COMRAM] unsigned char 
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;  Device          1   20[COMRAM] unsigned char 
  2775 ;; Return value:  Size  Location     Type
  2776 ;;		None               void
  2777 ;; Registers used:
  2778 ;;		wreg, status,2, status,0, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2785 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2787 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2788 ;;Total ram usage:        3 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    5
  2791 ;; This function calls:
  2792 ;;		_I2C_Start
  2793 ;;		_I2C_Stop
  2794 ;;		_I2C_Write
  2795 ;; This function is called by:
  2796 ;;		_DS1621_Init
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           	psect	text15
  2801  001ACA                     __ptext15:
  2802                           	opt stack 0
  2803  001ACA                     _I2C_Write_Cmd_Write_Data:
  2804                           	opt stack 23
  2805                           
  2806                           ;incstack = 0
  2807                           ;I2C_Write_Cmd_Write_Data@Device stored from wreg
  2808  001ACA  6E15               	movwf	I2C_Write_Cmd_Write_Data@Device,c
  2809                           
  2810                           ;I2C_Soft.c: 154: I2C_Start();
  2811  001ACC  ECC6  F00D         	call	_I2C_Start	;wreg free
  2812                           
  2813                           ;I2C_Soft.c: 155: I2C_Write((Device << 1) | 0);
  2814  001AD0  5015               	movf	I2C_Write_Cmd_Write_Data@Device,w,c
  2815  001AD2  2415               	addwf	I2C_Write_Cmd_Write_Data@Device,w,c
  2816  001AD4  ECBC  F00C         	call	_I2C_Write
  2817                           
  2818                           ;I2C_Soft.c: 156: I2C_Write(Cmd);
  2819  001AD8  5013               	movf	I2C_Write_Cmd_Write_Data@Cmd,w,c
  2820  001ADA  ECBC  F00C         	call	_I2C_Write
  2821                           
  2822                           ;I2C_Soft.c: 157: I2C_Write(Data_Out);
  2823  001ADE  5014               	movf	I2C_Write_Cmd_Write_Data@Data_Out,w,c
  2824  001AE0  ECBC  F00C         	call	_I2C_Write
  2825                           
  2826                           ;I2C_Soft.c: 158: I2C_Stop();
  2827  001AE4  ECBD  F00D         	call	_I2C_Stop	;wreg free
  2828  001AE8  0012               	return		;funcret
  2829  001AEA                     __end_of_I2C_Write_Cmd_Write_Data:
  2830                           	opt stack 0
  2831                           tblptru	equ	0xFF8
  2832                           tblptrh	equ	0xFF7
  2833                           tblptrl	equ	0xFF6
  2834                           tablat	equ	0xFF5
  2835                           prodh	equ	0xFF4
  2836                           prodl	equ	0xFF3
  2837                           intcon	equ	0xFF2
  2838                           intcon2	equ	0xFF1
  2839                           postinc0	equ	0xFEE
  2840                           wreg	equ	0xFE8
  2841                           postdec1	equ	0xFE5
  2842                           fsr1l	equ	0xFE1
  2843                           postinc2	equ	0xFDE
  2844                           postdec2	equ	0xFDD
  2845                           fsr2h	equ	0xFDA
  2846                           fsr2l	equ	0xFD9
  2847                           status	equ	0xFD8
  2848                           
  2849 ;; *************** function _I2C_Write_Cmd_Only *****************
  2850 ;; Defined at:
  2851 ;;		line 144 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab11.X/I2C_Soft.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;  Device          1    wreg     unsigned char 
  2854 ;;  Cmd             1   18[COMRAM] unsigned char 
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;  Device          1   19[COMRAM] unsigned char 
  2857 ;; Return value:  Size  Location     Type
  2858 ;;		None               void
  2859 ;; Registers used:
  2860 ;;		wreg, status,2, status,0, cstack
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2866 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2867 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2869 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2870 ;;Total ram usage:        2 bytes
  2871 ;; Hardware stack levels used:    1
  2872 ;; Hardware stack levels required when called:    5
  2873 ;; This function calls:
  2874 ;;		_I2C_Start
  2875 ;;		_I2C_Stop
  2876 ;;		_I2C_Write
  2877 ;; This function is called by:
  2878 ;;		_DS1621_Init
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           	psect	text16
  2883  001B08                     __ptext16:
  2884                           	opt stack 0
  2885  001B08                     _I2C_Write_Cmd_Only:
  2886                           	opt stack 23
  2887                           
  2888                           ;incstack = 0
  2889                           ;I2C_Write_Cmd_Only@Device stored from wreg
  2890  001B08  6E14               	movwf	I2C_Write_Cmd_Only@Device,c
  2891                           
  2892                           ;I2C_Soft.c: 146: I2C_Start();
  2893  001B0A  ECC6  F00D         	call	_I2C_Start	;wreg free
  2894                           
  2895                           ;I2C_Soft.c: 147: I2C_Write((Device << 1) | 0);
  2896  001B0E  5014               	movf	I2C_Write_Cmd_Only@Device,w,c
  2897  001B10  2414               	addwf	I2C_Write_Cmd_Only@Device,w,c
  2898  001B12  ECBC  F00C         	call	_I2C_Write
  2899                           
  2900                           ;I2C_Soft.c: 148: I2C_Write(Cmd);
  2901  001B16  5013               	movf	I2C_Write_Cmd_Only@Cmd,w,c
  2902  001B18  ECBC  F00C         	call	_I2C_Write
  2903                           
  2904                           ;I2C_Soft.c: 149: I2C_Stop();
  2905  001B1C  ECBD  F00D         	call	_I2C_Stop	;wreg free
  2906  001B20  0012               	return		;funcret
  2907  001B22                     __end_of_I2C_Write_Cmd_Only:
  2908                           	opt stack 0
  2909                           tblptru	equ	0xFF8
  2910                           tblptrh	equ	0xFF7
  2911                           tblptrl	equ	0xFF6
  2912                           tablat	equ	0xFF5
  2913                           prodh	equ	0xFF4
  2914                           prodl	equ	0xFF3
  2915                           intcon	equ	0xFF2
  2916                           intcon2	equ	0xFF1
  2917                           postinc0	equ	0xFEE
  2918                           wreg	equ	0xFE8
  2919                           postdec1	equ	0xFE5
  2920                           fsr1l	equ	0xFE1
  2921                           postinc2	equ	0xFDE
  2922                           postdec2	equ	0xFDD
  2923                           fsr2h	equ	0xFDA
  2924                           fsr2l	equ	0xFD9
  2925                           status	equ	0xFD8
  2926                           
  2927 ;; *************** function _Deactivate_Buzzer *****************
  2928 ;; Defined at:
  2929 ;;		line 96 in file "Lab11.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;		None
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;		None
  2934 ;; Return value:  Size  Location     Type
  2935 ;;		None               void
  2936 ;; Registers used:
  2937 ;;		wreg, status,2
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2947 ;;Total ram usage:        0 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; Hardware stack levels required when called:    3
  2950 ;; This function calls:
  2951 ;;		Nothing
  2952 ;; This function is called by:
  2953 ;;		_main
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           	psect	text17
  2958  001C06                     __ptext17:
  2959                           	opt stack 0
  2960  001C06                     _Deactivate_Buzzer:
  2961                           	opt stack 27
  2962                           
  2963                           ;Lab11.c: 98: CCP2CON = 0x0;
  2964                           
  2965                           ;incstack = 0
  2966  001C06  0E00               	movlw	0
  2967  001C08  6EBA               	movwf	4026,c	;volatile
  2968                           
  2969                           ;Lab11.c: 99: PORTBbits.RB3 = 0;
  2970  001C0A  9681               	bcf	3969,3,c	;volatile
  2971  001C0C  0012               	return		;funcret
  2972  001C0E                     __end_of_Deactivate_Buzzer:
  2973                           	opt stack 0
  2974                           tblptru	equ	0xFF8
  2975                           tblptrh	equ	0xFF7
  2976                           tblptrl	equ	0xFF6
  2977                           tablat	equ	0xFF5
  2978                           prodh	equ	0xFF4
  2979                           prodl	equ	0xFF3
  2980                           intcon	equ	0xFF2
  2981                           intcon2	equ	0xFF1
  2982                           postinc0	equ	0xFEE
  2983                           wreg	equ	0xFE8
  2984                           postdec1	equ	0xFE5
  2985                           fsr1l	equ	0xFE1
  2986                           postinc2	equ	0xFDE
  2987                           postdec2	equ	0xFDD
  2988                           fsr2h	equ	0xFDA
  2989                           fsr2l	equ	0xFD9
  2990                           status	equ	0xFD8
  2991                           
  2992 ;; *************** function _DS3231_Setup_Time *****************
  2993 ;; Defined at:
  2994 ;;		line 64 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab11.X/I2C_Support.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;		None
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;  Address         1   19[COMRAM] unsigned char 
  2999 ;;  Device          1   18[COMRAM] unsigned char 
  3000 ;; Return value:  Size  Location     Type
  3001 ;;		None               void
  3002 ;; Registers used:
  3003 ;;		wreg, status,2, status,0, cstack
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3010 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3012 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3013 ;;Total ram usage:        2 bytes
  3014 ;; Hardware stack levels used:    1
  3015 ;; Hardware stack levels required when called:    5
  3016 ;; This function calls:
  3017 ;;		_I2C_Start
  3018 ;;		_I2C_Stop
  3019 ;;		_I2C_Write
  3020 ;; This function is called by:
  3021 ;;		_main
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025                           	psect	text18
  3026  0017BE                     __ptext18:
  3027                           	opt stack 0
  3028  0017BE                     _DS3231_Setup_Time:
  3029                           	opt stack 25
  3030                           
  3031                           ;I2C_Support.c: 66: char Device = 0x68;
  3032                           
  3033                           ;incstack = 0
  3034  0017BE  0E68               	movlw	104
  3035  0017C0  6E13               	movwf	DS3231_Setup_Time@Device,c
  3036                           
  3037                           ;I2C_Support.c: 67: char Address = 0x00;
  3038  0017C2  0E00               	movlw	0
  3039  0017C4  6E14               	movwf	DS3231_Setup_Time@Address,c
  3040                           
  3041                           ;I2C_Support.c: 68: second = 0x00;
  3042  0017C6  0E00               	movlw	0
  3043  0017C8  6E4F               	movwf	_second,c
  3044                           
  3045                           ;I2C_Support.c: 69: minute = 0x45;
  3046  0017CA  0E45               	movlw	69
  3047  0017CC  6E4D               	movwf	_minute,c
  3048                           
  3049                           ;I2C_Support.c: 70: hour = 0x12;
  3050  0017CE  0E12               	movlw	18
  3051  0017D0  6E4B               	movwf	_hour,c
  3052                           
  3053                           ;I2C_Support.c: 71: dow = 0x01;
  3054  0017D2  0E01               	movlw	1
  3055  0017D4  6E4A               	movwf	_dow,c
  3056                           
  3057                           ;I2C_Support.c: 72: day = 0x05;
  3058  0017D6  0E05               	movlw	5
  3059  0017D8  6E49               	movwf	_day,c
  3060                           
  3061                           ;I2C_Support.c: 73: month = 0x12;
  3062  0017DA  0E12               	movlw	18
  3063  0017DC  6E4E               	movwf	_month,c
  3064                           
  3065                           ;I2C_Support.c: 74: year = 0x00;
  3066  0017DE  0E00               	movlw	0
  3067  0017E0  6E59               	movwf	_year,c
  3068                           
  3069                           ;I2C_Support.c: 75: I2C_Start();
  3070  0017E2  ECC6  F00D         	call	_I2C_Start	;wreg free
  3071                           
  3072                           ;I2C_Support.c: 76: I2C_Write((Device << 1) | 0);
  3073  0017E6  5013               	movf	DS3231_Setup_Time@Device,w,c
  3074  0017E8  2413               	addwf	DS3231_Setup_Time@Device,w,c
  3075  0017EA  ECBC  F00C         	call	_I2C_Write
  3076                           
  3077                           ;I2C_Support.c: 77: I2C_Write(Address);
  3078  0017EE  5014               	movf	DS3231_Setup_Time@Address,w,c
  3079  0017F0  ECBC  F00C         	call	_I2C_Write
  3080                           
  3081                           ;I2C_Support.c: 78: I2C_Write(second);
  3082  0017F4  504F               	movf	_second,w,c
  3083  0017F6  ECBC  F00C         	call	_I2C_Write
  3084                           
  3085                           ;I2C_Support.c: 79: I2C_Write(minute);
  3086  0017FA  504D               	movf	_minute,w,c
  3087  0017FC  ECBC  F00C         	call	_I2C_Write
  3088                           
  3089                           ;I2C_Support.c: 80: I2C_Write(hour);
  3090  001800  504B               	movf	_hour,w,c
  3091  001802  ECBC  F00C         	call	_I2C_Write
  3092                           
  3093                           ;I2C_Support.c: 81: I2C_Write(dow);
  3094  001806  504A               	movf	_dow,w,c
  3095  001808  ECBC  F00C         	call	_I2C_Write
  3096                           
  3097                           ;I2C_Support.c: 82: I2C_Write(day);
  3098  00180C  5049               	movf	_day,w,c
  3099  00180E  ECBC  F00C         	call	_I2C_Write
  3100                           
  3101                           ;I2C_Support.c: 83: I2C_Write(month);
  3102  001812  504E               	movf	_month,w,c
  3103  001814  ECBC  F00C         	call	_I2C_Write
  3104                           
  3105                           ;I2C_Support.c: 84: I2C_Write(year);
  3106  001818  5059               	movf	_year,w,c
  3107  00181A  ECBC  F00C         	call	_I2C_Write
  3108                           
  3109                           ;I2C_Support.c: 85: I2C_Stop();
  3110  00181E  ECBD  F00D         	call	_I2C_Stop	;wreg free
  3111  001822  0012               	return		;funcret
  3112  001824                     __end_of_DS3231_Setup_Time:
  3113                           	opt stack 0
  3114                           tblptru	equ	0xFF8
  3115                           tblptrh	equ	0xFF7
  3116                           tblptrl	equ	0xFF6
  3117                           tablat	equ	0xFF5
  3118                           prodh	equ	0xFF4
  3119                           prodl	equ	0xFF3
  3120                           intcon	equ	0xFF2
  3121                           intcon2	equ	0xFF1
  3122                           postinc0	equ	0xFEE
  3123                           wreg	equ	0xFE8
  3124                           postdec1	equ	0xFE5
  3125                           fsr1l	equ	0xFE1
  3126                           postinc2	equ	0xFDE
  3127                           postdec2	equ	0xFDD
  3128                           fsr2h	equ	0xFDA
  3129                           fsr2l	equ	0xFD9
  3130                           status	equ	0xFD8
  3131                           
  3132 ;; *************** function _DS3231_Read_Time *****************
  3133 ;; Defined at:
  3134 ;;		line 45 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab11.X/I2C_Support.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;		None
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;  Device          1   20[COMRAM] unsigned char 
  3139 ;;  Address         1   19[COMRAM] unsigned char 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;		None               void
  3142 ;; Registers used:
  3143 ;;		wreg, status,2, status,0, cstack
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3150 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3152 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3153 ;;Total ram usage:        2 bytes
  3154 ;; Hardware stack levels used:    1
  3155 ;; Hardware stack levels required when called:    6
  3156 ;; This function calls:
  3157 ;;		_I2C_ReStart
  3158 ;;		_I2C_Read
  3159 ;;		_I2C_Start
  3160 ;;		_I2C_Stop
  3161 ;;		_I2C_Write
  3162 ;; This function is called by:
  3163 ;;		_main
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           	psect	text19
  3168  001824                     __ptext19:
  3169                           	opt stack 0
  3170  001824                     _DS3231_Read_Time:
  3171                           	opt stack 24
  3172                           
  3173                           ;I2C_Support.c: 47: char Device = 0x68;
  3174                           
  3175                           ;incstack = 0
  3176  001824  0E68               	movlw	104
  3177  001826  6E15               	movwf	DS3231_Read_Time@Device,c
  3178                           
  3179                           ;I2C_Support.c: 48: char Address = 0x00;
  3180  001828  0E00               	movlw	0
  3181  00182A  6E14               	movwf	DS3231_Read_Time@Address,c
  3182                           
  3183                           ;I2C_Support.c: 49: I2C_Start();
  3184  00182C  ECC6  F00D         	call	_I2C_Start	;wreg free
  3185                           
  3186                           ;I2C_Support.c: 50: I2C_Write((Device << 1) | 0);
  3187  001830  5015               	movf	DS3231_Read_Time@Device,w,c
  3188  001832  2415               	addwf	DS3231_Read_Time@Device,w,c
  3189  001834  ECBC  F00C         	call	_I2C_Write
  3190                           
  3191                           ;I2C_Support.c: 51: I2C_Write(Address);
  3192  001838  5014               	movf	DS3231_Read_Time@Address,w,c
  3193  00183A  ECBC  F00C         	call	_I2C_Write
  3194                           
  3195                           ;I2C_Support.c: 52: I2C_ReStart();
  3196  00183E  ECA8  F00D         	call	_I2C_ReStart	;wreg free
  3197                           
  3198                           ;I2C_Support.c: 53: I2C_Write((Device << 1) | 1);
  3199  001842  80D8               	bsf	status,0,c
  3200  001844  3415               	rlcf	DS3231_Read_Time@Device,w,c
  3201  001846  ECBC  F00C         	call	_I2C_Write
  3202                           
  3203                           ;I2C_Support.c: 54: second = I2C_Read(1);
  3204  00184A  0E01               	movlw	1
  3205  00184C  EC98  F00C         	call	_I2C_Read
  3206  001850  6E4F               	movwf	_second,c
  3207                           
  3208                           ;I2C_Support.c: 55: minute = I2C_Read(1);
  3209  001852  0E01               	movlw	1
  3210  001854  EC98  F00C         	call	_I2C_Read
  3211  001858  6E4D               	movwf	_minute,c
  3212                           
  3213                           ;I2C_Support.c: 56: hour = I2C_Read(1);
  3214  00185A  0E01               	movlw	1
  3215  00185C  EC98  F00C         	call	_I2C_Read
  3216  001860  6E4B               	movwf	_hour,c
  3217                           
  3218                           ;I2C_Support.c: 57: dow = I2C_Read(1);
  3219  001862  0E01               	movlw	1
  3220  001864  EC98  F00C         	call	_I2C_Read
  3221  001868  6E4A               	movwf	_dow,c
  3222                           
  3223                           ;I2C_Support.c: 58: day = I2C_Read(1);
  3224  00186A  0E01               	movlw	1
  3225  00186C  EC98  F00C         	call	_I2C_Read
  3226  001870  6E49               	movwf	_day,c
  3227                           
  3228                           ;I2C_Support.c: 59: month = I2C_Read(1);
  3229  001872  0E01               	movlw	1
  3230  001874  EC98  F00C         	call	_I2C_Read
  3231  001878  6E4E               	movwf	_month,c
  3232                           
  3233                           ;I2C_Support.c: 60: year = I2C_Read(0);
  3234  00187A  0E00               	movlw	0
  3235  00187C  EC98  F00C         	call	_I2C_Read
  3236  001880  6E59               	movwf	_year,c
  3237                           
  3238                           ;I2C_Support.c: 61: I2C_Stop();
  3239  001882  ECBD  F00D         	call	_I2C_Stop	;wreg free
  3240  001886  0012               	return		;funcret
  3241  001888                     __end_of_DS3231_Read_Time:
  3242                           	opt stack 0
  3243                           tblptru	equ	0xFF8
  3244                           tblptrh	equ	0xFF7
  3245                           tblptrl	equ	0xFF6
  3246                           tablat	equ	0xFF5
  3247                           prodh	equ	0xFF4
  3248                           prodl	equ	0xFF3
  3249                           intcon	equ	0xFF2
  3250                           intcon2	equ	0xFF1
  3251                           postinc0	equ	0xFEE
  3252                           wreg	equ	0xFE8
  3253                           postdec1	equ	0xFE5
  3254                           fsr1l	equ	0xFE1
  3255                           postinc2	equ	0xFDE
  3256                           postdec2	equ	0xFDD
  3257                           fsr2h	equ	0xFDA
  3258                           fsr2l	equ	0xFD9
  3259                           status	equ	0xFD8
  3260                           
  3261 ;; *************** function _DS1621_Read_Temp *****************
  3262 ;; Defined at:
  3263 ;;		line 29 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab11.X/I2C_Support.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;		None
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;  Device          1   23[COMRAM] unsigned char 
  3268 ;;  Data_Ret        1   22[COMRAM] unsigned char 
  3269 ;;  Cmd             1   21[COMRAM] unsigned char 
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  2   19[COMRAM] int 
  3272 ;; Registers used:
  3273 ;;		wreg, status,2, status,0, cstack
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3279 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;Total ram usage:        5 bytes
  3284 ;; Hardware stack levels used:    1
  3285 ;; Hardware stack levels required when called:    6
  3286 ;; This function calls:
  3287 ;;		_I2C_ReStart
  3288 ;;		_I2C_Read
  3289 ;;		_I2C_Start
  3290 ;;		_I2C_Stop
  3291 ;;		_I2C_Write
  3292 ;; This function is called by:
  3293 ;;		_main
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           	psect	text20
  3298  0019B6                     __ptext20:
  3299                           	opt stack 0
  3300  0019B6                     _DS1621_Read_Temp:
  3301                           	opt stack 24
  3302                           
  3303                           ;I2C_Support.c: 31: char Device = 0x48;
  3304                           
  3305                           ;incstack = 0
  3306  0019B6  0E48               	movlw	72
  3307  0019B8  6E18               	movwf	DS1621_Read_Temp@Device,c
  3308                           
  3309                           ;I2C_Support.c: 32: char Cmd = 0xAA;
  3310  0019BA  0EAA               	movlw	170
  3311  0019BC  6E16               	movwf	DS1621_Read_Temp@Cmd,c
  3312                           
  3313                           ;I2C_Support.c: 33: char Data_Ret;
  3314                           ;I2C_Support.c: 34: I2C_Start();
  3315  0019BE  ECC6  F00D         	call	_I2C_Start	;wreg free
  3316                           
  3317                           ;I2C_Support.c: 35: I2C_Write((Device << 1) | 0);
  3318  0019C2  5018               	movf	DS1621_Read_Temp@Device,w,c
  3319  0019C4  2418               	addwf	DS1621_Read_Temp@Device,w,c
  3320  0019C6  ECBC  F00C         	call	_I2C_Write
  3321                           
  3322                           ;I2C_Support.c: 36: I2C_Write(Cmd);
  3323  0019CA  5016               	movf	DS1621_Read_Temp@Cmd,w,c
  3324  0019CC  ECBC  F00C         	call	_I2C_Write
  3325                           
  3326                           ;I2C_Support.c: 37: I2C_ReStart();
  3327  0019D0  ECA8  F00D         	call	_I2C_ReStart	;wreg free
  3328                           
  3329                           ;I2C_Support.c: 38: I2C_Write((Device << 1) | 1);
  3330  0019D4  80D8               	bsf	status,0,c
  3331  0019D6  3418               	rlcf	DS1621_Read_Temp@Device,w,c
  3332  0019D8  ECBC  F00C         	call	_I2C_Write
  3333                           
  3334                           ;I2C_Support.c: 39: Data_Ret = I2C_Read(0);
  3335  0019DC  0E00               	movlw	0
  3336  0019DE  EC98  F00C         	call	_I2C_Read
  3337  0019E2  6E17               	movwf	DS1621_Read_Temp@Data_Ret,c
  3338                           
  3339                           ;I2C_Support.c: 40: I2C_Stop();
  3340  0019E4  ECBD  F00D         	call	_I2C_Stop	;wreg free
  3341                           
  3342                           ;I2C_Support.c: 41: return Data_Ret;
  3343  0019E8  C017  F014         	movff	DS1621_Read_Temp@Data_Ret,?_DS1621_Read_Temp
  3344  0019EC  6A15               	clrf	?_DS1621_Read_Temp+1,c
  3345  0019EE  D000               	goto	l257
  3346  0019F0                     l257:
  3347  0019F0  0012               	return		;funcret
  3348  0019F2                     __end_of_DS1621_Read_Temp:
  3349                           	opt stack 0
  3350                           tblptru	equ	0xFF8
  3351                           tblptrh	equ	0xFF7
  3352                           tblptrl	equ	0xFF6
  3353                           tablat	equ	0xFF5
  3354                           prodh	equ	0xFF4
  3355                           prodl	equ	0xFF3
  3356                           intcon	equ	0xFF2
  3357                           intcon2	equ	0xFF1
  3358                           postinc0	equ	0xFEE
  3359                           wreg	equ	0xFE8
  3360                           postdec1	equ	0xFE5
  3361                           fsr1l	equ	0xFE1
  3362                           postinc2	equ	0xFDE
  3363                           postdec2	equ	0xFDD
  3364                           fsr2h	equ	0xFDA
  3365                           fsr2l	equ	0xFD9
  3366                           status	equ	0xFD8
  3367                           
  3368 ;; *************** function _I2C_Write *****************
  3369 ;; Defined at:
  3370 ;;		line 41 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab11.X/I2C_Soft.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;  outByte         1    wreg     unsigned char 
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;  outByte         1   16[COMRAM] unsigned char 
  3375 ;;  n               1   17[COMRAM] unsigned char 
  3376 ;; Return value:  Size  Location     Type
  3377 ;;		None               void
  3378 ;; Registers used:
  3379 ;;		wreg, status,2, status,0, cstack
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;Total ram usage:        2 bytes
  3390 ;; Hardware stack levels used:    1
  3391 ;; Hardware stack levels required when called:    4
  3392 ;; This function calls:
  3393 ;;		_i2cHighScl
  3394 ;;		_i2cHighSda
  3395 ;;		_i2cLowScl
  3396 ;;		_i2cLowSda
  3397 ;; This function is called by:
  3398 ;;		_I2C_Write_Cmd_Only
  3399 ;;		_I2C_Write_Cmd_Write_Data
  3400 ;;		_DS1621_Read_Temp
  3401 ;;		_DS3231_Read_Time
  3402 ;;		_DS3231_Setup_Time
  3403 ;;		_I2C_Write_Address_Read_One_Byte
  3404 ;;		_I2C_Write_Address_Write_One_Byte
  3405 ;;		_I2C_Write_Cmd_Read_One_Byte
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           	psect	text21
  3410  001978                     __ptext21:
  3411                           	opt stack 0
  3412  001978                     _I2C_Write:
  3413                           	opt stack 23
  3414                           
  3415                           ;incstack = 0
  3416                           ;I2C_Write@outByte stored from wreg
  3417  001978  6E11               	movwf	I2C_Write@outByte,c
  3418                           
  3419                           ;I2C_Soft.c: 43: unsigned char n;
  3420                           ;I2C_Soft.c: 44: for(n=0; n<8; n++)
  3421  00197A  0E00               	movlw	0
  3422  00197C  6E12               	movwf	I2C_Write@n,c
  3423  00197E                     l2152:
  3424  00197E  0E07               	movlw	7
  3425  001980  6412               	cpfsgt	I2C_Write@n,c
  3426  001982  D001               	goto	l177
  3427  001984  D011               	goto	l2170
  3428  001986                     l177:
  3429                           
  3430                           ;I2C_Soft.c: 45: {
  3431                           ;I2C_Soft.c: 46: if(outByte&0x80) i2cHighSda();
  3432  001986  AE11               	btfss	I2C_Write@outByte,7,c
  3433  001988  D003               	goto	l2158
  3434  00198A  EC0B  F00E         	call	_i2cHighSda	;wreg free
  3435  00198E  D003               	goto	l2160
  3436  001990                     l2158:
  3437                           
  3438                           ;I2C_Soft.c: 47: else i2cLowSda();
  3439  001990  ECFE  F00D         	call	_i2cLowSda	;wreg free
  3440  001994  D000               	goto	l2160
  3441  001996                     l2160:
  3442                           
  3443                           ;I2C_Soft.c: 48: i2cHighScl();
  3444  001996  ECE8  F00D         	call	_i2cHighScl	;wreg free
  3445                           
  3446                           ;I2C_Soft.c: 49: i2cLowScl();
  3447  00199A  EC07  F00E         	call	_i2cLowScl	;wreg free
  3448                           
  3449                           ;I2C_Soft.c: 50: outByte = outByte << 1;
  3450  00199E  5011               	movf	I2C_Write@outByte,w,c
  3451  0019A0  2411               	addwf	I2C_Write@outByte,w,c
  3452  0019A2  6E11               	movwf	I2C_Write@outByte,c
  3453  0019A4  2A12               	incf	I2C_Write@n,f,c
  3454  0019A6  D7EB               	goto	l2152
  3455  0019A8                     l2170:
  3456                           
  3457                           ;I2C_Soft.c: 51: }
  3458                           ;I2C_Soft.c: 52: i2cHighSda();
  3459  0019A8  EC0B  F00E         	call	_i2cHighSda	;wreg free
  3460                           
  3461                           ;I2C_Soft.c: 53: i2cHighScl();
  3462  0019AC  ECE8  F00D         	call	_i2cHighScl	;wreg free
  3463                           
  3464                           ;I2C_Soft.c: 54: i2cLowScl();
  3465  0019B0  EC07  F00E         	call	_i2cLowScl	;wreg free
  3466  0019B4  0012               	return		;funcret
  3467  0019B6                     __end_of_I2C_Write:
  3468                           	opt stack 0
  3469                           tblptru	equ	0xFF8
  3470                           tblptrh	equ	0xFF7
  3471                           tblptrl	equ	0xFF6
  3472                           tablat	equ	0xFF5
  3473                           prodh	equ	0xFF4
  3474                           prodl	equ	0xFF3
  3475                           intcon	equ	0xFF2
  3476                           intcon2	equ	0xFF1
  3477                           postinc0	equ	0xFEE
  3478                           wreg	equ	0xFE8
  3479                           postdec1	equ	0xFE5
  3480                           fsr1l	equ	0xFE1
  3481                           postinc2	equ	0xFDE
  3482                           postdec2	equ	0xFDD
  3483                           fsr2h	equ	0xFDA
  3484                           fsr2l	equ	0xFD9
  3485                           status	equ	0xFD8
  3486                           
  3487 ;; *************** function _I2C_Stop *****************
  3488 ;; Defined at:
  3489 ;;		line 88 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab11.X/I2C_Soft.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;		None
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;		None
  3494 ;; Return value:  Size  Location     Type
  3495 ;;		None               void
  3496 ;; Registers used:
  3497 ;;		wreg, cstack
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3507 ;;Total ram usage:        0 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    4
  3510 ;; This function calls:
  3511 ;;		_i2cHighScl
  3512 ;;		_i2cHighSda
  3513 ;;		_i2cLowScl
  3514 ;;		_i2cLowSda
  3515 ;; This function is called by:
  3516 ;;		_I2C_Write_Cmd_Only
  3517 ;;		_I2C_Write_Cmd_Write_Data
  3518 ;;		_DS1621_Read_Temp
  3519 ;;		_DS3231_Read_Time
  3520 ;;		_DS3231_Setup_Time
  3521 ;;		_I2C_Write_Address_Read_One_Byte
  3522 ;;		_I2C_Write_Address_Write_One_Byte
  3523 ;;		_I2C_Write_Cmd_Read_One_Byte
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           	psect	text22
  3528  001B7A                     __ptext22:
  3529                           	opt stack 0
  3530  001B7A                     _I2C_Stop:
  3531                           	opt stack 23
  3532                           
  3533                           ;I2C_Soft.c: 90: i2cLowScl();
  3534                           
  3535                           ;incstack = 0
  3536  001B7A  EC07  F00E         	call	_i2cLowScl	;wreg free
  3537                           
  3538                           ;I2C_Soft.c: 91: i2cLowSda();
  3539  001B7E  ECFE  F00D         	call	_i2cLowSda	;wreg free
  3540                           
  3541                           ;I2C_Soft.c: 92: i2cHighScl();
  3542  001B82  ECE8  F00D         	call	_i2cHighScl	;wreg free
  3543                           
  3544                           ;I2C_Soft.c: 93: i2cHighSda();
  3545  001B86  EC0B  F00E         	call	_i2cHighSda	;wreg free
  3546  001B8A  0012               	return		;funcret
  3547  001B8C                     __end_of_I2C_Stop:
  3548                           	opt stack 0
  3549                           tblptru	equ	0xFF8
  3550                           tblptrh	equ	0xFF7
  3551                           tblptrl	equ	0xFF6
  3552                           tablat	equ	0xFF5
  3553                           prodh	equ	0xFF4
  3554                           prodl	equ	0xFF3
  3555                           intcon	equ	0xFF2
  3556                           intcon2	equ	0xFF1
  3557                           postinc0	equ	0xFEE
  3558                           wreg	equ	0xFE8
  3559                           postdec1	equ	0xFE5
  3560                           fsr1l	equ	0xFE1
  3561                           postinc2	equ	0xFDE
  3562                           postdec2	equ	0xFDD
  3563                           fsr2h	equ	0xFDA
  3564                           fsr2l	equ	0xFD9
  3565                           status	equ	0xFD8
  3566                           
  3567 ;; *************** function _I2C_Start *****************
  3568 ;; Defined at:
  3569 ;;		line 71 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab11.X/I2C_Soft.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;		None
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;		None
  3574 ;; Return value:  Size  Location     Type
  3575 ;;		None               void
  3576 ;; Registers used:
  3577 ;;		wreg, cstack
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3587 ;;Total ram usage:        0 bytes
  3588 ;; Hardware stack levels used:    1
  3589 ;; Hardware stack levels required when called:    4
  3590 ;; This function calls:
  3591 ;;		_i2cHighScl
  3592 ;;		_i2cHighSda
  3593 ;;		_i2cLowScl
  3594 ;;		_i2cLowSda
  3595 ;; This function is called by:
  3596 ;;		_I2C_Write_Cmd_Only
  3597 ;;		_I2C_Write_Cmd_Write_Data
  3598 ;;		_DS1621_Read_Temp
  3599 ;;		_DS3231_Read_Time
  3600 ;;		_DS3231_Setup_Time
  3601 ;;		_I2C_Write_Address_Read_One_Byte
  3602 ;;		_I2C_Write_Address_Write_One_Byte
  3603 ;;		_I2C_Write_Cmd_Read_One_Byte
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607                           	psect	text23
  3608  001B8C                     __ptext23:
  3609                           	opt stack 0
  3610  001B8C                     _I2C_Start:
  3611                           	opt stack 23
  3612                           
  3613                           ;I2C_Soft.c: 73: i2cHighSda();
  3614                           
  3615                           ;incstack = 0
  3616  001B8C  EC0B  F00E         	call	_i2cHighSda	;wreg free
  3617                           
  3618                           ;I2C_Soft.c: 74: i2cHighScl();
  3619  001B90  ECE8  F00D         	call	_i2cHighScl	;wreg free
  3620                           
  3621                           ;I2C_Soft.c: 75: i2cLowSda();
  3622  001B94  ECFE  F00D         	call	_i2cLowSda	;wreg free
  3623                           
  3624                           ;I2C_Soft.c: 76: i2cLowScl();
  3625  001B98  EC07  F00E         	call	_i2cLowScl	;wreg free
  3626  001B9C  0012               	return		;funcret
  3627  001B9E                     __end_of_I2C_Start:
  3628                           	opt stack 0
  3629                           tblptru	equ	0xFF8
  3630                           tblptrh	equ	0xFF7
  3631                           tblptrl	equ	0xFF6
  3632                           tablat	equ	0xFF5
  3633                           prodh	equ	0xFF4
  3634                           prodl	equ	0xFF3
  3635                           intcon	equ	0xFF2
  3636                           intcon2	equ	0xFF1
  3637                           postinc0	equ	0xFEE
  3638                           wreg	equ	0xFE8
  3639                           postdec1	equ	0xFE5
  3640                           fsr1l	equ	0xFE1
  3641                           postinc2	equ	0xFDE
  3642                           postdec2	equ	0xFDD
  3643                           fsr2h	equ	0xFDA
  3644                           fsr2l	equ	0xFD9
  3645                           status	equ	0xFD8
  3646                           
  3647 ;; *************** function _I2C_Read *****************
  3648 ;; Defined at:
  3649 ;;		line 20 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab11.X/I2C_Soft.c"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;  ack             1    wreg     unsigned char 
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;  ack             1   16[COMRAM] unsigned char 
  3654 ;;  inByte          1   18[COMRAM] unsigned char 
  3655 ;;  n               1   17[COMRAM] unsigned char 
  3656 ;; Return value:  Size  Location     Type
  3657 ;;                  1    wreg      unsigned char 
  3658 ;; Registers used:
  3659 ;;		wreg, status,2, status,0, cstack
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 0/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3666 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3668 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3669 ;;Total ram usage:        3 bytes
  3670 ;; Hardware stack levels used:    1
  3671 ;; Hardware stack levels required when called:    5
  3672 ;; This function calls:
  3673 ;;		_i2cAck
  3674 ;;		_i2cHighScl
  3675 ;;		_i2cHighSda
  3676 ;;		_i2cLowScl
  3677 ;;		_i2cNack
  3678 ;; This function is called by:
  3679 ;;		_DS1621_Read_Temp
  3680 ;;		_DS3231_Read_Time
  3681 ;;		_I2C_Write_Address_Read_One_Byte
  3682 ;;		_I2C_Write_Cmd_Read_One_Byte
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text24
  3687  001930                     __ptext24:
  3688                           	opt stack 0
  3689  001930                     _I2C_Read:
  3690                           	opt stack 24
  3691                           
  3692                           ;incstack = 0
  3693                           ;I2C_Read@ack stored from wreg
  3694  001930  6E11               	movwf	I2C_Read@ack,c
  3695                           
  3696                           ;I2C_Soft.c: 22: unsigned char inByte, n;
  3697                           ;I2C_Soft.c: 23: i2cHighSda();
  3698  001932  EC0B  F00E         	call	_i2cHighSda	;wreg free
  3699                           
  3700                           ;I2C_Soft.c: 24: for (n=0; n<8; n++)
  3701  001936  0E00               	movlw	0
  3702  001938  6E12               	movwf	I2C_Read@n,c
  3703  00193A                     l2302:
  3704  00193A  0E07               	movlw	7
  3705  00193C  6412               	cpfsgt	I2C_Read@n,c
  3706  00193E  D001               	goto	l2306
  3707  001940  D00F               	goto	l2320
  3708  001942                     l2306:
  3709                           
  3710                           ;I2C_Soft.c: 25: {
  3711                           ;I2C_Soft.c: 26: i2cHighScl();
  3712  001942  ECE8  F00D         	call	_i2cHighScl	;wreg free
  3713                           
  3714                           ;I2C_Soft.c: 28: if (PORTCbits.RC1)
  3715  001946  A282               	btfss	3970,1,c	;volatile
  3716  001948  D003               	goto	l2312
  3717                           
  3718                           ;I2C_Soft.c: 29: inByte = (inByte << 1) | 0x01;
  3719  00194A  80D8               	bsf	status,0,c
  3720  00194C  3613               	rlcf	I2C_Read@inByte,f,c
  3721  00194E  D004               	goto	l2314
  3722  001950                     l2312:
  3723                           
  3724                           ;I2C_Soft.c: 30: else
  3725                           ;I2C_Soft.c: 31: inByte = inByte << 1;
  3726  001950  5013               	movf	I2C_Read@inByte,w,c
  3727  001952  2413               	addwf	I2C_Read@inByte,w,c
  3728  001954  6E13               	movwf	I2C_Read@inByte,c
  3729  001956  D000               	goto	l2314
  3730  001958                     l2314:
  3731                           
  3732                           ;I2C_Soft.c: 32: i2cLowScl();
  3733  001958  EC07  F00E         	call	_i2cLowScl	;wreg free
  3734  00195C  2A12               	incf	I2C_Read@n,f,c
  3735  00195E  D7ED               	goto	l2302
  3736  001960                     l2320:
  3737                           
  3738                           ;I2C_Soft.c: 33: }
  3739                           ;I2C_Soft.c: 34: if (ack) i2cAck();
  3740  001960  5011               	movf	I2C_Read@ack,w,c
  3741  001962  B4D8               	btfsc	status,2,c
  3742  001964  D003               	goto	l2324
  3743  001966  ECCF  F00D         	call	_i2cAck	;wreg free
  3744  00196A  D003               	goto	l2326
  3745  00196C                     l2324:
  3746                           
  3747                           ;I2C_Soft.c: 35: else i2cNack();
  3748  00196C  ECF9  F00D         	call	_i2cNack	;wreg free
  3749  001970  D000               	goto	l2326
  3750  001972                     l2326:
  3751                           
  3752                           ;I2C_Soft.c: 38: return(inByte);
  3753  001972  5013               	movf	I2C_Read@inByte,w,c
  3754  001974  D000               	goto	l174
  3755  001976                     l174:
  3756  001976  0012               	return		;funcret
  3757  001978                     __end_of_I2C_Read:
  3758                           	opt stack 0
  3759                           tblptru	equ	0xFF8
  3760                           tblptrh	equ	0xFF7
  3761                           tblptrl	equ	0xFF6
  3762                           tablat	equ	0xFF5
  3763                           prodh	equ	0xFF4
  3764                           prodl	equ	0xFF3
  3765                           intcon	equ	0xFF2
  3766                           intcon2	equ	0xFF1
  3767                           postinc0	equ	0xFEE
  3768                           wreg	equ	0xFE8
  3769                           postdec1	equ	0xFE5
  3770                           fsr1l	equ	0xFE1
  3771                           postinc2	equ	0xFDE
  3772                           postdec2	equ	0xFDD
  3773                           fsr2h	equ	0xFDA
  3774                           fsr2l	equ	0xFD9
  3775                           status	equ	0xFD8
  3776                           
  3777 ;; *************** function _i2cNack *****************
  3778 ;; Defined at:
  3779 ;;		line 57 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab11.X/I2C_Soft.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;		None
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;		None
  3784 ;; Return value:  Size  Location     Type
  3785 ;;		None               void
  3786 ;; Registers used:
  3787 ;;		wreg, cstack
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3797 ;;Total ram usage:        0 bytes
  3798 ;; Hardware stack levels used:    1
  3799 ;; Hardware stack levels required when called:    4
  3800 ;; This function calls:
  3801 ;;		_i2cHighScl
  3802 ;;		_i2cLowScl
  3803 ;; This function is called by:
  3804 ;;		_I2C_Read
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807                           
  3808                           	psect	text25
  3809  001BF2                     __ptext25:
  3810                           	opt stack 0
  3811  001BF2                     _i2cNack:
  3812                           	opt stack 24
  3813                           
  3814                           ;I2C_Soft.c: 59: i2cHighScl();
  3815                           
  3816                           ;incstack = 0
  3817  001BF2  ECE8  F00D         	call	_i2cHighScl	;wreg free
  3818                           
  3819                           ;I2C_Soft.c: 60: i2cLowScl();
  3820  001BF6  EC07  F00E         	call	_i2cLowScl	;wreg free
  3821  001BFA  0012               	return		;funcret
  3822  001BFC                     __end_of_i2cNack:
  3823                           	opt stack 0
  3824                           tblptru	equ	0xFF8
  3825                           tblptrh	equ	0xFF7
  3826                           tblptrl	equ	0xFF6
  3827                           tablat	equ	0xFF5
  3828                           prodh	equ	0xFF4
  3829                           prodl	equ	0xFF3
  3830                           intcon	equ	0xFF2
  3831                           intcon2	equ	0xFF1
  3832                           postinc0	equ	0xFEE
  3833                           wreg	equ	0xFE8
  3834                           postdec1	equ	0xFE5
  3835                           fsr1l	equ	0xFE1
  3836                           postinc2	equ	0xFDE
  3837                           postdec2	equ	0xFDD
  3838                           fsr2h	equ	0xFDA
  3839                           fsr2l	equ	0xFD9
  3840                           status	equ	0xFD8
  3841                           
  3842 ;; *************** function _i2cAck *****************
  3843 ;; Defined at:
  3844 ;;		line 63 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab11.X/I2C_Soft.c"
  3845 ;; Parameters:    Size  Location     Type
  3846 ;;		None
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;		None
  3849 ;; Return value:  Size  Location     Type
  3850 ;;		None               void
  3851 ;; Registers used:
  3852 ;;		wreg, cstack
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3862 ;;Total ram usage:        0 bytes
  3863 ;; Hardware stack levels used:    1
  3864 ;; Hardware stack levels required when called:    4
  3865 ;; This function calls:
  3866 ;;		_i2cHighScl
  3867 ;;		_i2cHighSda
  3868 ;;		_i2cLowScl
  3869 ;;		_i2cLowSda
  3870 ;; This function is called by:
  3871 ;;		_I2C_Read
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           	psect	text26
  3876  001B9E                     __ptext26:
  3877                           	opt stack 0
  3878  001B9E                     _i2cAck:
  3879                           	opt stack 24
  3880                           
  3881                           ;I2C_Soft.c: 65: i2cLowSda();
  3882                           
  3883                           ;incstack = 0
  3884  001B9E  ECFE  F00D         	call	_i2cLowSda	;wreg free
  3885                           
  3886                           ;I2C_Soft.c: 66: i2cHighScl();
  3887  001BA2  ECE8  F00D         	call	_i2cHighScl	;wreg free
  3888                           
  3889                           ;I2C_Soft.c: 67: i2cLowScl();
  3890  001BA6  EC07  F00E         	call	_i2cLowScl	;wreg free
  3891                           
  3892                           ;I2C_Soft.c: 68: i2cHighSda();
  3893  001BAA  EC0B  F00E         	call	_i2cHighSda	;wreg free
  3894  001BAE  0012               	return		;funcret
  3895  001BB0                     __end_of_i2cAck:
  3896                           	opt stack 0
  3897                           tblptru	equ	0xFF8
  3898                           tblptrh	equ	0xFF7
  3899                           tblptrl	equ	0xFF6
  3900                           tablat	equ	0xFF5
  3901                           prodh	equ	0xFF4
  3902                           prodl	equ	0xFF3
  3903                           intcon	equ	0xFF2
  3904                           intcon2	equ	0xFF1
  3905                           postinc0	equ	0xFEE
  3906                           wreg	equ	0xFE8
  3907                           postdec1	equ	0xFE5
  3908                           fsr1l	equ	0xFE1
  3909                           postinc2	equ	0xFDE
  3910                           postdec2	equ	0xFDD
  3911                           fsr2h	equ	0xFDA
  3912                           fsr2l	equ	0xFD9
  3913                           status	equ	0xFD8
  3914                           
  3915 ;; *************** function _I2C_ReStart *****************
  3916 ;; Defined at:
  3917 ;;		line 79 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab11.X/I2C_Soft.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;		None
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;		None
  3922 ;; Return value:  Size  Location     Type
  3923 ;;		None               void
  3924 ;; Registers used:
  3925 ;;		wreg, cstack
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3935 ;;Total ram usage:        0 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; Hardware stack levels required when called:    4
  3938 ;; This function calls:
  3939 ;;		_i2cHighScl
  3940 ;;		_i2cHighSda
  3941 ;;		_i2cLowScl
  3942 ;;		_i2cLowSda
  3943 ;; This function is called by:
  3944 ;;		_DS1621_Read_Temp
  3945 ;;		_DS3231_Read_Time
  3946 ;;		_I2C_Write_Address_Read_One_Byte
  3947 ;;		_I2C_Write_Cmd_Read_One_Byte
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           	psect	text27
  3952  001B50                     __ptext27:
  3953                           	opt stack 0
  3954  001B50                     _I2C_ReStart:
  3955                           	opt stack 25
  3956                           
  3957                           ;I2C_Soft.c: 81: i2cLowScl();
  3958                           
  3959                           ;incstack = 0
  3960  001B50  EC07  F00E         	call	_i2cLowScl	;wreg free
  3961                           
  3962                           ;I2C_Soft.c: 82: i2cHighSda();
  3963  001B54  EC0B  F00E         	call	_i2cHighSda	;wreg free
  3964                           
  3965                           ;I2C_Soft.c: 83: i2cHighScl();
  3966  001B58  ECE8  F00D         	call	_i2cHighScl	;wreg free
  3967                           
  3968                           ;I2C_Soft.c: 84: i2cLowSda();
  3969  001B5C  ECFE  F00D         	call	_i2cLowSda	;wreg free
  3970                           
  3971                           ;I2C_Soft.c: 85: i2cLowScl();
  3972  001B60  EC07  F00E         	call	_i2cLowScl	;wreg free
  3973  001B64  0012               	return		;funcret
  3974  001B66                     __end_of_I2C_ReStart:
  3975                           	opt stack 0
  3976                           tblptru	equ	0xFF8
  3977                           tblptrh	equ	0xFF7
  3978                           tblptrl	equ	0xFF6
  3979                           tablat	equ	0xFF5
  3980                           prodh	equ	0xFF4
  3981                           prodl	equ	0xFF3
  3982                           intcon	equ	0xFF2
  3983                           intcon2	equ	0xFF1
  3984                           postinc0	equ	0xFEE
  3985                           wreg	equ	0xFE8
  3986                           postdec1	equ	0xFE5
  3987                           fsr1l	equ	0xFE1
  3988                           postinc2	equ	0xFDE
  3989                           postdec2	equ	0xFDD
  3990                           fsr2h	equ	0xFDA
  3991                           fsr2l	equ	0xFD9
  3992                           status	equ	0xFD8
  3993                           
  3994 ;; *************** function _i2cLowSda *****************
  3995 ;; Defined at:
  3996 ;;		line 102 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab11.X/I2C_Soft.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;		None
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;		None
  4001 ;; Return value:  Size  Location     Type
  4002 ;;		None               void
  4003 ;; Registers used:
  4004 ;;		None
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4014 ;;Total ram usage:        0 bytes
  4015 ;; Hardware stack levels used:    1
  4016 ;; Hardware stack levels required when called:    3
  4017 ;; This function calls:
  4018 ;;		Nothing
  4019 ;; This function is called by:
  4020 ;;		_I2C_Write
  4021 ;;		_i2cAck
  4022 ;;		_I2C_Start
  4023 ;;		_I2C_ReStart
  4024 ;;		_I2C_Stop
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           	psect	text28
  4029  001BFC                     __ptext28:
  4030                           	opt stack 0
  4031  001BFC                     _i2cLowSda:
  4032                           	opt stack 23
  4033                           
  4034                           ;I2C_Soft.c: 104: PORTCbits.RC1 = 0;
  4035                           
  4036                           ;incstack = 0
  4037  001BFC  9282               	bcf	3970,1,c	;volatile
  4038                           
  4039                           ;I2C_Soft.c: 105: TRISCbits.RC4 = 0;
  4040  001BFE  9894               	bcf	3988,4,c	;volatile
  4041                           
  4042                           ;I2C_Soft.c: 106: _delay((unsigned long)((2)*(8000000/4000000.0)));
  4043  001C00  D000               	nop2		;2 cycle nop
  4044  001C02  D000               	nop2		;2 cycle nop
  4045  001C04  0012               	return		;funcret
  4046  001C06                     __end_of_i2cLowSda:
  4047                           	opt stack 0
  4048                           tblptru	equ	0xFF8
  4049                           tblptrh	equ	0xFF7
  4050                           tblptrl	equ	0xFF6
  4051                           tablat	equ	0xFF5
  4052                           prodh	equ	0xFF4
  4053                           prodl	equ	0xFF3
  4054                           intcon	equ	0xFF2
  4055                           intcon2	equ	0xFF1
  4056                           postinc0	equ	0xFEE
  4057                           wreg	equ	0xFE8
  4058                           postdec1	equ	0xFE5
  4059                           fsr1l	equ	0xFE1
  4060                           postinc2	equ	0xFDE
  4061                           postdec2	equ	0xFDD
  4062                           fsr2h	equ	0xFDA
  4063                           fsr2l	equ	0xFD9
  4064                           status	equ	0xFD8
  4065                           
  4066 ;; *************** function _i2cLowScl *****************
  4067 ;; Defined at:
  4068 ;;		line 115 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab11.X/I2C_Soft.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;		None
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;		None
  4073 ;; Return value:  Size  Location     Type
  4074 ;;		None               void
  4075 ;; Registers used:
  4076 ;;		None
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;Total ram usage:        0 bytes
  4087 ;; Hardware stack levels used:    1
  4088 ;; Hardware stack levels required when called:    3
  4089 ;; This function calls:
  4090 ;;		Nothing
  4091 ;; This function is called by:
  4092 ;;		_I2C_Read
  4093 ;;		_I2C_Write
  4094 ;;		_i2cNack
  4095 ;;		_i2cAck
  4096 ;;		_I2C_Start
  4097 ;;		_I2C_ReStart
  4098 ;;		_I2C_Stop
  4099 ;; This function uses a non-reentrant model
  4100 ;;
  4101                           
  4102                           	psect	text29
  4103  001C0E                     __ptext29:
  4104                           	opt stack 0
  4105  001C0E                     _i2cLowScl:
  4106                           	opt stack 23
  4107                           
  4108                           ;I2C_Soft.c: 117: PORTCbits.RC0 = 0;
  4109                           
  4110                           ;incstack = 0
  4111  001C0E  9082               	bcf	3970,0,c	;volatile
  4112                           
  4113                           ;I2C_Soft.c: 118: TRISCbits.RC3 = 0;
  4114  001C10  9694               	bcf	3988,3,c	;volatile
  4115                           
  4116                           ;I2C_Soft.c: 119: _delay((unsigned long)((1)*(8000000/4000000.0)));
  4117  001C12  D000               	nop2		;2 cycle nop
  4118  001C14  0012               	return		;funcret
  4119  001C16                     __end_of_i2cLowScl:
  4120                           	opt stack 0
  4121                           tblptru	equ	0xFF8
  4122                           tblptrh	equ	0xFF7
  4123                           tblptrl	equ	0xFF6
  4124                           tablat	equ	0xFF5
  4125                           prodh	equ	0xFF4
  4126                           prodl	equ	0xFF3
  4127                           intcon	equ	0xFF2
  4128                           intcon2	equ	0xFF1
  4129                           postinc0	equ	0xFEE
  4130                           wreg	equ	0xFE8
  4131                           postdec1	equ	0xFE5
  4132                           fsr1l	equ	0xFE1
  4133                           postinc2	equ	0xFDE
  4134                           postdec2	equ	0xFDD
  4135                           fsr2h	equ	0xFDA
  4136                           fsr2l	equ	0xFD9
  4137                           status	equ	0xFD8
  4138                           
  4139 ;; *************** function _i2cHighSda *****************
  4140 ;; Defined at:
  4141 ;;		line 96 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab11.X/I2C_Soft.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;		None
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;		None
  4146 ;; Return value:  Size  Location     Type
  4147 ;;		None               void
  4148 ;; Registers used:
  4149 ;;		None
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4159 ;;Total ram usage:        0 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; Hardware stack levels required when called:    3
  4162 ;; This function calls:
  4163 ;;		Nothing
  4164 ;; This function is called by:
  4165 ;;		_I2C_Init
  4166 ;;		_I2C_Read
  4167 ;;		_I2C_Write
  4168 ;;		_i2cAck
  4169 ;;		_I2C_Start
  4170 ;;		_I2C_ReStart
  4171 ;;		_I2C_Stop
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           	psect	text30
  4176  001C16                     __ptext30:
  4177                           	opt stack 0
  4178  001C16                     _i2cHighSda:
  4179                           	opt stack 25
  4180                           
  4181                           ;I2C_Soft.c: 98: TRISCbits.RC4 = 1;
  4182                           
  4183                           ;incstack = 0
  4184  001C16  8894               	bsf	3988,4,c	;volatile
  4185                           
  4186                           ;I2C_Soft.c: 99: _delay((unsigned long)((2)*(8000000/4000000.0)));
  4187  001C18  D000               	nop2		;2 cycle nop
  4188  001C1A  D000               	nop2		;2 cycle nop
  4189  001C1C  0012               	return		;funcret
  4190  001C1E                     __end_of_i2cHighSda:
  4191                           	opt stack 0
  4192                           tblptru	equ	0xFF8
  4193                           tblptrh	equ	0xFF7
  4194                           tblptrl	equ	0xFF6
  4195                           tablat	equ	0xFF5
  4196                           prodh	equ	0xFF4
  4197                           prodl	equ	0xFF3
  4198                           intcon	equ	0xFF2
  4199                           intcon2	equ	0xFF1
  4200                           postinc0	equ	0xFEE
  4201                           wreg	equ	0xFE8
  4202                           postdec1	equ	0xFE5
  4203                           fsr1l	equ	0xFE1
  4204                           postinc2	equ	0xFDE
  4205                           postdec2	equ	0xFDD
  4206                           fsr2h	equ	0xFDA
  4207                           fsr2l	equ	0xFD9
  4208                           status	equ	0xFD8
  4209                           
  4210 ;; *************** function _i2cHighScl *****************
  4211 ;; Defined at:
  4212 ;;		line 109 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab11.X/I2C_Soft.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;		None
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;		None
  4217 ;; Return value:  Size  Location     Type
  4218 ;;		None               void
  4219 ;; Registers used:
  4220 ;;		wreg
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4230 ;;Total ram usage:        0 bytes
  4231 ;; Hardware stack levels used:    1
  4232 ;; Hardware stack levels required when called:    3
  4233 ;; This function calls:
  4234 ;;		Nothing
  4235 ;; This function is called by:
  4236 ;;		_I2C_Init
  4237 ;;		_I2C_Read
  4238 ;;		_I2C_Write
  4239 ;;		_i2cNack
  4240 ;;		_i2cAck
  4241 ;;		_I2C_Start
  4242 ;;		_I2C_ReStart
  4243 ;;		_I2C_Stop
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247                           	psect	text31
  4248  001BD0                     __ptext31:
  4249                           	opt stack 0
  4250  001BD0                     _i2cHighScl:
  4251                           	opt stack 25
  4252                           
  4253                           ;I2C_Soft.c: 111: TRISCbits.RC3 = 1;
  4254                           
  4255                           ;incstack = 0
  4256  001BD0  8694               	bsf	3988,3,c	;volatile
  4257                           
  4258                           ;I2C_Soft.c: 112: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4259  001BD2  0E06               	movlw	6
  4260  001BD4                     u1937:
  4261  001BD4  2EE8               	decfsz	wreg,f,c
  4262  001BD6  D7FE               	goto	u1937
  4263  001BD8  D000               	nop2		;nop
  4264  001BDA  0012               	return		;funcret
  4265  001BDC                     __end_of_i2cHighScl:
  4266                           	opt stack 0
  4267                           tblptru	equ	0xFF8
  4268                           tblptrh	equ	0xFF7
  4269                           tblptrl	equ	0xFF6
  4270                           tablat	equ	0xFF5
  4271                           prodh	equ	0xFF4
  4272                           prodl	equ	0xFF3
  4273                           intcon	equ	0xFF2
  4274                           intcon2	equ	0xFF1
  4275                           postinc0	equ	0xFEE
  4276                           wreg	equ	0xFE8
  4277                           postdec1	equ	0xFE5
  4278                           fsr1l	equ	0xFE1
  4279                           postinc2	equ	0xFDE
  4280                           postdec2	equ	0xFDD
  4281                           fsr2h	equ	0xFDA
  4282                           fsr2l	equ	0xFD9
  4283                           status	equ	0xFD8
  4284                           
  4285 ;; *************** function _Activate_Buzzer *****************
  4286 ;; Defined at:
  4287 ;;		line 88 in file "Lab11.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;		None
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;		None
  4292 ;; Return value:  Size  Location     Type
  4293 ;;		None               void
  4294 ;; Registers used:
  4295 ;;		wreg, status,2
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4305 ;;Total ram usage:        0 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:    3
  4308 ;; This function calls:
  4309 ;;		Nothing
  4310 ;; This function is called by:
  4311 ;;		_main
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           	psect	text32
  4316  001BB0                     __ptext32:
  4317                           	opt stack 0
  4318  001BB0                     _Activate_Buzzer:
  4319                           	opt stack 27
  4320                           
  4321                           ;Lab11.c: 90: PR2 = 0b11111001;
  4322                           
  4323                           ;incstack = 0
  4324  001BB0  0EF9               	movlw	249
  4325  001BB2  6ECB               	movwf	4043,c	;volatile
  4326                           
  4327                           ;Lab11.c: 91: T2CON = 0b00000101 ;
  4328  001BB4  0E05               	movlw	5
  4329  001BB6  6ECA               	movwf	4042,c	;volatile
  4330                           
  4331                           ;Lab11.c: 92: CCPR2L = 0b01001010 ;
  4332  001BB8  0E4A               	movlw	74
  4333  001BBA  6EBB               	movwf	4027,c	;volatile
  4334                           
  4335                           ;Lab11.c: 93: CCP2CON = 0b00111100 ;
  4336  001BBC  0E3C               	movlw	60
  4337  001BBE  6EBA               	movwf	4026,c	;volatile
  4338  001BC0  0012               	return		;funcret
  4339  001BC2                     __end_of_Activate_Buzzer:
  4340                           	opt stack 0
  4341                           tblptru	equ	0xFF8
  4342                           tblptrh	equ	0xFF7
  4343                           tblptrl	equ	0xFF6
  4344                           tablat	equ	0xFF5
  4345                           prodh	equ	0xFF4
  4346                           prodl	equ	0xFF3
  4347                           intcon	equ	0xFF2
  4348                           intcon2	equ	0xFF1
  4349                           postinc0	equ	0xFEE
  4350                           wreg	equ	0xFE8
  4351                           postdec1	equ	0xFE5
  4352                           fsr1l	equ	0xFE1
  4353                           postinc2	equ	0xFDE
  4354                           postdec2	equ	0xFDD
  4355                           fsr2h	equ	0xFDA
  4356                           fsr2l	equ	0xFD9
  4357                           status	equ	0xFD8
  4358                           
  4359 ;; *************** function _chkisr *****************
  4360 ;; Defined at:
  4361 ;;		line 11 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab11.X/Interrupt.c"
  4362 ;; Parameters:    Size  Location     Type
  4363 ;;		None
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;		None
  4366 ;; Return value:  Size  Location     Type
  4367 ;;		None               void
  4368 ;; Registers used:
  4369 ;;		wreg, status,2, status,0, cstack
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4377 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4378 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4379 ;;Total ram usage:       14 bytes
  4380 ;; Hardware stack levels used:    1
  4381 ;; Hardware stack levels required when called:    2
  4382 ;; This function calls:
  4383 ;;		_INT0_isr
  4384 ;;		_TIMER1_isr
  4385 ;; This function is called by:
  4386 ;;		Interrupt level 2
  4387 ;; This function uses a non-reentrant model
  4388 ;;
  4389                           
  4390                           	psect	intcode
  4391  000008                     __pintcode:
  4392                           	opt stack 0
  4393  000008                     _chkisr:
  4394                           	opt stack 23
  4395                           
  4396                           ;incstack = 0
  4397  000008  CFFA F003          	movff	pclath,??_chkisr
  4398  00000C  CFFB F004          	movff	pclatu,??_chkisr+1
  4399  000010  CFE9 F005          	movff	fsr0l,??_chkisr+2
  4400  000014  ED69  F00B         	call	int_func,f	;refresh shadow registers
  4401                           pclatu	equ	0xFFB
  4402                           pclath	equ	0xFFA
  4403                           tblptru	equ	0xFF8
  4404                           tblptrh	equ	0xFF7
  4405                           tblptrl	equ	0xFF6
  4406                           tablat	equ	0xFF5
  4407                           prodh	equ	0xFF4
  4408                           prodl	equ	0xFF3
  4409                           intcon	equ	0xFF2
  4410                           intcon2	equ	0xFF1
  4411                           postinc0	equ	0xFEE
  4412                           fsr0l	equ	0xFE9
  4413                           wreg	equ	0xFE8
  4414                           postdec1	equ	0xFE5
  4415                           fsr1l	equ	0xFE1
  4416                           postinc2	equ	0xFDE
  4417                           postdec2	equ	0xFDD
  4418                           fsr2h	equ	0xFDA
  4419                           fsr2l	equ	0xFD9
  4420                           status	equ	0xFD8
  4421                           
  4422                           	psect	intcode_body
  4423  0016D2                     __pintcode_body:
  4424                           	opt stack 23
  4425  0016D2                     int_func:
  4426                           	opt stack 23
  4427  0016D2  0006               	pop		; remove dummy address from shadow register refresh
  4428  0016D4  CFEA F006          	movff	fsr0h,??_chkisr+3
  4429  0016D8  CFE1 F007          	movff	fsr1l,??_chkisr+4
  4430  0016DC  CFE2 F008          	movff	fsr1h,??_chkisr+5
  4431  0016E0  CFD9 F009          	movff	fsr2l,??_chkisr+6
  4432  0016E4  CFDA F00A          	movff	fsr2h,??_chkisr+7
  4433  0016E8  CFF3 F00B          	movff	prodl,??_chkisr+8
  4434  0016EC  CFF4 F00C          	movff	prodh,??_chkisr+9
  4435  0016F0  CFF6 F00D          	movff	tblptrl,??_chkisr+10
  4436  0016F4  CFF7 F00E          	movff	tblptrh,??_chkisr+11
  4437  0016F8  CFF8 F00F          	movff	tblptru,??_chkisr+12
  4438  0016FC  CFF5 F010          	movff	tablat,??_chkisr+13
  4439                           
  4440                           ;Interrupt.c: 13: if (PIR1bits.TMR1IF == 1) TIMER1_isr();
  4441  001700  A09E               	btfss	3998,0,c	;volatile
  4442  001702  D003               	goto	i2l1736
  4443  001704  ECEE  F00D         	call	_TIMER1_isr	;wreg free
  4444  001708  D000               	goto	i2l1736
  4445  00170A                     i2l1736:
  4446                           
  4447                           ;Interrupt.c: 14: if (INTCONbits.INT0IF == 1) INT0_isr();
  4448  00170A  A2F2               	btfss	intcon,1,c	;volatile
  4449  00170C  D003               	goto	i2l298
  4450  00170E  ECE4  F009         	call	_INT0_isr	;wreg free
  4451  001712  D000               	goto	i2l298
  4452  001714                     i2l298:
  4453  001714  C010  FFF5         	movff	??_chkisr+13,tablat
  4454  001718  C00F  FFF8         	movff	??_chkisr+12,tblptru
  4455  00171C  C00E  FFF7         	movff	??_chkisr+11,tblptrh
  4456  001720  C00D  FFF6         	movff	??_chkisr+10,tblptrl
  4457  001724  C00C  FFF4         	movff	??_chkisr+9,prodh
  4458  001728  C00B  FFF3         	movff	??_chkisr+8,prodl
  4459  00172C  C00A  FFDA         	movff	??_chkisr+7,fsr2h
  4460  001730  C009  FFD9         	movff	??_chkisr+6,fsr2l
  4461  001734  C008  FFE2         	movff	??_chkisr+5,fsr1h
  4462  001738  C007  FFE1         	movff	??_chkisr+4,fsr1l
  4463  00173C  C006  FFEA         	movff	??_chkisr+3,fsr0h
  4464  001740  C005  FFE9         	movff	??_chkisr+2,fsr0l
  4465  001744  C004  FFFB         	movff	??_chkisr+1,pclatu
  4466  001748  C003  FFFA         	movff	??_chkisr,pclath
  4467  00174C  0011               	retfie		f
  4468  00174E                     __end_of_chkisr:
  4469                           	opt stack 0
  4470                           pclatu	equ	0xFFB
  4471                           pclath	equ	0xFFA
  4472                           tblptru	equ	0xFF8
  4473                           tblptrh	equ	0xFF7
  4474                           tblptrl	equ	0xFF6
  4475                           tablat	equ	0xFF5
  4476                           prodh	equ	0xFF4
  4477                           prodl	equ	0xFF3
  4478                           intcon	equ	0xFF2
  4479                           intcon2	equ	0xFF1
  4480                           postinc0	equ	0xFEE
  4481                           fsr0h	equ	0xFEA
  4482                           fsr0l	equ	0xFE9
  4483                           wreg	equ	0xFE8
  4484                           postdec1	equ	0xFE5
  4485                           fsr1h	equ	0xFE2
  4486                           fsr1l	equ	0xFE1
  4487                           postinc2	equ	0xFDE
  4488                           postdec2	equ	0xFDD
  4489                           fsr2h	equ	0xFDA
  4490                           fsr2l	equ	0xFD9
  4491                           status	equ	0xFD8
  4492                           
  4493 ;; *************** function _TIMER1_isr *****************
  4494 ;; Defined at:
  4495 ;;		line 17 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab11.X/Interrupt.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;		None
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;		None
  4500 ;; Return value:  Size  Location     Type
  4501 ;;		None               void
  4502 ;; Registers used:
  4503 ;;		wreg, status,2
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4513 ;;Total ram usage:        0 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; This function calls:
  4516 ;;		Nothing
  4517 ;; This function is called by:
  4518 ;;		_chkisr
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           	psect	text34
  4523  001BDC                     __ptext34:
  4524                           	opt stack 0
  4525  001BDC                     _TIMER1_isr:
  4526                           	opt stack 24
  4527                           
  4528                           ;Interrupt.c: 19: Nec_state = 0;
  4529                           
  4530                           ;incstack = 0
  4531  001BDC  0E00               	movlw	0
  4532  001BDE  6E42               	movwf	_Nec_state,c
  4533                           
  4534                           ;Interrupt.c: 20: INTCON2bits.INTEDG0 = 0;
  4535  001BE0  9CF1               	bcf	intcon2,6,c	;volatile
  4536                           
  4537                           ;Interrupt.c: 21: T1CONbits.TMR1ON = 0;
  4538  001BE2  90CD               	bcf	4045,0,c	;volatile
  4539                           
  4540                           ;Interrupt.c: 22: PIR1bits.TMR1IF = 0;
  4541  001BE4  909E               	bcf	3998,0,c	;volatile
  4542  001BE6  0012               	return		;funcret
  4543  001BE8                     __end_of_TIMER1_isr:
  4544                           	opt stack 0
  4545                           pclatu	equ	0xFFB
  4546                           pclath	equ	0xFFA
  4547                           tblptru	equ	0xFF8
  4548                           tblptrh	equ	0xFF7
  4549                           tblptrl	equ	0xFF6
  4550                           tablat	equ	0xFF5
  4551                           prodh	equ	0xFF4
  4552                           prodl	equ	0xFF3
  4553                           intcon	equ	0xFF2
  4554                           intcon2	equ	0xFF1
  4555                           postinc0	equ	0xFEE
  4556                           fsr0h	equ	0xFEA
  4557                           fsr0l	equ	0xFE9
  4558                           wreg	equ	0xFE8
  4559                           postdec1	equ	0xFE5
  4560                           fsr1h	equ	0xFE2
  4561                           fsr1l	equ	0xFE1
  4562                           postinc2	equ	0xFDE
  4563                           postdec2	equ	0xFDD
  4564                           fsr2h	equ	0xFDA
  4565                           fsr2l	equ	0xFD9
  4566                           status	equ	0xFD8
  4567                           
  4568 ;; *************** function _INT0_isr *****************
  4569 ;; Defined at:
  4570 ;;		line 31 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab11.X/Interrupt.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;		None
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;		None
  4575 ;; Return value:  Size  Location     Type
  4576 ;;		None               void
  4577 ;; Registers used:
  4578 ;;		wreg, status,2, status,0, cstack
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4586 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4587 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4588 ;;Total ram usage:        2 bytes
  4589 ;; Hardware stack levels used:    1
  4590 ;; Hardware stack levels required when called:    1
  4591 ;; This function calls:
  4592 ;;		_force_nec_state0
  4593 ;; This function is called by:
  4594 ;;		_chkisr
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           	psect	text35
  4599  0013C8                     __ptext35:
  4600                           	opt stack 0
  4601  0013C8                     _INT0_isr:
  4602                           	opt stack 23
  4603                           
  4604                           ;Interrupt.c: 33: INTCONbits.INT0IF = 0;
  4605                           
  4606                           ;incstack = 0
  4607  0013C8  92F2               	bcf	intcon,1,c	;volatile
  4608                           
  4609                           ;Interrupt.c: 34: if (Nec_state != 0)
  4610  0013CA  5042               	movf	_Nec_state,w,c
  4611  0013CC  B4D8               	btfsc	status,2,c
  4612  0013CE  D09A               	goto	i2l1602
  4613                           
  4614                           ;Interrupt.c: 35: {
  4615                           ;Interrupt.c: 36: Time_Elapsed = (TMR1H << 8) | TMR1L;
  4616  0013D0  50CE               	movf	4046,w,c	;volatile
  4617  0013D2  CFCF F001          	movff	4047,??_INT0_isr	;volatile
  4618  0013D6  6A02               	clrf	(??_INT0_isr+1)& (0+255),c
  4619  0013D8  C001  F002         	movff	??_INT0_isr,??_INT0_isr+1
  4620  0013DC  6A01               	clrf	??_INT0_isr,c
  4621  0013DE  1001               	iorwf	??_INT0_isr,w,c
  4622  0013E0  6E3D               	movwf	_Time_Elapsed,c
  4623  0013E2  5002               	movf	??_INT0_isr+1,w,c
  4624  0013E4  6E3E               	movwf	_Time_Elapsed+1,c
  4625                           
  4626                           ;Interrupt.c: 37: TMR1H = 0;
  4627  0013E6  0E00               	movlw	0
  4628  0013E8  6ECF               	movwf	4047,c	;volatile
  4629                           
  4630                           ;Interrupt.c: 38: TMR1L = 0;
  4631  0013EA  0E00               	movlw	0
  4632  0013EC  6ECE               	movwf	4046,c	;volatile
  4633                           
  4634                           ;Interrupt.c: 39: }
  4635                           ;Interrupt.c: 41: switch(Nec_state)
  4636  0013EE  D08A               	goto	i2l1602
  4637  0013F0                     i2l1536:
  4638                           
  4639                           ;Interrupt.c: 44: {
  4640                           ;Interrupt.c: 46: TMR1H = 0;
  4641  0013F0  0E00               	movlw	0
  4642  0013F2  6ECF               	movwf	4047,c	;volatile
  4643                           
  4644                           ;Interrupt.c: 47: TMR1L = 0;
  4645  0013F4  0E00               	movlw	0
  4646  0013F6  6ECE               	movwf	4046,c	;volatile
  4647                           
  4648                           ;Interrupt.c: 48: PIR1bits.TMR1IF = 0;
  4649  0013F8  909E               	bcf	3998,0,c	;volatile
  4650                           
  4651                           ;Interrupt.c: 49: T1CON= 0x90;
  4652  0013FA  0E90               	movlw	144
  4653  0013FC  6ECD               	movwf	4045,c	;volatile
  4654                           
  4655                           ;Interrupt.c: 50: T1CONbits.TMR1ON = 1;
  4656  0013FE  80CD               	bsf	4045,0,c	;volatile
  4657                           
  4658                           ;Interrupt.c: 51: bit_count = 0;
  4659  001400  0E00               	movlw	0
  4660  001402  6E48               	movwf	_bit_count,c
  4661                           
  4662                           ;Interrupt.c: 52: Nec_code = 0;
  4663  001404  0E00               	movlw	0
  4664  001406  6E39               	movwf	_Nec_code,c
  4665  001408  0E00               	movlw	0
  4666  00140A  6E3A               	movwf	_Nec_code+1,c
  4667  00140C  0E00               	movlw	0
  4668  00140E  6E3B               	movwf	_Nec_code+2,c
  4669  001410  0E00               	movlw	0
  4670  001412  6E3C               	movwf	_Nec_code+3,c
  4671                           
  4672                           ;Interrupt.c: 53: Nec_state = 1;
  4673  001414  0E01               	movlw	1
  4674  001416  6E42               	movwf	_Nec_state,c
  4675  001418  D073               	goto	i2l1596
  4676                           
  4677                           ;Interrupt.c: 55: return;
  4678                           
  4679                           ;Interrupt.c: 54: INTCON2bits.INTEDG0 = 1;
  4680  00141A  D085               	goto	i2l310
  4681  00141C                     i2l1546:
  4682                           
  4683                           ;Interrupt.c: 59: {
  4684                           ;Interrupt.c: 60: if ((Time_Elapsed < 9500) && (Time_Elapsed > 8500)){
  4685  00141C  0E1C               	movlw	28
  4686  00141E  5C3D               	subwf	_Time_Elapsed,w,c
  4687  001420  0E25               	movlw	37
  4688  001422  583E               	subwfb	_Time_Elapsed+1,w,c
  4689  001424  B0D8               	btfsc	status,0,c
  4690  001426  D009               	goto	i2l1552
  4691  001428  0E35               	movlw	53
  4692  00142A  5C3D               	subwf	_Time_Elapsed,w,c
  4693  00142C  0E21               	movlw	33
  4694  00142E  583E               	subwfb	_Time_Elapsed+1,w,c
  4695  001430  A0D8               	btfss	status,0,c
  4696  001432  D003               	goto	i2l1552
  4697                           
  4698                           ;Interrupt.c: 61: Nec_state = 2;
  4699  001434  0E02               	movlw	2
  4700  001436  6E42               	movwf	_Nec_state,c
  4701                           
  4702                           ;Interrupt.c: 62: }
  4703  001438  D02A               	goto	i2l1578
  4704  00143A                     i2l1552:
  4705                           
  4706                           ;Interrupt.c: 63: else {
  4707                           ;Interrupt.c: 64: force_nec_state0();
  4708  00143A  EC0F  F00E         	call	_force_nec_state0	;wreg free
  4709  00143E  D027               	goto	i2l1578
  4710  001440  D026               	goto	i2l1578
  4711                           
  4712                           ;Interrupt.c: 67: return;
  4713                           
  4714                           ;Interrupt.c: 65: }
  4715                           ;Interrupt.c: 66: INTCON2bits.INTEDG0 = 0;
  4716  001442  D071               	goto	i2l310
  4717  001444                     i2l1558:
  4718                           
  4719                           ;Interrupt.c: 71: {
  4720                           ;Interrupt.c: 72: if ((Time_Elapsed < 5000) && (Time_Elapsed > 4000)){
  4721  001444  0E88               	movlw	136
  4722  001446  5C3D               	subwf	_Time_Elapsed,w,c
  4723  001448  0E13               	movlw	19
  4724  00144A  583E               	subwfb	_Time_Elapsed+1,w,c
  4725  00144C  B0D8               	btfsc	status,0,c
  4726  00144E  D009               	goto	i2l1564
  4727  001450  0EA1               	movlw	161
  4728  001452  5C3D               	subwf	_Time_Elapsed,w,c
  4729  001454  0E0F               	movlw	15
  4730  001456  583E               	subwfb	_Time_Elapsed+1,w,c
  4731  001458  A0D8               	btfss	status,0,c
  4732  00145A  D003               	goto	i2l1564
  4733  00145C                     
  4734                           ;Interrupt.c: 73: Nec_state = 3;
  4735  00145C  0E03               	movlw	3
  4736  00145E  6E42               	movwf	_Nec_state,c
  4737                           
  4738                           ;Interrupt.c: 74: }
  4739  001460  D04F               	goto	i2l1596
  4740  001462                     i2l1564:
  4741                           
  4742                           ;Interrupt.c: 75: else {
  4743                           ;Interrupt.c: 76: force_nec_state0();
  4744  001462  EC0F  F00E         	call	_force_nec_state0	;wreg free
  4745  001466  D04C               	goto	i2l1596
  4746  001468  D04B               	goto	i2l1596
  4747                           
  4748                           ;Interrupt.c: 79: return;
  4749                           
  4750                           ;Interrupt.c: 77: }
  4751                           ;Interrupt.c: 78: INTCON2bits.INTEDG0 = 1;
  4752  00146A  D05D               	goto	i2l310
  4753  00146C                     i2l1570:
  4754                           
  4755                           ;Interrupt.c: 83: {
  4756                           ;Interrupt.c: 84: if ((Time_Elapsed < 700) && (Time_Elapsed > 400)){
  4757  00146C  0EBC               	movlw	188
  4758  00146E  5C3D               	subwf	_Time_Elapsed,w,c
  4759  001470  0E02               	movlw	2
  4760  001472  583E               	subwfb	_Time_Elapsed+1,w,c
  4761  001474  B0D8               	btfsc	status,0,c
  4762  001476  D008               	goto	i2l1576
  4763  001478  0E91               	movlw	145
  4764  00147A  5C3D               	subwf	_Time_Elapsed,w,c
  4765  00147C  0E01               	movlw	1
  4766  00147E  583E               	subwfb	_Time_Elapsed+1,w,c
  4767  001480  A0D8               	btfss	status,0,c
  4768  001482  D002               	goto	i2l1576
  4769                           
  4770                           ;Interrupt.c: 85: Nec_state = 4;
  4771  001484  0E04               	movlw	4
  4772  001486  D7D7               	goto	L1
  4773  001488                     i2l1576:
  4774                           
  4775                           ;Interrupt.c: 87: else {
  4776                           ;Interrupt.c: 88: force_nec_state0();
  4777  001488  EC0F  F00E         	call	_force_nec_state0	;wreg free
  4778  00148C  D000               	goto	i2l1578
  4779  00148E                     i2l1578:
  4780                           
  4781                           ;Interrupt.c: 89: }
  4782                           ;Interrupt.c: 90: INTCON2bits.INTEDG0 = 0;
  4783  00148E  9CF1               	bcf	intcon2,6,c	;volatile
  4784                           
  4785                           ;Interrupt.c: 91: return;
  4786  001490  D04A               	goto	i2l310
  4787  001492                     i2l1582:
  4788                           
  4789                           ;Interrupt.c: 95: {
  4790                           ;Interrupt.c: 96: if ((Time_Elapsed < 1800) && (Time_Elapsed > 400)){
  4791  001492  0E08               	movlw	8
  4792  001494  5C3D               	subwf	_Time_Elapsed,w,c
  4793  001496  0E07               	movlw	7
  4794  001498  583E               	subwfb	_Time_Elapsed+1,w,c
  4795  00149A  B0D8               	btfsc	status,0,c
  4796  00149C  D02E               	goto	i2l1594
  4797  00149E  0E91               	movlw	145
  4798  0014A0  5C3D               	subwf	_Time_Elapsed,w,c
  4799  0014A2  0E01               	movlw	1
  4800  0014A4  583E               	subwfb	_Time_Elapsed+1,w,c
  4801  0014A6  A0D8               	btfss	status,0,c
  4802  0014A8  D028               	goto	i2l1594
  4803                           
  4804                           ;Interrupt.c: 97: Nec_code = Nec_code << 1;
  4805  0014AA  90D8               	bcf	status,0,c
  4806  0014AC  3439               	rlcf	_Nec_code,w,c
  4807  0014AE  6E39               	movwf	_Nec_code,c
  4808  0014B0  343A               	rlcf	_Nec_code+1,w,c
  4809  0014B2  6E3A               	movwf	_Nec_code+1,c
  4810  0014B4  343B               	rlcf	_Nec_code+2,w,c
  4811  0014B6  6E3B               	movwf	_Nec_code+2,c
  4812  0014B8  343C               	rlcf	_Nec_code+3,w,c
  4813  0014BA  6E3C               	movwf	_Nec_code+3,c
  4814                           
  4815                           ;Interrupt.c: 99: if (Time_Elapsed > 1000){
  4816  0014BC  0EE9               	movlw	233
  4817  0014BE  5C3D               	subwf	_Time_Elapsed,w,c
  4818  0014C0  0E03               	movlw	3
  4819  0014C2  583E               	subwfb	_Time_Elapsed+1,w,c
  4820  0014C4  A0D8               	btfss	status,0,c
  4821  0014C6  D00C               	goto	i2l322
  4822                           
  4823                           ;Interrupt.c: 100: Nec_code = Nec_code + 1;
  4824  0014C8  0E01               	movlw	1
  4825  0014CA  2439               	addwf	_Nec_code,w,c
  4826  0014CC  6E39               	movwf	_Nec_code,c
  4827  0014CE  0E00               	movlw	0
  4828  0014D0  203A               	addwfc	_Nec_code+1,w,c
  4829  0014D2  6E3A               	movwf	_Nec_code+1,c
  4830  0014D4  0E00               	movlw	0
  4831  0014D6  203B               	addwfc	_Nec_code+2,w,c
  4832  0014D8  6E3B               	movwf	_Nec_code+2,c
  4833  0014DA  0E00               	movlw	0
  4834  0014DC  203C               	addwfc	_Nec_code+3,w,c
  4835  0014DE  6E3C               	movwf	_Nec_code+3,c
  4836  0014E0                     i2l322:
  4837                           
  4838                           ;Interrupt.c: 101: }
  4839                           ;Interrupt.c: 103: bit_count = bit_count + 1;
  4840  0014E0  2848               	incf	_bit_count,w,c
  4841  0014E2  6E48               	movwf	_bit_count,c
  4842                           
  4843                           ;Interrupt.c: 105: if (bit_count > 31){
  4844  0014E4  0E1F               	movlw	31
  4845  0014E6  6448               	cpfsgt	_bit_count,c
  4846  0014E8  D7B9               	goto	L2
  4847                           
  4848                           ;Interrupt.c: 106: nec_ok = 1;
  4849  0014EA  0E00               	movlw	0
  4850  0014EC  6E40               	movwf	_nec_ok+1,c
  4851  0014EE  0E01               	movlw	1
  4852  0014F0  6E3F               	movwf	_nec_ok,c
  4853                           
  4854                           ;Interrupt.c: 107: INTCONbits.INT0IE = 0;
  4855  0014F2  98F2               	bcf	intcon,4,c	;volatile
  4856                           
  4857                           ;Interrupt.c: 108: Nec_state = 0;
  4858  0014F4  0E00               	movlw	0
  4859  0014F6  6E42               	movwf	_Nec_state,c
  4860  0014F8  D7B1               	goto	L2
  4861  0014FA                     i2l1594:
  4862                           
  4863                           ;Interrupt.c: 112: else {
  4864                           ;Interrupt.c: 113: force_nec_state0();
  4865  0014FA  EC0F  F00E         	call	_force_nec_state0	;wreg free
  4866  0014FE  D000               	goto	i2l1596
  4867  001500                     i2l1596:
  4868                           
  4869                           ;Interrupt.c: 114: }
  4870                           ;Interrupt.c: 115: INTCON2bits.INTEDG0 = 1;
  4871  001500  8CF1               	bsf	intcon2,6,c	;volatile
  4872                           
  4873                           ;Interrupt.c: 117: }
  4874                           ;Interrupt.c: 118: }
  4875                           
  4876                           ;Interrupt.c: 116: return;
  4877  001502  D011               	goto	i2l310
  4878  001504                     i2l1602:
  4879  001504  5042               	movf	_Nec_state,w,c
  4880                           
  4881                           ; Switch size 1, requested type "space"
  4882                           ; Number of cases is 5, Range of values is 0 to 4
  4883                           ; switch strategies available:
  4884                           ; Name         Instructions Cycles
  4885                           ; simple_byte           16     9 (average)
  4886                           ;	Chosen strategy is simple_byte
  4887  001506  0A00               	xorlw	0	; case 0
  4888  001508  B4D8               	btfsc	status,2,c
  4889  00150A  D772               	goto	i2l1536
  4890  00150C  0A01               	xorlw	1	; case 1
  4891  00150E  B4D8               	btfsc	status,2,c
  4892  001510  D785               	goto	i2l1546
  4893  001512  0A03               	xorlw	3	; case 2
  4894  001514  B4D8               	btfsc	status,2,c
  4895  001516  D796               	goto	i2l1558
  4896  001518  0A01               	xorlw	1	; case 3
  4897  00151A  B4D8               	btfsc	status,2,c
  4898  00151C  D7A7               	goto	i2l1570
  4899  00151E  0A07               	xorlw	7	; case 4
  4900  001520  B4D8               	btfsc	status,2,c
  4901  001522  D7B7               	goto	i2l1582
  4902  001524  D000               	goto	i2l310
  4903  001526                     i2l310:
  4904  001526  0012               	return		;funcret
  4905  001528                     __end_of_INT0_isr:
  4906                           	opt stack 0
  4907                           pclatu	equ	0xFFB
  4908                           pclath	equ	0xFFA
  4909                           tblptru	equ	0xFF8
  4910                           tblptrh	equ	0xFF7
  4911                           tblptrl	equ	0xFF6
  4912                           tablat	equ	0xFF5
  4913                           prodh	equ	0xFF4
  4914                           prodl	equ	0xFF3
  4915                           intcon	equ	0xFF2
  4916                           intcon2	equ	0xFF1
  4917                           postinc0	equ	0xFEE
  4918                           fsr0h	equ	0xFEA
  4919                           fsr0l	equ	0xFE9
  4920                           wreg	equ	0xFE8
  4921                           postdec1	equ	0xFE5
  4922                           fsr1h	equ	0xFE2
  4923                           fsr1l	equ	0xFE1
  4924                           postinc2	equ	0xFDE
  4925                           postdec2	equ	0xFDD
  4926                           fsr2h	equ	0xFDA
  4927                           fsr2l	equ	0xFD9
  4928                           status	equ	0xFD8
  4929                           
  4930 ;; *************** function _force_nec_state0 *****************
  4931 ;; Defined at:
  4932 ;;		line 25 in file "C:/Users/Thalia/MPLABXProjects/ECE/ECE3301L/Lab11.X/Interrupt.c"
  4933 ;; Parameters:    Size  Location     Type
  4934 ;;		None
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;		None
  4937 ;; Return value:  Size  Location     Type
  4938 ;;		None               void
  4939 ;; Registers used:
  4940 ;;		wreg, status,2
  4941 ;; Tracked objects:
  4942 ;;		On entry : 0/0
  4943 ;;		On exit  : 0/0
  4944 ;;		Unchanged: 0/0
  4945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4950 ;;Total ram usage:        0 bytes
  4951 ;; Hardware stack levels used:    1
  4952 ;; This function calls:
  4953 ;;		Nothing
  4954 ;; This function is called by:
  4955 ;;		_INT0_isr
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959                           	psect	text36
  4960  001C1E                     __ptext36:
  4961                           	opt stack 0
  4962  001C1E                     _force_nec_state0:
  4963                           	opt stack 23
  4964                           
  4965                           ;Interrupt.c: 27: Nec_state=0;
  4966                           
  4967                           ;incstack = 0
  4968  001C1E  0E00               	movlw	0
  4969  001C20  6E42               	movwf	_Nec_state,c
  4970                           
  4971                           ;Interrupt.c: 28: T1CONbits.TMR1ON = 0;
  4972  001C22  90CD               	bcf	4045,0,c	;volatile
  4973  001C24  0012               	return		;funcret
  4974  001C26                     __end_of_force_nec_state0:
  4975                           	opt stack 0
  4976                           pclatu	equ	0xFFB
  4977                           pclath	equ	0xFFA
  4978                           tblptru	equ	0xFF8
  4979                           tblptrh	equ	0xFF7
  4980                           tblptrl	equ	0xFF6
  4981                           tablat	equ	0xFF5
  4982                           prodh	equ	0xFF4
  4983                           prodl	equ	0xFF3
  4984                           intcon	equ	0xFF2
  4985                           intcon2	equ	0xFF1
  4986                           postinc0	equ	0xFEE
  4987                           fsr0h	equ	0xFEA
  4988                           fsr0l	equ	0xFE9
  4989                           wreg	equ	0xFE8
  4990                           postdec1	equ	0xFE5
  4991                           fsr1h	equ	0xFE2
  4992                           fsr1l	equ	0xFE1
  4993                           postinc2	equ	0xFDE
  4994                           postdec2	equ	0xFDD
  4995                           fsr2h	equ	0xFDA
  4996                           fsr2l	equ	0xFD9
  4997                           status	equ	0xFD8
  4998                           pclatu	equ	0xFFB
  4999                           pclath	equ	0xFFA
  5000                           tblptru	equ	0xFF8
  5001                           tblptrh	equ	0xFF7
  5002                           tblptrl	equ	0xFF6
  5003                           tablat	equ	0xFF5
  5004                           prodh	equ	0xFF4
  5005                           prodl	equ	0xFF3
  5006                           intcon	equ	0xFF2
  5007                           intcon2	equ	0xFF1
  5008                           postinc0	equ	0xFEE
  5009                           fsr0h	equ	0xFEA
  5010                           fsr0l	equ	0xFE9
  5011                           wreg	equ	0xFE8
  5012                           postdec1	equ	0xFE5
  5013                           fsr1h	equ	0xFE2
  5014                           fsr1l	equ	0xFE1
  5015                           postinc2	equ	0xFDE
  5016                           postdec2	equ	0xFDD
  5017                           fsr2h	equ	0xFDA
  5018                           fsr2l	equ	0xFD9
  5019                           status	equ	0xFD8
  5020                           
  5021                           	psect	rparam
  5022  0000                     pclatu	equ	0xFFB
  5023                           pclath	equ	0xFFA
  5024                           tblptru	equ	0xFF8
  5025                           tblptrh	equ	0xFF7
  5026                           tblptrl	equ	0xFF6
  5027                           tablat	equ	0xFF5
  5028                           prodh	equ	0xFF4
  5029                           prodl	equ	0xFF3
  5030                           intcon	equ	0xFF2
  5031                           intcon2	equ	0xFF1
  5032                           postinc0	equ	0xFEE
  5033                           fsr0h	equ	0xFEA
  5034                           fsr0l	equ	0xFE9
  5035                           wreg	equ	0xFE8
  5036                           postdec1	equ	0xFE5
  5037                           fsr1h	equ	0xFE2
  5038                           fsr1l	equ	0xFE1
  5039                           postinc2	equ	0xFDE
  5040                           postdec2	equ	0xFDD
  5041                           fsr2h	equ	0xFDA
  5042                           fsr2l	equ	0xFD9
  5043                           status	equ	0xFD8


Data Sizes:
    Strings     90
    Constant    18
    Data        22
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     56     111
    BANK0           128      6       6
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_2(CODE[43]), STR_1(CODE[30]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv
    _Do_Init->_DS1621_Init
    _init_UART->_OpenUSART
    _DS1621_Init->_I2C_Write_Cmd_Write_Data
    _I2C_Write_Cmd_Write_Data->_I2C_Write
    _I2C_Write_Cmd_Only->_I2C_Write
    _DS3231_Setup_Time->_I2C_Write
    _DS3231_Read_Time->_I2C_Read
    _DS1621_Read_Temp->_I2C_Read

Critical Paths under _chkisr in COMRAM

    _chkisr->_INT0_isr

Critical Paths under _main in BANK0

    None.

Critical Paths under _chkisr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _chkisr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _chkisr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _chkisr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _chkisr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _chkisr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _chkisr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _chkisr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _chkisr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _chkisr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _chkisr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _chkisr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _chkisr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _chkisr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _chkisr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _chkisr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    5643
                                              0 BANK0      6     6      0
                    _Activate_Buzzer
                   _DS1621_Read_Temp
                   _DS3231_Read_Time
                  _DS3231_Setup_Time
                  _Deactivate_Buzzer
                            _Do_Init
                       _Wait_One_Sec
                            ___awdiv
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              37    23     14    2927
                                             28 COMRAM    28    14     14
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             16 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     362
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     362
                                             23 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     501
                                             16 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     575
                                             16 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Wait_One_Sec                                         2     2      0      46
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Do_Init                                              0     0      0    1037
                        _DS1621_Init
                           _I2C_Init
                     _init_INTERRUPT
                          _init_UART
 ---------------------------------------------------------------------------------
 (2) _init_UART                                            0     0      0     375
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     1      2     375
                                             16 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _init_INTERRUPT                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             4     0      4      65
                                             16 COMRAM     4     0      4
                         _i2cHighScl
                         _i2cHighSda
 ---------------------------------------------------------------------------------
 (2) _DS1621_Init                                          1     1      0     597
                                             21 COMRAM     1     1      0
                 _I2C_Write_Cmd_Only
           _I2C_Write_Cmd_Write_Data
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Cmd_Write_Data                             3     1      2     314
                                             18 COMRAM     3     1      2
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Cmd_Only                                   2     1      1     218
                                             18 COMRAM     2     1      1
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Deactivate_Buzzer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DS3231_Setup_Time                                    2     2      0     137
                                             18 COMRAM     2     2      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _DS3231_Read_Time                                     2     2      0     295
                                             19 COMRAM     2     2      0
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _DS1621_Read_Temp                                     5     3      2     360
                                             19 COMRAM     5     3      2
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Write                                            2     2      0      91
                                             16 COMRAM     2     2      0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0     136
                                             16 COMRAM     3     3      0
                             _i2cAck
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                            _i2cNack
 ---------------------------------------------------------------------------------
 (3) _i2cNack                                              0     0      0       0
                         _i2cHighScl
                          _i2cLowScl
 ---------------------------------------------------------------------------------
 (3) _i2cAck                                               0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (2) _I2C_ReStart                                          0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (5) _i2cLowSda                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2cLowScl                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2cHighSda                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2cHighScl                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Activate_Buzzer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _chkisr                                              14    14      0       0
                                              2 COMRAM    14    14      0
                           _INT0_isr
                         _TIMER1_isr
 ---------------------------------------------------------------------------------
 (7) _TIMER1_isr                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT0_isr                                             2     2      0       0
                                              0 COMRAM     2     2      0
                   _force_nec_state0
 ---------------------------------------------------------------------------------
 (8) _force_nec_state0                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Activate_Buzzer
   _DS1621_Read_Temp
     _I2C_ReStart
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Read
       _i2cAck
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cNack
         _i2cHighScl
         _i2cLowScl
     _I2C_Start
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Stop
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Write
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
   _DS3231_Read_Time
     _I2C_ReStart
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Read
       _i2cAck
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cNack
         _i2cHighScl
         _i2cLowScl
     _I2C_Start
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Stop
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Write
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
   _DS3231_Setup_Time
     _I2C_Start
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Stop
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Write
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
   _Deactivate_Buzzer
   _Do_Init
     _DS1621_Init
       _I2C_Write_Cmd_Only
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
       _I2C_Write_Cmd_Write_Data
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
     _I2C_Init
       _i2cHighScl
       _i2cHighSda
     _init_INTERRUPT
     _init_UART
       _OpenUSART
   _Wait_One_Sec
   ___awdiv
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
     _putch

 _chkisr (ROOT)
   _INT0_isr
     _force_nec_state0
   _TIMER1_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      6       6       5        4.7%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     38      6F       1       87.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      75      34        0.0%
DATA                 0      0      75       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Apr 23 23:09:20 2021

                                _i 004C                 __size_of_I2C_Start 0012  
               __size_of_I2C_Write 003E                       ___awdiv@sign 0016  
              ___wmul@multiplicand 0013                                l109 1BC6  
                              l126 1AA6                                l135 1530  
                              l174 1976                                l422 1794  
                              l430 1A82                                l423 1796  
                              l424 17A0                                l177 1986  
                              l257 19F0                                l425 17A2  
                              l418 177A                                l427 17BC  
                              l357 116E                                l623 16D0  
                              l394 13C6                                l861 1AC8  
                              l953 18DA                                l963 1926  
                              _PR2 000FCB                                _day 0049  
                _Deactivate_Buzzer 1C06               __size_of_I2C_ReStart 0016  
                              _dow 004A                                wreg 000FE8  
               ?_Deactivate_Buzzer 0001                       __CFG_LVP$OFF 000000  
                     __CFG_WDT$OFF 000000                               l2200 176A  
                             l2204 1772                               l2302 193A  
                             l2312 1950                               l2320 1960  
                             l2160 1996                               l2152 197E  
                             l2216 178C                               l2208 177E  
                             l2314 1958                               l2306 1942  
                             l2170 19A8                               l2324 196C  
                             l2420 1AA0                               l2326 1972  
                             l2158 1990                               l2510 1096  
                             l2416 1A8C                               l2600 12A6  
                             l2520 10D4                               l2504 1078  
                             l2362 189E                               l2346 1AC0  
                             l2610 12DE                               l2514 10A0  
                             l2196 1760                               l2364 18A8  
                             l2604 12BE                               l2532 1140  
                             l2516 10B6                               l2508 1088  
                             l2374 18CE                               l2366 18B0  
                             l2390 191A                               l2382 18F2  
                             l2606 12C6                               l2614 12F2  
                             l2550 11BA                               l2630 13AA  
                             l2710 15FA                               l2640 1652  
                             l2384 18FC                               l2616 12FA  
                             l2624 1384                               l2544 119C  
                             l2528 1138                               l2386 1904  
                             l2618 133E                               l2626 1396  
                             l2562 11F0                               l2554 11C6  
                             l2714 1618                               l2706 15E0  
                             l2652 167A                               l2628 139E  
                             l2572 1224                               l2564 11F4  
                             l2580 123C                               l2548 11B6  
                             l2654 1684                               l2646 1664  
                             l2590 127C                               l2558 11EA  
                             l2718 1622                               l2672 16C6  
                             l2664 16AA                               l2656 168C  
                             l2592 1286                               l2568 1200  
                             l2586 1258                               l2578 122A  
                             l2690 15B6                               l2668 16B6  
                             l2598 129E     I2C_Write_Cmd_Write_Data@Device 0015  
                             STR_1 103E                               STR_2 1013  
                             STR_3 105C                               u1937 1BD4  
                             _RBPU 007F8F                               _TRMT 007D61  
              ??_Deactivate_Buzzer 0011                               _main 1528  
                             _hour 004B                   __end_of_I2C_Init 1BF2  
                 __end_of_I2C_Read 1978                               _year 0059  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             fsr1l 000FE1                               fsr2l 000FD9  
                 __end_of_I2C_Stop 1B8C                               pclat 000FFA  
                             prodh 000FF4                               prodl 000FF3  
                             start 0018        __size_of_I2C_Write_Cmd_Only 001A  
                  __end_of_Do_Init 1A5C                    __end_of_i2cNack 1BFC  
                     ___param_bank 000010                        ?_TIMER1_isr 0001  
                 __end_of_INT0_isr 1528          __end_of_Deactivate_Buzzer 1C0E  
                            ?_main 0001                    __end_of___awdiv 16D2  
                  ___awdiv@divisor 0013                              _T1CON 000FCD  
                            _T2CON 000FCA                    __end_of___lwdiv 18E4  
                  __end_of___lwmod 1930                              i2l310 1526  
                            i2l322 14E0                              i2l298 1714  
                  ___awdiv@counter 0015                              _RCSTA 000FAB  
                            _TMR1H 000FCF                              _TMR1L 000FCE  
                            _SPBRG 000FAF                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TXREG 000FAD                              _TXSTA 000FAC  
                       _i2cHighSda 1C16                         _i2cHighScl 1BD0  
                  __end_of_dpowers 100B                    __end_of_isdigit 1ACA  
                            _month 004E                              _putch 1BC2  
                            main@i 0084                  __end_of_I2C_Start 1B9E  
                __end_of_I2C_Write 19B6                     __CFG_BOREN$OFF 000000  
                            tablat 000FF5                              status 000FD8  
                ?_DS1621_Read_Temp 0014                 ??_DS1621_Read_Temp 0016  
                  __initialization 19F2                       __end_of_main 163C  
                           ??_main 0080                      __activetblptr 000002  
                ?_DS3231_Read_Time 0001                 ??_DS3231_Read_Time 0014  
          __size_of_init_INTERRUPT 0018                          I2C_Init@c 0011  
                        I2C_Read@n 0012                             _ADCON1 000FC1  
              DS1621_Read_Temp@Cmd 0016                             _CCPR2L 000FBB  
                 ___awdiv@dividend 0011                 __size_of_i2cLowSda 000A  
               __size_of_i2cLowScl 0008                             ?_putch 0001  
                           i2l1602 1504                             i2l1552 143A  
                           i2l1536 13F0                             i2l1570 146C  
                           i2l1546 141C                             i2l1564 1462  
                           i2l1582 1492                             i2l1558 1444  
                           i2l1576 1488                             i2l1736 170A  
                           i2l1594 14FA                             i2l1578 148E  
                           i2l1596 1500                          ??_Do_Init 0017  
                           _OSCCON 000FD3                __size_of_TIMER1_isr 000C  
                           _SPBRGH 000FB0                          ??_i2cNack 0011  
                 _force_nec_state0 1C1E                             _i2cAck 1B9E  
                       _TempSecond 0043                 __size_of_OpenUSART 0070  
         __size_of_Activate_Buzzer 0012                             ___wmul 1A5C  
                        ??___awdiv 0015                             _chkisr 0008  
                        ??___lwdiv 0015                             _array1 005A  
                        ??___lwmod 001C                             _nec_ok 003F  
                           clear_0 19F8                   ___awdiv@quotient 0017  
                           _minute 004D                             _second 004F  
          DS3231_Setup_Time@Device 0013         __size_of_Deactivate_Buzzer 0008  
                           _printf 106E                       __pdataCOMRAM 005A  
                        ??_isdigit 0011                          ?_I2C_Init 0011  
                        ?_I2C_Read 0001                          ?_I2C_Stop 0001  
                     __mediumconst 0000                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
 __end_of_I2C_Write_Cmd_Write_Data 1AEA                        ?_i2cHighSda 0001  
                      ?_i2cHighScl 0001                             putch@c 0011  
                       __accesstop 0080            __end_of__initialization 1A1E  
                        ?_INT0_isr 0001                 _setup_alarm_minute 0051  
               _setup_alarm_second 0052                      ___rparam_used 000001  
                   __pcstackCOMRAM 0001                  __end_of_i2cLowSda 1C06  
                __end_of_i2cLowScl 1C16                      __end_of_putch 1BD0  
                       ??_I2C_Init 0015                         ??_I2C_Read 0011  
                     _alarm_minute 0046                       _alarm_second 0047  
                       ??_I2C_Stop 0011                  __end_of_OpenUSART 17BE  
                          ??_putch 0011                   _setup_alarm_hour 0050  
                    ??_DS1621_Init 0016                 __size_of_init_UART 0014  
                       _alarm_date 0044                         ??_INT0_isr 0001  
                       _alarm_hour 0045                      ?_Wait_One_Sec 0001  
                          ?_i2cAck 0001                 __CFG_CCP2MX$PORTBE 000000  
                   I2C_Read@inByte 0013                            ?___wmul 0011  
              __size_of_i2cHighSda 0008                __size_of_i2cHighScl 000C  
                          ?_chkisr 0001   I2C_Write_Cmd_Write_Data@Data_Out 0014  
                          _CCP2CON 000FBA                       ??_TIMER1_isr 0001  
                    ??_I2C_ReStart 0011                         I2C_Write@n 0012  
                          ?_printf 001D                  ??_Activate_Buzzer 0011  
                   _init_INTERRUPT 1B22                  _DS3231_Setup_Time 17BE  
                          _Do_Init 1A28           _I2C_Write_Cmd_Write_Data 1ACA  
       __end_of_I2C_Write_Cmd_Only 1B22             DS1621_Read_Temp@Device 0018  
                   ??_Wait_One_Sec 0011                            _i2cNack 1BF2  
               __end_of_TIMER1_isr 1BE8                 ?_DS3231_Setup_Time 0001  
                        _I2C_Start 1B8C                          _I2C_Write 1978  
                  __size_of_i2cAck 0012                            __Hparam 0000  
                          __Lparam 0000                __end_of_DS1621_Init 1B08  
              ??_DS3231_Setup_Time 0013                            ___awdiv 163C  
                  __size_of___wmul 0028                            ___lwdiv 1888  
                          ___lwmod 18E4                    __size_of_chkisr 1746  
                     __psmallconst 1000                            __pcinit 19F2  
                          __ramtop 1000                            __ptext0 1528  
                          __ptext1 106E                            __ptext2 1BC2  
                          __ptext3 1AA8                            __ptext4 1A5C  
                          __ptext5 18E4          __size_of_DS1621_Read_Temp 003C  
                          __ptext6 1888                            __ptext7 163C  
                          __ptext8 1A84                            __ptext9 1A28  
                  __size_of_printf 035A                  __end_of_init_UART 1B7A  
           __end_of_init_INTERRUPT 1B3A                  __end_of_hexpowers 1013  
         __end_of_force_nec_state0 1C26                          _T1CONbits 000FCD  
         DS3231_Setup_Time@Address 0014                            _dpowers 1001  
                          _isdigit 1AA8                __end_of_I2C_ReStart 1B66  
        __end_of_DS3231_Setup_Time 1824                     __pintcode_body 16D2  
                    Wait_One_Sec@k 0011               end_of_initialization 1A1E  
                    __Lmediumconst 0000          __size_of_DS3231_Read_Time 0064  
                          int_func 16D2            DS3231_Read_Time@Address 0014  
                       ?_I2C_Start 0001                         ?_I2C_Write 0001  
                       _tempSecond 006F                          _RCSTAbits 000FAB  
                          printf@c 0038                            printf@f 001D  
                          postdec1 000FE5                            postdec2 000FDD  
                          postinc0 000FEE                            postinc2 000FDE  
      I2C_Write_Cmd_Write_Data@Cmd 0013                          _PORTBbits 000F81  
                        _PORTCbits 000F82                   I2C_Write@outByte 0011  
                  ?_init_INTERRUPT 0001                         _setup_hour 0054  
                       _setup_year 0058                          _TRISCbits 000F94  
                     ??_i2cHighSda 0011                       ??_i2cHighScl 0011  
                __size_of_I2C_Init 000A                  __size_of_I2C_Read 0048  
                __size_of_I2C_Stop 0012                        _DS1621_Init 1AEA  
                      printf@width 0036                          _TXSTAbits 000FAC  
                __size_of_INT0_isr 0160                     __end_of_i2cAck 1BB0  
         DS1621_Read_Temp@Data_Ret 0017                 __end_of_i2cHighSda 1C1E  
               __end_of_i2cHighScl 1BDC                     __end_of___wmul 1A84  
                    __pidataCOMRAM 1B3A                     __end_of_chkisr 174E  
                      _I2C_ReStart 1B50                          _Nec_code1 0041  
                        _i2cLowSda 1BFC                          _i2cLowScl 1C0E  
             __end_of_Wait_One_Sec 1AA8                     __end_of_printf 13C8  
                        _Nec_state 0042                start_initialization 19F2  
       __size_of_DS3231_Setup_Time 0066                          _OpenUSART 174E  
                 __CFG_OSC$INTIO67 000000                        ??_I2C_Start 0011  
                      ??_I2C_Write 0011                           ??_i2cAck 0011  
                  _Activate_Buzzer 1BB0                           ??___wmul 0015  
                         ??_chkisr 0003                           ??_printf 002B  
                 _DS1621_Read_Temp 19B6                         ?_i2cLowSda 0001  
                       ?_i2cLowScl 0001                        __pbssCOMRAM 0039  
       ??_I2C_Write_Cmd_Write_Data 0015                      __pcstackBANK0 0080  
                     _isdigit$1366 0012                           ?_Do_Init 0001  
                       ?_OpenUSART 0011                   _DS3231_Read_Time 1824  
                         ?_i2cNack 0001                   ___lwdiv@dividend 0011  
                      I2C_Read@ack 0011                          _bit_count 0048  
                        __pintcode 0008                           ?___awdiv 0011  
                         ?___lwdiv 0011                 _I2C_Write_Cmd_Only 1B08  
                         ?___lwmod 0018                        __smallconst 1000  
              ?_I2C_Write_Cmd_Only 0013                  ?_force_nec_state0 0001  
                         ?_isdigit 0001                           _I2C_Init 1BE8  
                         _I2C_Read 1930                           _I2C_Stop 1B7A  
                        _init_UART 1B66                 ??_force_nec_state0 0001  
         I2C_Write_Cmd_Only@Device 0014                          _hexpowers 100B  
                 ___lwdiv@quotient 0016                     __size_of_putch 000E  
          __end_of_Activate_Buzzer 1BC2                     ___wmul@product 0015  
                         _INT0_isr 13C8               ??_I2C_Write_Cmd_Only 0014  
                         _PIE1bits 000F9D             DS3231_Read_Time@Device 0015  
                         _PIR1bits 000F9E                   ??_init_INTERRUPT 0011  
            __size_of_Wait_One_Sec 0024                          _setup_day 0053  
                DS1621_Init@Device 0016                  ___wmul@multiplier 0011  
                      ??_i2cLowSda 0011                        ??_i2cLowScl 0011  
                       printf@flag 0035                         printf@prec 0032  
                        main@found 0082                          main@tempC 0083  
                        main@tempF 0081                         ?_init_UART 0001  
                      _INTCON2bits 000FF1                          copy_data0 1A12  
                         _Nec_code 0039                        ??_OpenUSART 0013  
                     ?_DS1621_Init 0001                   __size_of_Do_Init 0034  
                  OpenUSART@config 0013                       _Time_Elapsed 003D  
                 __size_of_i2cNack 000A                       _Wait_One_Sec 1A84  
                         __Hrparam 0000                           __Lrparam 0000  
                 __size_of___awdiv 0096                   __size_of___lwdiv 005C  
                 __size_of___lwmod 004C                       ?_I2C_ReStart 0001  
                 __size_of_isdigit 0022                    ___lwdiv@divisor 0013  
                  ___lwdiv@counter 0015                           __ptext10 1B66  
                         __ptext11 174E                           __ptext20 19B6  
                         __ptext12 1B22                           __ptext21 1978  
                         __ptext13 1BE8                           __ptext30 1C16  
                         __ptext22 1B7A                           __ptext14 1AEA  
                         __ptext31 1BD0                           __ptext23 1B8C  
                         __ptext15 1ACA                           __ptext32 1BB0  
                         __ptext24 1930                           __ptext16 1B08  
                         __ptext25 1BF2                           __ptext17 1C06  
                         __ptext34 1BDC                           __ptext26 1B9E  
                         __ptext18 17BE                           __ptext35 13C8  
                         __ptext27 1B50                           __ptext19 1824  
                         __ptext36 1C1E                           __ptext28 1BFC  
                         __ptext29 1C0E           __end_of_DS1621_Read_Temp 19F2  
                 ?_Activate_Buzzer 0001                      __size_of_main 0114  
                        printf@idx 002F                          printf@val 0033  
         __end_of_DS3231_Read_Time 1888                         _INTCONbits 000FF2  
                   OpenUSART@spbrg 0011                        ??_init_UART 0014  
                         isdigit@c 0013                           intlevel2 0000  
                 ___lwmod@dividend 0018                           printf@ap 0030  
                       _TIMER1_isr 1BDC                    ___lwmod@divisor 001A  
            I2C_Write_Cmd_Only@Cmd 0013                    ___lwmod@counter 001C  
                     _setup_minute 0055                       _setup_second 0057  
                      _setup_month 0056          __size_of_force_nec_state0 0008  
__size_of_I2C_Write_Cmd_Write_Data 0020               __size_of_DS1621_Init 001E  
        ?_I2C_Write_Cmd_Write_Data 0013  
